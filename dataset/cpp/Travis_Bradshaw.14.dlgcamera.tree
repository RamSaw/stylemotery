>7	FunctionDef	va (char * format)
>8	ParameterList	char * format
>9	Parameter	 
>10	Identifier	format
>11	ParameterType	char *
>12	ReturnType	char *
>13	CompoundStatement	 
>14	ReturnStatement	 
>15	Identifier	buf
>16	ExpressionStatement	 
>17	CallExpression	va_end ( argptr )
>18	ArgumentList	argptr
>19	Argument	argptr
>20	Identifier	argptr
>21	Callee	va_end
>22	Identifier	va_end
>23	ExpressionStatement	 
>24	CallExpression	vsprintf ( buf , format , argptr )
>25	ArgumentList	buf
>26	Argument	argptr
>27	Identifier	argptr
>28	Argument	format
>29	Identifier	format
>30	Argument	buf
>31	Identifier	buf
>32	Callee	vsprintf
>33	Identifier	vsprintf
>34	ExpressionStatement	 
>35	CallExpression	va_start ( argptr , format )
>36	ArgumentList	argptr
>37	Argument	format
>38	Identifier	format
>39	Argument	argptr
>40	Identifier	argptr
>41	Callee	va_start
>42	Identifier	va_start
>43	ExpressionStatement	 
>44	IncDecOp	index ++
>45	IncDec	++
>46	Identifier	index
>47	ExpressionStatement	 
>48	AssignmentExpr	buf = string [ index & 1 ]
>49	ArrayIndexing	string [ index & 1 ]
>50	BitAndExpression	index & 1
>51	PrimaryExpression	1
>52	Identifier	index
>53	Identifier	string
>54	Identifier	buf
>55	IdentifierDeclStatement	 
>56	IdentifierDecl	* buf
>57	Identifier	buf
>58	IdentifierDeclType	char *
>59	IdentifierDeclStatement	 
>60	IdentifierDecl	index = 0
>61	AssignmentExpr	index = 0
>62	PrimaryExpression	0
>63	Identifier	index
>64	Identifier	index
>65	IdentifierDeclType	int
>66	Statement	 
>67	ExpressionStatement	 
>68	ArrayIndexing	string [ 2 ] [ 32000 ]
>69	PrimaryExpression	32000
>70	ArrayIndexing	string [ 2 ]
>71	PrimaryExpression	2
>72	Identifier	string
>73	Statement	 
>74	Statement	 
>75	IdentifierDeclStatement	 
>76	IdentifierDecl	argptr
>77	Identifier	argptr
>78	IdentifierDeclType	va_list
>89	FunctionDef	showCameraInspector ()
>90	ParameterList	 
>91	ReturnType	void
>92	CompoundStatement	 
>93	ExpressionStatement	 
>94	CallExpression	g_dlgCamera . setupFromCamera ( )
>95	ArgumentList	 
>96	Callee	g_dlgCamera . setupFromCamera
>97	MemberAccess	g_dlgCamera . setupFromCamera
>98	Identifier	setupFromCamera
>99	Identifier	g_dlgCamera
>100	ExpressionStatement	 
>101	CallExpression	g_dlgCamera . ShowWindow ( SW_SHOW )
>102	ArgumentList	SW_SHOW
>103	Argument	SW_SHOW
>104	Identifier	SW_SHOW
>105	Callee	g_dlgCamera . ShowWindow
>106	MemberAccess	g_dlgCamera . ShowWindow
>107	Identifier	ShowWindow
>108	Identifier	g_dlgCamera
>109	IfStatement	if ( g_dlgCamera . GetSafeHwnd ( ) == NULL )
>110	CompoundStatement	 
>111	ExpressionStatement	 
>112	CallExpression	Sys_UpdateWindows ( W_ALL )
>113	ArgumentList	W_ALL
>114	Argument	W_ALL
>115	Identifier	W_ALL
>116	Callee	Sys_UpdateWindows
>117	Identifier	Sys_UpdateWindows
>118	IfStatement	if ( LoadRegistryInfo ( \"Radiant
>119	CompoundStatement	 
>120	ExpressionStatement	 
>121	CallExpression	g_dlgCamera . SetWindowPos ( NULL , rct . left , rct . top , 0 , 0 , SWP_NOSIZE | SWP_SHOWWINDOW )
>122	ArgumentList	NULL
>123	Argument	SWP_NOSIZE | SWP_SHOWWINDOW
>124	InclusiveOrExpression	SWP_NOSIZE | SWP_SHOWWINDOW
>125	Identifier	SWP_SHOWWINDOW
>126	Identifier	SWP_NOSIZE
>127	Argument	0
>128	PrimaryExpression	0
>129	Argument	0
>130	PrimaryExpression	0
>131	Argument	rct . top
>132	MemberAccess	rct . top
>133	Identifier	top
>134	Identifier	rct
>135	Argument	rct . left
>136	MemberAccess	rct . left
>137	Identifier	left
>138	Identifier	rct
>139	Argument	NULL
>140	Identifier	NULL
>141	Callee	g_dlgCamera . SetWindowPos
>142	MemberAccess	g_dlgCamera . SetWindowPos
>143	Identifier	SetWindowPos
>144	Identifier	g_dlgCamera
>145	Condition	 
>146	CallExpression	LoadRegistryInfo ( \"Radiant
>147	ArgumentList	\"Radiant
>148	Argument	& lSize
>149	UnaryOp	& lSize
>150	Identifier	lSize
>151	UnaryOperator	&
>152	Argument	& rct
>153	UnaryOp	& rct
>154	Identifier	rct
>155	UnaryOperator	&
>156	Argument	\"Radiant
>157	PrimaryExpression	\"Radiant
>158	Callee	LoadRegistryInfo
>159	Identifier	LoadRegistryInfo
>160	IdentifierDeclStatement	 
>161	IdentifierDecl	lSize = sizeof ( rct )
>162	AssignmentExpr	lSize = sizeof ( rct )
>163	SizeofExpr	sizeof ( rct )
>164	SizeofOperand	rct
>165	Sizeof	sizeof
>166	Identifier	lSize
>167	Identifier	lSize
>168	IdentifierDeclType	LONG
>169	IdentifierDeclStatement	 
>170	IdentifierDecl	rct
>171	Identifier	rct
>172	IdentifierDeclType	CRect
>173	ExpressionStatement	 
>174	CallExpression	g_dlgCamera . Create ( IDD_DLG_CAMERA )
>175	ArgumentList	IDD_DLG_CAMERA
>176	Argument	IDD_DLG_CAMERA
>177	Identifier	IDD_DLG_CAMERA
>178	Callee	g_dlgCamera . Create
>179	MemberAccess	g_dlgCamera . Create
>180	Identifier	Create
>181	Identifier	g_dlgCamera
>182	Condition	 
>183	EqualityExpression	g_dlgCamera . GetSafeHwnd ( ) == NULL
>184	Identifier	NULL
>185	CallExpression	g_dlgCamera . GetSafeHwnd ( )
>186	ArgumentList	 
>187	Callee	g_dlgCamera . GetSafeHwnd
>188	MemberAccess	g_dlgCamera . GetSafeHwnd
>189	Identifier	GetSafeHwnd
>190	Identifier	g_dlgCamera
>209	FunctionDef	CDlgCamera 
>210	ParameterList	CWnd * pParent
>211	Parameter	 
>212	Identifier	pParent
>213	ParameterType	CWnd *
>214	CompoundStatement	 
>215	ExpressionStatement	 
>216	AssignmentExpr	m_editPoints = 0
>217	PrimaryExpression	0
>218	Identifier	m_editPoints
>219	ExpressionStatement	 
>220	AssignmentExpr	m_strType = _T ( \"\" )
>221	CallExpression	_T ( \"\" )
>222	ArgumentList	\"\"
>223	Argument	\"\"
>224	PrimaryExpression	\"\"
>225	Callee	_T
>226	Identifier	_T
>227	Identifier	m_strType
>228	ExpressionStatement	 
>229	AssignmentExpr	m_currentSegment = 0
>230	PrimaryExpression	0
>231	Identifier	m_currentSegment
>232	ExpressionStatement	 
>233	AssignmentExpr	m_numSegments = 0
>234	PrimaryExpression	0
>235	Identifier	m_numSegments
>236	ExpressionStatement	 
>237	AssignmentExpr	m_trackCamera = TRUE
>238	Identifier	TRUE
>239	Identifier	m_trackCamera
>240	ExpressionStatement	 
>241	AssignmentExpr	m_fSeconds = 0.0f
>242	PrimaryExpression	0.0f
>243	Identifier	m_fSeconds
>244	ExpressionStatement	 
>245	AssignmentExpr	m_strName = _T ( \"\" )
>246	CallExpression	_T ( \"\" )
>247	ArgumentList	\"\"
>248	Argument	\"\"
>249	PrimaryExpression	\"\"
>250	Callee	_T
>251	Identifier	_T
>252	Identifier	m_strName
>266	FunctionDef	CDlgCamera 
>267	ParameterList	CDataExchange * pDX
>268	Parameter	 
>269	Identifier	pDX
>270	ParameterType	CDataExchange *
>271	ReturnType	void
>272	CompoundStatement	 
>273	ExpressionStatement	 
>274	CallExpression	DDX_Radio ( pDX , IDC_RADIO_EDITPOINTS , m_editPoints )
>275	ArgumentList	pDX
>276	Argument	m_editPoints
>277	Identifier	m_editPoints
>278	Argument	IDC_RADIO_EDITPOINTS
>279	Identifier	IDC_RADIO_EDITPOINTS
>280	Argument	pDX
>281	Identifier	pDX
>282	Callee	DDX_Radio
>283	Identifier	DDX_Radio
>284	ExpressionStatement	 
>285	CallExpression	DDX_Text ( pDX , IDC_EDIT_TYPE , m_strType )
>286	ArgumentList	pDX
>287	Argument	m_strType
>288	Identifier	m_strType
>289	Argument	IDC_EDIT_TYPE
>290	Identifier	IDC_EDIT_TYPE
>291	Argument	pDX
>292	Identifier	pDX
>293	Callee	DDX_Text
>294	Identifier	DDX_Text
>295	ExpressionStatement	 
>296	CallExpression	DDX_Text ( pDX , IDC_EDIT_SEGMENT , m_currentSegment )
>297	ArgumentList	pDX
>298	Argument	m_currentSegment
>299	Identifier	m_currentSegment
>300	Argument	IDC_EDIT_SEGMENT
>301	Identifier	IDC_EDIT_SEGMENT
>302	Argument	pDX
>303	Identifier	pDX
>304	Callee	DDX_Text
>305	Identifier	DDX_Text
>306	ExpressionStatement	 
>307	CallExpression	DDX_Text ( pDX , IDC_EDIT_TOTALSEGMENTS , m_numSegments )
>308	ArgumentList	pDX
>309	Argument	m_numSegments
>310	Identifier	m_numSegments
>311	Argument	IDC_EDIT_TOTALSEGMENTS
>312	Identifier	IDC_EDIT_TOTALSEGMENTS
>313	Argument	pDX
>314	Identifier	pDX
>315	Callee	DDX_Text
>316	Identifier	DDX_Text
>317	ExpressionStatement	 
>318	CallExpression	DDX_Check ( pDX , IDC_CHECK_TRACKCAMERA , m_trackCamera )
>319	ArgumentList	pDX
>320	Argument	m_trackCamera
>321	Identifier	m_trackCamera
>322	Argument	IDC_CHECK_TRACKCAMERA
>323	Identifier	IDC_CHECK_TRACKCAMERA
>324	Argument	pDX
>325	Identifier	pDX
>326	Callee	DDX_Check
>327	Identifier	DDX_Check
>328	ExpressionStatement	 
>329	CallExpression	DDX_Text ( pDX , IDC_EDIT_LENGTH , m_fSeconds )
>330	ArgumentList	pDX
>331	Argument	m_fSeconds
>332	Identifier	m_fSeconds
>333	Argument	IDC_EDIT_LENGTH
>334	Identifier	IDC_EDIT_LENGTH
>335	Argument	pDX
>336	Identifier	pDX
>337	Callee	DDX_Text
>338	Identifier	DDX_Text
>339	ExpressionStatement	 
>340	CallExpression	DDX_Text ( pDX , IDC_EDIT_CAM_NAME , m_strName )
>341	ArgumentList	pDX
>342	Argument	m_strName
>343	Identifier	m_strName
>344	Argument	IDC_EDIT_CAM_NAME
>345	Identifier	IDC_EDIT_CAM_NAME
>346	Argument	pDX
>347	Identifier	pDX
>348	Callee	DDX_Text
>349	Identifier	DDX_Text
>350	ExpressionStatement	 
>351	CallExpression	DDX_Control ( pDX , IDC_COMBO_SPLINES , m_wndSplines )
>352	ArgumentList	pDX
>353	Argument	m_wndSplines
>354	Identifier	m_wndSplines
>355	Argument	IDC_COMBO_SPLINES
>356	Identifier	IDC_COMBO_SPLINES
>357	Argument	pDX
>358	Identifier	pDX
>359	Callee	DDX_Control
>360	Identifier	DDX_Control
>361	ExpressionStatement	 
>362	CallExpression	DDX_Control ( pDX , IDC_LIST_EVENTS , m_wndEvents )
>363	ArgumentList	pDX
>364	Argument	m_wndEvents
>365	Identifier	m_wndEvents
>366	Argument	IDC_LIST_EVENTS
>367	Identifier	IDC_LIST_EVENTS
>368	Argument	pDX
>369	Identifier	pDX
>370	Callee	DDX_Control
>371	Identifier	DDX_Control
>372	ExpressionStatement	 
>373	CallExpression	DDX_Control ( pDX , IDC_SCROLLBAR_SEGMENT , m_wndSegments )
>374	ArgumentList	pDX
>375	Argument	m_wndSegments
>376	Identifier	m_wndSegments
>377	Argument	IDC_SCROLLBAR_SEGMENT
>378	Identifier	IDC_SCROLLBAR_SEGMENT
>379	Argument	pDX
>380	Identifier	pDX
>381	Callee	DDX_Control
>382	Identifier	DDX_Control
>383	ExpressionStatement	 
>384	CallExpression	CDialog 
>385	ArgumentList	pDX
>386	Argument	pDX
>387	Identifier	pDX
>388	Callee	CDialog 
>389	Identifier	CDialog 
>414	FunctionDef	CDlgCamera 
>415	ParameterList	 
>416	ReturnType	void
>417	CompoundStatement	 
>418	IfStatement	if ( dlg . DoModal ( ) == IDOK )
>419	CompoundStatement	 
>420	ExpressionStatement	 
>421	CallExpression	setupFromCamera ( )
>422	ArgumentList	 
>423	Callee	setupFromCamera
>424	Identifier	setupFromCamera
>425	ExpressionStatement	 
>426	CallExpression	g_splineList -> addEvent ( static_cast < idCameraEvent 
>427	ArgumentList	static_cast < idCameraEvent 
>428	Argument	n
>429	Identifier	n
>430	Argument	dlg . m_strParm
>431	MemberAccess	dlg . m_strParm
>432	Identifier	m_strParm
>433	Identifier	dlg
>434	Argument	static_cast < idCameraEvent 
>435	RelationalExpression	static_cast < idCameraEvent 
>436	RelationalExpression	idCameraEvent 
>437	AdditiveExpression	dlg . m_event + 1
>438	PrimaryExpression	1
>439	MemberAccess	dlg . m_event
>440	Identifier	m_event
>441	Identifier	dlg
>442	Identifier	idCameraEvent 
>443	Identifier	static_cast
>444	Callee	g_splineList -> addEvent
>445	PtrMemberAccess	g_splineList -> addEvent
>446	Identifier	addEvent
>447	Identifier	g_splineList
>448	IdentifierDeclStatement	 
>449	IdentifierDecl	n = m_wndSegments . GetScrollPos ( ) / 4 * 1000
>450	AssignmentExpr	n = m_wndSegments . GetScrollPos ( ) / 4 * 1000
>451	MultiplicativeExpression	m_wndSegments . GetScrollPos ( ) / 4 * 1000
>452	MultiplicativeExpression	4 * 1000
>453	PrimaryExpression	1000
>454	PrimaryExpression	4
>455	CallExpression	m_wndSegments . GetScrollPos ( )
>456	ArgumentList	 
>457	Callee	m_wndSegments . GetScrollPos
>458	MemberAccess	m_wndSegments . GetScrollPos
>459	Identifier	GetScrollPos
>460	Identifier	m_wndSegments
>461	Identifier	n
>462	Identifier	n
>463	IdentifierDeclType	long
>464	Condition	 
>465	EqualityExpression	dlg . DoModal ( ) == IDOK
>466	Identifier	IDOK
>467	CallExpression	dlg . DoModal ( )
>468	ArgumentList	 
>469	Callee	dlg . DoModal
>470	MemberAccess	dlg . DoModal
>471	Identifier	DoModal
>472	Identifier	dlg
>473	IdentifierDeclStatement	 
>474	IdentifierDecl	dlg
>475	Identifier	dlg
>476	IdentifierDeclType	CDlgEvent
>491	FunctionDef	CDlgCamera 
>492	ParameterList	 
>493	ReturnType	void
>494	CompoundStatement	 
>495	IfStatement	if ( dlg . DoModal ( ) == IDOK )
>496	CompoundStatement	 
>497	ExpressionStatement	 
>498	CallExpression	OnRadioAddPoints ( )
>499	ArgumentList	 
>500	Callee	OnRadioAddPoints
>501	Identifier	OnRadioAddPoints
>502	ExpressionStatement	 
>503	CallExpression	OnSelchangeComboSplines ( )
>504	ArgumentList	 
>505	Callee	OnSelchangeComboSplines
>506	Identifier	OnSelchangeComboSplines
>507	ExpressionStatement	 
>508	CallExpression	m_wndSplines . SetCurSel ( g_splineList -> numTargets ( ) )
>509	ArgumentList	g_splineList -> numTargets ( )
>510	Argument	g_splineList -> numTargets ( )
>511	CallExpression	g_splineList -> numTargets ( )
>512	ArgumentList	 
>513	Callee	g_splineList -> numTargets
>514	PtrMemberAccess	g_splineList -> numTargets
>515	Identifier	numTargets
>516	Identifier	g_splineList
>517	Callee	m_wndSplines . SetCurSel
>518	MemberAccess	m_wndSplines . SetCurSel
>519	Identifier	SetCurSel
>520	Identifier	m_wndSplines
>521	ExpressionStatement	 
>522	CallExpression	setupFromCamera ( )
>523	ArgumentList	 
>524	Callee	setupFromCamera
>525	Identifier	setupFromCamera
>526	ExpressionStatement	 
>527	CallExpression	g_splineList -> addTarget ( dlg . m_strName , static_cast < idCameraPosition 
>528	ArgumentList	dlg . m_strName
>529	Argument	static_cast < idCameraPosition 
>530	RelationalExpression	static_cast < idCameraPosition 
>531	RelationalExpression	idCameraPosition 
>532	MemberAccess	dlg . m_nType
>533	Identifier	m_nType
>534	Identifier	dlg
>535	Identifier	idCameraPosition 
>536	Identifier	static_cast
>537	Argument	dlg . m_strName
>538	MemberAccess	dlg . m_strName
>539	Identifier	m_strName
>540	Identifier	dlg
>541	Callee	g_splineList -> addTarget
>542	PtrMemberAccess	g_splineList -> addTarget
>543	Identifier	addTarget
>544	Identifier	g_splineList
>545	Condition	 
>546	EqualityExpression	dlg . DoModal ( ) == IDOK
>547	Identifier	IDOK
>548	CallExpression	dlg . DoModal ( )
>549	ArgumentList	 
>550	Callee	dlg . DoModal
>551	MemberAccess	dlg . DoModal
>552	Identifier	DoModal
>553	Identifier	dlg
>554	IdentifierDeclStatement	 
>555	IdentifierDecl	dlg
>556	Identifier	dlg
>557	IdentifierDeclType	CCameraTargetDlg
>572	FunctionDef	CDlgCamera 
>573	ParameterList	 
>574	ReturnType	void
>575	CompoundStatement	 
>579	FunctionDef	CDlgCamera 
>580	ParameterList	 
>581	ReturnType	void
>582	CompoundStatement	 
>586	FunctionDef	CDlgCamera 
>587	ParameterList	 
>588	ReturnType	void
>589	CompoundStatement	 
>593	FunctionDef	CDlgCamera 
>594	ParameterList	 
>595	ReturnType	void
>596	CompoundStatement	 
>597	ExpressionStatement	 
>598	CallExpression	Sys_UpdateWindows ( W_ALL )
>599	ArgumentList	W_ALL
>600	Argument	W_ALL
>601	Identifier	W_ALL
>602	Callee	Sys_UpdateWindows
>603	Identifier	Sys_UpdateWindows
>604	ExpressionStatement	 
>605	CallExpression	m_wndSegments . SetScrollRange ( 0 , g_splineList -> getTotalTime ( ) * 4.0 )
>606	ArgumentList	0
>607	Argument	g_splineList -> getTotalTime ( ) * 4.0
>608	MultiplicativeExpression	g_splineList -> getTotalTime ( ) * 4.0
>609	PrimaryExpression	4.0
>610	CallExpression	g_splineList -> getTotalTime ( )
>611	ArgumentList	 
>612	Callee	g_splineList -> getTotalTime
>613	PtrMemberAccess	g_splineList -> getTotalTime
>614	Identifier	getTotalTime
>615	Identifier	g_splineList
>616	Argument	0
>617	PrimaryExpression	0
>618	Callee	m_wndSegments . SetScrollRange
>619	MemberAccess	m_wndSegments . SetScrollRange
>620	Identifier	SetScrollRange
>621	Identifier	m_wndSegments
>622	IfStatement	if ( i > 0 )
>623	ElseStatement	else
>624	CompoundStatement	 
>625	ExpressionStatement	 
>626	AssignmentExpr	g_qeglobals . selectObject = g_splineList -> getPositionObj ( )
>627	CallExpression	g_splineList -> getPositionObj ( )
>628	ArgumentList	 
>629	Callee	g_splineList -> getPositionObj
>630	PtrMemberAccess	g_splineList -> getPositionObj
>631	Identifier	getPositionObj
>632	Identifier	g_splineList
>633	MemberAccess	g_qeglobals . selectObject
>634	Identifier	selectObject
>635	Identifier	g_qeglobals
>636	ExpressionStatement	 
>637	CallExpression	g_splineList -> startEdit ( true )
>638	ArgumentList	true
>639	Argument	true
>640	Identifier	true
>641	Callee	g_splineList -> startEdit
>642	PtrMemberAccess	g_splineList -> startEdit
>643	Identifier	startEdit
>644	Identifier	g_splineList
>645	CompoundStatement	 
>646	ExpressionStatement	 
>647	CallExpression	g_splineList -> startEdit ( false )
>648	ArgumentList	false
>649	Argument	false
>650	Identifier	false
>651	Callee	g_splineList -> startEdit
>652	PtrMemberAccess	g_splineList -> startEdit
>653	Identifier	startEdit
>654	Identifier	g_splineList
>655	ExpressionStatement	 
>656	AssignmentExpr	g_qeglobals . selectObject = g_splineList -> getActiveTarget ( i - 1 )
>657	CallExpression	g_splineList -> getActiveTarget ( i - 1 )
>658	ArgumentList	i - 1
>659	Argument	i - 1
>660	AdditiveExpression	i - 1
>661	PrimaryExpression	1
>662	Identifier	i
>663	Callee	g_splineList -> getActiveTarget
>664	PtrMemberAccess	g_splineList -> getActiveTarget
>665	Identifier	getActiveTarget
>666	Identifier	g_splineList
>667	MemberAccess	g_qeglobals . selectObject
>668	Identifier	selectObject
>669	Identifier	g_qeglobals
>670	ExpressionStatement	 
>671	CallExpression	g_splineList -> setActiveTarget ( i - 1 )
>672	ArgumentList	i - 1
>673	Argument	i - 1
>674	AdditiveExpression	i - 1
>675	PrimaryExpression	1
>676	Identifier	i
>677	Callee	g_splineList -> setActiveTarget
>678	PtrMemberAccess	g_splineList -> setActiveTarget
>679	Identifier	setActiveTarget
>680	Identifier	g_splineList
>681	Condition	 
>682	RelationalExpression	i > 0
>683	PrimaryExpression	0
>684	Identifier	i
>685	IdentifierDeclStatement	 
>686	IdentifierDecl	i = m_wndSplines . GetCurSel ( )
>687	AssignmentExpr	i = m_wndSplines . GetCurSel ( )
>688	CallExpression	m_wndSplines . GetCurSel ( )
>689	ArgumentList	 
>690	Callee	m_wndSplines . GetCurSel
>691	MemberAccess	m_wndSplines . GetCurSel
>692	Identifier	GetCurSel
>693	Identifier	m_wndSplines
>694	Identifier	i
>695	Identifier	i
>696	IdentifierDeclType	int
>697	ExpressionStatement	 
>698	AssignmentExpr	g_qeglobals . d_num_move_points = 0
>699	PrimaryExpression	0
>700	MemberAccess	g_qeglobals . d_num_move_points
>701	Identifier	d_num_move_points
>702	Identifier	g_qeglobals
>703	ExpressionStatement	 
>704	AssignmentExpr	g_qeglobals . d_numpoints = 0
>705	PrimaryExpression	0
>706	MemberAccess	g_qeglobals . d_numpoints
>707	Identifier	d_numpoints
>708	Identifier	g_qeglobals
>709	ExpressionStatement	 
>710	AssignmentExpr	g_qeglobals . d_select_mode = ( m_editPoints == 0 ) ? sel_editpoint 
>711	ConditionalExpression	( m_editPoints == 0 ) ? sel_editpoint 
>712	Identifier	sel_addpoint
>713	Identifier	sel_editpoint
>714	Condition	m_editPoints == 0
>715	EqualityExpression	m_editPoints == 0
>716	PrimaryExpression	0
>717	Identifier	m_editPoints
>718	MemberAccess	g_qeglobals . d_select_mode
>719	Identifier	d_select_mode
>720	Identifier	g_qeglobals
>721	ExpressionStatement	 
>722	CallExpression	UpdateData ( TRUE )
>723	ArgumentList	TRUE
>724	Argument	TRUE
>725	Identifier	TRUE
>726	Callee	UpdateData
>727	Identifier	UpdateData
>752	FunctionDef	CDlgCamera 
>753	ParameterList	 
>754	ReturnType	void
>755	CompoundStatement	 
>756	IdentifierDeclStatement	 
>757	IdentifierDecl	sel = m_wndEvents . GetCurSel ( )
>758	AssignmentExpr	sel = m_wndEvents . GetCurSel ( )
>759	CallExpression	m_wndEvents . GetCurSel ( )
>760	ArgumentList	 
>761	Callee	m_wndEvents . GetCurSel
>762	MemberAccess	m_wndEvents . GetCurSel
>763	Identifier	GetCurSel
>764	Identifier	m_wndEvents
>765	Identifier	sel
>766	Identifier	sel
>767	IdentifierDeclType	int
>774	FunctionDef	CDlgCamera 
>775	ParameterList	 
>776	ReturnType	void
>777	CompoundStatement	 
>781	FunctionDef	CDlgCamera 
>782	ParameterList	 
>783	ReturnType	void
>784	CompoundStatement	 
>785	ExpressionStatement	 
>786	CallExpression	UpdateData ( FALSE )
>787	ArgumentList	FALSE
>788	Argument	FALSE
>789	Identifier	FALSE
>790	Callee	UpdateData
>791	Identifier	UpdateData
>792	ExpressionStatement	 
>793	CallExpression	g_splineList -> startEdit ( true )
>794	ArgumentList	true
>795	Argument	true
>796	Identifier	true
>797	Callee	g_splineList -> startEdit
>798	PtrMemberAccess	g_splineList -> startEdit
>799	Identifier	startEdit
>800	Identifier	g_splineList
>801	IfStatement	if ( m_wndSplines . GetSafeHwnd ( ) )
>802	CompoundStatement	 
>803	ForStatement	for ( i = 0 ; i < g_splineList -> numEvents ( ) ; i ++ )
>804	CompoundStatement	 
>805	ExpressionStatement	 
>806	CallExpression	m_wndEvents . AddString ( str )
>807	ArgumentList	str
>808	Argument	str
>809	Identifier	str
>810	Callee	m_wndEvents . AddString
>811	MemberAccess	m_wndEvents . AddString
>812	Identifier	AddString
>813	Identifier	m_wndEvents
>814	ExpressionStatement	 
>815	AssignmentExpr	str = va ( \"%s\t%s\" , g_splineList -> getEvent ( i ) -> typeStr ( ) , g_splineList -> getEvent ( i ) \
>816	CallExpression	va ( \"%s\t%s\" , g_splineList -> getEvent ( i ) -> typeStr ( ) , g_splineList -> getEvent ( i ) -> getParam ( ) )
>817	ArgumentList	\"%s\t%s\"
>818	Argument	g_splineList -> getEvent ( i ) -> getParam ( )
>819	CallExpression	g_splineList -> getEvent ( i ) -> getParam ( )
>820	ArgumentList	 
>821	Callee	g_splineList -> getEvent ( i ) -> getParam
>822	PtrMemberAccess	g_splineList -> getEvent ( i ) -> getParam
>823	Identifier	getParam
>824	CallExpression	g_splineList -> getEvent ( i )
>825	ArgumentList	i
>826	Argument	i
>827	Identifier	i
>828	Callee	g_splineList -> getEvent
>829	PtrMemberAccess	g_splineList -> getEvent
>830	Identifier	getEvent
>831	Identifier	g_splineList
>832	Argument	g_splineList -> getEvent ( i ) -> typeStr ( )
>833	CallExpression	g_splineList -> getEvent ( i ) -> typeStr ( )
>834	ArgumentList	 
>835	Callee	g_splineList -> getEvent ( i ) -> typeStr
>836	PtrMemberAccess	g_splineList -> getEvent ( i ) -> typeStr
>837	Identifier	typeStr
>838	CallExpression	g_splineList -> getEvent ( i )
>839	ArgumentList	i
>840	Argument	i
>841	Identifier	i
>842	Callee	g_splineList -> getEvent
>843	PtrMemberAccess	g_splineList -> getEvent
>844	Identifier	getEvent
>845	Identifier	g_splineList
>846	Argument	\"%s\t%s\"
>847	PrimaryExpression	\"%s\t%s\"
>848	Callee	va
>849	Identifier	va
>850	Identifier	str
>851	IncDecOp	 
>852	IncDec	++
>853	Identifier	i
>854	Condition	 
>855	RelationalExpression	i < g_splineList -> numEvents ( )
>856	CallExpression	g_splineList -> numEvents ( )
>857	ArgumentList	 
>858	Callee	g_splineList -> numEvents
>859	PtrMemberAccess	g_splineList -> numEvents
>860	Identifier	numEvents
>861	Identifier	g_splineList
>862	Identifier	i
>863	ForInit	 
>864	AssignmentExpr	i = 0
>865	PrimaryExpression	0
>866	Identifier	i
>867	ExpressionStatement	 
>868	CallExpression	m_wndEvents . ResetContent ( )
>869	ArgumentList	 
>870	Callee	m_wndEvents . ResetContent
>871	MemberAccess	m_wndEvents . ResetContent
>872	Identifier	ResetContent
>873	Identifier	m_wndEvents
>874	ExpressionStatement	 
>875	CallExpression	m_wndSegments . SetScrollRange ( 0 , g_splineList -> getTotalTime ( ) * 4.0 )
>876	ArgumentList	0
>877	Argument	g_splineList -> getTotalTime ( ) * 4.0
>878	MultiplicativeExpression	g_splineList -> getTotalTime ( ) * 4.0
>879	PrimaryExpression	4.0
>880	CallExpression	g_splineList -> getTotalTime ( )
>881	ArgumentList	 
>882	Callee	g_splineList -> getTotalTime
>883	PtrMemberAccess	g_splineList -> getTotalTime
>884	Identifier	getTotalTime
>885	Identifier	g_splineList
>886	Argument	0
>887	PrimaryExpression	0
>888	Callee	m_wndSegments . SetScrollRange
>889	MemberAccess	m_wndSegments . SetScrollRange
>890	Identifier	SetScrollRange
>891	Identifier	m_wndSegments
>892	ExpressionStatement	 
>893	AssignmentExpr	m_fSeconds = g_splineList -> getBaseTime ( )
>894	CallExpression	g_splineList -> getBaseTime ( )
>895	ArgumentList	 
>896	Callee	g_splineList -> getBaseTime
>897	PtrMemberAccess	g_splineList -> getBaseTime
>898	Identifier	getBaseTime
>899	Identifier	g_splineList
>900	Identifier	m_fSeconds
>901	ExpressionStatement	 
>902	CallExpression	m_wndSplines . SetCurSel ( 0 )
>903	ArgumentList	0
>904	Argument	0
>905	PrimaryExpression	0
>906	Callee	m_wndSplines . SetCurSel
>907	MemberAccess	m_wndSplines . SetCurSel
>908	Identifier	SetCurSel
>909	Identifier	m_wndSplines
>910	ForStatement	for ( i = 0 ; i < g_splineList -> numTargets ( ) ; i ++ )
>911	CompoundStatement	 
>912	ExpressionStatement	 
>913	CallExpression	m_wndSplines . AddString ( g_splineList -> getActiveTarget ( i ) -> getName ( ) )
>914	ArgumentList	g_splineList -> getActiveTarget ( i ) -> getName ( )
>915	Argument	g_splineList -> getActiveTarget ( i ) -> getName ( )
>916	CallExpression	g_splineList -> getActiveTarget ( i ) -> getName ( )
>917	ArgumentList	 
>918	Callee	g_splineList -> getActiveTarget ( i ) -> getName
>919	PtrMemberAccess	g_splineList -> getActiveTarget ( i ) -> getName
>920	Identifier	getName
>921	CallExpression	g_splineList -> getActiveTarget ( i )
>922	ArgumentList	i
>923	Argument	i
>924	Identifier	i
>925	Callee	g_splineList -> getActiveTarget
>926	PtrMemberAccess	g_splineList -> getActiveTarget
>927	Identifier	getActiveTarget
>928	Identifier	g_splineList
>929	Callee	m_wndSplines . AddString
>930	MemberAccess	m_wndSplines . AddString
>931	Identifier	AddString
>932	Identifier	m_wndSplines
>933	IncDecOp	 
>934	IncDec	++
>935	Identifier	i
>936	Condition	 
>937	RelationalExpression	i < g_splineList -> numTargets ( )
>938	CallExpression	g_splineList -> numTargets ( )
>939	ArgumentList	 
>940	Callee	g_splineList -> numTargets
>941	PtrMemberAccess	g_splineList -> numTargets
>942	Identifier	numTargets
>943	Identifier	g_splineList
>944	Identifier	i
>945	ForInit	 
>946	AssignmentExpr	i = 0
>947	PrimaryExpression	0
>948	Identifier	i
>949	ExpressionStatement	 
>950	CallExpression	m_wndSplines . AddString ( \"Path\" )
>951	ArgumentList	\"Path\"
>952	Argument	\"Path\"
>953	PrimaryExpression	\"Path\"
>954	Callee	m_wndSplines . AddString
>955	MemberAccess	m_wndSplines . AddString
>956	Identifier	AddString
>957	Identifier	m_wndSplines
>958	ExpressionStatement	 
>959	CallExpression	m_wndSplines . ResetContent ( )
>960	ArgumentList	 
>961	Callee	m_wndSplines . ResetContent
>962	MemberAccess	m_wndSplines . ResetContent
>963	Identifier	ResetContent
>964	Identifier	m_wndSplines
>965	ExpressionStatement	 
>966	AssignmentExpr	m_strType = g_splineList -> getPositionObj ( ) -> typeStr ( )
>967	CallExpression	g_splineList -> getPositionObj ( ) -> typeStr ( )
>968	ArgumentList	 
>969	Callee	g_splineList -> getPositionObj ( ) -> typeStr
>970	PtrMemberAccess	g_splineList -> getPositionObj ( ) -> typeStr
>971	Identifier	typeStr
>972	CallExpression	g_splineList -> getPositionObj ( )
>973	ArgumentList	 
>974	Callee	g_splineList -> getPositionObj
>975	PtrMemberAccess	g_splineList -> getPositionObj
>976	Identifier	getPositionObj
>977	Identifier	g_splineList
>978	Identifier	m_strType
>979	ExpressionStatement	 
>980	AssignmentExpr	m_strName = g_splineList -> getName ( )
>981	CallExpression	g_splineList -> getName ( )
>982	ArgumentList	 
>983	Callee	g_splineList -> getName
>984	PtrMemberAccess	g_splineList -> getName
>985	Identifier	getName
>986	Identifier	g_splineList
>987	Identifier	m_strName
>988	IdentifierDeclStatement	 
>989	IdentifierDecl	str
>990	Identifier	str
>991	IdentifierDeclType	idStr
>992	IdentifierDeclStatement	 
>993	IdentifierDecl	i
>994	Identifier	i
>995	IdentifierDeclType	int
>996	Condition	 
>997	CallExpression	m_wndSplines . GetSafeHwnd ( )
>998	ArgumentList	 
>999	Callee	m_wndSplines . GetSafeHwnd
>1000	MemberAccess	m_wndSplines . GetSafeHwnd
>1001	Identifier	GetSafeHwnd
>1002	Identifier	m_wndSplines
>1036	FunctionDef	CDlgCamera 
>1037	ParameterList	 
>1038	ReturnType	BOOL
>1039	CompoundStatement	 
>1040	ReturnStatement	 
>1041	Identifier	TRUE
>1042	ExpressionStatement	 
>1043	CallExpression	setupFromCamera ( )
>1044	ArgumentList	 
>1045	Callee	setupFromCamera
>1046	Identifier	setupFromCamera
>1047	ExpressionStatement	 
>1048	CallExpression	CDialog 
>1049	ArgumentList	 
>1050	Callee	CDialog 
>1051	Identifier	CDialog 
>1056	FunctionDef	CDlgCamera 
>1057	ParameterList	 
>1058	ReturnType	void
>1059	CompoundStatement	 
>1060	ExpressionStatement	 
>1061	CallExpression	Sys_UpdateWindows ( W_ALL )
>1062	ArgumentList	W_ALL
>1063	Argument	W_ALL
>1064	Identifier	W_ALL
>1065	Callee	Sys_UpdateWindows
>1066	Identifier	Sys_UpdateWindows
>1067	ExpressionStatement	 
>1068	CallExpression	g_splineList -> stopEdit ( )
>1069	ArgumentList	 
>1070	Callee	g_splineList -> stopEdit
>1071	PtrMemberAccess	g_splineList -> stopEdit
>1072	Identifier	stopEdit
>1073	Identifier	g_splineList
>1074	ExpressionStatement	 
>1075	CallExpression	clearSelection ( )
>1076	ArgumentList	 
>1077	Callee	clearSelection
>1078	Identifier	clearSelection
>1079	ExpressionStatement	 
>1080	CallExpression	g_dlgCamera . ShowWindow ( SW_HIDE )
>1081	ArgumentList	SW_HIDE
>1082	Argument	SW_HIDE
>1083	Identifier	SW_HIDE
>1084	Callee	g_dlgCamera . ShowWindow
>1085	MemberAccess	g_dlgCamera . ShowWindow
>1086	Identifier	ShowWindow
>1087	Identifier	g_dlgCamera
>1095	FunctionDef	CDlgCamera 
>1096	ParameterList	 
>1097	ReturnType	void
>1098	CompoundStatement	 
>1099	ExpressionStatement	 
>1100	CallExpression	Sys_UpdateWindows ( W_ALL )
>1101	ArgumentList	W_ALL
>1102	Argument	W_ALL
>1103	Identifier	W_ALL
>1104	Callee	Sys_UpdateWindows
>1105	Identifier	Sys_UpdateWindows
>1106	ExpressionStatement	 
>1107	CallExpression	CDialog 
>1108	ArgumentList	 
>1109	Callee	CDialog 
>1110	Identifier	CDialog 
>1111	IfStatement	if ( GetSafeHwnd ( ) )
>1112	CompoundStatement	 
>1113	ExpressionStatement	 
>1114	CallExpression	SaveRegistryInfo ( \"Radiant
>1115	ArgumentList	\"Radiant
>1116	Argument	sizeof ( rct )
>1117	SizeofExpr	sizeof ( rct )
>1118	SizeofOperand	rct
>1119	Sizeof	sizeof
>1120	Argument	& rct
>1121	UnaryOp	& rct
>1122	Identifier	rct
>1123	UnaryOperator	&
>1124	Argument	\"Radiant
>1125	PrimaryExpression	\"Radiant
>1126	Callee	SaveRegistryInfo
>1127	Identifier	SaveRegistryInfo
>1128	ExpressionStatement	 
>1129	CallExpression	GetWindowRect ( rct )
>1130	ArgumentList	rct
>1131	Argument	rct
>1132	Identifier	rct
>1133	Callee	GetWindowRect
>1134	Identifier	GetWindowRect
>1135	IdentifierDeclStatement	 
>1136	IdentifierDecl	rct
>1137	Identifier	rct
>1138	IdentifierDeclType	CRect
>1139	Condition	 
>1140	CallExpression	GetSafeHwnd ( )
>1141	ArgumentList	 
>1142	Callee	GetSafeHwnd
>1143	Identifier	GetSafeHwnd
>1151	FunctionDef	CDlgCamera 
>1152	ParameterList	 
>1153	ReturnType	void
>1154	CompoundStatement	 
>1155	ExpressionStatement	 
>1156	CallExpression	m_wndSegments . SetScrollRange ( 0 , g_splineList -> getTotalTime ( ) * 4.0 )
>1157	ArgumentList	0
>1158	Argument	g_splineList -> getTotalTime ( ) * 4.0
>1159	MultiplicativeExpression	g_splineList -> getTotalTime ( ) * 4.0
>1160	PrimaryExpression	4.0
>1161	CallExpression	g_splineList -> getTotalTime ( )
>1162	ArgumentList	 
>1163	Callee	g_splineList -> getTotalTime
>1164	PtrMemberAccess	g_splineList -> getTotalTime
>1165	Identifier	getTotalTime
>1166	Identifier	g_splineList
>1167	Argument	0
>1168	PrimaryExpression	0
>1169	Callee	m_wndSegments . SetScrollRange
>1170	MemberAccess	m_wndSegments . SetScrollRange
>1171	Identifier	SetScrollRange
>1172	Identifier	m_wndSegments
>1173	ExpressionStatement	 
>1174	CallExpression	g_splineList -> buildCamera ( )
>1175	ArgumentList	 
>1176	Callee	g_splineList -> buildCamera
>1177	PtrMemberAccess	g_splineList -> buildCamera
>1178	Identifier	buildCamera
>1179	Identifier	g_splineList
>1180	ExpressionStatement	 
>1181	CallExpression	g_splineList -> setName ( m_strName )
>1182	ArgumentList	m_strName
>1183	Argument	m_strName
>1184	Identifier	m_strName
>1185	Callee	g_splineList -> setName
>1186	PtrMemberAccess	g_splineList -> setName
>1187	Identifier	setName
>1188	Identifier	g_splineList
>1189	ExpressionStatement	 
>1190	CallExpression	g_splineList -> setBaseTime ( m_fSeconds )
>1191	ArgumentList	m_fSeconds
>1192	Argument	m_fSeconds
>1193	Identifier	m_fSeconds
>1194	Callee	g_splineList -> setBaseTime
>1195	PtrMemberAccess	g_splineList -> setBaseTime
>1196	Identifier	setBaseTime
>1197	Identifier	g_splineList
>1198	ExpressionStatement	 
>1199	CallExpression	UpdateData ( TRUE )
>1200	ArgumentList	TRUE
>1201	Argument	TRUE
>1202	Identifier	TRUE
>1203	Callee	UpdateData
>1204	Identifier	UpdateData
>1215	FunctionDef	CDlgCamera 
>1216	ParameterList	UINT nSBCode , UINT nPos , CScrollBar * pScrollBar
>1217	Parameter	 
>1218	Identifier	pScrollBar
>1219	ParameterType	CScrollBar *
>1220	Parameter	 
>1221	Identifier	nPos
>1222	ParameterType	UINT
>1223	Parameter	 
>1224	Identifier	nSBCode
>1225	ParameterType	UINT
>1226	ReturnType	void
>1227	CompoundStatement	 
>1228	ExpressionStatement	 
>1229	CallExpression	Sys_UpdateWindows ( W_XY | W_CAMERA )
>1230	ArgumentList	W_XY | W_CAMERA
>1231	Argument	W_XY | W_CAMERA
>1232	InclusiveOrExpression	W_XY | W_CAMERA
>1233	Identifier	W_CAMERA
>1234	Identifier	W_XY
>1235	Callee	Sys_UpdateWindows
>1236	Identifier	Sys_UpdateWindows
>1237	ExpressionStatement	 
>1238	CallExpression	UpdateData ( FALSE )
>1239	ArgumentList	FALSE
>1240	Argument	FALSE
>1241	Identifier	FALSE
>1242	Callee	UpdateData
>1243	Identifier	UpdateData
>1244	IfStatement	if ( m_trackCamera )
>1245	CompoundStatement	 
>1246	ExpressionStatement	 
>1247	AssignmentExpr	g_pParentWnd -> GetCamera ( ) -> Camera ( ) . angles [ 0 ] = asin ( dir [ 2 ] ) * 180 / 3.14159
>1248	MultiplicativeExpression	asin ( dir [ 2 ] ) * 180 / 3.14159
>1249	MultiplicativeExpression	180 / 3.14159
>1250	PrimaryExpression	3.14159
>1251	PrimaryExpression	180
>1252	CallExpression	asin ( dir [ 2 ] )
>1253	ArgumentList	dir [ 2 ]
>1254	Argument	dir [ 2 ]
>1255	ArrayIndexing	dir [ 2 ]
>1256	PrimaryExpression	2
>1257	Identifier	dir
>1258	Callee	asin
>1259	Identifier	asin
>1260	ArrayIndexing	g_pParentWnd -> GetCamera ( ) -> Camera ( ) . angles [ 0 ]
>1261	PrimaryExpression	0
>1262	MemberAccess	g_pParentWnd -> GetCamera ( ) -> Camera ( ) . angles
>1263	Identifier	angles
>1264	CallExpression	g_pParentWnd -> GetCamera ( ) -> Camera ( )
>1265	ArgumentList	 
>1266	Callee	g_pParentWnd -> GetCamera ( ) -> Camera
>1267	PtrMemberAccess	g_pParentWnd -> GetCamera ( ) -> Camera
>1268	Identifier	Camera
>1269	CallExpression	g_pParentWnd -> GetCamera ( )
>1270	ArgumentList	 
>1271	Callee	g_pParentWnd -> GetCamera
>1272	PtrMemberAccess	g_pParentWnd -> GetCamera
>1273	Identifier	GetCamera
>1274	Identifier	g_pParentWnd
>1275	ExpressionStatement	 
>1276	AssignmentExpr	g_pParentWnd -> GetCamera ( ) -> Camera ( ) . angles [ 1 ] = atan2 ( dir [ 1 ] , dir [ 0 ] ) * 180 / \
>1277	MultiplicativeExpression	atan2 ( dir [ 1 ] , dir [ 0 ] ) * 180 / 3.14159
>1278	MultiplicativeExpression	180 / 3.14159
>1279	PrimaryExpression	3.14159
>1280	PrimaryExpression	180
>1281	CallExpression	atan2 ( dir [ 1 ] , dir [ 0 ] )
>1282	ArgumentList	dir [ 1 ]
>1283	Argument	dir [ 0 ]
>1284	ArrayIndexing	dir [ 0 ]
>1285	PrimaryExpression	0
>1286	Identifier	dir
>1287	Argument	dir [ 1 ]
>1288	ArrayIndexing	dir [ 1 ]
>1289	PrimaryExpression	1
>1290	Identifier	dir
>1291	Callee	atan2
>1292	Identifier	atan2
>1293	ArrayIndexing	g_pParentWnd -> GetCamera ( ) -> Camera ( ) . angles [ 1 ]
>1294	PrimaryExpression	1
>1295	MemberAccess	g_pParentWnd -> GetCamera ( ) -> Camera ( ) . angles
>1296	Identifier	angles
>1297	CallExpression	g_pParentWnd -> GetCamera ( ) -> Camera ( )
>1298	ArgumentList	 
>1299	Callee	g_pParentWnd -> GetCamera ( ) -> Camera
>1300	PtrMemberAccess	g_pParentWnd -> GetCamera ( ) -> Camera
>1301	Identifier	Camera
>1302	CallExpression	g_pParentWnd -> GetCamera ( )
>1303	ArgumentList	 
>1304	Callee	g_pParentWnd -> GetCamera
>1305	PtrMemberAccess	g_pParentWnd -> GetCamera
>1306	Identifier	GetCamera
>1307	Identifier	g_pParentWnd
>1308	ExpressionStatement	 
>1309	CallExpression	g_splineList -> getCameraInfo ( p , g_pParentWnd -> GetCamera ( ) -> Camera ( ) . origin , dir , & fov )
>1310	ArgumentList	p
>1311	Argument	& fov
>1312	UnaryOp	& fov
>1313	Identifier	fov
>1314	UnaryOperator	&
>1315	Argument	dir
>1316	Identifier	dir
>1317	Argument	g_pParentWnd -> GetCamera ( ) -> Camera ( ) . origin
>1318	MemberAccess	g_pParentWnd -> GetCamera ( ) -> Camera ( ) . origin
>1319	Identifier	origin
>1320	CallExpression	g_pParentWnd -> GetCamera ( ) -> Camera ( )
>1321	ArgumentList	 
>1322	Callee	g_pParentWnd -> GetCamera ( ) -> Camera
>1323	PtrMemberAccess	g_pParentWnd -> GetCamera ( ) -> Camera
>1324	Identifier	Camera
>1325	CallExpression	g_pParentWnd -> GetCamera ( )
>1326	ArgumentList	 
>1327	Callee	g_pParentWnd -> GetCamera
>1328	PtrMemberAccess	g_pParentWnd -> GetCamera
>1329	Identifier	GetCamera
>1330	Identifier	g_pParentWnd
>1331	Argument	p
>1332	Identifier	p
>1333	Callee	g_splineList -> getCameraInfo
>1334	PtrMemberAccess	g_splineList -> getCameraInfo
>1335	Identifier	getCameraInfo
>1336	Identifier	g_splineList
>1337	IdentifierDeclStatement	 
>1338	IdentifierDecl	fov
>1339	Identifier	fov
>1340	IdentifierDeclType	float
>1341	IdentifierDeclStatement	 
>1342	IdentifierDecl	dir
>1343	Identifier	dir
>1344	IdentifierDeclType	vec3_t
>1345	ExpressionStatement	 
>1346	CallExpression	g_splineList -> buildCamera ( )
>1347	ArgumentList	 
>1348	Callee	g_splineList -> buildCamera
>1349	PtrMemberAccess	g_splineList -> buildCamera
>1350	Identifier	buildCamera
>1351	Identifier	g_splineList
>1352	ExpressionStatement	 
>1353	CallExpression	g_splineList -> startCamera ( 0 )
>1354	ArgumentList	0
>1355	Argument	0
>1356	PrimaryExpression	0
>1357	Callee	g_splineList -> startCamera
>1358	PtrMemberAccess	g_splineList -> startCamera
>1359	Identifier	startCamera
>1360	Identifier	g_splineList
>1361	ExpressionStatement	 
>1362	AssignmentExpr	p *= g_splineList -> getTotalTime ( ) * 1000
>1363	MultiplicativeExpression	g_splineList -> getTotalTime ( ) * 1000
>1364	PrimaryExpression	1000
>1365	CallExpression	g_splineList -> getTotalTime ( )
>1366	ArgumentList	 
>1367	Callee	g_splineList -> getTotalTime
>1368	PtrMemberAccess	g_splineList -> getTotalTime
>1369	Identifier	getTotalTime
>1370	Identifier	g_splineList
>1371	Identifier	p
>1372	IdentifierDeclStatement	 
>1373	IdentifierDecl	p = ( float ) n / max
>1374	AssignmentExpr	p = ( float ) n / max
>1375	MultiplicativeExpression	( float ) n / max
>1376	Identifier	max
>1377	CastExpression	( float ) n
>1378	Identifier	n
>1379	CastTarget	float
>1380	Identifier	p
>1381	Identifier	p
>1382	IdentifierDeclType	float
>1383	Condition	 
>1384	Identifier	m_trackCamera
>1385	ExpressionStatement	 
>1386	CallExpression	pScrollBar -> SetScrollPos ( n )
>1387	ArgumentList	n
>1388	Argument	n
>1389	Identifier	n
>1390	Callee	pScrollBar -> SetScrollPos
>1391	PtrMemberAccess	pScrollBar -> SetScrollPos
>1392	Identifier	SetScrollPos
>1393	Identifier	pScrollBar
>1394	SwitchStatement	switch ( nSBCode )
>1395	CompoundStatement	 
>1396	CompoundStatement	 
>1397	ExpressionStatement	 
>1398	AssignmentExpr	n = nPos
>1399	Identifier	nPos
>1400	Identifier	n
>1401	Label	 
>1402	Identifier	SB_THUMBTRACK
>1403	BreakStatement	 
>1404	CompoundStatement	 
>1405	ExpressionStatement	 
>1406	AssignmentExpr	n = nPos
>1407	Identifier	nPos
>1408	Identifier	n
>1409	Label	 
>1410	Identifier	SB_THUMBPOSITION
>1411	BreakStatement	 
>1412	CompoundStatement	 
>1413	ExpressionStatement	 
>1414	AssignmentExpr	n += ( float ) max * 0.10
>1415	MultiplicativeExpression	( float ) max * 0.10
>1416	PrimaryExpression	0.10
>1417	CastExpression	( float ) max
>1418	Identifier	max
>1419	CastTarget	float
>1420	Identifier	n
>1421	Label	 
>1422	Identifier	SB_PAGEDOWN
>1423	BreakStatement	 
>1424	CompoundStatement	 
>1425	ExpressionStatement	 
>1426	AssignmentExpr	n -= ( float ) max * 0.10
>1427	MultiplicativeExpression	( float ) max * 0.10
>1428	PrimaryExpression	0.10
>1429	CastExpression	( float ) max
>1430	Identifier	max
>1431	CastTarget	float
>1432	Identifier	n
>1433	Label	 
>1434	Identifier	SB_PAGEUP
>1435	BreakStatement	 
>1436	CompoundStatement	 
>1437	ExpressionStatement	 
>1438	IncDecOp	n ++
>1439	IncDec	++
>1440	Identifier	n
>1441	Label	 
>1442	Identifier	SB_LINEDOWN
>1443	BreakStatement	 
>1444	CompoundStatement	 
>1445	ExpressionStatement	 
>1446	IncDecOp	n --
>1447	IncDec	--
>1448	Identifier	n
>1449	Label	 
>1450	Identifier	SB_LINEUP
>1451	Condition	 
>1452	Identifier	nSBCode
>1453	IdentifierDeclStatement	 
>1454	IdentifierDecl	n = pScrollBar -> GetScrollPos ( )
>1455	AssignmentExpr	n = pScrollBar -> GetScrollPos ( )
>1456	CallExpression	pScrollBar -> GetScrollPos ( )
>1457	ArgumentList	 
>1458	Callee	pScrollBar -> GetScrollPos
>1459	PtrMemberAccess	pScrollBar -> GetScrollPos
>1460	Identifier	GetScrollPos
>1461	Identifier	pScrollBar
>1462	Identifier	n
>1463	Identifier	n
>1464	IdentifierDeclType	int
>1465	IfStatement	if ( max == 0 )
>1466	CompoundStatement	 
>1467	ExpressionStatement	 
>1468	AssignmentExpr	max = 1
>1469	PrimaryExpression	1
>1470	Identifier	max
>1471	Condition	 
>1472	EqualityExpression	max == 0
>1473	PrimaryExpression	0
>1474	Identifier	max
>1475	IdentifierDeclStatement	 
>1476	IdentifierDecl	max = g_splineList -> getTotalTime ( ) * 4
>1477	AssignmentExpr	max = g_splineList -> getTotalTime ( ) * 4
>1478	MultiplicativeExpression	g_splineList -> getTotalTime ( ) * 4
>1479	PrimaryExpression	4
>1480	CallExpression	g_splineList -> getTotalTime ( )
>1481	ArgumentList	 
>1482	Callee	g_splineList -> getTotalTime
>1483	PtrMemberAccess	g_splineList -> getTotalTime
>1484	Identifier	getTotalTime
>1485	Identifier	g_splineList
>1486	Identifier	max
>1487	Identifier	max
>1488	IdentifierDeclType	int
>1489	ExpressionStatement	 
>1490	CallExpression	CDialog 
>1491	ArgumentList	nSBCode
>1492	Argument	pScrollBar
>1493	Identifier	pScrollBar
>1494	Argument	nPos
>1495	Identifier	nPos
>1496	Argument	nSBCode
>1497	Identifier	nSBCode
>1498	Callee	CDialog 
>1499	Identifier	CDialog 
>1536	FunctionDef	CDlgCamera 
>1537	ParameterList	 
>1538	ReturnType	void
>1539	CompoundStatement	 
>1540	ExpressionStatement	 
>1541	CallExpression	Sys_UpdateWindows ( W_ALL )
>1542	ArgumentList	W_ALL
>1543	Argument	W_ALL
>1544	Identifier	W_ALL
>1545	Callee	Sys_UpdateWindows
>1546	Identifier	Sys_UpdateWindows
>1547	ExpressionStatement	 
>1548	CallExpression	setupFromCamera ( )
>1549	ArgumentList	 
>1550	Callee	setupFromCamera
>1551	Identifier	setupFromCamera
>1552	ExpressionStatement	 
>1553	AssignmentExpr	g_qeglobals . selectObject = g_splineList -> getPositionObj ( )
>1554	CallExpression	g_splineList -> getPositionObj ( )
>1555	ArgumentList	 
>1556	Callee	g_splineList -> getPositionObj
>1557	PtrMemberAccess	g_splineList -> getPositionObj
>1558	Identifier	getPositionObj
>1559	Identifier	g_splineList
>1560	MemberAccess	g_qeglobals . selectObject
>1561	Identifier	selectObject
>1562	Identifier	g_qeglobals
>1563	ExpressionStatement	 
>1564	CallExpression	g_splineList -> clear ( )
>1565	ArgumentList	 
>1566	Callee	g_splineList -> clear
>1567	PtrMemberAccess	g_splineList -> clear
>1568	Identifier	clear
>1569	Identifier	g_splineList
>1579	FunctionDef	CDlgCamera 
>1580	ParameterList	 
>1581	ReturnType	void
>1582	CompoundStatement	 
>1583	IfStatement	if ( dlg . DoModal ( ) == IDOK )
>1584	CompoundStatement	 
>1585	ExpressionStatement	 
>1586	CallExpression	Sys_UpdateWindows ( W_ALL )
>1587	ArgumentList	W_ALL
>1588	Argument	W_ALL
>1589	Identifier	W_ALL
>1590	Callee	Sys_UpdateWindows
>1591	Identifier	Sys_UpdateWindows
>1592	ExpressionStatement	 
>1593	CallExpression	setupFromCamera ( )
>1594	ArgumentList	 
>1595	Callee	setupFromCamera
>1596	Identifier	setupFromCamera
>1597	ExpressionStatement	 
>1598	CallExpression	g_splineList -> load ( va ( \"%s.camera\" , dlg . m_strName ) )
>1599	ArgumentList	va ( \"%s.camera\" , dlg . m_strName )
>1600	Argument	va ( \"%s.camera\" , dlg . m_strName )
>1601	CallExpression	va ( \"%s.camera\" , dlg . m_strName )
>1602	ArgumentList	\"%s.camera\"
>1603	Argument	dlg . m_strName
>1604	MemberAccess	dlg . m_strName
>1605	Identifier	m_strName
>1606	Identifier	dlg
>1607	Argument	\"%s.camera\"
>1608	PrimaryExpression	\"%s.camera\"
>1609	Callee	va
>1610	Identifier	va
>1611	Callee	g_splineList -> load
>1612	PtrMemberAccess	g_splineList -> load
>1613	Identifier	load
>1614	Identifier	g_splineList
>1615	ExpressionStatement	 
>1616	AssignmentExpr	g_qeglobals . selectObject = g_splineList -> getPositionObj ( )
>1617	CallExpression	g_splineList -> getPositionObj ( )
>1618	ArgumentList	 
>1619	Callee	g_splineList -> getPositionObj
>1620	PtrMemberAccess	g_splineList -> getPositionObj
>1621	Identifier	getPositionObj
>1622	Identifier	g_splineList
>1623	MemberAccess	g_qeglobals . selectObject
>1624	Identifier	selectObject
>1625	Identifier	g_qeglobals
>1626	ExpressionStatement	 
>1627	CallExpression	g_splineList -> clear ( )
>1628	ArgumentList	 
>1629	Callee	g_splineList -> clear
>1630	PtrMemberAccess	g_splineList -> clear
>1631	Identifier	clear
>1632	Identifier	g_splineList
>1633	Condition	 
>1634	EqualityExpression	dlg . DoModal ( ) == IDOK
>1635	Identifier	IDOK
>1636	CallExpression	dlg . DoModal ( )
>1637	ArgumentList	 
>1638	Callee	dlg . DoModal
>1639	MemberAccess	dlg . DoModal
>1640	Identifier	DoModal
>1641	Identifier	dlg
>1642	IdentifierDeclStatement	 
>1643	IdentifierDecl	dlg ( \"Open Camera File\" )
>1644	PrimaryExpression	\"Open Camera File\"
>1645	Identifier	dlg
>1646	IdentifierDeclType	CNameDlg
>1661	FunctionDef	CDlgCamera 
>1662	ParameterList	 
>1663	ReturnType	void
>1664	CompoundStatement	 
>1665	IfStatement	if ( dlg . DoModal ( ) == IDOK )
>1666	CompoundStatement	 
>1667	ExpressionStatement	 
>1668	CallExpression	g_splineList -> save ( va ( \"%s.camera\" , dlg . m_strName ) )
>1669	ArgumentList	va ( \"%s.camera\" , dlg . m_strName )
>1670	Argument	va ( \"%s.camera\" , dlg . m_strName )
>1671	CallExpression	va ( \"%s.camera\" , dlg . m_strName )
>1672	ArgumentList	\"%s.camera\"
>1673	Argument	dlg . m_strName
>1674	MemberAccess	dlg . m_strName
>1675	Identifier	m_strName
>1676	Identifier	dlg
>1677	Argument	\"%s.camera\"
>1678	PrimaryExpression	\"%s.camera\"
>1679	Callee	va
>1680	Identifier	va
>1681	Callee	g_splineList -> save
>1682	PtrMemberAccess	g_splineList -> save
>1683	Identifier	save
>1684	Identifier	g_splineList
>1685	Condition	 
>1686	EqualityExpression	dlg . DoModal ( ) == IDOK
>1687	Identifier	IDOK
>1688	CallExpression	dlg . DoModal ( )
>1689	ArgumentList	 
>1690	Callee	dlg . DoModal
>1691	MemberAccess	dlg . DoModal
>1692	Identifier	DoModal
>1693	Identifier	dlg
>1694	IdentifierDeclStatement	 
>1695	IdentifierDecl	dlg ( \"Save Camera File\" )
>1696	PrimaryExpression	\"Save Camera File\"
>1697	Identifier	dlg
>1698	IdentifierDeclType	CNameDlg
>1708	FunctionDef	CDlgCamera 
>1709	ParameterList	 
>1710	ReturnType	void
>1711	CompoundStatement	 
>1715	FunctionDef	CDlgCamera 
>1716	ParameterList	 
>1717	ReturnType	void
>1718	CompoundStatement	 
>1722	FunctionDef	CDlgCamera 
>1723	ParameterList	 
>1724	ReturnType	void
>1725	CompoundStatement	 
>1729	FunctionDef	CDlgCamera 
>1730	ParameterList	 
>1731	ReturnType	void
>1732	CompoundStatement	 
>1733	ExpressionStatement	 
>1734	AssignmentExpr	g_qeglobals . d_select_mode = sel_editpoint
>1735	Identifier	sel_editpoint
>1736	MemberAccess	g_qeglobals . d_select_mode
>1737	Identifier	d_select_mode
>1738	Identifier	g_qeglobals
>1739	ExpressionStatement	 
>1740	CallExpression	UpdateData ( TRUE )
>1741	ArgumentList	TRUE
>1742	Argument	TRUE
>1743	Identifier	TRUE
>1744	Callee	UpdateData
>1745	Identifier	UpdateData
>1753	FunctionDef	CDlgCamera 
>1754	ParameterList	 
>1755	ReturnType	void
>1756	CompoundStatement	 
>1757	ExpressionStatement	 
>1758	AssignmentExpr	g_qeglobals . d_select_mode = sel_addpoint
>1759	Identifier	sel_addpoint
>1760	MemberAccess	g_qeglobals . d_select_mode
>1761	Identifier	d_select_mode
>1762	Identifier	g_qeglobals
>1763	ExpressionStatement	 
>1764	CallExpression	UpdateData ( TRUE )
>1765	ArgumentList	TRUE
>1766	Argument	TRUE
>1767	Identifier	TRUE
>1768	Callee	UpdateData
>1769	Identifier	UpdateData
<7=13,12,8
<8=9
<9=11,10
<13=75,74,73,67,66,59,55,47,43,34,23,16,14
<14=15
<16=17
<17=21,18
<18=19
<19=20
<21=22
<23=24
<24=32,25
<25=30,28,26
<26=27
<28=29
<30=31
<32=33
<34=35
<35=41,36
<36=39,37
<37=38
<39=40
<41=42
<43=44
<44=46,45
<47=48
<48=54,49
<49=53,50
<50=52,51
<55=56
<56=58,57
<59=60
<60=65,64,61
<61=63,62
<67=68
<68=70,69
<70=72,71
<75=76
<76=78,77
<89=92,91,90
<92=109,100,93
<93=94
<94=96,95
<96=97
<97=99,98
<100=101
<101=105,102
<102=103
<103=104
<105=106
<106=108,107
<109=182,110
<110=173,169,160,118,111
<111=112
<112=116,113
<113=114
<114=115
<116=117
<118=145,119
<119=120
<120=121
<121=141,122
<122=139,135,131,129,127,123
<123=124
<124=126,125
<127=128
<129=130
<131=132
<132=134,133
<135=136
<136=138,137
<139=140
<141=142
<142=144,143
<145=146
<146=158,147
<147=156,152,148
<148=149
<149=151,150
<152=153
<153=155,154
<156=157
<158=159
<160=161
<161=168,167,162
<162=166,163
<163=165,164
<169=170
<170=172,171
<173=174
<174=178,175
<175=176
<176=177
<178=179
<179=181,180
<182=183
<183=185,184
<185=187,186
<187=188
<188=190,189
<209=214,210
<210=211
<211=213,212
<214=244,240,236,232,228,219,215
<215=216
<216=218,217
<219=220
<220=227,221
<221=225,222
<222=223
<223=224
<225=226
<228=229
<229=231,230
<232=233
<233=235,234
<236=237
<237=239,238
<240=241
<241=243,242
<244=245
<245=252,246
<246=250,247
<247=248
<248=249
<250=251
<266=272,271,267
<267=268
<268=270,269
<272=383,372,361,350,339,328,317,306,295,284,273
<273=274
<274=282,275
<275=280,278,276
<276=277
<278=279
<280=281
<282=283
<284=285
<285=293,286
<286=291,289,287
<287=288
<289=290
<291=292
<293=294
<295=296
<296=304,297
<297=302,300,298
<298=299
<300=301
<302=303
<304=305
<306=307
<307=315,308
<308=313,311,309
<309=310
<311=312
<313=314
<315=316
<317=318
<318=326,319
<319=324,322,320
<320=321
<322=323
<324=325
<326=327
<328=329
<329=337,330
<330=335,333,331
<331=332
<333=334
<335=336
<337=338
<339=340
<340=348,341
<341=346,344,342
<342=343
<344=345
<346=347
<348=349
<350=351
<351=359,352
<352=357,355,353
<353=354
<355=356
<357=358
<359=360
<361=362
<362=370,363
<363=368,366,364
<364=365
<366=367
<368=369
<370=371
<372=373
<373=381,374
<374=379,377,375
<375=376
<377=378
<379=380
<381=382
<383=384
<384=388,385
<385=386
<386=387
<388=389
<414=417,416,415
<417=473,418
<418=464,419
<419=448,425,420
<420=421
<421=423,422
<423=424
<425=426
<426=444,427
<427=434,430,428
<428=429
<430=431
<431=433,432
<434=435
<435=443,436
<436=442,437
<437=439,438
<439=441,440
<444=445
<445=447,446
<448=449
<449=463,462,450
<450=461,451
<451=455,452
<452=454,453
<455=457,456
<457=458
<458=460,459
<464=465
<465=467,466
<467=469,468
<469=470
<470=472,471
<473=474
<474=476,475
<491=494,493,492
<494=554,495
<495=545,496
<496=526,521,507,502,497
<497=498
<498=500,499
<500=501
<502=503
<503=505,504
<505=506
<507=508
<508=517,509
<509=510
<510=511
<511=513,512
<513=514
<514=516,515
<517=518
<518=520,519
<521=522
<522=524,523
<524=525
<526=527
<527=541,528
<528=537,529
<529=530
<530=536,531
<531=535,532
<532=534,533
<537=538
<538=540,539
<541=542
<542=544,543
<545=546
<546=548,547
<548=550,549
<550=551
<551=553,552
<554=555
<555=557,556
<572=575,574,573
<579=582,581,580
<586=589,588,587
<593=596,595,594
<596=721,709,703,697,685,622,604,597
<597=598
<598=602,599
<599=600
<600=601
<602=603
<604=605
<605=618,606
<606=616,607
<607=608
<608=610,609
<610=612,611
<612=613
<613=615,614
<616=617
<618=619
<619=621,620
<622=681,645,623
<623=624
<624=636,625
<625=626
<626=633,627
<627=629,628
<629=630
<630=632,631
<633=635,634
<636=637
<637=641,638
<638=639
<639=640
<641=642
<642=644,643
<645=670,655,646
<646=647
<647=651,648
<648=649
<649=650
<651=652
<652=654,653
<655=656
<656=667,657
<657=663,658
<658=659
<659=660
<660=662,661
<663=664
<664=666,665
<667=669,668
<670=671
<671=677,672
<672=673
<673=674
<674=676,675
<677=678
<678=680,679
<681=682
<682=684,683
<685=686
<686=696,695,687
<687=694,688
<688=690,689
<690=691
<691=693,692
<697=698
<698=700,699
<700=702,701
<703=704
<704=706,705
<706=708,707
<709=710
<710=718,711
<711=714,713,712
<714=715
<715=717,716
<718=720,719
<721=722
<722=726,723
<723=724
<724=725
<726=727
<752=755,754,753
<755=756
<756=757
<757=767,766,758
<758=765,759
<759=761,760
<761=762
<762=764,763
<774=777,776,775
<781=784,783,782
<784=801,792,785
<785=786
<786=790,787
<787=788
<788=789
<790=791
<792=793
<793=797,794
<794=795
<795=796
<797=798
<798=800,799
<801=996,802
<802=992,988,979,965,958,949,910,901,892,874,867,803
<803=863,854,851,804
<804=814,805
<805=806
<806=810,807
<807=808
<808=809
<810=811
<811=813,812
<814=815
<815=850,816
<816=848,817
<817=846,832,818
<818=819
<819=821,820
<821=822
<822=824,823
<824=828,825
<825=826
<826=827
<828=829
<829=831,830
<832=833
<833=835,834
<835=836
<836=838,837
<838=842,839
<839=840
<840=841
<842=843
<843=845,844
<846=847
<848=849
<851=853,852
<854=855
<855=862,856
<856=858,857
<858=859
<859=861,860
<863=864
<864=866,865
<867=868
<868=870,869
<870=871
<871=873,872
<874=875
<875=888,876
<876=886,877
<877=878
<878=880,879
<880=882,881
<882=883
<883=885,884
<886=887
<888=889
<889=891,890
<892=893
<893=900,894
<894=896,895
<896=897
<897=899,898
<901=902
<902=906,903
<903=904
<904=905
<906=907
<907=909,908
<910=945,936,933,911
<911=912
<912=913
<913=929,914
<914=915
<915=916
<916=918,917
<918=919
<919=921,920
<921=925,922
<922=923
<923=924
<925=926
<926=928,927
<929=930
<930=932,931
<933=935,934
<936=937
<937=944,938
<938=940,939
<940=941
<941=943,942
<945=946
<946=948,947
<949=950
<950=954,951
<951=952
<952=953
<954=955
<955=957,956
<958=959
<959=961,960
<961=962
<962=964,963
<965=966
<966=978,967
<967=969,968
<969=970
<970=972,971
<972=974,973
<974=975
<975=977,976
<979=980
<980=987,981
<981=983,982
<983=984
<984=986,985
<988=989
<989=991,990
<992=993
<993=995,994
<996=997
<997=999,998
<999=1000
<1000=1002,1001
<1036=1039,1038,1037
<1039=1047,1042,1040
<1040=1041
<1042=1043
<1043=1045,1044
<1045=1046
<1047=1048
<1048=1050,1049
<1050=1051
<1056=1059,1058,1057
<1059=1079,1074,1067,1060
<1060=1061
<1061=1065,1062
<1062=1063
<1063=1064
<1065=1066
<1067=1068
<1068=1070,1069
<1070=1071
<1071=1073,1072
<1074=1075
<1075=1077,1076
<1077=1078
<1079=1080
<1080=1084,1081
<1081=1082
<1082=1083
<1084=1085
<1085=1087,1086
<1095=1098,1097,1096
<1098=1111,1106,1099
<1099=1100
<1100=1104,1101
<1101=1102
<1102=1103
<1104=1105
<1106=1107
<1107=1109,1108
<1109=1110
<1111=1139,1112
<1112=1135,1128,1113
<1113=1114
<1114=1126,1115
<1115=1124,1120,1116
<1116=1117
<1117=1119,1118
<1120=1121
<1121=1123,1122
<1124=1125
<1126=1127
<1128=1129
<1129=1133,1130
<1130=1131
<1131=1132
<1133=1134
<1135=1136
<1136=1138,1137
<1139=1140
<1140=1142,1141
<1142=1143
<1151=1154,1153,1152
<1154=1198,1189,1180,1173,1155
<1155=1156
<1156=1169,1157
<1157=1167,1158
<1158=1159
<1159=1161,1160
<1161=1163,1162
<1163=1164
<1164=1166,1165
<1167=1168
<1169=1170
<1170=1172,1171
<1173=1174
<1174=1176,1175
<1176=1177
<1177=1179,1178
<1180=1181
<1181=1185,1182
<1182=1183
<1183=1184
<1185=1186
<1186=1188,1187
<1189=1190
<1190=1194,1191
<1191=1192
<1192=1193
<1194=1195
<1195=1197,1196
<1198=1199
<1199=1203,1200
<1200=1201
<1201=1202
<1203=1204
<1215=1227,1226,1216
<1216=1223,1220,1217
<1217=1219,1218
<1220=1222,1221
<1223=1225,1224
<1227=1489,1475,1465,1453,1394,1385,1244,1237,1228
<1228=1229
<1229=1235,1230
<1230=1231
<1231=1232
<1232=1234,1233
<1235=1236
<1237=1238
<1238=1242,1239
<1239=1240
<1240=1241
<1242=1243
<1244=1383,1245
<1245=1372,1361,1352,1345,1341,1337,1308,1275,1246
<1246=1247
<1247=1260,1248
<1248=1252,1249
<1249=1251,1250
<1252=1258,1253
<1253=1254
<1254=1255
<1255=1257,1256
<1258=1259
<1260=1262,1261
<1262=1264,1263
<1264=1266,1265
<1266=1267
<1267=1269,1268
<1269=1271,1270
<1271=1272
<1272=1274,1273
<1275=1276
<1276=1293,1277
<1277=1281,1278
<1278=1280,1279
<1281=1291,1282
<1282=1287,1283
<1283=1284
<1284=1286,1285
<1287=1288
<1288=1290,1289
<1291=1292
<1293=1295,1294
<1295=1297,1296
<1297=1299,1298
<1299=1300
<1300=1302,1301
<1302=1304,1303
<1304=1305
<1305=1307,1306
<1308=1309
<1309=1333,1310
<1310=1331,1317,1315,1311
<1311=1312
<1312=1314,1313
<1315=1316
<1317=1318
<1318=1320,1319
<1320=1322,1321
<1322=1323
<1323=1325,1324
<1325=1327,1326
<1327=1328
<1328=1330,1329
<1331=1332
<1333=1334
<1334=1336,1335
<1337=1338
<1338=1340,1339
<1341=1342
<1342=1344,1343
<1345=1346
<1346=1348,1347
<1348=1349
<1349=1351,1350
<1352=1353
<1353=1357,1354
<1354=1355
<1355=1356
<1357=1358
<1358=1360,1359
<1361=1362
<1362=1371,1363
<1363=1365,1364
<1365=1367,1366
<1367=1368
<1368=1370,1369
<1372=1373
<1373=1382,1381,1374
<1374=1380,1375
<1375=1377,1376
<1377=1379,1378
<1383=1384
<1385=1386
<1386=1390,1387
<1387=1388
<1388=1389
<1390=1391
<1391=1393,1392
<1394=1451,1395
<1395=1449,1444,1443,1441,1436,1435,1433,1424,1423,1421,1412,1411,1409,1404,1403,1401,1396
<1396=1397
<1397=1398
<1398=1400,1399
<1401=1402
<1404=1405
<1405=1406
<1406=1408,1407
<1409=1410
<1412=1413
<1413=1414
<1414=1420,1415
<1415=1417,1416
<1417=1419,1418
<1421=1422
<1424=1425
<1425=1426
<1426=1432,1427
<1427=1429,1428
<1429=1431,1430
<1433=1434
<1436=1437
<1437=1438
<1438=1440,1439
<1441=1442
<1444=1445
<1445=1446
<1446=1448,1447
<1449=1450
<1451=1452
<1453=1454
<1454=1464,1463,1455
<1455=1462,1456
<1456=1458,1457
<1458=1459
<1459=1461,1460
<1465=1471,1466
<1466=1467
<1467=1468
<1468=1470,1469
<1471=1472
<1472=1474,1473
<1475=1476
<1476=1488,1487,1477
<1477=1486,1478
<1478=1480,1479
<1480=1482,1481
<1482=1483
<1483=1485,1484
<1489=1490
<1490=1498,1491
<1491=1496,1494,1492
<1492=1493
<1494=1495
<1496=1497
<1498=1499
<1536=1539,1538,1537
<1539=1563,1552,1547,1540
<1540=1541
<1541=1545,1542
<1542=1543
<1543=1544
<1545=1546
<1547=1548
<1548=1550,1549
<1550=1551
<1552=1553
<1553=1560,1554
<1554=1556,1555
<1556=1557
<1557=1559,1558
<1560=1562,1561
<1563=1564
<1564=1566,1565
<1566=1567
<1567=1569,1568
<1579=1582,1581,1580
<1582=1642,1583
<1583=1633,1584
<1584=1626,1615,1597,1592,1585
<1585=1586
<1586=1590,1587
<1587=1588
<1588=1589
<1590=1591
<1592=1593
<1593=1595,1594
<1595=1596
<1597=1598
<1598=1611,1599
<1599=1600
<1600=1601
<1601=1609,1602
<1602=1607,1603
<1603=1604
<1604=1606,1605
<1607=1608
<1609=1610
<1611=1612
<1612=1614,1613
<1615=1616
<1616=1623,1617
<1617=1619,1618
<1619=1620
<1620=1622,1621
<1623=1625,1624
<1626=1627
<1627=1629,1628
<1629=1630
<1630=1632,1631
<1633=1634
<1634=1636,1635
<1636=1638,1637
<1638=1639
<1639=1641,1640
<1642=1643
<1643=1646,1645,1644
<1661=1664,1663,1662
<1664=1694,1665
<1665=1685,1666
<1666=1667
<1667=1668
<1668=1681,1669
<1669=1670
<1670=1671
<1671=1679,1672
<1672=1677,1673
<1673=1674
<1674=1676,1675
<1677=1678
<1679=1680
<1681=1682
<1682=1684,1683
<1685=1686
<1686=1688,1687
<1688=1690,1689
<1690=1691
<1691=1693,1692
<1694=1695
<1695=1698,1697,1696
<1708=1711,1710,1709
<1715=1718,1717,1716
<1722=1725,1724,1723
<1729=1732,1731,1730
<1732=1739,1733
<1733=1734
<1734=1736,1735
<1736=1738,1737
<1739=1740
<1740=1744,1741
<1741=1742
<1742=1743
<1744=1745
<1753=1756,1755,1754
<1756=1763,1757
<1757=1758
<1758=1760,1759
<1760=1762,1761
<1763=1764
<1764=1768,1765
<1765=1766
<1766=1767
<1768=1769
