>3	FunctionDef	drwnIconFactory 
>4	ParameterList	 
>5	CompoundStatement	 
>6	ExpressionStatement	 
>7	AssignmentExpr	_registry [ \"drwnPythonDummyNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodePython ) ) )
>8	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodePython ) ) )
>9	ArgumentList	wxBITMAP ( nodePython )
>10	Argument	wxBITMAP ( nodePython )
>11	CallExpression	wxBITMAP ( nodePython )
>12	ArgumentList	nodePython
>13	Argument	nodePython
>14	Identifier	nodePython
>15	Callee	wxBITMAP
>16	Identifier	wxBITMAP
>17	Callee	setIconMask
>18	Identifier	setIconMask
>19	ArrayIndexing	_registry [ \"drwnPythonDummyNode\" ]
>20	PrimaryExpression	\"drwnPythonDummyNode\"
>21	Identifier	_registry
>22	ExpressionStatement	 
>23	AssignmentExpr	_registry [ \"drwnPythonNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodePython ) ) )
>24	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodePython ) ) )
>25	ArgumentList	wxBITMAP ( nodePython )
>26	Argument	wxBITMAP ( nodePython )
>27	CallExpression	wxBITMAP ( nodePython )
>28	ArgumentList	nodePython
>29	Argument	nodePython
>30	Identifier	nodePython
>31	Callee	wxBITMAP
>32	Identifier	wxBITMAP
>33	Callee	setIconMask
>34	Identifier	setIconMask
>35	ArrayIndexing	_registry [ \"drwnPythonNode\" ]
>36	PrimaryExpression	\"drwnPythonNode\"
>37	Identifier	_registry
>38	ExpressionStatement	 
>39	AssignmentExpr	_registry [ \"drwnLuaDummyNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeLua ) ) )
>40	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeLua ) ) )
>41	ArgumentList	wxBITMAP ( nodeLua )
>42	Argument	wxBITMAP ( nodeLua )
>43	CallExpression	wxBITMAP ( nodeLua )
>44	ArgumentList	nodeLua
>45	Argument	nodeLua
>46	Identifier	nodeLua
>47	Callee	wxBITMAP
>48	Identifier	wxBITMAP
>49	Callee	setIconMask
>50	Identifier	setIconMask
>51	ArrayIndexing	_registry [ \"drwnLuaDummyNode\" ]
>52	PrimaryExpression	\"drwnLuaDummyNode\"
>53	Identifier	_registry
>54	ExpressionStatement	 
>55	AssignmentExpr	_registry [ \"drwnLuaNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeLua ) ) )
>56	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeLua ) ) )
>57	ArgumentList	wxBITMAP ( nodeLua )
>58	Argument	wxBITMAP ( nodeLua )
>59	CallExpression	wxBITMAP ( nodeLua )
>60	ArgumentList	nodeLua
>61	Argument	nodeLua
>62	Identifier	nodeLua
>63	Callee	wxBITMAP
>64	Identifier	wxBITMAP
>65	Callee	setIconMask
>66	Identifier	setIconMask
>67	ArrayIndexing	_registry [ \"drwnLuaNode\" ]
>68	PrimaryExpression	\"drwnLuaNode\"
>69	Identifier	_registry
>70	ExpressionStatement	 
>71	AssignmentExpr	_registry [ \"drwnOpenCVNeighborhoodFeaturesNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCV ) ) )
>72	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCV ) ) )
>73	ArgumentList	wxBITMAP ( nodeOpenCV )
>74	Argument	wxBITMAP ( nodeOpenCV )
>75	CallExpression	wxBITMAP ( nodeOpenCV )
>76	ArgumentList	nodeOpenCV
>77	Argument	nodeOpenCV
>78	Identifier	nodeOpenCV
>79	Callee	wxBITMAP
>80	Identifier	wxBITMAP
>81	Callee	setIconMask
>82	Identifier	setIconMask
>83	ArrayIndexing	_registry [ \"drwnOpenCVNeighborhoodFeaturesNode\" ]
>84	PrimaryExpression	\"drwnOpenCVNeighborhoodFeaturesNode\"
>85	Identifier	_registry
>86	ExpressionStatement	 
>87	AssignmentExpr	_registry [ \"drwnOpenCVIntegralImageNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCV ) ) )
>88	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCV ) ) )
>89	ArgumentList	wxBITMAP ( nodeOpenCV )
>90	Argument	wxBITMAP ( nodeOpenCV )
>91	CallExpression	wxBITMAP ( nodeOpenCV )
>92	ArgumentList	nodeOpenCV
>93	Argument	nodeOpenCV
>94	Identifier	nodeOpenCV
>95	Callee	wxBITMAP
>96	Identifier	wxBITMAP
>97	Callee	setIconMask
>98	Identifier	setIconMask
>99	ArrayIndexing	_registry [ \"drwnOpenCVIntegralImageNode\" ]
>100	PrimaryExpression	\"drwnOpenCVIntegralImageNode\"
>101	Identifier	_registry
>102	ExpressionStatement	 
>103	AssignmentExpr	_registry [ \"drwnOpenCVFilterBankNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCV ) ) )
>104	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCV ) ) )
>105	ArgumentList	wxBITMAP ( nodeOpenCV )
>106	Argument	wxBITMAP ( nodeOpenCV )
>107	CallExpression	wxBITMAP ( nodeOpenCV )
>108	ArgumentList	nodeOpenCV
>109	Argument	nodeOpenCV
>110	Identifier	nodeOpenCV
>111	Callee	wxBITMAP
>112	Identifier	wxBITMAP
>113	Callee	setIconMask
>114	Identifier	setIconMask
>115	ArrayIndexing	_registry [ \"drwnOpenCVFilterBankNode\" ]
>116	PrimaryExpression	\"drwnOpenCVFilterBankNode\"
>117	Identifier	_registry
>118	ExpressionStatement	 
>119	AssignmentExpr	_registry [ \"drwnOpenCVResizeNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCV ) ) )
>120	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCV ) ) )
>121	ArgumentList	wxBITMAP ( nodeOpenCV )
>122	Argument	wxBITMAP ( nodeOpenCV )
>123	CallExpression	wxBITMAP ( nodeOpenCV )
>124	ArgumentList	nodeOpenCV
>125	Argument	nodeOpenCV
>126	Identifier	nodeOpenCV
>127	Callee	wxBITMAP
>128	Identifier	wxBITMAP
>129	Callee	setIconMask
>130	Identifier	setIconMask
>131	ArrayIndexing	_registry [ \"drwnOpenCVResizeNode\" ]
>132	PrimaryExpression	\"drwnOpenCVResizeNode\"
>133	Identifier	_registry
>134	ExpressionStatement	 
>135	AssignmentExpr	_registry [ \"drwnOpenCVImageSourceNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCVSource ) ) )
>136	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCVSource ) ) )
>137	ArgumentList	wxBITMAP ( nodeOpenCVSource )
>138	Argument	wxBITMAP ( nodeOpenCVSource )
>139	CallExpression	wxBITMAP ( nodeOpenCVSource )
>140	ArgumentList	nodeOpenCVSource
>141	Argument	nodeOpenCVSource
>142	Identifier	nodeOpenCVSource
>143	Callee	wxBITMAP
>144	Identifier	wxBITMAP
>145	Callee	setIconMask
>146	Identifier	setIconMask
>147	ArrayIndexing	_registry [ \"drwnOpenCVImageSourceNode\" ]
>148	PrimaryExpression	\"drwnOpenCVImageSourceNode\"
>149	Identifier	_registry
>150	ExpressionStatement	 
>151	AssignmentExpr	_registry [ \"drwnOpenCVImageSinkNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCVSink ) ) )
>152	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeOpenCVSink ) ) )
>153	ArgumentList	wxBITMAP ( nodeOpenCVSink )
>154	Argument	wxBITMAP ( nodeOpenCVSink )
>155	CallExpression	wxBITMAP ( nodeOpenCVSink )
>156	ArgumentList	nodeOpenCVSink
>157	Argument	nodeOpenCVSink
>158	Identifier	nodeOpenCVSink
>159	Callee	wxBITMAP
>160	Identifier	wxBITMAP
>161	Callee	setIconMask
>162	Identifier	setIconMask
>163	ArrayIndexing	_registry [ \"drwnOpenCVImageSinkNode\" ]
>164	PrimaryExpression	\"drwnOpenCVImageSinkNode\"
>165	Identifier	_registry
>166	ExpressionStatement	 
>167	AssignmentExpr	_registry [ \"drwnMATFileSourceNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeMATSource ) ) )
>168	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeMATSource ) ) )
>169	ArgumentList	wxBITMAP ( nodeMATSource )
>170	Argument	wxBITMAP ( nodeMATSource )
>171	CallExpression	wxBITMAP ( nodeMATSource )
>172	ArgumentList	nodeMATSource
>173	Argument	nodeMATSource
>174	Identifier	nodeMATSource
>175	Callee	wxBITMAP
>176	Identifier	wxBITMAP
>177	Callee	setIconMask
>178	Identifier	setIconMask
>179	ArrayIndexing	_registry [ \"drwnMATFileSourceNode\" ]
>180	PrimaryExpression	\"drwnMATFileSourceNode\"
>181	Identifier	_registry
>182	ExpressionStatement	 
>183	AssignmentExpr	_registry [ \"drwnMATFileSinkNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeMATSink ) ) )
>184	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeMATSink ) ) )
>185	ArgumentList	wxBITMAP ( nodeMATSink )
>186	Argument	wxBITMAP ( nodeMATSink )
>187	CallExpression	wxBITMAP ( nodeMATSink )
>188	ArgumentList	nodeMATSink
>189	Argument	nodeMATSink
>190	Identifier	nodeMATSink
>191	Callee	wxBITMAP
>192	Identifier	wxBITMAP
>193	Callee	setIconMask
>194	Identifier	setIconMask
>195	ArrayIndexing	_registry [ \"drwnMATFileSinkNode\" ]
>196	PrimaryExpression	\"drwnMATFileSinkNode\"
>197	Identifier	_registry
>198	ExpressionStatement	 
>199	AssignmentExpr	_registry [ \"drwnMatlabNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeMatlab ) ) )
>200	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeMatlab ) ) )
>201	ArgumentList	wxBITMAP ( nodeMatlab )
>202	Argument	wxBITMAP ( nodeMatlab )
>203	CallExpression	wxBITMAP ( nodeMatlab )
>204	ArgumentList	nodeMatlab
>205	Argument	nodeMatlab
>206	Identifier	nodeMatlab
>207	Callee	wxBITMAP
>208	Identifier	wxBITMAP
>209	Callee	setIconMask
>210	Identifier	setIconMask
>211	ArrayIndexing	_registry [ \"drwnMatlabNode\" ]
>212	PrimaryExpression	\"drwnMatlabNode\"
>213	Identifier	_registry
>214	ExpressionStatement	 
>215	AssignmentExpr	_registry [ \"drwnUnaryOpNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeUnaryOp ) ) )
>216	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeUnaryOp ) ) )
>217	ArgumentList	wxBITMAP ( nodeUnaryOp )
>218	Argument	wxBITMAP ( nodeUnaryOp )
>219	CallExpression	wxBITMAP ( nodeUnaryOp )
>220	ArgumentList	nodeUnaryOp
>221	Argument	nodeUnaryOp
>222	Identifier	nodeUnaryOp
>223	Callee	wxBITMAP
>224	Identifier	wxBITMAP
>225	Callee	setIconMask
>226	Identifier	setIconMask
>227	ArrayIndexing	_registry [ \"drwnUnaryOpNode\" ]
>228	PrimaryExpression	\"drwnUnaryOpNode\"
>229	Identifier	_registry
>230	ExpressionStatement	 
>231	AssignmentExpr	_registry [ \"drwnTextFileSourceNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeTextFileSource ) ) )
>232	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeTextFileSource ) ) )
>233	ArgumentList	wxBITMAP ( nodeTextFileSource )
>234	Argument	wxBITMAP ( nodeTextFileSource )
>235	CallExpression	wxBITMAP ( nodeTextFileSource )
>236	ArgumentList	nodeTextFileSource
>237	Argument	nodeTextFileSource
>238	Identifier	nodeTextFileSource
>239	Callee	wxBITMAP
>240	Identifier	wxBITMAP
>241	Callee	setIconMask
>242	Identifier	setIconMask
>243	ArrayIndexing	_registry [ \"drwnTextFileSourceNode\" ]
>244	PrimaryExpression	\"drwnTextFileSourceNode\"
>245	Identifier	_registry
>246	ExpressionStatement	 
>247	AssignmentExpr	_registry [ \"drwnTextFileSinkNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeTextFileSink ) ) )
>248	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeTextFileSink ) ) )
>249	ArgumentList	wxBITMAP ( nodeTextFileSink )
>250	Argument	wxBITMAP ( nodeTextFileSink )
>251	CallExpression	wxBITMAP ( nodeTextFileSink )
>252	ArgumentList	nodeTextFileSink
>253	Argument	nodeTextFileSink
>254	Identifier	nodeTextFileSink
>255	Callee	wxBITMAP
>256	Identifier	wxBITMAP
>257	Callee	setIconMask
>258	Identifier	setIconMask
>259	ArrayIndexing	_registry [ \"drwnTextFileSinkNode\" ]
>260	PrimaryExpression	\"drwnTextFileSinkNode\"
>261	Identifier	_registry
>262	ExpressionStatement	 
>263	AssignmentExpr	_registry [ \"drwnScatterPlotNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeScatterPlot ) ) )
>264	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeScatterPlot ) ) )
>265	ArgumentList	wxBITMAP ( nodeScatterPlot )
>266	Argument	wxBITMAP ( nodeScatterPlot )
>267	CallExpression	wxBITMAP ( nodeScatterPlot )
>268	ArgumentList	nodeScatterPlot
>269	Argument	nodeScatterPlot
>270	Identifier	nodeScatterPlot
>271	Callee	wxBITMAP
>272	Identifier	wxBITMAP
>273	Callee	setIconMask
>274	Identifier	setIconMask
>275	ArrayIndexing	_registry [ \"drwnScatterPlotNode\" ]
>276	PrimaryExpression	\"drwnScatterPlotNode\"
>277	Identifier	_registry
>278	ExpressionStatement	 
>279	AssignmentExpr	_registry [ \"drwnRollupNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeRollup ) ) )
>280	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeRollup ) ) )
>281	ArgumentList	wxBITMAP ( nodeRollup )
>282	Argument	wxBITMAP ( nodeRollup )
>283	CallExpression	wxBITMAP ( nodeRollup )
>284	ArgumentList	nodeRollup
>285	Argument	nodeRollup
>286	Identifier	nodeRollup
>287	Callee	wxBITMAP
>288	Identifier	wxBITMAP
>289	Callee	setIconMask
>290	Identifier	setIconMask
>291	ArrayIndexing	_registry [ \"drwnRollupNode\" ]
>292	PrimaryExpression	\"drwnRollupNode\"
>293	Identifier	_registry
>294	ExpressionStatement	 
>295	AssignmentExpr	_registry [ \"drwnRescaleNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeRescale ) ) )
>296	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeRescale ) ) )
>297	ArgumentList	wxBITMAP ( nodeRescale )
>298	Argument	wxBITMAP ( nodeRescale )
>299	CallExpression	wxBITMAP ( nodeRescale )
>300	ArgumentList	nodeRescale
>301	Argument	nodeRescale
>302	Identifier	nodeRescale
>303	Callee	wxBITMAP
>304	Identifier	wxBITMAP
>305	Callee	setIconMask
>306	Identifier	setIconMask
>307	ArrayIndexing	_registry [ \"drwnRescaleNode\" ]
>308	PrimaryExpression	\"drwnRescaleNode\"
>309	Identifier	_registry
>310	ExpressionStatement	 
>311	AssignmentExpr	_registry [ \"drwnPRCurveNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodePRCurve ) ) )
>312	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodePRCurve ) ) )
>313	ArgumentList	wxBITMAP ( nodePRCurve )
>314	Argument	wxBITMAP ( nodePRCurve )
>315	CallExpression	wxBITMAP ( nodePRCurve )
>316	ArgumentList	nodePRCurve
>317	Argument	nodePRCurve
>318	Identifier	nodePRCurve
>319	Callee	wxBITMAP
>320	Identifier	wxBITMAP
>321	Callee	setIconMask
>322	Identifier	setIconMask
>323	ArrayIndexing	_registry [ \"drwnPRCurveNode\" ]
>324	PrimaryExpression	\"drwnPRCurveNode\"
>325	Identifier	_registry
>326	ExpressionStatement	 
>327	AssignmentExpr	_registry [ \"drwnPCANode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodePCA ) ) )
>328	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodePCA ) ) )
>329	ArgumentList	wxBITMAP ( nodePCA )
>330	Argument	wxBITMAP ( nodePCA )
>331	CallExpression	wxBITMAP ( nodePCA )
>332	ArgumentList	nodePCA
>333	Argument	nodePCA
>334	Identifier	nodePCA
>335	Callee	wxBITMAP
>336	Identifier	wxBITMAP
>337	Callee	setIconMask
>338	Identifier	setIconMask
>339	ArrayIndexing	_registry [ \"drwnPCANode\" ]
>340	PrimaryExpression	\"drwnPCANode\"
>341	Identifier	_registry
>342	ExpressionStatement	 
>343	AssignmentExpr	_registry [ \"drwnMultiClassLDANode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeMultiClassLDA ) ) )
>344	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeMultiClassLDA ) ) )
>345	ArgumentList	wxBITMAP ( nodeMultiClassLDA )
>346	Argument	wxBITMAP ( nodeMultiClassLDA )
>347	CallExpression	wxBITMAP ( nodeMultiClassLDA )
>348	ArgumentList	nodeMultiClassLDA
>349	Argument	nodeMultiClassLDA
>350	Identifier	nodeMultiClassLDA
>351	Callee	wxBITMAP
>352	Identifier	wxBITMAP
>353	Callee	setIconMask
>354	Identifier	setIconMask
>355	ArrayIndexing	_registry [ \"drwnMultiClassLDANode\" ]
>356	PrimaryExpression	\"drwnMultiClassLDANode\"
>357	Identifier	_registry
>358	ExpressionStatement	 
>359	AssignmentExpr	_registry [ \"drwnMultiClassLogisticNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeLogistic ) ) )
>360	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeLogistic ) ) )
>361	ArgumentList	wxBITMAP ( nodeLogistic )
>362	Argument	wxBITMAP ( nodeLogistic )
>363	CallExpression	wxBITMAP ( nodeLogistic )
>364	ArgumentList	nodeLogistic
>365	Argument	nodeLogistic
>366	Identifier	nodeLogistic
>367	Callee	wxBITMAP
>368	Identifier	wxBITMAP
>369	Callee	setIconMask
>370	Identifier	setIconMask
>371	ArrayIndexing	_registry [ \"drwnMultiClassLogisticNode\" ]
>372	PrimaryExpression	\"drwnMultiClassLogisticNode\"
>373	Identifier	_registry
>374	ExpressionStatement	 
>375	AssignmentExpr	_registry [ \"drwnLUTEncoderNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeLUTEncoder ) ) )
>376	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeLUTEncoder ) ) )
>377	ArgumentList	wxBITMAP ( nodeLUTEncoder )
>378	Argument	wxBITMAP ( nodeLUTEncoder )
>379	CallExpression	wxBITMAP ( nodeLUTEncoder )
>380	ArgumentList	nodeLUTEncoder
>381	Argument	nodeLUTEncoder
>382	Identifier	nodeLUTEncoder
>383	Callee	wxBITMAP
>384	Identifier	wxBITMAP
>385	Callee	setIconMask
>386	Identifier	setIconMask
>387	ArrayIndexing	_registry [ \"drwnLUTEncoderNode\" ]
>388	PrimaryExpression	\"drwnLUTEncoderNode\"
>389	Identifier	_registry
>390	ExpressionStatement	 
>391	AssignmentExpr	_registry [ \"drwnLUTDecoderNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeLUTDecoder ) ) )
>392	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeLUTDecoder ) ) )
>393	ArgumentList	wxBITMAP ( nodeLUTDecoder )
>394	Argument	wxBITMAP ( nodeLUTDecoder )
>395	CallExpression	wxBITMAP ( nodeLUTDecoder )
>396	ArgumentList	nodeLUTDecoder
>397	Argument	nodeLUTDecoder
>398	Identifier	nodeLUTDecoder
>399	Callee	wxBITMAP
>400	Identifier	wxBITMAP
>401	Callee	setIconMask
>402	Identifier	setIconMask
>403	ArrayIndexing	_registry [ \"drwnLUTDecoderNode\" ]
>404	PrimaryExpression	\"drwnLUTDecoderNode\"
>405	Identifier	_registry
>406	ExpressionStatement	 
>407	AssignmentExpr	_registry [ \"drwnLinearTransformNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeProjection ) ) )
>408	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeProjection ) ) )
>409	ArgumentList	wxBITMAP ( nodeProjection )
>410	Argument	wxBITMAP ( nodeProjection )
>411	CallExpression	wxBITMAP ( nodeProjection )
>412	ArgumentList	nodeProjection
>413	Argument	nodeProjection
>414	Identifier	nodeProjection
>415	Callee	wxBITMAP
>416	Identifier	wxBITMAP
>417	Callee	setIconMask
>418	Identifier	setIconMask
>419	ArrayIndexing	_registry [ \"drwnLinearTransformNode\" ]
>420	PrimaryExpression	\"drwnLinearTransformNode\"
>421	Identifier	_registry
>422	ExpressionStatement	 
>423	AssignmentExpr	_registry [ \"drwnLinearRegressionNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeLinear ) ) )
>424	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeLinear ) ) )
>425	ArgumentList	wxBITMAP ( nodeLinear )
>426	Argument	wxBITMAP ( nodeLinear )
>427	CallExpression	wxBITMAP ( nodeLinear )
>428	ArgumentList	nodeLinear
>429	Argument	nodeLinear
>430	Identifier	nodeLinear
>431	Callee	wxBITMAP
>432	Identifier	wxBITMAP
>433	Callee	setIconMask
>434	Identifier	setIconMask
>435	ArrayIndexing	_registry [ \"drwnLinearRegressionNode\" ]
>436	PrimaryExpression	\"drwnLinearRegressionNode\"
>437	Identifier	_registry
>438	ExpressionStatement	 
>439	AssignmentExpr	_registry [ \"drwnImportFilesNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeDirSource ) ) )
>440	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeDirSource ) ) )
>441	ArgumentList	wxBITMAP ( nodeDirSource )
>442	Argument	wxBITMAP ( nodeDirSource )
>443	CallExpression	wxBITMAP ( nodeDirSource )
>444	ArgumentList	nodeDirSource
>445	Argument	nodeDirSource
>446	Identifier	nodeDirSource
>447	Callee	wxBITMAP
>448	Identifier	wxBITMAP
>449	Callee	setIconMask
>450	Identifier	setIconMask
>451	ArrayIndexing	_registry [ \"drwnImportFilesNode\" ]
>452	PrimaryExpression	\"drwnImportFilesNode\"
>453	Identifier	_registry
>454	ExpressionStatement	 
>455	AssignmentExpr	_registry [ \"drwnExportFilesNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeDirSink ) ) )
>456	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeDirSink ) ) )
>457	ArgumentList	wxBITMAP ( nodeDirSink )
>458	Argument	wxBITMAP ( nodeDirSink )
>459	CallExpression	wxBITMAP ( nodeDirSink )
>460	ArgumentList	nodeDirSink
>461	Argument	nodeDirSink
>462	Identifier	nodeDirSink
>463	Callee	wxBITMAP
>464	Identifier	wxBITMAP
>465	Callee	setIconMask
>466	Identifier	setIconMask
>467	ArrayIndexing	_registry [ \"drwnExportFilesNode\" ]
>468	PrimaryExpression	\"drwnExportFilesNode\"
>469	Identifier	_registry
>470	ExpressionStatement	 
>471	AssignmentExpr	_registry [ \"drwnDitherPlotNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeDitherPlot ) ) )
>472	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeDitherPlot ) ) )
>473	ArgumentList	wxBITMAP ( nodeDitherPlot )
>474	Argument	wxBITMAP ( nodeDitherPlot )
>475	CallExpression	wxBITMAP ( nodeDitherPlot )
>476	ArgumentList	nodeDitherPlot
>477	Argument	nodeDitherPlot
>478	Identifier	nodeDitherPlot
>479	Callee	wxBITMAP
>480	Identifier	wxBITMAP
>481	Callee	setIconMask
>482	Identifier	setIconMask
>483	ArrayIndexing	_registry [ \"drwnDitherPlotNode\" ]
>484	PrimaryExpression	\"drwnDitherPlotNode\"
>485	Identifier	_registry
>486	ExpressionStatement	 
>487	AssignmentExpr	_registry [ \"drwnDecisionTreeNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeDecisionTree ) ) )
>488	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeDecisionTree ) ) )
>489	ArgumentList	wxBITMAP ( nodeDecisionTree )
>490	Argument	wxBITMAP ( nodeDecisionTree )
>491	CallExpression	wxBITMAP ( nodeDecisionTree )
>492	ArgumentList	nodeDecisionTree
>493	Argument	nodeDecisionTree
>494	Identifier	nodeDecisionTree
>495	Callee	wxBITMAP
>496	Identifier	wxBITMAP
>497	Callee	setIconMask
>498	Identifier	setIconMask
>499	ArrayIndexing	_registry [ \"drwnDecisionTreeNode\" ]
>500	PrimaryExpression	\"drwnDecisionTreeNode\"
>501	Identifier	_registry
>502	ExpressionStatement	 
>503	AssignmentExpr	_registry [ \"drwnDataExplorerNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeDataExplorer ) ) )
>504	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeDataExplorer ) ) )
>505	ArgumentList	wxBITMAP ( nodeDataExplorer )
>506	Argument	wxBITMAP ( nodeDataExplorer )
>507	CallExpression	wxBITMAP ( nodeDataExplorer )
>508	ArgumentList	nodeDataExplorer
>509	Argument	nodeDataExplorer
>510	Identifier	nodeDataExplorer
>511	Callee	wxBITMAP
>512	Identifier	wxBITMAP
>513	Callee	setIconMask
>514	Identifier	setIconMask
>515	ArrayIndexing	_registry [ \"drwnDataExplorerNode\" ]
>516	PrimaryExpression	\"drwnDataExplorerNode\"
>517	Identifier	_registry
>518	ExpressionStatement	 
>519	AssignmentExpr	_registry [ \"drwnConfusionMatrixNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeConfusionMatrix ) ) )
>520	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeConfusionMatrix ) ) )
>521	ArgumentList	wxBITMAP ( nodeConfusionMatrix )
>522	Argument	wxBITMAP ( nodeConfusionMatrix )
>523	CallExpression	wxBITMAP ( nodeConfusionMatrix )
>524	ArgumentList	nodeConfusionMatrix
>525	Argument	nodeConfusionMatrix
>526	Identifier	nodeConfusionMatrix
>527	Callee	wxBITMAP
>528	Identifier	wxBITMAP
>529	Callee	setIconMask
>530	Identifier	setIconMask
>531	ArrayIndexing	_registry [ \"drwnConfusionMatrixNode\" ]
>532	PrimaryExpression	\"drwnConfusionMatrixNode\"
>533	Identifier	_registry
>534	ExpressionStatement	 
>535	AssignmentExpr	_registry [ \"drwnConcatenationNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeConcatenation ) ) )
>536	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeConcatenation ) ) )
>537	ArgumentList	wxBITMAP ( nodeConcatenation )
>538	Argument	wxBITMAP ( nodeConcatenation )
>539	CallExpression	wxBITMAP ( nodeConcatenation )
>540	ArgumentList	nodeConcatenation
>541	Argument	nodeConcatenation
>542	Identifier	nodeConcatenation
>543	Callee	wxBITMAP
>544	Identifier	wxBITMAP
>545	Callee	setIconMask
>546	Identifier	setIconMask
>547	ArrayIndexing	_registry [ \"drwnConcatenationNode\" ]
>548	PrimaryExpression	\"drwnConcatenationNode\"
>549	Identifier	_registry
>550	ExpressionStatement	 
>551	AssignmentExpr	_registry [ \"drwnBoostedClassifierNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeBoosting ) ) )
>552	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeBoosting ) ) )
>553	ArgumentList	wxBITMAP ( nodeBoosting )
>554	Argument	wxBITMAP ( nodeBoosting )
>555	CallExpression	wxBITMAP ( nodeBoosting )
>556	ArgumentList	nodeBoosting
>557	Argument	nodeBoosting
>558	Identifier	nodeBoosting
>559	Callee	wxBITMAP
>560	Identifier	wxBITMAP
>561	Callee	setIconMask
>562	Identifier	setIconMask
>563	ArrayIndexing	_registry [ \"drwnBoostedClassifierNode\" ]
>564	PrimaryExpression	\"drwnBoostedClassifierNode\"
>565	Identifier	_registry
>566	ExpressionStatement	 
>567	AssignmentExpr	_registry [ \"drwnBinaryOpNode\" ] = setIconMask ( new wxBitmap ( wxBITMAP ( nodeBinaryOp ) ) )
>568	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeBinaryOp ) ) )
>569	ArgumentList	wxBITMAP ( nodeBinaryOp )
>570	Argument	wxBITMAP ( nodeBinaryOp )
>571	CallExpression	wxBITMAP ( nodeBinaryOp )
>572	ArgumentList	nodeBinaryOp
>573	Argument	nodeBinaryOp
>574	Identifier	nodeBinaryOp
>575	Callee	wxBITMAP
>576	Identifier	wxBITMAP
>577	Callee	setIconMask
>578	Identifier	setIconMask
>579	ArrayIndexing	_registry [ \"drwnBinaryOpNode\" ]
>580	PrimaryExpression	\"drwnBinaryOpNode\"
>581	Identifier	_registry
>582	ExpressionStatement	 
>583	AssignmentExpr	_defaultIcon = setIconMask ( new wxBitmap ( wxBITMAP ( nodeGeneric ) ) )
>584	CallExpression	setIconMask ( new wxBitmap ( wxBITMAP ( nodeGeneric ) ) )
>585	ArgumentList	wxBITMAP ( nodeGeneric )
>586	Argument	wxBITMAP ( nodeGeneric )
>587	CallExpression	wxBITMAP ( nodeGeneric )
>588	ArgumentList	nodeGeneric
>589	Argument	nodeGeneric
>590	Identifier	nodeGeneric
>591	Callee	wxBITMAP
>592	Identifier	wxBITMAP
>593	Callee	setIconMask
>594	Identifier	setIconMask
>595	Identifier	_defaultIcon
>636	FunctionDef	drwnIconFactory 
>637	ParameterList	 
>638	CompoundStatement	 
>639	ExpressionStatement	 
>640	Identifier	_defaultIcon
>641	IfStatement	if ( _defaultIcon != NULL )
>642	Statement	 
>643	Condition	 
>644	EqualityExpression	_defaultIcon != NULL
>645	Identifier	NULL
>646	Identifier	_defaultIcon
>647	ForStatement	for ( map < string , wxBitmap * > 
>648	CompoundStatement	 
>649	ExpressionStatement	 
>650	PtrMemberAccess	it -> second
>651	Identifier	second
>652	Identifier	it
>653	Statement	 
>654	IncDecOp	 
>655	IncDec	++
>656	Identifier	it
>657	Condition	 
>658	EqualityExpression	it != _registry . end ( )
>659	CallExpression	_registry . end ( )
>660	ArgumentList	 
>661	Callee	_registry . end
>662	MemberAccess	_registry . end
>663	Identifier	end
>664	Identifier	_registry
>665	Identifier	it
>666	ForInit	 
>667	IdentifierDeclStatement	map < string , wxBitmap * > 
>668	IdentifierDecl	it = _registry . begin ( )
>669	AssignmentExpr	it = _registry . begin ( )
>670	CallExpression	_registry . begin ( )
>671	ArgumentList	 
>672	Callee	_registry . begin
>673	MemberAccess	_registry . begin
>674	Identifier	begin
>675	Identifier	_registry
>676	Identifier	it
>677	Identifier	it
>678	IdentifierDeclType	map < string , wxBitmap * > 
>688	FunctionDef	drwnIconFactory 
>689	ParameterList	 
>690	ReturnType	drwnIconFactory &
>691	CompoundStatement	 
>692	ReturnStatement	 
>693	Identifier	factory
>694	IdentifierDeclStatement	 
>695	IdentifierDecl	factory
>696	Identifier	factory
>697	IdentifierDeclType	drwnIconFactory
>698	Statement	 
>703	FunctionDef	drwnIconFactory 
>704	ParameterList	const char * name , const wxBitmap * bmp
>705	Parameter	 
>706	Identifier	bmp
>707	ParameterType	const wxBitmap *
>708	Parameter	 
>709	Identifier	name
>710	ParameterType	const char *
>711	ReturnType	void
>712	CompoundStatement	 
>713	IfStatement	if ( it != _registry . end ( ) )
>714	ElseStatement	else
>715	CompoundStatement	 
>716	ExpressionStatement	 
>717	AssignmentExpr	_registry [ string ( name ) ] = setIconMask ( new wxBitmap ( * bmp ) )
>718	CallExpression	setIconMask ( new wxBitmap ( * bmp ) )
>719	ArgumentList	* bmp
>720	Argument	* bmp
>721	UnaryOp	* bmp
>722	Identifier	bmp
>723	UnaryOperator	*
>724	Callee	setIconMask
>725	Identifier	setIconMask
>726	ArrayIndexing	_registry [ string ( name ) ]
>727	CallExpression	string ( name )
>728	ArgumentList	name
>729	Argument	name
>730	Identifier	name
>731	Callee	string
>732	Identifier	string
>733	Identifier	_registry
>734	CompoundStatement	 
>735	ExpressionStatement	 
>736	AssignmentExpr	it -> second = setIconMask ( new wxBitmap ( * bmp ) )
>737	CallExpression	setIconMask ( new wxBitmap ( * bmp ) )
>738	ArgumentList	* bmp
>739	Argument	* bmp
>740	UnaryOp	* bmp
>741	Identifier	bmp
>742	UnaryOperator	*
>743	Callee	setIconMask
>744	Identifier	setIconMask
>745	PtrMemberAccess	it -> second
>746	Identifier	second
>747	Identifier	it
>748	ExpressionStatement	 
>749	PtrMemberAccess	it -> second
>750	Identifier	second
>751	Identifier	it
>752	Statement	 
>753	ExpressionStatement	 
>754	CallExpression	DRWN_LOG_WARNING ( \"replacing existing icon for \\"\" << name << \"\\"\" )
>755	ArgumentList	\"replacing existing icon for \\"\" << name << \"\\"\"
>756	Argument	\"replacing existing icon for \\"\" << name << \"\\"\"
>757	ShiftExpression	\"replacing existing icon for \\"\" << name << \"\\"\"
>758	ShiftExpression	name << \"\\"\"
>759	PrimaryExpression	\"\\"\"
>760	Identifier	name
>761	PrimaryExpression	\"replacing existing icon for \\"\"
>762	Callee	DRWN_LOG_WARNING
>763	Identifier	DRWN_LOG_WARNING
>764	Condition	 
>765	EqualityExpression	it != _registry . end ( )
>766	CallExpression	_registry . end ( )
>767	ArgumentList	 
>768	Callee	_registry . end
>769	MemberAccess	_registry . end
>770	Identifier	end
>771	Identifier	_registry
>772	Identifier	it
>773	IdentifierDeclStatement	 
>774	IdentifierDecl	it = _registry . find ( string ( name ) )
>775	AssignmentExpr	it = _registry . find ( string ( name ) )
>776	CallExpression	_registry . find ( string ( name ) )
>777	ArgumentList	string ( name )
>778	Argument	string ( name )
>779	CallExpression	string ( name )
>780	ArgumentList	name
>781	Argument	name
>782	Identifier	name
>783	Callee	string
>784	Identifier	string
>785	Callee	_registry . find
>786	MemberAccess	_registry . find
>787	Identifier	find
>788	Identifier	_registry
>789	Identifier	it
>790	Identifier	it
>791	IdentifierDeclType	map < string , wxBitmap * > 
>792	ExpressionStatement	 
>793	CallExpression	DRWN_ASSERT ( bmp != NULL )
>794	ArgumentList	bmp != NULL
>795	Argument	bmp != NULL
>796	EqualityExpression	bmp != NULL
>797	Identifier	NULL
>798	Identifier	bmp
>799	Callee	DRWN_ASSERT
>800	Identifier	DRWN_ASSERT
>801	ExpressionStatement	 
>802	CallExpression	DRWN_ASSERT ( name != NULL )
>803	ArgumentList	name != NULL
>804	Argument	name != NULL
>805	EqualityExpression	name != NULL
>806	Identifier	NULL
>807	Identifier	name
>808	Callee	DRWN_ASSERT
>809	Identifier	DRWN_ASSERT
>827	FunctionDef	drwnIconFactory 
>828	ParameterList	const char * name
>829	Parameter	 
>830	Identifier	name
>831	ParameterType	const char *
>832	ReturnType	void
>833	CompoundStatement	 
>834	IfStatement	if ( it != _registry . end ( ) )
>835	ElseStatement	else
>836	CompoundStatement	 
>837	ExpressionStatement	 
>838	CallExpression	DRWN_LOG_ERROR ( \"icon \\"\" << name << \"\\" is not in the icon registry\" )
>839	ArgumentList	\"icon \\"\" << name << \"\\" is not in the icon registry\"
>840	Argument	\"icon \\"\" << name << \"\\" is not in the icon registry\"
>841	ShiftExpression	\"icon \\"\" << name << \"\\" is not in the icon registry\"
>842	ShiftExpression	name << \"\\" is not in the icon registry\"
>843	PrimaryExpression	\"\\" is not in the icon registry\"
>844	Identifier	name
>845	PrimaryExpression	\"icon \\"\"
>846	Callee	DRWN_LOG_ERROR
>847	Identifier	DRWN_LOG_ERROR
>848	CompoundStatement	 
>849	ExpressionStatement	 
>850	CallExpression	_registry . erase ( it )
>851	ArgumentList	it
>852	Argument	it
>853	Identifier	it
>854	Callee	_registry . erase
>855	MemberAccess	_registry . erase
>856	Identifier	erase
>857	Identifier	_registry
>858	ExpressionStatement	 
>859	PtrMemberAccess	it -> second
>860	Identifier	second
>861	Identifier	it
>862	Statement	 
>863	Condition	 
>864	EqualityExpression	it != _registry . end ( )
>865	CallExpression	_registry . end ( )
>866	ArgumentList	 
>867	Callee	_registry . end
>868	MemberAccess	_registry . end
>869	Identifier	end
>870	Identifier	_registry
>871	Identifier	it
>872	IdentifierDeclStatement	 
>873	IdentifierDecl	it = _registry . find ( string ( name ) )
>874	AssignmentExpr	it = _registry . find ( string ( name ) )
>875	CallExpression	_registry . find ( string ( name ) )
>876	ArgumentList	string ( name )
>877	Argument	string ( name )
>878	CallExpression	string ( name )
>879	ArgumentList	name
>880	Argument	name
>881	Identifier	name
>882	Callee	string
>883	Identifier	string
>884	Callee	_registry . find
>885	MemberAccess	_registry . find
>886	Identifier	find
>887	Identifier	_registry
>888	Identifier	it
>889	Identifier	it
>890	IdentifierDeclType	map < string , wxBitmap * > 
>891	ExpressionStatement	 
>892	CallExpression	DRWN_ASSERT ( name != NULL )
>893	ArgumentList	name != NULL
>894	Argument	name != NULL
>895	EqualityExpression	name != NULL
>896	Identifier	NULL
>897	Identifier	name
>898	Callee	DRWN_ASSERT
>899	Identifier	DRWN_ASSERT
>910	FunctionDef	drwnIconFactory 
>911	ParameterList	const char * name
>912	Parameter	 
>913	Identifier	name
>914	ParameterType	const char *
>915	ReturnType	const wxBitmap *
>916	CompoundStatement	 
>917	ReturnStatement	 
>918	Identifier	_defaultIcon
>919	ExpressionStatement	 
>920	CallExpression	DRWN_ASSERT ( _defaultIcon != NULL )
>921	ArgumentList	_defaultIcon != NULL
>922	Argument	_defaultIcon != NULL
>923	EqualityExpression	_defaultIcon != NULL
>924	Identifier	NULL
>925	Identifier	_defaultIcon
>926	Callee	DRWN_ASSERT
>927	Identifier	DRWN_ASSERT
>928	IfStatement	if ( it != _registry . end ( ) )
>929	CompoundStatement	 
>930	ReturnStatement	 
>931	PtrMemberAccess	it -> second
>932	Identifier	second
>933	Identifier	it
>934	ExpressionStatement	 
>935	CallExpression	DRWN_ASSERT ( it -> second != NULL )
>936	ArgumentList	it -> second != NULL
>937	Argument	it -> second != NULL
>938	EqualityExpression	it -> second != NULL
>939	Identifier	NULL
>940	PtrMemberAccess	it -> second
>941	Identifier	second
>942	Identifier	it
>943	Callee	DRWN_ASSERT
>944	Identifier	DRWN_ASSERT
>945	Condition	 
>946	EqualityExpression	it != _registry . end ( )
>947	CallExpression	_registry . end ( )
>948	ArgumentList	 
>949	Callee	_registry . end
>950	MemberAccess	_registry . end
>951	Identifier	end
>952	Identifier	_registry
>953	Identifier	it
>954	IdentifierDeclStatement	 
>955	IdentifierDecl	it = _registry . find ( string ( name ) )
>956	AssignmentExpr	it = _registry . find ( string ( name ) )
>957	CallExpression	_registry . find ( string ( name ) )
>958	ArgumentList	string ( name )
>959	Argument	string ( name )
>960	CallExpression	string ( name )
>961	ArgumentList	name
>962	Argument	name
>963	Identifier	name
>964	Callee	string
>965	Identifier	string
>966	Callee	_registry . find
>967	MemberAccess	_registry . find
>968	Identifier	find
>969	Identifier	_registry
>970	Identifier	it
>971	Identifier	it
>972	IdentifierDeclType	map < string , wxBitmap * > 
>973	ExpressionStatement	 
>974	CallExpression	DRWN_ASSERT ( name != NULL )
>975	ArgumentList	name != NULL
>976	Argument	name != NULL
>977	EqualityExpression	name != NULL
>978	Identifier	NULL
>979	Identifier	name
>980	Callee	DRWN_ASSERT
>981	Identifier	DRWN_ASSERT
>995	FunctionDef	drwnIconFactory 
>996	ParameterList	wxBitmap * bmp
>997	Parameter	 
>998	Identifier	bmp
>999	ParameterType	wxBitmap *
>1000	ReturnType	wxBitmap *
>1001	CompoundStatement	 
>1002	ReturnStatement	 
>1003	Identifier	bmp
>1004	ExpressionStatement	 
>1005	CallExpression	bmp -> SetMask ( new wxMask ( * bmp , maskColour ) )
>1006	ArgumentList	* bmp , maskColour
>1007	Argument	* bmp , maskColour
>1008	Expression	* bmp , maskColour
>1009	Identifier	maskColour
>1010	UnaryOp	* bmp
>1011	Identifier	bmp
>1012	UnaryOperator	*
>1013	Callee	bmp -> SetMask
>1014	PtrMemberAccess	bmp -> SetMask
>1015	Identifier	SetMask
>1016	Identifier	bmp
>1017	IdentifierDeclStatement	 
>1018	IdentifierDecl	maskColour ( bmpImg . GetRed ( 0 , 0 ) , bmpImg . GetGreen ( 0 , 0 ) , bmpImg . GetBlue ( 0 , 0 ) )
>1019	Expression	bmpImg . GetRed ( 0 , 0 ) , bmpImg . GetGreen ( 0 , 0 ) , bmpImg . GetBlue ( 0 , 0 )
>1020	Expression	bmpImg . GetGreen ( 0 , 0 ) , bmpImg . GetBlue ( 0 , 0 )
>1021	CallExpression	bmpImg . GetBlue ( 0 , 0 )
>1022	ArgumentList	0
>1023	Argument	0
>1024	PrimaryExpression	0
>1025	Argument	0
>1026	PrimaryExpression	0
>1027	Callee	bmpImg . GetBlue
>1028	MemberAccess	bmpImg . GetBlue
>1029	Identifier	GetBlue
>1030	Identifier	bmpImg
>1031	CallExpression	bmpImg . GetGreen ( 0 , 0 )
>1032	ArgumentList	0
>1033	Argument	0
>1034	PrimaryExpression	0
>1035	Argument	0
>1036	PrimaryExpression	0
>1037	Callee	bmpImg . GetGreen
>1038	MemberAccess	bmpImg . GetGreen
>1039	Identifier	GetGreen
>1040	Identifier	bmpImg
>1041	CallExpression	bmpImg . GetRed ( 0 , 0 )
>1042	ArgumentList	0
>1043	Argument	0
>1044	PrimaryExpression	0
>1045	Argument	0
>1046	PrimaryExpression	0
>1047	Callee	bmpImg . GetRed
>1048	MemberAccess	bmpImg . GetRed
>1049	Identifier	GetRed
>1050	Identifier	bmpImg
>1051	Identifier	maskColour
>1052	IdentifierDeclType	wxColour
>1053	IdentifierDeclStatement	 
>1054	IdentifierDecl	bmpImg = bmp -> ConvertToImage ( )
>1055	AssignmentExpr	bmpImg = bmp -> ConvertToImage ( )
>1056	CallExpression	bmp -> ConvertToImage ( )
>1057	ArgumentList	 
>1058	Callee	bmp -> ConvertToImage
>1059	PtrMemberAccess	bmp -> ConvertToImage
>1060	Identifier	ConvertToImage
>1061	Identifier	bmp
>1062	Identifier	bmpImg
>1063	Identifier	bmpImg
>1064	IdentifierDeclType	wxImage
<3=5,4
<5=582,566,550,534,518,502,486,470,454,438,422,406,390,374,358,342,326,310,294,278,262,246,230,214,198,182,166,150,134,118,102,86,70,54,38,22,6
<6=7
<7=19,8
<8=17,9
<9=10
<10=11
<11=15,12
<12=13
<13=14
<15=16
<17=18
<19=21,20
<22=23
<23=35,24
<24=33,25
<25=26
<26=27
<27=31,28
<28=29
<29=30
<31=32
<33=34
<35=37,36
<38=39
<39=51,40
<40=49,41
<41=42
<42=43
<43=47,44
<44=45
<45=46
<47=48
<49=50
<51=53,52
<54=55
<55=67,56
<56=65,57
<57=58
<58=59
<59=63,60
<60=61
<61=62
<63=64
<65=66
<67=69,68
<70=71
<71=83,72
<72=81,73
<73=74
<74=75
<75=79,76
<76=77
<77=78
<79=80
<81=82
<83=85,84
<86=87
<87=99,88
<88=97,89
<89=90
<90=91
<91=95,92
<92=93
<93=94
<95=96
<97=98
<99=101,100
<102=103
<103=115,104
<104=113,105
<105=106
<106=107
<107=111,108
<108=109
<109=110
<111=112
<113=114
<115=117,116
<118=119
<119=131,120
<120=129,121
<121=122
<122=123
<123=127,124
<124=125
<125=126
<127=128
<129=130
<131=133,132
<134=135
<135=147,136
<136=145,137
<137=138
<138=139
<139=143,140
<140=141
<141=142
<143=144
<145=146
<147=149,148
<150=151
<151=163,152
<152=161,153
<153=154
<154=155
<155=159,156
<156=157
<157=158
<159=160
<161=162
<163=165,164
<166=167
<167=179,168
<168=177,169
<169=170
<170=171
<171=175,172
<172=173
<173=174
<175=176
<177=178
<179=181,180
<182=183
<183=195,184
<184=193,185
<185=186
<186=187
<187=191,188
<188=189
<189=190
<191=192
<193=194
<195=197,196
<198=199
<199=211,200
<200=209,201
<201=202
<202=203
<203=207,204
<204=205
<205=206
<207=208
<209=210
<211=213,212
<214=215
<215=227,216
<216=225,217
<217=218
<218=219
<219=223,220
<220=221
<221=222
<223=224
<225=226
<227=229,228
<230=231
<231=243,232
<232=241,233
<233=234
<234=235
<235=239,236
<236=237
<237=238
<239=240
<241=242
<243=245,244
<246=247
<247=259,248
<248=257,249
<249=250
<250=251
<251=255,252
<252=253
<253=254
<255=256
<257=258
<259=261,260
<262=263
<263=275,264
<264=273,265
<265=266
<266=267
<267=271,268
<268=269
<269=270
<271=272
<273=274
<275=277,276
<278=279
<279=291,280
<280=289,281
<281=282
<282=283
<283=287,284
<284=285
<285=286
<287=288
<289=290
<291=293,292
<294=295
<295=307,296
<296=305,297
<297=298
<298=299
<299=303,300
<300=301
<301=302
<303=304
<305=306
<307=309,308
<310=311
<311=323,312
<312=321,313
<313=314
<314=315
<315=319,316
<316=317
<317=318
<319=320
<321=322
<323=325,324
<326=327
<327=339,328
<328=337,329
<329=330
<330=331
<331=335,332
<332=333
<333=334
<335=336
<337=338
<339=341,340
<342=343
<343=355,344
<344=353,345
<345=346
<346=347
<347=351,348
<348=349
<349=350
<351=352
<353=354
<355=357,356
<358=359
<359=371,360
<360=369,361
<361=362
<362=363
<363=367,364
<364=365
<365=366
<367=368
<369=370
<371=373,372
<374=375
<375=387,376
<376=385,377
<377=378
<378=379
<379=383,380
<380=381
<381=382
<383=384
<385=386
<387=389,388
<390=391
<391=403,392
<392=401,393
<393=394
<394=395
<395=399,396
<396=397
<397=398
<399=400
<401=402
<403=405,404
<406=407
<407=419,408
<408=417,409
<409=410
<410=411
<411=415,412
<412=413
<413=414
<415=416
<417=418
<419=421,420
<422=423
<423=435,424
<424=433,425
<425=426
<426=427
<427=431,428
<428=429
<429=430
<431=432
<433=434
<435=437,436
<438=439
<439=451,440
<440=449,441
<441=442
<442=443
<443=447,444
<444=445
<445=446
<447=448
<449=450
<451=453,452
<454=455
<455=467,456
<456=465,457
<457=458
<458=459
<459=463,460
<460=461
<461=462
<463=464
<465=466
<467=469,468
<470=471
<471=483,472
<472=481,473
<473=474
<474=475
<475=479,476
<476=477
<477=478
<479=480
<481=482
<483=485,484
<486=487
<487=499,488
<488=497,489
<489=490
<490=491
<491=495,492
<492=493
<493=494
<495=496
<497=498
<499=501,500
<502=503
<503=515,504
<504=513,505
<505=506
<506=507
<507=511,508
<508=509
<509=510
<511=512
<513=514
<515=517,516
<518=519
<519=531,520
<520=529,521
<521=522
<522=523
<523=527,524
<524=525
<525=526
<527=528
<529=530
<531=533,532
<534=535
<535=547,536
<536=545,537
<537=538
<538=539
<539=543,540
<540=541
<541=542
<543=544
<545=546
<547=549,548
<550=551
<551=563,552
<552=561,553
<553=554
<554=555
<555=559,556
<556=557
<557=558
<559=560
<561=562
<563=565,564
<566=567
<567=579,568
<568=577,569
<569=570
<570=571
<571=575,572
<572=573
<573=574
<575=576
<577=578
<579=581,580
<582=583
<583=595,584
<584=593,585
<585=586
<586=587
<587=591,588
<588=589
<589=590
<591=592
<593=594
<636=638,637
<638=647,641,639
<639=640
<641=643,642
<643=644
<644=646,645
<647=666,657,654,648
<648=653,649
<649=650
<650=652,651
<654=656,655
<657=658
<658=665,659
<659=661,660
<661=662
<662=664,663
<666=667
<667=668
<668=678,677,669
<669=676,670
<670=672,671
<672=673
<673=675,674
<688=691,690,689
<691=698,694,692
<692=693
<694=695
<695=697,696
<703=712,711,704
<704=708,705
<705=707,706
<708=710,709
<712=801,792,773,713
<713=764,734,714
<714=715
<715=716
<716=717
<717=726,718
<718=724,719
<719=720
<720=721
<721=723,722
<724=725
<726=733,727
<727=731,728
<728=729
<729=730
<731=732
<734=753,752,748,735
<735=736
<736=745,737
<737=743,738
<738=739
<739=740
<740=742,741
<743=744
<745=747,746
<748=749
<749=751,750
<753=754
<754=762,755
<755=756
<756=757
<757=761,758
<758=760,759
<762=763
<764=765
<765=772,766
<766=768,767
<768=769
<769=771,770
<773=774
<774=791,790,775
<775=789,776
<776=785,777
<777=778
<778=779
<779=783,780
<780=781
<781=782
<783=784
<785=786
<786=788,787
<792=793
<793=799,794
<794=795
<795=796
<796=798,797
<799=800
<801=802
<802=808,803
<803=804
<804=805
<805=807,806
<808=809
<827=833,832,828
<828=829
<829=831,830
<833=891,872,834
<834=863,848,835
<835=836
<836=837
<837=838
<838=846,839
<839=840
<840=841
<841=845,842
<842=844,843
<846=847
<848=862,858,849
<849=850
<850=854,851
<851=852
<852=853
<854=855
<855=857,856
<858=859
<859=861,860
<863=864
<864=871,865
<865=867,866
<867=868
<868=870,869
<872=873
<873=890,889,874
<874=888,875
<875=884,876
<876=877
<877=878
<878=882,879
<879=880
<880=881
<882=883
<884=885
<885=887,886
<891=892
<892=898,893
<893=894
<894=895
<895=897,896
<898=899
<910=916,915,911
<911=912
<912=914,913
<916=973,954,928,919,917
<917=918
<919=920
<920=926,921
<921=922
<922=923
<923=925,924
<926=927
<928=945,929
<929=934,930
<930=931
<931=933,932
<934=935
<935=943,936
<936=937
<937=938
<938=940,939
<940=942,941
<943=944
<945=946
<946=953,947
<947=949,948
<949=950
<950=952,951
<954=955
<955=972,971,956
<956=970,957
<957=966,958
<958=959
<959=960
<960=964,961
<961=962
<962=963
<964=965
<966=967
<967=969,968
<973=974
<974=980,975
<975=976
<976=977
<977=979,978
<980=981
<995=1001,1000,996
<996=997
<997=999,998
<1001=1053,1017,1004,1002
<1002=1003
<1004=1005
<1005=1013,1006
<1006=1007
<1007=1008
<1008=1010,1009
<1010=1012,1011
<1013=1014
<1014=1016,1015
<1017=1018
<1018=1052,1051,1019
<1019=1041,1020
<1020=1031,1021
<1021=1027,1022
<1022=1025,1023
<1023=1024
<1025=1026
<1027=1028
<1028=1030,1029
<1031=1037,1032
<1032=1035,1033
<1033=1034
<1035=1036
<1037=1038
<1038=1040,1039
<1041=1047,1042
<1042=1045,1043
<1043=1044
<1045=1046
<1047=1048
<1048=1050,1049
<1053=1054
<1054=1064,1063,1055
<1055=1062,1056
<1056=1058,1057
<1058=1059
<1059=1061,1060
