>28	FunctionDef	BtsSpawnClient 
>29	ParameterList	QObject * parent
>30	Parameter	 
>31	Identifier	parent
>32	ParameterType	QObject *
>33	CompoundStatement	 
>34	ExpressionStatement	 
>35	CallExpression	connect ( p -> forceKillTimer , SIGNAL ( timeout ( ) ) , this , SLOT ( killClient ( ) ) )
>36	ArgumentList	p -> forceKillTimer
>37	Argument	SLOT ( killClient ( ) )
>38	CallExpression	SLOT ( killClient ( ) )
>39	ArgumentList	killClient ( )
>40	Argument	killClient ( )
>41	CallExpression	killClient ( )
>42	ArgumentList	 
>43	Callee	killClient
>44	Identifier	killClient
>45	Callee	SLOT
>46	Identifier	SLOT
>47	Argument	this
>48	Identifier	this
>49	Argument	SIGNAL ( timeout ( ) )
>50	CallExpression	SIGNAL ( timeout ( ) )
>51	ArgumentList	timeout ( )
>52	Argument	timeout ( )
>53	CallExpression	timeout ( )
>54	ArgumentList	 
>55	Callee	timeout
>56	Identifier	timeout
>57	Callee	SIGNAL
>58	Identifier	SIGNAL
>59	Argument	p -> forceKillTimer
>60	PtrMemberAccess	p -> forceKillTimer
>61	Identifier	forceKillTimer
>62	Identifier	p
>63	Callee	connect
>64	Identifier	connect
>65	ExpressionStatement	 
>66	CallExpression	p -> forceKillTimer -> setInterval ( 2500 )
>67	ArgumentList	2500
>68	Argument	2500
>69	PrimaryExpression	2500
>70	Callee	p -> forceKillTimer -> setInterval
>71	PtrMemberAccess	p -> forceKillTimer -> setInterval
>72	Identifier	setInterval
>73	PtrMemberAccess	p -> forceKillTimer
>74	Identifier	forceKillTimer
>75	Identifier	p
>76	ExpressionStatement	 
>77	CallExpression	p -> forceKillTimer -> setSingleShot ( true )
>78	ArgumentList	true
>79	Argument	true
>80	Identifier	true
>81	Callee	p -> forceKillTimer -> setSingleShot
>82	PtrMemberAccess	p -> forceKillTimer -> setSingleShot
>83	Identifier	setSingleShot
>84	PtrMemberAccess	p -> forceKillTimer
>85	Identifier	forceKillTimer
>86	Identifier	p
>87	ExpressionStatement	 
>88	AssignmentExpr	p -> forceKillTimer = new QTimer ( this )
>89	Identifier	this
>90	PtrMemberAccess	p -> forceKillTimer
>91	Identifier	forceKillTimer
>92	Identifier	p
>93	ExpressionStatement	 
>94	AssignmentExpr	p -> clientProc = nullptr
>95	Identifier	nullptr
>96	PtrMemberAccess	p -> clientProc
>97	Identifier	clientProc
>98	Identifier	p
>99	ExpressionStatement	 
>100	CallExpression	randomize ( )
>101	ArgumentList	 
>102	Callee	randomize
>103	Identifier	randomize
>104	ExpressionStatement	 
>105	AssignmentExpr	p -> host = \"127.0.0.1\"
>106	PrimaryExpression	\"127.0.0.1\"
>107	PtrMemberAccess	p -> host
>108	Identifier	host
>109	Identifier	p
>110	ExpressionStatement	 
>111	AssignmentExpr	p -> cur_port = 0
>112	PrimaryExpression	0
>113	PtrMemberAccess	p -> cur_port
>114	Identifier	cur_port
>115	Identifier	p
>116	ExpressionStatement	 
>117	AssignmentExpr	p -> autorestart = false
>118	Identifier	false
>119	PtrMemberAccess	p -> autorestart
>120	Identifier	autorestart
>121	Identifier	p
>122	ExpressionStatement	 
>123	AssignmentExpr	p = new BtsSpawnClient_private ( )
>124	UnaryExpression	new BtsSpawnClient_private ( )
>125	Identifier	p
>145	FunctionDef	BtsSpawnClient 
>146	ParameterList	 
>147	CompoundStatement	 
>148	ExpressionStatement	 
>149	Identifier	p
>150	Statement	 
>151	IfStatement	if ( p -> clientProc )
>152	CompoundStatement	 
>153	IdentifierDeclStatement	 
>154	IdentifierDecl	clientExited ( )
>155	Identifier	clientExited
>156	IdentifierDeclType	emit
>157	IfStatement	if ( ! p -> clientProc -> waitForFinished ( 5000 ) )
>158	CompoundStatement	 
>159	ExpressionStatement	 
>160	CallExpression	p -> clientProc -> waitForFinished ( 500 )
>161	ArgumentList	500
>162	Argument	500
>163	PrimaryExpression	500
>164	Callee	p -> clientProc -> waitForFinished
>165	PtrMemberAccess	p -> clientProc -> waitForFinished
>166	Identifier	waitForFinished
>167	PtrMemberAccess	p -> clientProc
>168	Identifier	clientProc
>169	Identifier	p
>170	ExpressionStatement	 
>171	CallExpression	p -> clientProc -> kill ( )
>172	ArgumentList	 
>173	Callee	p -> clientProc -> kill
>174	PtrMemberAccess	p -> clientProc -> kill
>175	Identifier	kill
>176	PtrMemberAccess	p -> clientProc
>177	Identifier	clientProc
>178	Identifier	p
>179	Condition	 
>180	UnaryOp	! p -> clientProc -> waitForFinished ( 5000 )
>181	CallExpression	p -> clientProc -> waitForFinished ( 5000 )
>182	ArgumentList	5000
>183	Argument	5000
>184	PrimaryExpression	5000
>185	Callee	p -> clientProc -> waitForFinished
>186	PtrMemberAccess	p -> clientProc -> waitForFinished
>187	Identifier	waitForFinished
>188	PtrMemberAccess	p -> clientProc
>189	Identifier	clientProc
>190	Identifier	p
>191	UnaryOperator	!
>192	ExpressionStatement	 
>193	CallExpression	p -> clientProc -> terminate ( )
>194	ArgumentList	 
>195	Callee	p -> clientProc -> terminate
>196	PtrMemberAccess	p -> clientProc -> terminate
>197	Identifier	terminate
>198	PtrMemberAccess	p -> clientProc
>199	Identifier	clientProc
>200	Identifier	p
>201	ExpressionStatement	 
>202	CallExpression	p -> clientProc -> waitForFinished ( 5000 )
>203	ArgumentList	5000
>204	Argument	5000
>205	PrimaryExpression	5000
>206	Callee	p -> clientProc -> waitForFinished
>207	PtrMemberAccess	p -> clientProc -> waitForFinished
>208	Identifier	waitForFinished
>209	PtrMemberAccess	p -> clientProc
>210	Identifier	clientProc
>211	Identifier	p
>212	ExpressionStatement	 
>213	CallExpression	api . shutdown ( )
>214	ArgumentList	 
>215	Callee	api . shutdown
>216	MemberAccess	api . shutdown
>217	Identifier	shutdown
>218	Identifier	api
>219	IdentifierDeclStatement	 
>220	IdentifierDecl	api ( this )
>221	Identifier	this
>222	Identifier	api
>223	IdentifierDeclType	BtsApi
>224	Condition	 
>225	PtrMemberAccess	p -> clientProc
>226	Identifier	clientProc
>227	Identifier	p
>239	FunctionDef	BtsSpawnClient 
>240	ParameterList	bool autorestart
>241	Parameter	 
>242	Identifier	autorestart
>243	ParameterType	bool
>244	ReturnType	void
>245	CompoundStatement	 
>246	ExpressionStatement	 
>247	AssignmentExpr	p -> autorestart = autorestart
>248	Identifier	autorestart
>249	PtrMemberAccess	p -> autorestart
>250	Identifier	autorestart
>251	Identifier	p
>259	FunctionDef	BtsSpawnClient 
>260	ParameterList	 
>261	ReturnType	bool
>262	CompoundStatement	 
>263	ReturnStatement	 
>264	PtrMemberAccess	p -> autorestart
>265	Identifier	autorestart
>266	Identifier	p
>273	FunctionDef	BtsSpawnClient 
>274	ParameterList	 
>275	ReturnType	QString
>276	CompoundStatement	 
>277	ReturnStatement	 
>278	PrimaryExpression	\"127.0.0.1\"
>282	FunctionDef	BtsSpawnClient 
>283	ParameterList	 
>284	ReturnType	int
>285	CompoundStatement	 
>286	ReturnStatement	 
>287	PtrMemberAccess	p -> cur_port
>288	Identifier	cur_port
>289	Identifier	p
>296	FunctionDef	BtsSpawnClient 
>297	ParameterList	 
>298	ReturnType	QString
>299	CompoundStatement	 
>300	ReturnStatement	 
>301	PtrMemberAccess	p -> cur_username
>302	Identifier	cur_username
>303	Identifier	p
>310	FunctionDef	BtsSpawnClient 
>311	ParameterList	 
>312	ReturnType	QString
>313	CompoundStatement	 
>314	ReturnStatement	 
>315	PtrMemberAccess	p -> cur_password
>316	Identifier	cur_password
>317	Identifier	p
>324	FunctionDef	BtsSpawnClient 
>325	ParameterList	 
>326	ReturnType	QString
>327	CompoundStatement	 
>328	ReturnStatement	 
>329	PtrMemberAccess	p -> dataPath
>330	Identifier	dataPath
>331	Identifier	p
>332	ExpressionStatement	 
>333	AssignmentExpr	p -> dataPath = dataPath . absolutePath ( )
>334	CallExpression	dataPath . absolutePath ( )
>335	ArgumentList	 
>336	Callee	dataPath . absolutePath
>337	MemberAccess	dataPath . absolutePath
>338	Identifier	absolutePath
>339	Identifier	dataPath
>340	PtrMemberAccess	p -> dataPath
>341	Identifier	dataPath
>342	Identifier	p
>343	IfStatement	if ( ! dataPath . cd ( \"sync_storage\" ) )
>344	CompoundStatement	 
>345	ReturnStatement	 
>346	CallExpression	QString ( )
>347	ArgumentList	 
>348	Callee	QString
>349	Identifier	QString
>350	ExpressionStatement	 
>351	CallExpression	qWarning ( \"Failed creating sync storage dir!\" )
>352	ArgumentList	\"Failed creating sync storage dir!\"
>353	Argument	\"Failed creating sync storage dir!\"
>354	PrimaryExpression	\"Failed creating sync storage dir!\"
>355	Callee	qWarning
>356	Identifier	qWarning
>357	Condition	 
>358	UnaryOp	! dataPath . cd ( \"sync_storage\" )
>359	CallExpression	dataPath . cd ( \"sync_storage\" )
>360	ArgumentList	\"sync_storage\"
>361	Argument	\"sync_storage\"
>362	PrimaryExpression	\"sync_storage\"
>363	Callee	dataPath . cd
>364	MemberAccess	dataPath . cd
>365	Identifier	cd
>366	Identifier	dataPath
>367	UnaryOperator	!
>368	ExpressionStatement	 
>369	CallExpression	dataPath . mkpath ( \"sync_storage\" )
>370	ArgumentList	\"sync_storage\"
>371	Argument	\"sync_storage\"
>372	PrimaryExpression	\"sync_storage\"
>373	Callee	dataPath . mkpath
>374	MemberAccess	dataPath . mkpath
>375	Identifier	mkpath
>376	Identifier	dataPath
>377	IdentifierDeclStatement	 
>378	IdentifierDecl	dataPath = QStandardPaths 
>379	AssignmentExpr	dataPath = QStandardPaths 
>380	CallExpression	QStandardPaths 
>381	ArgumentList	QStandardPaths 
>382	Argument	QStandardPaths 
>383	Identifier	QStandardPaths 
>384	Callee	QStandardPaths 
>385	Identifier	QStandardPaths 
>386	Identifier	dataPath
>387	Identifier	dataPath
>388	IdentifierDeclType	QDir
>389	IfStatement	if ( ! p -> dataPath . isEmpty ( ) )
>390	ReturnStatement	 
>391	PtrMemberAccess	p -> dataPath
>392	Identifier	dataPath
>393	Identifier	p
>394	Condition	 
>395	UnaryOp	! p -> dataPath . isEmpty ( )
>396	CallExpression	p -> dataPath . isEmpty ( )
>397	ArgumentList	 
>398	Callee	p -> dataPath . isEmpty
>399	MemberAccess	p -> dataPath . isEmpty
>400	Identifier	isEmpty
>401	PtrMemberAccess	p -> dataPath
>402	Identifier	dataPath
>403	Identifier	p
>404	UnaryOperator	!
>418	FunctionDef	BtsSpawnClient 
>419	ParameterList	 
>420	ReturnType	bool
>421	CompoundStatement	 
>422	ReturnStatement	 
>423	EqualityExpression	p -> clientProc -> state ( ) == QProcess 
>424	Identifier	QProcess 
>425	CallExpression	p -> clientProc -> state ( )
>426	ArgumentList	 
>427	Callee	p -> clientProc -> state
>428	PtrMemberAccess	p -> clientProc -> state
>429	Identifier	state
>430	PtrMemberAccess	p -> clientProc
>431	Identifier	clientProc
>432	Identifier	p
>433	IfStatement	if ( ! p -> clientProc )
>434	ReturnStatement	 
>435	Identifier	false
>436	Condition	 
>437	UnaryOp	! p -> clientProc
>438	PtrMemberAccess	p -> clientProc
>439	Identifier	clientProc
>440	Identifier	p
>441	UnaryOperator	!
>453	FunctionDef	BtsSpawnClient 
>454	ParameterList	 
>455	ReturnType	void
>456	CompoundStatement	 
>457	ExpressionStatement	 
>458	CallExpression	exitClient ( false )
>459	ArgumentList	false
>460	Argument	false
>461	Identifier	false
>462	Callee	exitClient
>463	Identifier	exitClient
>468	FunctionDef	BtsSpawnClient 
>469	ParameterList	 
>470	ReturnType	void
>471	CompoundStatement	 
>472	ExpressionStatement	 
>473	CallExpression	exitClient ( true )
>474	ArgumentList	true
>475	Argument	true
>476	Identifier	true
>477	Callee	exitClient
>478	Identifier	exitClient
>483	FunctionDef	BtsSpawnClient 
>484	ParameterList	bool force
>485	Parameter	 
>486	Identifier	force
>487	ParameterType	bool
>488	ReturnType	void
>489	CompoundStatement	 
>490	IfStatement	if ( force )
>491	ElseStatement	else
>492	CompoundStatement	 
>493	ExpressionStatement	 
>494	CallExpression	p -> forceKillTimer -> start ( )
>495	ArgumentList	 
>496	Callee	p -> forceKillTimer -> start
>497	PtrMemberAccess	p -> forceKillTimer -> start
>498	Identifier	start
>499	PtrMemberAccess	p -> forceKillTimer
>500	Identifier	forceKillTimer
>501	Identifier	p
>502	ExpressionStatement	 
>503	CallExpression	p -> clientProc -> terminate ( )
>504	ArgumentList	 
>505	Callee	p -> clientProc -> terminate
>506	PtrMemberAccess	p -> clientProc -> terminate
>507	Identifier	terminate
>508	PtrMemberAccess	p -> clientProc
>509	Identifier	clientProc
>510	Identifier	p
>511	CompoundStatement	 
>512	ExpressionStatement	 
>513	CallExpression	p -> forceKillTimer -> stop ( )
>514	ArgumentList	 
>515	Callee	p -> forceKillTimer -> stop
>516	PtrMemberAccess	p -> forceKillTimer -> stop
>517	Identifier	stop
>518	PtrMemberAccess	p -> forceKillTimer
>519	Identifier	forceKillTimer
>520	Identifier	p
>521	ExpressionStatement	 
>522	CallExpression	p -> clientProc -> kill ( )
>523	ArgumentList	 
>524	Callee	p -> clientProc -> kill
>525	PtrMemberAccess	p -> clientProc -> kill
>526	Identifier	kill
>527	PtrMemberAccess	p -> clientProc
>528	Identifier	clientProc
>529	Identifier	p
>530	Condition	 
>531	Identifier	force
>532	IfStatement	if ( ! p -> clientProc )
>533	ReturnStatement	 
>534	Condition	 
>535	UnaryOp	! p -> clientProc
>536	PtrMemberAccess	p -> clientProc
>537	Identifier	clientProc
>538	Identifier	p
>539	UnaryOperator	!
>548	FunctionDef	BtsSpawnClient 
>549	ParameterList	 
>550	ReturnType	void
>551	CompoundStatement	 
>552	ExpressionStatement	 
>553	CallExpression	p -> clientProc -> start ( )
>554	ArgumentList	 
>555	Callee	p -> clientProc -> start
>556	PtrMemberAccess	p -> clientProc -> start
>557	Identifier	start
>558	PtrMemberAccess	p -> clientProc
>559	Identifier	clientProc
>560	Identifier	p
>561	ExpressionStatement	 
>562	CallExpression	p -> clientProc -> setProcessChannelMode ( QProcess 
>563	ArgumentList	QProcess 
>564	Argument	QProcess 
>565	Identifier	QProcess 
>566	Callee	p -> clientProc -> setProcessChannelMode
>567	PtrMemberAccess	p -> clientProc -> setProcessChannelMode
>568	Identifier	setProcessChannelMode
>569	PtrMemberAccess	p -> clientProc
>570	Identifier	clientProc
>571	Identifier	p
>572	ExpressionStatement	 
>573	Statement	 
>574	Statement	 
>575	Statement	 
>576	Statement	 
>577	Statement	 
>578	Statement	 
>579	Statement	 
>580	Statement	 
>581	Statement	 
>582	Statement	 
>583	Statement	 
>584	Statement	 
>585	Statement	 
>586	Statement	 
>587	Statement	 
>588	Statement	 
>589	Statement	 
>590	Statement	 
>591	Statement	 
>592	Statement	 
>593	Statement	 
>594	Statement	 
>595	Statement	 
>596	Statement	 
>597	ExpressionStatement	 
>598	CallExpression	p -> clientProc -> setProgram ( BtsGlobal 
>599	ArgumentList	BtsGlobal 
>600	Argument	BtsGlobal 
>601	CallExpression	BtsGlobal 
>602	ArgumentList	 
>603	Callee	BtsGlobal 
>604	Identifier	BtsGlobal 
>605	Callee	p -> clientProc -> setProgram
>606	PtrMemberAccess	p -> clientProc -> setProgram
>607	Identifier	setProgram
>608	PtrMemberAccess	p -> clientProc
>609	Identifier	clientProc
>610	Identifier	p
>611	Statement	 
>612	Statement	 
>613	Statement	 
>614	ExpressionStatement	 
>615	CallExpression	connect ( p -> clientProc , SIGNAL ( started ( ) ) , this , SLOT ( procStarted ( ) ) )
>616	ArgumentList	p -> clientProc
>617	Argument	SLOT ( procStarted ( ) )
>618	CallExpression	SLOT ( procStarted ( ) )
>619	ArgumentList	procStarted ( )
>620	Argument	procStarted ( )
>621	CallExpression	procStarted ( )
>622	ArgumentList	 
>623	Callee	procStarted
>624	Identifier	procStarted
>625	Callee	SLOT
>626	Identifier	SLOT
>627	Argument	this
>628	Identifier	this
>629	Argument	SIGNAL ( started ( ) )
>630	CallExpression	SIGNAL ( started ( ) )
>631	ArgumentList	started ( )
>632	Argument	started ( )
>633	CallExpression	started ( )
>634	ArgumentList	 
>635	Callee	started
>636	Identifier	started
>637	Callee	SIGNAL
>638	Identifier	SIGNAL
>639	Argument	p -> clientProc
>640	PtrMemberAccess	p -> clientProc
>641	Identifier	clientProc
>642	Identifier	p
>643	Callee	connect
>644	Identifier	connect
>645	ExpressionStatement	 
>646	CallExpression	connect ( p -> clientProc , SIGNAL ( finished ( int ) ) , p -> clientProc , SLOT ( deleteLater ( ) ) )
>647	ArgumentList	p -> clientProc
>648	Argument	SLOT ( deleteLater ( ) )
>649	CallExpression	SLOT ( deleteLater ( ) )
>650	ArgumentList	deleteLater ( )
>651	Argument	deleteLater ( )
>652	CallExpression	deleteLater ( )
>653	ArgumentList	 
>654	Callee	deleteLater
>655	Identifier	deleteLater
>656	Callee	SLOT
>657	Identifier	SLOT
>658	Argument	p -> clientProc
>659	PtrMemberAccess	p -> clientProc
>660	Identifier	clientProc
>661	Identifier	p
>662	Argument	SIGNAL ( finished ( int ) )
>663	CallExpression	SIGNAL ( finished ( int ) )
>664	ArgumentList	finished ( int )
>665	Argument	finished ( int )
>666	CallExpression	finished ( int )
>667	ArgumentList	int
>668	Argument	int
>669	Identifier	int
>670	Callee	finished
>671	Identifier	finished
>672	Callee	SIGNAL
>673	Identifier	SIGNAL
>674	Argument	p -> clientProc
>675	PtrMemberAccess	p -> clientProc
>676	Identifier	clientProc
>677	Identifier	p
>678	Callee	connect
>679	Identifier	connect
>680	ExpressionStatement	 
>681	CallExpression	connect ( p -> clientProc , SIGNAL ( finished ( int ) ) , this , SLOT ( procFinished ( int ) ) )
>682	ArgumentList	p -> clientProc
>683	Argument	SLOT ( procFinished ( int ) )
>684	CallExpression	SLOT ( procFinished ( int ) )
>685	ArgumentList	procFinished ( int )
>686	Argument	procFinished ( int )
>687	CallExpression	procFinished ( int )
>688	ArgumentList	int
>689	Argument	int
>690	Identifier	int
>691	Callee	procFinished
>692	Identifier	procFinished
>693	Callee	SLOT
>694	Identifier	SLOT
>695	Argument	this
>696	Identifier	this
>697	Argument	SIGNAL ( finished ( int ) )
>698	CallExpression	SIGNAL ( finished ( int ) )
>699	ArgumentList	finished ( int )
>700	Argument	finished ( int )
>701	CallExpression	finished ( int )
>702	ArgumentList	int
>703	Argument	int
>704	Identifier	int
>705	Callee	finished
>706	Identifier	finished
>707	Callee	SIGNAL
>708	Identifier	SIGNAL
>709	Argument	p -> clientProc
>710	PtrMemberAccess	p -> clientProc
>711	Identifier	clientProc
>712	Identifier	p
>713	Callee	connect
>714	Identifier	connect
>715	ExpressionStatement	 
>716	AssignmentExpr	p -> clientProc = new QProcess ( this )
>717	Identifier	this
>718	PtrMemberAccess	p -> clientProc
>719	Identifier	clientProc
>720	Identifier	p
>721	ExpressionStatement	 
>722	AssignmentExpr	p -> cur_username = p -> username
>723	PtrMemberAccess	p -> username
>724	Identifier	username
>725	Identifier	p
>726	PtrMemberAccess	p -> cur_username
>727	Identifier	cur_username
>728	Identifier	p
>729	ExpressionStatement	 
>730	AssignmentExpr	p -> cur_password = p -> password
>731	PtrMemberAccess	p -> password
>732	Identifier	password
>733	Identifier	p
>734	PtrMemberAccess	p -> cur_password
>735	Identifier	cur_password
>736	Identifier	p
>737	ExpressionStatement	 
>738	AssignmentExpr	p -> cur_port = p -> port
>739	PtrMemberAccess	p -> port
>740	Identifier	port
>741	Identifier	p
>742	PtrMemberAccess	p -> cur_port
>743	Identifier	cur_port
>744	Identifier	p
>745	ExpressionStatement	 
>746	CallExpression	p -> configFile . setPermissions ( QFile 
>747	ArgumentList	QFile 
>748	Argument	QFile 
>749	InclusiveOrExpression	QFile 
>750	Identifier	QFile 
>751	Identifier	QFile 
>752	Callee	p -> configFile . setPermissions
>753	MemberAccess	p -> configFile . setPermissions
>754	Identifier	setPermissions
>755	PtrMemberAccess	p -> configFile
>756	Identifier	configFile
>757	Identifier	p
>758	ExpressionStatement	 
>759	CallExpression	p -> configFile . close ( )
>760	ArgumentList	 
>761	Callee	p -> configFile . close
>762	MemberAccess	p -> configFile . close
>763	Identifier	close
>764	PtrMemberAccess	p -> configFile
>765	Identifier	configFile
>766	Identifier	p
>767	ExpressionStatement	 
>768	CallExpression	p -> configFile . write ( saveDoc . toJson ( ) )
>769	ArgumentList	saveDoc . toJson ( )
>770	Argument	saveDoc . toJson ( )
>771	CallExpression	saveDoc . toJson ( )
>772	ArgumentList	 
>773	Callee	saveDoc . toJson
>774	MemberAccess	saveDoc . toJson
>775	Identifier	toJson
>776	Identifier	saveDoc
>777	Callee	p -> configFile . write
>778	MemberAccess	p -> configFile . write
>779	Identifier	write
>780	PtrMemberAccess	p -> configFile
>781	Identifier	configFile
>782	Identifier	p
>783	IdentifierDeclStatement	 
>784	IdentifierDecl	saveDoc ( configObject )
>785	Identifier	configObject
>786	Identifier	saveDoc
>787	IdentifierDeclType	QJsonDocument
>788	ExpressionStatement	 
>789	CallExpression	p -> configFile . open ( )
>790	ArgumentList	 
>791	Callee	p -> configFile . open
>792	MemberAccess	p -> configFile . open
>793	Identifier	open
>794	PtrMemberAccess	p -> configFile
>795	Identifier	configFile
>796	Identifier	p
>797	ExpressionStatement	 
>798	CallExpression	configObject . insert ( \"webui\" , webuiObject )
>799	ArgumentList	\"webui\"
>800	Argument	webuiObject
>801	Identifier	webuiObject
>802	Argument	\"webui\"
>803	PrimaryExpression	\"webui\"
>804	Callee	configObject . insert
>805	MemberAccess	configObject . insert
>806	Identifier	insert
>807	Identifier	configObject
>808	ExpressionStatement	 
>809	CallExpression	webuiObject . insert ( \"api_key\" , BtsGlobal 
>810	ArgumentList	\"api_key\"
>811	Argument	BtsGlobal 
>812	CallExpression	BtsGlobal 
>813	ArgumentList	 
>814	Callee	BtsGlobal 
>815	MemberAccess	BtsGlobal 
>816	Identifier	toString
>817	CallExpression	BtsGlobal 
>818	ArgumentList	 
>819	Callee	BtsGlobal 
>820	Identifier	BtsGlobal 
>821	Argument	\"api_key\"
>822	PrimaryExpression	\"api_key\"
>823	Callee	webuiObject . insert
>824	MemberAccess	webuiObject . insert
>825	Identifier	insert
>826	Identifier	webuiObject
>827	ExpressionStatement	 
>828	CallExpression	webuiObject . insert ( \"password\" , p -> password )
>829	ArgumentList	\"password\"
>830	Argument	p -> password
>831	PtrMemberAccess	p -> password
>832	Identifier	password
>833	Identifier	p
>834	Argument	\"password\"
>835	PrimaryExpression	\"password\"
>836	Callee	webuiObject . insert
>837	MemberAccess	webuiObject . insert
>838	Identifier	insert
>839	Identifier	webuiObject
>840	ExpressionStatement	 
>841	CallExpression	webuiObject . insert ( \"login\" , p -> username )
>842	ArgumentList	\"login\"
>843	Argument	p -> username
>844	PtrMemberAccess	p -> username
>845	Identifier	username
>846	Identifier	p
>847	Argument	\"login\"
>848	PrimaryExpression	\"login\"
>849	Callee	webuiObject . insert
>850	MemberAccess	webuiObject . insert
>851	Identifier	insert
>852	Identifier	webuiObject
>853	ExpressionStatement	 
>854	CallExpression	webuiObject . insert ( \"listen\" , QString ( \"%1
>855	ArgumentList	\"listen\"
>856	Argument	QString ( \"%1
>857	CallExpression	QString ( \"%1
>858	ArgumentList	p -> port
>859	Argument	p -> port
>860	PtrMemberAccess	p -> port
>861	Identifier	port
>862	Identifier	p
>863	Callee	QString ( \"%1
>864	MemberAccess	QString ( \"%1
>865	Identifier	arg
>866	CallExpression	QString ( \"%1
>867	ArgumentList	p -> host
>868	Argument	p -> host
>869	PtrMemberAccess	p -> host
>870	Identifier	host
>871	Identifier	p
>872	Callee	QString ( \"%1
>873	MemberAccess	QString ( \"%1
>874	Identifier	arg
>875	CallExpression	QString ( \"%1
>876	ArgumentList	\"%1
>877	Argument	\"%1
>878	PrimaryExpression	\"%1
>879	Callee	QString
>880	Identifier	QString
>881	Argument	\"listen\"
>882	PrimaryExpression	\"listen\"
>883	Callee	webuiObject . insert
>884	MemberAccess	webuiObject . insert
>885	Identifier	insert
>886	Identifier	webuiObject
>887	IdentifierDeclStatement	 
>888	IdentifierDecl	webuiObject
>889	Identifier	webuiObject
>890	IdentifierDeclType	QJsonObject
>891	ExpressionStatement	 
>892	CallExpression	configObject . insert ( \"use_gui\" , false )
>893	ArgumentList	\"use_gui\"
>894	Argument	false
>895	Identifier	false
>896	Argument	\"use_gui\"
>897	PrimaryExpression	\"use_gui\"
>898	Callee	configObject . insert
>899	MemberAccess	configObject . insert
>900	Identifier	insert
>901	Identifier	configObject
>902	ExpressionStatement	 
>903	CallExpression	configObject . insert ( \"storage_path\" , getDataPath ( ) )
>904	ArgumentList	\"storage_path\"
>905	Argument	getDataPath ( )
>906	CallExpression	getDataPath ( )
>907	ArgumentList	 
>908	Callee	getDataPath
>909	Identifier	getDataPath
>910	Argument	\"storage_path\"
>911	PrimaryExpression	\"storage_path\"
>912	Callee	configObject . insert
>913	MemberAccess	configObject . insert
>914	Identifier	insert
>915	Identifier	configObject
>916	IdentifierDeclStatement	 
>917	IdentifierDecl	configObject
>918	Identifier	configObject
>919	IdentifierDeclType	QJsonObject
>920	IfStatement	if ( isClientReady ( ) || ( p -> clientProc && p -> clientProc -> state ( ) == QProcess 
>921	ReturnStatement	 
>922	Condition	 
>923	OrExpression	isClientReady ( ) || ( p -> clientProc && p -> clientProc -> state ( ) == QProcess 
>924	AndExpression	p -> clientProc && p -> clientProc -> state ( ) == QProcess 
>925	EqualityExpression	p -> clientProc -> state ( ) == QProcess 
>926	Identifier	QProcess 
>927	CallExpression	p -> clientProc -> state ( )
>928	ArgumentList	 
>929	Callee	p -> clientProc -> state
>930	PtrMemberAccess	p -> clientProc -> state
>931	Identifier	state
>932	PtrMemberAccess	p -> clientProc
>933	Identifier	clientProc
>934	Identifier	p
>935	PtrMemberAccess	p -> clientProc
>936	Identifier	clientProc
>937	Identifier	p
>938	CallExpression	isClientReady ( )
>939	ArgumentList	 
>940	Callee	isClientReady
>941	Identifier	isClientReady
>985	FunctionDef	BtsSpawnClient 
>986	ParameterList	 
>987	ReturnType	void
>988	CompoundStatement	 
>989	IfStatement	if ( ! p -> clientProc )
>990	ElseStatement	else
>991	CompoundStatement	 
>992	ExpressionStatement	 
>993	CallExpression	exitClient ( )
>994	ArgumentList	 
>995	Callee	exitClient
>996	Identifier	exitClient
>997	ExpressionStatement	 
>998	CallExpression	connect ( p -> clientProc . data ( ) , SIGNAL ( finished ( int ) ) , this , SLOT ( startClient ( ) ) )
>999	ArgumentList	p -> clientProc . data ( )
>1000	Argument	SLOT ( startClient ( ) )
>1001	CallExpression	SLOT ( startClient ( ) )
>1002	ArgumentList	startClient ( )
>1003	Argument	startClient ( )
>1004	CallExpression	startClient ( )
>1005	ArgumentList	 
>1006	Callee	startClient
>1007	Identifier	startClient
>1008	Callee	SLOT
>1009	Identifier	SLOT
>1010	Argument	this
>1011	Identifier	this
>1012	Argument	SIGNAL ( finished ( int ) )
>1013	CallExpression	SIGNAL ( finished ( int ) )
>1014	ArgumentList	finished ( int )
>1015	Argument	finished ( int )
>1016	CallExpression	finished ( int )
>1017	ArgumentList	int
>1018	Argument	int
>1019	Identifier	int
>1020	Callee	finished
>1021	Identifier	finished
>1022	Callee	SIGNAL
>1023	Identifier	SIGNAL
>1024	Argument	p -> clientProc . data ( )
>1025	CallExpression	p -> clientProc . data ( )
>1026	ArgumentList	 
>1027	Callee	p -> clientProc . data
>1028	MemberAccess	p -> clientProc . data
>1029	Identifier	data
>1030	PtrMemberAccess	p -> clientProc
>1031	Identifier	clientProc
>1032	Identifier	p
>1033	Callee	connect
>1034	Identifier	connect
>1035	CompoundStatement	 
>1036	ExpressionStatement	 
>1037	CallExpression	startClient ( )
>1038	ArgumentList	 
>1039	Callee	startClient
>1040	Identifier	startClient
>1041	Condition	 
>1042	UnaryOp	! p -> clientProc
>1043	PtrMemberAccess	p -> clientProc
>1044	Identifier	clientProc
>1045	Identifier	p
>1046	UnaryOperator	!
>1060	FunctionDef	BtsSpawnClient 
>1061	ParameterList	int port
>1062	Parameter	 
>1063	Identifier	port
>1064	ParameterType	int
>1065	ReturnType	void
>1066	CompoundStatement	 
>1067	ExpressionStatement	 
>1068	AssignmentExpr	p -> port = port
>1069	Identifier	port
>1070	PtrMemberAccess	p -> port
>1071	Identifier	port
>1072	Identifier	p
>1080	FunctionDef	BtsSpawnClient 
>1081	ParameterList	const QString & host
>1082	Parameter	 
>1083	Identifier	host
>1084	ParameterType	const QString &
>1085	ReturnType	void
>1086	CompoundStatement	 
>1087	ExpressionStatement	 
>1088	AssignmentExpr	p -> host = host
>1089	Identifier	host
>1090	PtrMemberAccess	p -> host
>1091	Identifier	host
>1092	Identifier	p
>1100	FunctionDef	BtsSpawnClient 
>1101	ParameterList	const QString & username
>1102	Parameter	 
>1103	Identifier	username
>1104	ParameterType	const QString &
>1105	ReturnType	void
>1106	CompoundStatement	 
>1107	ExpressionStatement	 
>1108	AssignmentExpr	p -> username = username
>1109	Identifier	username
>1110	PtrMemberAccess	p -> username
>1111	Identifier	username
>1112	Identifier	p
>1120	FunctionDef	BtsSpawnClient 
>1121	ParameterList	const QString & password
>1122	Parameter	 
>1123	Identifier	password
>1124	ParameterType	const QString &
>1125	ReturnType	void
>1126	CompoundStatement	 
>1127	ExpressionStatement	 
>1128	AssignmentExpr	p -> password = password
>1129	Identifier	password
>1130	PtrMemberAccess	p -> password
>1131	Identifier	password
>1132	Identifier	p
>1140	FunctionDef	BtsSpawnClient 
>1141	ParameterList	const QString & dir
>1142	Parameter	 
>1143	Identifier	dir
>1144	ParameterType	const QString &
>1145	ReturnType	void
>1146	CompoundStatement	 
>1147	ExpressionStatement	 
>1148	AssignmentExpr	p -> dataPath = dir
>1149	Identifier	dir
>1150	PtrMemberAccess	p -> dataPath
>1151	Identifier	dataPath
>1152	Identifier	p
>1160	FunctionDef	BtsSpawnClient 
>1161	ParameterList	 
>1162	ReturnType	void
>1163	CompoundStatement	 
>1164	ExpressionStatement	 
>1165	AssignmentExpr	p -> port = ( qrand ( ) % 64000 ) + 1025
>1166	AdditiveExpression	( qrand ( ) % 64000 ) + 1025
>1167	PrimaryExpression	1025
>1168	MultiplicativeExpression	qrand ( ) % 64000
>1169	PrimaryExpression	64000
>1170	CallExpression	qrand ( )
>1171	ArgumentList	 
>1172	Callee	qrand
>1173	Identifier	qrand
>1174	PtrMemberAccess	p -> port
>1175	Identifier	port
>1176	Identifier	p
>1184	FunctionDef	BtsSpawnClient 
>1185	ParameterList	 
>1186	ReturnType	void
>1187	CompoundStatement	 
>1188	ExpressionStatement	 
>1189	AssignmentExpr	p -> password = QUuid 
>1190	CallExpression	QUuid 
>1191	ArgumentList	removeExp
>1192	Argument	removeExp
>1193	Identifier	removeExp
>1194	Callee	QUuid 
>1195	MemberAccess	QUuid 
>1196	Identifier	remove
>1197	CallExpression	QUuid 
>1198	ArgumentList	 
>1199	Callee	QUuid 
>1200	MemberAccess	QUuid 
>1201	Identifier	toString
>1202	CallExpression	QUuid 
>1203	ArgumentList	 
>1204	Callee	QUuid 
>1205	Identifier	QUuid 
>1206	PtrMemberAccess	p -> password
>1207	Identifier	password
>1208	Identifier	p
>1209	ExpressionStatement	 
>1210	AssignmentExpr	p -> username = QUuid 
>1211	CallExpression	QUuid 
>1212	ArgumentList	removeExp
>1213	Argument	removeExp
>1214	Identifier	removeExp
>1215	Callee	QUuid 
>1216	MemberAccess	QUuid 
>1217	Identifier	remove
>1218	CallExpression	QUuid 
>1219	ArgumentList	 
>1220	Callee	QUuid 
>1221	MemberAccess	QUuid 
>1222	Identifier	toString
>1223	CallExpression	QUuid 
>1224	ArgumentList	 
>1225	Callee	QUuid 
>1226	Identifier	QUuid 
>1227	PtrMemberAccess	p -> username
>1228	Identifier	username
>1229	Identifier	p
>1230	IdentifierDeclStatement	 
>1231	IdentifierDecl	removeExp ( \"[\\{\\}\\-]\" )
>1232	PrimaryExpression	\"[\\{\\}\\-]\"
>1233	Identifier	removeExp
>1234	IdentifierDeclType	QRegExp
>1246	FunctionDef	BtsSpawnClient 
>1247	ParameterList	 
>1248	ReturnType	void
>1249	CompoundStatement	 
>1250	ExpressionStatement	 
>1251	CallExpression	randomizeCredentials ( )
>1252	ArgumentList	 
>1253	Callee	randomizeCredentials
>1254	Identifier	randomizeCredentials
>1255	ExpressionStatement	 
>1256	CallExpression	randomizePort ( )
>1257	ArgumentList	 
>1258	Callee	randomizePort
>1259	Identifier	randomizePort
>1263	FunctionDef	BtsSpawnClient 
>1264	ParameterList	 
>1265	ReturnType	void
>1266	CompoundStatement	 
>1267	ExpressionStatement	 
>1268	CallExpression	QTimer 
>1269	ArgumentList	10000
>1270	Argument	SLOT ( removeConfig ( ) )
>1271	CallExpression	SLOT ( removeConfig ( ) )
>1272	ArgumentList	removeConfig ( )
>1273	Argument	removeConfig ( )
>1274	CallExpression	removeConfig ( )
>1275	ArgumentList	 
>1276	Callee	removeConfig
>1277	Identifier	removeConfig
>1278	Callee	SLOT
>1279	Identifier	SLOT
>1280	Argument	this
>1281	Identifier	this
>1282	Argument	10000
>1283	PrimaryExpression	10000
>1284	Callee	QTimer 
>1285	Identifier	QTimer 
>1286	IdentifierDeclStatement	 
>1287	IdentifierDecl	clientStarted ( )
>1288	Identifier	clientStarted
>1289	IdentifierDeclType	emit
>1297	FunctionDef	BtsSpawnClient 
>1298	ParameterList	int exitCode
>1299	Parameter	 
>1300	Identifier	exitCode
>1301	ParameterType	int
>1302	ReturnType	void
>1303	CompoundStatement	 
>1304	IfStatement	if ( exitCode != 0 || p -> autorestart )
>1305	CompoundStatement	 
>1306	ExpressionStatement	 
>1307	CallExpression	QTimer 
>1308	ArgumentList	1000
>1309	Argument	SLOT ( startClient ( ) )
>1310	CallExpression	SLOT ( startClient ( ) )
>1311	ArgumentList	startClient ( )
>1312	Argument	startClient ( )
>1313	CallExpression	startClient ( )
>1314	ArgumentList	 
>1315	Callee	startClient
>1316	Identifier	startClient
>1317	Callee	SLOT
>1318	Identifier	SLOT
>1319	Argument	this
>1320	Identifier	this
>1321	Argument	1000
>1322	PrimaryExpression	1000
>1323	Callee	QTimer 
>1324	Identifier	QTimer 
>1325	Condition	 
>1326	OrExpression	exitCode != 0 || p -> autorestart
>1327	PtrMemberAccess	p -> autorestart
>1328	Identifier	autorestart
>1329	Identifier	p
>1330	EqualityExpression	exitCode != 0
>1331	PrimaryExpression	0
>1332	Identifier	exitCode
>1333	ExpressionStatement	 
>1334	ShiftExpression	qDebug ( ) << \"btsync finished with code\" << exitCode
>1335	ShiftExpression	\"btsync finished with code\" << exitCode
>1336	Identifier	exitCode
>1337	PrimaryExpression	\"btsync finished with code\"
>1338	CallExpression	qDebug ( )
>1339	ArgumentList	 
>1340	Callee	qDebug
>1341	Identifier	qDebug
>1342	IdentifierDeclStatement	 
>1343	IdentifierDecl	clientExited ( )
>1344	Identifier	clientExited
>1345	IdentifierDeclType	emit
>1346	ExpressionStatement	 
>1347	CallExpression	p -> forceKillTimer -> stop ( )
>1348	ArgumentList	 
>1349	Callee	p -> forceKillTimer -> stop
>1350	PtrMemberAccess	p -> forceKillTimer -> stop
>1351	Identifier	stop
>1352	PtrMemberAccess	p -> forceKillTimer
>1353	Identifier	forceKillTimer
>1354	Identifier	p
>1367	FunctionDef	BtsSpawnClient 
>1368	ParameterList	 
>1369	ReturnType	void
>1370	CompoundStatement	 
>1371	ExpressionStatement	 
>1372	CallExpression	p -> configFile . remove ( )
>1373	ArgumentList	 
>1374	Callee	p -> configFile . remove
>1375	MemberAccess	p -> configFile . remove
>1376	Identifier	remove
>1377	PtrMemberAccess	p -> configFile
>1378	Identifier	configFile
>1379	Identifier	p
<28=33,29
<29=30
<30=32,31
<33=122,116,110,104,99,93,87,76,65,34
<34=35
<35=63,36
<36=59,49,47,37
<37=38
<38=45,39
<39=40
<40=41
<41=43,42
<43=44
<45=46
<47=48
<49=50
<50=57,51
<51=52
<52=53
<53=55,54
<55=56
<57=58
<59=60
<60=62,61
<63=64
<65=66
<66=70,67
<67=68
<68=69
<70=71
<71=73,72
<73=75,74
<76=77
<77=81,78
<78=79
<79=80
<81=82
<82=84,83
<84=86,85
<87=88
<88=90,89
<90=92,91
<93=94
<94=96,95
<96=98,97
<99=100
<100=102,101
<102=103
<104=105
<105=107,106
<107=109,108
<110=111
<111=113,112
<113=115,114
<116=117
<117=119,118
<119=121,120
<122=123
<123=125,124
<145=147,146
<147=151,150,148
<148=149
<151=224,152
<152=219,212,201,192,157,153
<153=154
<154=156,155
<157=179,158
<158=170,159
<159=160
<160=164,161
<161=162
<162=163
<164=165
<165=167,166
<167=169,168
<170=171
<171=173,172
<173=174
<174=176,175
<176=178,177
<179=180
<180=191,181
<181=185,182
<182=183
<183=184
<185=186
<186=188,187
<188=190,189
<192=193
<193=195,194
<195=196
<196=198,197
<198=200,199
<201=202
<202=206,203
<203=204
<204=205
<206=207
<207=209,208
<209=211,210
<212=213
<213=215,214
<215=216
<216=218,217
<219=220
<220=223,222,221
<224=225
<225=227,226
<239=245,244,240
<240=241
<241=243,242
<245=246
<246=247
<247=249,248
<249=251,250
<259=262,261,260
<262=263
<263=264
<264=266,265
<273=276,275,274
<276=277
<277=278
<282=285,284,283
<285=286
<286=287
<287=289,288
<296=299,298,297
<299=300
<300=301
<301=303,302
<310=313,312,311
<313=314
<314=315
<315=317,316
<324=327,326,325
<327=389,377,368,343,332,328
<328=329
<329=331,330
<332=333
<333=340,334
<334=336,335
<336=337
<337=339,338
<340=342,341
<343=357,344
<344=350,345
<345=346
<346=348,347
<348=349
<350=351
<351=355,352
<352=353
<353=354
<355=356
<357=358
<358=367,359
<359=363,360
<360=361
<361=362
<363=364
<364=366,365
<368=369
<369=373,370
<370=371
<371=372
<373=374
<374=376,375
<377=378
<378=388,387,379
<379=386,380
<380=384,381
<381=382
<382=383
<384=385
<389=394,390
<390=391
<391=393,392
<394=395
<395=404,396
<396=398,397
<398=399
<399=401,400
<401=403,402
<418=421,420,419
<421=433,422
<422=423
<423=425,424
<425=427,426
<427=428
<428=430,429
<430=432,431
<433=436,434
<434=435
<436=437
<437=441,438
<438=440,439
<453=456,455,454
<456=457
<457=458
<458=462,459
<459=460
<460=461
<462=463
<468=471,470,469
<471=472
<472=473
<473=477,474
<474=475
<475=476
<477=478
<483=489,488,484
<484=485
<485=487,486
<489=532,490
<490=530,511,491
<491=492
<492=502,493
<493=494
<494=496,495
<496=497
<497=499,498
<499=501,500
<502=503
<503=505,504
<505=506
<506=508,507
<508=510,509
<511=521,512
<512=513
<513=515,514
<515=516
<516=518,517
<518=520,519
<521=522
<522=524,523
<524=525
<525=527,526
<527=529,528
<530=531
<532=534,533
<534=535
<535=539,536
<536=538,537
<548=551,550,549
<551=920,916,902,552,561,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,611,612,613,614,645,680,715,721,729,737,745,758,767,783,788,797,808,827,840,853,887,891
<552=553
<553=555,554
<555=556
<556=558,557
<558=560,559
<561=562
<562=566,563
<563=564
<564=565
<566=567
<567=569,568
<569=571,570
<597=598
<598=605,599
<599=600
<600=601
<601=603,602
<603=604
<605=606
<606=608,607
<608=610,609
<614=615
<615=643,616
<616=639,629,627,617
<617=618
<618=625,619
<619=620
<620=621
<621=623,622
<623=624
<625=626
<627=628
<629=630
<630=637,631
<631=632
<632=633
<633=635,634
<635=636
<637=638
<639=640
<640=642,641
<643=644
<645=646
<646=678,647
<647=674,662,658,648
<648=649
<649=656,650
<650=651
<651=652
<652=654,653
<654=655
<656=657
<658=659
<659=661,660
<662=663
<663=672,664
<664=665
<665=666
<666=670,667
<667=668
<668=669
<670=671
<672=673
<674=675
<675=677,676
<678=679
<680=681
<681=713,682
<682=709,697,695,683
<683=684
<684=693,685
<685=686
<686=687
<687=691,688
<688=689
<689=690
<691=692
<693=694
<695=696
<697=698
<698=707,699
<699=700
<700=701
<701=705,702
<702=703
<703=704
<705=706
<707=708
<709=710
<710=712,711
<713=714
<715=716
<716=718,717
<718=720,719
<721=722
<722=726,723
<723=725,724
<726=728,727
<729=730
<730=734,731
<731=733,732
<734=736,735
<737=738
<738=742,739
<739=741,740
<742=744,743
<745=746
<746=752,747
<747=748
<748=749
<749=751,750
<752=753
<753=755,754
<755=757,756
<758=759
<759=761,760
<761=762
<762=764,763
<764=766,765
<767=768
<768=777,769
<769=770
<770=771
<771=773,772
<773=774
<774=776,775
<777=778
<778=780,779
<780=782,781
<783=784
<784=787,786,785
<788=789
<789=791,790
<791=792
<792=794,793
<794=796,795
<797=798
<798=804,799
<799=802,800
<800=801
<802=803
<804=805
<805=807,806
<808=809
<809=823,810
<810=821,811
<811=812
<812=814,813
<814=815
<815=817,816
<817=819,818
<819=820
<821=822
<823=824
<824=826,825
<827=828
<828=836,829
<829=834,830
<830=831
<831=833,832
<834=835
<836=837
<837=839,838
<840=841
<841=849,842
<842=847,843
<843=844
<844=846,845
<847=848
<849=850
<850=852,851
<853=854
<854=883,855
<855=881,856
<856=857
<857=863,858
<858=859
<859=860
<860=862,861
<863=864
<864=866,865
<866=872,867
<867=868
<868=869
<869=871,870
<872=873
<873=875,874
<875=879,876
<876=877
<877=878
<879=880
<881=882
<883=884
<884=886,885
<887=888
<888=890,889
<891=892
<892=898,893
<893=896,894
<894=895
<896=897
<898=899
<899=901,900
<902=903
<903=912,904
<904=910,905
<905=906
<906=908,907
<908=909
<910=911
<912=913
<913=915,914
<916=917
<917=919,918
<920=922,921
<922=923
<923=938,924
<924=935,925
<925=927,926
<927=929,928
<929=930
<930=932,931
<932=934,933
<935=937,936
<938=940,939
<940=941
<985=988,987,986
<988=989
<989=1041,1035,990
<990=991
<991=997,992
<992=993
<993=995,994
<995=996
<997=998
<998=1033,999
<999=1024,1012,1010,1000
<1000=1001
<1001=1008,1002
<1002=1003
<1003=1004
<1004=1006,1005
<1006=1007
<1008=1009
<1010=1011
<1012=1013
<1013=1022,1014
<1014=1015
<1015=1016
<1016=1020,1017
<1017=1018
<1018=1019
<1020=1021
<1022=1023
<1024=1025
<1025=1027,1026
<1027=1028
<1028=1030,1029
<1030=1032,1031
<1033=1034
<1035=1036
<1036=1037
<1037=1039,1038
<1039=1040
<1041=1042
<1042=1046,1043
<1043=1045,1044
<1060=1066,1065,1061
<1061=1062
<1062=1064,1063
<1066=1067
<1067=1068
<1068=1070,1069
<1070=1072,1071
<1080=1086,1085,1081
<1081=1082
<1082=1084,1083
<1086=1087
<1087=1088
<1088=1090,1089
<1090=1092,1091
<1100=1106,1105,1101
<1101=1102
<1102=1104,1103
<1106=1107
<1107=1108
<1108=1110,1109
<1110=1112,1111
<1120=1126,1125,1121
<1121=1122
<1122=1124,1123
<1126=1127
<1127=1128
<1128=1130,1129
<1130=1132,1131
<1140=1146,1145,1141
<1141=1142
<1142=1144,1143
<1146=1147
<1147=1148
<1148=1150,1149
<1150=1152,1151
<1160=1163,1162,1161
<1163=1164
<1164=1165
<1165=1174,1166
<1166=1168,1167
<1168=1170,1169
<1170=1172,1171
<1172=1173
<1174=1176,1175
<1184=1187,1186,1185
<1187=1230,1209,1188
<1188=1189
<1189=1206,1190
<1190=1194,1191
<1191=1192
<1192=1193
<1194=1195
<1195=1197,1196
<1197=1199,1198
<1199=1200
<1200=1202,1201
<1202=1204,1203
<1204=1205
<1206=1208,1207
<1209=1210
<1210=1227,1211
<1211=1215,1212
<1212=1213
<1213=1214
<1215=1216
<1216=1218,1217
<1218=1220,1219
<1220=1221
<1221=1223,1222
<1223=1225,1224
<1225=1226
<1227=1229,1228
<1230=1231
<1231=1234,1233,1232
<1246=1249,1248,1247
<1249=1255,1250
<1250=1251
<1251=1253,1252
<1253=1254
<1255=1256
<1256=1258,1257
<1258=1259
<1263=1266,1265,1264
<1266=1286,1267
<1267=1268
<1268=1284,1269
<1269=1282,1280,1270
<1270=1271
<1271=1278,1272
<1272=1273
<1273=1274
<1274=1276,1275
<1276=1277
<1278=1279
<1280=1281
<1282=1283
<1284=1285
<1286=1287
<1287=1289,1288
<1297=1303,1302,1298
<1298=1299
<1299=1301,1300
<1303=1346,1342,1333,1304
<1304=1325,1305
<1305=1306
<1306=1307
<1307=1323,1308
<1308=1321,1319,1309
<1309=1310
<1310=1317,1311
<1311=1312
<1312=1313
<1313=1315,1314
<1315=1316
<1317=1318
<1319=1320
<1321=1322
<1323=1324
<1325=1326
<1326=1330,1327
<1327=1329,1328
<1330=1332,1331
<1333=1334
<1334=1338,1335
<1335=1337,1336
<1338=1340,1339
<1340=1341
<1342=1343
<1343=1345,1344
<1346=1347
<1347=1349,1348
<1349=1350
<1350=1352,1351
<1352=1354,1353
<1367=1370,1369,1368
<1370=1371
<1371=1372
<1372=1374,1373
<1374=1375
<1375=1377,1376
<1377=1379,1378
