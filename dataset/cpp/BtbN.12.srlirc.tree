>3	FunctionDef	SrlIrc 
>4	ParameterList	QtSpeech * & speech , QWidget * parent
>5	Parameter	 
>6	Identifier	parent
>7	ParameterType	QWidget *
>8	Parameter	 
>9	Identifier	speech
>10	ParameterType	QtSpeech * &
>11	CompoundStatement	 
>12	ExpressionStatement	 
>13	CallExpression	newConn ( )
>14	ArgumentList	 
>15	Callee	newConn
>16	Identifier	newConn
>17	ExpressionStatement	 
>18	CallExpression	connect ( checkTimer , SIGNAL ( timeout ( ) ) , this , SLOT ( checkConn ( ) ) )
>19	ArgumentList	checkTimer
>20	Argument	SLOT ( checkConn ( ) )
>21	CallExpression	SLOT ( checkConn ( ) )
>22	ArgumentList	checkConn ( )
>23	Argument	checkConn ( )
>24	CallExpression	checkConn ( )
>25	ArgumentList	 
>26	Callee	checkConn
>27	Identifier	checkConn
>28	Callee	SLOT
>29	Identifier	SLOT
>30	Argument	this
>31	Identifier	this
>32	Argument	SIGNAL ( timeout ( ) )
>33	CallExpression	SIGNAL ( timeout ( ) )
>34	ArgumentList	timeout ( )
>35	Argument	timeout ( )
>36	CallExpression	timeout ( )
>37	ArgumentList	 
>38	Callee	timeout
>39	Identifier	timeout
>40	Callee	SIGNAL
>41	Identifier	SIGNAL
>42	Argument	checkTimer
>43	Identifier	checkTimer
>44	Callee	connect
>45	Identifier	connect
>46	ExpressionStatement	 
>47	CallExpression	checkTimer -> start ( )
>48	ArgumentList	 
>49	Callee	checkTimer -> start
>50	PtrMemberAccess	checkTimer -> start
>51	Identifier	start
>52	Identifier	checkTimer
>53	ExpressionStatement	 
>54	CallExpression	checkTimer -> setInterval ( 10000 )
>55	ArgumentList	10000
>56	Argument	10000
>57	PrimaryExpression	10000
>58	Callee	checkTimer -> setInterval
>59	PtrMemberAccess	checkTimer -> setInterval
>60	Identifier	setInterval
>61	Identifier	checkTimer
>62	ExpressionStatement	 
>63	CallExpression	checkTimer -> setSingleShot ( false )
>64	ArgumentList	false
>65	Argument	false
>66	Identifier	false
>67	Callee	checkTimer -> setSingleShot
>68	PtrMemberAccess	checkTimer -> setSingleShot
>69	Identifier	setSingleShot
>70	Identifier	checkTimer
>71	IdentifierDeclStatement	 
>72	IdentifierDecl	* checkTimer = new QTimer ( this )
>73	AssignmentExpr	* checkTimer = new QTimer ( this )
>74	Identifier	this
>75	Identifier	this
>76	Identifier	checkTimer
>77	IdentifierDeclType	QTimer *
>78	ExpressionStatement	 
>79	CallExpression	lay -> addWidget ( lw )
>80	ArgumentList	lw
>81	Argument	lw
>82	Identifier	lw
>83	Callee	lay -> addWidget
>84	PtrMemberAccess	lay -> addWidget
>85	Identifier	addWidget
>86	Identifier	lay
>87	IdentifierDeclStatement	 
>88	IdentifierDecl	* lay = new QVBoxLayout ( this )
>89	AssignmentExpr	* lay = new QVBoxLayout ( this )
>90	Identifier	this
>91	Identifier	this
>92	Identifier	lay
>93	IdentifierDeclType	QVBoxLayout *
>94	ExpressionStatement	 
>95	AssignmentExpr	lw = new QListWidget ( this )
>96	Identifier	this
>97	Identifier	lw
>112	FunctionDef	SrlIrc 
>113	ParameterList	 
>114	ReturnType	void
>115	CompoundStatement	 
>116	ExpressionStatement	 
>117	CallExpression	conn -> open ( )
>118	ArgumentList	 
>119	Callee	conn -> open
>120	PtrMemberAccess	conn -> open
>121	Identifier	open
>122	Identifier	conn
>123	ExpressionStatement	 
>124	Statement	 
>125	Statement	 
>126	Statement	 
>127	Statement	 
>128	Statement	 
>129	Statement	 
>130	Statement	 
>131	Statement	 
>132	Statement	 
>133	Statement	 
>134	Statement	 
>135	Statement	 
>136	Statement	 
>137	Statement	 
>138	Statement	 
>139	Statement	 
>140	Statement	 
>141	Statement	 
>142	Statement	 
>143	Statement	 
>144	Statement	 
>145	Statement	 
>146	Statement	 
>147	Statement	 
>148	ExpressionStatement	 
>149	CallExpression	connect ( conn , SIGNAL ( disconnected ( ) ) , this , SLOT ( onDisconnected ( ) ) )
>150	ArgumentList	conn
>151	Argument	SLOT ( onDisconnected ( ) )
>152	CallExpression	SLOT ( onDisconnected ( ) )
>153	ArgumentList	onDisconnected ( )
>154	Argument	onDisconnected ( )
>155	CallExpression	onDisconnected ( )
>156	ArgumentList	 
>157	Callee	onDisconnected
>158	Identifier	onDisconnected
>159	Callee	SLOT
>160	Identifier	SLOT
>161	Argument	this
>162	Identifier	this
>163	Argument	SIGNAL ( disconnected ( ) )
>164	CallExpression	SIGNAL ( disconnected ( ) )
>165	ArgumentList	disconnected ( )
>166	Argument	disconnected ( )
>167	CallExpression	disconnected ( )
>168	ArgumentList	 
>169	Callee	disconnected
>170	Identifier	disconnected
>171	Callee	SIGNAL
>172	Identifier	SIGNAL
>173	Argument	conn
>174	Identifier	conn
>175	Callee	connect
>176	Identifier	connect
>177	ExpressionStatement	 
>178	CallExpression	connect ( conn , SIGNAL ( connecting ( ) ) , this , SLOT ( onConnecting ( ) ) )
>179	ArgumentList	conn
>180	Argument	SLOT ( onConnecting ( ) )
>181	CallExpression	SLOT ( onConnecting ( ) )
>182	ArgumentList	onConnecting ( )
>183	Argument	onConnecting ( )
>184	CallExpression	onConnecting ( )
>185	ArgumentList	 
>186	Callee	onConnecting
>187	Identifier	onConnecting
>188	Callee	SLOT
>189	Identifier	SLOT
>190	Argument	this
>191	Identifier	this
>192	Argument	SIGNAL ( connecting ( ) )
>193	CallExpression	SIGNAL ( connecting ( ) )
>194	ArgumentList	connecting ( )
>195	Argument	connecting ( )
>196	CallExpression	connecting ( )
>197	ArgumentList	 
>198	Callee	connecting
>199	Identifier	connecting
>200	Callee	SIGNAL
>201	Identifier	SIGNAL
>202	Argument	conn
>203	Identifier	conn
>204	Callee	connect
>205	Identifier	connect
>206	ExpressionStatement	 
>207	CallExpression	connect ( conn , SIGNAL ( connected ( ) ) , this , SLOT ( onConnected ( ) ) )
>208	ArgumentList	conn
>209	Argument	SLOT ( onConnected ( ) )
>210	CallExpression	SLOT ( onConnected ( ) )
>211	ArgumentList	onConnected ( )
>212	Argument	onConnected ( )
>213	CallExpression	onConnected ( )
>214	ArgumentList	 
>215	Callee	onConnected
>216	Identifier	onConnected
>217	Callee	SLOT
>218	Identifier	SLOT
>219	Argument	this
>220	Identifier	this
>221	Argument	SIGNAL ( connected ( ) )
>222	CallExpression	SIGNAL ( connected ( ) )
>223	ArgumentList	connected ( )
>224	Argument	connected ( )
>225	CallExpression	connected ( )
>226	ArgumentList	 
>227	Callee	connected
>228	Identifier	connected
>229	Callee	SIGNAL
>230	Identifier	SIGNAL
>231	Argument	conn
>232	Identifier	conn
>233	Callee	connect
>234	Identifier	connect
>235	ExpressionStatement	 
>236	CallExpression	conn -> setNickName ( QString ( \"Watcher%1\" ) . arg ( qrand ( ) % 9999 ) )
>237	ArgumentList	QString ( \"Watcher%1\" ) . arg ( qrand ( ) % 9999 )
>238	Argument	QString ( \"Watcher%1\" ) . arg ( qrand ( ) % 9999 )
>239	CallExpression	QString ( \"Watcher%1\" ) . arg ( qrand ( ) % 9999 )
>240	ArgumentList	qrand ( ) % 9999
>241	Argument	qrand ( ) % 9999
>242	MultiplicativeExpression	qrand ( ) % 9999
>243	PrimaryExpression	9999
>244	CallExpression	qrand ( )
>245	ArgumentList	 
>246	Callee	qrand
>247	Identifier	qrand
>248	Callee	QString ( \"Watcher%1\" ) . arg
>249	MemberAccess	QString ( \"Watcher%1\" ) . arg
>250	Identifier	arg
>251	CallExpression	QString ( \"Watcher%1\" )
>252	ArgumentList	\"Watcher%1\"
>253	Argument	\"Watcher%1\"
>254	PrimaryExpression	\"Watcher%1\"
>255	Callee	QString
>256	Identifier	QString
>257	Callee	conn -> setNickName
>258	PtrMemberAccess	conn -> setNickName
>259	Identifier	setNickName
>260	Identifier	conn
>261	ExpressionStatement	 
>262	CallExpression	conn -> setRealName ( \"The Watcher\" )
>263	ArgumentList	\"The Watcher\"
>264	Argument	\"The Watcher\"
>265	PrimaryExpression	\"The Watcher\"
>266	Callee	conn -> setRealName
>267	PtrMemberAccess	conn -> setRealName
>268	Identifier	setRealName
>269	Identifier	conn
>270	ExpressionStatement	 
>271	CallExpression	conn -> setUserName ( \"watcher\" )
>272	ArgumentList	\"watcher\"
>273	Argument	\"watcher\"
>274	PrimaryExpression	\"watcher\"
>275	Callee	conn -> setUserName
>276	PtrMemberAccess	conn -> setUserName
>277	Identifier	setUserName
>278	Identifier	conn
>279	ExpressionStatement	 
>280	AssignmentExpr	conn = new IrcConnection ( \"irc.speedrunslive.com\" , this )
>281	Expression	\"irc.speedrunslive.com\" , this
>282	Identifier	this
>283	PrimaryExpression	\"irc.speedrunslive.com\"
>284	Identifier	conn
>285	ExpressionStatement	 
>286	Identifier	conn
>287	IfStatement	if ( conn )
>288	Statement	 
>289	Condition	 
>290	Identifier	conn
>307	FunctionDef	SrlIrc 
>308	ParameterList	const QString & msg , bool read
>309	Parameter	 
>310	Identifier	read
>311	ParameterType	bool
>312	Parameter	 
>313	Identifier	msg
>314	ParameterType	const QString &
>315	ReturnType	void
>316	CompoundStatement	 
>317	IfStatement	if ( read )
>318	CompoundStatement	 
>319	ExpressionStatement	 
>320	CallExpression	speech -> tell ( msg )
>321	ArgumentList	msg
>322	Argument	msg
>323	Identifier	msg
>324	Callee	speech -> tell
>325	PtrMemberAccess	speech -> tell
>326	Identifier	tell
>327	Identifier	speech
>328	Condition	 
>329	Identifier	read
>330	ExpressionStatement	 
>331	CallExpression	lw -> takeItem ( 0 )
>332	ArgumentList	0
>333	Argument	0
>334	PrimaryExpression	0
>335	Callee	lw -> takeItem
>336	PtrMemberAccess	lw -> takeItem
>337	Identifier	takeItem
>338	Identifier	lw
>339	WhileStatement	while ( lw -> count ( ) > 20 )
>340	Statement	 
>341	Condition	 
>342	RelationalExpression	lw -> count ( ) > 20
>343	PrimaryExpression	20
>344	CallExpression	lw -> count ( )
>345	ArgumentList	 
>346	Callee	lw -> count
>347	PtrMemberAccess	lw -> count
>348	Identifier	count
>349	Identifier	lw
>350	ExpressionStatement	 
>351	CallExpression	lw -> addItem ( msg )
>352	ArgumentList	msg
>353	Argument	msg
>354	Identifier	msg
>355	Callee	lw -> addItem
>356	PtrMemberAccess	lw -> addItem
>357	Identifier	addItem
>358	Identifier	lw
>368	FunctionDef	SrlIrc 
>369	ParameterList	 
>370	ReturnType	void
>371	CompoundStatement	 
>372	ExpressionStatement	 
>373	CallExpression	postMsg ( QString ( \"Connecting to irc.speedrunslive.com as %1...\" ) . arg ( conn -> nickName ( ) ) )
>374	ArgumentList	QString ( \"Connecting to irc.speedrunslive.com as %1...\" ) . arg ( conn -> nickName ( ) )
>375	Argument	QString ( \"Connecting to irc.speedrunslive.com as %1...\" ) . arg ( conn -> nickName ( ) )
>376	CallExpression	QString ( \"Connecting to irc.speedrunslive.com as %1...\" ) . arg ( conn -> nickName ( ) )
>377	ArgumentList	conn -> nickName ( )
>378	Argument	conn -> nickName ( )
>379	CallExpression	conn -> nickName ( )
>380	ArgumentList	 
>381	Callee	conn -> nickName
>382	PtrMemberAccess	conn -> nickName
>383	Identifier	nickName
>384	Identifier	conn
>385	Callee	QString ( \"Connecting to irc.speedrunslive.com as %1...\" ) . arg
>386	MemberAccess	QString ( \"Connecting to irc.speedrunslive.com as %1...\" ) . arg
>387	Identifier	arg
>388	CallExpression	QString ( \"Connecting to irc.speedrunslive.com as %1...\" )
>389	ArgumentList	\"Connecting to irc.speedrunslive.com as %1...\"
>390	Argument	\"Connecting to irc.speedrunslive.com as %1...\"
>391	PrimaryExpression	\"Connecting to irc.speedrunslive.com as %1...\"
>392	Callee	QString
>393	Identifier	QString
>394	Callee	postMsg
>395	Identifier	postMsg
>404	FunctionDef	SrlIrc 
>405	ParameterList	 
>406	ReturnType	void
>407	CompoundStatement	 
>408	ExpressionStatement	 
>409	CallExpression	conn -> sendCommand ( IrcCommand 
>410	ArgumentList	IrcCommand 
>411	Argument	IrcCommand 
>412	CallExpression	IrcCommand 
>413	ArgumentList	\"#watch\"
>414	Argument	\"#watch\"
>415	PrimaryExpression	\"#watch\"
>416	Callee	IrcCommand 
>417	Identifier	IrcCommand 
>418	Callee	conn -> sendCommand
>419	PtrMemberAccess	conn -> sendCommand
>420	Identifier	sendCommand
>421	Identifier	conn
>422	ExpressionStatement	 
>423	CallExpression	postMsg ( \"Connected to SRL IRC!\" , true )
>424	ArgumentList	\"Connected to SRL IRC!\"
>425	Argument	true
>426	Identifier	true
>427	Argument	\"Connected to SRL IRC!\"
>428	PrimaryExpression	\"Connected to SRL IRC!\"
>429	Callee	postMsg
>430	Identifier	postMsg
>437	FunctionDef	SrlIrc 
>438	ParameterList	 
>439	ReturnType	void
>440	CompoundStatement	 
>441	ExpressionStatement	 
>442	CallExpression	postMsg ( \"Disconnected from SRL IRC!\" , true )
>443	ArgumentList	\"Disconnected from SRL IRC!\"
>444	Argument	true
>445	Identifier	true
>446	Argument	\"Disconnected from SRL IRC!\"
>447	PrimaryExpression	\"Disconnected from SRL IRC!\"
>448	Callee	postMsg
>449	Identifier	postMsg
>454	FunctionDef	SrlIrc 
>455	ParameterList	IrcPrivateMessage * msg
>456	Parameter	 
>457	Identifier	msg
>458	ParameterType	IrcPrivateMessage *
>459	ReturnType	void
>460	CompoundStatement	 
>461	ExpressionStatement	 
>462	CallExpression	postMsg ( str , true )
>463	ArgumentList	str
>464	Argument	true
>465	Identifier	true
>466	Argument	str
>467	Identifier	str
>468	Callee	postMsg
>469	Identifier	postMsg
>470	IdentifierDeclStatement	 
>471	IdentifierDecl	str = QString ( \"%1 says
>472	AssignmentExpr	str = QString ( \"%1 says
>473	CallExpression	QString ( \"%1 says
>474	ArgumentList	msg -> content ( )
>475	Argument	msg -> content ( )
>476	CallExpression	msg -> content ( )
>477	ArgumentList	 
>478	Callee	msg -> content
>479	PtrMemberAccess	msg -> content
>480	Identifier	content
>481	Identifier	msg
>482	Callee	QString ( \"%1 says
>483	MemberAccess	QString ( \"%1 says
>484	Identifier	arg
>485	CallExpression	QString ( \"%1 says
>486	ArgumentList	msg -> nick ( )
>487	Argument	msg -> nick ( )
>488	CallExpression	msg -> nick ( )
>489	ArgumentList	 
>490	Callee	msg -> nick
>491	PtrMemberAccess	msg -> nick
>492	Identifier	nick
>493	Identifier	msg
>494	Callee	QString ( \"%1 says
>495	MemberAccess	QString ( \"%1 says
>496	Identifier	arg
>497	CallExpression	QString ( \"%1 says
>498	ArgumentList	\"%1 says
>499	Argument	\"%1 says
>500	PrimaryExpression	\"%1 says
>501	Callee	QString
>502	Identifier	QString
>503	Identifier	str
>504	Identifier	str
>505	IdentifierDeclType	QString
>506	IfStatement	if ( msg -> isPrivate ( ) )
>507	ReturnStatement	 
>508	Condition	 
>509	CallExpression	msg -> isPrivate ( )
>510	ArgumentList	 
>511	Callee	msg -> isPrivate
>512	PtrMemberAccess	msg -> isPrivate
>513	Identifier	isPrivate
>514	Identifier	msg
>528	FunctionDef	SrlIrc 
>529	ParameterList	 
>530	ReturnType	void
>531	CompoundStatement	 
>532	ExpressionStatement	 
>533	CallExpression	newConn ( )
>534	ArgumentList	 
>535	Callee	newConn
>536	Identifier	newConn
>537	IfStatement	if ( conn -> isConnected ( ) )
>538	ReturnStatement	 
>539	Condition	 
>540	CallExpression	conn -> isConnected ( )
>541	ArgumentList	 
>542	Callee	conn -> isConnected
>543	PtrMemberAccess	conn -> isConnected
>544	Identifier	isConnected
>545	Identifier	conn
>546	IfStatement	if ( ! conn )
>547	ReturnStatement	 
>548	Condition	 
>549	UnaryOp	! conn
>550	Identifier	conn
>551	UnaryOperator	!
<3=11,4
<4=8,5
<5=7,6
<8=10,9
<11=94,87,78,71,62,53,46,17,12
<12=13
<13=15,14
<15=16
<17=18
<18=44,19
<19=42,32,30,20
<20=21
<21=28,22
<22=23
<23=24
<24=26,25
<26=27
<28=29
<30=31
<32=33
<33=40,34
<34=35
<35=36
<36=38,37
<38=39
<40=41
<42=43
<44=45
<46=47
<47=49,48
<49=50
<50=52,51
<53=54
<54=58,55
<55=56
<56=57
<58=59
<59=61,60
<62=63
<63=67,64
<64=65
<65=66
<67=68
<68=70,69
<71=72
<72=77,76,73
<73=75,74
<78=79
<79=83,80
<80=81
<81=82
<83=84
<84=86,85
<87=88
<88=93,92,89
<89=91,90
<94=95
<95=97,96
<112=115,114,113
<115=287,285,279,270,261,235,206,177,148,147,146,145,144,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,116
<116=117
<117=119,118
<119=120
<120=122,121
<148=149
<149=175,150
<150=173,163,161,151
<151=152
<152=159,153
<153=154
<154=155
<155=157,156
<157=158
<159=160
<161=162
<163=164
<164=171,165
<165=166
<166=167
<167=169,168
<169=170
<171=172
<173=174
<175=176
<177=178
<178=204,179
<179=202,192,190,180
<180=181
<181=188,182
<182=183
<183=184
<184=186,185
<186=187
<188=189
<190=191
<192=193
<193=200,194
<194=195
<195=196
<196=198,197
<198=199
<200=201
<202=203
<204=205
<206=207
<207=233,208
<208=231,221,219,209
<209=210
<210=217,211
<211=212
<212=213
<213=215,214
<215=216
<217=218
<219=220
<221=222
<222=229,223
<223=224
<224=225
<225=227,226
<227=228
<229=230
<231=232
<233=234
<235=236
<236=257,237
<237=238
<238=239
<239=248,240
<240=241
<241=242
<242=244,243
<244=246,245
<246=247
<248=249
<249=251,250
<251=255,252
<252=253
<253=254
<255=256
<257=258
<258=260,259
<261=262
<262=266,263
<263=264
<264=265
<266=267
<267=269,268
<270=271
<271=275,272
<272=273
<273=274
<275=276
<276=278,277
<279=280
<280=284,281
<281=283,282
<285=286
<287=289,288
<289=290
<307=316,315,308
<308=312,309
<309=311,310
<312=314,313
<316=350,339,330,317
<317=328,318
<318=319
<319=320
<320=324,321
<321=322
<322=323
<324=325
<325=327,326
<328=329
<330=331
<331=335,332
<332=333
<333=334
<335=336
<336=338,337
<339=341,340
<341=342
<342=344,343
<344=346,345
<346=347
<347=349,348
<350=351
<351=355,352
<352=353
<353=354
<355=356
<356=358,357
<368=371,370,369
<371=372
<372=373
<373=394,374
<374=375
<375=376
<376=385,377
<377=378
<378=379
<379=381,380
<381=382
<382=384,383
<385=386
<386=388,387
<388=392,389
<389=390
<390=391
<392=393
<394=395
<404=407,406,405
<407=422,408
<408=409
<409=418,410
<410=411
<411=412
<412=416,413
<413=414
<414=415
<416=417
<418=419
<419=421,420
<422=423
<423=429,424
<424=427,425
<425=426
<427=428
<429=430
<437=440,439,438
<440=441
<441=442
<442=448,443
<443=446,444
<444=445
<446=447
<448=449
<454=460,459,455
<455=456
<456=458,457
<460=506,470,461
<461=462
<462=468,463
<463=466,464
<464=465
<466=467
<468=469
<470=471
<471=505,504,472
<472=503,473
<473=482,474
<474=475
<475=476
<476=478,477
<478=479
<479=481,480
<482=483
<483=485,484
<485=494,486
<486=487
<487=488
<488=490,489
<490=491
<491=493,492
<494=495
<495=497,496
<497=501,498
<498=499
<499=500
<501=502
<506=508,507
<508=509
<509=511,510
<511=512
<512=514,513
<528=531,530,529
<531=546,537,532
<532=533
<533=535,534
<535=536
<537=539,538
<539=540
<540=542,541
<542=543
<543=545,544
<546=548,547
<548=549
<549=551,550
