>4	FunctionDef	BuildPointCloudTask (const dvo 
>5	ParameterList	const dvo 
>6	Parameter	 
>7	Identifier	callback
>8	ParameterType	AsyncPointCloudBuilder 
>9	Parameter	 
>10	Identifier	pose
>11	ParameterType	const Eigen 
>12	Parameter	 
>13	Identifier	image
>14	ParameterType	const dvo 
>15	CompoundStatement	 
>22	FunctionDef	~BuildPointCloudTask ()
>23	ParameterList	 
>24	CompoundStatement	 
>28	FunctionDef	execute ()
>29	ParameterList	 
>30	ReturnType	virtual tbb 
>31	CompoundStatement	 
>32	ReturnStatement	 
>33	Identifier	NULL
>34	ExpressionStatement	 
>35	CallExpression	callback_ ( job_ . build ( ) )
>36	ArgumentList	job_ . build ( )
>37	Argument	job_ . build ( )
>38	CallExpression	job_ . build ( )
>39	ArgumentList	 
>40	Callee	job_ . build
>41	MemberAccess	job_ . build
>42	Identifier	build
>43	Identifier	job_
>44	Callee	callback_
>45	Identifier	callback_
>56	FunctionDef	AsyncPointCloudBuilder 
>57	ParameterList	const dvo 
>58	Parameter	 
>59	Identifier	pose
>60	ParameterType	const Eigen 
>61	Parameter	 
>62	Identifier	image
>63	ParameterType	const dvo 
>64	CompoundStatement	 
>70	FunctionDef	AsyncPointCloudBuilder 
>71	ParameterList	 
>72	ReturnType	AsyncPointCloudBuilder 
>73	CompoundStatement	 
>74	ReturnStatement	 
>75	Identifier	cloud_
>76	IfStatement	if ( ! cloud_ )
>77	CompoundStatement	 
>78	ForStatement	for ( int idx = 0 ; idx < image . width * image . height ; ++ idx , intensity_ptr += step )
>79	CompoundStatement	 
>80	ExpressionStatement	 
>81	CallExpression	cloud_ -> push_back ( p )
>82	ArgumentList	p
>83	Argument	p
>84	Identifier	p
>85	Callee	cloud_ -> push_back
>86	PtrMemberAccess	cloud_ -> push_back
>87	Identifier	push_back
>88	Identifier	cloud_
>89	IfStatement	if ( image . hasRgb ( ) )
>90	ElseStatement	else
>91	CompoundStatement	 
>92	ExpressionStatement	 
>93	AssignmentExpr	p . r = p . g = p . b = * intensity_ptr
>94	AssignmentExpr	p . g = p . b = * intensity_ptr
>95	AssignmentExpr	p . b = * intensity_ptr
>96	UnaryOp	* intensity_ptr
>97	Identifier	intensity_ptr
>98	UnaryOperator	*
>99	MemberAccess	p . b
>100	Identifier	b
>101	Identifier	p
>102	MemberAccess	p . g
>103	Identifier	g
>104	Identifier	p
>105	MemberAccess	p . r
>106	Identifier	r
>107	Identifier	p
>108	CompoundStatement	 
>109	ExpressionStatement	 
>110	AssignmentExpr	p . r = intensity_ptr [ 2 ]
>111	ArrayIndexing	intensity_ptr [ 2 ]
>112	PrimaryExpression	2
>113	Identifier	intensity_ptr
>114	MemberAccess	p . r
>115	Identifier	r
>116	Identifier	p
>117	ExpressionStatement	 
>118	AssignmentExpr	p . g = intensity_ptr [ 1 ]
>119	ArrayIndexing	intensity_ptr [ 1 ]
>120	PrimaryExpression	1
>121	Identifier	intensity_ptr
>122	MemberAccess	p . g
>123	Identifier	g
>124	Identifier	p
>125	ExpressionStatement	 
>126	AssignmentExpr	p . b = intensity_ptr [ 0 ]
>127	ArrayIndexing	intensity_ptr [ 0 ]
>128	PrimaryExpression	0
>129	Identifier	intensity_ptr
>130	MemberAccess	p . b
>131	Identifier	b
>132	Identifier	p
>133	Condition	 
>134	CallExpression	image . hasRgb ( )
>135	ArgumentList	 
>136	Callee	image . hasRgb
>137	MemberAccess	image . hasRgb
>138	Identifier	hasRgb
>139	Identifier	image
>140	ExpressionStatement	 
>141	AssignmentExpr	p . z = col ( 2 )
>142	CallExpression	col ( 2 )
>143	ArgumentList	2
>144	Argument	2
>145	PrimaryExpression	2
>146	Callee	col
>147	Identifier	col
>148	MemberAccess	p . z
>149	Identifier	z
>150	Identifier	p
>151	ExpressionStatement	 
>152	AssignmentExpr	p . y = col ( 1 )
>153	CallExpression	col ( 1 )
>154	ArgumentList	1
>155	Argument	1
>156	PrimaryExpression	1
>157	Callee	col
>158	Identifier	col
>159	MemberAccess	p . y
>160	Identifier	y
>161	Identifier	p
>162	ExpressionStatement	 
>163	AssignmentExpr	p . x = col ( 0 )
>164	CallExpression	col ( 0 )
>165	ArgumentList	0
>166	Argument	0
>167	PrimaryExpression	0
>168	Callee	col
>169	Identifier	col
>170	MemberAccess	p . x
>171	Identifier	x
>172	Identifier	p
>173	IdentifierDeclStatement	 
>174	IdentifierDecl	& col = pointcloud . col ( idx )
>175	AssignmentExpr	& col = pointcloud . col ( idx )
>176	CallExpression	pointcloud . col ( idx )
>177	ArgumentList	idx
>178	Argument	idx
>179	Identifier	idx
>180	Callee	pointcloud . col
>181	MemberAccess	pointcloud . col
>182	Identifier	col
>183	Identifier	pointcloud
>184	Identifier	col
>185	Identifier	col
>186	IdentifierDeclType	const Eigen 
>187	Expression	 
>188	AssignmentExpr	intensity_ptr += step
>189	Identifier	step
>190	Identifier	intensity_ptr
>191	UnaryExpression	++ idx
>192	Identifier	idx
>193	IncDec	++
>194	Condition	 
>195	RelationalExpression	idx < image . width * image . height
>196	MultiplicativeExpression	image . width * image . height
>197	MemberAccess	image . height
>198	Identifier	height
>199	Identifier	image
>200	MemberAccess	image . width
>201	Identifier	width
>202	Identifier	image
>203	Identifier	idx
>204	ForInit	 
>205	IdentifierDeclStatement	int idx = 0 ;
>206	IdentifierDecl	idx = 0
>207	AssignmentExpr	idx = 0
>208	PrimaryExpression	0
>209	Identifier	idx
>210	Identifier	idx
>211	IdentifierDeclType	int
>212	IdentifierDeclStatement	 
>213	IdentifierDecl	p
>214	Identifier	p
>215	IdentifierDeclType	AsyncPointCloudBuilder 
>216	IdentifierDeclStatement	 
>217	IdentifierDecl	step = image . hasRgb ( ) ? 3 
>218	AssignmentExpr	step = image . hasRgb ( ) ? 3 
>219	ConditionalExpression	image . hasRgb ( ) ? 3 
>220	PrimaryExpression	1
>221	PrimaryExpression	3
>222	Condition	image . hasRgb ( )
>223	CallExpression	image . hasRgb ( )
>224	ArgumentList	 
>225	Callee	image . hasRgb
>226	MemberAccess	image . hasRgb
>227	Identifier	hasRgb
>228	Identifier	image
>229	Identifier	step
>230	Identifier	step
>231	IdentifierDeclType	int
>232	IfStatement	if ( image . hasRgb ( ) )
>233	ElseStatement	else
>234	CompoundStatement	 
>235	ExpressionStatement	 
>236	Statement	 
>237	Statement	 
>238	Statement	 
>239	Statement	 
>240	Statement	 
>241	Statement	 
>242	Statement	 
>243	Statement	 
>244	Statement	 
>245	Statement	 
>246	Statement	 
>247	Statement	 
>248	CompoundStatement	 
>249	ExpressionStatement	 
>250	Statement	 
>251	Statement	 
>252	Statement	 
>253	Statement	 
>254	Statement	 
>255	Statement	 
>256	Statement	 
>257	Statement	 
>258	Statement	 
>259	Statement	 
>260	Statement	 
>261	Statement	 
>262	Condition	 
>263	CallExpression	image . hasRgb ( )
>264	ArgumentList	 
>265	Callee	image . hasRgb
>266	MemberAccess	image . hasRgb
>267	Identifier	hasRgb
>268	Identifier	image
>269	IdentifierDeclStatement	 
>270	IdentifierDecl	* intensity_ptr
>271	Identifier	intensity_ptr
>272	IdentifierDeclType	const float *
>273	ExpressionStatement	 
>274	CallExpression	cloud_ -> reserve ( image . width * image . height )
>275	ArgumentList	image . width * image . height
>276	Argument	image . width * image . height
>277	MultiplicativeExpression	image . width * image . height
>278	MemberAccess	image . height
>279	Identifier	height
>280	Identifier	image
>281	MemberAccess	image . width
>282	Identifier	width
>283	Identifier	image
>284	Callee	cloud_ -> reserve
>285	PtrMemberAccess	cloud_ -> reserve
>286	Identifier	reserve
>287	Identifier	cloud_
>288	ExpressionStatement	 
>289	CallExpression	cloud_ . reset ( new AsyncPointCloudBuilder 
>290	ArgumentList	new AsyncPointCloudBuilder 
>291	Argument	new AsyncPointCloudBuilder 
>292	UnaryExpression	new AsyncPointCloudBuilder 
>293	Callee	cloud_ . reset
>294	MemberAccess	cloud_ . reset
>295	Identifier	reset
>296	Identifier	cloud_
>297	ExpressionStatement	 
>298	UnaryOp	* image . pointcloud
>299	MemberAccess	image . pointcloud
>300	Identifier	pointcloud
>301	Identifier	image
>302	UnaryOperator	*
>303	Statement	 
>304	Statement	 
>305	Statement	 
>306	Statement	 
>307	Statement	 
>308	Statement	 
>309	Statement	 
>310	Statement	 
>311	Statement	 
>312	Statement	 
>313	Statement	 
>314	Statement	 
>315	Statement	 
>316	Statement	 
>317	Statement	 
>318	Statement	 
>319	Statement	 
>320	ExpressionStatement	 
>321	CallExpression	image . buildPointCloud ( )
>322	ArgumentList	 
>323	Callee	image . buildPointCloud
>324	MemberAccess	image . buildPointCloud
>325	Identifier	buildPointCloud
>326	Identifier	image
>327	Condition	 
>328	UnaryOp	! cloud_
>329	Identifier	cloud_
>330	UnaryOperator	!
>354	FunctionDef	AsyncPointCloudBuilder 
>355	ParameterList	 
>356	CompoundStatement	 
>357	IdentifierDeclStatement	 
>358	IdentifierDecl	init ( tbb 
>359	Identifier	tbb 
>360	Identifier	init
>361	IdentifierDeclType	tbb 
>362	Statement	 
>367	FunctionDef	AsyncPointCloudBuilder 
>368	ParameterList	 
>369	CompoundStatement	 
>373	FunctionDef	AsyncPointCloudBuilder 
>374	ParameterList	const dvo 
>375	Parameter	 
>376	Identifier	pose
>377	ParameterType	const Eigen 
>378	Parameter	 
>379	Identifier	image
>380	ParameterType	const dvo 
>381	ReturnType	void
>382	CompoundStatement	 
>383	ExpressionStatement	 
>384	CallExpression	tbb 
>385	ArgumentList	* t
>386	Argument	* t
>387	UnaryOp	* t
>388	Identifier	t
>389	UnaryOperator	*
>390	Callee	tbb 
>391	Identifier	tbb 
>392	ExpressionStatement	 
>393	CallExpression	BuildPointCloudTask ( image , pose , done_ )
>394	ArgumentList	image
>395	Argument	done_
>396	Identifier	done_
>397	Argument	pose
>398	Identifier	pose
>399	Argument	image
>400	Identifier	image
>401	Callee	BuildPointCloudTask
>402	Identifier	BuildPointCloudTask
>403	Statement	 
>404	Statement	 
>405	Statement	 
>406	Statement	 
>407	Statement	 
>408	Statement	 
>409	Statement	 
>410	Statement	 
>411	Statement	 
>412	Statement	 
>413	Statement	 
>414	Statement	 
>415	Statement	 
>416	Statement	 
>425	FunctionDef	AsyncPointCloudBuilder 
>426	ParameterList	DoneCallback & callback
>427	Parameter	 
>428	Identifier	callback
>429	ParameterType	DoneCallback &
>430	ReturnType	void
>431	CompoundStatement	 
>432	ExpressionStatement	 
>433	AssignmentExpr	done_ = callback
>434	Identifier	callback
>435	Identifier	done_
<4=15,5
<5=12,9,6
<6=8,7
<9=11,10
<12=14,13
<22=24,23
<28=31,30,29
<31=34,32
<32=33
<34=35
<35=44,36
<36=37
<37=38
<38=40,39
<40=41
<41=43,42
<44=45
<56=64,57
<57=61,58
<58=60,59
<61=63,62
<70=73,72,71
<73=76,74
<74=75
<76=327,77
<77=320,319,318,317,316,315,314,313,312,311,310,309,308,307,306,305,304,303,297,288,273,269,232,216,212,78
<78=204,194,187,79
<79=173,162,151,140,89,80
<80=81
<81=85,82
<82=83
<83=84
<85=86
<86=88,87
<89=133,108,90
<90=91
<91=92
<92=93
<93=105,94
<94=102,95
<95=99,96
<96=98,97
<99=101,100
<102=104,103
<105=107,106
<108=125,117,109
<109=110
<110=114,111
<111=113,112
<114=116,115
<117=118
<118=122,119
<119=121,120
<122=124,123
<125=126
<126=130,127
<127=129,128
<130=132,131
<133=134
<134=136,135
<136=137
<137=139,138
<140=141
<141=148,142
<142=146,143
<143=144
<144=145
<146=147
<148=150,149
<151=152
<152=159,153
<153=157,154
<154=155
<155=156
<157=158
<159=161,160
<162=163
<163=170,164
<164=168,165
<165=166
<166=167
<168=169
<170=172,171
<173=174
<174=186,185,175
<175=184,176
<176=180,177
<177=178
<178=179
<180=181
<181=183,182
<187=191,188
<188=190,189
<191=193,192
<194=195
<195=203,196
<196=200,197
<197=199,198
<200=202,201
<204=205
<205=206
<206=211,210,207
<207=209,208
<212=213
<213=215,214
<216=217
<217=231,230,218
<218=229,219
<219=222,221,220
<222=223
<223=225,224
<225=226
<226=228,227
<232=262,248,233
<233=234
<234=247,246,245,244,243,242,241,240,239,238,237,236,235
<248=261,260,259,258,257,256,255,254,253,252,251,250,249
<262=263
<263=265,264
<265=266
<266=268,267
<269=270
<270=272,271
<273=274
<274=284,275
<275=276
<276=277
<277=281,278
<278=280,279
<281=283,282
<284=285
<285=287,286
<288=289
<289=293,290
<290=291
<291=292
<293=294
<294=296,295
<297=298
<298=302,299
<299=301,300
<320=321
<321=323,322
<323=324
<324=326,325
<327=328
<328=330,329
<354=356,355
<356=362,357
<357=358
<358=361,360,359
<367=369,368
<373=382,381,374
<374=378,375
<375=377,376
<378=380,379
<382=416,415,414,413,412,411,410,409,408,407,406,405,404,403,392,383
<383=384
<384=390,385
<385=386
<386=387
<387=389,388
<390=391
<392=393
<393=401,394
<394=399,397,395
<395=396
<397=398
<399=400
<401=402
<425=431,430,426
<426=427
<427=429,428
<431=432
<432=433
<433=435,434
