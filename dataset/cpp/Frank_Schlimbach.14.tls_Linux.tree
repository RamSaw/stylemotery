>3	FunctionDef	CnC_TlsAlloc ()
>4	ParameterList	 
>5	ReturnType	int
>6	CompoundStatement	 
>7	ReturnStatement	 
>8	CastExpression	( int ) key
>9	Identifier	key
>10	CastTarget	int
>11	IfStatement	if ( status )
>12	ExpressionStatement	 
>13	CallExpression	CNC_ABORT ( \"TLS key creation failed.\" )
>14	ArgumentList	\"TLS key creation failed.\"
>15	Argument	\"TLS key creation failed.\"
>16	PrimaryExpression	\"TLS key creation failed.\"
>17	Callee	CNC_ABORT
>18	Identifier	CNC_ABORT
>19	Condition	 
>20	Identifier	status
>21	IdentifierDeclStatement	 
>22	IdentifierDecl	status = pthread_key_create ( & key , NULL )
>23	AssignmentExpr	status = pthread_key_create ( & key , NULL )
>24	CallExpression	pthread_key_create ( & key , NULL )
>25	ArgumentList	& key
>26	Argument	NULL
>27	Identifier	NULL
>28	Argument	& key
>29	UnaryOp	& key
>30	Identifier	key
>31	UnaryOperator	&
>32	Callee	pthread_key_create
>33	Identifier	pthread_key_create
>34	Identifier	status
>35	Identifier	status
>36	IdentifierDeclType	int
>37	IdentifierDeclStatement	 
>38	IdentifierDecl	key
>39	Identifier	key
>40	IdentifierDeclType	pthread_key_t
>49	FunctionDef	CnC_TlsGetValue (int key)
>50	ParameterList	int key
>51	Parameter	 
>52	Identifier	key
>53	ParameterType	int
>54	ReturnType	void *
>55	CompoundStatement	 
>56	ReturnStatement	 
>57	CallExpression	pthread_getspecific ( ( pthread_key_t ) key )
>58	ArgumentList	( pthread_key_t ) key
>59	Argument	( pthread_key_t ) key
>60	CastExpression	( pthread_key_t ) key
>61	Identifier	key
>62	CastTarget	pthread_key_t
>63	Callee	pthread_getspecific
>64	Identifier	pthread_getspecific
>70	FunctionDef	CnC_TlsSetValue (int key , void * value)
>71	ParameterList	int key , void * value
>72	Parameter	 
>73	Identifier	value
>74	ParameterType	void *
>75	Parameter	 
>76	Identifier	key
>77	ParameterType	int
>78	ReturnType	void
>79	CompoundStatement	 
>80	ExpressionStatement	 
>81	CallExpression	pthread_setspecific ( ( pthread_key_t ) key , value )
>82	ArgumentList	( pthread_key_t ) key
>83	Argument	value
>84	Identifier	value
>85	Argument	( pthread_key_t ) key
>86	CastExpression	( pthread_key_t ) key
>87	Identifier	key
>88	CastTarget	pthread_key_t
>89	Callee	pthread_setspecific
>90	Identifier	pthread_setspecific
>96	FunctionDef	CnC_TlsFree (int key)
>97	ParameterList	int key
>98	Parameter	 
>99	Identifier	key
>100	ParameterType	int
>101	ReturnType	void
>102	CompoundStatement	 
>103	IfStatement	if ( status )
>104	ExpressionStatement	 
>105	CallExpression	CNC_ABORT ( \"TLS key deletion failed.\" )
>106	ArgumentList	\"TLS key deletion failed.\"
>107	Argument	\"TLS key deletion failed.\"
>108	PrimaryExpression	\"TLS key deletion failed.\"
>109	Callee	CNC_ABORT
>110	Identifier	CNC_ABORT
>111	Condition	 
>112	Identifier	status
>113	IdentifierDeclStatement	 
>114	IdentifierDecl	status = pthread_key_delete ( ( pthread_key_t ) key )
>115	AssignmentExpr	status = pthread_key_delete ( ( pthread_key_t ) key )
>116	CallExpression	pthread_key_delete ( ( pthread_key_t ) key )
>117	ArgumentList	( pthread_key_t ) key
>118	Argument	( pthread_key_t ) key
>119	CastExpression	( pthread_key_t ) key
>120	Identifier	key
>121	CastTarget	pthread_key_t
>122	Callee	pthread_key_delete
>123	Identifier	pthread_key_delete
>124	Identifier	status
>125	Identifier	status
>126	IdentifierDeclType	int
<3=6,5,4
<6=37,21,11,7
<7=8
<8=10,9
<11=19,12
<12=13
<13=17,14
<14=15
<15=16
<17=18
<19=20
<21=22
<22=36,35,23
<23=34,24
<24=32,25
<25=28,26
<26=27
<28=29
<29=31,30
<32=33
<37=38
<38=40,39
<49=55,54,50
<50=51
<51=53,52
<55=56
<56=57
<57=63,58
<58=59
<59=60
<60=62,61
<63=64
<70=79,78,71
<71=75,72
<72=74,73
<75=77,76
<79=80
<80=81
<81=89,82
<82=85,83
<83=84
<85=86
<86=88,87
<89=90
<96=102,101,97
<97=98
<98=100,99
<102=113,103
<103=111,104
<104=105
<105=109,106
<106=107
<107=108
<109=110
<111=112
<113=114
<114=126,125,115
<115=124,116
<116=122,117
<117=118
<118=119
<119=121,120
<122=123
