>3	FunctionDef	KFConstraintStruct 
>4	ParameterList	 
>5	CompoundStatement	 
>6	ExpressionStatement	 
>7	Identifier	edge
>8	IfStatement	if ( edge != 0 )
>9	Statement	 
>10	Condition	 
>11	EqualityExpression	edge != 0
>12	PrimaryExpression	0
>13	Identifier	edge
>18	FunctionDef	KeyFrameGraph 
>19	ParameterList	 
>20	CompoundStatement	 
>21	ExpressionStatement	 
>22	AssignmentExpr	totalVertices = 0
>23	PrimaryExpression	0
>24	Identifier	totalVertices
>25	ExpressionStatement	 
>26	AssignmentExpr	totalEdges = 0
>27	PrimaryExpression	0
>28	Identifier	totalEdges
>29	ExpressionStatement	 
>30	AssignmentExpr	totalPoints = 0
>31	PrimaryExpression	0
>32	Identifier	totalPoints
>33	ExpressionStatement	 
>34	CallExpression	algorithm -> setWriteDebug ( true )
>35	ArgumentList	true
>36	Argument	true
>37	Identifier	true
>38	Callee	algorithm -> setWriteDebug
>39	PtrMemberAccess	algorithm -> setWriteDebug
>40	Identifier	setWriteDebug
>41	Identifier	algorithm
>42	ExpressionStatement	 
>43	CallExpression	blockSolver -> setWriteDebug ( true )
>44	ArgumentList	true
>45	Argument	true
>46	Identifier	true
>47	Callee	blockSolver -> setWriteDebug
>48	PtrMemberAccess	blockSolver -> setWriteDebug
>49	Identifier	setWriteDebug
>50	Identifier	blockSolver
>51	ExpressionStatement	 
>52	CallExpression	solver -> setWriteDebug ( true )
>53	ArgumentList	true
>54	Argument	true
>55	Identifier	true
>56	Callee	solver -> setWriteDebug
>57	PtrMemberAccess	solver -> setWriteDebug
>58	Identifier	setWriteDebug
>59	Identifier	solver
>60	ExpressionStatement	 
>61	CallExpression	graph . setVerbose ( false )
>62	ArgumentList	false
>63	Argument	false
>64	Identifier	false
>65	Callee	graph . setVerbose
>66	MemberAccess	graph . setVerbose
>67	Identifier	setVerbose
>68	Identifier	graph
>69	ExpressionStatement	 
>70	CallExpression	graph . setAlgorithm ( algorithm )
>71	ArgumentList	algorithm
>72	Argument	algorithm
>73	Identifier	algorithm
>74	Callee	graph . setAlgorithm
>75	MemberAccess	graph . setAlgorithm
>76	Identifier	setAlgorithm
>77	Identifier	graph
>78	IdentifierDeclStatement	 
>79	IdentifierDecl	* algorithm = new g2o 
>80	AssignmentExpr	* algorithm = new g2o 
>81	Identifier	blockSolver
>82	Identifier	blockSolver
>83	Identifier	algorithm
>84	IdentifierDeclType	g2o 
>85	IdentifierDeclStatement	 
>86	IdentifierDecl	* blockSolver = new BlockSolver ( solver )
>87	AssignmentExpr	* blockSolver = new BlockSolver ( solver )
>88	Identifier	solver
>89	Identifier	solver
>90	Identifier	blockSolver
>91	IdentifierDeclType	BlockSolver *
>92	IdentifierDeclStatement	 
>93	IdentifierDecl	* solver = new LinearSolver ( )
>94	AssignmentExpr	* solver = new LinearSolver ( )
>95	UnaryExpression	new LinearSolver ( )
>96	Identifier	solver
>97	Identifier	solver
>98	IdentifierDeclType	LinearSolver *
>99	IdentifierDeclStatement	 
>100	IdentifierDecl	LinearSolver
>101	Identifier	LinearSolver
>102	IdentifierDeclType	g2o 
>103	IdentifierDeclStatement	 
>104	IdentifierDecl	BlockSolver
>105	Identifier	BlockSolver
>106	IdentifierDeclType	g2o 
>121	FunctionDef	KeyFrameGraph 
>122	ParameterList	 
>123	CompoundStatement	 
>124	ExpressionStatement	 
>125	Identifier	p
>126	Statement	 
>127	Statement	 
>128	Statement	 
>129	Label	 
>130	Identifier	p
>131	Statement	 
>132	Statement	 
>133	Statement	 
>134	Statement	 
>135	ExpressionStatement	 
>136	CallExpression	idToKeyFrame . clear ( )
>137	ArgumentList	 
>138	Callee	idToKeyFrame . clear
>139	MemberAccess	idToKeyFrame . clear
>140	Identifier	clear
>141	Identifier	idToKeyFrame
>142	ExpressionStatement	 
>143	Identifier	edge
>144	Statement	 
>145	Statement	 
>146	Statement	 
>147	Label	 
>148	Identifier	edge
>149	Statement	 
>150	Statement	 
>151	Statement	 
>152	Statement	 
>157	FunctionDef	KeyFrameGraph 
>158	ParameterList	Frame * frame
>159	Parameter	 
>160	Identifier	frame
>161	ParameterType	Frame *
>162	ReturnType	void
>163	CompoundStatement	 
>164	ExpressionStatement	 
>165	CallExpression	allFramePosesMutex . unlock ( )
>166	ArgumentList	 
>167	Callee	allFramePosesMutex . unlock
>168	MemberAccess	allFramePosesMutex . unlock
>169	Identifier	unlock
>170	Identifier	allFramePosesMutex
>171	ExpressionStatement	 
>172	CallExpression	allFramePoses . push_back ( pose )
>173	ArgumentList	pose
>174	Argument	pose
>175	Identifier	pose
>176	Callee	allFramePoses . push_back
>177	MemberAccess	allFramePoses . push_back
>178	Identifier	push_back
>179	Identifier	allFramePoses
>180	ExpressionStatement	 
>181	CallExpression	allFramePosesMutex . lock ( )
>182	ArgumentList	 
>183	Callee	allFramePosesMutex . lock
>184	MemberAccess	allFramePosesMutex . lock
>185	Identifier	lock
>186	Identifier	allFramePosesMutex
>187	IdentifierDeclStatement	 
>188	IdentifierDecl	* pose = frame -> pose
>189	AssignmentExpr	* pose = frame -> pose
>190	PtrMemberAccess	frame -> pose
>191	Identifier	pose
>192	Identifier	frame
>193	Identifier	pose
>194	Identifier	pose
>195	IdentifierDeclType	FramePoseStruct *
>196	ExpressionStatement	 
>197	AssignmentExpr	frame -> pose -> isRegisteredToGraph = true
>198	Identifier	true
>199	PtrMemberAccess	frame -> pose -> isRegisteredToGraph
>200	Identifier	isRegisteredToGraph
>201	PtrMemberAccess	frame -> pose
>202	Identifier	pose
>203	Identifier	frame
>217	FunctionDef	KeyFrameGraph 
>218	ParameterList	std 
>219	Parameter	 
>220	Identifier	folder
>221	ParameterType	std 
>222	ReturnType	void
>223	CompoundStatement	 
>224	ExpressionStatement	 
>225	CallExpression	printf ( \"DUMP MAP
>226	ArgumentList	\"DUMP MAP
>227	Argument	( int ) edgesAll . size ( )
>228	CastExpression	( int ) edgesAll . size ( )
>229	CallExpression	edgesAll . size ( )
>230	ArgumentList	 
>231	Callee	edgesAll . size
>232	MemberAccess	edgesAll . size
>233	Identifier	size
>234	Identifier	edgesAll
>235	CastTarget	int
>236	Argument	\"DUMP MAP
>237	PrimaryExpression	\"DUMP MAP
>238	Callee	printf
>239	Identifier	printf
>240	ExpressionStatement	 
>241	CallExpression	fle . close ( )
>242	ArgumentList	 
>243	Callee	fle . close
>244	MemberAccess	fle . close
>245	Identifier	close
>246	Identifier	fle
>247	ExpressionStatement	 
>248	ShiftExpression	fle << usedPixels
>249	Identifier	usedPixels
>250	Identifier	fle
>251	ExpressionStatement	 
>252	CallExpression	fle . open ( folder + \"/usedPixels.txt\" )
>253	ArgumentList	folder + \"/usedPixels.txt\"
>254	Argument	folder + \"/usedPixels.txt\"
>255	AdditiveExpression	folder + \"/usedPixels.txt\"
>256	PrimaryExpression	\"/usedPixels.txt\"
>257	Identifier	folder
>258	Callee	fle . open
>259	MemberAccess	fle . open
>260	Identifier	open
>261	Identifier	fle
>262	ExpressionStatement	 
>263	CallExpression	fle . close ( )
>264	ArgumentList	 
>265	Callee	fle . close
>266	MemberAccess	fle . close
>267	Identifier	close
>268	Identifier	fle
>269	ExpressionStatement	 
>270	ShiftExpression	fle << meanRootInformation
>271	Identifier	meanRootInformation
>272	Identifier	fle
>273	ExpressionStatement	 
>274	CallExpression	fle . open ( folder + \"/meanRootInformation.txt\" )
>275	ArgumentList	folder + \"/meanRootInformation.txt\"
>276	Argument	folder + \"/meanRootInformation.txt\"
>277	AdditiveExpression	folder + \"/meanRootInformation.txt\"
>278	PrimaryExpression	\"/meanRootInformation.txt\"
>279	Identifier	folder
>280	Callee	fle . open
>281	MemberAccess	fle . open
>282	Identifier	open
>283	Identifier	fle
>284	ExpressionStatement	 
>285	CallExpression	fle . close ( )
>286	ArgumentList	 
>287	Callee	fle . close
>288	MemberAccess	fle . close
>289	Identifier	close
>290	Identifier	fle
>291	ExpressionStatement	 
>292	ShiftExpression	fle << error
>293	Identifier	error
>294	Identifier	fle
>295	ExpressionStatement	 
>296	CallExpression	fle . open ( folder + \"/error.txt\" )
>297	ArgumentList	folder + \"/error.txt\"
>298	Argument	folder + \"/error.txt\"
>299	AdditiveExpression	folder + \"/error.txt\"
>300	PrimaryExpression	\"/error.txt\"
>301	Identifier	folder
>302	Callee	fle . open
>303	MemberAccess	fle . open
>304	Identifier	open
>305	Identifier	fle
>306	ExpressionStatement	 
>307	CallExpression	fle . close ( )
>308	ArgumentList	 
>309	Callee	fle . close
>310	MemberAccess	fle . close
>311	Identifier	close
>312	Identifier	fle
>313	ExpressionStatement	 
>314	ShiftExpression	fle << distance
>315	Identifier	distance
>316	Identifier	fle
>317	ExpressionStatement	 
>318	CallExpression	fle . open ( folder + \"/distance.txt\" )
>319	ArgumentList	folder + \"/distance.txt\"
>320	Argument	folder + \"/distance.txt\"
>321	AdditiveExpression	folder + \"/distance.txt\"
>322	PrimaryExpression	\"/distance.txt\"
>323	Identifier	folder
>324	Callee	fle . open
>325	MemberAccess	fle . open
>326	Identifier	open
>327	Identifier	fle
>328	ExpressionStatement	 
>329	CallExpression	fle . close ( )
>330	ArgumentList	 
>331	Callee	fle . close
>332	MemberAccess	fle . close
>333	Identifier	close
>334	Identifier	fle
>335	ExpressionStatement	 
>336	ShiftExpression	fle << consistency
>337	Identifier	consistency
>338	Identifier	fle
>339	ExpressionStatement	 
>340	CallExpression	fle . open ( folder + \"/consistency.txt\" )
>341	ArgumentList	folder + \"/consistency.txt\"
>342	Argument	folder + \"/consistency.txt\"
>343	AdditiveExpression	folder + \"/consistency.txt\"
>344	PrimaryExpression	\"/consistency.txt\"
>345	Identifier	folder
>346	Callee	fle . open
>347	MemberAccess	fle . open
>348	Identifier	open
>349	Identifier	fle
>350	ExpressionStatement	 
>351	CallExpression	fle . close ( )
>352	ArgumentList	 
>353	Callee	fle . close
>354	MemberAccess	fle . close
>355	Identifier	close
>356	Identifier	fle
>357	ExpressionStatement	 
>358	ShiftExpression	fle << usage
>359	Identifier	usage
>360	Identifier	fle
>361	ExpressionStatement	 
>362	CallExpression	fle . open ( folder + \"/usage.txt\" )
>363	ArgumentList	folder + \"/usage.txt\"
>364	Argument	folder + \"/usage.txt\"
>365	AdditiveExpression	folder + \"/usage.txt\"
>366	PrimaryExpression	\"/usage.txt\"
>367	Identifier	folder
>368	Callee	fle . open
>369	MemberAccess	fle . open
>370	Identifier	open
>371	Identifier	fle
>372	ExpressionStatement	 
>373	CallExpression	fle . close ( )
>374	ArgumentList	 
>375	Callee	fle . close
>376	MemberAccess	fle . close
>377	Identifier	close
>378	Identifier	fle
>379	ExpressionStatement	 
>380	ShiftExpression	fle << resP
>381	Identifier	resP
>382	Identifier	fle
>383	ExpressionStatement	 
>384	CallExpression	fle . open ( folder + \"/residualP.txt\" )
>385	ArgumentList	folder + \"/residualP.txt\"
>386	Argument	folder + \"/residualP.txt\"
>387	AdditiveExpression	folder + \"/residualP.txt\"
>388	PrimaryExpression	\"/residualP.txt\"
>389	Identifier	folder
>390	Callee	fle . open
>391	MemberAccess	fle . open
>392	Identifier	open
>393	Identifier	fle
>394	ExpressionStatement	 
>395	CallExpression	fle . close ( )
>396	ArgumentList	 
>397	Callee	fle . close
>398	MemberAccess	fle . close
>399	Identifier	close
>400	Identifier	fle
>401	ExpressionStatement	 
>402	ShiftExpression	fle << resD
>403	Identifier	resD
>404	Identifier	fle
>405	ExpressionStatement	 
>406	CallExpression	fle . open ( folder + \"/residualD.txt\" )
>407	ArgumentList	folder + \"/residualD.txt\"
>408	Argument	folder + \"/residualD.txt\"
>409	AdditiveExpression	folder + \"/residualD.txt\"
>410	PrimaryExpression	\"/residualD.txt\"
>411	Identifier	folder
>412	Callee	fle . open
>413	MemberAccess	fle . open
>414	Identifier	open
>415	Identifier	fle
>416	ExpressionStatement	 
>417	CallExpression	fle . close ( )
>418	ArgumentList	 
>419	Callee	fle . close
>420	MemberAccess	fle . close
>421	Identifier	close
>422	Identifier	fle
>423	ExpressionStatement	 
>424	ShiftExpression	fle << res
>425	Identifier	res
>426	Identifier	fle
>427	ExpressionStatement	 
>428	CallExpression	fle . open ( folder + \"/residual.txt\" )
>429	ArgumentList	folder + \"/residual.txt\"
>430	Argument	folder + \"/residual.txt\"
>431	AdditiveExpression	folder + \"/residual.txt\"
>432	PrimaryExpression	\"/residual.txt\"
>433	Identifier	folder
>434	Callee	fle . open
>435	MemberAccess	fle . open
>436	Identifier	open
>437	Identifier	fle
>438	IdentifierDeclStatement	 
>439	IdentifierDecl	fle
>440	Identifier	fle
>441	IdentifierDeclType	std 
>442	ExpressionStatement	 
>443	CallExpression	keyframesAllMutex . unlock_shared ( )
>444	ArgumentList	 
>445	Callee	keyframesAllMutex . unlock_shared
>446	MemberAccess	keyframesAllMutex . unlock_shared
>447	Identifier	unlock_shared
>448	Identifier	keyframesAllMutex
>449	ExpressionStatement	 
>450	CallExpression	edgesListsMutex . unlock_shared ( )
>451	ArgumentList	 
>452	Callee	edgesListsMutex . unlock_shared
>453	MemberAccess	edgesListsMutex . unlock_shared
>454	Identifier	unlock_shared
>455	Identifier	edgesListsMutex
>456	ForStatement	for ( unsigned int i = 0 ; i < edgesAll . size ( ) ; i ++ )
>457	CompoundStatement	 
>458	ExpressionStatement	 
>459	AssignmentExpr	error ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes ) = e -> edge -> chi2 ( )
>460	CallExpression	e -> edge -> chi2 ( )
>461	ArgumentList	 
>462	Callee	e -> edge -> chi2
>463	PtrMemberAccess	e -> edge -> chi2
>464	Identifier	chi2
>465	PtrMemberAccess	e -> edge
>466	Identifier	edge
>467	Identifier	e
>468	CallExpression	error ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes )
>469	ArgumentList	e -> firstFrame -> idxInKeyframes
>470	Argument	e -> secondFrame -> idxInKeyframes
>471	PtrMemberAccess	e -> secondFrame -> idxInKeyframes
>472	Identifier	idxInKeyframes
>473	PtrMemberAccess	e -> secondFrame
>474	Identifier	secondFrame
>475	Identifier	e
>476	Argument	e -> firstFrame -> idxInKeyframes
>477	PtrMemberAccess	e -> firstFrame -> idxInKeyframes
>478	Identifier	idxInKeyframes
>479	PtrMemberAccess	e -> firstFrame
>480	Identifier	firstFrame
>481	Identifier	e
>482	Callee	error
>483	Identifier	error
>484	ExpressionStatement	 
>485	AssignmentExpr	distance ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes ) = e -> secondToFirst \
>486	CallExpression	e -> secondToFirst . translation ( ) . norm ( )
>487	ArgumentList	 
>488	Callee	e -> secondToFirst . translation ( ) . norm
>489	MemberAccess	e -> secondToFirst . translation ( ) . norm
>490	Identifier	norm
>491	CallExpression	e -> secondToFirst . translation ( )
>492	ArgumentList	 
>493	Callee	e -> secondToFirst . translation
>494	MemberAccess	e -> secondToFirst . translation
>495	Identifier	translation
>496	PtrMemberAccess	e -> secondToFirst
>497	Identifier	secondToFirst
>498	Identifier	e
>499	CallExpression	distance ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes )
>500	ArgumentList	e -> firstFrame -> idxInKeyframes
>501	Argument	e -> secondFrame -> idxInKeyframes
>502	PtrMemberAccess	e -> secondFrame -> idxInKeyframes
>503	Identifier	idxInKeyframes
>504	PtrMemberAccess	e -> secondFrame
>505	Identifier	secondFrame
>506	Identifier	e
>507	Argument	e -> firstFrame -> idxInKeyframes
>508	PtrMemberAccess	e -> firstFrame -> idxInKeyframes
>509	Identifier	idxInKeyframes
>510	PtrMemberAccess	e -> firstFrame
>511	Identifier	firstFrame
>512	Identifier	e
>513	Callee	distance
>514	Identifier	distance
>515	ExpressionStatement	 
>516	AssignmentExpr	consistency ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes ) = e -> reciprocalConsistency
>517	PtrMemberAccess	e -> reciprocalConsistency
>518	Identifier	reciprocalConsistency
>519	Identifier	e
>520	CallExpression	consistency ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes )
>521	ArgumentList	e -> firstFrame -> idxInKeyframes
>522	Argument	e -> secondFrame -> idxInKeyframes
>523	PtrMemberAccess	e -> secondFrame -> idxInKeyframes
>524	Identifier	idxInKeyframes
>525	PtrMemberAccess	e -> secondFrame
>526	Identifier	secondFrame
>527	Identifier	e
>528	Argument	e -> firstFrame -> idxInKeyframes
>529	PtrMemberAccess	e -> firstFrame -> idxInKeyframes
>530	Identifier	idxInKeyframes
>531	PtrMemberAccess	e -> firstFrame
>532	Identifier	firstFrame
>533	Identifier	e
>534	Callee	consistency
>535	Identifier	consistency
>536	ExpressionStatement	 
>537	AssignmentExpr	usage ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes ) = e -> usage
>538	PtrMemberAccess	e -> usage
>539	Identifier	usage
>540	Identifier	e
>541	CallExpression	usage ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes )
>542	ArgumentList	e -> firstFrame -> idxInKeyframes
>543	Argument	e -> secondFrame -> idxInKeyframes
>544	PtrMemberAccess	e -> secondFrame -> idxInKeyframes
>545	Identifier	idxInKeyframes
>546	PtrMemberAccess	e -> secondFrame
>547	Identifier	secondFrame
>548	Identifier	e
>549	Argument	e -> firstFrame -> idxInKeyframes
>550	PtrMemberAccess	e -> firstFrame -> idxInKeyframes
>551	Identifier	idxInKeyframes
>552	PtrMemberAccess	e -> firstFrame
>553	Identifier	firstFrame
>554	Identifier	e
>555	Callee	usage
>556	Identifier	usage
>557	ExpressionStatement	 
>558	AssignmentExpr	resP ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes ) = e -> meanResidualP
>559	PtrMemberAccess	e -> meanResidualP
>560	Identifier	meanResidualP
>561	Identifier	e
>562	CallExpression	resP ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes )
>563	ArgumentList	e -> firstFrame -> idxInKeyframes
>564	Argument	e -> secondFrame -> idxInKeyframes
>565	PtrMemberAccess	e -> secondFrame -> idxInKeyframes
>566	Identifier	idxInKeyframes
>567	PtrMemberAccess	e -> secondFrame
>568	Identifier	secondFrame
>569	Identifier	e
>570	Argument	e -> firstFrame -> idxInKeyframes
>571	PtrMemberAccess	e -> firstFrame -> idxInKeyframes
>572	Identifier	idxInKeyframes
>573	PtrMemberAccess	e -> firstFrame
>574	Identifier	firstFrame
>575	Identifier	e
>576	Callee	resP
>577	Identifier	resP
>578	ExpressionStatement	 
>579	AssignmentExpr	resD ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes ) = e -> meanResidualD
>580	PtrMemberAccess	e -> meanResidualD
>581	Identifier	meanResidualD
>582	Identifier	e
>583	CallExpression	resD ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes )
>584	ArgumentList	e -> firstFrame -> idxInKeyframes
>585	Argument	e -> secondFrame -> idxInKeyframes
>586	PtrMemberAccess	e -> secondFrame -> idxInKeyframes
>587	Identifier	idxInKeyframes
>588	PtrMemberAccess	e -> secondFrame
>589	Identifier	secondFrame
>590	Identifier	e
>591	Argument	e -> firstFrame -> idxInKeyframes
>592	PtrMemberAccess	e -> firstFrame -> idxInKeyframes
>593	Identifier	idxInKeyframes
>594	PtrMemberAccess	e -> firstFrame
>595	Identifier	firstFrame
>596	Identifier	e
>597	Callee	resD
>598	Identifier	resD
>599	ExpressionStatement	 
>600	AssignmentExpr	res ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes ) = e -> meanResidual
>601	PtrMemberAccess	e -> meanResidual
>602	Identifier	meanResidual
>603	Identifier	e
>604	CallExpression	res ( e -> firstFrame -> idxInKeyframes , e -> secondFrame -> idxInKeyframes )
>605	ArgumentList	e -> firstFrame -> idxInKeyframes
>606	Argument	e -> secondFrame -> idxInKeyframes
>607	PtrMemberAccess	e -> secondFrame -> idxInKeyframes
>608	Identifier	idxInKeyframes
>609	PtrMemberAccess	e -> secondFrame
>610	Identifier	secondFrame
>611	Identifier	e
>612	Argument	e -> firstFrame -> idxInKeyframes
>613	PtrMemberAccess	e -> firstFrame -> idxInKeyframes
>614	Identifier	idxInKeyframes
>615	PtrMemberAccess	e -> firstFrame
>616	Identifier	firstFrame
>617	Identifier	e
>618	Callee	res
>619	Identifier	res
>620	IdentifierDeclStatement	 
>621	IdentifierDecl	* e = edgesAll [ i ]
>622	AssignmentExpr	* e = edgesAll [ i ]
>623	ArrayIndexing	edgesAll [ i ]
>624	Identifier	i
>625	Identifier	edgesAll
>626	Identifier	e
>627	Identifier	e
>628	IdentifierDeclType	KFConstraintStruct *
>629	IncDecOp	 
>630	IncDec	++
>631	Identifier	i
>632	Condition	 
>633	RelationalExpression	i < edgesAll . size ( )
>634	CallExpression	edgesAll . size ( )
>635	ArgumentList	 
>636	Callee	edgesAll . size
>637	MemberAccess	edgesAll . size
>638	Identifier	size
>639	Identifier	edgesAll
>640	Identifier	i
>641	ForInit	 
>642	IdentifierDeclStatement	unsigned int i = 0 ;
>643	IdentifierDecl	i = 0
>644	AssignmentExpr	i = 0
>645	PrimaryExpression	0
>646	Identifier	i
>647	Identifier	i
>648	IdentifierDeclType	unsigned int
>649	ExpressionStatement	 
>650	CallExpression	edgesListsMutex . lock_shared ( )
>651	ArgumentList	 
>652	Callee	edgesListsMutex . lock_shared
>653	MemberAccess	edgesListsMutex . lock_shared
>654	Identifier	lock_shared
>655	Identifier	edgesListsMutex
>656	ForStatement	for ( unsigned int i = 0 ; i < keyframesAll . size ( ) ; i ++ )
>657	CompoundStatement	 
>658	ExpressionStatement	 
>659	AssignmentExpr	usedPixels [ i ] = keyframesAll [ i ] -> numPoints / ( float ) keyframesAll [ i ] -> numMappablePixels
>660	MultiplicativeExpression	keyframesAll [ i ] -> numPoints / ( float ) keyframesAll [ i ] -> numMappablePixels
>661	CastExpression	( float ) keyframesAll [ i ] -> numMappablePixels
>662	PtrMemberAccess	keyframesAll [ i ] -> numMappablePixels
>663	Identifier	numMappablePixels
>664	ArrayIndexing	keyframesAll [ i ]
>665	Identifier	i
>666	Identifier	keyframesAll
>667	CastTarget	float
>668	PtrMemberAccess	keyframesAll [ i ] -> numPoints
>669	Identifier	numPoints
>670	ArrayIndexing	keyframesAll [ i ]
>671	Identifier	i
>672	Identifier	keyframesAll
>673	ArrayIndexing	usedPixels [ i ]
>674	Identifier	i
>675	Identifier	usedPixels
>676	ExpressionStatement	 
>677	AssignmentExpr	meanRootInformation [ i ] = keyframesAll [ i ] -> meanInformation
>678	PtrMemberAccess	keyframesAll [ i ] -> meanInformation
>679	Identifier	meanInformation
>680	ArrayIndexing	keyframesAll [ i ]
>681	Identifier	i
>682	Identifier	keyframesAll
>683	ArrayIndexing	meanRootInformation [ i ]
>684	Identifier	i
>685	Identifier	meanRootInformation
>686	IncDecOp	 
>687	IncDec	++
>688	Identifier	i
>689	Condition	 
>690	RelationalExpression	i < keyframesAll . size ( )
>691	CallExpression	keyframesAll . size ( )
>692	ArgumentList	 
>693	Callee	keyframesAll . size
>694	MemberAccess	keyframesAll . size
>695	Identifier	size
>696	Identifier	keyframesAll
>697	Identifier	i
>698	ForInit	 
>699	IdentifierDeclStatement	unsigned int i = 0 ;
>700	IdentifierDecl	i = 0
>701	AssignmentExpr	i = 0
>702	PrimaryExpression	0
>703	Identifier	i
>704	Identifier	i
>705	IdentifierDeclType	unsigned int
>706	ExpressionStatement	 
>707	CallExpression	usedPixels . setZero ( )
>708	ArgumentList	 
>709	Callee	usedPixels . setZero
>710	MemberAccess	usedPixels . setZero
>711	Identifier	setZero
>712	Identifier	usedPixels
>713	ExpressionStatement	 
>714	CallExpression	meanRootInformation . setZero ( )
>715	ArgumentList	 
>716	Callee	meanRootInformation . setZero
>717	MemberAccess	meanRootInformation . setZero
>718	Identifier	setZero
>719	Identifier	meanRootInformation
>720	ExpressionStatement	 
>721	CallExpression	error . setZero ( )
>722	ArgumentList	 
>723	Callee	error . setZero
>724	MemberAccess	error . setZero
>725	Identifier	setZero
>726	Identifier	error
>727	ExpressionStatement	 
>728	CallExpression	distance . setZero ( )
>729	ArgumentList	 
>730	Callee	distance . setZero
>731	MemberAccess	distance . setZero
>732	Identifier	setZero
>733	Identifier	distance
>734	ExpressionStatement	 
>735	CallExpression	consistency . setZero ( )
>736	ArgumentList	 
>737	Callee	consistency . setZero
>738	MemberAccess	consistency . setZero
>739	Identifier	setZero
>740	Identifier	consistency
>741	ExpressionStatement	 
>742	CallExpression	usage . setZero ( )
>743	ArgumentList	 
>744	Callee	usage . setZero
>745	MemberAccess	usage . setZero
>746	Identifier	setZero
>747	Identifier	usage
>748	ExpressionStatement	 
>749	CallExpression	resP . setZero ( )
>750	ArgumentList	 
>751	Callee	resP . setZero
>752	MemberAccess	resP . setZero
>753	Identifier	setZero
>754	Identifier	resP
>755	ExpressionStatement	 
>756	CallExpression	resD . setZero ( )
>757	ArgumentList	 
>758	Callee	resD . setZero
>759	MemberAccess	resD . setZero
>760	Identifier	setZero
>761	Identifier	resD
>762	ExpressionStatement	 
>763	CallExpression	res . setZero ( )
>764	ArgumentList	 
>765	Callee	res . setZero
>766	MemberAccess	res . setZero
>767	Identifier	setZero
>768	Identifier	res
>769	ExpressionStatement	 
>770	CallExpression	usedPixels . resize ( keyframesAll . size ( ) )
>771	ArgumentList	keyframesAll . size ( )
>772	Argument	keyframesAll . size ( )
>773	CallExpression	keyframesAll . size ( )
>774	ArgumentList	 
>775	Callee	keyframesAll . size
>776	MemberAccess	keyframesAll . size
>777	Identifier	size
>778	Identifier	keyframesAll
>779	Callee	usedPixels . resize
>780	MemberAccess	usedPixels . resize
>781	Identifier	resize
>782	Identifier	usedPixels
>783	ExpressionStatement	 
>784	CallExpression	meanRootInformation . resize ( keyframesAll . size ( ) )
>785	ArgumentList	keyframesAll . size ( )
>786	Argument	keyframesAll . size ( )
>787	CallExpression	keyframesAll . size ( )
>788	ArgumentList	 
>789	Callee	keyframesAll . size
>790	MemberAccess	keyframesAll . size
>791	Identifier	size
>792	Identifier	keyframesAll
>793	Callee	meanRootInformation . resize
>794	MemberAccess	meanRootInformation . resize
>795	Identifier	resize
>796	Identifier	meanRootInformation
>797	ExpressionStatement	 
>798	CallExpression	error . resize ( keyframesAll . size ( ) , keyframesAll . size ( ) )
>799	ArgumentList	keyframesAll . size ( )
>800	Argument	keyframesAll . size ( )
>801	CallExpression	keyframesAll . size ( )
>802	ArgumentList	 
>803	Callee	keyframesAll . size
>804	MemberAccess	keyframesAll . size
>805	Identifier	size
>806	Identifier	keyframesAll
>807	Argument	keyframesAll . size ( )
>808	CallExpression	keyframesAll . size ( )
>809	ArgumentList	 
>810	Callee	keyframesAll . size
>811	MemberAccess	keyframesAll . size
>812	Identifier	size
>813	Identifier	keyframesAll
>814	Callee	error . resize
>815	MemberAccess	error . resize
>816	Identifier	resize
>817	Identifier	error
>818	ExpressionStatement	 
>819	CallExpression	distance . resize ( keyframesAll . size ( ) , keyframesAll . size ( ) )
>820	ArgumentList	keyframesAll . size ( )
>821	Argument	keyframesAll . size ( )
>822	CallExpression	keyframesAll . size ( )
>823	ArgumentList	 
>824	Callee	keyframesAll . size
>825	MemberAccess	keyframesAll . size
>826	Identifier	size
>827	Identifier	keyframesAll
>828	Argument	keyframesAll . size ( )
>829	CallExpression	keyframesAll . size ( )
>830	ArgumentList	 
>831	Callee	keyframesAll . size
>832	MemberAccess	keyframesAll . size
>833	Identifier	size
>834	Identifier	keyframesAll
>835	Callee	distance . resize
>836	MemberAccess	distance . resize
>837	Identifier	resize
>838	Identifier	distance
>839	ExpressionStatement	 
>840	CallExpression	consistency . resize ( keyframesAll . size ( ) , keyframesAll . size ( ) )
>841	ArgumentList	keyframesAll . size ( )
>842	Argument	keyframesAll . size ( )
>843	CallExpression	keyframesAll . size ( )
>844	ArgumentList	 
>845	Callee	keyframesAll . size
>846	MemberAccess	keyframesAll . size
>847	Identifier	size
>848	Identifier	keyframesAll
>849	Argument	keyframesAll . size ( )
>850	CallExpression	keyframesAll . size ( )
>851	ArgumentList	 
>852	Callee	keyframesAll . size
>853	MemberAccess	keyframesAll . size
>854	Identifier	size
>855	Identifier	keyframesAll
>856	Callee	consistency . resize
>857	MemberAccess	consistency . resize
>858	Identifier	resize
>859	Identifier	consistency
>860	ExpressionStatement	 
>861	CallExpression	usage . resize ( keyframesAll . size ( ) , keyframesAll . size ( ) )
>862	ArgumentList	keyframesAll . size ( )
>863	Argument	keyframesAll . size ( )
>864	CallExpression	keyframesAll . size ( )
>865	ArgumentList	 
>866	Callee	keyframesAll . size
>867	MemberAccess	keyframesAll . size
>868	Identifier	size
>869	Identifier	keyframesAll
>870	Argument	keyframesAll . size ( )
>871	CallExpression	keyframesAll . size ( )
>872	ArgumentList	 
>873	Callee	keyframesAll . size
>874	MemberAccess	keyframesAll . size
>875	Identifier	size
>876	Identifier	keyframesAll
>877	Callee	usage . resize
>878	MemberAccess	usage . resize
>879	Identifier	resize
>880	Identifier	usage
>881	ExpressionStatement	 
>882	CallExpression	resP . resize ( keyframesAll . size ( ) , keyframesAll . size ( ) )
>883	ArgumentList	keyframesAll . size ( )
>884	Argument	keyframesAll . size ( )
>885	CallExpression	keyframesAll . size ( )
>886	ArgumentList	 
>887	Callee	keyframesAll . size
>888	MemberAccess	keyframesAll . size
>889	Identifier	size
>890	Identifier	keyframesAll
>891	Argument	keyframesAll . size ( )
>892	CallExpression	keyframesAll . size ( )
>893	ArgumentList	 
>894	Callee	keyframesAll . size
>895	MemberAccess	keyframesAll . size
>896	Identifier	size
>897	Identifier	keyframesAll
>898	Callee	resP . resize
>899	MemberAccess	resP . resize
>900	Identifier	resize
>901	Identifier	resP
>902	ExpressionStatement	 
>903	CallExpression	resD . resize ( keyframesAll . size ( ) , keyframesAll . size ( ) )
>904	ArgumentList	keyframesAll . size ( )
>905	Argument	keyframesAll . size ( )
>906	CallExpression	keyframesAll . size ( )
>907	ArgumentList	 
>908	Callee	keyframesAll . size
>909	MemberAccess	keyframesAll . size
>910	Identifier	size
>911	Identifier	keyframesAll
>912	Argument	keyframesAll . size ( )
>913	CallExpression	keyframesAll . size ( )
>914	ArgumentList	 
>915	Callee	keyframesAll . size
>916	MemberAccess	keyframesAll . size
>917	Identifier	size
>918	Identifier	keyframesAll
>919	Callee	resD . resize
>920	MemberAccess	resD . resize
>921	Identifier	resize
>922	Identifier	resD
>923	ExpressionStatement	 
>924	CallExpression	res . resize ( keyframesAll . size ( ) , keyframesAll . size ( ) )
>925	ArgumentList	keyframesAll . size ( )
>926	Argument	keyframesAll . size ( )
>927	CallExpression	keyframesAll . size ( )
>928	ArgumentList	 
>929	Callee	keyframesAll . size
>930	MemberAccess	keyframesAll . size
>931	Identifier	size
>932	Identifier	keyframesAll
>933	Argument	keyframesAll . size ( )
>934	CallExpression	keyframesAll . size ( )
>935	ArgumentList	 
>936	Callee	keyframesAll . size
>937	MemberAccess	keyframesAll . size
>938	Identifier	size
>939	Identifier	keyframesAll
>940	Callee	res . resize
>941	MemberAccess	res . resize
>942	Identifier	resize
>943	Identifier	res
>944	IdentifierDeclStatement	 
>945	IdentifierDecl	usedPixels
>946	Identifier	usedPixels
>947	IdentifierDeclType	Eigen 
>948	IdentifierDecl	meanRootInformation
>949	Identifier	meanRootInformation
>950	IdentifierDeclType	Eigen 
>951	IdentifierDeclStatement	 
>952	IdentifierDecl	error
>953	Identifier	error
>954	IdentifierDeclType	Eigen 
>955	IdentifierDecl	distance
>956	Identifier	distance
>957	IdentifierDeclType	Eigen 
>958	IdentifierDecl	consistency
>959	Identifier	consistency
>960	IdentifierDeclType	Eigen 
>961	IdentifierDecl	usage
>962	Identifier	usage
>963	IdentifierDeclType	Eigen 
>964	IdentifierDecl	huber
>965	Identifier	huber
>966	IdentifierDeclType	Eigen 
>967	IdentifierDecl	resP
>968	Identifier	resP
>969	IdentifierDeclType	Eigen 
>970	IdentifierDecl	resD
>971	Identifier	resD
>972	IdentifierDeclType	Eigen 
>973	IdentifierDecl	res
>974	Identifier	res
>975	IdentifierDeclType	Eigen 
>976	ExpressionStatement	 
>977	CallExpression	printf ( \"DUMP MAP (succ %d)
>978	ArgumentList	\"DUMP MAP (succ %d)
>979	Argument	( int ) keyframesAll . size ( )
>980	CastExpression	( int ) keyframesAll . size ( )
>981	CallExpression	keyframesAll . size ( )
>982	ArgumentList	 
>983	Callee	keyframesAll . size
>984	MemberAccess	keyframesAll . size
>985	Identifier	size
>986	Identifier	keyframesAll
>987	CastTarget	int
>988	Argument	succ
>989	Identifier	succ
>990	Argument	\"DUMP MAP (succ %d)
>991	PrimaryExpression	\"DUMP MAP (succ %d)
>992	Callee	printf
>993	Identifier	printf
>994	ExpressionStatement	 
>995	CallExpression	Util 
>996	ArgumentList	\"VAR PREVIEW\"
>997	Argument	getVarRedGreenPlot ( keyframesAll [ i ] -> idepthVar ( ) , keyframesAll [ i ] -> image ( ) , keyframesAll [ i ] \
>998	CallExpression	getVarRedGreenPlot ( keyframesAll [ i ] -> idepthVar ( ) , keyframesAll [ i ] -> image ( ) , keyframesAll [ i ] \
>999	ArgumentList	keyframesAll [ i ] -> idepthVar ( )
>1000	Argument	keyframesAll [ i ] -> height ( )
>1001	CallExpression	keyframesAll [ i ] -> height ( )
>1002	ArgumentList	 
>1003	Callee	keyframesAll [ i ] -> height
>1004	PtrMemberAccess	keyframesAll [ i ] -> height
>1005	Identifier	height
>1006	ArrayIndexing	keyframesAll [ i ]
>1007	Identifier	i
>1008	Identifier	keyframesAll
>1009	Argument	keyframesAll [ i ] -> width ( )
>1010	CallExpression	keyframesAll [ i ] -> width ( )
>1011	ArgumentList	 
>1012	Callee	keyframesAll [ i ] -> width
>1013	PtrMemberAccess	keyframesAll [ i ] -> width
>1014	Identifier	width
>1015	ArrayIndexing	keyframesAll [ i ]
>1016	Identifier	i
>1017	Identifier	keyframesAll
>1018	Argument	keyframesAll [ i ] -> image ( )
>1019	CallExpression	keyframesAll [ i ] -> image ( )
>1020	ArgumentList	 
>1021	Callee	keyframesAll [ i ] -> image
>1022	PtrMemberAccess	keyframesAll [ i ] -> image
>1023	Identifier	image
>1024	ArrayIndexing	keyframesAll [ i ]
>1025	Identifier	i
>1026	Identifier	keyframesAll
>1027	Argument	keyframesAll [ i ] -> idepthVar ( )
>1028	CallExpression	keyframesAll [ i ] -> idepthVar ( )
>1029	ArgumentList	 
>1030	Callee	keyframesAll [ i ] -> idepthVar
>1031	PtrMemberAccess	keyframesAll [ i ] -> idepthVar
>1032	Identifier	idepthVar
>1033	ArrayIndexing	keyframesAll [ i ]
>1034	Identifier	i
>1035	Identifier	keyframesAll
>1036	Callee	getVarRedGreenPlot
>1037	Identifier	getVarRedGreenPlot
>1038	Argument	\"VAR PREVIEW\"
>1039	PrimaryExpression	\"VAR PREVIEW\"
>1040	Callee	Util 
>1041	Identifier	Util 
>1042	IdentifierDeclStatement	 
>1043	IdentifierDecl	i = keyframesAll . size ( ) - 1
>1044	AssignmentExpr	i = keyframesAll . size ( ) - 1
>1045	AdditiveExpression	keyframesAll . size ( ) - 1
>1046	PrimaryExpression	1
>1047	CallExpression	keyframesAll . size ( )
>1048	ArgumentList	 
>1049	Callee	keyframesAll . size
>1050	MemberAccess	keyframesAll . size
>1051	Identifier	size
>1052	Identifier	keyframesAll
>1053	Identifier	i
>1054	Identifier	i
>1055	IdentifierDeclType	int
>1056	ForStatement	for ( unsigned int i = 0 ; i < keyframesAll . size ( ) ; i ++ )
>1057	CompoundStatement	 
>1058	ExpressionStatement	 
>1059	CallExpression	cv 
>1060	ArgumentList	buf
>1061	Argument	getVarRedGreenPlot ( keyframesAll [ i ] -> idepthVar ( ) , keyframesAll [ i ] -> image ( ) , keyframesAll [ i ] \
>1062	CallExpression	getVarRedGreenPlot ( keyframesAll [ i ] -> idepthVar ( ) , keyframesAll [ i ] -> image ( ) , keyframesAll [ i ] \
>1063	ArgumentList	keyframesAll [ i ] -> idepthVar ( )
>1064	Argument	keyframesAll [ i ] -> height ( )
>1065	CallExpression	keyframesAll [ i ] -> height ( )
>1066	ArgumentList	 
>1067	Callee	keyframesAll [ i ] -> height
>1068	PtrMemberAccess	keyframesAll [ i ] -> height
>1069	Identifier	height
>1070	ArrayIndexing	keyframesAll [ i ]
>1071	Identifier	i
>1072	Identifier	keyframesAll
>1073	Argument	keyframesAll [ i ] -> width ( )
>1074	CallExpression	keyframesAll [ i ] -> width ( )
>1075	ArgumentList	 
>1076	Callee	keyframesAll [ i ] -> width
>1077	PtrMemberAccess	keyframesAll [ i ] -> width
>1078	Identifier	width
>1079	ArrayIndexing	keyframesAll [ i ]
>1080	Identifier	i
>1081	Identifier	keyframesAll
>1082	Argument	keyframesAll [ i ] -> image ( )
>1083	CallExpression	keyframesAll [ i ] -> image ( )
>1084	ArgumentList	 
>1085	Callee	keyframesAll [ i ] -> image
>1086	PtrMemberAccess	keyframesAll [ i ] -> image
>1087	Identifier	image
>1088	ArrayIndexing	keyframesAll [ i ]
>1089	Identifier	i
>1090	Identifier	keyframesAll
>1091	Argument	keyframesAll [ i ] -> idepthVar ( )
>1092	CallExpression	keyframesAll [ i ] -> idepthVar ( )
>1093	ArgumentList	 
>1094	Callee	keyframesAll [ i ] -> idepthVar
>1095	PtrMemberAccess	keyframesAll [ i ] -> idepthVar
>1096	Identifier	idepthVar
>1097	ArrayIndexing	keyframesAll [ i ]
>1098	Identifier	i
>1099	Identifier	keyframesAll
>1100	Callee	getVarRedGreenPlot
>1101	Identifier	getVarRedGreenPlot
>1102	Argument	buf
>1103	Identifier	buf
>1104	Callee	cv 
>1105	Identifier	cv 
>1106	ExpressionStatement	 
>1107	CallExpression	snprintf ( buf , 100 , \"%s/var-%d.png\" , folder . c_str ( ) , i )
>1108	ArgumentList	buf
>1109	Argument	i
>1110	Identifier	i
>1111	Argument	folder . c_str ( )
>1112	CallExpression	folder . c_str ( )
>1113	ArgumentList	 
>1114	Callee	folder . c_str
>1115	MemberAccess	folder . c_str
>1116	Identifier	c_str
>1117	Identifier	folder
>1118	Argument	\"%s/var-%d.png\"
>1119	PrimaryExpression	\"%s/var-%d.png\"
>1120	Argument	100
>1121	PrimaryExpression	100
>1122	Argument	buf
>1123	Identifier	buf
>1124	Callee	snprintf
>1125	Identifier	snprintf
>1126	ExpressionStatement	 
>1127	CallExpression	cv 
>1128	ArgumentList	buf
>1129	Argument	cv 
>1130	CallExpression	cv 
>1131	ArgumentList	keyframesAll [ i ] -> height ( )
>1132	Argument	keyframesAll [ i ] -> image ( )
>1133	CallExpression	keyframesAll [ i ] -> image ( )
>1134	ArgumentList	 
>1135	Callee	keyframesAll [ i ] -> image
>1136	PtrMemberAccess	keyframesAll [ i ] -> image
>1137	Identifier	image
>1138	ArrayIndexing	keyframesAll [ i ]
>1139	Identifier	i
>1140	Identifier	keyframesAll
>1141	Argument	CV_32F
>1142	Identifier	CV_32F
>1143	Argument	keyframesAll [ i ] -> width ( )
>1144	CallExpression	keyframesAll [ i ] -> width ( )
>1145	ArgumentList	 
>1146	Callee	keyframesAll [ i ] -> width
>1147	PtrMemberAccess	keyframesAll [ i ] -> width
>1148	Identifier	width
>1149	ArrayIndexing	keyframesAll [ i ]
>1150	Identifier	i
>1151	Identifier	keyframesAll
>1152	Argument	keyframesAll [ i ] -> height ( )
>1153	CallExpression	keyframesAll [ i ] -> height ( )
>1154	ArgumentList	 
>1155	Callee	keyframesAll [ i ] -> height
>1156	PtrMemberAccess	keyframesAll [ i ] -> height
>1157	Identifier	height
>1158	ArrayIndexing	keyframesAll [ i ]
>1159	Identifier	i
>1160	Identifier	keyframesAll
>1161	Callee	cv 
>1162	Identifier	cv 
>1163	Argument	buf
>1164	Identifier	buf
>1165	Callee	cv 
>1166	Identifier	cv 
>1167	ExpressionStatement	 
>1168	CallExpression	snprintf ( buf , 100 , \"%s/frame-%d.png\" , folder . c_str ( ) , i )
>1169	ArgumentList	buf
>1170	Argument	i
>1171	Identifier	i
>1172	Argument	folder . c_str ( )
>1173	CallExpression	folder . c_str ( )
>1174	ArgumentList	 
>1175	Callee	folder . c_str
>1176	MemberAccess	folder . c_str
>1177	Identifier	c_str
>1178	Identifier	folder
>1179	Argument	\"%s/frame-%d.png\"
>1180	PrimaryExpression	\"%s/frame-%d.png\"
>1181	Argument	100
>1182	PrimaryExpression	100
>1183	Argument	buf
>1184	Identifier	buf
>1185	Callee	snprintf
>1186	Identifier	snprintf
>1187	ExpressionStatement	 
>1188	CallExpression	cv 
>1189	ArgumentList	buf
>1190	Argument	getDepthRainbowPlot ( keyframesAll [ i ] , 0 )
>1191	CallExpression	getDepthRainbowPlot ( keyframesAll [ i ] , 0 )
>1192	ArgumentList	keyframesAll [ i ]
>1193	Argument	0
>1194	PrimaryExpression	0
>1195	Argument	keyframesAll [ i ]
>1196	ArrayIndexing	keyframesAll [ i ]
>1197	Identifier	i
>1198	Identifier	keyframesAll
>1199	Callee	getDepthRainbowPlot
>1200	Identifier	getDepthRainbowPlot
>1201	Argument	buf
>1202	Identifier	buf
>1203	Callee	cv 
>1204	Identifier	cv 
>1205	ExpressionStatement	 
>1206	CallExpression	snprintf ( buf , 100 , \"%s/depth-%d.png\" , folder . c_str ( ) , i )
>1207	ArgumentList	buf
>1208	Argument	i
>1209	Identifier	i
>1210	Argument	folder . c_str ( )
>1211	CallExpression	folder . c_str ( )
>1212	ArgumentList	 
>1213	Callee	folder . c_str
>1214	MemberAccess	folder . c_str
>1215	Identifier	c_str
>1216	Identifier	folder
>1217	Argument	\"%s/depth-%d.png\"
>1218	PrimaryExpression	\"%s/depth-%d.png\"
>1219	Argument	100
>1220	PrimaryExpression	100
>1221	Argument	buf
>1222	Identifier	buf
>1223	Callee	snprintf
>1224	Identifier	snprintf
>1225	IncDecOp	 
>1226	IncDec	++
>1227	Identifier	i
>1228	Condition	 
>1229	RelationalExpression	i < keyframesAll . size ( )
>1230	CallExpression	keyframesAll . size ( )
>1231	ArgumentList	 
>1232	Callee	keyframesAll . size
>1233	MemberAccess	keyframesAll . size
>1234	Identifier	size
>1235	Identifier	keyframesAll
>1236	Identifier	i
>1237	ForInit	 
>1238	IdentifierDeclStatement	unsigned int i = 0 ;
>1239	IdentifierDecl	i = 0
>1240	AssignmentExpr	i = 0
>1241	PrimaryExpression	0
>1242	Identifier	i
>1243	Identifier	i
>1244	IdentifierDeclType	unsigned int
>1245	ExpressionStatement	 
>1246	AssignmentExpr	succ += system ( ( \"mkdir \" + folder ) . c_str ( ) )
>1247	CallExpression	system ( ( \"mkdir \" + folder ) . c_str ( ) )
>1248	ArgumentList	( \"mkdir \" + folder ) . c_str ( )
>1249	Argument	( \"mkdir \" + folder ) . c_str ( )
>1250	CallExpression	( \"mkdir \" + folder ) . c_str ( )
>1251	ArgumentList	 
>1252	Callee	( \"mkdir \" + folder ) . c_str
>1253	MemberAccess	( \"mkdir \" + folder ) . c_str
>1254	Identifier	c_str
>1255	AdditiveExpression	\"mkdir \" + folder
>1256	Identifier	folder
>1257	PrimaryExpression	\"mkdir \"
>1258	Callee	system
>1259	Identifier	system
>1260	Identifier	succ
>1261	IdentifierDeclStatement	 
>1262	IdentifierDecl	succ = system ( ( \"rm -rf \" + folder ) . c_str ( ) )
>1263	AssignmentExpr	succ = system ( ( \"rm -rf \" + folder ) . c_str ( ) )
>1264	CallExpression	system ( ( \"rm -rf \" + folder ) . c_str ( ) )
>1265	ArgumentList	( \"rm -rf \" + folder ) . c_str ( )
>1266	Argument	( \"rm -rf \" + folder ) . c_str ( )
>1267	CallExpression	( \"rm -rf \" + folder ) . c_str ( )
>1268	ArgumentList	 
>1269	Callee	( \"rm -rf \" + folder ) . c_str
>1270	MemberAccess	( \"rm -rf \" + folder ) . c_str
>1271	Identifier	c_str
>1272	AdditiveExpression	\"rm -rf \" + folder
>1273	Identifier	folder
>1274	PrimaryExpression	\"rm -rf \"
>1275	Callee	system
>1276	Identifier	system
>1277	Identifier	succ
>1278	Identifier	succ
>1279	IdentifierDeclType	int
>1280	IdentifierDeclStatement	 
>1281	IdentifierDecl	buf [ 100 ]
>1282	PrimaryExpression	100
>1283	Identifier	buf
>1284	IdentifierDeclType	char [ 100 ]
>1285	ExpressionStatement	 
>1286	CallExpression	keyframesAllMutex . lock_shared ( )
>1287	ArgumentList	 
>1288	Callee	keyframesAllMutex . lock_shared
>1289	MemberAccess	keyframesAllMutex . lock_shared
>1290	Identifier	lock_shared
>1291	Identifier	keyframesAllMutex
>1292	ExpressionStatement	 
>1293	CallExpression	printf ( \"DUMP MAP
>1294	ArgumentList	\"DUMP MAP
>1295	Argument	folder . c_str ( )
>1296	CallExpression	folder . c_str ( )
>1297	ArgumentList	 
>1298	Callee	folder . c_str
>1299	MemberAccess	folder . c_str
>1300	Identifier	c_str
>1301	Identifier	folder
>1302	Argument	\"DUMP MAP
>1303	PrimaryExpression	\"DUMP MAP
>1304	Callee	printf
>1305	Identifier	printf
>1372	FunctionDef	KeyFrameGraph 
>1373	ParameterList	Frame * frame
>1374	Parameter	 
>1375	Identifier	frame
>1376	ParameterType	Frame *
>1377	ReturnType	void
>1378	CompoundStatement	 
>1379	ExpressionStatement	 
>1380	CallExpression	newKeyframesBuffer . push_back ( frame )
>1381	ArgumentList	frame
>1382	Argument	frame
>1383	Identifier	frame
>1384	Callee	newKeyframesBuffer . push_back
>1385	MemberAccess	newKeyframesBuffer . push_back
>1386	Identifier	push_back
>1387	Identifier	newKeyframesBuffer
>1388	ExpressionStatement	 
>1389	AssignmentExpr	frame -> pose -> graphVertex = vertex
>1390	Identifier	vertex
>1391	PtrMemberAccess	frame -> pose -> graphVertex
>1392	Identifier	graphVertex
>1393	PtrMemberAccess	frame -> pose
>1394	Identifier	pose
>1395	Identifier	frame
>1396	ExpressionStatement	 
>1397	CallExpression	vertex -> setMarginalized ( false )
>1398	ArgumentList	false
>1399	Argument	false
>1400	Identifier	false
>1401	Callee	vertex -> setMarginalized
>1402	PtrMemberAccess	vertex -> setMarginalized
>1403	Identifier	setMarginalized
>1404	Identifier	vertex
>1405	ExpressionStatement	 
>1406	CallExpression	vertex -> setEstimate ( camToWorld_estimate )
>1407	ArgumentList	camToWorld_estimate
>1408	Argument	camToWorld_estimate
>1409	Identifier	camToWorld_estimate
>1410	Callee	vertex -> setEstimate
>1411	PtrMemberAccess	vertex -> setEstimate
>1412	Identifier	setEstimate
>1413	Identifier	vertex
>1414	IfStatement	if ( ! frame -> hasTrackingParent ( ) )
>1415	ExpressionStatement	 
>1416	CallExpression	vertex -> setFixed ( true )
>1417	ArgumentList	true
>1418	Argument	true
>1419	Identifier	true
>1420	Callee	vertex -> setFixed
>1421	PtrMemberAccess	vertex -> setFixed
>1422	Identifier	setFixed
>1423	Identifier	vertex
>1424	Condition	 
>1425	UnaryOp	! frame -> hasTrackingParent ( )
>1426	CallExpression	frame -> hasTrackingParent ( )
>1427	ArgumentList	 
>1428	Callee	frame -> hasTrackingParent
>1429	PtrMemberAccess	frame -> hasTrackingParent
>1430	Identifier	hasTrackingParent
>1431	Identifier	frame
>1432	UnaryOperator	!
>1433	IdentifierDeclStatement	 
>1434	IdentifierDecl	camToWorld_estimate = frame -> getScaledCamToWorld ( )
>1435	AssignmentExpr	camToWorld_estimate = frame -> getScaledCamToWorld ( )
>1436	CallExpression	frame -> getScaledCamToWorld ( )
>1437	ArgumentList	 
>1438	Callee	frame -> getScaledCamToWorld
>1439	PtrMemberAccess	frame -> getScaledCamToWorld
>1440	Identifier	getScaledCamToWorld
>1441	Identifier	frame
>1442	Identifier	camToWorld_estimate
>1443	Identifier	camToWorld_estimate
>1444	IdentifierDeclType	Sophus 
>1445	ExpressionStatement	 
>1446	CallExpression	vertex -> setId ( frame -> id ( ) )
>1447	ArgumentList	frame -> id ( )
>1448	Argument	frame -> id ( )
>1449	CallExpression	frame -> id ( )
>1450	ArgumentList	 
>1451	Callee	frame -> id
>1452	PtrMemberAccess	frame -> id
>1453	Identifier	id
>1454	Identifier	frame
>1455	Callee	vertex -> setId
>1456	PtrMemberAccess	vertex -> setId
>1457	Identifier	setId
>1458	Identifier	vertex
>1459	IdentifierDeclStatement	 
>1460	IdentifierDecl	* vertex = new VertexSim3 ( )
>1461	AssignmentExpr	* vertex = new VertexSim3 ( )
>1462	UnaryExpression	new VertexSim3 ( )
>1463	Identifier	vertex
>1464	Identifier	vertex
>1465	IdentifierDeclType	VertexSim3 *
>1466	IfStatement	if ( frame -> pose -> graphVertex != nullptr )
>1467	ReturnStatement	 
>1468	Condition	 
>1469	EqualityExpression	frame -> pose -> graphVertex != nullptr
>1470	Identifier	nullptr
>1471	PtrMemberAccess	frame -> pose -> graphVertex
>1472	Identifier	graphVertex
>1473	PtrMemberAccess	frame -> pose
>1474	Identifier	pose
>1475	Identifier	frame
>1494	FunctionDef	KeyFrameGraph 
>1495	ParameterList	KFConstraintStruct * constraint
>1496	Parameter	 
>1497	Identifier	constraint
>1498	ParameterType	KFConstraintStruct *
>1499	ReturnType	void
>1500	CompoundStatement	 
>1501	ExpressionStatement	 
>1502	CallExpression	edgesListsMutex . unlock ( )
>1503	ArgumentList	 
>1504	Callee	edgesListsMutex . unlock
>1505	MemberAccess	edgesListsMutex . unlock
>1506	Identifier	unlock
>1507	Identifier	edgesListsMutex
>1508	ExpressionStatement	 
>1509	CallExpression	edgesAll . push_back ( constraint )
>1510	ArgumentList	constraint
>1511	Argument	constraint
>1512	Identifier	constraint
>1513	Callee	edgesAll . push_back
>1514	MemberAccess	edgesAll . push_back
>1515	Identifier	push_back
>1516	Identifier	edgesAll
>1517	ExpressionStatement	 
>1518	AssignmentExpr	constraint -> idxInAllEdges = edgesAll . size ( )
>1519	CallExpression	edgesAll . size ( )
>1520	ArgumentList	 
>1521	Callee	edgesAll . size
>1522	MemberAccess	edgesAll . size
>1523	Identifier	size
>1524	Identifier	edgesAll
>1525	PtrMemberAccess	constraint -> idxInAllEdges
>1526	Identifier	idxInAllEdges
>1527	Identifier	constraint
>1528	ExpressionStatement	 
>1529	CallExpression	edgesListsMutex . lock ( )
>1530	ArgumentList	 
>1531	Callee	edgesListsMutex . lock
>1532	MemberAccess	edgesListsMutex . lock
>1533	Identifier	lock
>1534	Identifier	edgesListsMutex
>1535	ForStatement	for ( int i = 0 ; i < totalVertices ; i ++ )
>1536	CompoundStatement	 
>1537	IncDecOp	 
>1538	IncDec	++
>1539	Identifier	i
>1540	Condition	 
>1541	RelationalExpression	i < totalVertices
>1542	Identifier	totalVertices
>1543	Identifier	i
>1544	ForInit	 
>1545	IdentifierDeclStatement	int i = 0 ;
>1546	IdentifierDecl	i = 0
>1547	AssignmentExpr	i = 0
>1548	PrimaryExpression	0
>1549	Identifier	i
>1550	Identifier	i
>1551	IdentifierDeclType	int
>1552	ExpressionStatement	 
>1553	CallExpression	constraint -> secondFrame -> neighbors . insert ( constraint -> firstFrame )
>1554	ArgumentList	constraint -> firstFrame
>1555	Argument	constraint -> firstFrame
>1556	PtrMemberAccess	constraint -> firstFrame
>1557	Identifier	firstFrame
>1558	Identifier	constraint
>1559	Callee	constraint -> secondFrame -> neighbors . insert
>1560	MemberAccess	constraint -> secondFrame -> neighbors . insert
>1561	Identifier	insert
>1562	PtrMemberAccess	constraint -> secondFrame -> neighbors
>1563	Identifier	neighbors
>1564	PtrMemberAccess	constraint -> secondFrame
>1565	Identifier	secondFrame
>1566	Identifier	constraint
>1567	ExpressionStatement	 
>1568	CallExpression	constraint -> firstFrame -> neighbors . insert ( constraint -> secondFrame )
>1569	ArgumentList	constraint -> secondFrame
>1570	Argument	constraint -> secondFrame
>1571	PtrMemberAccess	constraint -> secondFrame
>1572	Identifier	secondFrame
>1573	Identifier	constraint
>1574	Callee	constraint -> firstFrame -> neighbors . insert
>1575	MemberAccess	constraint -> firstFrame -> neighbors . insert
>1576	Identifier	insert
>1577	PtrMemberAccess	constraint -> firstFrame -> neighbors
>1578	Identifier	neighbors
>1579	PtrMemberAccess	constraint -> firstFrame
>1580	Identifier	firstFrame
>1581	Identifier	constraint
>1582	ExpressionStatement	 
>1583	CallExpression	newEdgeBuffer . push_back ( constraint )
>1584	ArgumentList	constraint
>1585	Argument	constraint
>1586	Identifier	constraint
>1587	Callee	newEdgeBuffer . push_back
>1588	MemberAccess	newEdgeBuffer . push_back
>1589	Identifier	push_back
>1590	Identifier	newEdgeBuffer
>1591	ExpressionStatement	 
>1592	AssignmentExpr	constraint -> edge = edge
>1593	Identifier	edge
>1594	PtrMemberAccess	constraint -> edge
>1595	Identifier	edge
>1596	Identifier	constraint
>1597	ExpressionStatement	 
>1598	CallExpression	edge -> setVertex ( 1 , constraint -> secondFrame -> pose -> graphVertex )
>1599	ArgumentList	1
>1600	Argument	constraint -> secondFrame -> pose -> graphVertex
>1601	PtrMemberAccess	constraint -> secondFrame -> pose -> graphVertex
>1602	Identifier	graphVertex
>1603	PtrMemberAccess	constraint -> secondFrame -> pose
>1604	Identifier	pose
>1605	PtrMemberAccess	constraint -> secondFrame
>1606	Identifier	secondFrame
>1607	Identifier	constraint
>1608	Argument	1
>1609	PrimaryExpression	1
>1610	Callee	edge -> setVertex
>1611	PtrMemberAccess	edge -> setVertex
>1612	Identifier	setVertex
>1613	Identifier	edge
>1614	ExpressionStatement	 
>1615	CallExpression	assert ( constraint -> secondFrame -> pose -> graphVertex != nullptr )
>1616	ArgumentList	constraint -> secondFrame -> pose -> graphVertex != nullptr
>1617	Argument	constraint -> secondFrame -> pose -> graphVertex != nullptr
>1618	EqualityExpression	constraint -> secondFrame -> pose -> graphVertex != nullptr
>1619	Identifier	nullptr
>1620	PtrMemberAccess	constraint -> secondFrame -> pose -> graphVertex
>1621	Identifier	graphVertex
>1622	PtrMemberAccess	constraint -> secondFrame -> pose
>1623	Identifier	pose
>1624	PtrMemberAccess	constraint -> secondFrame
>1625	Identifier	secondFrame
>1626	Identifier	constraint
>1627	Callee	assert
>1628	Identifier	assert
>1629	ExpressionStatement	 
>1630	CallExpression	edge -> setVertex ( 0 , constraint -> firstFrame -> pose -> graphVertex )
>1631	ArgumentList	0
>1632	Argument	constraint -> firstFrame -> pose -> graphVertex
>1633	PtrMemberAccess	constraint -> firstFrame -> pose -> graphVertex
>1634	Identifier	graphVertex
>1635	PtrMemberAccess	constraint -> firstFrame -> pose
>1636	Identifier	pose
>1637	PtrMemberAccess	constraint -> firstFrame
>1638	Identifier	firstFrame
>1639	Identifier	constraint
>1640	Argument	0
>1641	PrimaryExpression	0
>1642	Callee	edge -> setVertex
>1643	PtrMemberAccess	edge -> setVertex
>1644	Identifier	setVertex
>1645	Identifier	edge
>1646	ExpressionStatement	 
>1647	CallExpression	assert ( constraint -> firstFrame -> pose -> graphVertex != nullptr )
>1648	ArgumentList	constraint -> firstFrame -> pose -> graphVertex != nullptr
>1649	Argument	constraint -> firstFrame -> pose -> graphVertex != nullptr
>1650	EqualityExpression	constraint -> firstFrame -> pose -> graphVertex != nullptr
>1651	Identifier	nullptr
>1652	PtrMemberAccess	constraint -> firstFrame -> pose -> graphVertex
>1653	Identifier	graphVertex
>1654	PtrMemberAccess	constraint -> firstFrame -> pose
>1655	Identifier	pose
>1656	PtrMemberAccess	constraint -> firstFrame
>1657	Identifier	firstFrame
>1658	Identifier	constraint
>1659	Callee	assert
>1660	Identifier	assert
>1661	ExpressionStatement	 
>1662	CallExpression	edge -> resize ( 2 )
>1663	ArgumentList	2
>1664	Argument	2
>1665	PrimaryExpression	2
>1666	Callee	edge -> resize
>1667	PtrMemberAccess	edge -> resize
>1668	Identifier	resize
>1669	Identifier	edge
>1670	ExpressionStatement	 
>1671	CallExpression	edge -> setRobustKernel ( constraint -> robustKernel )
>1672	ArgumentList	constraint -> robustKernel
>1673	Argument	constraint -> robustKernel
>1674	PtrMemberAccess	constraint -> robustKernel
>1675	Identifier	robustKernel
>1676	Identifier	constraint
>1677	Callee	edge -> setRobustKernel
>1678	PtrMemberAccess	edge -> setRobustKernel
>1679	Identifier	setRobustKernel
>1680	Identifier	edge
>1681	ExpressionStatement	 
>1682	CallExpression	edge -> setInformation ( constraint -> information )
>1683	ArgumentList	constraint -> information
>1684	Argument	constraint -> information
>1685	PtrMemberAccess	constraint -> information
>1686	Identifier	information
>1687	Identifier	constraint
>1688	Callee	edge -> setInformation
>1689	PtrMemberAccess	edge -> setInformation
>1690	Identifier	setInformation
>1691	Identifier	edge
>1692	ExpressionStatement	 
>1693	CallExpression	edge -> setMeasurement ( constraint -> secondToFirst )
>1694	ArgumentList	constraint -> secondToFirst
>1695	Argument	constraint -> secondToFirst
>1696	PtrMemberAccess	constraint -> secondToFirst
>1697	Identifier	secondToFirst
>1698	Identifier	constraint
>1699	Callee	edge -> setMeasurement
>1700	PtrMemberAccess	edge -> setMeasurement
>1701	Identifier	setMeasurement
>1702	Identifier	edge
>1703	ExpressionStatement	 
>1704	IncDecOp	totalEdges ++
>1705	IncDec	++
>1706	Identifier	totalEdges
>1707	ExpressionStatement	 
>1708	UnaryExpression	++ nextEdgeId
>1709	Identifier	nextEdgeId
>1710	IncDec	++
>1711	ExpressionStatement	 
>1712	CallExpression	edge -> setId ( nextEdgeId )
>1713	ArgumentList	nextEdgeId
>1714	Argument	nextEdgeId
>1715	Identifier	nextEdgeId
>1716	Callee	edge -> setId
>1717	PtrMemberAccess	edge -> setId
>1718	Identifier	setId
>1719	Identifier	edge
>1720	IdentifierDeclStatement	 
>1721	IdentifierDecl	* edge = new EdgeSim3 ( )
>1722	AssignmentExpr	* edge = new EdgeSim3 ( )
>1723	UnaryExpression	new EdgeSim3 ( )
>1724	Identifier	edge
>1725	Identifier	edge
>1726	IdentifierDeclType	EdgeSim3 *
>1763	FunctionDef	KeyFrameGraph 
>1764	ParameterList	 
>1765	ReturnType	bool
>1766	CompoundStatement	 
>1767	ReturnStatement	 
>1768	Identifier	added
>1769	ExpressionStatement	 
>1770	CallExpression	newEdgeBuffer . clear ( )
>1771	ArgumentList	 
>1772	Callee	newEdgeBuffer . clear
>1773	MemberAccess	newEdgeBuffer . clear
>1774	Identifier	clear
>1775	Identifier	newEdgeBuffer
>1776	CompoundStatement	 
>1777	ExpressionStatement	 
>1778	AssignmentExpr	added = true
>1779	Identifier	true
>1780	Identifier	added
>1781	ExpressionStatement	 
>1782	CallExpression	graph . addEdge ( edge -> edge )
>1783	ArgumentList	edge -> edge
>1784	Argument	edge -> edge
>1785	PtrMemberAccess	edge -> edge
>1786	Identifier	edge
>1787	Identifier	edge
>1788	Callee	graph . addEdge
>1789	MemberAccess	graph . addEdge
>1790	Identifier	addEdge
>1791	Identifier	graph
>1792	Statement	 
>1793	Statement	 
>1794	Label	 
>1795	Identifier	edge
>1796	Statement	 
>1797	Statement	 
>1798	Statement	 
>1799	ExpressionStatement	 
>1800	CallExpression	newKeyframesBuffer . clear ( )
>1801	ArgumentList	 
>1802	Callee	newKeyframesBuffer . clear
>1803	MemberAccess	newKeyframesBuffer . clear
>1804	Identifier	clear
>1805	Identifier	newKeyframesBuffer
>1806	ExpressionStatement	 
>1807	CallExpression	keyframesForRetrackMutex . unlock ( )
>1808	ArgumentList	 
>1809	Callee	keyframesForRetrackMutex . unlock
>1810	MemberAccess	keyframesForRetrackMutex . unlock
>1811	Identifier	unlock
>1812	Identifier	keyframesForRetrackMutex
>1813	CompoundStatement	 
>1814	ExpressionStatement	 
>1815	AssignmentExpr	added = true
>1816	Identifier	true
>1817	Identifier	added
>1818	ExpressionStatement	 
>1819	CallExpression	keyframesForRetrack . push_back ( newKF )
>1820	ArgumentList	newKF
>1821	Argument	newKF
>1822	Identifier	newKF
>1823	Callee	keyframesForRetrack . push_back
>1824	MemberAccess	keyframesForRetrack . push_back
>1825	Identifier	push_back
>1826	Identifier	keyframesForRetrack
>1827	ExpressionStatement	 
>1828	AssignmentExpr	newKF -> pose -> isInGraph = true
>1829	Identifier	true
>1830	PtrMemberAccess	newKF -> pose -> isInGraph
>1831	Identifier	isInGraph
>1832	PtrMemberAccess	newKF -> pose
>1833	Identifier	pose
>1834	Identifier	newKF
>1835	ExpressionStatement	 
>1836	CallExpression	assert ( ! newKF -> pose -> isInGraph )
>1837	ArgumentList	! newKF -> pose -> isInGraph
>1838	Argument	! newKF -> pose -> isInGraph
>1839	UnaryOp	! newKF -> pose -> isInGraph
>1840	PtrMemberAccess	newKF -> pose -> isInGraph
>1841	Identifier	isInGraph
>1842	PtrMemberAccess	newKF -> pose
>1843	Identifier	pose
>1844	Identifier	newKF
>1845	UnaryOperator	!
>1846	Callee	assert
>1847	Identifier	assert
>1848	ExpressionStatement	 
>1849	CallExpression	graph . addVertex ( newKF -> pose -> graphVertex )
>1850	ArgumentList	newKF -> pose -> graphVertex
>1851	Argument	newKF -> pose -> graphVertex
>1852	PtrMemberAccess	newKF -> pose -> graphVertex
>1853	Identifier	graphVertex
>1854	PtrMemberAccess	newKF -> pose
>1855	Identifier	pose
>1856	Identifier	newKF
>1857	Callee	graph . addVertex
>1858	MemberAccess	graph . addVertex
>1859	Identifier	addVertex
>1860	Identifier	graph
>1861	Statement	 
>1862	Statement	 
>1863	Label	 
>1864	Identifier	newKF
>1865	Statement	 
>1866	Statement	 
>1867	Statement	 
>1868	ExpressionStatement	 
>1869	CallExpression	keyframesForRetrackMutex . lock ( )
>1870	ArgumentList	 
>1871	Callee	keyframesForRetrackMutex . lock
>1872	MemberAccess	keyframesForRetrackMutex . lock
>1873	Identifier	lock
>1874	Identifier	keyframesForRetrackMutex
>1875	IdentifierDeclStatement	 
>1876	IdentifierDecl	added = false
>1877	AssignmentExpr	added = false
>1878	Identifier	false
>1879	Identifier	false
>1880	Identifier	added
>1881	IdentifierDeclType	bool
>1903	FunctionDef	KeyFrameGraph 
>1904	ParameterList	int num_iterations
>1905	Parameter	 
>1906	Identifier	num_iterations
>1907	ParameterType	int
>1908	ReturnType	int
>1909	CompoundStatement	 
>1910	ReturnStatement	 
>1911	CallExpression	graph . optimize ( num_iterations , false )
>1912	ArgumentList	num_iterations
>1913	Argument	false
>1914	Identifier	false
>1915	Argument	num_iterations
>1916	Identifier	num_iterations
>1917	Callee	graph . optimize
>1918	MemberAccess	graph . optimize
>1919	Identifier	optimize
>1920	Identifier	graph
>1921	ExpressionStatement	 
>1922	CallExpression	graph . initializeOptimization ( )
>1923	ArgumentList	 
>1924	Callee	graph . initializeOptimization
>1925	MemberAccess	graph . initializeOptimization
>1926	Identifier	initializeOptimization
>1927	Identifier	graph
>1928	ExpressionStatement	 
>1929	CallExpression	graph . setVerbose ( false )
>1930	ArgumentList	false
>1931	Argument	false
>1932	Identifier	false
>1933	Callee	graph . setVerbose
>1934	MemberAccess	graph . setVerbose
>1935	Identifier	setVerbose
>1936	Identifier	graph
>1937	IfStatement	if ( graph . edges ( ) . size ( ) == 0 )
>1938	ReturnStatement	 
>1939	PrimaryExpression	0
>1940	Condition	 
>1941	EqualityExpression	graph . edges ( ) . size ( ) == 0
>1942	PrimaryExpression	0
>1943	CallExpression	graph . edges ( ) . size ( )
>1944	ArgumentList	 
>1945	Callee	graph . edges ( ) . size
>1946	MemberAccess	graph . edges ( ) . size
>1947	Identifier	size
>1948	CallExpression	graph . edges ( )
>1949	ArgumentList	 
>1950	Callee	graph . edges
>1951	MemberAccess	graph . edges
>1952	Identifier	edges
>1953	Identifier	graph
>1963	FunctionDef	KeyFrameGraph 
>1964	ParameterList	Frame * startFrame , std 
>1965	Parameter	 
>1966	Identifier	distanceMap
>1967	ParameterType	std 
>1968	Parameter	 
>1969	Identifier	startFrame
>1970	ParameterType	Frame *
>1971	ReturnType	void
>1972	CompoundStatement	 
>1973	WhileStatement	while ( ! priorityQueue . empty ( ) )
>1974	CompoundStatement	 
>1975	CompoundStatement	 
>1976	ExpressionStatement	 
>1977	CallExpression	priorityQueue . insert ( std 
>1978	ArgumentList	std 
>1979	Argument	std 
>1980	CallExpression	std 
>1981	ArgumentList	length + 1
>1982	Argument	neighbor
>1983	Identifier	neighbor
>1984	Argument	length + 1
>1985	AdditiveExpression	length + 1
>1986	PrimaryExpression	1
>1987	Identifier	length
>1988	Callee	std 
>1989	Identifier	std 
>1990	Callee	priorityQueue . insert
>1991	MemberAccess	priorityQueue . insert
>1992	Identifier	insert
>1993	Identifier	priorityQueue
>1994	IfStatement	if ( neighborMapEntry != distanceMap -> end ( ) )
>1995	ElseStatement	else
>1996	ExpressionStatement	 
>1997	CallExpression	distanceMap -> insert ( std 
>1998	ArgumentList	std 
>1999	Argument	std 
>2000	CallExpression	std 
>2001	ArgumentList	neighbor
>2002	Argument	length + 1
>2003	AdditiveExpression	length + 1
>2004	PrimaryExpression	1
>2005	Identifier	length
>2006	Argument	neighbor
>2007	Identifier	neighbor
>2008	Callee	std 
>2009	Identifier	std 
>2010	Callee	distanceMap -> insert
>2011	PtrMemberAccess	distanceMap -> insert
>2012	Identifier	insert
>2013	Identifier	distanceMap
>2014	ExpressionStatement	 
>2015	AssignmentExpr	neighborMapEntry -> second = length + 1
>2016	AdditiveExpression	length + 1
>2017	PrimaryExpression	1
>2018	Identifier	length
>2019	PtrMemberAccess	neighborMapEntry -> second
>2020	Identifier	second
>2021	Identifier	neighborMapEntry
>2022	Condition	 
>2023	EqualityExpression	neighborMapEntry != distanceMap -> end ( )
>2024	CallExpression	distanceMap -> end ( )
>2025	ArgumentList	 
>2026	Callee	distanceMap -> end
>2027	PtrMemberAccess	distanceMap -> end
>2028	Identifier	end
>2029	Identifier	distanceMap
>2030	Identifier	neighborMapEntry
>2031	IfStatement	if ( neighborMapEntry != distanceMap -> end ( ) && length + 1 >= neighborMapEntry -> second )
>2032	ContinueStatement	 
>2033	Condition	 
>2034	AndExpression	neighborMapEntry != distanceMap -> end ( ) && length + 1 >= neighborMapEntry -> second
>2035	RelationalExpression	length + 1 >= neighborMapEntry -> second
>2036	PtrMemberAccess	neighborMapEntry -> second
>2037	Identifier	second
>2038	Identifier	neighborMapEntry
>2039	AdditiveExpression	length + 1
>2040	PrimaryExpression	1
>2041	Identifier	length
>2042	EqualityExpression	neighborMapEntry != distanceMap -> end ( )
>2043	CallExpression	distanceMap -> end ( )
>2044	ArgumentList	 
>2045	Callee	distanceMap -> end
>2046	PtrMemberAccess	distanceMap -> end
>2047	Identifier	end
>2048	Identifier	distanceMap
>2049	Identifier	neighborMapEntry
>2050	ExpressionStatement	 
>2051	AssignmentExpr	neighborMapEntry = distanceMap -> find ( neighbor )
>2052	CallExpression	distanceMap -> find ( neighbor )
>2053	ArgumentList	neighbor
>2054	Argument	neighbor
>2055	Identifier	neighbor
>2056	Callee	distanceMap -> find
>2057	PtrMemberAccess	distanceMap -> find
>2058	Identifier	find
>2059	Identifier	distanceMap
>2060	Identifier	neighborMapEntry
>2061	Statement	 
>2062	Statement	 
>2063	Statement	 
>2064	Statement	 
>2065	Statement	 
>2066	Label	 
>2067	Identifier	neighbor
>2068	Statement	 
>2069	Statement	 
>2070	Statement	 
>2071	Statement	 
>2072	IfStatement	if ( mapEntry != distanceMap -> end ( ) && length > mapEntry -> second )
>2073	CompoundStatement	 
>2074	ContinueStatement	 
>2075	Condition	 
>2076	AndExpression	mapEntry != distanceMap -> end ( ) && length > mapEntry -> second
>2077	RelationalExpression	length > mapEntry -> second
>2078	PtrMemberAccess	mapEntry -> second
>2079	Identifier	second
>2080	Identifier	mapEntry
>2081	Identifier	length
>2082	EqualityExpression	mapEntry != distanceMap -> end ( )
>2083	CallExpression	distanceMap -> end ( )
>2084	ArgumentList	 
>2085	Callee	distanceMap -> end
>2086	PtrMemberAccess	distanceMap -> end
>2087	Identifier	end
>2088	Identifier	distanceMap
>2089	Identifier	mapEntry
>2090	ExpressionStatement	 
>2091	AssignmentExpr	mapEntry = distanceMap -> find ( frame )
>2092	CallExpression	distanceMap -> find ( frame )
>2093	ArgumentList	frame
>2094	Argument	frame
>2095	Identifier	frame
>2096	Callee	distanceMap -> find
>2097	PtrMemberAccess	distanceMap -> find
>2098	Identifier	find
>2099	Identifier	distanceMap
>2100	Identifier	mapEntry
>2101	Statement	 
>2102	ExpressionStatement	 
>2103	CallExpression	priorityQueue . erase ( it )
>2104	ArgumentList	it
>2105	Argument	it
>2106	Identifier	it
>2107	Callee	priorityQueue . erase
>2108	MemberAccess	priorityQueue . erase
>2109	Identifier	erase
>2110	Identifier	priorityQueue
>2111	IdentifierDeclStatement	 
>2112	IdentifierDecl	* frame = it -> second
>2113	AssignmentExpr	* frame = it -> second
>2114	PtrMemberAccess	it -> second
>2115	Identifier	second
>2116	Identifier	it
>2117	Identifier	frame
>2118	Identifier	frame
>2119	IdentifierDeclType	Frame *
>2120	IdentifierDeclStatement	 
>2121	IdentifierDecl	length = it -> first
>2122	AssignmentExpr	length = it -> first
>2123	PtrMemberAccess	it -> first
>2124	Identifier	first
>2125	Identifier	it
>2126	Identifier	length
>2127	Identifier	length
>2128	IdentifierDeclType	int
>2129	ExpressionStatement	 
>2130	AssignmentExpr	it = priorityQueue . begin ( )
>2131	CallExpression	priorityQueue . begin ( )
>2132	ArgumentList	 
>2133	Callee	priorityQueue . begin
>2134	MemberAccess	priorityQueue . begin
>2135	Identifier	begin
>2136	Identifier	priorityQueue
>2137	Identifier	it
>2138	Statement	 
>2139	Condition	 
>2140	UnaryOp	! priorityQueue . empty ( )
>2141	CallExpression	priorityQueue . empty ( )
>2142	ArgumentList	 
>2143	Callee	priorityQueue . empty
>2144	MemberAccess	priorityQueue . empty
>2145	Identifier	empty
>2146	Identifier	priorityQueue
>2147	UnaryOperator	!
>2148	ExpressionStatement	 
>2149	CallExpression	priorityQueue . insert ( std 
>2150	ArgumentList	std 
>2151	Argument	std 
>2152	CallExpression	std 
>2153	ArgumentList	0
>2154	Argument	startFrame
>2155	Identifier	startFrame
>2156	Argument	0
>2157	PrimaryExpression	0
>2158	Callee	std 
>2159	Identifier	std 
>2160	Callee	priorityQueue . insert
>2161	MemberAccess	priorityQueue . insert
>2162	Identifier	insert
>2163	Identifier	priorityQueue
>2164	IdentifierDeclStatement	 
>2165	IdentifierDecl	priorityQueue
>2166	Identifier	priorityQueue
>2167	IdentifierDeclType	std 
>2168	ExpressionStatement	 
>2169	CallExpression	distanceMap -> insert ( std 
>2170	ArgumentList	std 
>2171	Argument	std 
>2172	CallExpression	std 
>2173	ArgumentList	startFrame
>2174	Argument	0
>2175	PrimaryExpression	0
>2176	Argument	startFrame
>2177	Identifier	startFrame
>2178	Callee	std 
>2179	Identifier	std 
>2180	Callee	distanceMap -> insert
>2181	PtrMemberAccess	distanceMap -> insert
>2182	Identifier	insert
>2183	Identifier	distanceMap
<3=5,4
<5=8,6
<6=7
<8=10,9
<10=11
<11=13,12
<18=20,19
<20=103,99,92,85,78,69,60,51,42,33,29,25,21
<21=22
<22=24,23
<25=26
<26=28,27
<29=30
<30=32,31
<33=34
<34=38,35
<35=36
<36=37
<38=39
<39=41,40
<42=43
<43=47,44
<44=45
<45=46
<47=48
<48=50,49
<51=52
<52=56,53
<53=54
<54=55
<56=57
<57=59,58
<60=61
<61=65,62
<62=63
<63=64
<65=66
<66=68,67
<69=70
<70=74,71
<71=72
<72=73
<74=75
<75=77,76
<78=79
<79=84,83,80
<80=82,81
<85=86
<86=91,90,87
<87=89,88
<92=93
<93=98,97,94
<94=96,95
<99=100
<100=102,101
<103=104
<104=106,105
<121=123,122
<123=152,151,150,149,147,146,145,144,142,135,134,133,132,131,129,128,127,126,124
<124=125
<129=130
<135=136
<136=138,137
<138=139
<139=141,140
<142=143
<147=148
<157=163,162,158
<158=159
<159=161,160
<163=196,187,180,171,164
<164=165
<165=167,166
<167=168
<168=170,169
<171=172
<172=176,173
<173=174
<174=175
<176=177
<177=179,178
<180=181
<181=183,182
<183=184
<184=186,185
<187=188
<188=195,194,189
<189=193,190
<190=192,191
<196=197
<197=199,198
<199=201,200
<201=203,202
<217=223,222,218
<218=219
<219=221,220
<223=1292,1285,1280,1261,1245,1056,1042,994,976,951,944,923,902,224,240,247,251,262,269,273,284,291,295,306,313,317,328,335,339,350,357,361,372,379,383,394,401,405,416,423,427,438,442,449,456,649,656,706,713,720,727,734,741,748,755,762,769,783,797,818,839,860,881
<224=225
<225=238,226
<226=236,227
<227=228
<228=235,229
<229=231,230
<231=232
<232=234,233
<236=237
<238=239
<240=241
<241=243,242
<243=244
<244=246,245
<247=248
<248=250,249
<251=252
<252=258,253
<253=254
<254=255
<255=257,256
<258=259
<259=261,260
<262=263
<263=265,264
<265=266
<266=268,267
<269=270
<270=272,271
<273=274
<274=280,275
<275=276
<276=277
<277=279,278
<280=281
<281=283,282
<284=285
<285=287,286
<287=288
<288=290,289
<291=292
<292=294,293
<295=296
<296=302,297
<297=298
<298=299
<299=301,300
<302=303
<303=305,304
<306=307
<307=309,308
<309=310
<310=312,311
<313=314
<314=316,315
<317=318
<318=324,319
<319=320
<320=321
<321=323,322
<324=325
<325=327,326
<328=329
<329=331,330
<331=332
<332=334,333
<335=336
<336=338,337
<339=340
<340=346,341
<341=342
<342=343
<343=345,344
<346=347
<347=349,348
<350=351
<351=353,352
<353=354
<354=356,355
<357=358
<358=360,359
<361=362
<362=368,363
<363=364
<364=365
<365=367,366
<368=369
<369=371,370
<372=373
<373=375,374
<375=376
<376=378,377
<379=380
<380=382,381
<383=384
<384=390,385
<385=386
<386=387
<387=389,388
<390=391
<391=393,392
<394=395
<395=397,396
<397=398
<398=400,399
<401=402
<402=404,403
<405=406
<406=412,407
<407=408
<408=409
<409=411,410
<412=413
<413=415,414
<416=417
<417=419,418
<419=420
<420=422,421
<423=424
<424=426,425
<427=428
<428=434,429
<429=430
<430=431
<431=433,432
<434=435
<435=437,436
<438=439
<439=441,440
<442=443
<443=445,444
<445=446
<446=448,447
<449=450
<450=452,451
<452=453
<453=455,454
<456=641,632,629,457
<457=620,599,578,557,536,515,484,458
<458=459
<459=468,460
<460=462,461
<462=463
<463=465,464
<465=467,466
<468=482,469
<469=476,470
<470=471
<471=473,472
<473=475,474
<476=477
<477=479,478
<479=481,480
<482=483
<484=485
<485=499,486
<486=488,487
<488=489
<489=491,490
<491=493,492
<493=494
<494=496,495
<496=498,497
<499=513,500
<500=507,501
<501=502
<502=504,503
<504=506,505
<507=508
<508=510,509
<510=512,511
<513=514
<515=516
<516=520,517
<517=519,518
<520=534,521
<521=528,522
<522=523
<523=525,524
<525=527,526
<528=529
<529=531,530
<531=533,532
<534=535
<536=537
<537=541,538
<538=540,539
<541=555,542
<542=549,543
<543=544
<544=546,545
<546=548,547
<549=550
<550=552,551
<552=554,553
<555=556
<557=558
<558=562,559
<559=561,560
<562=576,563
<563=570,564
<564=565
<565=567,566
<567=569,568
<570=571
<571=573,572
<573=575,574
<576=577
<578=579
<579=583,580
<580=582,581
<583=597,584
<584=591,585
<585=586
<586=588,587
<588=590,589
<591=592
<592=594,593
<594=596,595
<597=598
<599=600
<600=604,601
<601=603,602
<604=618,605
<605=612,606
<606=607
<607=609,608
<609=611,610
<612=613
<613=615,614
<615=617,616
<618=619
<620=621
<621=628,627,622
<622=626,623
<623=625,624
<629=631,630
<632=633
<633=640,634
<634=636,635
<636=637
<637=639,638
<641=642
<642=643
<643=648,647,644
<644=646,645
<649=650
<650=652,651
<652=653
<653=655,654
<656=698,689,686,657
<657=676,658
<658=659
<659=673,660
<660=668,661
<661=667,662
<662=664,663
<664=666,665
<668=670,669
<670=672,671
<673=675,674
<676=677
<677=683,678
<678=680,679
<680=682,681
<683=685,684
<686=688,687
<689=690
<690=697,691
<691=693,692
<693=694
<694=696,695
<698=699
<699=700
<700=705,704,701
<701=703,702
<706=707
<707=709,708
<709=710
<710=712,711
<713=714
<714=716,715
<716=717
<717=719,718
<720=721
<721=723,722
<723=724
<724=726,725
<727=728
<728=730,729
<730=731
<731=733,732
<734=735
<735=737,736
<737=738
<738=740,739
<741=742
<742=744,743
<744=745
<745=747,746
<748=749
<749=751,750
<751=752
<752=754,753
<755=756
<756=758,757
<758=759
<759=761,760
<762=763
<763=765,764
<765=766
<766=768,767
<769=770
<770=779,771
<771=772
<772=773
<773=775,774
<775=776
<776=778,777
<779=780
<780=782,781
<783=784
<784=793,785
<785=786
<786=787
<787=789,788
<789=790
<790=792,791
<793=794
<794=796,795
<797=798
<798=814,799
<799=807,800
<800=801
<801=803,802
<803=804
<804=806,805
<807=808
<808=810,809
<810=811
<811=813,812
<814=815
<815=817,816
<818=819
<819=835,820
<820=828,821
<821=822
<822=824,823
<824=825
<825=827,826
<828=829
<829=831,830
<831=832
<832=834,833
<835=836
<836=838,837
<839=840
<840=856,841
<841=849,842
<842=843
<843=845,844
<845=846
<846=848,847
<849=850
<850=852,851
<852=853
<853=855,854
<856=857
<857=859,858
<860=861
<861=877,862
<862=870,863
<863=864
<864=866,865
<866=867
<867=869,868
<870=871
<871=873,872
<873=874
<874=876,875
<877=878
<878=880,879
<881=882
<882=898,883
<883=891,884
<884=885
<885=887,886
<887=888
<888=890,889
<891=892
<892=894,893
<894=895
<895=897,896
<898=899
<899=901,900
<902=903
<903=919,904
<904=912,905
<905=906
<906=908,907
<908=909
<909=911,910
<912=913
<913=915,914
<915=916
<916=918,917
<919=920
<920=922,921
<923=924
<924=940,925
<925=933,926
<926=927
<927=929,928
<929=930
<930=932,931
<933=934
<934=936,935
<936=937
<937=939,938
<940=941
<941=943,942
<944=948,945
<945=947,946
<948=950,949
<951=973,970,967,964,961,958,955,952
<952=954,953
<955=957,956
<958=960,959
<961=963,962
<964=966,965
<967=969,968
<970=972,971
<973=975,974
<976=977
<977=992,978
<978=990,988,979
<979=980
<980=987,981
<981=983,982
<983=984
<984=986,985
<988=989
<990=991
<992=993
<994=995
<995=1040,996
<996=1038,997
<997=998
<998=1036,999
<999=1027,1018,1009,1000
<1000=1001
<1001=1003,1002
<1003=1004
<1004=1006,1005
<1006=1008,1007
<1009=1010
<1010=1012,1011
<1012=1013
<1013=1015,1014
<1015=1017,1016
<1018=1019
<1019=1021,1020
<1021=1022
<1022=1024,1023
<1024=1026,1025
<1027=1028
<1028=1030,1029
<1030=1031
<1031=1033,1032
<1033=1035,1034
<1036=1037
<1038=1039
<1040=1041
<1042=1043
<1043=1055,1054,1044
<1044=1053,1045
<1045=1047,1046
<1047=1049,1048
<1049=1050
<1050=1052,1051
<1056=1237,1228,1225,1057
<1057=1205,1187,1167,1126,1106,1058
<1058=1059
<1059=1104,1060
<1060=1102,1061
<1061=1062
<1062=1100,1063
<1063=1091,1082,1073,1064
<1064=1065
<1065=1067,1066
<1067=1068
<1068=1070,1069
<1070=1072,1071
<1073=1074
<1074=1076,1075
<1076=1077
<1077=1079,1078
<1079=1081,1080
<1082=1083
<1083=1085,1084
<1085=1086
<1086=1088,1087
<1088=1090,1089
<1091=1092
<1092=1094,1093
<1094=1095
<1095=1097,1096
<1097=1099,1098
<1100=1101
<1102=1103
<1104=1105
<1106=1107
<1107=1124,1108
<1108=1122,1120,1118,1111,1109
<1109=1110
<1111=1112
<1112=1114,1113
<1114=1115
<1115=1117,1116
<1118=1119
<1120=1121
<1122=1123
<1124=1125
<1126=1127
<1127=1165,1128
<1128=1163,1129
<1129=1130
<1130=1161,1131
<1131=1152,1143,1141,1132
<1132=1133
<1133=1135,1134
<1135=1136
<1136=1138,1137
<1138=1140,1139
<1141=1142
<1143=1144
<1144=1146,1145
<1146=1147
<1147=1149,1148
<1149=1151,1150
<1152=1153
<1153=1155,1154
<1155=1156
<1156=1158,1157
<1158=1160,1159
<1161=1162
<1163=1164
<1165=1166
<1167=1168
<1168=1185,1169
<1169=1183,1181,1179,1172,1170
<1170=1171
<1172=1173
<1173=1175,1174
<1175=1176
<1176=1178,1177
<1179=1180
<1181=1182
<1183=1184
<1185=1186
<1187=1188
<1188=1203,1189
<1189=1201,1190
<1190=1191
<1191=1199,1192
<1192=1195,1193
<1193=1194
<1195=1196
<1196=1198,1197
<1199=1200
<1201=1202
<1203=1204
<1205=1206
<1206=1223,1207
<1207=1221,1219,1217,1210,1208
<1208=1209
<1210=1211
<1211=1213,1212
<1213=1214
<1214=1216,1215
<1217=1218
<1219=1220
<1221=1222
<1223=1224
<1225=1227,1226
<1228=1229
<1229=1236,1230
<1230=1232,1231
<1232=1233
<1233=1235,1234
<1237=1238
<1238=1239
<1239=1244,1243,1240
<1240=1242,1241
<1245=1246
<1246=1260,1247
<1247=1258,1248
<1248=1249
<1249=1250
<1250=1252,1251
<1252=1253
<1253=1255,1254
<1255=1257,1256
<1258=1259
<1261=1262
<1262=1279,1278,1263
<1263=1277,1264
<1264=1275,1265
<1265=1266
<1266=1267
<1267=1269,1268
<1269=1270
<1270=1272,1271
<1272=1274,1273
<1275=1276
<1280=1281
<1281=1284,1283,1282
<1285=1286
<1286=1288,1287
<1288=1289
<1289=1291,1290
<1292=1293
<1293=1304,1294
<1294=1302,1295
<1295=1296
<1296=1298,1297
<1298=1299
<1299=1301,1300
<1302=1303
<1304=1305
<1372=1378,1377,1373
<1373=1374
<1374=1376,1375
<1378=1466,1459,1445,1433,1414,1405,1396,1388,1379
<1379=1380
<1380=1384,1381
<1381=1382
<1382=1383
<1384=1385
<1385=1387,1386
<1388=1389
<1389=1391,1390
<1391=1393,1392
<1393=1395,1394
<1396=1397
<1397=1401,1398
<1398=1399
<1399=1400
<1401=1402
<1402=1404,1403
<1405=1406
<1406=1410,1407
<1407=1408
<1408=1409
<1410=1411
<1411=1413,1412
<1414=1424,1415
<1415=1416
<1416=1420,1417
<1417=1418
<1418=1419
<1420=1421
<1421=1423,1422
<1424=1425
<1425=1432,1426
<1426=1428,1427
<1428=1429
<1429=1431,1430
<1433=1434
<1434=1444,1443,1435
<1435=1442,1436
<1436=1438,1437
<1438=1439
<1439=1441,1440
<1445=1446
<1446=1455,1447
<1447=1448
<1448=1449
<1449=1451,1450
<1451=1452
<1452=1454,1453
<1455=1456
<1456=1458,1457
<1459=1460
<1460=1465,1464,1461
<1461=1463,1462
<1466=1468,1467
<1468=1469
<1469=1471,1470
<1471=1473,1472
<1473=1475,1474
<1494=1500,1499,1495
<1495=1496
<1496=1498,1497
<1500=1720,1711,1707,1703,1692,1681,1670,1661,1646,1629,1614,1597,1591,1582,1567,1552,1535,1528,1517,1508,1501
<1501=1502
<1502=1504,1503
<1504=1505
<1505=1507,1506
<1508=1509
<1509=1513,1510
<1510=1511
<1511=1512
<1513=1514
<1514=1516,1515
<1517=1518
<1518=1525,1519
<1519=1521,1520
<1521=1522
<1522=1524,1523
<1525=1527,1526
<1528=1529
<1529=1531,1530
<1531=1532
<1532=1534,1533
<1535=1544,1540,1537,1536
<1537=1539,1538
<1540=1541
<1541=1543,1542
<1544=1545
<1545=1546
<1546=1551,1550,1547
<1547=1549,1548
<1552=1553
<1553=1559,1554
<1554=1555
<1555=1556
<1556=1558,1557
<1559=1560
<1560=1562,1561
<1562=1564,1563
<1564=1566,1565
<1567=1568
<1568=1574,1569
<1569=1570
<1570=1571
<1571=1573,1572
<1574=1575
<1575=1577,1576
<1577=1579,1578
<1579=1581,1580
<1582=1583
<1583=1587,1584
<1584=1585
<1585=1586
<1587=1588
<1588=1590,1589
<1591=1592
<1592=1594,1593
<1594=1596,1595
<1597=1598
<1598=1610,1599
<1599=1608,1600
<1600=1601
<1601=1603,1602
<1603=1605,1604
<1605=1607,1606
<1608=1609
<1610=1611
<1611=1613,1612
<1614=1615
<1615=1627,1616
<1616=1617
<1617=1618
<1618=1620,1619
<1620=1622,1621
<1622=1624,1623
<1624=1626,1625
<1627=1628
<1629=1630
<1630=1642,1631
<1631=1640,1632
<1632=1633
<1633=1635,1634
<1635=1637,1636
<1637=1639,1638
<1640=1641
<1642=1643
<1643=1645,1644
<1646=1647
<1647=1659,1648
<1648=1649
<1649=1650
<1650=1652,1651
<1652=1654,1653
<1654=1656,1655
<1656=1658,1657
<1659=1660
<1661=1662
<1662=1666,1663
<1663=1664
<1664=1665
<1666=1667
<1667=1669,1668
<1670=1671
<1671=1677,1672
<1672=1673
<1673=1674
<1674=1676,1675
<1677=1678
<1678=1680,1679
<1681=1682
<1682=1688,1683
<1683=1684
<1684=1685
<1685=1687,1686
<1688=1689
<1689=1691,1690
<1692=1693
<1693=1699,1694
<1694=1695
<1695=1696
<1696=1698,1697
<1699=1700
<1700=1702,1701
<1703=1704
<1704=1706,1705
<1707=1708
<1708=1710,1709
<1711=1712
<1712=1716,1713
<1713=1714
<1714=1715
<1716=1717
<1717=1719,1718
<1720=1721
<1721=1726,1725,1722
<1722=1724,1723
<1763=1766,1765,1764
<1766=1875,1868,1867,1866,1865,1863,1862,1861,1813,1806,1799,1798,1797,1796,1794,1793,1792,1776,1769,1767
<1767=1768
<1769=1770
<1770=1772,1771
<1772=1773
<1773=1775,1774
<1776=1781,1777
<1777=1778
<1778=1780,1779
<1781=1782
<1782=1788,1783
<1783=1784
<1784=1785
<1785=1787,1786
<1788=1789
<1789=1791,1790
<1794=1795
<1799=1800
<1800=1802,1801
<1802=1803
<1803=1805,1804
<1806=1807
<1807=1809,1808
<1809=1810
<1810=1812,1811
<1813=1848,1835,1827,1818,1814
<1814=1815
<1815=1817,1816
<1818=1819
<1819=1823,1820
<1820=1821
<1821=1822
<1823=1824
<1824=1826,1825
<1827=1828
<1828=1830,1829
<1830=1832,1831
<1832=1834,1833
<1835=1836
<1836=1846,1837
<1837=1838
<1838=1839
<1839=1845,1840
<1840=1842,1841
<1842=1844,1843
<1846=1847
<1848=1849
<1849=1857,1850
<1850=1851
<1851=1852
<1852=1854,1853
<1854=1856,1855
<1857=1858
<1858=1860,1859
<1863=1864
<1868=1869
<1869=1871,1870
<1871=1872
<1872=1874,1873
<1875=1876
<1876=1881,1880,1877
<1877=1879,1878
<1903=1909,1908,1904
<1904=1905
<1905=1907,1906
<1909=1937,1928,1921,1910
<1910=1911
<1911=1917,1912
<1912=1915,1913
<1913=1914
<1915=1916
<1917=1918
<1918=1920,1919
<1921=1922
<1922=1924,1923
<1924=1925
<1925=1927,1926
<1928=1929
<1929=1933,1930
<1930=1931
<1931=1932
<1933=1934
<1934=1936,1935
<1937=1940,1938
<1938=1939
<1940=1941
<1941=1943,1942
<1943=1945,1944
<1945=1946
<1946=1948,1947
<1948=1950,1949
<1950=1951
<1951=1953,1952
<1963=1972,1971,1964
<1964=1968,1965
<1965=1967,1966
<1968=1970,1969
<1972=2168,2164,2148,1973
<1973=2139,1974
<1974=2138,2129,2120,2111,2102,2101,2090,2072,2071,2070,2069,2068,2066,2065,2064,2063,2062,1975
<1975=2061,2050,2031,1994,1976
<1976=1977
<1977=1990,1978
<1978=1979
<1979=1980
<1980=1988,1981
<1981=1984,1982
<1982=1983
<1984=1985
<1985=1987,1986
<1988=1989
<1990=1991
<1991=1993,1992
<1994=2022,2014,1995
<1995=1996
<1996=1997
<1997=2010,1998
<1998=1999
<1999=2000
<2000=2008,2001
<2001=2006,2002
<2002=2003
<2003=2005,2004
<2006=2007
<2008=2009
<2010=2011
<2011=2013,2012
<2014=2015
<2015=2019,2016
<2016=2018,2017
<2019=2021,2020
<2022=2023
<2023=2030,2024
<2024=2026,2025
<2026=2027
<2027=2029,2028
<2031=2033,2032
<2033=2034
<2034=2042,2035
<2035=2039,2036
<2036=2038,2037
<2039=2041,2040
<2042=2049,2043
<2043=2045,2044
<2045=2046
<2046=2048,2047
<2050=2051
<2051=2060,2052
<2052=2056,2053
<2053=2054
<2054=2055
<2056=2057
<2057=2059,2058
<2066=2067
<2072=2075,2073
<2073=2074
<2075=2076
<2076=2082,2077
<2077=2081,2078
<2078=2080,2079
<2082=2089,2083
<2083=2085,2084
<2085=2086
<2086=2088,2087
<2090=2091
<2091=2100,2092
<2092=2096,2093
<2093=2094
<2094=2095
<2096=2097
<2097=2099,2098
<2102=2103
<2103=2107,2104
<2104=2105
<2105=2106
<2107=2108
<2108=2110,2109
<2111=2112
<2112=2119,2118,2113
<2113=2117,2114
<2114=2116,2115
<2120=2121
<2121=2128,2127,2122
<2122=2126,2123
<2123=2125,2124
<2129=2130
<2130=2137,2131
<2131=2133,2132
<2133=2134
<2134=2136,2135
<2139=2140
<2140=2147,2141
<2141=2143,2142
<2143=2144
<2144=2146,2145
<2148=2149
<2149=2160,2150
<2150=2151
<2151=2152
<2152=2158,2153
<2153=2156,2154
<2154=2155
<2156=2157
<2158=2159
<2160=2161
<2161=2163,2162
<2164=2165
<2165=2167,2166
<2168=2169
<2169=2180,2170
<2170=2171
<2171=2172
<2172=2178,2173
<2173=2176,2174
<2174=2175
<2176=2177
<2178=2179
<2180=2181
<2181=2183,2182
