>9	FunctionDef	native (const std 
>10	ParameterList	const std 
>11	Parameter	 
>12	Identifier	name
>13	ParameterType	const std 
>14	ReturnType	ifdef BOOST_WINDOWS BOOST_FILESYSTEM_DECL bool
>15	CompoundStatement	 
>16	ReturnStatement	 
>17	CallExpression	windows_name ( name )
>18	ArgumentList	name
>19	Argument	name
>20	Identifier	name
>21	Callee	windows_name
>22	Identifier	windows_name
>28	FunctionDef	native (const std 
>29	ParameterList	const std 
>30	Parameter	 
>31	Identifier	name
>32	ParameterType	const std 
>33	ReturnType	BOOST_FILESYSTEM_DECL bool
>34	CompoundStatement	 
>35	ReturnStatement	 
>36	AndExpression	name . size ( ) != 0 && name [ 0 ] != ' ' && name . find ( '/' ) == std 
>37	AndExpression	name [ 0 ] != ' ' && name . find ( '/' ) == std 
>38	EqualityExpression	name . find ( '/' ) == std 
>39	Identifier	std 
>40	CallExpression	name . find ( '/' )
>41	ArgumentList	'/'
>42	Argument	'/'
>43	PrimaryExpression	'/'
>44	Callee	name . find
>45	MemberAccess	name . find
>46	Identifier	find
>47	Identifier	name
>48	EqualityExpression	name [ 0 ] != ' '
>49	PrimaryExpression	' '
>50	ArrayIndexing	name [ 0 ]
>51	PrimaryExpression	0
>52	Identifier	name
>53	EqualityExpression	name . size ( ) != 0
>54	PrimaryExpression	0
>55	CallExpression	name . size ( )
>56	ArgumentList	 
>57	Callee	name . size
>58	MemberAccess	name . size
>59	Identifier	size
>60	Identifier	name
>69	FunctionDef	portable_posix_name (const std 
>70	ParameterList	const std 
>71	Parameter	 
>72	Identifier	name
>73	ParameterType	const std 
>74	ReturnType	endif BOOST_FILESYSTEM_DECL bool
>75	CompoundStatement	 
>76	ReturnStatement	 
>77	AndExpression	name . size ( ) != 0 && name . find_first_not_of ( valid_posix ) == std 
>78	EqualityExpression	name . find_first_not_of ( valid_posix ) == std 
>79	Identifier	std 
>80	CallExpression	name . find_first_not_of ( valid_posix )
>81	ArgumentList	valid_posix
>82	Argument	valid_posix
>83	Identifier	valid_posix
>84	Callee	name . find_first_not_of
>85	MemberAccess	name . find_first_not_of
>86	Identifier	find_first_not_of
>87	Identifier	name
>88	EqualityExpression	name . size ( ) != 0
>89	PrimaryExpression	0
>90	CallExpression	name . size ( )
>91	ArgumentList	 
>92	Callee	name . size
>93	MemberAccess	name . size
>94	Identifier	size
>95	Identifier	name
>104	FunctionDef	windows_name (const std 
>105	ParameterList	const std 
>106	Parameter	 
>107	Identifier	name
>108	ParameterType	const std 
>109	ReturnType	BOOST_FILESYSTEM_DECL bool
>110	CompoundStatement	 
>111	ReturnStatement	 
>112	AndExpression	name . size ( ) != 0 && name [ 0 ] != ' ' && name . find_first_of ( windows_invalid_chars ) == std 
>113	AndExpression	name [ 0 ] != ' ' && name . find_first_of ( windows_invalid_chars ) == std 
>114	AndExpression	name . find_first_of ( windows_invalid_chars ) == std 
>115	AndExpression	* ( name . end ( ) - 1 ) != ' ' && ( * ( name . end ( ) - 1 ) != '.' || name . length ( ) == 1 || name == \"\
>116	OrExpression	* ( name . end ( ) - 1 ) != '.' || name . length ( ) == 1 || name == \"..\"
>117	OrExpression	name . length ( ) == 1 || name == \"..\"
>118	EqualityExpression	name == \"..\"
>119	PrimaryExpression	\"..\"
>120	Identifier	name
>121	EqualityExpression	name . length ( ) == 1
>122	PrimaryExpression	1
>123	CallExpression	name . length ( )
>124	ArgumentList	 
>125	Callee	name . length
>126	MemberAccess	name . length
>127	Identifier	length
>128	Identifier	name
>129	EqualityExpression	* ( name . end ( ) - 1 ) != '.'
>130	PrimaryExpression	'.'
>131	UnaryOp	* ( name . end ( ) - 1 )
>132	AdditiveExpression	name . end ( ) - 1
>133	PrimaryExpression	1
>134	CallExpression	name . end ( )
>135	ArgumentList	 
>136	Callee	name . end
>137	MemberAccess	name . end
>138	Identifier	end
>139	Identifier	name
>140	UnaryOperator	*
>141	EqualityExpression	* ( name . end ( ) - 1 ) != ' '
>142	PrimaryExpression	' '
>143	UnaryOp	* ( name . end ( ) - 1 )
>144	AdditiveExpression	name . end ( ) - 1
>145	PrimaryExpression	1
>146	CallExpression	name . end ( )
>147	ArgumentList	 
>148	Callee	name . end
>149	MemberAccess	name . end
>150	Identifier	end
>151	Identifier	name
>152	UnaryOperator	*
>153	EqualityExpression	name . find_first_of ( windows_invalid_chars ) == std 
>154	Identifier	std 
>155	CallExpression	name . find_first_of ( windows_invalid_chars )
>156	ArgumentList	windows_invalid_chars
>157	Argument	windows_invalid_chars
>158	Identifier	windows_invalid_chars
>159	Callee	name . find_first_of
>160	MemberAccess	name . find_first_of
>161	Identifier	find_first_of
>162	Identifier	name
>163	EqualityExpression	name [ 0 ] != ' '
>164	PrimaryExpression	' '
>165	ArrayIndexing	name [ 0 ]
>166	PrimaryExpression	0
>167	Identifier	name
>168	EqualityExpression	name . size ( ) != 0
>169	PrimaryExpression	0
>170	CallExpression	name . size ( )
>171	ArgumentList	 
>172	Callee	name . size
>173	MemberAccess	name . size
>174	Identifier	size
>175	Identifier	name
>189	FunctionDef	portable_name (const std 
>190	ParameterList	const std 
>191	Parameter	 
>192	Identifier	name
>193	ParameterType	const std 
>194	ReturnType	BOOST_FILESYSTEM_DECL bool
>195	CompoundStatement	 
>196	ReturnStatement	 
>197	AndExpression	name . size ( ) != 0 && ( name == \".\" || name == \"..\" || ( windows_name ( name ) && portable_posix_name ( \
>198	OrExpression	name == \".\" || name == \"..\" || ( windows_name ( name ) && portable_posix_name ( name ) && name [ 0 ] != '\
>199	OrExpression	name == \"..\" || ( windows_name ( name ) && portable_posix_name ( name ) && name [ 0 ] != '.' && name [ \
>200	AndExpression	windows_name ( name ) && portable_posix_name ( name ) && name [ 0 ] != '.' && name [ 0 ] != '-'
>201	AndExpression	portable_posix_name ( name ) && name [ 0 ] != '.' && name [ 0 ] != '-'
>202	AndExpression	name [ 0 ] != '.' && name [ 0 ] != '-'
>203	EqualityExpression	name [ 0 ] != '-'
>204	PrimaryExpression	'-'
>205	ArrayIndexing	name [ 0 ]
>206	PrimaryExpression	0
>207	Identifier	name
>208	EqualityExpression	name [ 0 ] != '.'
>209	PrimaryExpression	'.'
>210	ArrayIndexing	name [ 0 ]
>211	PrimaryExpression	0
>212	Identifier	name
>213	CallExpression	portable_posix_name ( name )
>214	ArgumentList	name
>215	Argument	name
>216	Identifier	name
>217	Callee	portable_posix_name
>218	Identifier	portable_posix_name
>219	CallExpression	windows_name ( name )
>220	ArgumentList	name
>221	Argument	name
>222	Identifier	name
>223	Callee	windows_name
>224	Identifier	windows_name
>225	EqualityExpression	name == \"..\"
>226	PrimaryExpression	\"..\"
>227	Identifier	name
>228	EqualityExpression	name == \".\"
>229	PrimaryExpression	\".\"
>230	Identifier	name
>231	EqualityExpression	name . size ( ) != 0
>232	PrimaryExpression	0
>233	CallExpression	name . size ( )
>234	ArgumentList	 
>235	Callee	name . size
>236	MemberAccess	name . size
>237	Identifier	size
>238	Identifier	name
>247	FunctionDef	portable_directory_name (const std 
>248	ParameterList	const std 
>249	Parameter	 
>250	Identifier	name
>251	ParameterType	const std 
>252	ReturnType	BOOST_FILESYSTEM_DECL bool
>253	CompoundStatement	 
>254	ReturnStatement	 
>255	OrExpression	name == \".\" || name == \"..\" || ( portable_name ( name ) && name . find ( '.' ) == std 
>256	OrExpression	name == \"..\" || ( portable_name ( name ) && name . find ( '.' ) == std 
>257	AndExpression	portable_name ( name ) && name . find ( '.' ) == std 
>258	EqualityExpression	name . find ( '.' ) == std 
>259	Identifier	std 
>260	CallExpression	name . find ( '.' )
>261	ArgumentList	'.'
>262	Argument	'.'
>263	PrimaryExpression	'.'
>264	Callee	name . find
>265	MemberAccess	name . find
>266	Identifier	find
>267	Identifier	name
>268	CallExpression	portable_name ( name )
>269	ArgumentList	name
>270	Argument	name
>271	Identifier	name
>272	Callee	portable_name
>273	Identifier	portable_name
>274	EqualityExpression	name == \"..\"
>275	PrimaryExpression	\"..\"
>276	Identifier	name
>277	EqualityExpression	name == \".\"
>278	PrimaryExpression	\".\"
>279	Identifier	name
>287	FunctionDef	portable_file_name (const std 
>288	ParameterList	const std 
>289	Parameter	 
>290	Identifier	name
>291	ParameterType	const std 
>292	ReturnType	BOOST_FILESYSTEM_DECL bool
>293	CompoundStatement	 
>294	ReturnStatement	 
>295	AndExpression	portable_name ( name ) && name != \".\" && name != \"..\" && ( ( pos = name . find ( '.' ) ) == std 
>296	AndExpression	name != \".\" && name != \"..\" && ( ( pos = name . find ( '.' ) ) == std 
>297	AndExpression	name != \"..\" && ( ( pos = name . find ( '.' ) ) == std 
>298	OrExpression	( pos = name . find ( '.' ) ) == std 
>299	AndExpression	name . find ( '.' , pos + 1 ) == std 
>300	RelationalExpression	( pos + 5 ) > name . length ( )
>301	CallExpression	name . length ( )
>302	ArgumentList	 
>303	Callee	name . length
>304	MemberAccess	name . length
>305	Identifier	length
>306	Identifier	name
>307	AdditiveExpression	pos + 5
>308	PrimaryExpression	5
>309	Identifier	pos
>310	EqualityExpression	name . find ( '.' , pos + 1 ) == std 
>311	Identifier	std 
>312	CallExpression	name . find ( '.' , pos + 1 )
>313	ArgumentList	'.'
>314	Argument	pos + 1
>315	AdditiveExpression	pos + 1
>316	PrimaryExpression	1
>317	Identifier	pos
>318	Argument	'.'
>319	PrimaryExpression	'.'
>320	Callee	name . find
>321	MemberAccess	name . find
>322	Identifier	find
>323	Identifier	name
>324	EqualityExpression	( pos = name . find ( '.' ) ) == std 
>325	Identifier	std 
>326	AssignmentExpr	pos = name . find ( '.' )
>327	CallExpression	name . find ( '.' )
>328	ArgumentList	'.'
>329	Argument	'.'
>330	PrimaryExpression	'.'
>331	Callee	name . find
>332	MemberAccess	name . find
>333	Identifier	find
>334	Identifier	name
>335	Identifier	pos
>336	EqualityExpression	name != \"..\"
>337	PrimaryExpression	\"..\"
>338	Identifier	name
>339	EqualityExpression	name != \".\"
>340	PrimaryExpression	\".\"
>341	Identifier	name
>342	CallExpression	portable_name ( name )
>343	ArgumentList	name
>344	Argument	name
>345	Identifier	name
>346	Callee	portable_name
>347	Identifier	portable_name
>348	IdentifierDeclStatement	 
>349	IdentifierDecl	pos
>350	Identifier	pos
>351	IdentifierDeclType	std 
<9=15,14,10
<10=11
<11=13,12
<15=16
<16=17
<17=21,18
<18=19
<19=20
<21=22
<28=34,33,29
<29=30
<30=32,31
<34=35
<35=36
<36=53,37
<37=48,38
<38=40,39
<40=44,41
<41=42
<42=43
<44=45
<45=47,46
<48=50,49
<50=52,51
<53=55,54
<55=57,56
<57=58
<58=60,59
<69=75,74,70
<70=71
<71=73,72
<75=76
<76=77
<77=88,78
<78=80,79
<80=84,81
<81=82
<82=83
<84=85
<85=87,86
<88=90,89
<90=92,91
<92=93
<93=95,94
<104=110,109,105
<105=106
<106=108,107
<110=111
<111=112
<112=168,113
<113=163,114
<114=153,115
<115=141,116
<116=129,117
<117=121,118
<118=120,119
<121=123,122
<123=125,124
<125=126
<126=128,127
<129=131,130
<131=140,132
<132=134,133
<134=136,135
<136=137
<137=139,138
<141=143,142
<143=152,144
<144=146,145
<146=148,147
<148=149
<149=151,150
<153=155,154
<155=159,156
<156=157
<157=158
<159=160
<160=162,161
<163=165,164
<165=167,166
<168=170,169
<170=172,171
<172=173
<173=175,174
<189=195,194,190
<190=191
<191=193,192
<195=196
<196=197
<197=231,198
<198=228,199
<199=225,200
<200=219,201
<201=213,202
<202=208,203
<203=205,204
<205=207,206
<208=210,209
<210=212,211
<213=217,214
<214=215
<215=216
<217=218
<219=223,220
<220=221
<221=222
<223=224
<225=227,226
<228=230,229
<231=233,232
<233=235,234
<235=236
<236=238,237
<247=253,252,248
<248=249
<249=251,250
<253=254
<254=255
<255=277,256
<256=274,257
<257=268,258
<258=260,259
<260=264,261
<261=262
<262=263
<264=265
<265=267,266
<268=272,269
<269=270
<270=271
<272=273
<274=276,275
<277=279,278
<287=293,292,288
<288=289
<289=291,290
<293=348,294
<294=295
<295=342,296
<296=339,297
<297=336,298
<298=324,299
<299=310,300
<300=307,301
<301=303,302
<303=304
<304=306,305
<307=309,308
<310=312,311
<312=320,313
<313=318,314
<314=315
<315=317,316
<318=319
<320=321
<321=323,322
<324=326,325
<326=335,327
<327=331,328
<328=329
<329=330
<331=332
<332=334,333
<336=338,337
<339=341,340
<342=346,343
<343=344
<344=345
<346=347
<348=349
<349=351,350
