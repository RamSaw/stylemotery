>3	FunctionDef	main (int argc , char * argv [ ])
>4	ParameterList	int argc , char * argv [ ]
>5	Parameter	 
>6	Identifier	argv
>7	ParameterType	char * [ ]
>8	Parameter	 
>9	Identifier	argc
>10	ParameterType	int
>11	ReturnType	int
>12	CompoundStatement	 
>13	ForStatement	for ( ; ; )
>14	CompoundStatement	 
>15	ExpressionStatement	 
>16	AssignmentExpr	name = name . stem ( )
>17	CallExpression	name . stem ( )
>18	ArgumentList	 
>19	Callee	name . stem
>20	MemberAccess	name . stem
>21	Identifier	stem
>22	Identifier	name
>23	Identifier	name
>24	IfStatement	if ( name . stem ( ) . empty ( ) || name . extension ( ) . empty ( ) )
>25	ReturnStatement	 
>26	PrimaryExpression	0
>27	Condition	 
>28	OrExpression	name . stem ( ) . empty ( ) || name . extension ( ) . empty ( )
>29	CallExpression	name . extension ( ) . empty ( )
>30	ArgumentList	 
>31	Callee	name . extension ( ) . empty
>32	MemberAccess	name . extension ( ) . empty
>33	Identifier	empty
>34	CallExpression	name . extension ( )
>35	ArgumentList	 
>36	Callee	name . extension
>37	MemberAccess	name . extension
>38	Identifier	extension
>39	Identifier	name
>40	CallExpression	name . stem ( ) . empty ( )
>41	ArgumentList	 
>42	Callee	name . stem ( ) . empty
>43	MemberAccess	name . stem ( ) . empty
>44	Identifier	empty
>45	CallExpression	name . stem ( )
>46	ArgumentList	 
>47	Callee	name . stem
>48	MemberAccess	name . stem
>49	Identifier	stem
>50	Identifier	name
>51	ExpressionStatement	 
>52	ShiftExpression	std 
>53	ShiftExpression	\"filename \" << name << \" has stem \" << name . stem ( ) << \" and extension \" << name . extension ( ) << \"\n\"\
>54	ShiftExpression	name << \" has stem \" << name . stem ( ) << \" and extension \" << name . extension ( ) << \"\n\"
>55	ShiftExpression	\" has stem \" << name . stem ( ) << \" and extension \" << name . extension ( ) << \"\n\"
>56	ShiftExpression	name . stem ( ) << \" and extension \" << name . extension ( ) << \"\n\"
>57	ShiftExpression	\" and extension \" << name . extension ( ) << \"\n\"
>58	ShiftExpression	name . extension ( ) << \"\n\"
>59	PrimaryExpression	\"\n\"
>60	CallExpression	name . extension ( )
>61	ArgumentList	 
>62	Callee	name . extension
>63	MemberAccess	name . extension
>64	Identifier	extension
>65	Identifier	name
>66	PrimaryExpression	\" and extension \"
>67	CallExpression	name . stem ( )
>68	ArgumentList	 
>69	Callee	name . stem
>70	MemberAccess	name . stem
>71	Identifier	stem
>72	Identifier	name
>73	PrimaryExpression	\" has stem \"
>74	Identifier	name
>75	PrimaryExpression	\"filename \"
>76	Identifier	std 
>77	IdentifierDeclStatement	 
>78	IdentifierDecl	name ( p . filename ( ) )
>79	CallExpression	p . filename ( )
>80	ArgumentList	 
>81	Callee	p . filename
>82	MemberAccess	p . filename
>83	Identifier	filename
>84	Identifier	p
>85	Identifier	name
>86	IdentifierDeclType	boost 
>87	IdentifierDecl	p ( argv [ 1 ] )
>88	ArrayIndexing	argv [ 1 ]
>89	PrimaryExpression	1
>90	Identifier	argv
>91	Identifier	p
>92	IdentifierDeclType	boost 
>93	IfStatement	if ( argc < 2 )
>94	CompoundStatement	 
>95	ReturnStatement	 
>96	PrimaryExpression	1
>97	ExpressionStatement	 
>98	ShiftExpression	std 
>99	PrimaryExpression	\"Usage
>100	Identifier	std 
>101	Condition	 
>102	RelationalExpression	argc < 2
>103	PrimaryExpression	2
>104	Identifier	argc
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=93,77,13
<13=14
<14=51,24,15
<15=16
<16=23,17
<17=19,18
<19=20
<20=22,21
<24=27,25
<25=26
<27=28
<28=40,29
<29=31,30
<31=32
<32=34,33
<34=36,35
<36=37
<37=39,38
<40=42,41
<42=43
<43=45,44
<45=47,46
<47=48
<48=50,49
<51=52
<52=76,53
<53=75,54
<54=74,55
<55=73,56
<56=67,57
<57=66,58
<58=60,59
<60=62,61
<62=63
<63=65,64
<67=69,68
<69=70
<70=72,71
<77=87,78
<78=86,85,79
<79=81,80
<81=82
<82=84,83
<87=92,91,88
<88=90,89
<93=101,94
<94=97,95
<95=96
<97=98
<98=100,99
<101=102
<102=104,103
