>3	FunctionDef	ann_1_1_char 
>4	ParameterList	int dim , ANNpoint p , ANNpoint q
>5	Parameter	 
>6	Identifier	q
>7	ParameterType	ANNpoint
>8	Parameter	 
>9	Identifier	p
>10	ParameterType	ANNpoint
>11	Parameter	 
>12	Identifier	dim
>13	ParameterType	int
>14	ReturnType	ANNdist
>15	CompoundStatement	 
>16	ReturnStatement	 
>17	Identifier	dist
>18	Statement	 
>19	Statement	 
>20	Statement	 
>21	Statement	 
>22	Statement	 
>23	Statement	 
>24	Statement	 
>25	Statement	 
>26	Statement	 
>27	Statement	 
>28	Statement	 
>29	Statement	 
>30	Statement	 
>31	Statement	 
>32	ForStatement	for ( d = 0 ; d < dim ; d ++ )
>33	CompoundStatement	 
>34	ExpressionStatement	 
>35	AssignmentExpr	dist = ANN_SUM ( dist , ANN_POW ( diff ) )
>36	CallExpression	ANN_SUM ( dist , ANN_POW ( diff ) )
>37	ArgumentList	dist
>38	Argument	ANN_POW ( diff )
>39	CallExpression	ANN_POW ( diff )
>40	ArgumentList	diff
>41	Argument	diff
>42	Identifier	diff
>43	Callee	ANN_POW
>44	Identifier	ANN_POW
>45	Argument	dist
>46	Identifier	dist
>47	Callee	ANN_SUM
>48	Identifier	ANN_SUM
>49	Identifier	dist
>50	ExpressionStatement	 
>51	AssignmentExpr	diff = p [ d ] - q [ d ]
>52	AdditiveExpression	p [ d ] - q [ d ]
>53	ArrayIndexing	q [ d ]
>54	Identifier	d
>55	Identifier	q
>56	ArrayIndexing	p [ d ]
>57	Identifier	d
>58	Identifier	p
>59	Identifier	diff
>60	IncDecOp	 
>61	IncDec	++
>62	Identifier	d
>63	Condition	 
>64	RelationalExpression	d < dim
>65	Identifier	dim
>66	Identifier	d
>67	ForInit	 
>68	AssignmentExpr	d = 0
>69	PrimaryExpression	0
>70	Identifier	d
>71	ExpressionStatement	 
>72	AssignmentExpr	dist = 0
>73	PrimaryExpression	0
>74	Identifier	dist
>75	IdentifierDeclStatement	 
>76	IdentifierDecl	dist
>77	Identifier	dist
>78	IdentifierDeclType	ANNcoord
>79	Statement	 
>80	IdentifierDeclStatement	 
>81	IdentifierDecl	diff
>82	Identifier	diff
>83	IdentifierDeclType	ANNcoord
>84	Statement	 
>85	IdentifierDeclStatement	 
>86	IdentifierDecl	d
>87	Identifier	d
>88	IdentifierDeclType	int
>89	Statement	 
>104	FunctionDef	ann_1_1_char 
>105	ParameterList	ANNpoint pt , int dim , std 
>106	Parameter	 
>107	Identifier	out
>108	ParameterType	std 
>109	Parameter	 
>110	Identifier	dim
>111	ParameterType	int
>112	Parameter	 
>113	Identifier	pt
>114	ParameterType	ANNpoint
>115	ReturnType	void
>116	CompoundStatement	 
>117	ForStatement	for ( int j = 0 ; j < dim ; j ++ )
>118	CompoundStatement	 
>119	IfStatement	if ( j < dim - 1 )
>120	ExpressionStatement	 
>121	ShiftExpression	out << \" \"
>122	PrimaryExpression	\" \"
>123	Identifier	out
>124	Condition	 
>125	RelationalExpression	j < dim - 1
>126	AdditiveExpression	dim - 1
>127	PrimaryExpression	1
>128	Identifier	dim
>129	Identifier	j
>130	ExpressionStatement	 
>131	ShiftExpression	out << pt [ j ]
>132	ArrayIndexing	pt [ j ]
>133	Identifier	j
>134	Identifier	pt
>135	Identifier	out
>136	IncDecOp	 
>137	IncDec	++
>138	Identifier	j
>139	Condition	 
>140	RelationalExpression	j < dim
>141	Identifier	dim
>142	Identifier	j
>143	ForInit	 
>144	IdentifierDeclStatement	int j = 0 ;
>145	IdentifierDecl	j = 0
>146	AssignmentExpr	j = 0
>147	PrimaryExpression	0
>148	Identifier	j
>149	Identifier	j
>150	IdentifierDeclType	int
>158	FunctionDef	ann_1_1_char 
>159	ParameterList	int dim , ANNcoord c
>160	Parameter	 
>161	Identifier	c
>162	ParameterType	ANNcoord
>163	Parameter	 
>164	Identifier	dim
>165	ParameterType	int
>166	ReturnType	ANNpoint
>167	CompoundStatement	 
>168	ReturnStatement	 
>169	Identifier	p
>170	ForStatement	for ( int i = 0 ; i < dim ; i ++ )
>171	ExpressionStatement	 
>172	AssignmentExpr	p [ i ] = c
>173	Identifier	c
>174	ArrayIndexing	p [ i ]
>175	Identifier	i
>176	Identifier	p
>177	IncDecOp	 
>178	IncDec	++
>179	Identifier	i
>180	Condition	 
>181	RelationalExpression	i < dim
>182	Identifier	dim
>183	Identifier	i
>184	ForInit	 
>185	IdentifierDeclStatement	int i = 0 ;
>186	IdentifierDecl	i = 0
>187	AssignmentExpr	i = 0
>188	PrimaryExpression	0
>189	Identifier	i
>190	Identifier	i
>191	IdentifierDeclType	int
>192	IdentifierDeclStatement	 
>193	IdentifierDecl	p = new ANNcoord [ dim ]
>194	AssignmentExpr	p = new ANNcoord [ dim ]
>195	Identifier	dim
>196	Identifier	dim
>197	Identifier	p
>198	IdentifierDeclType	ANNpoint
>208	FunctionDef	ann_1_1_char 
>209	ParameterList	int n , int dim
>210	Parameter	 
>211	Identifier	dim
>212	ParameterType	int
>213	Parameter	 
>214	Identifier	n
>215	ParameterType	int
>216	ReturnType	ANNpointArray
>217	CompoundStatement	 
>218	ReturnStatement	 
>219	Identifier	pa
>220	ForStatement	for ( int i = 0 ; i < n ; i ++ )
>221	CompoundStatement	 
>222	ExpressionStatement	 
>223	AssignmentExpr	pa [ i ] = & ( p [ i * dim ] )
>224	UnaryOp	& ( p [ i * dim ] )
>225	ArrayIndexing	p [ i * dim ]
>226	MultiplicativeExpression	i * dim
>227	Identifier	dim
>228	Identifier	i
>229	Identifier	p
>230	UnaryOperator	&
>231	ArrayIndexing	pa [ i ]
>232	Identifier	i
>233	Identifier	pa
>234	IncDecOp	 
>235	IncDec	++
>236	Identifier	i
>237	Condition	 
>238	RelationalExpression	i < n
>239	Identifier	n
>240	Identifier	i
>241	ForInit	 
>242	IdentifierDeclStatement	int i = 0 ;
>243	IdentifierDecl	i = 0
>244	AssignmentExpr	i = 0
>245	PrimaryExpression	0
>246	Identifier	i
>247	Identifier	i
>248	IdentifierDeclType	int
>249	IdentifierDeclStatement	 
>250	IdentifierDecl	p = new ANNcoord [ n * dim ]
>251	AssignmentExpr	p = new ANNcoord [ n * dim ]
>252	MultiplicativeExpression	n * dim
>253	Identifier	dim
>254	Identifier	n
>255	Identifier	p
>256	Identifier	p
>257	IdentifierDeclType	ANNpoint
>258	IdentifierDeclStatement	 
>259	IdentifierDecl	pa = new ANNpoint [ n ]
>260	AssignmentExpr	pa = new ANNpoint [ n ]
>261	Identifier	n
>262	Identifier	n
>263	Identifier	pa
>264	IdentifierDeclType	ANNpointArray
>278	FunctionDef	ann_1_1_char 
>279	ParameterList	ANNpoint & p
>280	Parameter	 
>281	Identifier	p
>282	ParameterType	ANNpoint &
>283	ReturnType	void
>284	CompoundStatement	 
>285	ExpressionStatement	 
>286	AssignmentExpr	p = NULL
>287	Identifier	NULL
>288	Identifier	p
>289	ExpressionStatement	 
>290	Identifier	p
>291	Statement	 
>292	Statement	 
>293	Statement	 
>299	FunctionDef	ann_1_1_char 
>300	ParameterList	ANNpointArray & pa
>301	Parameter	 
>302	Identifier	pa
>303	ParameterType	ANNpointArray &
>304	ReturnType	void
>305	CompoundStatement	 
>306	ExpressionStatement	 
>307	AssignmentExpr	pa = NULL
>308	Identifier	NULL
>309	Identifier	pa
>310	ExpressionStatement	 
>311	Identifier	pa
>312	Statement	 
>313	Statement	 
>314	Statement	 
>315	ExpressionStatement	 
>316	ArrayIndexing	pa [ 0 ]
>317	PrimaryExpression	0
>318	Identifier	pa
>319	Statement	 
>320	Statement	 
>321	Statement	 
>327	FunctionDef	ann_1_1_char 
>328	ParameterList	int dim , ANNpoint source
>329	Parameter	 
>330	Identifier	source
>331	ParameterType	ANNpoint
>332	Parameter	 
>333	Identifier	dim
>334	ParameterType	int
>335	ReturnType	ANNpoint
>336	CompoundStatement	 
>337	ReturnStatement	 
>338	Identifier	p
>339	ForStatement	for ( int i = 0 ; i < dim ; i ++ )
>340	ExpressionStatement	 
>341	AssignmentExpr	p [ i ] = source [ i ]
>342	ArrayIndexing	source [ i ]
>343	Identifier	i
>344	Identifier	source
>345	ArrayIndexing	p [ i ]
>346	Identifier	i
>347	Identifier	p
>348	IncDecOp	 
>349	IncDec	++
>350	Identifier	i
>351	Condition	 
>352	RelationalExpression	i < dim
>353	Identifier	dim
>354	Identifier	i
>355	ForInit	 
>356	IdentifierDeclStatement	int i = 0 ;
>357	IdentifierDecl	i = 0
>358	AssignmentExpr	i = 0
>359	PrimaryExpression	0
>360	Identifier	i
>361	Identifier	i
>362	IdentifierDeclType	int
>363	IdentifierDeclStatement	 
>364	IdentifierDecl	p = new ANNcoord [ dim ]
>365	AssignmentExpr	p = new ANNcoord [ dim ]
>366	Identifier	dim
>367	Identifier	dim
>368	Identifier	p
>369	IdentifierDeclType	ANNpoint
>380	FunctionDef	ann_1_1_char 
>381	ParameterList	int dim , ANNorthRect & dest , const ANNorthRect & source
>382	Parameter	 
>383	Identifier	source
>384	ParameterType	const ANNorthRect &
>385	Parameter	 
>386	Identifier	dest
>387	ParameterType	ANNorthRect &
>388	Parameter	 
>389	Identifier	dim
>390	ParameterType	int
>391	ReturnType	void
>392	CompoundStatement	 
>393	ForStatement	for ( int i = 0 ; i < dim ; i ++ )
>394	CompoundStatement	 
>395	ExpressionStatement	 
>396	AssignmentExpr	dest . hi [ i ] = source . hi [ i ]
>397	ArrayIndexing	source . hi [ i ]
>398	Identifier	i
>399	MemberAccess	source . hi
>400	Identifier	hi
>401	Identifier	source
>402	ArrayIndexing	dest . hi [ i ]
>403	Identifier	i
>404	MemberAccess	dest . hi
>405	Identifier	hi
>406	Identifier	dest
>407	ExpressionStatement	 
>408	AssignmentExpr	dest . lo [ i ] = source . lo [ i ]
>409	ArrayIndexing	source . lo [ i ]
>410	Identifier	i
>411	MemberAccess	source . lo
>412	Identifier	lo
>413	Identifier	source
>414	ArrayIndexing	dest . lo [ i ]
>415	Identifier	i
>416	MemberAccess	dest . lo
>417	Identifier	lo
>418	Identifier	dest
>419	IncDecOp	 
>420	IncDec	++
>421	Identifier	i
>422	Condition	 
>423	RelationalExpression	i < dim
>424	Identifier	dim
>425	Identifier	i
>426	ForInit	 
>427	IdentifierDeclStatement	int i = 0 ;
>428	IdentifierDecl	i = 0
>429	AssignmentExpr	i = 0
>430	PrimaryExpression	0
>431	Identifier	i
>432	Identifier	i
>433	IdentifierDeclType	int
>452	FunctionDef	ANNorthRect 
>453	ParameterList	int dim , ANNpoint p
>454	Parameter	 
>455	Identifier	p
>456	ParameterType	ANNpoint
>457	Parameter	 
>458	Identifier	dim
>459	ParameterType	int
>460	ReturnType	ANNbool
>461	CompoundStatement	 
>462	ReturnStatement	 
>463	Identifier	ANNtrue
>464	ForStatement	for ( int i = 0 ; i < dim ; i ++ )
>465	CompoundStatement	 
>466	IfStatement	if ( p [ i ] < lo [ i ] || p [ i ] > hi [ i ] )
>467	ReturnStatement	 
>468	Identifier	ANNfalse
>469	Condition	 
>470	OrExpression	p [ i ] < lo [ i ] || p [ i ] > hi [ i ]
>471	RelationalExpression	p [ i ] > hi [ i ]
>472	ArrayIndexing	hi [ i ]
>473	Identifier	i
>474	Identifier	hi
>475	ArrayIndexing	p [ i ]
>476	Identifier	i
>477	Identifier	p
>478	RelationalExpression	p [ i ] < lo [ i ]
>479	ArrayIndexing	lo [ i ]
>480	Identifier	i
>481	Identifier	lo
>482	ArrayIndexing	p [ i ]
>483	Identifier	i
>484	Identifier	p
>485	IncDecOp	 
>486	IncDec	++
>487	Identifier	i
>488	Condition	 
>489	RelationalExpression	i < dim
>490	Identifier	dim
>491	Identifier	i
>492	ForInit	 
>493	IdentifierDeclStatement	int i = 0 ;
>494	IdentifierDecl	i = 0
>495	AssignmentExpr	i = 0
>496	PrimaryExpression	0
>497	Identifier	i
>498	Identifier	i
>499	IdentifierDeclType	int
>514	FunctionDef	ann_1_1_char 
>515	ParameterList	char * msg , ANNerr level
>516	Parameter	 
>517	Identifier	level
>518	ParameterType	ANNerr
>519	Parameter	 
>520	Identifier	msg
>521	ParameterType	char *
>522	ReturnType	void
>523	CompoundStatement	 
>524	IfStatement	if ( level == ANNabort )
>525	ElseStatement	else
>526	CompoundStatement	 
>527	ExpressionStatement	 
>528	ShiftExpression	cerr << \"ANN
>529	ShiftExpression	\"ANN
>530	ShiftExpression	msg << \"<-------------WARNING\n\"
>531	PrimaryExpression	\"<-------------WARNING\n\"
>532	Identifier	msg
>533	PrimaryExpression	\"ANN
>534	Identifier	cerr
>535	CompoundStatement	 
>536	ExpressionStatement	 
>537	CallExpression	exit ( 1 )
>538	ArgumentList	1
>539	Argument	1
>540	PrimaryExpression	1
>541	Callee	exit
>542	Identifier	exit
>543	ExpressionStatement	 
>544	ShiftExpression	cerr << \"ANN
>545	ShiftExpression	\"ANN
>546	ShiftExpression	msg << \"<-------------ERROR\n\"
>547	PrimaryExpression	\"<-------------ERROR\n\"
>548	Identifier	msg
>549	PrimaryExpression	\"ANN
>550	Identifier	cerr
>551	Condition	 
>552	EqualityExpression	level == ANNabort
>553	Identifier	ANNabort
>554	Identifier	level
>565	FunctionDef	ann_1_1_char 
>566	ParameterList	int maxPts
>567	Parameter	 
>568	Identifier	maxPts
>569	ParameterType	int
>570	ReturnType	void
>571	CompoundStatement	 
>572	ExpressionStatement	 
>573	AssignmentExpr	ANNmaxPtsVisited = maxPts
>574	Identifier	maxPts
>575	Identifier	ANNmaxPtsVisited
<3=15,14,4
<4=11,8,5
<5=7,6
<8=10,9
<11=13,12
<15=89,85,84,80,79,75,71,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,16
<16=17
<32=67,63,60,33
<33=50,34
<34=35
<35=49,36
<36=47,37
<37=45,38
<38=39
<39=43,40
<40=41
<41=42
<43=44
<45=46
<47=48
<50=51
<51=59,52
<52=56,53
<53=55,54
<56=58,57
<60=62,61
<63=64
<64=66,65
<67=68
<68=70,69
<71=72
<72=74,73
<75=76
<76=78,77
<80=81
<81=83,82
<85=86
<86=88,87
<104=116,115,105
<105=112,109,106
<106=108,107
<109=111,110
<112=114,113
<116=117
<117=143,139,136,118
<118=130,119
<119=124,120
<120=121
<121=123,122
<124=125
<125=129,126
<126=128,127
<130=131
<131=135,132
<132=134,133
<136=138,137
<139=140
<140=142,141
<143=144
<144=145
<145=150,149,146
<146=148,147
<158=167,166,159
<159=163,160
<160=162,161
<163=165,164
<167=192,170,168
<168=169
<170=184,180,177,171
<171=172
<172=174,173
<174=176,175
<177=179,178
<180=181
<181=183,182
<184=185
<185=186
<186=191,190,187
<187=189,188
<192=193
<193=198,197,194
<194=196,195
<208=217,216,209
<209=213,210
<210=212,211
<213=215,214
<217=258,249,220,218
<218=219
<220=241,237,234,221
<221=222
<222=223
<223=231,224
<224=230,225
<225=229,226
<226=228,227
<231=233,232
<234=236,235
<237=238
<238=240,239
<241=242
<242=243
<243=248,247,244
<244=246,245
<249=250
<250=257,256,251
<251=255,252
<252=254,253
<258=259
<259=264,263,260
<260=262,261
<278=284,283,279
<279=280
<280=282,281
<284=293,292,291,289,285
<285=286
<286=288,287
<289=290
<299=305,304,300
<300=301
<301=303,302
<305=321,320,319,315,314,313,312,310,306
<306=307
<307=309,308
<310=311
<315=316
<316=318,317
<327=336,335,328
<328=332,329
<329=331,330
<332=334,333
<336=363,339,337
<337=338
<339=355,351,348,340
<340=341
<341=345,342
<342=344,343
<345=347,346
<348=350,349
<351=352
<352=354,353
<355=356
<356=357
<357=362,361,358
<358=360,359
<363=364
<364=369,368,365
<365=367,366
<380=392,391,381
<381=388,385,382
<382=384,383
<385=387,386
<388=390,389
<392=393
<393=426,422,419,394
<394=407,395
<395=396
<396=402,397
<397=399,398
<399=401,400
<402=404,403
<404=406,405
<407=408
<408=414,409
<409=411,410
<411=413,412
<414=416,415
<416=418,417
<419=421,420
<422=423
<423=425,424
<426=427
<427=428
<428=433,432,429
<429=431,430
<452=461,460,453
<453=457,454
<454=456,455
<457=459,458
<461=464,462
<462=463
<464=492,488,485,465
<465=466
<466=469,467
<467=468
<469=470
<470=478,471
<471=475,472
<472=474,473
<475=477,476
<478=482,479
<479=481,480
<482=484,483
<485=487,486
<488=489
<489=491,490
<492=493
<493=494
<494=499,498,495
<495=497,496
<514=523,522,515
<515=519,516
<516=518,517
<519=521,520
<523=524
<524=551,535,525
<525=526
<526=527
<527=528
<528=534,529
<529=533,530
<530=532,531
<535=543,536
<536=537
<537=541,538
<538=539
<539=540
<541=542
<543=544
<544=550,545
<545=549,546
<546=548,547
<551=552
<552=554,553
<565=571,570,566
<566=567
<567=569,568
<571=572
<572=573
<573=575,574
