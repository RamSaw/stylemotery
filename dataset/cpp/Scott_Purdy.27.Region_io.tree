>3	FunctionDef	Region 
>4	ParameterList	const std 
>5	Parameter	 
>6	Identifier	name
>7	ParameterType	const std 
>8	ReturnType	Output *
>9	CompoundStatement	 
>10	ReturnStatement	 
>11	PtrMemberAccess	o -> second
>12	Identifier	second
>13	Identifier	o
>14	IfStatement	if ( o == outputs_ . end ( ) )
>15	ReturnStatement	 
>16	Identifier	NULL
>17	Condition	 
>18	EqualityExpression	o == outputs_ . end ( )
>19	CallExpression	outputs_ . end ( )
>20	ArgumentList	 
>21	Callee	outputs_ . end
>22	MemberAccess	outputs_ . end
>23	Identifier	end
>24	Identifier	outputs_
>25	Identifier	o
>26	IdentifierDeclStatement	 
>27	IdentifierDecl	o = outputs_ . find ( name )
>28	AssignmentExpr	o = outputs_ . find ( name )
>29	CallExpression	outputs_ . find ( name )
>30	ArgumentList	name
>31	Argument	name
>32	Identifier	name
>33	Callee	outputs_ . find
>34	MemberAccess	outputs_ . find
>35	Identifier	find
>36	Identifier	outputs_
>37	Identifier	o
>38	Identifier	o
>39	IdentifierDeclType	OutputMap 
>51	FunctionDef	Region 
>52	ParameterList	const std 
>53	Parameter	 
>54	Identifier	name
>55	ParameterType	const std 
>56	ReturnType	Input *
>57	CompoundStatement	 
>58	ReturnStatement	 
>59	PtrMemberAccess	i -> second
>60	Identifier	second
>61	Identifier	i
>62	IfStatement	if ( i == inputs_ . end ( ) )
>63	ReturnStatement	 
>64	Identifier	NULL
>65	Condition	 
>66	EqualityExpression	i == inputs_ . end ( )
>67	CallExpression	inputs_ . end ( )
>68	ArgumentList	 
>69	Callee	inputs_ . end
>70	MemberAccess	inputs_ . end
>71	Identifier	end
>72	Identifier	inputs_
>73	Identifier	i
>74	IdentifierDeclStatement	 
>75	IdentifierDecl	i = inputs_ . find ( name )
>76	AssignmentExpr	i = inputs_ . find ( name )
>77	CallExpression	inputs_ . find ( name )
>78	ArgumentList	name
>79	Argument	name
>80	Identifier	name
>81	Callee	inputs_ . find
>82	MemberAccess	inputs_ . find
>83	Identifier	find
>84	Identifier	inputs_
>85	Identifier	i
>86	Identifier	i
>87	IdentifierDeclType	InputMap 
>99	FunctionDef	Region 
>100	ParameterList	 
>101	ReturnType	const std 
>102	CompoundStatement	 
>103	ReturnStatement	 
>104	Identifier	inputs_
>109	FunctionDef	Region 
>110	ParameterList	 
>111	ReturnType	const std 
>112	CompoundStatement	 
>113	ReturnStatement	 
>114	Identifier	outputs_
>119	FunctionDef	Region 
>120	ParameterList	const std 
>121	Parameter	 
>122	Identifier	outputName
>123	ParameterType	const std 
>124	ReturnType	size_t
>125	CompoundStatement	 
>126	ReturnStatement	 
>127	CallExpression	oi -> second -> getData ( ) . getCount ( )
>128	ArgumentList	 
>129	Callee	oi -> second -> getData ( ) . getCount
>130	MemberAccess	oi -> second -> getData ( ) . getCount
>131	Identifier	getCount
>132	CallExpression	oi -> second -> getData ( )
>133	ArgumentList	 
>134	Callee	oi -> second -> getData
>135	PtrMemberAccess	oi -> second -> getData
>136	Identifier	getData
>137	PtrMemberAccess	oi -> second
>138	Identifier	second
>139	Identifier	oi
>140	IfStatement	if ( oi == outputs_ . end ( ) )
>141	ExpressionStatement	 
>142	ShiftExpression	NTA_THROW << \"getOutputSize -- unknown output '\" << outputName << \"' on region \" << getName ( )
>143	ShiftExpression	\"getOutputSize -- unknown output '\" << outputName << \"' on region \" << getName ( )
>144	ShiftExpression	outputName << \"' on region \" << getName ( )
>145	ShiftExpression	\"' on region \" << getName ( )
>146	CallExpression	getName ( )
>147	ArgumentList	 
>148	Callee	getName
>149	Identifier	getName
>150	PrimaryExpression	\"' on region \"
>151	Identifier	outputName
>152	PrimaryExpression	\"getOutputSize -- unknown output '\"
>153	Identifier	NTA_THROW
>154	Condition	 
>155	EqualityExpression	oi == outputs_ . end ( )
>156	CallExpression	outputs_ . end ( )
>157	ArgumentList	 
>158	Callee	outputs_ . end
>159	MemberAccess	outputs_ . end
>160	Identifier	end
>161	Identifier	outputs_
>162	Identifier	oi
>163	IdentifierDeclStatement	 
>164	IdentifierDecl	oi = outputs_ . find ( outputName )
>165	AssignmentExpr	oi = outputs_ . find ( outputName )
>166	CallExpression	outputs_ . find ( outputName )
>167	ArgumentList	outputName
>168	Argument	outputName
>169	Identifier	outputName
>170	Callee	outputs_ . find
>171	MemberAccess	outputs_ . find
>172	Identifier	find
>173	Identifier	outputs_
>174	Identifier	oi
>175	Identifier	oi
>176	IdentifierDeclType	OutputMap 
>191	FunctionDef	Region 
>192	ParameterList	const std 
>193	Parameter	 
>194	Identifier	inputName
>195	ParameterType	const std 
>196	ReturnType	size_t
>197	CompoundStatement	 
>198	ReturnStatement	 
>199	CallExpression	ii -> second -> getData ( ) . getCount ( )
>200	ArgumentList	 
>201	Callee	ii -> second -> getData ( ) . getCount
>202	MemberAccess	ii -> second -> getData ( ) . getCount
>203	Identifier	getCount
>204	CallExpression	ii -> second -> getData ( )
>205	ArgumentList	 
>206	Callee	ii -> second -> getData
>207	PtrMemberAccess	ii -> second -> getData
>208	Identifier	getData
>209	PtrMemberAccess	ii -> second
>210	Identifier	second
>211	Identifier	ii
>212	IfStatement	if ( ii == inputs_ . end ( ) )
>213	ExpressionStatement	 
>214	ShiftExpression	NTA_THROW << \"getInputSize -- unknown input '\" << inputName << \"' on region \" << getName ( )
>215	ShiftExpression	\"getInputSize -- unknown input '\" << inputName << \"' on region \" << getName ( )
>216	ShiftExpression	inputName << \"' on region \" << getName ( )
>217	ShiftExpression	\"' on region \" << getName ( )
>218	CallExpression	getName ( )
>219	ArgumentList	 
>220	Callee	getName
>221	Identifier	getName
>222	PrimaryExpression	\"' on region \"
>223	Identifier	inputName
>224	PrimaryExpression	\"getInputSize -- unknown input '\"
>225	Identifier	NTA_THROW
>226	Condition	 
>227	EqualityExpression	ii == inputs_ . end ( )
>228	CallExpression	inputs_ . end ( )
>229	ArgumentList	 
>230	Callee	inputs_ . end
>231	MemberAccess	inputs_ . end
>232	Identifier	end
>233	Identifier	inputs_
>234	Identifier	ii
>235	IdentifierDeclStatement	 
>236	IdentifierDecl	ii = inputs_ . find ( inputName )
>237	AssignmentExpr	ii = inputs_ . find ( inputName )
>238	CallExpression	inputs_ . find ( inputName )
>239	ArgumentList	inputName
>240	Argument	inputName
>241	Identifier	inputName
>242	Callee	inputs_ . find
>243	MemberAccess	inputs_ . find
>244	Identifier	find
>245	Identifier	inputs_
>246	Identifier	ii
>247	Identifier	ii
>248	IdentifierDeclType	InputMap 
>263	FunctionDef	Region 
>264	ParameterList	const std 
>265	Parameter	 
>266	Identifier	outputName
>267	ParameterType	const std 
>268	ReturnType	ArrayRef
>269	CompoundStatement	 
>270	ReturnStatement	 
>271	Identifier	a
>272	ExpressionStatement	 
>273	CallExpression	a . setBuffer ( data . getBuffer ( ) , data . getCount ( ) )
>274	ArgumentList	data . getBuffer ( )
>275	Argument	data . getCount ( )
>276	CallExpression	data . getCount ( )
>277	ArgumentList	 
>278	Callee	data . getCount
>279	MemberAccess	data . getCount
>280	Identifier	getCount
>281	Identifier	data
>282	Argument	data . getBuffer ( )
>283	CallExpression	data . getBuffer ( )
>284	ArgumentList	 
>285	Callee	data . getBuffer
>286	MemberAccess	data . getBuffer
>287	Identifier	getBuffer
>288	Identifier	data
>289	Callee	a . setBuffer
>290	MemberAccess	a . setBuffer
>291	Identifier	setBuffer
>292	Identifier	a
>293	IdentifierDeclStatement	 
>294	IdentifierDecl	a ( data . getType ( ) )
>295	CallExpression	data . getType ( )
>296	ArgumentList	 
>297	Callee	data . getType
>298	MemberAccess	data . getType
>299	Identifier	getType
>300	Identifier	data
>301	Identifier	a
>302	IdentifierDeclType	ArrayRef
>303	IdentifierDeclStatement	 
>304	IdentifierDecl	& data = oi -> second -> getData ( )
>305	AssignmentExpr	& data = oi -> second -> getData ( )
>306	CallExpression	oi -> second -> getData ( )
>307	ArgumentList	 
>308	Callee	oi -> second -> getData
>309	PtrMemberAccess	oi -> second -> getData
>310	Identifier	getData
>311	PtrMemberAccess	oi -> second
>312	Identifier	second
>313	Identifier	oi
>314	Identifier	data
>315	Identifier	data
>316	IdentifierDeclType	const Array &
>317	IfStatement	if ( oi == outputs_ . end ( ) )
>318	ExpressionStatement	 
>319	ShiftExpression	NTA_THROW << \"getOutputData -- unknown output '\" << outputName << \"' on region \" << getName ( )
>320	ShiftExpression	\"getOutputData -- unknown output '\" << outputName << \"' on region \" << getName ( )
>321	ShiftExpression	outputName << \"' on region \" << getName ( )
>322	ShiftExpression	\"' on region \" << getName ( )
>323	CallExpression	getName ( )
>324	ArgumentList	 
>325	Callee	getName
>326	Identifier	getName
>327	PrimaryExpression	\"' on region \"
>328	Identifier	outputName
>329	PrimaryExpression	\"getOutputData -- unknown output '\"
>330	Identifier	NTA_THROW
>331	Condition	 
>332	EqualityExpression	oi == outputs_ . end ( )
>333	CallExpression	outputs_ . end ( )
>334	ArgumentList	 
>335	Callee	outputs_ . end
>336	MemberAccess	outputs_ . end
>337	Identifier	end
>338	Identifier	outputs_
>339	Identifier	oi
>340	IdentifierDeclStatement	 
>341	IdentifierDecl	oi = outputs_ . find ( outputName )
>342	AssignmentExpr	oi = outputs_ . find ( outputName )
>343	CallExpression	outputs_ . find ( outputName )
>344	ArgumentList	outputName
>345	Argument	outputName
>346	Identifier	outputName
>347	Callee	outputs_ . find
>348	MemberAccess	outputs_ . find
>349	Identifier	find
>350	Identifier	outputs_
>351	Identifier	oi
>352	Identifier	oi
>353	IdentifierDeclType	OutputMap 
>371	FunctionDef	Region 
>372	ParameterList	const std 
>373	Parameter	 
>374	Identifier	inputName
>375	ParameterType	const std 
>376	ReturnType	ArrayRef
>377	CompoundStatement	 
>378	ReturnStatement	 
>379	Identifier	a
>380	ExpressionStatement	 
>381	CallExpression	a . setBuffer ( data . getBuffer ( ) , data . getCount ( ) )
>382	ArgumentList	data . getBuffer ( )
>383	Argument	data . getCount ( )
>384	CallExpression	data . getCount ( )
>385	ArgumentList	 
>386	Callee	data . getCount
>387	MemberAccess	data . getCount
>388	Identifier	getCount
>389	Identifier	data
>390	Argument	data . getBuffer ( )
>391	CallExpression	data . getBuffer ( )
>392	ArgumentList	 
>393	Callee	data . getBuffer
>394	MemberAccess	data . getBuffer
>395	Identifier	getBuffer
>396	Identifier	data
>397	Callee	a . setBuffer
>398	MemberAccess	a . setBuffer
>399	Identifier	setBuffer
>400	Identifier	a
>401	IdentifierDeclStatement	 
>402	IdentifierDecl	a ( data . getType ( ) )
>403	CallExpression	data . getType ( )
>404	ArgumentList	 
>405	Callee	data . getType
>406	MemberAccess	data . getType
>407	Identifier	getType
>408	Identifier	data
>409	Identifier	a
>410	IdentifierDeclType	ArrayRef
>411	IdentifierDeclStatement	 
>412	IdentifierDecl	& data = ii -> second -> getData ( )
>413	AssignmentExpr	& data = ii -> second -> getData ( )
>414	CallExpression	ii -> second -> getData ( )
>415	ArgumentList	 
>416	Callee	ii -> second -> getData
>417	PtrMemberAccess	ii -> second -> getData
>418	Identifier	getData
>419	PtrMemberAccess	ii -> second
>420	Identifier	second
>421	Identifier	ii
>422	Identifier	data
>423	Identifier	data
>424	IdentifierDeclType	const Array &
>425	IfStatement	if ( ii == inputs_ . end ( ) )
>426	ExpressionStatement	 
>427	ShiftExpression	NTA_THROW << \"getInput -- unknown input '\" << inputName << \"' on region \" << getName ( )
>428	ShiftExpression	\"getInput -- unknown input '\" << inputName << \"' on region \" << getName ( )
>429	ShiftExpression	inputName << \"' on region \" << getName ( )
>430	ShiftExpression	\"' on region \" << getName ( )
>431	CallExpression	getName ( )
>432	ArgumentList	 
>433	Callee	getName
>434	Identifier	getName
>435	PrimaryExpression	\"' on region \"
>436	Identifier	inputName
>437	PrimaryExpression	\"getInput -- unknown input '\"
>438	Identifier	NTA_THROW
>439	Condition	 
>440	EqualityExpression	ii == inputs_ . end ( )
>441	CallExpression	inputs_ . end ( )
>442	ArgumentList	 
>443	Callee	inputs_ . end
>444	MemberAccess	inputs_ . end
>445	Identifier	end
>446	Identifier	inputs_
>447	Identifier	ii
>448	IdentifierDeclStatement	 
>449	IdentifierDecl	ii = inputs_ . find ( inputName )
>450	AssignmentExpr	ii = inputs_ . find ( inputName )
>451	CallExpression	inputs_ . find ( inputName )
>452	ArgumentList	inputName
>453	Argument	inputName
>454	Identifier	inputName
>455	Callee	inputs_ . find
>456	MemberAccess	inputs_ . find
>457	Identifier	find
>458	Identifier	inputs_
>459	Identifier	ii
>460	Identifier	ii
>461	IdentifierDeclType	InputMap 
>479	FunctionDef	Region 
>480	ParameterList	 
>481	ReturnType	void
>482	CompoundStatement	 
>483	ForStatement	for ( InputMap 
>484	CompoundStatement	 
>485	ExpressionStatement	 
>486	CallExpression	i -> second -> prepare ( )
>487	ArgumentList	 
>488	Callee	i -> second -> prepare
>489	PtrMemberAccess	i -> second -> prepare
>490	Identifier	prepare
>491	PtrMemberAccess	i -> second
>492	Identifier	second
>493	Identifier	i
>494	IncDecOp	 
>495	IncDec	++
>496	Identifier	i
>497	Condition	 
>498	EqualityExpression	i != inputs_ . end ( )
>499	CallExpression	inputs_ . end ( )
>500	ArgumentList	 
>501	Callee	inputs_ . end
>502	MemberAccess	inputs_ . end
>503	Identifier	end
>504	Identifier	inputs_
>505	Identifier	i
>506	ForInit	 
>507	IdentifierDeclStatement	InputMap 
>508	IdentifierDecl	i = inputs_ . begin ( )
>509	AssignmentExpr	i = inputs_ . begin ( )
>510	CallExpression	inputs_ . begin ( )
>511	ArgumentList	 
>512	Callee	inputs_ . begin
>513	MemberAccess	inputs_ . begin
>514	Identifier	begin
>515	Identifier	inputs_
>516	Identifier	i
>517	Identifier	i
>518	IdentifierDeclType	InputMap 
<3=9,8,4
<4=5
<5=7,6
<9=26,14,10
<10=11
<11=13,12
<14=17,15
<15=16
<17=18
<18=25,19
<19=21,20
<21=22
<22=24,23
<26=27
<27=39,38,28
<28=37,29
<29=33,30
<30=31
<31=32
<33=34
<34=36,35
<51=57,56,52
<52=53
<53=55,54
<57=74,62,58
<58=59
<59=61,60
<62=65,63
<63=64
<65=66
<66=73,67
<67=69,68
<69=70
<70=72,71
<74=75
<75=87,86,76
<76=85,77
<77=81,78
<78=79
<79=80
<81=82
<82=84,83
<99=102,101,100
<102=103
<103=104
<109=112,111,110
<112=113
<113=114
<119=125,124,120
<120=121
<121=123,122
<125=163,140,126
<126=127
<127=129,128
<129=130
<130=132,131
<132=134,133
<134=135
<135=137,136
<137=139,138
<140=154,141
<141=142
<142=153,143
<143=152,144
<144=151,145
<145=150,146
<146=148,147
<148=149
<154=155
<155=162,156
<156=158,157
<158=159
<159=161,160
<163=164
<164=176,175,165
<165=174,166
<166=170,167
<167=168
<168=169
<170=171
<171=173,172
<191=197,196,192
<192=193
<193=195,194
<197=235,212,198
<198=199
<199=201,200
<201=202
<202=204,203
<204=206,205
<206=207
<207=209,208
<209=211,210
<212=226,213
<213=214
<214=225,215
<215=224,216
<216=223,217
<217=222,218
<218=220,219
<220=221
<226=227
<227=234,228
<228=230,229
<230=231
<231=233,232
<235=236
<236=248,247,237
<237=246,238
<238=242,239
<239=240
<240=241
<242=243
<243=245,244
<263=269,268,264
<264=265
<265=267,266
<269=340,317,303,293,272,270
<270=271
<272=273
<273=289,274
<274=282,275
<275=276
<276=278,277
<278=279
<279=281,280
<282=283
<283=285,284
<285=286
<286=288,287
<289=290
<290=292,291
<293=294
<294=302,301,295
<295=297,296
<297=298
<298=300,299
<303=304
<304=316,315,305
<305=314,306
<306=308,307
<308=309
<309=311,310
<311=313,312
<317=331,318
<318=319
<319=330,320
<320=329,321
<321=328,322
<322=327,323
<323=325,324
<325=326
<331=332
<332=339,333
<333=335,334
<335=336
<336=338,337
<340=341
<341=353,352,342
<342=351,343
<343=347,344
<344=345
<345=346
<347=348
<348=350,349
<371=377,376,372
<372=373
<373=375,374
<377=448,425,411,401,380,378
<378=379
<380=381
<381=397,382
<382=390,383
<383=384
<384=386,385
<386=387
<387=389,388
<390=391
<391=393,392
<393=394
<394=396,395
<397=398
<398=400,399
<401=402
<402=410,409,403
<403=405,404
<405=406
<406=408,407
<411=412
<412=424,423,413
<413=422,414
<414=416,415
<416=417
<417=419,418
<419=421,420
<425=439,426
<426=427
<427=438,428
<428=437,429
<429=436,430
<430=435,431
<431=433,432
<433=434
<439=440
<440=447,441
<441=443,442
<443=444
<444=446,445
<448=449
<449=461,460,450
<450=459,451
<451=455,452
<452=453
<453=454
<455=456
<456=458,457
<479=482,481,480
<482=483
<483=506,497,494,484
<484=485
<485=486
<486=488,487
<488=489
<489=491,490
<491=493,492
<494=496,495
<497=498
<498=505,499
<499=501,500
<501=502
<502=504,503
<506=507
<507=508
<508=518,517,509
<509=516,510
<510=512,511
<512=513
<513=515,514
