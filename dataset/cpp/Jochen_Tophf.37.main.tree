>9	FunctionDef	extract (Options & options , osmium 
>10	ParameterList	Options & options , osmium 
>11	Parameter	 
>12	Identifier	point_in_time
>13	ParameterType	osmium 
>14	Parameter	 
>15	Identifier	end
>16	ParameterType	osmium 
>17	Parameter	 
>18	Identifier	relations
>19	ParameterType	osmium 
>20	Parameter	 
>21	Identifier	begin
>22	ParameterType	osmium 
>23	Parameter	 
>24	Identifier	factory
>25	ParameterType	osmium 
>26	Parameter	 
>27	Identifier	options
>28	ParameterType	Options &
>29	ReturnType	OGREnvelope
>30	CompoundStatement	 
>31	ReturnStatement	 
>32	CallExpression	geom_handler . envelope ( )
>33	ArgumentList	 
>34	Callee	geom_handler . envelope
>35	MemberAccess	geom_handler . envelope
>36	Identifier	envelope
>37	Identifier	geom_handler
>38	ExpressionStatement	 
>39	Statement	 
>40	Statement	 
>41	CompoundStatement	 
>42	ExpressionStatement	 
>43	CallExpression	osmium 
>44	ArgumentList	buffer
>45	Argument	geom_handler
>46	Identifier	geom_handler
>47	Argument	buffer
>48	Identifier	buffer
>49	Callee	osmium 
>50	Identifier	osmium 
>51	Statement	 
>52	Statement	 
>53	Statement	 
>54	Statement	 
>55	Statement	 
>56	Statement	 
>57	Statement	 
>58	Statement	 
>59	Statement	 
>60	Statement	 
>61	Statement	 
>62	Statement	 
>63	Statement	 
>64	Statement	 
>65	Statement	 
>66	Statement	 
>67	Statement	 
>68	Statement	 
>69	Statement	 
>70	Statement	 
>71	Statement	 
>72	Statement	 
>73	Statement	 
>74	Statement	 
>75	Statement	 
>76	Statement	 
>77	Statement	 
>78	Statement	 
>79	Statement	 
>80	Statement	 
>81	Statement	 
>82	Statement	 
>83	Statement	 
>84	Statement	 
>85	Statement	 
>86	Statement	 
>87	Statement	 
>88	Statement	 
>89	IdentifierDeclStatement	 
>90	IdentifierDecl	geom_handler ( factory , dataset , date )
>91	Expression	factory , dataset , date
>92	Expression	dataset , date
>93	Identifier	date
>94	Identifier	dataset
>95	Identifier	factory
>96	Identifier	geom_handler
>97	IdentifierDeclType	HANDLER
>98	IdentifierDeclStatement	 
>99	IdentifierDecl	dataset ( options . output_format , datasource_name , factory . proj_string ( ) , datasource_options )
>100	Expression	options . output_format , datasource_name , factory . proj_string ( ) , datasource_options
>101	Expression	datasource_name , factory . proj_string ( ) , datasource_options
>102	Expression	factory . proj_string ( ) , datasource_options
>103	Identifier	datasource_options
>104	CallExpression	factory . proj_string ( )
>105	ArgumentList	 
>106	Callee	factory . proj_string
>107	MemberAccess	factory . proj_string
>108	Identifier	proj_string
>109	Identifier	factory
>110	Identifier	datasource_name
>111	MemberAccess	options . output_format
>112	Identifier	output_format
>113	Identifier	options
>114	Identifier	dataset
>115	IdentifierDeclType	gdalcpp 
>116	IfStatement	if ( options . output_format == \"GeoJSON\" )
>117	ElseStatement	else
>118	IfStatement	if ( options . output_format == \"SQLite\" )
>119	CompoundStatement	 
>120	ExpressionStatement	 
>121	CallExpression	CPLSetConfigOption ( \"OGR_SQLITE_CACHE\" , \"512\" )
>122	ArgumentList	\"OGR_SQLITE_CACHE\"
>123	Argument	\"512\"
>124	PrimaryExpression	\"512\"
>125	Argument	\"OGR_SQLITE_CACHE\"
>126	PrimaryExpression	\"OGR_SQLITE_CACHE\"
>127	Callee	CPLSetConfigOption
>128	Identifier	CPLSetConfigOption
>129	ExpressionStatement	 
>130	CallExpression	CPLSetConfigOption ( \"OGR_SQLITE_SYNCHRONOUS\" , \"FALSE\" )
>131	ArgumentList	\"OGR_SQLITE_SYNCHRONOUS\"
>132	Argument	\"FALSE\"
>133	PrimaryExpression	\"FALSE\"
>134	Argument	\"OGR_SQLITE_SYNCHRONOUS\"
>135	PrimaryExpression	\"OGR_SQLITE_SYNCHRONOUS\"
>136	Callee	CPLSetConfigOption
>137	Identifier	CPLSetConfigOption
>138	ExpressionStatement	 
>139	CallExpression	datasource_options . push_back ( \"SPATIALITE=TRUE\" )
>140	ArgumentList	\"SPATIALITE=TRUE\"
>141	Argument	\"SPATIALITE=TRUE\"
>142	PrimaryExpression	\"SPATIALITE=TRUE\"
>143	Callee	datasource_options . push_back
>144	MemberAccess	datasource_options . push_back
>145	Identifier	push_back
>146	Identifier	datasource_options
>147	ExpressionStatement	 
>148	AssignmentExpr	datasource_name += \".db\"
>149	PrimaryExpression	\".db\"
>150	Identifier	datasource_name
>151	Condition	 
>152	EqualityExpression	options . output_format == \"SQLite\"
>153	PrimaryExpression	\"SQLite\"
>154	MemberAccess	options . output_format
>155	Identifier	output_format
>156	Identifier	options
>157	CompoundStatement	 
>158	ExpressionStatement	 
>159	AssignmentExpr	datasource_name += \".json\"
>160	PrimaryExpression	\".json\"
>161	Identifier	datasource_name
>162	Condition	 
>163	EqualityExpression	options . output_format == \"GeoJSON\"
>164	PrimaryExpression	\"GeoJSON\"
>165	MemberAccess	options . output_format
>166	Identifier	output_format
>167	Identifier	options
>168	IdentifierDeclStatement	 
>169	IdentifierDecl	datasource_name = options . output_directory + \"/\" + date
>170	AssignmentExpr	datasource_name = options . output_directory + \"/\" + date
>171	AdditiveExpression	options . output_directory + \"/\" + date
>172	AdditiveExpression	\"/\" + date
>173	Identifier	date
>174	PrimaryExpression	\"/\"
>175	MemberAccess	options . output_directory
>176	Identifier	output_directory
>177	Identifier	options
>178	Identifier	datasource_name
>179	Identifier	datasource_name
>180	IdentifierDeclType	std 
>181	IdentifierDeclStatement	 
>182	IdentifierDecl	datasource_options
>183	Identifier	datasource_options
>184	IdentifierDeclType	std 
>185	IdentifierDeclStatement	 
>186	IdentifierDecl	date = point_in_time . to_iso ( ) . substr ( 0 , 10 )
>187	AssignmentExpr	date = point_in_time . to_iso ( ) . substr ( 0 , 10 )
>188	CallExpression	point_in_time . to_iso ( ) . substr ( 0 , 10 )
>189	ArgumentList	0
>190	Argument	10
>191	PrimaryExpression	10
>192	Argument	0
>193	PrimaryExpression	0
>194	Callee	point_in_time . to_iso ( ) . substr
>195	MemberAccess	point_in_time . to_iso ( ) . substr
>196	Identifier	substr
>197	CallExpression	point_in_time . to_iso ( )
>198	ArgumentList	 
>199	Callee	point_in_time . to_iso
>200	MemberAccess	point_in_time . to_iso
>201	Identifier	to_iso
>202	Identifier	point_in_time
>203	Identifier	date
>204	Identifier	date
>205	IdentifierDeclType	std 
>206	ExpressionStatement	 
>207	ShiftExpression	options . vout << \"  Creating geometries...\n\"
>208	PrimaryExpression	\"  Creating geometries...\n\"
>209	MemberAccess	options . vout
>210	Identifier	vout
>211	Identifier	options
>212	ExpressionStatement	 
>213	CallExpression	location_handler . ignore_errors ( )
>214	ArgumentList	 
>215	Callee	location_handler . ignore_errors
>216	MemberAccess	location_handler . ignore_errors
>217	Identifier	ignore_errors
>218	Identifier	location_handler
>219	IdentifierDeclStatement	 
>220	IdentifierDecl	location_handler ( index_pos )
>221	Identifier	index_pos
>222	Identifier	location_handler
>223	IdentifierDeclType	location_handler_type
>224	IdentifierDeclStatement	 
>225	IdentifierDecl	index_pos
>226	Identifier	index_pos
>227	IdentifierDeclType	index_type
>228	ExpressionStatement	 
>229	CallExpression	collector . read_relations ( rbuffer . cbegin ( ) , rbuffer . cend ( ) )
>230	ArgumentList	rbuffer . cbegin ( )
>231	Argument	rbuffer . cend ( )
>232	CallExpression	rbuffer . cend ( )
>233	ArgumentList	 
>234	Callee	rbuffer . cend
>235	MemberAccess	rbuffer . cend
>236	Identifier	cend
>237	Identifier	rbuffer
>238	Argument	rbuffer . cbegin ( )
>239	CallExpression	rbuffer . cbegin ( )
>240	ArgumentList	 
>241	Callee	rbuffer . cbegin
>242	MemberAccess	rbuffer . cbegin
>243	Identifier	cbegin
>244	Identifier	rbuffer
>245	Callee	collector . read_relations
>246	MemberAccess	collector . read_relations
>247	Identifier	read_relations
>248	Identifier	collector
>249	ExpressionStatement	 
>250	ShiftExpression	options . vout << \"  Reading relations...\n\"
>251	PrimaryExpression	\"  Reading relations...\n\"
>252	MemberAccess	options . vout
>253	Identifier	vout
>254	Identifier	options
>255	IdentifierDeclStatement	 
>256	IdentifierDecl	collector ( assembler_config )
>257	Identifier	assembler_config
>258	Identifier	collector
>259	IdentifierDeclType	osmium 
>260	IdentifierDeclStatement	 
>261	IdentifierDecl	assembler_config
>262	Identifier	assembler_config
>263	IdentifierDeclType	osmium 
>264	CompoundStatement	 
>265	ExpressionStatement	 
>266	Statement	 
>267	CompoundStatement	 
>268	IfStatement	if ( ( ( d . end_time ( ) == 0 || d . end_time ( ) > point_in_time ) && d . start_time ( ) <= point_in_time ) && \
>269	CompoundStatement	 
>270	ExpressionStatement	 
>271	CallExpression	rbuffer . commit ( )
>272	ArgumentList	 
>273	Callee	rbuffer . commit
>274	MemberAccess	rbuffer . commit
>275	Identifier	commit
>276	Identifier	rbuffer
>277	ExpressionStatement	 
>278	CallExpression	rbuffer . add_item ( d . curr ( ) )
>279	ArgumentList	d . curr ( )
>280	Argument	d . curr ( )
>281	CallExpression	d . curr ( )
>282	ArgumentList	 
>283	Callee	d . curr
>284	MemberAccess	d . curr
>285	Identifier	curr
>286	Identifier	d
>287	Callee	rbuffer . add_item
>288	MemberAccess	rbuffer . add_item
>289	Identifier	add_item
>290	Identifier	rbuffer
>291	Condition	 
>292	AndExpression	( ( d . end_time ( ) == 0 || d . end_time ( ) > point_in_time ) && d . start_time ( ) <= point_in_time ) && \
>293	CallExpression	d . curr ( ) . visible ( )
>294	ArgumentList	 
>295	Callee	d . curr ( ) . visible
>296	MemberAccess	d . curr ( ) . visible
>297	Identifier	visible
>298	CallExpression	d . curr ( )
>299	ArgumentList	 
>300	Callee	d . curr
>301	MemberAccess	d . curr
>302	Identifier	curr
>303	Identifier	d
>304	AndExpression	( d . end_time ( ) == 0 || d . end_time ( ) > point_in_time ) && d . start_time ( ) <= point_in_time
>305	RelationalExpression	d . start_time ( ) <= point_in_time
>306	Identifier	point_in_time
>307	CallExpression	d . start_time ( )
>308	ArgumentList	 
>309	Callee	d . start_time
>310	MemberAccess	d . start_time
>311	Identifier	start_time
>312	Identifier	d
>313	OrExpression	d . end_time ( ) == 0 || d . end_time ( ) > point_in_time
>314	RelationalExpression	d . end_time ( ) > point_in_time
>315	Identifier	point_in_time
>316	CallExpression	d . end_time ( )
>317	ArgumentList	 
>318	Callee	d . end_time
>319	MemberAccess	d . end_time
>320	Identifier	end_time
>321	Identifier	d
>322	EqualityExpression	d . end_time ( ) == 0
>323	PrimaryExpression	0
>324	CallExpression	d . end_time ( )
>325	ArgumentList	 
>326	Callee	d . end_time
>327	MemberAccess	d . end_time
>328	Identifier	end_time
>329	Identifier	d
>330	Statement	 
>331	Statement	 
>332	Statement	 
>333	Statement	 
>334	Statement	 
>335	Statement	 
>336	Statement	 
>337	Statement	 
>338	Statement	 
>339	Statement	 
>340	Statement	 
>341	Statement	 
>342	Statement	 
>343	Statement	 
>344	Statement	 
>345	Statement	 
>346	Statement	 
>347	Statement	 
>348	Statement	 
>349	Statement	 
>350	Statement	 
>351	Statement	 
>352	ExpressionStatement	 
>353	AssignmentExpr	dend = diff_iterator ( end , end )
>354	CallExpression	diff_iterator ( end , end )
>355	ArgumentList	end
>356	Argument	end
>357	Identifier	end
>358	Argument	end
>359	Identifier	end
>360	Callee	diff_iterator
>361	Identifier	diff_iterator
>362	Identifier	dend
>363	Statement	 
>364	ExpressionStatement	 
>365	AssignmentExpr	dbegin = diff_iterator ( relations , end )
>366	CallExpression	diff_iterator ( relations , end )
>367	ArgumentList	relations
>368	Argument	end
>369	Identifier	end
>370	Argument	relations
>371	Identifier	relations
>372	Callee	diff_iterator
>373	Identifier	diff_iterator
>374	Identifier	dbegin
>375	Statement	 
>376	IdentifierDeclStatement	 
>377	IdentifierDecl	rbuffer ( initial_buffer_size , osmium 
>378	Expression	initial_buffer_size , osmium 
>379	Identifier	osmium 
>380	Identifier	initial_buffer_size
>381	Identifier	rbuffer
>382	IdentifierDeclType	osmium 
>383	ExpressionStatement	 
>384	ShiftExpression	options . vout << \"  Done. Filtered data needs \" << ( fbuffer . committed ( ) / ( 1024 * 1024 ) ) << \" \
>385	ShiftExpression	\"  Done. Filtered data needs \" << ( fbuffer . committed ( ) / ( 1024 * 1024 ) ) << \" MBytes.\n\"
>386	ShiftExpression	( fbuffer . committed ( ) / ( 1024 * 1024 ) ) << \" MBytes.\n\"
>387	PrimaryExpression	\" MBytes.\n\"
>388	MultiplicativeExpression	fbuffer . committed ( ) / ( 1024 * 1024 )
>389	MultiplicativeExpression	1024 * 1024
>390	PrimaryExpression	1024
>391	PrimaryExpression	1024
>392	CallExpression	fbuffer . committed ( )
>393	ArgumentList	 
>394	Callee	fbuffer . committed
>395	MemberAccess	fbuffer . committed
>396	Identifier	committed
>397	Identifier	fbuffer
>398	PrimaryExpression	\"  Done. Filtered data needs \"
>399	MemberAccess	options . vout
>400	Identifier	vout
>401	Identifier	options
>402	CompoundStatement	 
>403	ExpressionStatement	 
>404	Statement	 
>405	CompoundStatement	 
>406	IfStatement	if ( ( ( d . end_time ( ) == 0 || d . end_time ( ) > point_in_time ) && d . start_time ( ) <= point_in_time ) && \
>407	CompoundStatement	 
>408	ExpressionStatement	 
>409	CallExpression	fbuffer . commit ( )
>410	ArgumentList	 
>411	Callee	fbuffer . commit
>412	MemberAccess	fbuffer . commit
>413	Identifier	commit
>414	Identifier	fbuffer
>415	ExpressionStatement	 
>416	CallExpression	fbuffer . add_item ( d . curr ( ) )
>417	ArgumentList	d . curr ( )
>418	Argument	d . curr ( )
>419	CallExpression	d . curr ( )
>420	ArgumentList	 
>421	Callee	d . curr
>422	MemberAccess	d . curr
>423	Identifier	curr
>424	Identifier	d
>425	Callee	fbuffer . add_item
>426	MemberAccess	fbuffer . add_item
>427	Identifier	add_item
>428	Identifier	fbuffer
>429	Condition	 
>430	AndExpression	( ( d . end_time ( ) == 0 || d . end_time ( ) > point_in_time ) && d . start_time ( ) <= point_in_time ) && \
>431	CallExpression	d . curr ( ) . visible ( )
>432	ArgumentList	 
>433	Callee	d . curr ( ) . visible
>434	MemberAccess	d . curr ( ) . visible
>435	Identifier	visible
>436	CallExpression	d . curr ( )
>437	ArgumentList	 
>438	Callee	d . curr
>439	MemberAccess	d . curr
>440	Identifier	curr
>441	Identifier	d
>442	AndExpression	( d . end_time ( ) == 0 || d . end_time ( ) > point_in_time ) && d . start_time ( ) <= point_in_time
>443	RelationalExpression	d . start_time ( ) <= point_in_time
>444	Identifier	point_in_time
>445	CallExpression	d . start_time ( )
>446	ArgumentList	 
>447	Callee	d . start_time
>448	MemberAccess	d . start_time
>449	Identifier	start_time
>450	Identifier	d
>451	OrExpression	d . end_time ( ) == 0 || d . end_time ( ) > point_in_time
>452	RelationalExpression	d . end_time ( ) > point_in_time
>453	Identifier	point_in_time
>454	CallExpression	d . end_time ( )
>455	ArgumentList	 
>456	Callee	d . end_time
>457	MemberAccess	d . end_time
>458	Identifier	end_time
>459	Identifier	d
>460	EqualityExpression	d . end_time ( ) == 0
>461	PrimaryExpression	0
>462	CallExpression	d . end_time ( )
>463	ArgumentList	 
>464	Callee	d . end_time
>465	MemberAccess	d . end_time
>466	Identifier	end_time
>467	Identifier	d
>468	Statement	 
>469	Statement	 
>470	Statement	 
>471	Statement	 
>472	Statement	 
>473	Statement	 
>474	Statement	 
>475	Statement	 
>476	Statement	 
>477	Statement	 
>478	Statement	 
>479	Statement	 
>480	Statement	 
>481	Statement	 
>482	Statement	 
>483	Statement	 
>484	Statement	 
>485	Statement	 
>486	Statement	 
>487	Statement	 
>488	Statement	 
>489	Statement	 
>490	ExpressionStatement	 
>491	AssignmentExpr	dend = diff_iterator ( relations , relations )
>492	CallExpression	diff_iterator ( relations , relations )
>493	ArgumentList	relations
>494	Argument	relations
>495	Identifier	relations
>496	Argument	relations
>497	Identifier	relations
>498	Callee	diff_iterator
>499	Identifier	diff_iterator
>500	Identifier	dend
>501	Statement	 
>502	ExpressionStatement	 
>503	AssignmentExpr	dbegin = diff_iterator ( begin , relations )
>504	CallExpression	diff_iterator ( begin , relations )
>505	ArgumentList	begin
>506	Argument	relations
>507	Identifier	relations
>508	Argument	begin
>509	Identifier	begin
>510	Callee	diff_iterator
>511	Identifier	diff_iterator
>512	Identifier	dbegin
>513	Statement	 
>514	IdentifierDeclStatement	 
>515	IdentifierDecl	fbuffer ( initial_buffer_size , osmium 
>516	Expression	initial_buffer_size , osmium 
>517	Identifier	osmium 
>518	Identifier	initial_buffer_size
>519	Identifier	fbuffer
>520	IdentifierDeclType	osmium 
>521	ExpressionStatement	 
>522	RelationalExpression	osmium 
>523	RelationalExpression	osmium 
>524	ShiftExpression	osmium 
>525	Identifier	diff_iterator
>526	Identifier	osmium 
>527	Identifier	osmium 
>528	Identifier	osmium 
>529	Statement	 
>530	ExpressionStatement	 
>531	ShiftExpression	options . vout << \"  Filtering data...\n\"
>532	PrimaryExpression	\"  Filtering data...\n\"
>533	MemberAccess	options . vout
>534	Identifier	vout
>535	Identifier	options
>536	ExpressionStatement	 
>537	ShiftExpression	options . vout << \"Working on \" << point_in_time << \"...\n\"
>538	ShiftExpression	\"Working on \" << point_in_time << \"...\n\"
>539	ShiftExpression	point_in_time << \"...\n\"
>540	PrimaryExpression	\"...\n\"
>541	Identifier	point_in_time
>542	PrimaryExpression	\"Working on \"
>543	MemberAccess	options . vout
>544	Identifier	vout
>545	Identifier	options
>584	FunctionDef	min_max_timestamp (TIter begin , TIter end)
>585	ParameterList	TIter begin , TIter end
>586	Parameter	 
>587	Identifier	end
>588	ParameterType	TIter
>589	Parameter	 
>590	Identifier	begin
>591	ParameterType	TIter
>592	ReturnType	tspair
>593	CompoundStatement	 
>594	ExpressionStatement	 
>595	Statement	 
>596	CompoundStatement	 
>597	ReturnStatement	 
>598	Identifier	start_end
>599	IfStatement	if ( obj . timestamp ( ) > start_end . second )
>600	CompoundStatement	 
>601	ExpressionStatement	 
>602	AssignmentExpr	start_end . second = obj . timestamp ( )
>603	CallExpression	obj . timestamp ( )
>604	ArgumentList	 
>605	Callee	obj . timestamp
>606	MemberAccess	obj . timestamp
>607	Identifier	timestamp
>608	Identifier	obj
>609	MemberAccess	start_end . second
>610	Identifier	second
>611	Identifier	start_end
>612	Condition	 
>613	RelationalExpression	obj . timestamp ( ) > start_end . second
>614	MemberAccess	start_end . second
>615	Identifier	second
>616	Identifier	start_end
>617	CallExpression	obj . timestamp ( )
>618	ArgumentList	 
>619	Callee	obj . timestamp
>620	MemberAccess	obj . timestamp
>621	Identifier	timestamp
>622	Identifier	obj
>623	IfStatement	if ( obj . timestamp ( ) < start_end . first )
>624	CompoundStatement	 
>625	ExpressionStatement	 
>626	AssignmentExpr	start_end . first = obj . timestamp ( )
>627	CallExpression	obj . timestamp ( )
>628	ArgumentList	 
>629	Callee	obj . timestamp
>630	MemberAccess	obj . timestamp
>631	Identifier	timestamp
>632	Identifier	obj
>633	MemberAccess	start_end . first
>634	Identifier	first
>635	Identifier	start_end
>636	Condition	 
>637	RelationalExpression	obj . timestamp ( ) < start_end . first
>638	MemberAccess	start_end . first
>639	Identifier	first
>640	Identifier	start_end
>641	CallExpression	obj . timestamp ( )
>642	ArgumentList	 
>643	Callee	obj . timestamp
>644	MemberAccess	obj . timestamp
>645	Identifier	timestamp
>646	Identifier	obj
>647	Statement	 
>648	Statement	 
>649	Statement	 
>650	Statement	 
>651	Statement	 
>652	Statement	 
>653	Statement	 
>654	Statement	 
>655	Statement	 
>656	Statement	 
>657	Statement	 
>658	Statement	 
>659	Statement	 
>660	Statement	 
>661	Statement	 
>662	Statement	 
>663	Statement	 
>664	Statement	 
>665	Statement	 
>666	Statement	 
>667	Statement	 
>668	Statement	 
>669	Statement	 
>670	Statement	 
>671	Statement	 
>672	Statement	 
>673	IdentifierDeclStatement	 
>674	IdentifierDecl	init = std 
>675	AssignmentExpr	init = std 
>676	CallExpression	std 
>677	ArgumentList	osmium 
>678	Argument	osmium 
>679	CallExpression	osmium 
>680	ArgumentList	 
>681	Callee	osmium 
>682	Identifier	osmium 
>683	Argument	osmium 
>684	CallExpression	osmium 
>685	ArgumentList	 
>686	Callee	osmium 
>687	Identifier	osmium 
>688	Callee	std 
>689	Identifier	std 
>690	Identifier	init
>691	Identifier	init
>692	IdentifierDeclType	tspair
>707	FunctionDef	check_and_create_directory (const std 
>708	ParameterList	const std 
>709	Parameter	 
>710	Identifier	directory
>711	ParameterType	const std 
>712	ReturnType	void
>713	CompoundStatement	 
>714	IfStatement	if ( num_entries != 0 )
>715	CompoundStatement	 
>716	ExpressionStatement	 
>717	CallExpression	exit ( return_code 
>718	ArgumentList	return_code 
>719	Argument	return_code 
>720	Identifier	return_code 
>721	Callee	exit
>722	Identifier	exit
>723	ExpressionStatement	 
>724	ShiftExpression	std 
>725	ShiftExpression	\"Output directory '\" << directory << \"' is not empty.\n\"
>726	ShiftExpression	directory << \"' is not empty.\n\"
>727	PrimaryExpression	\"' is not empty.\n\"
>728	Identifier	directory
>729	PrimaryExpression	\"Output directory '\"
>730	Identifier	std 
>731	Condition	 
>732	EqualityExpression	num_entries != 0
>733	PrimaryExpression	0
>734	Identifier	num_entries
>735	IdentifierDeclStatement	 
>736	IdentifierDecl	num_entries = std 
>737	AssignmentExpr	num_entries = std 
>738	CallExpression	std 
>739	ArgumentList	boost 
>740	Argument	boost 
>741	CallExpression	boost 
>742	ArgumentList	 
>743	Callee	boost 
>744	Identifier	boost 
>745	Argument	boost 
>746	CallExpression	boost 
>747	ArgumentList	dir
>748	Argument	dir
>749	Identifier	dir
>750	Callee	boost 
>751	Identifier	boost 
>752	Callee	std 
>753	Identifier	std 
>754	Identifier	num_entries
>755	Identifier	num_entries
>756	IdentifierDeclType	int
>757	BlockStarter	 
>758	CompoundStatement	 
>759	ExpressionStatement	exit ( return_code 
>760	CallExpression	exit ( return_code 
>761	ArgumentList	return_code 
>762	Argument	return_code 
>763	Identifier	return_code 
>764	Callee	exit
>765	Identifier	exit
>766	ExpressionStatement	std 
>767	ShiftExpression	std 
>768	ShiftExpression	\"Error creating output directory '\" << directory << \"'
>769	ShiftExpression	directory << \"'
>770	ShiftExpression	\"'
>771	ShiftExpression	e . what ( ) << \".\n\"
>772	PrimaryExpression	\".\n\"
>773	CallExpression	e . what ( )
>774	ArgumentList	 
>775	Callee	e . what
>776	MemberAccess	e . what
>777	Identifier	what
>778	Identifier	e
>779	PrimaryExpression	\"'
>780	Identifier	directory
>781	PrimaryExpression	\"Error creating output directory '\"
>782	Identifier	std 
>783	Identifier	e
>784	BlockStarter	 
>785	CompoundStatement	 
>786	ExpressionStatement	boost 
>787	CallExpression	boost 
>788	ArgumentList	dir
>789	Argument	dir
>790	Identifier	dir
>791	Callee	boost 
>792	Identifier	boost 
>793	IdentifierDeclStatement	 
>794	IdentifierDecl	dir ( directory )
>795	Identifier	directory
>796	Identifier	dir
>797	IdentifierDeclType	boost 
>808	FunctionDef	main (int argc , char * argv [ ])
>809	ParameterList	int argc , char * argv [ ]
>810	Parameter	 
>811	Identifier	argv
>812	ParameterType	char * [ ]
>813	Parameter	 
>814	Identifier	argc
>815	ParameterType	int
>816	ReturnType	int
>817	CompoundStatement	 
>818	ReturnStatement	 
>819	Identifier	return_code 
>820	ExpressionStatement	 
>821	ShiftExpression	options . vout << \"Done.\n\"
>822	PrimaryExpression	\"Done.\n\"
>823	MemberAccess	options . vout
>824	Identifier	vout
>825	Identifier	options
>826	ExpressionStatement	 
>827	ShiftExpression	options . vout << \"Bounding box calculated from output data
>828	ShiftExpression	\"Bounding box calculated from output data
>829	ShiftExpression	std 
>830	ShiftExpression	envelope_all . MinX << ',' << envelope_all . MinY << \") (\" << envelope_all . MaxX << ',' << envelope_\
>831	ShiftExpression	',' << envelope_all . MinY << \") (\" << envelope_all . MaxX << ',' << envelope_all . MaxY << \")\n\"
>832	ShiftExpression	envelope_all . MinY << \") (\" << envelope_all . MaxX << ',' << envelope_all . MaxY << \")\n\"
>833	ShiftExpression	\") (\" << envelope_all . MaxX << ',' << envelope_all . MaxY << \")\n\"
>834	ShiftExpression	envelope_all . MaxX << ',' << envelope_all . MaxY << \")\n\"
>835	ShiftExpression	',' << envelope_all . MaxY << \")\n\"
>836	ShiftExpression	envelope_all . MaxY << \")\n\"
>837	PrimaryExpression	\")\n\"
>838	MemberAccess	envelope_all . MaxY
>839	Identifier	MaxY
>840	Identifier	envelope_all
>841	PrimaryExpression	','
>842	MemberAccess	envelope_all . MaxX
>843	Identifier	MaxX
>844	Identifier	envelope_all
>845	PrimaryExpression	\") (\"
>846	MemberAccess	envelope_all . MinY
>847	Identifier	MinY
>848	Identifier	envelope_all
>849	PrimaryExpression	','
>850	MemberAccess	envelope_all . MinX
>851	Identifier	MinX
>852	Identifier	envelope_all
>853	Identifier	std 
>854	PrimaryExpression	\"Bounding box calculated from output data
>855	MemberAccess	options . vout
>856	Identifier	vout
>857	Identifier	options
>858	ExpressionStatement	 
>859	ShiftExpression	env_out << std 
>860	ShiftExpression	std 
>861	ShiftExpression	\"XMIN=\" << envelope_all . MinX << \"\n\" << \"YMIN=\" << envelope_all . MinY << \"\n\" << \"XMAX=\" << envelope_\
>862	ShiftExpression	envelope_all . MinX << \"\n\" << \"YMIN=\" << envelope_all . MinY << \"\n\" << \"XMAX=\" << envelope_all . MaxX << \"\n\" << \"\
>863	ShiftExpression	\"\n\" << \"YMIN=\" << envelope_all . MinY << \"\n\" << \"XMAX=\" << envelope_all . MaxX << \"\n\" << \"YMAX=\" << \
>864	ShiftExpression	\"YMIN=\" << envelope_all . MinY << \"\n\" << \"XMAX=\" << envelope_all . MaxX << \"\n\" << \"YMAX=\" << envelope_\
>865	ShiftExpression	envelope_all . MinY << \"\n\" << \"XMAX=\" << envelope_all . MaxX << \"\n\" << \"YMAX=\" << envelope_all . MaxY << \"\n\"\
>866	ShiftExpression	\"\n\" << \"XMAX=\" << envelope_all . MaxX << \"\n\" << \"YMAX=\" << envelope_all . MaxY << \"\n\"
>867	ShiftExpression	\"XMAX=\" << envelope_all . MaxX << \"\n\" << \"YMAX=\" << envelope_all . MaxY << \"\n\"
>868	ShiftExpression	envelope_all . MaxX << \"\n\" << \"YMAX=\" << envelope_all . MaxY << \"\n\"
>869	ShiftExpression	\"\n\" << \"YMAX=\" << envelope_all . MaxY << \"\n\"
>870	ShiftExpression	\"YMAX=\" << envelope_all . MaxY << \"\n\"
>871	ShiftExpression	envelope_all . MaxY << \"\n\"
>872	PrimaryExpression	\"\n\"
>873	MemberAccess	envelope_all . MaxY
>874	Identifier	MaxY
>875	Identifier	envelope_all
>876	PrimaryExpression	\"YMAX=\"
>877	PrimaryExpression	\"\n\"
>878	MemberAccess	envelope_all . MaxX
>879	Identifier	MaxX
>880	Identifier	envelope_all
>881	PrimaryExpression	\"XMAX=\"
>882	PrimaryExpression	\"\n\"
>883	MemberAccess	envelope_all . MinY
>884	Identifier	MinY
>885	Identifier	envelope_all
>886	PrimaryExpression	\"YMIN=\"
>887	PrimaryExpression	\"\n\"
>888	MemberAccess	envelope_all . MinX
>889	Identifier	MinX
>890	Identifier	envelope_all
>891	PrimaryExpression	\"XMIN=\"
>892	Identifier	std 
>893	Identifier	env_out
>894	IdentifierDeclStatement	 
>895	IdentifierDecl	env_out ( options . output_directory + \"/bbox\" , std 
>896	Expression	options . output_directory + \"/bbox\" , std 
>897	Identifier	std 
>898	AdditiveExpression	options . output_directory + \"/bbox\"
>899	PrimaryExpression	\"/bbox\"
>900	MemberAccess	options . output_directory
>901	Identifier	output_directory
>902	Identifier	options
>903	Identifier	env_out
>904	IdentifierDeclType	std 
>905	ForStatement	for ( osmium 
>906	CompoundStatement	 
>907	ExpressionStatement	 
>908	CallExpression	envelope_all . Merge ( env )
>909	ArgumentList	env
>910	Argument	env
>911	Identifier	env
>912	Callee	envelope_all . Merge
>913	MemberAccess	envelope_all . Merge
>914	Identifier	Merge
>915	Identifier	envelope_all
>916	ExpressionStatement	 
>917	Statement	 
>918	Statement	 
>919	Statement	 
>920	Statement	 
>921	Statement	 
>922	Statement	 
>923	Statement	 
>924	Statement	 
>925	Statement	 
>926	Statement	 
>927	Statement	 
>928	Statement	 
>929	Statement	 
>930	Statement	 
>931	Statement	 
>932	Statement	 
>933	Statement	 
>934	Statement	 
>935	Statement	 
>936	Statement	 
>937	Statement	 
>938	Statement	 
>939	Statement	 
>940	Statement	 
>941	Statement	 
>942	Statement	 
>943	Statement	 
>944	Statement	 
>945	Statement	 
>946	Statement	 
>947	Statement	 
>948	Statement	 
>949	Statement	 
>950	Statement	 
>951	Statement	 
>952	AssignmentExpr	 
>953	Identifier	step
>954	Identifier	t
>955	Condition	 
>956	RelationalExpression	t <= end_time
>957	Identifier	end_time
>958	Identifier	t
>959	ForInit	 
>960	IdentifierDeclStatement	osmium 
>961	IdentifierDecl	t = start_time
>962	AssignmentExpr	t = start_time
>963	Identifier	start_time
>964	Identifier	start_time
>965	Identifier	t
>966	IdentifierDeclType	osmium 
>967	ExpressionStatement	 
>968	AssignmentExpr	step = options . time_step * seconds_per_day
>969	MultiplicativeExpression	options . time_step * seconds_per_day
>970	Identifier	seconds_per_day
>971	MemberAccess	options . time_step
>972	Identifier	time_step
>973	Identifier	options
>974	Identifier	step
>975	Statement	 
>976	IdentifierDeclStatement	 
>977	IdentifierDecl	envelope_all
>978	Identifier	envelope_all
>979	IdentifierDeclType	OGREnvelope
>980	IdentifierDeclStatement	 
>981	IdentifierDecl	factory ( osmium 
>982	CallExpression	osmium 
>983	ArgumentList	options . epsg
>984	Argument	options . epsg
>985	MemberAccess	options . epsg
>986	Identifier	epsg
>987	Identifier	options
>988	Callee	osmium 
>989	Identifier	osmium 
>990	Identifier	factory
>991	IdentifierDeclType	osmium 
>992	ExpressionStatement	 
>993	ShiftExpression	options . vout << \"End time  
>994	ShiftExpression	\"End time  
>995	ShiftExpression	end_time << \"\n\"
>996	PrimaryExpression	\"\n\"
>997	Identifier	end_time
>998	PrimaryExpression	\"End time  
>999	MemberAccess	options . vout
>1000	Identifier	vout
>1001	Identifier	options
>1002	ExpressionStatement	 
>1003	ShiftExpression	options . vout << \"Start time
>1004	ShiftExpression	\"Start time
>1005	ShiftExpression	start_time << \"\n\"
>1006	PrimaryExpression	\"\n\"
>1007	Identifier	start_time
>1008	PrimaryExpression	\"Start time
>1009	MemberAccess	options . vout
>1010	Identifier	vout
>1011	Identifier	options
>1012	IfStatement	if ( ! start_time || ! end_time )
>1013	CompoundStatement	 
>1014	IfStatement	if ( ! end_time )
>1015	CompoundStatement	 
>1016	ExpressionStatement	 
>1017	AssignmentExpr	end_time = min_max . second / seconds_per_day * seconds_per_day
>1018	MultiplicativeExpression	min_max . second / seconds_per_day * seconds_per_day
>1019	MultiplicativeExpression	seconds_per_day * seconds_per_day
>1020	Identifier	seconds_per_day
>1021	Identifier	seconds_per_day
>1022	MemberAccess	min_max . second
>1023	Identifier	second
>1024	Identifier	min_max
>1025	Identifier	end_time
>1026	ExpressionStatement	 
>1027	ShiftExpression	options . vout << \"No end time on command line, got it from file contents\n\"
>1028	PrimaryExpression	\"No end time on command line, got it from file contents\n\"
>1029	MemberAccess	options . vout
>1030	Identifier	vout
>1031	Identifier	options
>1032	Condition	 
>1033	UnaryOp	! end_time
>1034	Identifier	end_time
>1035	UnaryOperator	!
>1036	IfStatement	if ( ! start_time )
>1037	CompoundStatement	 
>1038	ExpressionStatement	 
>1039	AssignmentExpr	start_time = min_max . first / seconds_per_day * seconds_per_day
>1040	MultiplicativeExpression	min_max . first / seconds_per_day * seconds_per_day
>1041	MultiplicativeExpression	seconds_per_day * seconds_per_day
>1042	Identifier	seconds_per_day
>1043	Identifier	seconds_per_day
>1044	MemberAccess	min_max . first
>1045	Identifier	first
>1046	Identifier	min_max
>1047	Identifier	start_time
>1048	ExpressionStatement	 
>1049	ShiftExpression	options . vout << \"No start time on command line, got it from file contents\n\"
>1050	PrimaryExpression	\"No start time on command line, got it from file contents\n\"
>1051	MemberAccess	options . vout
>1052	Identifier	vout
>1053	Identifier	options
>1054	Condition	 
>1055	UnaryOp	! start_time
>1056	Identifier	start_time
>1057	UnaryOperator	!
>1058	ExpressionStatement	 
>1059	Statement	 
>1060	Statement	 
>1061	Statement	 
>1062	Statement	 
>1063	Statement	 
>1064	Statement	 
>1065	Statement	 
>1066	Statement	 
>1067	Statement	 
>1068	Statement	 
>1069	Statement	 
>1070	Statement	 
>1071	Statement	 
>1072	Statement	 
>1073	Statement	 
>1074	Statement	 
>1075	Statement	 
>1076	Statement	 
>1077	Statement	 
>1078	Statement	 
>1079	Statement	 
>1080	Statement	 
>1081	Statement	 
>1082	Statement	 
>1083	Statement	 
>1084	Statement	 
>1085	Statement	 
>1086	Condition	 
>1087	OrExpression	! start_time || ! end_time
>1088	UnaryOp	! end_time
>1089	Identifier	end_time
>1090	UnaryOperator	!
>1091	UnaryOp	! start_time
>1092	Identifier	start_time
>1093	UnaryOperator	!
>1094	IdentifierDeclStatement	 
>1095	IdentifierDecl	end_time = options . end_time
>1096	AssignmentExpr	end_time = options . end_time
>1097	MemberAccess	options . end_time
>1098	Identifier	end_time
>1099	Identifier	options
>1100	Identifier	end_time
>1101	Identifier	end_time
>1102	IdentifierDeclType	osmium 
>1103	IdentifierDeclStatement	 
>1104	IdentifierDecl	start_time = options . start_time
>1105	AssignmentExpr	start_time = options . start_time
>1106	MemberAccess	options . start_time
>1107	Identifier	start_time
>1108	Identifier	options
>1109	Identifier	start_time
>1110	Identifier	start_time
>1111	IdentifierDeclType	osmium 
>1112	IdentifierDeclStatement	 
>1113	IdentifierDecl	seconds_per_day = 24 * 60 * 60
>1114	AssignmentExpr	seconds_per_day = 24 * 60 * 60
>1115	MultiplicativeExpression	24 * 60 * 60
>1116	MultiplicativeExpression	60 * 60
>1117	PrimaryExpression	60
>1118	PrimaryExpression	60
>1119	PrimaryExpression	24
>1120	Identifier	seconds_per_day
>1121	Identifier	seconds_per_day
>1122	IdentifierDeclType	const int
>1123	ExpressionStatement	 
>1124	Statement	 
>1125	CompoundStatement	 
>1126	ReturnStatement	 
>1127	EqualityExpression	obj . type ( ) == osmium 
>1128	Identifier	osmium 
>1129	CallExpression	obj . type ( )
>1130	ArgumentList	 
>1131	Callee	obj . type
>1132	MemberAccess	obj . type
>1133	Identifier	type
>1134	Identifier	obj
>1135	Statement	 
>1136	Statement	 
>1137	Statement	 
>1138	Statement	 
>1139	Statement	 
>1140	Statement	 
>1141	Statement	 
>1142	Statement	 
>1143	Statement	 
>1144	Statement	 
>1145	Statement	 
>1146	Statement	 
>1147	Statement	 
>1148	Statement	 
>1149	Statement	 
>1150	Statement	 
>1151	Statement	 
>1152	Statement	 
>1153	Statement	 
>1154	Statement	 
>1155	Statement	 
>1156	Statement	 
>1157	Statement	 
>1158	Statement	 
>1159	Statement	 
>1160	Statement	 
>1161	Statement	 
>1162	Statement	 
>1163	Statement	 
>1164	Statement	 
>1165	Statement	 
>1166	Statement	 
>1167	Statement	 
>1168	Statement	 
>1169	Statement	 
>1170	Statement	 
>1171	Statement	 
>1172	Statement	 
>1173	Statement	 
>1174	ExpressionStatement	 
>1175	ShiftExpression	options . vout << \"Done. Input data needs \" << ( ibuffer . committed ( ) / ( 1024 * 1024 ) ) << \" MBytes.\n\"\
>1176	ShiftExpression	\"Done. Input data needs \" << ( ibuffer . committed ( ) / ( 1024 * 1024 ) ) << \" MBytes.\n\"
>1177	ShiftExpression	( ibuffer . committed ( ) / ( 1024 * 1024 ) ) << \" MBytes.\n\"
>1178	PrimaryExpression	\" MBytes.\n\"
>1179	MultiplicativeExpression	ibuffer . committed ( ) / ( 1024 * 1024 )
>1180	MultiplicativeExpression	1024 * 1024
>1181	PrimaryExpression	1024
>1182	PrimaryExpression	1024
>1183	CallExpression	ibuffer . committed ( )
>1184	ArgumentList	 
>1185	Callee	ibuffer . committed
>1186	MemberAccess	ibuffer . committed
>1187	Identifier	committed
>1188	Identifier	ibuffer
>1189	PrimaryExpression	\"Done. Input data needs \"
>1190	MemberAccess	options . vout
>1191	Identifier	vout
>1192	Identifier	options
>1193	IdentifierDeclStatement	 
>1194	IdentifierDecl	ibuffer = osmium 
>1195	AssignmentExpr	ibuffer = osmium 
>1196	CallExpression	osmium 
>1197	ArgumentList	file
>1198	Argument	osmium 
>1199	Identifier	osmium 
>1200	Argument	file
>1201	Identifier	file
>1202	Callee	osmium 
>1203	Identifier	osmium 
>1204	Identifier	ibuffer
>1205	Identifier	ibuffer
>1206	IdentifierDeclType	osmium 
>1207	IdentifierDeclStatement	 
>1208	IdentifierDecl	file ( options . input_filename , options . input_format )
>1209	Expression	options . input_filename , options . input_format
>1210	MemberAccess	options . input_format
>1211	Identifier	input_format
>1212	Identifier	options
>1213	MemberAccess	options . input_filename
>1214	Identifier	input_filename
>1215	Identifier	options
>1216	Identifier	file
>1217	IdentifierDeclType	osmium 
>1218	ExpressionStatement	 
>1219	ShiftExpression	options . vout << \"Reading input file into memory...\n\"
>1220	PrimaryExpression	\"Reading input file into memory...\n\"
>1221	MemberAccess	options . vout
>1222	Identifier	vout
>1223	Identifier	options
>1224	ExpressionStatement	 
>1225	CallExpression	check_and_create_directory ( options . output_directory )
>1226	ArgumentList	options . output_directory
>1227	Argument	options . output_directory
>1228	MemberAccess	options . output_directory
>1229	Identifier	output_directory
>1230	Identifier	options
>1231	Callee	check_and_create_directory
>1232	Identifier	check_and_create_directory
>1233	IfStatement	if ( options . start_time && options . end_time && options . start_time > options . end_time )
>1234	CompoundStatement	 
>1235	ExpressionStatement	 
>1236	CallExpression	std 
>1237	ArgumentList	options . start_time
>1238	Argument	options . end_time
>1239	MemberAccess	options . end_time
>1240	Identifier	end_time
>1241	Identifier	options
>1242	Argument	options . start_time
>1243	MemberAccess	options . start_time
>1244	Identifier	start_time
>1245	Identifier	options
>1246	Callee	std 
>1247	Identifier	std 
>1248	ExpressionStatement	 
>1249	ShiftExpression	options . vout << \"Your end time is before the start time. Switching them around.\n\"
>1250	PrimaryExpression	\"Your end time is before the start time. Switching them around.\n\"
>1251	MemberAccess	options . vout
>1252	Identifier	vout
>1253	Identifier	options
>1254	Condition	 
>1255	AndExpression	options . start_time && options . end_time && options . start_time > options . end_time
>1256	AndExpression	options . end_time && options . start_time > options . end_time
>1257	RelationalExpression	options . start_time > options . end_time
>1258	MemberAccess	options . end_time
>1259	Identifier	end_time
>1260	Identifier	options
>1261	MemberAccess	options . start_time
>1262	Identifier	start_time
>1263	Identifier	options
>1264	MemberAccess	options . end_time
>1265	Identifier	end_time
>1266	Identifier	options
>1267	MemberAccess	options . start_time
>1268	Identifier	start_time
>1269	Identifier	options
>1270	ExpressionStatement	 
>1271	ShiftExpression	options . vout << \"  Time steps
>1272	ShiftExpression	\"  Time steps
>1273	ShiftExpression	options . time_step << \" day(s)\n\"
>1274	PrimaryExpression	\" day(s)\n\"
>1275	MemberAccess	options . time_step
>1276	Identifier	time_step
>1277	Identifier	options
>1278	PrimaryExpression	\"  Time steps
>1279	MemberAccess	options . vout
>1280	Identifier	vout
>1281	Identifier	options
>1282	IfStatement	if ( options . end_time )
>1283	CompoundStatement	 
>1284	ExpressionStatement	 
>1285	ShiftExpression	options . vout << \"  End time
>1286	ShiftExpression	\"  End time
>1287	ShiftExpression	options . end_time << \"\n\"
>1288	PrimaryExpression	\"\n\"
>1289	MemberAccess	options . end_time
>1290	Identifier	end_time
>1291	Identifier	options
>1292	PrimaryExpression	\"  End time
>1293	MemberAccess	options . vout
>1294	Identifier	vout
>1295	Identifier	options
>1296	Condition	 
>1297	MemberAccess	options . end_time
>1298	Identifier	end_time
>1299	Identifier	options
>1300	IfStatement	if ( options . start_time )
>1301	CompoundStatement	 
>1302	ExpressionStatement	 
>1303	ShiftExpression	options . vout << \"  Start time
>1304	ShiftExpression	\"  Start time
>1305	ShiftExpression	options . start_time << \"\n\"
>1306	PrimaryExpression	\"\n\"
>1307	MemberAccess	options . start_time
>1308	Identifier	start_time
>1309	Identifier	options
>1310	PrimaryExpression	\"  Start time
>1311	MemberAccess	options . vout
>1312	Identifier	vout
>1313	Identifier	options
>1314	Condition	 
>1315	MemberAccess	options . start_time
>1316	Identifier	start_time
>1317	Identifier	options
>1318	ExpressionStatement	 
>1319	ShiftExpression	options . vout << \"  Output OGR format
>1320	ShiftExpression	\"  Output OGR format
>1321	ShiftExpression	options . output_format << \"\n\"
>1322	PrimaryExpression	\"\n\"
>1323	MemberAccess	options . output_format
>1324	Identifier	output_format
>1325	Identifier	options
>1326	PrimaryExpression	\"  Output OGR format
>1327	MemberAccess	options . vout
>1328	Identifier	vout
>1329	Identifier	options
>1330	ExpressionStatement	 
>1331	ShiftExpression	options . vout << \"  Output directory
>1332	ShiftExpression	\"  Output directory
>1333	ShiftExpression	options . output_directory << \"\n\"
>1334	PrimaryExpression	\"\n\"
>1335	MemberAccess	options . output_directory
>1336	Identifier	output_directory
>1337	Identifier	options
>1338	PrimaryExpression	\"  Output directory
>1339	MemberAccess	options . vout
>1340	Identifier	vout
>1341	Identifier	options
>1342	ExpressionStatement	 
>1343	ShiftExpression	options . vout << \"  Coordinate Reference System
>1344	ShiftExpression	\"  Coordinate Reference System
>1345	ShiftExpression	options . epsg << \"\n\"
>1346	PrimaryExpression	\"\n\"
>1347	MemberAccess	options . epsg
>1348	Identifier	epsg
>1349	Identifier	options
>1350	PrimaryExpression	\"  Coordinate Reference System
>1351	MemberAccess	options . vout
>1352	Identifier	vout
>1353	Identifier	options
>1354	IfStatement	if ( ! options . input_format . empty ( ) )
>1355	CompoundStatement	 
>1356	ExpressionStatement	 
>1357	ShiftExpression	options . vout << \"  Input format
>1358	ShiftExpression	\"  Input format
>1359	ShiftExpression	options . input_format << \"\n\"
>1360	PrimaryExpression	\"\n\"
>1361	MemberAccess	options . input_format
>1362	Identifier	input_format
>1363	Identifier	options
>1364	PrimaryExpression	\"  Input format
>1365	MemberAccess	options . vout
>1366	Identifier	vout
>1367	Identifier	options
>1368	Condition	 
>1369	UnaryOp	! options . input_format . empty ( )
>1370	CallExpression	options . input_format . empty ( )
>1371	ArgumentList	 
>1372	Callee	options . input_format . empty
>1373	MemberAccess	options . input_format . empty
>1374	Identifier	empty
>1375	MemberAccess	options . input_format
>1376	Identifier	input_format
>1377	Identifier	options
>1378	UnaryOperator	!
>1379	ExpressionStatement	 
>1380	ShiftExpression	options . vout << \"  Input file
>1381	ShiftExpression	\"  Input file
>1382	ShiftExpression	options . input_filename << \"\n\"
>1383	PrimaryExpression	\"\n\"
>1384	MemberAccess	options . input_filename
>1385	Identifier	input_filename
>1386	Identifier	options
>1387	PrimaryExpression	\"  Input file
>1388	MemberAccess	options . vout
>1389	Identifier	vout
>1390	Identifier	options
>1391	ExpressionStatement	 
>1392	ShiftExpression	options . vout << \"Options from command line or defaults
>1393	PrimaryExpression	\"Options from command line or defaults
>1394	MemberAccess	options . vout
>1395	Identifier	vout
>1396	Identifier	options
>1397	IdentifierDeclStatement	 
>1398	IdentifierDecl	options ( argc , argv )
>1399	Expression	argc , argv
>1400	Identifier	argv
>1401	Identifier	argc
>1402	Identifier	options
>1403	IdentifierDeclType	Options
<9=30,29,10
<10=26,23,20,17,14,11
<11=13,12
<14=16,15
<17=19,18
<20=22,21
<23=25,24
<26=28,27
<30=536,530,529,521,514,402,383,376,264,260,255,249,228,224,219,212,31,38,39,40,41,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,98,116,168,181,185,206
<31=32
<32=34,33
<34=35
<35=37,36
<41=42
<42=43
<43=49,44
<44=47,45
<45=46
<47=48
<49=50
<89=90
<90=97,96,91
<91=95,92
<92=94,93
<98=99
<99=115,114,100
<100=111,101
<101=110,102
<102=104,103
<104=106,105
<106=107
<107=109,108
<111=113,112
<116=162,157,117
<117=118
<118=151,119
<119=147,138,129,120
<120=121
<121=127,122
<122=125,123
<123=124
<125=126
<127=128
<129=130
<130=136,131
<131=134,132
<132=133
<134=135
<136=137
<138=139
<139=143,140
<140=141
<141=142
<143=144
<144=146,145
<147=148
<148=150,149
<151=152
<152=154,153
<154=156,155
<157=158
<158=159
<159=161,160
<162=163
<163=165,164
<165=167,166
<168=169
<169=180,179,170
<170=178,171
<171=175,172
<172=174,173
<175=177,176
<181=182
<182=184,183
<185=186
<186=205,204,187
<187=203,188
<188=194,189
<189=192,190
<190=191
<192=193
<194=195
<195=197,196
<197=199,198
<199=200
<200=202,201
<206=207
<207=209,208
<209=211,210
<212=213
<213=215,214
<215=216
<216=218,217
<219=220
<220=223,222,221
<224=225
<225=227,226
<228=229
<229=245,230
<230=238,231
<231=232
<232=234,233
<234=235
<235=237,236
<238=239
<239=241,240
<241=242
<242=244,243
<245=246
<246=248,247
<249=250
<250=252,251
<252=254,253
<255=256
<256=259,258,257
<260=261
<261=263,262
<264=375,364,363,352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,331,330,267,266,265
<267=268
<268=291,269
<269=277,270
<270=271
<271=273,272
<273=274
<274=276,275
<277=278
<278=287,279
<279=280
<280=281
<281=283,282
<283=284
<284=286,285
<287=288
<288=290,289
<291=292
<292=304,293
<293=295,294
<295=296
<296=298,297
<298=300,299
<300=301
<301=303,302
<304=313,305
<305=307,306
<307=309,308
<309=310
<310=312,311
<313=322,314
<314=316,315
<316=318,317
<318=319
<319=321,320
<322=324,323
<324=326,325
<326=327
<327=329,328
<352=353
<353=362,354
<354=360,355
<355=358,356
<356=357
<358=359
<360=361
<364=365
<365=374,366
<366=372,367
<367=370,368
<368=369
<370=371
<372=373
<376=377
<377=382,381,378
<378=380,379
<383=384
<384=399,385
<385=398,386
<386=388,387
<388=392,389
<389=391,390
<392=394,393
<394=395
<395=397,396
<399=401,400
<402=513,502,501,490,489,488,487,486,485,484,483,482,481,480,479,478,477,476,475,474,473,472,471,470,469,468,405,404,403
<405=406
<406=429,407
<407=415,408
<408=409
<409=411,410
<411=412
<412=414,413
<415=416
<416=425,417
<417=418
<418=419
<419=421,420
<421=422
<422=424,423
<425=426
<426=428,427
<429=430
<430=442,431
<431=433,432
<433=434
<434=436,435
<436=438,437
<438=439
<439=441,440
<442=451,443
<443=445,444
<445=447,446
<447=448
<448=450,449
<451=460,452
<452=454,453
<454=456,455
<456=457
<457=459,458
<460=462,461
<462=464,463
<464=465
<465=467,466
<490=491
<491=500,492
<492=498,493
<493=496,494
<494=495
<496=497
<498=499
<502=503
<503=512,504
<504=510,505
<505=508,506
<506=507
<508=509
<510=511
<514=515
<515=520,519,516
<516=518,517
<521=522
<522=528,523
<523=527,524
<524=526,525
<530=531
<531=533,532
<533=535,534
<536=537
<537=543,538
<538=542,539
<539=541,540
<543=545,544
<584=593,592,585
<585=589,586
<586=588,587
<589=591,590
<593=673,672,671,670,669,668,667,666,665,664,663,662,661,660,659,658,657,656,655,654,653,652,651,650,649,648,647,596,595,594
<596=623,599,597
<597=598
<599=612,600
<600=601
<601=602
<602=609,603
<603=605,604
<605=606
<606=608,607
<609=611,610
<612=613
<613=617,614
<614=616,615
<617=619,618
<619=620
<620=622,621
<623=636,624
<624=625
<625=626
<626=633,627
<627=629,628
<629=630
<630=632,631
<633=635,634
<636=637
<637=641,638
<638=640,639
<641=643,642
<643=644
<644=646,645
<673=674
<674=692,691,675
<675=690,676
<676=688,677
<677=683,678
<678=679
<679=681,680
<681=682
<683=684
<684=686,685
<686=687
<688=689
<707=713,712,708
<708=709
<709=711,710
<713=793,784,757,735,714
<714=731,715
<715=723,716
<716=717
<717=721,718
<718=719
<719=720
<721=722
<723=724
<724=730,725
<725=729,726
<726=728,727
<731=732
<732=734,733
<735=736
<736=756,755,737
<737=754,738
<738=752,739
<739=745,740
<740=741
<741=743,742
<743=744
<745=746
<746=750,747
<747=748
<748=749
<750=751
<752=753
<757=783,758
<758=766,759
<759=760
<760=764,761
<761=762
<762=763
<764=765
<766=767
<767=782,768
<768=781,769
<769=780,770
<770=779,771
<771=773,772
<773=775,774
<775=776
<776=778,777
<784=785
<785=786
<786=787
<787=791,788
<788=789
<789=790
<791=792
<793=794
<794=797,796,795
<808=817,816,809
<809=813,810
<810=812,811
<813=815,814
<817=1397,1391,1379,1354,1342,1330,1318,1300,1282,1270,1233,1224,1218,1207,1193,1174,1173,1172,1171,1170,1169,1168,1167,1166,818,820,826,858,894,905,967,975,976,980,992,1002,1012,1094,1103,1112,1123,1124,1125,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165
<818=819
<820=821
<821=823,822
<823=825,824
<826=827
<827=855,828
<828=854,829
<829=853,830
<830=850,831
<831=849,832
<832=846,833
<833=845,834
<834=842,835
<835=841,836
<836=838,837
<838=840,839
<842=844,843
<846=848,847
<850=852,851
<855=857,856
<858=859
<859=893,860
<860=892,861
<861=891,862
<862=888,863
<863=887,864
<864=886,865
<865=883,866
<866=882,867
<867=881,868
<868=878,869
<869=877,870
<870=876,871
<871=873,872
<873=875,874
<878=880,879
<883=885,884
<888=890,889
<894=895
<895=904,903,896
<896=898,897
<898=900,899
<900=902,901
<905=959,955,952,906
<906=951,950,949,948,947,946,945,944,943,942,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,921,920,919,918,917,916,907
<907=908
<908=912,909
<909=910
<910=911
<912=913
<913=915,914
<952=954,953
<955=956
<956=958,957
<959=960
<960=961
<961=966,965,962
<962=964,963
<967=968
<968=974,969
<969=971,970
<971=973,972
<976=977
<977=979,978
<980=981
<981=991,990,982
<982=988,983
<983=984
<984=985
<985=987,986
<988=989
<992=993
<993=999,994
<994=998,995
<995=997,996
<999=1001,1000
<1002=1003
<1003=1009,1004
<1004=1008,1005
<1005=1007,1006
<1009=1011,1010
<1012=1086,1013
<1013=1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,1061,1060,1059,1058,1036,1014
<1014=1032,1015
<1015=1026,1016
<1016=1017
<1017=1025,1018
<1018=1022,1019
<1019=1021,1020
<1022=1024,1023
<1026=1027
<1027=1029,1028
<1029=1031,1030
<1032=1033
<1033=1035,1034
<1036=1054,1037
<1037=1048,1038
<1038=1039
<1039=1047,1040
<1040=1044,1041
<1041=1043,1042
<1044=1046,1045
<1048=1049
<1049=1051,1050
<1051=1053,1052
<1054=1055
<1055=1057,1056
<1086=1087
<1087=1091,1088
<1088=1090,1089
<1091=1093,1092
<1094=1095
<1095=1102,1101,1096
<1096=1100,1097
<1097=1099,1098
<1103=1104
<1104=1111,1110,1105
<1105=1109,1106
<1106=1108,1107
<1112=1113
<1113=1122,1121,1114
<1114=1120,1115
<1115=1119,1116
<1116=1118,1117
<1125=1126
<1126=1127
<1127=1129,1128
<1129=1131,1130
<1131=1132
<1132=1134,1133
<1174=1175
<1175=1190,1176
<1176=1189,1177
<1177=1179,1178
<1179=1183,1180
<1180=1182,1181
<1183=1185,1184
<1185=1186
<1186=1188,1187
<1190=1192,1191
<1193=1194
<1194=1206,1205,1195
<1195=1204,1196
<1196=1202,1197
<1197=1200,1198
<1198=1199
<1200=1201
<1202=1203
<1207=1208
<1208=1217,1216,1209
<1209=1213,1210
<1210=1212,1211
<1213=1215,1214
<1218=1219
<1219=1221,1220
<1221=1223,1222
<1224=1225
<1225=1231,1226
<1226=1227
<1227=1228
<1228=1230,1229
<1231=1232
<1233=1254,1234
<1234=1248,1235
<1235=1236
<1236=1246,1237
<1237=1242,1238
<1238=1239
<1239=1241,1240
<1242=1243
<1243=1245,1244
<1246=1247
<1248=1249
<1249=1251,1250
<1251=1253,1252
<1254=1255
<1255=1267,1256
<1256=1264,1257
<1257=1261,1258
<1258=1260,1259
<1261=1263,1262
<1264=1266,1265
<1267=1269,1268
<1270=1271
<1271=1279,1272
<1272=1278,1273
<1273=1275,1274
<1275=1277,1276
<1279=1281,1280
<1282=1296,1283
<1283=1284
<1284=1285
<1285=1293,1286
<1286=1292,1287
<1287=1289,1288
<1289=1291,1290
<1293=1295,1294
<1296=1297
<1297=1299,1298
<1300=1314,1301
<1301=1302
<1302=1303
<1303=1311,1304
<1304=1310,1305
<1305=1307,1306
<1307=1309,1308
<1311=1313,1312
<1314=1315
<1315=1317,1316
<1318=1319
<1319=1327,1320
<1320=1326,1321
<1321=1323,1322
<1323=1325,1324
<1327=1329,1328
<1330=1331
<1331=1339,1332
<1332=1338,1333
<1333=1335,1334
<1335=1337,1336
<1339=1341,1340
<1342=1343
<1343=1351,1344
<1344=1350,1345
<1345=1347,1346
<1347=1349,1348
<1351=1353,1352
<1354=1368,1355
<1355=1356
<1356=1357
<1357=1365,1358
<1358=1364,1359
<1359=1361,1360
<1361=1363,1362
<1365=1367,1366
<1368=1369
<1369=1378,1370
<1370=1372,1371
<1372=1373
<1373=1375,1374
<1375=1377,1376
<1379=1380
<1380=1388,1381
<1381=1387,1382
<1382=1384,1383
<1384=1386,1385
<1388=1390,1389
<1391=1392
<1392=1394,1393
<1394=1396,1395
<1397=1398
<1398=1403,1402,1399
<1399=1401,1400
