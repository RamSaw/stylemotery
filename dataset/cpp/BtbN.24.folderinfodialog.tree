>3	FunctionDef	FolderInfoDialog 
>4	ParameterList	BtsApi * api , const QString & folderSecret , QWidget * parent
>5	Parameter	 
>6	Identifier	parent
>7	ParameterType	QWidget *
>8	Parameter	 
>9	Identifier	folderSecret
>10	ParameterType	const QString &
>11	Parameter	 
>12	Identifier	api
>13	ParameterType	BtsApi *
>14	CompoundStatement	 
>15	ExpressionStatement	 
>16	CallExpression	folderApi -> getFolders ( )
>17	ArgumentList	 
>18	Callee	folderApi -> getFolders
>19	PtrMemberAccess	folderApi -> getFolders
>20	Identifier	getFolders
>21	Identifier	folderApi
>22	ExpressionStatement	 
>23	CallExpression	folderApi -> getFolderPeers ( )
>24	ArgumentList	 
>25	Callee	folderApi -> getFolderPeers
>26	PtrMemberAccess	folderApi -> getFolderPeers
>27	Identifier	getFolderPeers
>28	Identifier	folderApi
>29	ExpressionStatement	 
>30	CallExpression	folderApi -> getFolderPrefs ( )
>31	ArgumentList	 
>32	Callee	folderApi -> getFolderPrefs
>33	PtrMemberAccess	folderApi -> getFolderPrefs
>34	Identifier	getFolderPrefs
>35	Identifier	folderApi
>36	ExpressionStatement	 
>37	CallExpression	folderApi -> getFolderHosts ( )
>38	ArgumentList	 
>39	Callee	folderApi -> getFolderHosts
>40	PtrMemberAccess	folderApi -> getFolderHosts
>41	Identifier	getFolderHosts
>42	Identifier	folderApi
>43	ExpressionStatement	 
>44	CallExpression	folderApi -> getSecrets ( true )
>45	ArgumentList	true
>46	Argument	true
>47	Identifier	true
>48	Callee	folderApi -> getSecrets
>49	PtrMemberAccess	folderApi -> getSecrets
>50	Identifier	getSecrets
>51	Identifier	folderApi
>52	ExpressionStatement	 
>53	Statement	 
>54	Statement	 
>55	Statement	 
>56	Statement	 
>57	Statement	 
>58	Statement	 
>59	Statement	 
>60	Statement	 
>61	Statement	 
>62	Statement	 
>63	Statement	 
>64	Statement	 
>65	Statement	 
>66	Statement	 
>67	Statement	 
>68	Statement	 
>69	Statement	 
>70	Statement	 
>71	Statement	 
>72	Statement	 
>73	Statement	 
>74	Statement	 
>75	Statement	 
>76	Statement	 
>77	Statement	 
>78	Statement	 
>79	Statement	 
>80	Statement	 
>81	Statement	 
>82	Statement	 
>83	ExpressionStatement	 
>84	Statement	 
>85	Statement	 
>86	Statement	 
>87	Statement	 
>88	Statement	 
>89	Statement	 
>90	Statement	 
>91	Statement	 
>92	Statement	 
>93	Statement	 
>94	Statement	 
>95	Statement	 
>96	Statement	 
>97	Statement	 
>98	Statement	 
>99	Statement	 
>100	Statement	 
>101	Statement	 
>102	Statement	 
>103	Statement	 
>104	Statement	 
>105	Statement	 
>106	Statement	 
>107	Statement	 
>108	Statement	 
>109	Statement	 
>110	Statement	 
>111	Statement	 
>112	Statement	 
>113	Statement	 
>114	ExpressionStatement	 
>115	CallExpression	connect ( folderApi , SIGNAL ( setFolderPrefsResult ( QVariantHash , QString ) ) , this , SLOT ( updatePrefs ( QVariantHash ) ) )
>116	ArgumentList	folderApi
>117	Argument	SLOT ( updatePrefs ( QVariantHash ) )
>118	CallExpression	SLOT ( updatePrefs ( QVariantHash ) )
>119	ArgumentList	updatePrefs ( QVariantHash )
>120	Argument	updatePrefs ( QVariantHash )
>121	CallExpression	updatePrefs ( QVariantHash )
>122	ArgumentList	QVariantHash
>123	Argument	QVariantHash
>124	Identifier	QVariantHash
>125	Callee	updatePrefs
>126	Identifier	updatePrefs
>127	Callee	SLOT
>128	Identifier	SLOT
>129	Argument	this
>130	Identifier	this
>131	Argument	SIGNAL ( setFolderPrefsResult ( QVariantHash , QString ) )
>132	CallExpression	SIGNAL ( setFolderPrefsResult ( QVariantHash , QString ) )
>133	ArgumentList	setFolderPrefsResult ( QVariantHash , QString )
>134	Argument	setFolderPrefsResult ( QVariantHash , QString )
>135	CallExpression	setFolderPrefsResult ( QVariantHash , QString )
>136	ArgumentList	QVariantHash
>137	Argument	QString
>138	Identifier	QString
>139	Argument	QVariantHash
>140	Identifier	QVariantHash
>141	Callee	setFolderPrefsResult
>142	Identifier	setFolderPrefsResult
>143	Callee	SIGNAL
>144	Identifier	SIGNAL
>145	Argument	folderApi
>146	Identifier	folderApi
>147	Callee	connect
>148	Identifier	connect
>149	ExpressionStatement	 
>150	CallExpression	connect ( folderApi , SIGNAL ( getFolderPrefsResult ( QVariantHash , QString ) ) , this , SLOT ( updatePrefs ( QVariantHash ) ) )
>151	ArgumentList	folderApi
>152	Argument	SLOT ( updatePrefs ( QVariantHash ) )
>153	CallExpression	SLOT ( updatePrefs ( QVariantHash ) )
>154	ArgumentList	updatePrefs ( QVariantHash )
>155	Argument	updatePrefs ( QVariantHash )
>156	CallExpression	updatePrefs ( QVariantHash )
>157	ArgumentList	QVariantHash
>158	Argument	QVariantHash
>159	Identifier	QVariantHash
>160	Callee	updatePrefs
>161	Identifier	updatePrefs
>162	Callee	SLOT
>163	Identifier	SLOT
>164	Argument	this
>165	Identifier	this
>166	Argument	SIGNAL ( getFolderPrefsResult ( QVariantHash , QString ) )
>167	CallExpression	SIGNAL ( getFolderPrefsResult ( QVariantHash , QString ) )
>168	ArgumentList	getFolderPrefsResult ( QVariantHash , QString )
>169	Argument	getFolderPrefsResult ( QVariantHash , QString )
>170	CallExpression	getFolderPrefsResult ( QVariantHash , QString )
>171	ArgumentList	QVariantHash
>172	Argument	QString
>173	Identifier	QString
>174	Argument	QVariantHash
>175	Identifier	QVariantHash
>176	Callee	getFolderPrefsResult
>177	Identifier	getFolderPrefsResult
>178	Callee	SIGNAL
>179	Identifier	SIGNAL
>180	Argument	folderApi
>181	Identifier	folderApi
>182	Callee	connect
>183	Identifier	connect
>184	ExpressionStatement	 
>185	CallExpression	connect ( folderApi , SIGNAL ( setFolderHostsResult ( QStringList , QString ) ) , this , SLOT ( updateHosts ( QStringList ) ) )
>186	ArgumentList	folderApi
>187	Argument	SLOT ( updateHosts ( QStringList ) )
>188	CallExpression	SLOT ( updateHosts ( QStringList ) )
>189	ArgumentList	updateHosts ( QStringList )
>190	Argument	updateHosts ( QStringList )
>191	CallExpression	updateHosts ( QStringList )
>192	ArgumentList	QStringList
>193	Argument	QStringList
>194	Identifier	QStringList
>195	Callee	updateHosts
>196	Identifier	updateHosts
>197	Callee	SLOT
>198	Identifier	SLOT
>199	Argument	this
>200	Identifier	this
>201	Argument	SIGNAL ( setFolderHostsResult ( QStringList , QString ) )
>202	CallExpression	SIGNAL ( setFolderHostsResult ( QStringList , QString ) )
>203	ArgumentList	setFolderHostsResult ( QStringList , QString )
>204	Argument	setFolderHostsResult ( QStringList , QString )
>205	CallExpression	setFolderHostsResult ( QStringList , QString )
>206	ArgumentList	QStringList
>207	Argument	QString
>208	Identifier	QString
>209	Argument	QStringList
>210	Identifier	QStringList
>211	Callee	setFolderHostsResult
>212	Identifier	setFolderHostsResult
>213	Callee	SIGNAL
>214	Identifier	SIGNAL
>215	Argument	folderApi
>216	Identifier	folderApi
>217	Callee	connect
>218	Identifier	connect
>219	ExpressionStatement	 
>220	CallExpression	connect ( folderApi , SIGNAL ( getFolderHostsResult ( QStringList , QString ) ) , this , SLOT ( updateHosts ( QStringList ) ) )
>221	ArgumentList	folderApi
>222	Argument	SLOT ( updateHosts ( QStringList ) )
>223	CallExpression	SLOT ( updateHosts ( QStringList ) )
>224	ArgumentList	updateHosts ( QStringList )
>225	Argument	updateHosts ( QStringList )
>226	CallExpression	updateHosts ( QStringList )
>227	ArgumentList	QStringList
>228	Argument	QStringList
>229	Identifier	QStringList
>230	Callee	updateHosts
>231	Identifier	updateHosts
>232	Callee	SLOT
>233	Identifier	SLOT
>234	Argument	this
>235	Identifier	this
>236	Argument	SIGNAL ( getFolderHostsResult ( QStringList , QString ) )
>237	CallExpression	SIGNAL ( getFolderHostsResult ( QStringList , QString ) )
>238	ArgumentList	getFolderHostsResult ( QStringList , QString )
>239	Argument	getFolderHostsResult ( QStringList , QString )
>240	CallExpression	getFolderHostsResult ( QStringList , QString )
>241	ArgumentList	QStringList
>242	Argument	QString
>243	Identifier	QString
>244	Argument	QStringList
>245	Identifier	QStringList
>246	Callee	getFolderHostsResult
>247	Identifier	getFolderHostsResult
>248	Callee	SIGNAL
>249	Identifier	SIGNAL
>250	Argument	folderApi
>251	Identifier	folderApi
>252	Callee	connect
>253	Identifier	connect
>254	ExpressionStatement	 
>255	CallExpression	connect ( folderApi , SIGNAL ( getSecretsResult ( QString , QString , QString ) ) , this , SLOT ( updateSecrets ( \
>256	ArgumentList	folderApi
>257	Argument	SLOT ( updateSecrets ( QString , QString , QString ) )
>258	CallExpression	SLOT ( updateSecrets ( QString , QString , QString ) )
>259	ArgumentList	updateSecrets ( QString , QString , QString )
>260	Argument	updateSecrets ( QString , QString , QString )
>261	CallExpression	updateSecrets ( QString , QString , QString )
>262	ArgumentList	QString
>263	Argument	QString
>264	Identifier	QString
>265	Argument	QString
>266	Identifier	QString
>267	Argument	QString
>268	Identifier	QString
>269	Callee	updateSecrets
>270	Identifier	updateSecrets
>271	Callee	SLOT
>272	Identifier	SLOT
>273	Argument	this
>274	Identifier	this
>275	Argument	SIGNAL ( getSecretsResult ( QString , QString , QString ) )
>276	CallExpression	SIGNAL ( getSecretsResult ( QString , QString , QString ) )
>277	ArgumentList	getSecretsResult ( QString , QString , QString )
>278	Argument	getSecretsResult ( QString , QString , QString )
>279	CallExpression	getSecretsResult ( QString , QString , QString )
>280	ArgumentList	QString
>281	Argument	QString
>282	Identifier	QString
>283	Argument	QString
>284	Identifier	QString
>285	Argument	QString
>286	Identifier	QString
>287	Callee	getSecretsResult
>288	Identifier	getSecretsResult
>289	Callee	SIGNAL
>290	Identifier	SIGNAL
>291	Argument	folderApi
>292	Identifier	folderApi
>293	Callee	connect
>294	Identifier	connect
>295	ExpressionStatement	 
>296	CallExpression	connect ( removeHostButton , SIGNAL ( clicked ( ) ) , this , SLOT ( onDelHost ( ) ) )
>297	ArgumentList	removeHostButton
>298	Argument	SLOT ( onDelHost ( ) )
>299	CallExpression	SLOT ( onDelHost ( ) )
>300	ArgumentList	onDelHost ( )
>301	Argument	onDelHost ( )
>302	CallExpression	onDelHost ( )
>303	ArgumentList	 
>304	Callee	onDelHost
>305	Identifier	onDelHost
>306	Callee	SLOT
>307	Identifier	SLOT
>308	Argument	this
>309	Identifier	this
>310	Argument	SIGNAL ( clicked ( ) )
>311	CallExpression	SIGNAL ( clicked ( ) )
>312	ArgumentList	clicked ( )
>313	Argument	clicked ( )
>314	CallExpression	clicked ( )
>315	ArgumentList	 
>316	Callee	clicked
>317	Identifier	clicked
>318	Callee	SIGNAL
>319	Identifier	SIGNAL
>320	Argument	removeHostButton
>321	Identifier	removeHostButton
>322	Callee	connect
>323	Identifier	connect
>324	ExpressionStatement	 
>325	CallExpression	connect ( addHostButton , SIGNAL ( clicked ( ) ) , this , SLOT ( onAddHost ( ) ) )
>326	ArgumentList	addHostButton
>327	Argument	SLOT ( onAddHost ( ) )
>328	CallExpression	SLOT ( onAddHost ( ) )
>329	ArgumentList	onAddHost ( )
>330	Argument	onAddHost ( )
>331	CallExpression	onAddHost ( )
>332	ArgumentList	 
>333	Callee	onAddHost
>334	Identifier	onAddHost
>335	Callee	SLOT
>336	Identifier	SLOT
>337	Argument	this
>338	Identifier	this
>339	Argument	SIGNAL ( clicked ( ) )
>340	CallExpression	SIGNAL ( clicked ( ) )
>341	ArgumentList	clicked ( )
>342	Argument	clicked ( )
>343	CallExpression	clicked ( )
>344	ArgumentList	 
>345	Callee	clicked
>346	Identifier	clicked
>347	Callee	SIGNAL
>348	Identifier	SIGNAL
>349	Argument	addHostButton
>350	Identifier	addHostButton
>351	Callee	connect
>352	Identifier	connect
>353	ExpressionStatement	 
>354	CallExpression	connect ( selSyncCheck , SIGNAL ( stateChanged ( int ) ) , this , SLOT ( changed ( ) ) )
>355	ArgumentList	selSyncCheck
>356	Argument	SLOT ( changed ( ) )
>357	CallExpression	SLOT ( changed ( ) )
>358	ArgumentList	changed ( )
>359	Argument	changed ( )
>360	CallExpression	changed ( )
>361	ArgumentList	 
>362	Callee	changed
>363	Identifier	changed
>364	Callee	SLOT
>365	Identifier	SLOT
>366	Argument	this
>367	Identifier	this
>368	Argument	SIGNAL ( stateChanged ( int ) )
>369	CallExpression	SIGNAL ( stateChanged ( int ) )
>370	ArgumentList	stateChanged ( int )
>371	Argument	stateChanged ( int )
>372	CallExpression	stateChanged ( int )
>373	ArgumentList	int
>374	Argument	int
>375	Identifier	int
>376	Callee	stateChanged
>377	Identifier	stateChanged
>378	Callee	SIGNAL
>379	Identifier	SIGNAL
>380	Argument	selSyncCheck
>381	Identifier	selSyncCheck
>382	Callee	connect
>383	Identifier	connect
>384	ExpressionStatement	 
>385	CallExpression	connect ( overwriteCheck , SIGNAL ( stateChanged ( int ) ) , this , SLOT ( changed ( ) ) )
>386	ArgumentList	overwriteCheck
>387	Argument	SLOT ( changed ( ) )
>388	CallExpression	SLOT ( changed ( ) )
>389	ArgumentList	changed ( )
>390	Argument	changed ( )
>391	CallExpression	changed ( )
>392	ArgumentList	 
>393	Callee	changed
>394	Identifier	changed
>395	Callee	SLOT
>396	Identifier	SLOT
>397	Argument	this
>398	Identifier	this
>399	Argument	SIGNAL ( stateChanged ( int ) )
>400	CallExpression	SIGNAL ( stateChanged ( int ) )
>401	ArgumentList	stateChanged ( int )
>402	Argument	stateChanged ( int )
>403	CallExpression	stateChanged ( int )
>404	ArgumentList	int
>405	Argument	int
>406	Identifier	int
>407	Callee	stateChanged
>408	Identifier	stateChanged
>409	Callee	SIGNAL
>410	Identifier	SIGNAL
>411	Argument	overwriteCheck
>412	Identifier	overwriteCheck
>413	Callee	connect
>414	Identifier	connect
>415	ExpressionStatement	 
>416	CallExpression	connect ( predefHostsCheck , SIGNAL ( stateChanged ( int ) ) , this , SLOT ( changed ( ) ) )
>417	ArgumentList	predefHostsCheck
>418	Argument	SLOT ( changed ( ) )
>419	CallExpression	SLOT ( changed ( ) )
>420	ArgumentList	changed ( )
>421	Argument	changed ( )
>422	CallExpression	changed ( )
>423	ArgumentList	 
>424	Callee	changed
>425	Identifier	changed
>426	Callee	SLOT
>427	Identifier	SLOT
>428	Argument	this
>429	Identifier	this
>430	Argument	SIGNAL ( stateChanged ( int ) )
>431	CallExpression	SIGNAL ( stateChanged ( int ) )
>432	ArgumentList	stateChanged ( int )
>433	Argument	stateChanged ( int )
>434	CallExpression	stateChanged ( int )
>435	ArgumentList	int
>436	Argument	int
>437	Identifier	int
>438	Callee	stateChanged
>439	Identifier	stateChanged
>440	Callee	SIGNAL
>441	Identifier	SIGNAL
>442	Argument	predefHostsCheck
>443	Identifier	predefHostsCheck
>444	Callee	connect
>445	Identifier	connect
>446	ExpressionStatement	 
>447	CallExpression	connect ( archiveCheck , SIGNAL ( stateChanged ( int ) ) , this , SLOT ( changed ( ) ) )
>448	ArgumentList	archiveCheck
>449	Argument	SLOT ( changed ( ) )
>450	CallExpression	SLOT ( changed ( ) )
>451	ArgumentList	changed ( )
>452	Argument	changed ( )
>453	CallExpression	changed ( )
>454	ArgumentList	 
>455	Callee	changed
>456	Identifier	changed
>457	Callee	SLOT
>458	Identifier	SLOT
>459	Argument	this
>460	Identifier	this
>461	Argument	SIGNAL ( stateChanged ( int ) )
>462	CallExpression	SIGNAL ( stateChanged ( int ) )
>463	ArgumentList	stateChanged ( int )
>464	Argument	stateChanged ( int )
>465	CallExpression	stateChanged ( int )
>466	ArgumentList	int
>467	Argument	int
>468	Identifier	int
>469	Callee	stateChanged
>470	Identifier	stateChanged
>471	Callee	SIGNAL
>472	Identifier	SIGNAL
>473	Argument	archiveCheck
>474	Identifier	archiveCheck
>475	Callee	connect
>476	Identifier	connect
>477	ExpressionStatement	 
>478	CallExpression	connect ( dhtCheck , SIGNAL ( stateChanged ( int ) ) , this , SLOT ( changed ( ) ) )
>479	ArgumentList	dhtCheck
>480	Argument	SLOT ( changed ( ) )
>481	CallExpression	SLOT ( changed ( ) )
>482	ArgumentList	changed ( )
>483	Argument	changed ( )
>484	CallExpression	changed ( )
>485	ArgumentList	 
>486	Callee	changed
>487	Identifier	changed
>488	Callee	SLOT
>489	Identifier	SLOT
>490	Argument	this
>491	Identifier	this
>492	Argument	SIGNAL ( stateChanged ( int ) )
>493	CallExpression	SIGNAL ( stateChanged ( int ) )
>494	ArgumentList	stateChanged ( int )
>495	Argument	stateChanged ( int )
>496	CallExpression	stateChanged ( int )
>497	ArgumentList	int
>498	Argument	int
>499	Identifier	int
>500	Callee	stateChanged
>501	Identifier	stateChanged
>502	Callee	SIGNAL
>503	Identifier	SIGNAL
>504	Argument	dhtCheck
>505	Identifier	dhtCheck
>506	Callee	connect
>507	Identifier	connect
>508	ExpressionStatement	 
>509	CallExpression	connect ( lanCheck , SIGNAL ( stateChanged ( int ) ) , this , SLOT ( changed ( ) ) )
>510	ArgumentList	lanCheck
>511	Argument	SLOT ( changed ( ) )
>512	CallExpression	SLOT ( changed ( ) )
>513	ArgumentList	changed ( )
>514	Argument	changed ( )
>515	CallExpression	changed ( )
>516	ArgumentList	 
>517	Callee	changed
>518	Identifier	changed
>519	Callee	SLOT
>520	Identifier	SLOT
>521	Argument	this
>522	Identifier	this
>523	Argument	SIGNAL ( stateChanged ( int ) )
>524	CallExpression	SIGNAL ( stateChanged ( int ) )
>525	ArgumentList	stateChanged ( int )
>526	Argument	stateChanged ( int )
>527	CallExpression	stateChanged ( int )
>528	ArgumentList	int
>529	Argument	int
>530	Identifier	int
>531	Callee	stateChanged
>532	Identifier	stateChanged
>533	Callee	SIGNAL
>534	Identifier	SIGNAL
>535	Argument	lanCheck
>536	Identifier	lanCheck
>537	Callee	connect
>538	Identifier	connect
>539	ExpressionStatement	 
>540	CallExpression	connect ( trackerCheck , SIGNAL ( stateChanged ( int ) ) , this , SLOT ( changed ( ) ) )
>541	ArgumentList	trackerCheck
>542	Argument	SLOT ( changed ( ) )
>543	CallExpression	SLOT ( changed ( ) )
>544	ArgumentList	changed ( )
>545	Argument	changed ( )
>546	CallExpression	changed ( )
>547	ArgumentList	 
>548	Callee	changed
>549	Identifier	changed
>550	Callee	SLOT
>551	Identifier	SLOT
>552	Argument	this
>553	Identifier	this
>554	Argument	SIGNAL ( stateChanged ( int ) )
>555	CallExpression	SIGNAL ( stateChanged ( int ) )
>556	ArgumentList	stateChanged ( int )
>557	Argument	stateChanged ( int )
>558	CallExpression	stateChanged ( int )
>559	ArgumentList	int
>560	Argument	int
>561	Identifier	int
>562	Callee	stateChanged
>563	Identifier	stateChanged
>564	Callee	SIGNAL
>565	Identifier	SIGNAL
>566	Argument	trackerCheck
>567	Identifier	trackerCheck
>568	Callee	connect
>569	Identifier	connect
>570	ExpressionStatement	 
>571	CallExpression	connect ( relayCheck , SIGNAL ( stateChanged ( int ) ) , this , SLOT ( changed ( ) ) )
>572	ArgumentList	relayCheck
>573	Argument	SLOT ( changed ( ) )
>574	CallExpression	SLOT ( changed ( ) )
>575	ArgumentList	changed ( )
>576	Argument	changed ( )
>577	CallExpression	changed ( )
>578	ArgumentList	 
>579	Callee	changed
>580	Identifier	changed
>581	Callee	SLOT
>582	Identifier	SLOT
>583	Argument	this
>584	Identifier	this
>585	Argument	SIGNAL ( stateChanged ( int ) )
>586	CallExpression	SIGNAL ( stateChanged ( int ) )
>587	ArgumentList	stateChanged ( int )
>588	Argument	stateChanged ( int )
>589	CallExpression	stateChanged ( int )
>590	ArgumentList	int
>591	Argument	int
>592	Identifier	int
>593	Callee	stateChanged
>594	Identifier	stateChanged
>595	Callee	SIGNAL
>596	Identifier	SIGNAL
>597	Argument	relayCheck
>598	Identifier	relayCheck
>599	Callee	connect
>600	Identifier	connect
>601	ExpressionStatement	 
>602	CallExpression	connect ( ecOnlyRadio , SIGNAL ( clicked ( ) ) , this , SLOT ( updateQr ( ) ) )
>603	ArgumentList	ecOnlyRadio
>604	Argument	SLOT ( updateQr ( ) )
>605	CallExpression	SLOT ( updateQr ( ) )
>606	ArgumentList	updateQr ( )
>607	Argument	updateQr ( )
>608	CallExpression	updateQr ( )
>609	ArgumentList	 
>610	Callee	updateQr
>611	Identifier	updateQr
>612	Callee	SLOT
>613	Identifier	SLOT
>614	Argument	this
>615	Identifier	this
>616	Argument	SIGNAL ( clicked ( ) )
>617	CallExpression	SIGNAL ( clicked ( ) )
>618	ArgumentList	clicked ( )
>619	Argument	clicked ( )
>620	CallExpression	clicked ( )
>621	ArgumentList	 
>622	Callee	clicked
>623	Identifier	clicked
>624	Callee	SIGNAL
>625	Identifier	SIGNAL
>626	Argument	ecOnlyRadio
>627	Identifier	ecOnlyRadio
>628	Callee	connect
>629	Identifier	connect
>630	ExpressionStatement	 
>631	CallExpression	connect ( fullAccessRadio , SIGNAL ( clicked ( ) ) , this , SLOT ( updateQr ( ) ) )
>632	ArgumentList	fullAccessRadio
>633	Argument	SLOT ( updateQr ( ) )
>634	CallExpression	SLOT ( updateQr ( ) )
>635	ArgumentList	updateQr ( )
>636	Argument	updateQr ( )
>637	CallExpression	updateQr ( )
>638	ArgumentList	 
>639	Callee	updateQr
>640	Identifier	updateQr
>641	Callee	SLOT
>642	Identifier	SLOT
>643	Argument	this
>644	Identifier	this
>645	Argument	SIGNAL ( clicked ( ) )
>646	CallExpression	SIGNAL ( clicked ( ) )
>647	ArgumentList	clicked ( )
>648	Argument	clicked ( )
>649	CallExpression	clicked ( )
>650	ArgumentList	 
>651	Callee	clicked
>652	Identifier	clicked
>653	Callee	SIGNAL
>654	Identifier	SIGNAL
>655	Argument	fullAccessRadio
>656	Identifier	fullAccessRadio
>657	Callee	connect
>658	Identifier	connect
>659	ExpressionStatement	 
>660	CallExpression	connect ( readOnlyRadio , SIGNAL ( clicked ( ) ) , this , SLOT ( updateQr ( ) ) )
>661	ArgumentList	readOnlyRadio
>662	Argument	SLOT ( updateQr ( ) )
>663	CallExpression	SLOT ( updateQr ( ) )
>664	ArgumentList	updateQr ( )
>665	Argument	updateQr ( )
>666	CallExpression	updateQr ( )
>667	ArgumentList	 
>668	Callee	updateQr
>669	Identifier	updateQr
>670	Callee	SLOT
>671	Identifier	SLOT
>672	Argument	this
>673	Identifier	this
>674	Argument	SIGNAL ( clicked ( ) )
>675	CallExpression	SIGNAL ( clicked ( ) )
>676	ArgumentList	clicked ( )
>677	Argument	clicked ( )
>678	CallExpression	clicked ( )
>679	ArgumentList	 
>680	Callee	clicked
>681	Identifier	clicked
>682	Callee	SIGNAL
>683	Identifier	SIGNAL
>684	Argument	readOnlyRadio
>685	Identifier	readOnlyRadio
>686	Callee	connect
>687	Identifier	connect
>688	ExpressionStatement	 
>689	CallExpression	connect ( applyButton , SIGNAL ( clicked ( ) ) , this , SLOT ( onApplyButton ( ) ) )
>690	ArgumentList	applyButton
>691	Argument	SLOT ( onApplyButton ( ) )
>692	CallExpression	SLOT ( onApplyButton ( ) )
>693	ArgumentList	onApplyButton ( )
>694	Argument	onApplyButton ( )
>695	CallExpression	onApplyButton ( )
>696	ArgumentList	 
>697	Callee	onApplyButton
>698	Identifier	onApplyButton
>699	Callee	SLOT
>700	Identifier	SLOT
>701	Argument	this
>702	Identifier	this
>703	Argument	SIGNAL ( clicked ( ) )
>704	CallExpression	SIGNAL ( clicked ( ) )
>705	ArgumentList	clicked ( )
>706	Argument	clicked ( )
>707	CallExpression	clicked ( )
>708	ArgumentList	 
>709	Callee	clicked
>710	Identifier	clicked
>711	Callee	SIGNAL
>712	Identifier	SIGNAL
>713	Argument	applyButton
>714	Identifier	applyButton
>715	Callee	connect
>716	Identifier	connect
>717	ExpressionStatement	 
>718	CallExpression	connect ( okButton , SIGNAL ( clicked ( ) ) , this , SLOT ( onOkButton ( ) ) )
>719	ArgumentList	okButton
>720	Argument	SLOT ( onOkButton ( ) )
>721	CallExpression	SLOT ( onOkButton ( ) )
>722	ArgumentList	onOkButton ( )
>723	Argument	onOkButton ( )
>724	CallExpression	onOkButton ( )
>725	ArgumentList	 
>726	Callee	onOkButton
>727	Identifier	onOkButton
>728	Callee	SLOT
>729	Identifier	SLOT
>730	Argument	this
>731	Identifier	this
>732	Argument	SIGNAL ( clicked ( ) )
>733	CallExpression	SIGNAL ( clicked ( ) )
>734	ArgumentList	clicked ( )
>735	Argument	clicked ( )
>736	CallExpression	clicked ( )
>737	ArgumentList	 
>738	Callee	clicked
>739	Identifier	clicked
>740	Callee	SIGNAL
>741	Identifier	SIGNAL
>742	Argument	okButton
>743	Identifier	okButton
>744	Callee	connect
>745	Identifier	connect
>746	ExpressionStatement	 
>747	CallExpression	connect ( copyEcSecretButton , SIGNAL ( clicked ( ) ) , this , SLOT ( onCopyEcSecret ( ) ) )
>748	ArgumentList	copyEcSecretButton
>749	Argument	SLOT ( onCopyEcSecret ( ) )
>750	CallExpression	SLOT ( onCopyEcSecret ( ) )
>751	ArgumentList	onCopyEcSecret ( )
>752	Argument	onCopyEcSecret ( )
>753	CallExpression	onCopyEcSecret ( )
>754	ArgumentList	 
>755	Callee	onCopyEcSecret
>756	Identifier	onCopyEcSecret
>757	Callee	SLOT
>758	Identifier	SLOT
>759	Argument	this
>760	Identifier	this
>761	Argument	SIGNAL ( clicked ( ) )
>762	CallExpression	SIGNAL ( clicked ( ) )
>763	ArgumentList	clicked ( )
>764	Argument	clicked ( )
>765	CallExpression	clicked ( )
>766	ArgumentList	 
>767	Callee	clicked
>768	Identifier	clicked
>769	Callee	SIGNAL
>770	Identifier	SIGNAL
>771	Argument	copyEcSecretButton
>772	Identifier	copyEcSecretButton
>773	Callee	connect
>774	Identifier	connect
>775	ExpressionStatement	 
>776	CallExpression	connect ( copyRoSecretButton , SIGNAL ( clicked ( ) ) , this , SLOT ( onCopyRoSecret ( ) ) )
>777	ArgumentList	copyRoSecretButton
>778	Argument	SLOT ( onCopyRoSecret ( ) )
>779	CallExpression	SLOT ( onCopyRoSecret ( ) )
>780	ArgumentList	onCopyRoSecret ( )
>781	Argument	onCopyRoSecret ( )
>782	CallExpression	onCopyRoSecret ( )
>783	ArgumentList	 
>784	Callee	onCopyRoSecret
>785	Identifier	onCopyRoSecret
>786	Callee	SLOT
>787	Identifier	SLOT
>788	Argument	this
>789	Identifier	this
>790	Argument	SIGNAL ( clicked ( ) )
>791	CallExpression	SIGNAL ( clicked ( ) )
>792	ArgumentList	clicked ( )
>793	Argument	clicked ( )
>794	CallExpression	clicked ( )
>795	ArgumentList	 
>796	Callee	clicked
>797	Identifier	clicked
>798	Callee	SIGNAL
>799	Identifier	SIGNAL
>800	Argument	copyRoSecretButton
>801	Identifier	copyRoSecretButton
>802	Callee	connect
>803	Identifier	connect
>804	ExpressionStatement	 
>805	CallExpression	connect ( copySecretButton , SIGNAL ( clicked ( ) ) , this , SLOT ( onCopySecret ( ) ) )
>806	ArgumentList	copySecretButton
>807	Argument	SLOT ( onCopySecret ( ) )
>808	CallExpression	SLOT ( onCopySecret ( ) )
>809	ArgumentList	onCopySecret ( )
>810	Argument	onCopySecret ( )
>811	CallExpression	onCopySecret ( )
>812	ArgumentList	 
>813	Callee	onCopySecret
>814	Identifier	onCopySecret
>815	Callee	SLOT
>816	Identifier	SLOT
>817	Argument	this
>818	Identifier	this
>819	Argument	SIGNAL ( clicked ( ) )
>820	CallExpression	SIGNAL ( clicked ( ) )
>821	ArgumentList	clicked ( )
>822	Argument	clicked ( )
>823	CallExpression	clicked ( )
>824	ArgumentList	 
>825	Callee	clicked
>826	Identifier	clicked
>827	Callee	SIGNAL
>828	Identifier	SIGNAL
>829	Argument	copySecretButton
>830	Identifier	copySecretButton
>831	Callee	connect
>832	Identifier	connect
>833	ExpressionStatement	 
>834	CallExpression	connect ( updatePeersTimer , SIGNAL ( timeout ( ) ) , folderApi , SLOT ( getFolderPeers ( ) ) )
>835	ArgumentList	updatePeersTimer
>836	Argument	SLOT ( getFolderPeers ( ) )
>837	CallExpression	SLOT ( getFolderPeers ( ) )
>838	ArgumentList	getFolderPeers ( )
>839	Argument	getFolderPeers ( )
>840	CallExpression	getFolderPeers ( )
>841	ArgumentList	 
>842	Callee	getFolderPeers
>843	Identifier	getFolderPeers
>844	Callee	SLOT
>845	Identifier	SLOT
>846	Argument	folderApi
>847	Identifier	folderApi
>848	Argument	SIGNAL ( timeout ( ) )
>849	CallExpression	SIGNAL ( timeout ( ) )
>850	ArgumentList	timeout ( )
>851	Argument	timeout ( )
>852	CallExpression	timeout ( )
>853	ArgumentList	 
>854	Callee	timeout
>855	Identifier	timeout
>856	Callee	SIGNAL
>857	Identifier	SIGNAL
>858	Argument	updatePeersTimer
>859	Identifier	updatePeersTimer
>860	Callee	connect
>861	Identifier	connect
>862	ExpressionStatement	 
>863	CallExpression	updatePeersTimer -> start ( )
>864	ArgumentList	 
>865	Callee	updatePeersTimer -> start
>866	PtrMemberAccess	updatePeersTimer -> start
>867	Identifier	start
>868	Identifier	updatePeersTimer
>869	ExpressionStatement	 
>870	CallExpression	updatePeersTimer -> setSingleShot ( false )
>871	ArgumentList	false
>872	Argument	false
>873	Identifier	false
>874	Callee	updatePeersTimer -> setSingleShot
>875	PtrMemberAccess	updatePeersTimer -> setSingleShot
>876	Identifier	setSingleShot
>877	Identifier	updatePeersTimer
>878	ExpressionStatement	 
>879	CallExpression	updatePeersTimer -> setInterval ( 2000 )
>880	ArgumentList	2000
>881	Argument	2000
>882	PrimaryExpression	2000
>883	Callee	updatePeersTimer -> setInterval
>884	PtrMemberAccess	updatePeersTimer -> setInterval
>885	Identifier	setInterval
>886	Identifier	updatePeersTimer
>887	IdentifierDeclStatement	 
>888	IdentifierDecl	* updatePeersTimer = new QTimer ( this )
>889	AssignmentExpr	* updatePeersTimer = new QTimer ( this )
>890	Identifier	this
>891	Identifier	this
>892	Identifier	updatePeersTimer
>893	IdentifierDeclType	QTimer *
>894	ExpressionStatement	 
>895	CallExpression	applyButton -> setEnabled ( false )
>896	ArgumentList	false
>897	Argument	false
>898	Identifier	false
>899	Callee	applyButton -> setEnabled
>900	PtrMemberAccess	applyButton -> setEnabled
>901	Identifier	setEnabled
>902	Identifier	applyButton
>903	ExpressionStatement	 
>904	AssignmentExpr	applyButton = dialogButtons -> button ( QDialogButtonBox 
>905	CallExpression	dialogButtons -> button ( QDialogButtonBox 
>906	ArgumentList	QDialogButtonBox 
>907	Argument	QDialogButtonBox 
>908	Identifier	QDialogButtonBox 
>909	Callee	dialogButtons -> button
>910	PtrMemberAccess	dialogButtons -> button
>911	Identifier	button
>912	Identifier	dialogButtons
>913	Identifier	applyButton
>914	IdentifierDeclStatement	 
>915	IdentifierDecl	* okButton = dialogButtons -> button ( QDialogButtonBox 
>916	AssignmentExpr	* okButton = dialogButtons -> button ( QDialogButtonBox 
>917	CallExpression	dialogButtons -> button ( QDialogButtonBox 
>918	ArgumentList	QDialogButtonBox 
>919	Argument	QDialogButtonBox 
>920	Identifier	QDialogButtonBox 
>921	Callee	dialogButtons -> button
>922	PtrMemberAccess	dialogButtons -> button
>923	Identifier	button
>924	Identifier	dialogButtons
>925	Identifier	okButton
>926	Identifier	okButton
>927	IdentifierDeclType	QPushButton *
>928	ExpressionStatement	 
>929	AssignmentExpr	folderApi = new BtsApiFolder ( api , folderSecret , this )
>930	Expression	api , folderSecret , this
>931	Expression	folderSecret , this
>932	Identifier	this
>933	Identifier	folderSecret
>934	Identifier	api
>935	Identifier	folderApi
>936	IfStatement	if ( ! api || folderSecret . isEmpty ( ) )
>937	ExpressionStatement	 
>938	CallExpression	qFatal ( \"Invalid api/secret for FolderInfoDialog\" )
>939	ArgumentList	\"Invalid api/secret for FolderInfoDialog\"
>940	Argument	\"Invalid api/secret for FolderInfoDialog\"
>941	PrimaryExpression	\"Invalid api/secret for FolderInfoDialog\"
>942	Callee	qFatal
>943	Identifier	qFatal
>944	Condition	 
>945	OrExpression	! api || folderSecret . isEmpty ( )
>946	CallExpression	folderSecret . isEmpty ( )
>947	ArgumentList	 
>948	Callee	folderSecret . isEmpty
>949	MemberAccess	folderSecret . isEmpty
>950	Identifier	isEmpty
>951	Identifier	folderSecret
>952	UnaryOp	! api
>953	Identifier	api
>954	UnaryOperator	!
>955	ExpressionStatement	 
>956	CallExpression	setupUi ( this )
>957	ArgumentList	this
>958	Argument	this
>959	Identifier	this
>960	Callee	setupUi
>961	Identifier	setupUi
>1024	FunctionDef	FolderInfoDialog 
>1025	ParameterList	 
>1026	ReturnType	void
>1027	CompoundStatement	 
>1028	ExpressionStatement	 
>1029	CallExpression	QApplication 
>1030	ArgumentList	secretEdit -> text ( )
>1031	Argument	secretEdit -> text ( )
>1032	CallExpression	secretEdit -> text ( )
>1033	ArgumentList	 
>1034	Callee	secretEdit -> text
>1035	PtrMemberAccess	secretEdit -> text
>1036	Identifier	text
>1037	Identifier	secretEdit
>1038	Callee	QApplication 
>1039	PtrMemberAccess	QApplication 
>1040	Identifier	setText
>1041	CallExpression	QApplication 
>1042	ArgumentList	 
>1043	Callee	QApplication 
>1044	Identifier	QApplication 
>1052	FunctionDef	FolderInfoDialog 
>1053	ParameterList	 
>1054	ReturnType	void
>1055	CompoundStatement	 
>1056	ExpressionStatement	 
>1057	CallExpression	QApplication 
>1058	ArgumentList	roSecretEdit -> text ( )
>1059	Argument	roSecretEdit -> text ( )
>1060	CallExpression	roSecretEdit -> text ( )
>1061	ArgumentList	 
>1062	Callee	roSecretEdit -> text
>1063	PtrMemberAccess	roSecretEdit -> text
>1064	Identifier	text
>1065	Identifier	roSecretEdit
>1066	Callee	QApplication 
>1067	PtrMemberAccess	QApplication 
>1068	Identifier	setText
>1069	CallExpression	QApplication 
>1070	ArgumentList	 
>1071	Callee	QApplication 
>1072	Identifier	QApplication 
>1080	FunctionDef	FolderInfoDialog 
>1081	ParameterList	 
>1082	ReturnType	void
>1083	CompoundStatement	 
>1084	ExpressionStatement	 
>1085	CallExpression	QApplication 
>1086	ArgumentList	ecSecretEdit -> text ( )
>1087	Argument	ecSecretEdit -> text ( )
>1088	CallExpression	ecSecretEdit -> text ( )
>1089	ArgumentList	 
>1090	Callee	ecSecretEdit -> text
>1091	PtrMemberAccess	ecSecretEdit -> text
>1092	Identifier	text
>1093	Identifier	ecSecretEdit
>1094	Callee	QApplication 
>1095	PtrMemberAccess	QApplication 
>1096	Identifier	setText
>1097	CallExpression	QApplication 
>1098	ArgumentList	 
>1099	Callee	QApplication 
>1100	Identifier	QApplication 
>1108	FunctionDef	FolderInfoDialog 
>1109	ParameterList	 
>1110	ReturnType	void
>1111	CompoundStatement	 
>1112	ExpressionStatement	 
>1113	CallExpression	accept ( )
>1114	ArgumentList	 
>1115	Callee	accept
>1116	Identifier	accept
>1117	IfStatement	if ( applyButton -> isEnabled ( ) )
>1118	ExpressionStatement	 
>1119	CallExpression	onApplyButton ( )
>1120	ArgumentList	 
>1121	Callee	onApplyButton
>1122	Identifier	onApplyButton
>1123	Condition	 
>1124	CallExpression	applyButton -> isEnabled ( )
>1125	ArgumentList	 
>1126	Callee	applyButton -> isEnabled
>1127	PtrMemberAccess	applyButton -> isEnabled
>1128	Identifier	isEnabled
>1129	Identifier	applyButton
>1136	FunctionDef	FolderInfoDialog 
>1137	ParameterList	 
>1138	ReturnType	void
>1139	CompoundStatement	 
>1140	ExpressionStatement	 
>1141	CallExpression	sendCurHosts ( )
>1142	ArgumentList	 
>1143	Callee	sendCurHosts
>1144	Identifier	sendCurHosts
>1145	ExpressionStatement	 
>1146	Statement	 
>1147	CompoundStatement	 
>1148	ExpressionStatement	 
>1149	CallExpression	QMessageBox 
>1150	ArgumentList	this
>1151	Argument	tr ( \"An error occured while saving the folder preferences
>1152	CallExpression	tr ( \"An error occured while saving the folder preferences
>1153	ArgumentList	error
>1154	Argument	error
>1155	Identifier	error
>1156	Callee	tr ( \"An error occured while saving the folder preferences
>1157	MemberAccess	tr ( \"An error occured while saving the folder preferences
>1158	Identifier	arg
>1159	CallExpression	tr ( \"An error occured while saving the folder preferences
>1160	ArgumentList	\"An error occured while saving the folder preferences
>1161	Argument	\"An error occured while saving the folder preferences
>1162	PrimaryExpression	\"An error occured while saving the folder preferences
>1163	Callee	tr
>1164	Identifier	tr
>1165	Argument	tr ( \"Failed saving preferences\" )
>1166	CallExpression	tr ( \"Failed saving preferences\" )
>1167	ArgumentList	\"Failed saving preferences\"
>1168	Argument	\"Failed saving preferences\"
>1169	PrimaryExpression	\"Failed saving preferences\"
>1170	Callee	tr
>1171	Identifier	tr
>1172	Argument	this
>1173	Identifier	this
>1174	Callee	QMessageBox 
>1175	Identifier	QMessageBox 
>1176	ExpressionStatement	 
>1177	CallExpression	folderApi -> getFolderPrefs ( )
>1178	ArgumentList	 
>1179	Callee	folderApi -> getFolderPrefs
>1180	PtrMemberAccess	folderApi -> getFolderPrefs
>1181	Identifier	getFolderPrefs
>1182	Identifier	folderApi
>1183	Statement	 
>1184	Statement	 
>1185	Statement	 
>1186	Statement	 
>1187	Statement	 
>1188	Statement	 
>1189	Statement	 
>1190	Statement	 
>1191	Statement	 
>1192	Statement	 
>1193	Statement	 
>1194	Statement	 
>1195	Statement	 
>1196	Statement	 
>1197	Statement	 
>1198	Statement	 
>1199	Statement	 
>1200	Statement	 
>1201	Statement	 
>1202	Statement	 
>1203	Statement	 
>1204	Statement	 
>1205	Statement	 
>1206	Statement	 
>1207	Statement	 
>1208	ExpressionStatement	 
>1209	AssignmentExpr	prefs [ \"selective_sync\" ] = selSyncCheck -> isChecked ( ) ? 1 
>1210	ConditionalExpression	selSyncCheck -> isChecked ( ) ? 1 
>1211	PrimaryExpression	0
>1212	PrimaryExpression	1
>1213	Condition	selSyncCheck -> isChecked ( )
>1214	CallExpression	selSyncCheck -> isChecked ( )
>1215	ArgumentList	 
>1216	Callee	selSyncCheck -> isChecked
>1217	PtrMemberAccess	selSyncCheck -> isChecked
>1218	Identifier	isChecked
>1219	Identifier	selSyncCheck
>1220	ArrayIndexing	prefs [ \"selective_sync\" ]
>1221	PrimaryExpression	\"selective_sync\"
>1222	Identifier	prefs
>1223	ExpressionStatement	 
>1224	AssignmentExpr	prefs [ \"overwrite_changes\" ] = overwriteCheck -> isChecked ( ) ? 1 
>1225	ConditionalExpression	overwriteCheck -> isChecked ( ) ? 1 
>1226	PrimaryExpression	0
>1227	PrimaryExpression	1
>1228	Condition	overwriteCheck -> isChecked ( )
>1229	CallExpression	overwriteCheck -> isChecked ( )
>1230	ArgumentList	 
>1231	Callee	overwriteCheck -> isChecked
>1232	PtrMemberAccess	overwriteCheck -> isChecked
>1233	Identifier	isChecked
>1234	Identifier	overwriteCheck
>1235	ArrayIndexing	prefs [ \"overwrite_changes\" ]
>1236	PrimaryExpression	\"overwrite_changes\"
>1237	Identifier	prefs
>1238	ExpressionStatement	 
>1239	AssignmentExpr	prefs [ \"use_hosts\" ] = predefHostsCheck -> isChecked ( ) ? 1 
>1240	ConditionalExpression	predefHostsCheck -> isChecked ( ) ? 1 
>1241	PrimaryExpression	0
>1242	PrimaryExpression	1
>1243	Condition	predefHostsCheck -> isChecked ( )
>1244	CallExpression	predefHostsCheck -> isChecked ( )
>1245	ArgumentList	 
>1246	Callee	predefHostsCheck -> isChecked
>1247	PtrMemberAccess	predefHostsCheck -> isChecked
>1248	Identifier	isChecked
>1249	Identifier	predefHostsCheck
>1250	ArrayIndexing	prefs [ \"use_hosts\" ]
>1251	PrimaryExpression	\"use_hosts\"
>1252	Identifier	prefs
>1253	ExpressionStatement	 
>1254	AssignmentExpr	prefs [ \"use_sync_trash\" ] = archiveCheck -> isChecked ( ) ? 1 
>1255	ConditionalExpression	archiveCheck -> isChecked ( ) ? 1 
>1256	PrimaryExpression	0
>1257	PrimaryExpression	1
>1258	Condition	archiveCheck -> isChecked ( )
>1259	CallExpression	archiveCheck -> isChecked ( )
>1260	ArgumentList	 
>1261	Callee	archiveCheck -> isChecked
>1262	PtrMemberAccess	archiveCheck -> isChecked
>1263	Identifier	isChecked
>1264	Identifier	archiveCheck
>1265	ArrayIndexing	prefs [ \"use_sync_trash\" ]
>1266	PrimaryExpression	\"use_sync_trash\"
>1267	Identifier	prefs
>1268	ExpressionStatement	 
>1269	AssignmentExpr	prefs [ \"use_dht\" ] = dhtCheck -> isChecked ( ) ? 1 
>1270	ConditionalExpression	dhtCheck -> isChecked ( ) ? 1 
>1271	PrimaryExpression	0
>1272	PrimaryExpression	1
>1273	Condition	dhtCheck -> isChecked ( )
>1274	CallExpression	dhtCheck -> isChecked ( )
>1275	ArgumentList	 
>1276	Callee	dhtCheck -> isChecked
>1277	PtrMemberAccess	dhtCheck -> isChecked
>1278	Identifier	isChecked
>1279	Identifier	dhtCheck
>1280	ArrayIndexing	prefs [ \"use_dht\" ]
>1281	PrimaryExpression	\"use_dht\"
>1282	Identifier	prefs
>1283	ExpressionStatement	 
>1284	AssignmentExpr	prefs [ \"search_lan\" ] = lanCheck -> isChecked ( ) ? 1 
>1285	ConditionalExpression	lanCheck -> isChecked ( ) ? 1 
>1286	PrimaryExpression	0
>1287	PrimaryExpression	1
>1288	Condition	lanCheck -> isChecked ( )
>1289	CallExpression	lanCheck -> isChecked ( )
>1290	ArgumentList	 
>1291	Callee	lanCheck -> isChecked
>1292	PtrMemberAccess	lanCheck -> isChecked
>1293	Identifier	isChecked
>1294	Identifier	lanCheck
>1295	ArrayIndexing	prefs [ \"search_lan\" ]
>1296	PrimaryExpression	\"search_lan\"
>1297	Identifier	prefs
>1298	ExpressionStatement	 
>1299	AssignmentExpr	prefs [ \"use_tracker\" ] = trackerCheck -> isChecked ( ) ? 1 
>1300	ConditionalExpression	trackerCheck -> isChecked ( ) ? 1 
>1301	PrimaryExpression	0
>1302	PrimaryExpression	1
>1303	Condition	trackerCheck -> isChecked ( )
>1304	CallExpression	trackerCheck -> isChecked ( )
>1305	ArgumentList	 
>1306	Callee	trackerCheck -> isChecked
>1307	PtrMemberAccess	trackerCheck -> isChecked
>1308	Identifier	isChecked
>1309	Identifier	trackerCheck
>1310	ArrayIndexing	prefs [ \"use_tracker\" ]
>1311	PrimaryExpression	\"use_tracker\"
>1312	Identifier	prefs
>1313	ExpressionStatement	 
>1314	AssignmentExpr	prefs [ \"use_relay_server\" ] = relayCheck -> isChecked ( ) ? 1 
>1315	ConditionalExpression	relayCheck -> isChecked ( ) ? 1 
>1316	PrimaryExpression	0
>1317	PrimaryExpression	1
>1318	Condition	relayCheck -> isChecked ( )
>1319	CallExpression	relayCheck -> isChecked ( )
>1320	ArgumentList	 
>1321	Callee	relayCheck -> isChecked
>1322	PtrMemberAccess	relayCheck -> isChecked
>1323	Identifier	isChecked
>1324	Identifier	relayCheck
>1325	ArrayIndexing	prefs [ \"use_relay_server\" ]
>1326	PrimaryExpression	\"use_relay_server\"
>1327	Identifier	prefs
>1328	IdentifierDeclStatement	 
>1329	IdentifierDecl	prefs
>1330	Identifier	prefs
>1331	IdentifierDeclType	QVariantHash
>1366	FunctionDef	FolderInfoDialog 
>1367	ParameterList	 
>1368	ReturnType	void
>1369	CompoundStatement	 
>1370	ExpressionStatement	 
>1371	CallExpression	applyButton -> setEnabled ( true )
>1372	ArgumentList	true
>1373	Argument	true
>1374	Identifier	true
>1375	Callee	applyButton -> setEnabled
>1376	PtrMemberAccess	applyButton -> setEnabled
>1377	Identifier	setEnabled
>1378	Identifier	applyButton
>1379	IfStatement	if ( blockChanges )
>1380	ReturnStatement	 
>1381	Condition	 
>1382	Identifier	blockChanges
>1389	FunctionDef	FolderInfoDialog 
>1390	ParameterList	 
>1391	ReturnType	void
>1392	CompoundStatement	 
>1393	ExpressionStatement	 
>1394	CallExpression	qrCodeWidget -> setText ( qrString )
>1395	ArgumentList	qrString
>1396	Argument	qrString
>1397	Identifier	qrString
>1398	Callee	qrCodeWidget -> setText
>1399	PtrMemberAccess	qrCodeWidget -> setText
>1400	Identifier	setText
>1401	Identifier	qrCodeWidget
>1402	IdentifierDeclStatement	 
>1403	IdentifierDecl	qrString = QString ( \"btsync
>1404	AssignmentExpr	qrString = QString ( \"btsync
>1405	CallExpression	QString ( \"btsync
>1406	ArgumentList	name
>1407	Argument	name
>1408	Identifier	name
>1409	Callee	QString ( \"btsync
>1410	MemberAccess	QString ( \"btsync
>1411	Identifier	arg
>1412	CallExpression	QString ( \"btsync
>1413	ArgumentList	secret
>1414	Argument	secret
>1415	Identifier	secret
>1416	Callee	QString ( \"btsync
>1417	MemberAccess	QString ( \"btsync
>1418	Identifier	arg
>1419	CallExpression	QString ( \"btsync
>1420	ArgumentList	\"btsync
>1421	Argument	\"btsync
>1422	PrimaryExpression	\"btsync
>1423	Callee	QString
>1424	Identifier	QString
>1425	Identifier	qrString
>1426	Identifier	qrString
>1427	IdentifierDeclType	QString
>1428	IfStatement	if ( readOnlyRadio -> isChecked ( ) )
>1429	ElseStatement	else
>1430	IfStatement	if ( ecOnlyRadio -> isChecked ( ) )
>1431	ExpressionStatement	 
>1432	AssignmentExpr	secret = ecSecret
>1433	Identifier	ecSecret
>1434	Identifier	secret
>1435	Condition	 
>1436	CallExpression	ecOnlyRadio -> isChecked ( )
>1437	ArgumentList	 
>1438	Callee	ecOnlyRadio -> isChecked
>1439	PtrMemberAccess	ecOnlyRadio -> isChecked
>1440	Identifier	isChecked
>1441	Identifier	ecOnlyRadio
>1442	ExpressionStatement	 
>1443	AssignmentExpr	secret = roSecret
>1444	Identifier	roSecret
>1445	Identifier	secret
>1446	Condition	 
>1447	CallExpression	readOnlyRadio -> isChecked ( )
>1448	ArgumentList	 
>1449	Callee	readOnlyRadio -> isChecked
>1450	PtrMemberAccess	readOnlyRadio -> isChecked
>1451	Identifier	isChecked
>1452	Identifier	readOnlyRadio
>1453	IdentifierDeclStatement	 
>1454	IdentifierDecl	secret = rwSecret
>1455	AssignmentExpr	secret = rwSecret
>1456	Identifier	rwSecret
>1457	Identifier	rwSecret
>1458	Identifier	secret
>1459	IdentifierDeclType	QString
>1479	FunctionDef	FolderInfoDialog 
>1480	ParameterList	 
>1481	ReturnType	void
>1482	CompoundStatement	 
>1483	ExpressionStatement	 
>1484	CallExpression	changed ( )
>1485	ArgumentList	 
>1486	Callee	changed
>1487	Identifier	changed
>1488	ExpressionStatement	 
>1489	CallExpression	newHostEdit -> clear ( )
>1490	ArgumentList	 
>1491	Callee	newHostEdit -> clear
>1492	PtrMemberAccess	newHostEdit -> clear
>1493	Identifier	clear
>1494	Identifier	newHostEdit
>1495	ExpressionStatement	 
>1496	CallExpression	hostsList -> addItem ( newHostEdit -> text ( ) )
>1497	ArgumentList	newHostEdit -> text ( )
>1498	Argument	newHostEdit -> text ( )
>1499	CallExpression	newHostEdit -> text ( )
>1500	ArgumentList	 
>1501	Callee	newHostEdit -> text
>1502	PtrMemberAccess	newHostEdit -> text
>1503	Identifier	text
>1504	Identifier	newHostEdit
>1505	Callee	hostsList -> addItem
>1506	PtrMemberAccess	hostsList -> addItem
>1507	Identifier	addItem
>1508	Identifier	hostsList
>1509	IfStatement	if ( ! hostMatch . exactMatch ( txt ) )
>1510	ReturnStatement	 
>1511	Condition	 
>1512	UnaryOp	! hostMatch . exactMatch ( txt )
>1513	CallExpression	hostMatch . exactMatch ( txt )
>1514	ArgumentList	txt
>1515	Argument	txt
>1516	Identifier	txt
>1517	Callee	hostMatch . exactMatch
>1518	MemberAccess	hostMatch . exactMatch
>1519	Identifier	exactMatch
>1520	Identifier	hostMatch
>1521	UnaryOperator	!
>1522	IdentifierDeclStatement	 
>1523	IdentifierDecl	hostMatch ( \"^[\\.a-zA-Z0-9\\-\\_]+
>1524	PrimaryExpression	\"^[\\.a-zA-Z0-9\\-\\_]+
>1525	Identifier	hostMatch
>1526	IdentifierDeclType	QRegExp
>1527	IdentifierDeclStatement	 
>1528	IdentifierDecl	txt = newHostEdit -> text ( ) . trimmed ( )
>1529	AssignmentExpr	txt = newHostEdit -> text ( ) . trimmed ( )
>1530	CallExpression	newHostEdit -> text ( ) . trimmed ( )
>1531	ArgumentList	 
>1532	Callee	newHostEdit -> text ( ) . trimmed
>1533	MemberAccess	newHostEdit -> text ( ) . trimmed
>1534	Identifier	trimmed
>1535	CallExpression	newHostEdit -> text ( )
>1536	ArgumentList	 
>1537	Callee	newHostEdit -> text
>1538	PtrMemberAccess	newHostEdit -> text
>1539	Identifier	text
>1540	Identifier	newHostEdit
>1541	Identifier	txt
>1542	Identifier	txt
>1543	IdentifierDeclType	QString
>1555	FunctionDef	FolderInfoDialog 
>1556	ParameterList	 
>1557	ReturnType	void
>1558	CompoundStatement	 
>1559	ExpressionStatement	 
>1560	CallExpression	changed ( )
>1561	ArgumentList	 
>1562	Callee	changed
>1563	Identifier	changed
>1564	CompoundStatement	 
>1565	ExpressionStatement	 
>1566	Identifier	item
>1567	Statement	 
>1568	Statement	 
>1569	Statement	 
>1570	Statement	 
>1571	Statement	 
>1572	Statement	 
>1573	Statement	 
>1574	Label	 
>1575	Identifier	item
>1576	Statement	 
>1577	Statement	 
>1578	Statement	 
>1579	Statement	 
>1583	FunctionDef	FolderInfoDialog 
>1584	ParameterList	 
>1585	ReturnType	void
>1586	CompoundStatement	 
>1587	ExpressionStatement	 
>1588	Statement	 
>1589	CompoundStatement	 
>1590	ExpressionStatement	 
>1591	CallExpression	QMessageBox 
>1592	ArgumentList	this
>1593	Argument	tr ( \"An error occured while saving the predefines hosts
>1594	CallExpression	tr ( \"An error occured while saving the predefines hosts
>1595	ArgumentList	error
>1596	Argument	error
>1597	Identifier	error
>1598	Callee	tr ( \"An error occured while saving the predefines hosts
>1599	MemberAccess	tr ( \"An error occured while saving the predefines hosts
>1600	Identifier	arg
>1601	CallExpression	tr ( \"An error occured while saving the predefines hosts
>1602	ArgumentList	\"An error occured while saving the predefines hosts
>1603	Argument	\"An error occured while saving the predefines hosts
>1604	PrimaryExpression	\"An error occured while saving the predefines hosts
>1605	Callee	tr
>1606	Identifier	tr
>1607	Argument	tr ( \"Failed saving predefined hosts\" )
>1608	CallExpression	tr ( \"Failed saving predefined hosts\" )
>1609	ArgumentList	\"Failed saving predefined hosts\"
>1610	Argument	\"Failed saving predefined hosts\"
>1611	PrimaryExpression	\"Failed saving predefined hosts\"
>1612	Callee	tr
>1613	Identifier	tr
>1614	Argument	this
>1615	Identifier	this
>1616	Callee	QMessageBox 
>1617	Identifier	QMessageBox 
>1618	ExpressionStatement	 
>1619	CallExpression	folderApi -> getFolderHosts ( )
>1620	ArgumentList	 
>1621	Callee	folderApi -> getFolderHosts
>1622	PtrMemberAccess	folderApi -> getFolderHosts
>1623	Identifier	getFolderHosts
>1624	Identifier	folderApi
>1625	Statement	 
>1626	Statement	 
>1627	Statement	 
>1628	Statement	 
>1629	Statement	 
>1630	Statement	 
>1631	Statement	 
>1632	Statement	 
>1633	Statement	 
>1634	Statement	 
>1635	Statement	 
>1636	Statement	 
>1637	Statement	 
>1638	Statement	 
>1639	Statement	 
>1640	Statement	 
>1641	Statement	 
>1642	Statement	 
>1643	Statement	 
>1644	Statement	 
>1645	Statement	 
>1646	Statement	 
>1647	Statement	 
>1648	Statement	 
>1649	Statement	 
>1650	Statement	 
>1651	Statement	 
>1652	Statement	 
>1653	ForStatement	for ( int i = 0 ; i < hostsList -> count ( ) ; ++ i )
>1654	CompoundStatement	 
>1655	ExpressionStatement	 
>1656	ShiftExpression	hosts << hostsList -> item ( i ) -> text ( )
>1657	CallExpression	hostsList -> item ( i ) -> text ( )
>1658	ArgumentList	 
>1659	Callee	hostsList -> item ( i ) -> text
>1660	PtrMemberAccess	hostsList -> item ( i ) -> text
>1661	Identifier	text
>1662	CallExpression	hostsList -> item ( i )
>1663	ArgumentList	i
>1664	Argument	i
>1665	Identifier	i
>1666	Callee	hostsList -> item
>1667	PtrMemberAccess	hostsList -> item
>1668	Identifier	item
>1669	Identifier	hostsList
>1670	Identifier	hosts
>1671	UnaryExpression	 
>1672	Identifier	i
>1673	IncDec	++
>1674	Condition	 
>1675	RelationalExpression	i < hostsList -> count ( )
>1676	CallExpression	hostsList -> count ( )
>1677	ArgumentList	 
>1678	Callee	hostsList -> count
>1679	PtrMemberAccess	hostsList -> count
>1680	Identifier	count
>1681	Identifier	hostsList
>1682	Identifier	i
>1683	ForInit	 
>1684	IdentifierDeclStatement	int i = 0 ;
>1685	IdentifierDecl	i = 0
>1686	AssignmentExpr	i = 0
>1687	PrimaryExpression	0
>1688	Identifier	i
>1689	Identifier	i
>1690	IdentifierDeclType	int
>1691	IdentifierDeclStatement	 
>1692	IdentifierDecl	hosts
>1693	Identifier	hosts
>1694	IdentifierDeclType	QStringList
>1709	FunctionDef	FolderInfoDialog 
>1710	ParameterList	const QString & rw , const QString & ro , const QString & ec
>1711	Parameter	 
>1712	Identifier	ec
>1713	ParameterType	const QString &
>1714	Parameter	 
>1715	Identifier	ro
>1716	ParameterType	const QString &
>1717	Parameter	 
>1718	Identifier	rw
>1719	ParameterType	const QString &
>1720	ReturnType	void
>1721	CompoundStatement	 
>1722	ExpressionStatement	 
>1723	CallExpression	updateQr ( )
>1724	ArgumentList	 
>1725	Callee	updateQr
>1726	Identifier	updateQr
>1727	IfStatement	if ( ! ec . isEmpty ( ) )
>1728	ExpressionStatement	 
>1729	CallExpression	ecOnlyRadio -> setEnabled ( true )
>1730	ArgumentList	true
>1731	Argument	true
>1732	Identifier	true
>1733	Callee	ecOnlyRadio -> setEnabled
>1734	PtrMemberAccess	ecOnlyRadio -> setEnabled
>1735	Identifier	setEnabled
>1736	Identifier	ecOnlyRadio
>1737	Condition	 
>1738	UnaryOp	! ec . isEmpty ( )
>1739	CallExpression	ec . isEmpty ( )
>1740	ArgumentList	 
>1741	Callee	ec . isEmpty
>1742	MemberAccess	ec . isEmpty
>1743	Identifier	isEmpty
>1744	Identifier	ec
>1745	UnaryOperator	!
>1746	ExpressionStatement	 
>1747	AssignmentExpr	ecSecret = ec
>1748	Identifier	ec
>1749	Identifier	ecSecret
>1750	ExpressionStatement	 
>1751	AssignmentExpr	rwSecret = rw
>1752	Identifier	rw
>1753	Identifier	rwSecret
>1754	ExpressionStatement	 
>1755	AssignmentExpr	roSecret = ro
>1756	Identifier	ro
>1757	Identifier	roSecret
>1758	ExpressionStatement	 
>1759	CallExpression	ecSecretEdit -> setText ( ec )
>1760	ArgumentList	ec
>1761	Argument	ec
>1762	Identifier	ec
>1763	Callee	ecSecretEdit -> setText
>1764	PtrMemberAccess	ecSecretEdit -> setText
>1765	Identifier	setText
>1766	Identifier	ecSecretEdit
>1767	ExpressionStatement	 
>1768	CallExpression	roSecretEdit -> setText ( ro )
>1769	ArgumentList	ro
>1770	Argument	ro
>1771	Identifier	ro
>1772	Callee	roSecretEdit -> setText
>1773	PtrMemberAccess	roSecretEdit -> setText
>1774	Identifier	setText
>1775	Identifier	roSecretEdit
>1776	ExpressionStatement	 
>1777	CallExpression	secretEdit -> setText ( rw )
>1778	ArgumentList	rw
>1779	Argument	rw
>1780	Identifier	rw
>1781	Callee	secretEdit -> setText
>1782	PtrMemberAccess	secretEdit -> setText
>1783	Identifier	setText
>1784	Identifier	secretEdit
>1800	FunctionDef	FolderInfoDialog 
>1801	ParameterList	const QStringList & hosts
>1802	Parameter	 
>1803	Identifier	hosts
>1804	ParameterType	const QStringList &
>1805	ReturnType	void
>1806	CompoundStatement	 
>1807	ExpressionStatement	 
>1808	CallExpression	newHostEdit -> setEnabled ( true )
>1809	ArgumentList	true
>1810	Argument	true
>1811	Identifier	true
>1812	Callee	newHostEdit -> setEnabled
>1813	PtrMemberAccess	newHostEdit -> setEnabled
>1814	Identifier	setEnabled
>1815	Identifier	newHostEdit
>1816	ExpressionStatement	 
>1817	CallExpression	removeHostButton -> setEnabled ( true )
>1818	ArgumentList	true
>1819	Argument	true
>1820	Identifier	true
>1821	Callee	removeHostButton -> setEnabled
>1822	PtrMemberAccess	removeHostButton -> setEnabled
>1823	Identifier	setEnabled
>1824	Identifier	removeHostButton
>1825	ExpressionStatement	 
>1826	CallExpression	addHostButton -> setEnabled ( true )
>1827	ArgumentList	true
>1828	Argument	true
>1829	Identifier	true
>1830	Callee	addHostButton -> setEnabled
>1831	PtrMemberAccess	addHostButton -> setEnabled
>1832	Identifier	setEnabled
>1833	Identifier	addHostButton
>1834	ExpressionStatement	 
>1835	CallExpression	hostsList -> setEnabled ( true )
>1836	ArgumentList	true
>1837	Argument	true
>1838	Identifier	true
>1839	Callee	hostsList -> setEnabled
>1840	PtrMemberAccess	hostsList -> setEnabled
>1841	Identifier	setEnabled
>1842	Identifier	hostsList
>1843	ExpressionStatement	 
>1844	CallExpression	hostsList -> addItems ( hosts )
>1845	ArgumentList	hosts
>1846	Argument	hosts
>1847	Identifier	hosts
>1848	Callee	hostsList -> addItems
>1849	PtrMemberAccess	hostsList -> addItems
>1850	Identifier	addItems
>1851	Identifier	hostsList
>1852	ExpressionStatement	 
>1853	CallExpression	hostsList -> clear ( )
>1854	ArgumentList	 
>1855	Callee	hostsList -> clear
>1856	PtrMemberAccess	hostsList -> clear
>1857	Identifier	clear
>1858	Identifier	hostsList
>1868	FunctionDef	FolderInfoDialog 
>1869	ParameterList	const QVariantHash & prefs
>1870	Parameter	 
>1871	Identifier	prefs
>1872	ParameterType	const QVariantHash &
>1873	ReturnType	void
>1874	CompoundStatement	 
>1875	ExpressionStatement	 
>1876	AssignmentExpr	blockChanges = false
>1877	Identifier	false
>1878	Identifier	blockChanges
>1879	ExpressionStatement	 
>1880	CallExpression	selSyncCheck -> setChecked ( prefs . value ( \"selective_sync\" ) . toInt ( ) == 1 )
>1881	ArgumentList	prefs . value ( \"selective_sync\" ) . toInt ( ) == 1
>1882	Argument	prefs . value ( \"selective_sync\" ) . toInt ( ) == 1
>1883	EqualityExpression	prefs . value ( \"selective_sync\" ) . toInt ( ) == 1
>1884	PrimaryExpression	1
>1885	CallExpression	prefs . value ( \"selective_sync\" ) . toInt ( )
>1886	ArgumentList	 
>1887	Callee	prefs . value ( \"selective_sync\" ) . toInt
>1888	MemberAccess	prefs . value ( \"selective_sync\" ) . toInt
>1889	Identifier	toInt
>1890	CallExpression	prefs . value ( \"selective_sync\" )
>1891	ArgumentList	\"selective_sync\"
>1892	Argument	\"selective_sync\"
>1893	PrimaryExpression	\"selective_sync\"
>1894	Callee	prefs . value
>1895	MemberAccess	prefs . value
>1896	Identifier	value
>1897	Identifier	prefs
>1898	Callee	selSyncCheck -> setChecked
>1899	PtrMemberAccess	selSyncCheck -> setChecked
>1900	Identifier	setChecked
>1901	Identifier	selSyncCheck
>1902	ExpressionStatement	 
>1903	CallExpression	overwriteCheck -> setChecked ( prefs . value ( \"overwrite_changes\" ) . toInt ( ) == 1 )
>1904	ArgumentList	prefs . value ( \"overwrite_changes\" ) . toInt ( ) == 1
>1905	Argument	prefs . value ( \"overwrite_changes\" ) . toInt ( ) == 1
>1906	EqualityExpression	prefs . value ( \"overwrite_changes\" ) . toInt ( ) == 1
>1907	PrimaryExpression	1
>1908	CallExpression	prefs . value ( \"overwrite_changes\" ) . toInt ( )
>1909	ArgumentList	 
>1910	Callee	prefs . value ( \"overwrite_changes\" ) . toInt
>1911	MemberAccess	prefs . value ( \"overwrite_changes\" ) . toInt
>1912	Identifier	toInt
>1913	CallExpression	prefs . value ( \"overwrite_changes\" )
>1914	ArgumentList	\"overwrite_changes\"
>1915	Argument	\"overwrite_changes\"
>1916	PrimaryExpression	\"overwrite_changes\"
>1917	Callee	prefs . value
>1918	MemberAccess	prefs . value
>1919	Identifier	value
>1920	Identifier	prefs
>1921	Callee	overwriteCheck -> setChecked
>1922	PtrMemberAccess	overwriteCheck -> setChecked
>1923	Identifier	setChecked
>1924	Identifier	overwriteCheck
>1925	ExpressionStatement	 
>1926	CallExpression	predefHostsCheck -> setChecked ( prefs . value ( \"use_hosts\" ) . toInt ( ) == 1 )
>1927	ArgumentList	prefs . value ( \"use_hosts\" ) . toInt ( ) == 1
>1928	Argument	prefs . value ( \"use_hosts\" ) . toInt ( ) == 1
>1929	EqualityExpression	prefs . value ( \"use_hosts\" ) . toInt ( ) == 1
>1930	PrimaryExpression	1
>1931	CallExpression	prefs . value ( \"use_hosts\" ) . toInt ( )
>1932	ArgumentList	 
>1933	Callee	prefs . value ( \"use_hosts\" ) . toInt
>1934	MemberAccess	prefs . value ( \"use_hosts\" ) . toInt
>1935	Identifier	toInt
>1936	CallExpression	prefs . value ( \"use_hosts\" )
>1937	ArgumentList	\"use_hosts\"
>1938	Argument	\"use_hosts\"
>1939	PrimaryExpression	\"use_hosts\"
>1940	Callee	prefs . value
>1941	MemberAccess	prefs . value
>1942	Identifier	value
>1943	Identifier	prefs
>1944	Callee	predefHostsCheck -> setChecked
>1945	PtrMemberAccess	predefHostsCheck -> setChecked
>1946	Identifier	setChecked
>1947	Identifier	predefHostsCheck
>1948	ExpressionStatement	 
>1949	CallExpression	archiveCheck -> setChecked ( prefs . value ( \"use_sync_trash\" ) . toInt ( ) == 1 )
>1950	ArgumentList	prefs . value ( \"use_sync_trash\" ) . toInt ( ) == 1
>1951	Argument	prefs . value ( \"use_sync_trash\" ) . toInt ( ) == 1
>1952	EqualityExpression	prefs . value ( \"use_sync_trash\" ) . toInt ( ) == 1
>1953	PrimaryExpression	1
>1954	CallExpression	prefs . value ( \"use_sync_trash\" ) . toInt ( )
>1955	ArgumentList	 
>1956	Callee	prefs . value ( \"use_sync_trash\" ) . toInt
>1957	MemberAccess	prefs . value ( \"use_sync_trash\" ) . toInt
>1958	Identifier	toInt
>1959	CallExpression	prefs . value ( \"use_sync_trash\" )
>1960	ArgumentList	\"use_sync_trash\"
>1961	Argument	\"use_sync_trash\"
>1962	PrimaryExpression	\"use_sync_trash\"
>1963	Callee	prefs . value
>1964	MemberAccess	prefs . value
>1965	Identifier	value
>1966	Identifier	prefs
>1967	Callee	archiveCheck -> setChecked
>1968	PtrMemberAccess	archiveCheck -> setChecked
>1969	Identifier	setChecked
>1970	Identifier	archiveCheck
>1971	ExpressionStatement	 
>1972	CallExpression	dhtCheck -> setChecked ( prefs . value ( \"use_dht\" ) . toInt ( ) == 1 )
>1973	ArgumentList	prefs . value ( \"use_dht\" ) . toInt ( ) == 1
>1974	Argument	prefs . value ( \"use_dht\" ) . toInt ( ) == 1
>1975	EqualityExpression	prefs . value ( \"use_dht\" ) . toInt ( ) == 1
>1976	PrimaryExpression	1
>1977	CallExpression	prefs . value ( \"use_dht\" ) . toInt ( )
>1978	ArgumentList	 
>1979	Callee	prefs . value ( \"use_dht\" ) . toInt
>1980	MemberAccess	prefs . value ( \"use_dht\" ) . toInt
>1981	Identifier	toInt
>1982	CallExpression	prefs . value ( \"use_dht\" )
>1983	ArgumentList	\"use_dht\"
>1984	Argument	\"use_dht\"
>1985	PrimaryExpression	\"use_dht\"
>1986	Callee	prefs . value
>1987	MemberAccess	prefs . value
>1988	Identifier	value
>1989	Identifier	prefs
>1990	Callee	dhtCheck -> setChecked
>1991	PtrMemberAccess	dhtCheck -> setChecked
>1992	Identifier	setChecked
>1993	Identifier	dhtCheck
>1994	ExpressionStatement	 
>1995	CallExpression	lanCheck -> setChecked ( prefs . value ( \"search_lan\" ) . toInt ( ) == 1 )
>1996	ArgumentList	prefs . value ( \"search_lan\" ) . toInt ( ) == 1
>1997	Argument	prefs . value ( \"search_lan\" ) . toInt ( ) == 1
>1998	EqualityExpression	prefs . value ( \"search_lan\" ) . toInt ( ) == 1
>1999	PrimaryExpression	1
>2000	CallExpression	prefs . value ( \"search_lan\" ) . toInt ( )
>2001	ArgumentList	 
>2002	Callee	prefs . value ( \"search_lan\" ) . toInt
>2003	MemberAccess	prefs . value ( \"search_lan\" ) . toInt
>2004	Identifier	toInt
>2005	CallExpression	prefs . value ( \"search_lan\" )
>2006	ArgumentList	\"search_lan\"
>2007	Argument	\"search_lan\"
>2008	PrimaryExpression	\"search_lan\"
>2009	Callee	prefs . value
>2010	MemberAccess	prefs . value
>2011	Identifier	value
>2012	Identifier	prefs
>2013	Callee	lanCheck -> setChecked
>2014	PtrMemberAccess	lanCheck -> setChecked
>2015	Identifier	setChecked
>2016	Identifier	lanCheck
>2017	ExpressionStatement	 
>2018	CallExpression	trackerCheck -> setChecked ( prefs . value ( \"use_tracker\" ) . toInt ( ) == 1 )
>2019	ArgumentList	prefs . value ( \"use_tracker\" ) . toInt ( ) == 1
>2020	Argument	prefs . value ( \"use_tracker\" ) . toInt ( ) == 1
>2021	EqualityExpression	prefs . value ( \"use_tracker\" ) . toInt ( ) == 1
>2022	PrimaryExpression	1
>2023	CallExpression	prefs . value ( \"use_tracker\" ) . toInt ( )
>2024	ArgumentList	 
>2025	Callee	prefs . value ( \"use_tracker\" ) . toInt
>2026	MemberAccess	prefs . value ( \"use_tracker\" ) . toInt
>2027	Identifier	toInt
>2028	CallExpression	prefs . value ( \"use_tracker\" )
>2029	ArgumentList	\"use_tracker\"
>2030	Argument	\"use_tracker\"
>2031	PrimaryExpression	\"use_tracker\"
>2032	Callee	prefs . value
>2033	MemberAccess	prefs . value
>2034	Identifier	value
>2035	Identifier	prefs
>2036	Callee	trackerCheck -> setChecked
>2037	PtrMemberAccess	trackerCheck -> setChecked
>2038	Identifier	setChecked
>2039	Identifier	trackerCheck
>2040	ExpressionStatement	 
>2041	CallExpression	relayCheck -> setChecked ( prefs . value ( \"use_relay_server\" ) . toInt ( ) == 1 )
>2042	ArgumentList	prefs . value ( \"use_relay_server\" ) . toInt ( ) == 1
>2043	Argument	prefs . value ( \"use_relay_server\" ) . toInt ( ) == 1
>2044	EqualityExpression	prefs . value ( \"use_relay_server\" ) . toInt ( ) == 1
>2045	PrimaryExpression	1
>2046	CallExpression	prefs . value ( \"use_relay_server\" ) . toInt ( )
>2047	ArgumentList	 
>2048	Callee	prefs . value ( \"use_relay_server\" ) . toInt
>2049	MemberAccess	prefs . value ( \"use_relay_server\" ) . toInt
>2050	Identifier	toInt
>2051	CallExpression	prefs . value ( \"use_relay_server\" )
>2052	ArgumentList	\"use_relay_server\"
>2053	Argument	\"use_relay_server\"
>2054	PrimaryExpression	\"use_relay_server\"
>2055	Callee	prefs . value
>2056	MemberAccess	prefs . value
>2057	Identifier	value
>2058	Identifier	prefs
>2059	Callee	relayCheck -> setChecked
>2060	PtrMemberAccess	relayCheck -> setChecked
>2061	Identifier	setChecked
>2062	Identifier	relayCheck
>2063	ExpressionStatement	 
>2064	AssignmentExpr	blockChanges = true
>2065	Identifier	true
>2066	Identifier	blockChanges
>2067	ExpressionStatement	 
>2068	CallExpression	applyButton -> setEnabled ( false )
>2069	ArgumentList	false
>2070	Argument	false
>2071	Identifier	false
>2072	Callee	applyButton -> setEnabled
>2073	PtrMemberAccess	applyButton -> setEnabled
>2074	Identifier	setEnabled
>2075	Identifier	applyButton
>2076	ExpressionStatement	 
>2077	CallExpression	selSyncCheck -> setEnabled ( true )
>2078	ArgumentList	true
>2079	Argument	true
>2080	Identifier	true
>2081	Callee	selSyncCheck -> setEnabled
>2082	PtrMemberAccess	selSyncCheck -> setEnabled
>2083	Identifier	setEnabled
>2084	Identifier	selSyncCheck
>2085	ExpressionStatement	 
>2086	CallExpression	overwriteCheck -> setEnabled ( true )
>2087	ArgumentList	true
>2088	Argument	true
>2089	Identifier	true
>2090	Callee	overwriteCheck -> setEnabled
>2091	PtrMemberAccess	overwriteCheck -> setEnabled
>2092	Identifier	setEnabled
>2093	Identifier	overwriteCheck
>2094	ExpressionStatement	 
>2095	CallExpression	predefHostsCheck -> setEnabled ( true )
>2096	ArgumentList	true
>2097	Argument	true
>2098	Identifier	true
>2099	Callee	predefHostsCheck -> setEnabled
>2100	PtrMemberAccess	predefHostsCheck -> setEnabled
>2101	Identifier	setEnabled
>2102	Identifier	predefHostsCheck
>2103	ExpressionStatement	 
>2104	CallExpression	archiveCheck -> setEnabled ( true )
>2105	ArgumentList	true
>2106	Argument	true
>2107	Identifier	true
>2108	Callee	archiveCheck -> setEnabled
>2109	PtrMemberAccess	archiveCheck -> setEnabled
>2110	Identifier	setEnabled
>2111	Identifier	archiveCheck
>2112	ExpressionStatement	 
>2113	CallExpression	dhtCheck -> setEnabled ( true )
>2114	ArgumentList	true
>2115	Argument	true
>2116	Identifier	true
>2117	Callee	dhtCheck -> setEnabled
>2118	PtrMemberAccess	dhtCheck -> setEnabled
>2119	Identifier	setEnabled
>2120	Identifier	dhtCheck
>2121	ExpressionStatement	 
>2122	CallExpression	lanCheck -> setEnabled ( true )
>2123	ArgumentList	true
>2124	Argument	true
>2125	Identifier	true
>2126	Callee	lanCheck -> setEnabled
>2127	PtrMemberAccess	lanCheck -> setEnabled
>2128	Identifier	setEnabled
>2129	Identifier	lanCheck
>2130	ExpressionStatement	 
>2131	CallExpression	trackerCheck -> setEnabled ( true )
>2132	ArgumentList	true
>2133	Argument	true
>2134	Identifier	true
>2135	Callee	trackerCheck -> setEnabled
>2136	PtrMemberAccess	trackerCheck -> setEnabled
>2137	Identifier	setEnabled
>2138	Identifier	trackerCheck
>2139	ExpressionStatement	 
>2140	CallExpression	relayCheck -> setEnabled ( true )
>2141	ArgumentList	true
>2142	Argument	true
>2143	Identifier	true
>2144	Callee	relayCheck -> setEnabled
>2145	PtrMemberAccess	relayCheck -> setEnabled
>2146	Identifier	setEnabled
>2147	Identifier	relayCheck
>2173	FunctionDef	FolderInfoDialog 
>2174	ParameterList	const QVector < BtsGetFoldersResult > & results
>2175	Parameter	 
>2176	Identifier	results
>2177	ParameterType	const QVector < BtsGetFoldersResult > &
>2178	ReturnType	void
>2179	CompoundStatement	 
>2180	ExpressionStatement	 
>2181	CallExpression	updateQr ( )
>2182	ArgumentList	 
>2183	Callee	updateQr
>2184	Identifier	updateQr
>2185	ExpressionStatement	 
>2186	AssignmentExpr	name = thisDir . dir . mid ( thisDir . dir . lastIndexOf ( QRegExp ( \"[\\\\/]\" ) ) + 1 )
>2187	CallExpression	thisDir . dir . mid ( thisDir . dir . lastIndexOf ( QRegExp ( \"[\\\\/]\" ) ) + 1 )
>2188	ArgumentList	thisDir . dir . lastIndexOf ( QRegExp ( \"[\\\\/]\" ) ) + 1
>2189	Argument	thisDir . dir . lastIndexOf ( QRegExp ( \"[\\\\/]\" ) ) + 1
>2190	AdditiveExpression	thisDir . dir . lastIndexOf ( QRegExp ( \"[\\\\/]\" ) ) + 1
>2191	PrimaryExpression	1
>2192	CallExpression	thisDir . dir . lastIndexOf ( QRegExp ( \"[\\\\/]\" ) )
>2193	ArgumentList	QRegExp ( \"[\\\\/]\" )
>2194	Argument	QRegExp ( \"[\\\\/]\" )
>2195	CallExpression	QRegExp ( \"[\\\\/]\" )
>2196	ArgumentList	\"[\\\\/]\"
>2197	Argument	\"[\\\\/]\"
>2198	PrimaryExpression	\"[\\\\/]\"
>2199	Callee	QRegExp
>2200	Identifier	QRegExp
>2201	Callee	thisDir . dir . lastIndexOf
>2202	MemberAccess	thisDir . dir . lastIndexOf
>2203	Identifier	lastIndexOf
>2204	MemberAccess	thisDir . dir
>2205	Identifier	dir
>2206	Identifier	thisDir
>2207	Callee	thisDir . dir . mid
>2208	MemberAccess	thisDir . dir . mid
>2209	Identifier	mid
>2210	MemberAccess	thisDir . dir
>2211	Identifier	dir
>2212	Identifier	thisDir
>2213	Identifier	name
>2214	ExpressionStatement	 
>2215	CallExpression	pathEdit -> setText ( dir )
>2216	ArgumentList	dir
>2217	Argument	dir
>2218	Identifier	dir
>2219	Callee	pathEdit -> setText
>2220	PtrMemberAccess	pathEdit -> setText
>2221	Identifier	setText
>2222	Identifier	pathEdit
>2223	IfStatement	if ( dir . startsWith ( \"\\\\?\\\" ) )
>2224	ExpressionStatement	 
>2225	AssignmentExpr	dir = dir . mid ( 4 )
>2226	CallExpression	dir . mid ( 4 )
>2227	ArgumentList	4
>2228	Argument	4
>2229	PrimaryExpression	4
>2230	Callee	dir . mid
>2231	MemberAccess	dir . mid
>2232	Identifier	mid
>2233	Identifier	dir
>2234	Identifier	dir
>2235	Condition	 
>2236	CallExpression	dir . startsWith ( \"\\\\?\\\" )
>2237	ArgumentList	\"\\\\?\\\"
>2238	Argument	\"\\\\?\\\"
>2239	PrimaryExpression	\"\\\\?\\\"
>2240	Callee	dir . startsWith
>2241	MemberAccess	dir . startsWith
>2242	Identifier	startsWith
>2243	Identifier	dir
>2244	IdentifierDeclStatement	 
>2245	IdentifierDecl	dir = thisDir . dir
>2246	AssignmentExpr	dir = thisDir . dir
>2247	MemberAccess	thisDir . dir
>2248	Identifier	dir
>2249	Identifier	thisDir
>2250	Identifier	dir
>2251	Identifier	dir
>2252	IdentifierDeclType	QString
>2253	IdentifierDeclStatement	 
>2254	IdentifierDecl	& thisDir = results . first ( )
>2255	AssignmentExpr	& thisDir = results . first ( )
>2256	CallExpression	results . first ( )
>2257	ArgumentList	 
>2258	Callee	results . first
>2259	MemberAccess	results . first
>2260	Identifier	first
>2261	Identifier	results
>2262	Identifier	thisDir
>2263	Identifier	thisDir
>2264	IdentifierDeclType	const BtsGetFoldersResult &
>2265	IfStatement	if ( results . isEmpty ( ) )
>2266	ReturnStatement	 
>2267	Condition	 
>2268	CallExpression	results . isEmpty ( )
>2269	ArgumentList	 
>2270	Callee	results . isEmpty
>2271	MemberAccess	results . isEmpty
>2272	Identifier	isEmpty
>2273	Identifier	results
>2290	FunctionDef	FolderInfoDialog 
>2291	ParameterList	const QVector < BtsGetFolderPeersResult > & peers
>2292	Parameter	 
>2293	Identifier	peers
>2294	ParameterType	const QVector < BtsGetFolderPeersResult > &
>2295	ReturnType	void
>2296	CompoundStatement	 
>2297	CompoundStatement	 
>2298	ExpressionStatement	 
>2299	CallExpression	upItem -> setText ( byteCountToString ( peer . upload , true , false ) )
>2300	ArgumentList	byteCountToString ( peer . upload , true , false )
>2301	Argument	byteCountToString ( peer . upload , true , false )
>2302	CallExpression	byteCountToString ( peer . upload , true , false )
>2303	ArgumentList	peer . upload
>2304	Argument	false
>2305	Identifier	false
>2306	Argument	true
>2307	Identifier	true
>2308	Argument	peer . upload
>2309	MemberAccess	peer . upload
>2310	Identifier	upload
>2311	Identifier	peer
>2312	Callee	byteCountToString
>2313	Identifier	byteCountToString
>2314	Callee	upItem -> setText
>2315	PtrMemberAccess	upItem -> setText
>2316	Identifier	setText
>2317	Identifier	upItem
>2318	ExpressionStatement	 
>2319	CallExpression	downItem -> setText ( byteCountToString ( peer . download , true , false ) )
>2320	ArgumentList	byteCountToString ( peer . download , true , false )
>2321	Argument	byteCountToString ( peer . download , true , false )
>2322	CallExpression	byteCountToString ( peer . download , true , false )
>2323	ArgumentList	peer . download
>2324	Argument	false
>2325	Identifier	false
>2326	Argument	true
>2327	Identifier	true
>2328	Argument	peer . download
>2329	MemberAccess	peer . download
>2330	Identifier	download
>2331	Identifier	peer
>2332	Callee	byteCountToString
>2333	Identifier	byteCountToString
>2334	Callee	downItem -> setText
>2335	PtrMemberAccess	downItem -> setText
>2336	Identifier	setText
>2337	Identifier	downItem
>2338	ExpressionStatement	 
>2339	CallExpression	syncItem -> setText ( time . toString ( ) )
>2340	ArgumentList	time . toString ( )
>2341	Argument	time . toString ( )
>2342	CallExpression	time . toString ( )
>2343	ArgumentList	 
>2344	Callee	time . toString
>2345	MemberAccess	time . toString
>2346	Identifier	toString
>2347	Identifier	time
>2348	Callee	syncItem -> setText
>2349	PtrMemberAccess	syncItem -> setText
>2350	Identifier	setText
>2351	Identifier	syncItem
>2352	ExpressionStatement	 
>2353	CallExpression	conItem -> setText ( peer . connection )
>2354	ArgumentList	peer . connection
>2355	Argument	peer . connection
>2356	MemberAccess	peer . connection
>2357	Identifier	connection
>2358	Identifier	peer
>2359	Callee	conItem -> setText
>2360	PtrMemberAccess	conItem -> setText
>2361	Identifier	setText
>2362	Identifier	conItem
>2363	ExpressionStatement	 
>2364	CallExpression	idItem -> setText ( peer . id )
>2365	ArgumentList	peer . id
>2366	Argument	peer . id
>2367	MemberAccess	peer . id
>2368	Identifier	id
>2369	Identifier	peer
>2370	Callee	idItem -> setText
>2371	PtrMemberAccess	idItem -> setText
>2372	Identifier	setText
>2373	Identifier	idItem
>2374	ExpressionStatement	 
>2375	CallExpression	nameItem -> setText ( peer . name )
>2376	ArgumentList	peer . name
>2377	Argument	peer . name
>2378	MemberAccess	peer . name
>2379	Identifier	name
>2380	Identifier	peer
>2381	Callee	nameItem -> setText
>2382	PtrMemberAccess	nameItem -> setText
>2383	Identifier	setText
>2384	Identifier	nameItem
>2385	IdentifierDeclStatement	 
>2386	IdentifierDecl	time = QDateTime 
>2387	AssignmentExpr	time = QDateTime 
>2388	CallExpression	QDateTime 
>2389	ArgumentList	peer . synced
>2390	Argument	peer . synced
>2391	MemberAccess	peer . synced
>2392	Identifier	synced
>2393	Identifier	peer
>2394	Callee	QDateTime 
>2395	Identifier	QDateTime 
>2396	Identifier	time
>2397	Identifier	time
>2398	IdentifierDeclType	QDateTime
>2399	IdentifierDeclStatement	 
>2400	IdentifierDecl	* upItem = items [ 5 ]
>2401	AssignmentExpr	* upItem = items [ 5 ]
>2402	ArrayIndexing	items [ 5 ]
>2403	PrimaryExpression	5
>2404	Identifier	items
>2405	Identifier	upItem
>2406	Identifier	upItem
>2407	IdentifierDeclType	QTableWidgetItem *
>2408	IdentifierDeclStatement	 
>2409	IdentifierDecl	* downItem = items [ 4 ]
>2410	AssignmentExpr	* downItem = items [ 4 ]
>2411	ArrayIndexing	items [ 4 ]
>2412	PrimaryExpression	4
>2413	Identifier	items
>2414	Identifier	downItem
>2415	Identifier	downItem
>2416	IdentifierDeclType	QTableWidgetItem *
>2417	IdentifierDeclStatement	 
>2418	IdentifierDecl	* syncItem = items [ 3 ]
>2419	AssignmentExpr	* syncItem = items [ 3 ]
>2420	ArrayIndexing	items [ 3 ]
>2421	PrimaryExpression	3
>2422	Identifier	items
>2423	Identifier	syncItem
>2424	Identifier	syncItem
>2425	IdentifierDeclType	QTableWidgetItem *
>2426	IdentifierDeclStatement	 
>2427	IdentifierDecl	* conItem = items [ 2 ]
>2428	AssignmentExpr	* conItem = items [ 2 ]
>2429	ArrayIndexing	items [ 2 ]
>2430	PrimaryExpression	2
>2431	Identifier	items
>2432	Identifier	conItem
>2433	Identifier	conItem
>2434	IdentifierDeclType	QTableWidgetItem *
>2435	IdentifierDeclStatement	 
>2436	IdentifierDecl	* idItem = items [ 1 ]
>2437	AssignmentExpr	* idItem = items [ 1 ]
>2438	ArrayIndexing	items [ 1 ]
>2439	PrimaryExpression	1
>2440	Identifier	items
>2441	Identifier	idItem
>2442	Identifier	idItem
>2443	IdentifierDeclType	QTableWidgetItem *
>2444	IdentifierDeclStatement	 
>2445	IdentifierDecl	* nameItem = items [ 0 ]
>2446	AssignmentExpr	* nameItem = items [ 0 ]
>2447	ArrayIndexing	items [ 0 ]
>2448	PrimaryExpression	0
>2449	Identifier	items
>2450	Identifier	nameItem
>2451	Identifier	nameItem
>2452	IdentifierDeclType	QTableWidgetItem *
>2453	ForStatement	for ( int i = 0 ; i < 6 ; ++ i )
>2454	CompoundStatement	 
>2455	IfStatement	if ( ! items [ i ] )
>2456	CompoundStatement	 
>2457	ExpressionStatement	 
>2458	CallExpression	peersTable -> setItem ( row , i , items [ i ] )
>2459	ArgumentList	row
>2460	Argument	items [ i ]
>2461	ArrayIndexing	items [ i ]
>2462	Identifier	i
>2463	Identifier	items
>2464	Argument	i
>2465	Identifier	i
>2466	Argument	row
>2467	Identifier	row
>2468	Callee	peersTable -> setItem
>2469	PtrMemberAccess	peersTable -> setItem
>2470	Identifier	setItem
>2471	Identifier	peersTable
>2472	ExpressionStatement	 
>2473	AssignmentExpr	items [ i ] = new QTableWidgetItem ( )
>2474	UnaryExpression	new QTableWidgetItem ( )
>2475	ArrayIndexing	items [ i ]
>2476	Identifier	i
>2477	Identifier	items
>2478	Condition	 
>2479	UnaryOp	! items [ i ]
>2480	ArrayIndexing	items [ i ]
>2481	Identifier	i
>2482	Identifier	items
>2483	UnaryOperator	!
>2484	ExpressionStatement	 
>2485	AssignmentExpr	items [ i ] = peersTable -> item ( row , i )
>2486	CallExpression	peersTable -> item ( row , i )
>2487	ArgumentList	row
>2488	Argument	i
>2489	Identifier	i
>2490	Argument	row
>2491	Identifier	row
>2492	Callee	peersTable -> item
>2493	PtrMemberAccess	peersTable -> item
>2494	Identifier	item
>2495	Identifier	peersTable
>2496	ArrayIndexing	items [ i ]
>2497	Identifier	i
>2498	Identifier	items
>2499	UnaryExpression	 
>2500	Identifier	i
>2501	IncDec	++
>2502	Condition	 
>2503	RelationalExpression	i < 6
>2504	PrimaryExpression	6
>2505	Identifier	i
>2506	ForInit	 
>2507	IdentifierDeclStatement	int i = 0 ;
>2508	IdentifierDecl	i = 0
>2509	AssignmentExpr	i = 0
>2510	PrimaryExpression	0
>2511	Identifier	i
>2512	Identifier	i
>2513	IdentifierDeclType	int
>2514	IdentifierDeclStatement	 
>2515	IdentifierDecl	* items [ 6 ]
>2516	PrimaryExpression	6
>2517	Identifier	items
>2518	IdentifierDeclType	QTableWidgetItem * [ 6 ]
>2519	ExpressionStatement	 
>2520	AssignmentExpr	row += 1
>2521	PrimaryExpression	1
>2522	Identifier	row
>2523	Statement	 
>2524	Statement	 
>2525	Label	 
>2526	Identifier	peer
>2527	Statement	 
>2528	Statement	 
>2529	Statement	 
>2530	Statement	 
>2531	Statement	 
>2532	IdentifierDeclStatement	 
>2533	IdentifierDecl	row = - 1
>2534	AssignmentExpr	row = - 1
>2535	UnaryOp	- 1
>2536	PrimaryExpression	1
>2537	UnaryOperator	-
>2538	Identifier	row
>2539	Identifier	row
>2540	IdentifierDeclType	int
>2541	IfStatement	if ( peersTable -> rowCount ( ) != peers . size ( ) )
>2542	ExpressionStatement	 
>2543	CallExpression	peersTable -> setRowCount ( peers . size ( ) )
>2544	ArgumentList	peers . size ( )
>2545	Argument	peers . size ( )
>2546	CallExpression	peers . size ( )
>2547	ArgumentList	 
>2548	Callee	peers . size
>2549	MemberAccess	peers . size
>2550	Identifier	size
>2551	Identifier	peers
>2552	Callee	peersTable -> setRowCount
>2553	PtrMemberAccess	peersTable -> setRowCount
>2554	Identifier	setRowCount
>2555	Identifier	peersTable
>2556	Condition	 
>2557	EqualityExpression	peersTable -> rowCount ( ) != peers . size ( )
>2558	CallExpression	peers . size ( )
>2559	ArgumentList	 
>2560	Callee	peers . size
>2561	MemberAccess	peers . size
>2562	Identifier	size
>2563	Identifier	peers
>2564	CallExpression	peersTable -> rowCount ( )
>2565	ArgumentList	 
>2566	Callee	peersTable -> rowCount
>2567	PtrMemberAccess	peersTable -> rowCount
>2568	Identifier	rowCount
>2569	Identifier	peersTable
<3=14,4
<4=11,8,5
<5=7,6
<8=10,9
<11=13,12
<14=955,936,928,914,903,894,887,878,869,862,833,804,775,746,717,688,659,630,601,570,539,508,477,446,415,384,353,324,295,254,219,184,149,114,113,112,111,110,109,108,107,106,105,104,103,102,101,100,99,98,97,15,22,29,36,43,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96
<15=16
<16=18,17
<18=19
<19=21,20
<22=23
<23=25,24
<25=26
<26=28,27
<29=30
<30=32,31
<32=33
<33=35,34
<36=37
<37=39,38
<39=40
<40=42,41
<43=44
<44=48,45
<45=46
<46=47
<48=49
<49=51,50
<114=115
<115=147,116
<116=145,131,129,117
<117=118
<118=127,119
<119=120
<120=121
<121=125,122
<122=123
<123=124
<125=126
<127=128
<129=130
<131=132
<132=143,133
<133=134
<134=135
<135=141,136
<136=139,137
<137=138
<139=140
<141=142
<143=144
<145=146
<147=148
<149=150
<150=182,151
<151=180,166,164,152
<152=153
<153=162,154
<154=155
<155=156
<156=160,157
<157=158
<158=159
<160=161
<162=163
<164=165
<166=167
<167=178,168
<168=169
<169=170
<170=176,171
<171=174,172
<172=173
<174=175
<176=177
<178=179
<180=181
<182=183
<184=185
<185=217,186
<186=215,201,199,187
<187=188
<188=197,189
<189=190
<190=191
<191=195,192
<192=193
<193=194
<195=196
<197=198
<199=200
<201=202
<202=213,203
<203=204
<204=205
<205=211,206
<206=209,207
<207=208
<209=210
<211=212
<213=214
<215=216
<217=218
<219=220
<220=252,221
<221=250,236,234,222
<222=223
<223=232,224
<224=225
<225=226
<226=230,227
<227=228
<228=229
<230=231
<232=233
<234=235
<236=237
<237=248,238
<238=239
<239=240
<240=246,241
<241=244,242
<242=243
<244=245
<246=247
<248=249
<250=251
<252=253
<254=255
<255=293,256
<256=291,275,273,257
<257=258
<258=271,259
<259=260
<260=261
<261=269,262
<262=267,265,263
<263=264
<265=266
<267=268
<269=270
<271=272
<273=274
<275=276
<276=289,277
<277=278
<278=279
<279=287,280
<280=285,283,281
<281=282
<283=284
<285=286
<287=288
<289=290
<291=292
<293=294
<295=296
<296=322,297
<297=320,310,308,298
<298=299
<299=306,300
<300=301
<301=302
<302=304,303
<304=305
<306=307
<308=309
<310=311
<311=318,312
<312=313
<313=314
<314=316,315
<316=317
<318=319
<320=321
<322=323
<324=325
<325=351,326
<326=349,339,337,327
<327=328
<328=335,329
<329=330
<330=331
<331=333,332
<333=334
<335=336
<337=338
<339=340
<340=347,341
<341=342
<342=343
<343=345,344
<345=346
<347=348
<349=350
<351=352
<353=354
<354=382,355
<355=380,368,366,356
<356=357
<357=364,358
<358=359
<359=360
<360=362,361
<362=363
<364=365
<366=367
<368=369
<369=378,370
<370=371
<371=372
<372=376,373
<373=374
<374=375
<376=377
<378=379
<380=381
<382=383
<384=385
<385=413,386
<386=411,399,397,387
<387=388
<388=395,389
<389=390
<390=391
<391=393,392
<393=394
<395=396
<397=398
<399=400
<400=409,401
<401=402
<402=403
<403=407,404
<404=405
<405=406
<407=408
<409=410
<411=412
<413=414
<415=416
<416=444,417
<417=442,430,428,418
<418=419
<419=426,420
<420=421
<421=422
<422=424,423
<424=425
<426=427
<428=429
<430=431
<431=440,432
<432=433
<433=434
<434=438,435
<435=436
<436=437
<438=439
<440=441
<442=443
<444=445
<446=447
<447=475,448
<448=473,461,459,449
<449=450
<450=457,451
<451=452
<452=453
<453=455,454
<455=456
<457=458
<459=460
<461=462
<462=471,463
<463=464
<464=465
<465=469,466
<466=467
<467=468
<469=470
<471=472
<473=474
<475=476
<477=478
<478=506,479
<479=504,492,490,480
<480=481
<481=488,482
<482=483
<483=484
<484=486,485
<486=487
<488=489
<490=491
<492=493
<493=502,494
<494=495
<495=496
<496=500,497
<497=498
<498=499
<500=501
<502=503
<504=505
<506=507
<508=509
<509=537,510
<510=535,523,521,511
<511=512
<512=519,513
<513=514
<514=515
<515=517,516
<517=518
<519=520
<521=522
<523=524
<524=533,525
<525=526
<526=527
<527=531,528
<528=529
<529=530
<531=532
<533=534
<535=536
<537=538
<539=540
<540=568,541
<541=566,554,552,542
<542=543
<543=550,544
<544=545
<545=546
<546=548,547
<548=549
<550=551
<552=553
<554=555
<555=564,556
<556=557
<557=558
<558=562,559
<559=560
<560=561
<562=563
<564=565
<566=567
<568=569
<570=571
<571=599,572
<572=597,585,583,573
<573=574
<574=581,575
<575=576
<576=577
<577=579,578
<579=580
<581=582
<583=584
<585=586
<586=595,587
<587=588
<588=589
<589=593,590
<590=591
<591=592
<593=594
<595=596
<597=598
<599=600
<601=602
<602=628,603
<603=626,616,614,604
<604=605
<605=612,606
<606=607
<607=608
<608=610,609
<610=611
<612=613
<614=615
<616=617
<617=624,618
<618=619
<619=620
<620=622,621
<622=623
<624=625
<626=627
<628=629
<630=631
<631=657,632
<632=655,645,643,633
<633=634
<634=641,635
<635=636
<636=637
<637=639,638
<639=640
<641=642
<643=644
<645=646
<646=653,647
<647=648
<648=649
<649=651,650
<651=652
<653=654
<655=656
<657=658
<659=660
<660=686,661
<661=684,674,672,662
<662=663
<663=670,664
<664=665
<665=666
<666=668,667
<668=669
<670=671
<672=673
<674=675
<675=682,676
<676=677
<677=678
<678=680,679
<680=681
<682=683
<684=685
<686=687
<688=689
<689=715,690
<690=713,703,701,691
<691=692
<692=699,693
<693=694
<694=695
<695=697,696
<697=698
<699=700
<701=702
<703=704
<704=711,705
<705=706
<706=707
<707=709,708
<709=710
<711=712
<713=714
<715=716
<717=718
<718=744,719
<719=742,732,730,720
<720=721
<721=728,722
<722=723
<723=724
<724=726,725
<726=727
<728=729
<730=731
<732=733
<733=740,734
<734=735
<735=736
<736=738,737
<738=739
<740=741
<742=743
<744=745
<746=747
<747=773,748
<748=771,761,759,749
<749=750
<750=757,751
<751=752
<752=753
<753=755,754
<755=756
<757=758
<759=760
<761=762
<762=769,763
<763=764
<764=765
<765=767,766
<767=768
<769=770
<771=772
<773=774
<775=776
<776=802,777
<777=800,790,788,778
<778=779
<779=786,780
<780=781
<781=782
<782=784,783
<784=785
<786=787
<788=789
<790=791
<791=798,792
<792=793
<793=794
<794=796,795
<796=797
<798=799
<800=801
<802=803
<804=805
<805=831,806
<806=829,819,817,807
<807=808
<808=815,809
<809=810
<810=811
<811=813,812
<813=814
<815=816
<817=818
<819=820
<820=827,821
<821=822
<822=823
<823=825,824
<825=826
<827=828
<829=830
<831=832
<833=834
<834=860,835
<835=858,848,846,836
<836=837
<837=844,838
<838=839
<839=840
<840=842,841
<842=843
<844=845
<846=847
<848=849
<849=856,850
<850=851
<851=852
<852=854,853
<854=855
<856=857
<858=859
<860=861
<862=863
<863=865,864
<865=866
<866=868,867
<869=870
<870=874,871
<871=872
<872=873
<874=875
<875=877,876
<878=879
<879=883,880
<880=881
<881=882
<883=884
<884=886,885
<887=888
<888=893,892,889
<889=891,890
<894=895
<895=899,896
<896=897
<897=898
<899=900
<900=902,901
<903=904
<904=913,905
<905=909,906
<906=907
<907=908
<909=910
<910=912,911
<914=915
<915=927,926,916
<916=925,917
<917=921,918
<918=919
<919=920
<921=922
<922=924,923
<928=929
<929=935,930
<930=934,931
<931=933,932
<936=944,937
<937=938
<938=942,939
<939=940
<940=941
<942=943
<944=945
<945=952,946
<946=948,947
<948=949
<949=951,950
<952=954,953
<955=956
<956=960,957
<957=958
<958=959
<960=961
<1024=1027,1026,1025
<1027=1028
<1028=1029
<1029=1038,1030
<1030=1031
<1031=1032
<1032=1034,1033
<1034=1035
<1035=1037,1036
<1038=1039
<1039=1041,1040
<1041=1043,1042
<1043=1044
<1052=1055,1054,1053
<1055=1056
<1056=1057
<1057=1066,1058
<1058=1059
<1059=1060
<1060=1062,1061
<1062=1063
<1063=1065,1064
<1066=1067
<1067=1069,1068
<1069=1071,1070
<1071=1072
<1080=1083,1082,1081
<1083=1084
<1084=1085
<1085=1094,1086
<1086=1087
<1087=1088
<1088=1090,1089
<1090=1091
<1091=1093,1092
<1094=1095
<1095=1097,1096
<1097=1099,1098
<1099=1100
<1108=1111,1110,1109
<1111=1117,1112
<1112=1113
<1113=1115,1114
<1115=1116
<1117=1123,1118
<1118=1119
<1119=1121,1120
<1121=1122
<1123=1124
<1124=1126,1125
<1126=1127
<1127=1129,1128
<1136=1139,1138,1137
<1139=1328,1313,1298,1283,1268,1253,1238,1223,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1147,1146,1145,1140
<1140=1141
<1141=1143,1142
<1143=1144
<1147=1176,1148
<1148=1149
<1149=1174,1150
<1150=1172,1165,1151
<1151=1152
<1152=1156,1153
<1153=1154
<1154=1155
<1156=1157
<1157=1159,1158
<1159=1163,1160
<1160=1161
<1161=1162
<1163=1164
<1165=1166
<1166=1170,1167
<1167=1168
<1168=1169
<1170=1171
<1172=1173
<1174=1175
<1176=1177
<1177=1179,1178
<1179=1180
<1180=1182,1181
<1208=1209
<1209=1220,1210
<1210=1213,1212,1211
<1213=1214
<1214=1216,1215
<1216=1217
<1217=1219,1218
<1220=1222,1221
<1223=1224
<1224=1235,1225
<1225=1228,1227,1226
<1228=1229
<1229=1231,1230
<1231=1232
<1232=1234,1233
<1235=1237,1236
<1238=1239
<1239=1250,1240
<1240=1243,1242,1241
<1243=1244
<1244=1246,1245
<1246=1247
<1247=1249,1248
<1250=1252,1251
<1253=1254
<1254=1265,1255
<1255=1258,1257,1256
<1258=1259
<1259=1261,1260
<1261=1262
<1262=1264,1263
<1265=1267,1266
<1268=1269
<1269=1280,1270
<1270=1273,1272,1271
<1273=1274
<1274=1276,1275
<1276=1277
<1277=1279,1278
<1280=1282,1281
<1283=1284
<1284=1295,1285
<1285=1288,1287,1286
<1288=1289
<1289=1291,1290
<1291=1292
<1292=1294,1293
<1295=1297,1296
<1298=1299
<1299=1310,1300
<1300=1303,1302,1301
<1303=1304
<1304=1306,1305
<1306=1307
<1307=1309,1308
<1310=1312,1311
<1313=1314
<1314=1325,1315
<1315=1318,1317,1316
<1318=1319
<1319=1321,1320
<1321=1322
<1322=1324,1323
<1325=1327,1326
<1328=1329
<1329=1331,1330
<1366=1369,1368,1367
<1369=1379,1370
<1370=1371
<1371=1375,1372
<1372=1373
<1373=1374
<1375=1376
<1376=1378,1377
<1379=1381,1380
<1381=1382
<1389=1392,1391,1390
<1392=1453,1428,1402,1393
<1393=1394
<1394=1398,1395
<1395=1396
<1396=1397
<1398=1399
<1399=1401,1400
<1402=1403
<1403=1427,1426,1404
<1404=1425,1405
<1405=1409,1406
<1406=1407
<1407=1408
<1409=1410
<1410=1412,1411
<1412=1416,1413
<1413=1414
<1414=1415
<1416=1417
<1417=1419,1418
<1419=1423,1420
<1420=1421
<1421=1422
<1423=1424
<1428=1446,1442,1429
<1429=1430
<1430=1435,1431
<1431=1432
<1432=1434,1433
<1435=1436
<1436=1438,1437
<1438=1439
<1439=1441,1440
<1442=1443
<1443=1445,1444
<1446=1447
<1447=1449,1448
<1449=1450
<1450=1452,1451
<1453=1454
<1454=1459,1458,1455
<1455=1457,1456
<1479=1482,1481,1480
<1482=1527,1522,1509,1495,1488,1483
<1483=1484
<1484=1486,1485
<1486=1487
<1488=1489
<1489=1491,1490
<1491=1492
<1492=1494,1493
<1495=1496
<1496=1505,1497
<1497=1498
<1498=1499
<1499=1501,1500
<1501=1502
<1502=1504,1503
<1505=1506
<1506=1508,1507
<1509=1511,1510
<1511=1512
<1512=1521,1513
<1513=1517,1514
<1514=1515
<1515=1516
<1517=1518
<1518=1520,1519
<1522=1523
<1523=1526,1525,1524
<1527=1528
<1528=1543,1542,1529
<1529=1541,1530
<1530=1532,1531
<1532=1533
<1533=1535,1534
<1535=1537,1536
<1537=1538
<1538=1540,1539
<1555=1558,1557,1556
<1558=1579,1578,1577,1576,1574,1573,1572,1571,1570,1569,1568,1564,1559
<1559=1560
<1560=1562,1561
<1562=1563
<1564=1567,1565
<1565=1566
<1574=1575
<1583=1586,1585,1584
<1586=1691,1653,1652,1651,1650,1649,1648,1647,1646,1645,1644,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1625,1589,1588,1587
<1589=1618,1590
<1590=1591
<1591=1616,1592
<1592=1614,1607,1593
<1593=1594
<1594=1598,1595
<1595=1596
<1596=1597
<1598=1599
<1599=1601,1600
<1601=1605,1602
<1602=1603
<1603=1604
<1605=1606
<1607=1608
<1608=1612,1609
<1609=1610
<1610=1611
<1612=1613
<1614=1615
<1616=1617
<1618=1619
<1619=1621,1620
<1621=1622
<1622=1624,1623
<1653=1683,1674,1671,1654
<1654=1655
<1655=1656
<1656=1670,1657
<1657=1659,1658
<1659=1660
<1660=1662,1661
<1662=1666,1663
<1663=1664
<1664=1665
<1666=1667
<1667=1669,1668
<1671=1673,1672
<1674=1675
<1675=1682,1676
<1676=1678,1677
<1678=1679
<1679=1681,1680
<1683=1684
<1684=1685
<1685=1690,1689,1686
<1686=1688,1687
<1691=1692
<1692=1694,1693
<1709=1721,1720,1710
<1710=1717,1714,1711
<1711=1713,1712
<1714=1716,1715
<1717=1719,1718
<1721=1776,1767,1758,1754,1750,1746,1727,1722
<1722=1723
<1723=1725,1724
<1725=1726
<1727=1737,1728
<1728=1729
<1729=1733,1730
<1730=1731
<1731=1732
<1733=1734
<1734=1736,1735
<1737=1738
<1738=1745,1739
<1739=1741,1740
<1741=1742
<1742=1744,1743
<1746=1747
<1747=1749,1748
<1750=1751
<1751=1753,1752
<1754=1755
<1755=1757,1756
<1758=1759
<1759=1763,1760
<1760=1761
<1761=1762
<1763=1764
<1764=1766,1765
<1767=1768
<1768=1772,1769
<1769=1770
<1770=1771
<1772=1773
<1773=1775,1774
<1776=1777
<1777=1781,1778
<1778=1779
<1779=1780
<1781=1782
<1782=1784,1783
<1800=1806,1805,1801
<1801=1802
<1802=1804,1803
<1806=1852,1843,1834,1825,1816,1807
<1807=1808
<1808=1812,1809
<1809=1810
<1810=1811
<1812=1813
<1813=1815,1814
<1816=1817
<1817=1821,1818
<1818=1819
<1819=1820
<1821=1822
<1822=1824,1823
<1825=1826
<1826=1830,1827
<1827=1828
<1828=1829
<1830=1831
<1831=1833,1832
<1834=1835
<1835=1839,1836
<1836=1837
<1837=1838
<1839=1840
<1840=1842,1841
<1843=1844
<1844=1848,1845
<1845=1846
<1846=1847
<1848=1849
<1849=1851,1850
<1852=1853
<1853=1855,1854
<1855=1856
<1856=1858,1857
<1868=1874,1873,1869
<1869=1870
<1870=1872,1871
<1874=2139,2130,2121,2112,2103,2094,2085,2076,2067,2063,2040,2017,1994,1971,1948,1925,1902,1879,1875
<1875=1876
<1876=1878,1877
<1879=1880
<1880=1898,1881
<1881=1882
<1882=1883
<1883=1885,1884
<1885=1887,1886
<1887=1888
<1888=1890,1889
<1890=1894,1891
<1891=1892
<1892=1893
<1894=1895
<1895=1897,1896
<1898=1899
<1899=1901,1900
<1902=1903
<1903=1921,1904
<1904=1905
<1905=1906
<1906=1908,1907
<1908=1910,1909
<1910=1911
<1911=1913,1912
<1913=1917,1914
<1914=1915
<1915=1916
<1917=1918
<1918=1920,1919
<1921=1922
<1922=1924,1923
<1925=1926
<1926=1944,1927
<1927=1928
<1928=1929
<1929=1931,1930
<1931=1933,1932
<1933=1934
<1934=1936,1935
<1936=1940,1937
<1937=1938
<1938=1939
<1940=1941
<1941=1943,1942
<1944=1945
<1945=1947,1946
<1948=1949
<1949=1967,1950
<1950=1951
<1951=1952
<1952=1954,1953
<1954=1956,1955
<1956=1957
<1957=1959,1958
<1959=1963,1960
<1960=1961
<1961=1962
<1963=1964
<1964=1966,1965
<1967=1968
<1968=1970,1969
<1971=1972
<1972=1990,1973
<1973=1974
<1974=1975
<1975=1977,1976
<1977=1979,1978
<1979=1980
<1980=1982,1981
<1982=1986,1983
<1983=1984
<1984=1985
<1986=1987
<1987=1989,1988
<1990=1991
<1991=1993,1992
<1994=1995
<1995=2013,1996
<1996=1997
<1997=1998
<1998=2000,1999
<2000=2002,2001
<2002=2003
<2003=2005,2004
<2005=2009,2006
<2006=2007
<2007=2008
<2009=2010
<2010=2012,2011
<2013=2014
<2014=2016,2015
<2017=2018
<2018=2036,2019
<2019=2020
<2020=2021
<2021=2023,2022
<2023=2025,2024
<2025=2026
<2026=2028,2027
<2028=2032,2029
<2029=2030
<2030=2031
<2032=2033
<2033=2035,2034
<2036=2037
<2037=2039,2038
<2040=2041
<2041=2059,2042
<2042=2043
<2043=2044
<2044=2046,2045
<2046=2048,2047
<2048=2049
<2049=2051,2050
<2051=2055,2052
<2052=2053
<2053=2054
<2055=2056
<2056=2058,2057
<2059=2060
<2060=2062,2061
<2063=2064
<2064=2066,2065
<2067=2068
<2068=2072,2069
<2069=2070
<2070=2071
<2072=2073
<2073=2075,2074
<2076=2077
<2077=2081,2078
<2078=2079
<2079=2080
<2081=2082
<2082=2084,2083
<2085=2086
<2086=2090,2087
<2087=2088
<2088=2089
<2090=2091
<2091=2093,2092
<2094=2095
<2095=2099,2096
<2096=2097
<2097=2098
<2099=2100
<2100=2102,2101
<2103=2104
<2104=2108,2105
<2105=2106
<2106=2107
<2108=2109
<2109=2111,2110
<2112=2113
<2113=2117,2114
<2114=2115
<2115=2116
<2117=2118
<2118=2120,2119
<2121=2122
<2122=2126,2123
<2123=2124
<2124=2125
<2126=2127
<2127=2129,2128
<2130=2131
<2131=2135,2132
<2132=2133
<2133=2134
<2135=2136
<2136=2138,2137
<2139=2140
<2140=2144,2141
<2141=2142
<2142=2143
<2144=2145
<2145=2147,2146
<2173=2179,2178,2174
<2174=2175
<2175=2177,2176
<2179=2265,2253,2244,2223,2214,2185,2180
<2180=2181
<2181=2183,2182
<2183=2184
<2185=2186
<2186=2213,2187
<2187=2207,2188
<2188=2189
<2189=2190
<2190=2192,2191
<2192=2201,2193
<2193=2194
<2194=2195
<2195=2199,2196
<2196=2197
<2197=2198
<2199=2200
<2201=2202
<2202=2204,2203
<2204=2206,2205
<2207=2208
<2208=2210,2209
<2210=2212,2211
<2214=2215
<2215=2219,2216
<2216=2217
<2217=2218
<2219=2220
<2220=2222,2221
<2223=2235,2224
<2224=2225
<2225=2234,2226
<2226=2230,2227
<2227=2228
<2228=2229
<2230=2231
<2231=2233,2232
<2235=2236
<2236=2240,2237
<2237=2238
<2238=2239
<2240=2241
<2241=2243,2242
<2244=2245
<2245=2252,2251,2246
<2246=2250,2247
<2247=2249,2248
<2253=2254
<2254=2264,2263,2255
<2255=2262,2256
<2256=2258,2257
<2258=2259
<2259=2261,2260
<2265=2267,2266
<2267=2268
<2268=2270,2269
<2270=2271
<2271=2273,2272
<2290=2296,2295,2291
<2291=2292
<2292=2294,2293
<2296=2541,2532,2531,2530,2529,2528,2527,2525,2524,2523,2297
<2297=2519,2514,2453,2444,2435,2426,2417,2408,2399,2385,2374,2363,2352,2338,2318,2298
<2298=2299
<2299=2314,2300
<2300=2301
<2301=2302
<2302=2312,2303
<2303=2308,2306,2304
<2304=2305
<2306=2307
<2308=2309
<2309=2311,2310
<2312=2313
<2314=2315
<2315=2317,2316
<2318=2319
<2319=2334,2320
<2320=2321
<2321=2322
<2322=2332,2323
<2323=2328,2326,2324
<2324=2325
<2326=2327
<2328=2329
<2329=2331,2330
<2332=2333
<2334=2335
<2335=2337,2336
<2338=2339
<2339=2348,2340
<2340=2341
<2341=2342
<2342=2344,2343
<2344=2345
<2345=2347,2346
<2348=2349
<2349=2351,2350
<2352=2353
<2353=2359,2354
<2354=2355
<2355=2356
<2356=2358,2357
<2359=2360
<2360=2362,2361
<2363=2364
<2364=2370,2365
<2365=2366
<2366=2367
<2367=2369,2368
<2370=2371
<2371=2373,2372
<2374=2375
<2375=2381,2376
<2376=2377
<2377=2378
<2378=2380,2379
<2381=2382
<2382=2384,2383
<2385=2386
<2386=2398,2397,2387
<2387=2396,2388
<2388=2394,2389
<2389=2390
<2390=2391
<2391=2393,2392
<2394=2395
<2399=2400
<2400=2407,2406,2401
<2401=2405,2402
<2402=2404,2403
<2408=2409
<2409=2416,2415,2410
<2410=2414,2411
<2411=2413,2412
<2417=2418
<2418=2425,2424,2419
<2419=2423,2420
<2420=2422,2421
<2426=2427
<2427=2434,2433,2428
<2428=2432,2429
<2429=2431,2430
<2435=2436
<2436=2443,2442,2437
<2437=2441,2438
<2438=2440,2439
<2444=2445
<2445=2452,2451,2446
<2446=2450,2447
<2447=2449,2448
<2453=2506,2502,2499,2454
<2454=2484,2455
<2455=2478,2456
<2456=2472,2457
<2457=2458
<2458=2468,2459
<2459=2466,2464,2460
<2460=2461
<2461=2463,2462
<2464=2465
<2466=2467
<2468=2469
<2469=2471,2470
<2472=2473
<2473=2475,2474
<2475=2477,2476
<2478=2479
<2479=2483,2480
<2480=2482,2481
<2484=2485
<2485=2496,2486
<2486=2492,2487
<2487=2490,2488
<2488=2489
<2490=2491
<2492=2493
<2493=2495,2494
<2496=2498,2497
<2499=2501,2500
<2502=2503
<2503=2505,2504
<2506=2507
<2507=2508
<2508=2513,2512,2509
<2509=2511,2510
<2514=2515
<2515=2518,2517,2516
<2519=2520
<2520=2522,2521
<2525=2526
<2532=2533
<2533=2540,2539,2534
<2534=2538,2535
<2535=2537,2536
<2541=2556,2542
<2542=2543
<2543=2552,2544
<2544=2545
<2545=2546
<2546=2548,2547
<2548=2549
<2549=2551,2550
<2552=2553
<2553=2555,2554
<2556=2557
<2557=2564,2558
<2558=2560,2559
<2560=2561
<2561=2563,2562
<2564=2566,2565
<2566=2567
<2567=2569,2568
