>3	FunctionDef	print_help ()
>4	ParameterList	 
>5	ReturnType	void
>6	CompoundStatement	 
>7	ExpressionStatement	 
>8	ShiftExpression	std 
>9	ShiftExpression	\"osmium_convert [OPTIONS] [INFILE [OUTFILE]]\n\n\" << \"If INFILE or OUTFILE is not given stdin/stdout \
>10	ShiftExpression	\"If INFILE or OUTFILE is not given stdin/stdout is assumed.\n\" << \"File format is autodetected from \
>11	ShiftExpression	\"File format is autodetected from file name suffix.\n\" << \"Use -f and -t options to force file format.\n\" << \"\nFile \
>12	ShiftExpression	\"Use -f and -t options to force file format.\n\" << \"\nFile types
>13	ShiftExpression	\"\nFile types
>14	ShiftExpression	\"  osm        normal OSM file\n\" << \"  osc        OSM change file\n\" << \"  osh        OSM file with \
>15	ShiftExpression	\"  osc        OSM change file\n\" << \"  osh        OSM file with history information\n\" << \"\nFile format
>16	ShiftExpression	\"  osh        OSM file with history information\n\" << \"\nFile format
>17	ShiftExpression	\"\nFile format
>18	ShiftExpression	\"  (default)  XML encoding\n\" << \"  pbf        binary PBF encoding\n\" << \"  opl        OPL encoding\n\" << \"\nFile \
>19	ShiftExpression	\"  pbf        binary PBF encoding\n\" << \"  opl        OPL encoding\n\" << \"\nFile compression\n\" << \"  \
>20	ShiftExpression	\"  opl        OPL encoding\n\" << \"\nFile compression\n\" << \"  gz         compressed with gzip\n\" << \"  \
>21	ShiftExpression	\"\nFile compression\n\" << \"  gz         compressed with gzip\n\" << \"  bz2        compressed with bzip2\n\" << \"\nOptions
>22	ShiftExpression	\"  gz         compressed with gzip\n\" << \"  bz2        compressed with bzip2\n\" << \"\nOptions
>23	ShiftExpression	\"  bz2        compressed with bzip2\n\" << \"\nOptions
>24	ShiftExpression	\"\nOptions
>25	ShiftExpression	\"  -h, --help                This help message\n\" << \"  -f, --from-format=FORMAT  Input format\n\" << \"  \
>26	ShiftExpression	\"  -f, --from-format=FORMAT  Input format\n\" << \"  -t, --to-format=FORMAT    Output format\n\"
>27	PrimaryExpression	\"  -t, --to-format=FORMAT    Output format\n\"
>28	PrimaryExpression	\"  -f, --from-format=FORMAT  Input format\n\"
>29	PrimaryExpression	\"  -h, --help                This help message\n\"
>30	PrimaryExpression	\"\nOptions
>31	PrimaryExpression	\"  bz2        compressed with bzip2\n\"
>32	PrimaryExpression	\"  gz         compressed with gzip\n\"
>33	PrimaryExpression	\"\nFile compression\n\"
>34	PrimaryExpression	\"  opl        OPL encoding\n\"
>35	PrimaryExpression	\"  pbf        binary PBF encoding\n\"
>36	PrimaryExpression	\"  (default)  XML encoding\n\"
>37	PrimaryExpression	\"\nFile format
>38	PrimaryExpression	\"  osh        OSM file with history information\n\"
>39	PrimaryExpression	\"  osc        OSM change file\n\"
>40	PrimaryExpression	\"  osm        normal OSM file\n\"
>41	PrimaryExpression	\"\nFile types
>42	PrimaryExpression	\"Use -f and -t options to force file format.\n\"
>43	PrimaryExpression	\"File format is autodetected from file name suffix.\n\"
>44	PrimaryExpression	\"If INFILE or OUTFILE is not given stdin/stdout is assumed.\n\"
>45	PrimaryExpression	\"osmium_convert [OPTIONS] [INFILE [OUTFILE]]\n\n\"
>46	Identifier	std 
>50	FunctionDef	main (int argc , char * argv [ ])
>51	ParameterList	int argc , char * argv [ ]
>52	Parameter	 
>53	Identifier	argv
>54	ParameterType	char * [ ]
>55	Parameter	 
>56	Identifier	argc
>57	ParameterType	int
>58	ReturnType	int
>59	CompoundStatement	 
>60	ReturnStatement	 
>61	Identifier	exit_code
>62	BlockStarter	 
>63	CompoundStatement	 
>64	ExpressionStatement	exit_code = 1
>65	AssignmentExpr	exit_code = 1
>66	PrimaryExpression	1
>67	Identifier	exit_code
>68	ExpressionStatement	std 
>69	ShiftExpression	std 
>70	ShiftExpression	e . what ( ) << \"\n\"
>71	PrimaryExpression	\"\n\"
>72	CallExpression	e . what ( )
>73	ArgumentList	 
>74	Callee	e . what
>75	MemberAccess	e . what
>76	Identifier	what
>77	Identifier	e
>78	Identifier	std 
>79	Identifier	e
>80	BlockStarter	 
>81	CompoundStatement	 
>82	ExpressionStatement	reader . close ( )
>83	CallExpression	reader . close ( )
>84	ArgumentList	 
>85	Callee	reader . close
>86	MemberAccess	reader . close
>87	Identifier	close
>88	Identifier	reader
>89	ExpressionStatement	writer . close ( )
>90	CallExpression	writer . close ( )
>91	ArgumentList	 
>92	Callee	writer . close
>93	MemberAccess	writer . close
>94	Identifier	close
>95	Identifier	writer
>96	WhileStatement	while ( osmium 
>97	CompoundStatement	 
>98	ExpressionStatement	writer ( std 
>99	CallExpression	writer ( std 
>100	ArgumentList	std 
>101	Argument	std 
>102	CallExpression	std 
>103	ArgumentList	buffer
>104	Argument	buffer
>105	Identifier	buffer
>106	Callee	std 
>107	Identifier	std 
>108	Callee	writer
>109	Identifier	writer
>110	Condition	buffer
>111	CallExpression	reader . read ( )
>112	ArgumentList	 
>113	Callee	reader . read
>114	MemberAccess	reader . read
>115	Identifier	read
>116	Identifier	reader
>117	Identifier	buffer
>118	IdentifierDeclStatement	osmium 
>119	IdentifierDecl	writer ( outfile , header , osmium 
>120	Expression	outfile , header , osmium 
>121	Expression	header , osmium 
>122	Identifier	osmium 
>123	Identifier	header
>124	Identifier	outfile
>125	Identifier	writer
>126	IdentifierDeclType	osmium 
>127	ExpressionStatement	header . set ( \"generator\" , \"osmium_convert\" )
>128	CallExpression	header . set ( \"generator\" , \"osmium_convert\" )
>129	ArgumentList	\"generator\"
>130	Argument	\"osmium_convert\"
>131	PrimaryExpression	\"osmium_convert\"
>132	Argument	\"generator\"
>133	PrimaryExpression	\"generator\"
>134	Callee	header . set
>135	MemberAccess	header . set
>136	Identifier	set
>137	Identifier	header
>138	IdentifierDeclStatement	osmium 
>139	IdentifierDecl	header = reader . header ( )
>140	AssignmentExpr	header = reader . header ( )
>141	CallExpression	reader . header ( )
>142	ArgumentList	 
>143	Callee	reader . header
>144	MemberAccess	reader . header
>145	Identifier	header
>146	Identifier	reader
>147	Identifier	header
>148	Identifier	header
>149	IdentifierDeclType	osmium 
>150	IdentifierDeclStatement	osmium 
>151	IdentifierDecl	reader ( infile )
>152	Identifier	infile
>153	Identifier	reader
>154	IdentifierDeclType	osmium 
>155	IdentifierDeclStatement	 
>156	IdentifierDecl	exit_code = 0
>157	AssignmentExpr	exit_code = 0
>158	PrimaryExpression	0
>159	Identifier	exit_code
>160	Identifier	exit_code
>161	IdentifierDeclType	int
>162	IfStatement	if ( infile . has_multiple_object_versions ( ) && ! outfile . has_multiple_object_versions ( ) )
>163	CompoundStatement	 
>164	ExpressionStatement	 
>165	ShiftExpression	std 
>166	PrimaryExpression	\"Warning! You are converting from an OSM file with (potentially) several versions of the same object to one that \
>167	Identifier	std 
>168	Condition	 
>169	AndExpression	infile . has_multiple_object_versions ( ) && ! outfile . has_multiple_object_versions ( )
>170	UnaryOp	! outfile . has_multiple_object_versions ( )
>171	CallExpression	outfile . has_multiple_object_versions ( )
>172	ArgumentList	 
>173	Callee	outfile . has_multiple_object_versions
>174	MemberAccess	outfile . has_multiple_object_versions
>175	Identifier	has_multiple_object_versions
>176	Identifier	outfile
>177	UnaryOperator	!
>178	CallExpression	infile . has_multiple_object_versions ( )
>179	ArgumentList	 
>180	Callee	infile . has_multiple_object_versions
>181	MemberAccess	infile . has_multiple_object_versions
>182	Identifier	has_multiple_object_versions
>183	Identifier	infile
>184	IdentifierDeclStatement	 
>185	IdentifierDecl	outfile ( output , output_format )
>186	Expression	output , output_format
>187	Identifier	output_format
>188	Identifier	output
>189	Identifier	outfile
>190	IdentifierDeclType	osmium 
>191	IdentifierDeclStatement	 
>192	IdentifierDecl	infile ( input , input_format )
>193	Expression	input , input_format
>194	Identifier	input_format
>195	Identifier	input
>196	Identifier	infile
>197	IdentifierDeclType	osmium 
>198	IfStatement	if ( remaining_args > 2 )
>199	ElseStatement	else
>200	IfStatement	if ( remaining_args == 2 )
>201	ElseStatement	else
>202	IfStatement	if ( remaining_args == 1 )
>203	CompoundStatement	 
>204	ExpressionStatement	 
>205	AssignmentExpr	input = argv [ optind ]
>206	ArrayIndexing	argv [ optind ]
>207	Identifier	optind
>208	Identifier	argv
>209	Identifier	input
>210	Condition	 
>211	EqualityExpression	remaining_args == 1
>212	PrimaryExpression	1
>213	Identifier	remaining_args
>214	CompoundStatement	 
>215	ExpressionStatement	 
>216	AssignmentExpr	output = argv [ optind + 1 ]
>217	ArrayIndexing	argv [ optind + 1 ]
>218	AdditiveExpression	optind + 1
>219	PrimaryExpression	1
>220	Identifier	optind
>221	Identifier	argv
>222	Identifier	output
>223	ExpressionStatement	 
>224	AssignmentExpr	input = argv [ optind ]
>225	ArrayIndexing	argv [ optind ]
>226	Identifier	optind
>227	Identifier	argv
>228	Identifier	input
>229	Condition	 
>230	EqualityExpression	remaining_args == 2
>231	PrimaryExpression	2
>232	Identifier	remaining_args
>233	CompoundStatement	 
>234	ExpressionStatement	 
>235	CallExpression	exit ( 1 )
>236	ArgumentList	1
>237	Argument	1
>238	PrimaryExpression	1
>239	Callee	exit
>240	Identifier	exit
>241	ExpressionStatement	 
>242	ShiftExpression	std 
>243	ShiftExpression	\"Usage
>244	ShiftExpression	argv [ 0 ] << \" [OPTIONS] [INFILE [OUTFILE]]\" << std 
>245	ShiftExpression	\" [OPTIONS] [INFILE [OUTFILE]]\" << std 
>246	Identifier	std 
>247	PrimaryExpression	\" [OPTIONS] [INFILE [OUTFILE]]\"
>248	ArrayIndexing	argv [ 0 ]
>249	PrimaryExpression	0
>250	Identifier	argv
>251	PrimaryExpression	\"Usage
>252	Identifier	std 
>253	Condition	 
>254	RelationalExpression	remaining_args > 2
>255	PrimaryExpression	2
>256	Identifier	remaining_args
>257	IdentifierDeclStatement	 
>258	IdentifierDecl	remaining_args = argc - optind
>259	AssignmentExpr	remaining_args = argc - optind
>260	AdditiveExpression	argc - optind
>261	Identifier	optind
>262	Identifier	argc
>263	Identifier	remaining_args
>264	Identifier	remaining_args
>265	IdentifierDeclType	int
>266	IdentifierDeclStatement	 
>267	IdentifierDecl	output
>268	Identifier	output
>269	IdentifierDeclType	std 
>270	IdentifierDeclStatement	 
>271	IdentifierDecl	input
>272	Identifier	input
>273	IdentifierDeclType	std 
>274	WhileStatement	while ( true )
>275	CompoundStatement	 
>276	SwitchStatement	switch ( c )
>277	CompoundStatement	 
>278	ExpressionStatement	 
>279	CallExpression	exit ( 1 )
>280	ArgumentList	1
>281	Argument	1
>282	PrimaryExpression	1
>283	Callee	exit
>284	Identifier	exit
>285	Label	 
>286	Identifier	default
>287	BreakStatement	 
>288	ExpressionStatement	 
>289	AssignmentExpr	output_format = optarg
>290	Identifier	optarg
>291	Identifier	output_format
>292	Label	 
>293	BreakStatement	 
>294	ExpressionStatement	 
>295	AssignmentExpr	input_format = optarg
>296	Identifier	optarg
>297	Identifier	input_format
>298	Label	 
>299	ExpressionStatement	 
>300	CallExpression	exit ( 0 )
>301	ArgumentList	0
>302	Argument	0
>303	PrimaryExpression	0
>304	Callee	exit
>305	Identifier	exit
>306	ExpressionStatement	 
>307	CallExpression	print_help ( )
>308	ArgumentList	 
>309	Callee	print_help
>310	Identifier	print_help
>311	Label	 
>312	Condition	 
>313	Identifier	c
>314	IfStatement	if ( c == - 1 )
>315	CompoundStatement	 
>316	BreakStatement	 
>317	Condition	 
>318	EqualityExpression	c == - 1
>319	UnaryOp	- 1
>320	PrimaryExpression	1
>321	UnaryOperator	-
>322	Identifier	c
>323	IdentifierDeclStatement	 
>324	IdentifierDecl	c = getopt_long ( argc , argv , \"dhf
>325	AssignmentExpr	c = getopt_long ( argc , argv , \"dhf
>326	CallExpression	getopt_long ( argc , argv , \"dhf
>327	ArgumentList	argc
>328	Argument	0
>329	PrimaryExpression	0
>330	Argument	long_options
>331	Identifier	long_options
>332	Argument	\"dhf
>333	PrimaryExpression	\"dhf
>334	Argument	argv
>335	Identifier	argv
>336	Argument	argc
>337	Identifier	argc
>338	Callee	getopt_long
>339	Identifier	getopt_long
>340	Identifier	c
>341	Identifier	c
>342	IdentifierDeclType	int
>343	Condition	 
>344	Identifier	true
>345	IdentifierDeclStatement	 
>346	IdentifierDecl	output_format
>347	Identifier	output_format
>348	IdentifierDeclType	std 
>349	IdentifierDeclStatement	 
>350	IdentifierDecl	input_format
>351	Identifier	input_format
>352	IdentifierDeclType	std 
>353	IdentifierDeclStatement	 
>354	IdentifierDecl	long_options [ ] = { { \"help\" , no_argument , 0 , 'h' } , { \"from-format\" , required_argument , 0 , 'f' } , { \"to-format\" , \
>355	AssignmentExpr	long_options [ ] = { { \"help\" , no_argument , 0 , 'h' } , { \"from-format\" , required_argument , 0 , '\
>356	InitializerList	\"help\"
>357	InitializerList	0
>358	PrimaryExpression	0
>359	PrimaryExpression	0
>360	PrimaryExpression	0
>361	PrimaryExpression	0
>362	InitializerList	\"to-format\"
>363	PrimaryExpression	't'
>364	PrimaryExpression	0
>365	Identifier	required_argument
>366	PrimaryExpression	\"to-format\"
>367	InitializerList	\"from-format\"
>368	PrimaryExpression	'f'
>369	PrimaryExpression	0
>370	Identifier	required_argument
>371	PrimaryExpression	\"from-format\"
>372	InitializerList	\"help\"
>373	PrimaryExpression	'h'
>374	PrimaryExpression	0
>375	Identifier	no_argument
>376	PrimaryExpression	\"help\"
>377	Identifier	long_options
>378	Identifier	long_options
>379	IdentifierDeclType	struct option [ ]
>380	Statement	 
<3=6,5,4
<6=7
<7=8
<8=46,9
<9=45,10
<10=44,11
<11=43,12
<12=42,13
<13=41,14
<14=40,15
<15=39,16
<16=38,17
<17=37,18
<18=36,19
<19=35,20
<20=34,21
<21=33,22
<22=32,23
<23=31,24
<24=30,25
<25=29,26
<26=28,27
<50=59,58,51
<51=55,52
<52=54,53
<55=57,56
<59=380,353,349,345,274,270,266,257,198,191,184,162,155,80,62,60
<60=61
<62=79,63
<63=68,64
<64=65
<65=67,66
<68=69
<69=78,70
<70=72,71
<72=74,73
<74=75
<75=77,76
<80=81
<81=150,138,127,118,96,89,82
<82=83
<83=85,84
<85=86
<86=88,87
<89=90
<90=92,91
<92=93
<93=95,94
<96=110,97
<97=98
<98=99
<99=108,100
<100=101
<101=102
<102=106,103
<103=104
<104=105
<106=107
<108=109
<110=117,111
<111=113,112
<113=114
<114=116,115
<118=119
<119=126,125,120
<120=124,121
<121=123,122
<127=128
<128=134,129
<129=132,130
<130=131
<132=133
<134=135
<135=137,136
<138=139
<139=149,148,140
<140=147,141
<141=143,142
<143=144
<144=146,145
<150=151
<151=154,153,152
<155=156
<156=161,160,157
<157=159,158
<162=168,163
<163=164
<164=165
<165=167,166
<168=169
<169=178,170
<170=177,171
<171=173,172
<173=174
<174=176,175
<178=180,179
<180=181
<181=183,182
<184=185
<185=190,189,186
<186=188,187
<191=192
<192=197,196,193
<193=195,194
<198=253,233,199
<199=200
<200=229,214,201
<201=202
<202=210,203
<203=204
<204=205
<205=209,206
<206=208,207
<210=211
<211=213,212
<214=223,215
<215=216
<216=222,217
<217=221,218
<218=220,219
<223=224
<224=228,225
<225=227,226
<229=230
<230=232,231
<233=241,234
<234=235
<235=239,236
<236=237
<237=238
<239=240
<241=242
<242=252,243
<243=251,244
<244=248,245
<245=247,246
<248=250,249
<253=254
<254=256,255
<257=258
<258=265,264,259
<259=263,260
<260=262,261
<266=267
<267=269,268
<270=271
<271=273,272
<274=343,275
<275=323,314,276
<276=312,277
<277=311,306,299,298,294,293,292,288,287,285,278
<278=279
<279=283,280
<280=281
<281=282
<283=284
<285=286
<288=289
<289=291,290
<294=295
<295=297,296
<299=300
<300=304,301
<301=302
<302=303
<304=305
<306=307
<307=309,308
<309=310
<312=313
<314=317,315
<315=316
<317=318
<318=322,319
<319=321,320
<323=324
<324=342,341,325
<325=340,326
<326=338,327
<327=336,334,332,330,328
<328=329
<330=331
<332=333
<334=335
<336=337
<338=339
<343=344
<345=346
<346=348,347
<349=350
<350=352,351
<353=354
<354=379,378,355
<355=377,356
<356=372,367,362,357
<357=361,360,359,358
<362=366,365,364,363
<367=371,370,369,368
<372=376,375,374,373
