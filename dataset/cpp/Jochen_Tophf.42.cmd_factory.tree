>3	FunctionDef	CommandFactory 
>4	ParameterList	 
>5	ReturnType	CommandFactory &
>6	CompoundStatement	 
>7	ReturnStatement	 
>8	Identifier	factory
>9	IdentifierDeclStatement	 
>10	IdentifierDecl	factory
>11	Identifier	factory
>12	IdentifierDeclType	CommandFactory
>13	Statement	 
>18	FunctionDef	CommandFactory 
>19	ParameterList	 
>20	CompoundStatement	 
>21	ReturnStatement	 
>22	Identifier	commands
>23	CompoundStatement	 
>24	ExpressionStatement	 
>25	CallExpression	commands . push_back ( std 
>26	ArgumentList	std 
>27	Argument	std 
>28	CallExpression	std 
>29	ArgumentList	cmd . first
>30	Argument	cmd . second . description
>31	MemberAccess	cmd . second . description
>32	Identifier	description
>33	MemberAccess	cmd . second
>34	Identifier	second
>35	Identifier	cmd
>36	Argument	cmd . first
>37	MemberAccess	cmd . first
>38	Identifier	first
>39	Identifier	cmd
>40	Callee	std 
>41	Identifier	std 
>42	Callee	commands . push_back
>43	MemberAccess	commands . push_back
>44	Identifier	push_back
>45	Identifier	commands
>46	Statement	 
>47	Statement	 
>48	Statement	 
>49	Statement	 
>50	Statement	 
>51	Statement	 
>52	Label	 
>53	Identifier	cmd
>54	Statement	 
>55	Statement	 
>56	Statement	 
>57	Statement	 
>58	Statement	 
>59	ExpressionStatement	 
>60	Expression	std 
>61	ShiftExpression	std 
>62	Identifier	commands
>63	Identifier	std 
>64	RelationalExpression	std 
>65	RelationalExpression	std 
>66	Identifier	std 
>67	Identifier	std 
>68	Identifier	std 
>78	FunctionDef	CommandFactory 
>79	ParameterList	 
>80	ReturnType	int
>81	CompoundStatement	 
>82	ReturnStatement	 
>83	CallExpression	max_width ( )
>84	ArgumentList	 
>85	Callee	max_width
>86	Identifier	max_width
>87	CompoundStatement	 
>88	ExpressionStatement	 
>89	CallExpression	max_width . update ( int ( cmd . first . length ( ) ) )
>90	ArgumentList	int ( cmd . first . length ( ) )
>91	Argument	int ( cmd . first . length ( ) )
>92	CallExpression	int ( cmd . first . length ( ) )
>93	ArgumentList	cmd . first . length ( )
>94	Argument	cmd . first . length ( )
>95	CallExpression	cmd . first . length ( )
>96	ArgumentList	 
>97	Callee	cmd . first . length
>98	MemberAccess	cmd . first . length
>99	Identifier	length
>100	MemberAccess	cmd . first
>101	Identifier	first
>102	Identifier	cmd
>103	Callee	int
>104	Identifier	int
>105	Callee	max_width . update
>106	MemberAccess	max_width . update
>107	Identifier	update
>108	Identifier	max_width
>109	Statement	 
>110	Statement	 
>111	Statement	 
>112	Statement	 
>113	Statement	 
>114	Statement	 
>115	Label	 
>116	Identifier	cmd
>117	Statement	 
>118	Statement	 
>119	Statement	 
>120	Statement	 
>121	Statement	 
>122	IdentifierDeclStatement	 
>123	IdentifierDecl	max_width
>124	Identifier	max_width
>125	IdentifierDeclType	osmium 
>134	FunctionDef	CommandFactory 
>135	ParameterList	const std 
>136	Parameter	 
>137	Identifier	create_function
>138	ParameterType	create_command_type
>139	Parameter	 
>140	Identifier	description
>141	ParameterType	const std 
>142	Parameter	 
>143	Identifier	name
>144	ParameterType	const std 
>145	ReturnType	bool
>146	CompoundStatement	 
>147	ReturnStatement	 
>148	CallExpression	instance ( ) . register_command ( name , description , create_function )
>149	ArgumentList	name
>150	Argument	create_function
>151	Identifier	create_function
>152	Argument	description
>153	Identifier	description
>154	Argument	name
>155	Identifier	name
>156	Callee	instance ( ) . register_command
>157	MemberAccess	instance ( ) . register_command
>158	Identifier	register_command
>159	CallExpression	instance ( )
>160	ArgumentList	 
>161	Callee	instance
>162	Identifier	instance
>171	FunctionDef	CommandFactory 
>172	ParameterList	const std 
>173	Parameter	 
>174	Identifier	name
>175	ParameterType	const std 
>176	ReturnType	std 
>177	CompoundStatement	 
>178	ReturnStatement	 
>179	MemberAccess	it -> second . description
>180	Identifier	description
>181	PtrMemberAccess	it -> second
>182	Identifier	second
>183	Identifier	it
>184	IfStatement	if ( it == instance ( ) . m_commands . end ( ) )
>185	CompoundStatement	 
>186	ReturnStatement	 
>187	PrimaryExpression	\"\"
>188	Condition	 
>189	EqualityExpression	it == instance ( ) . m_commands . end ( )
>190	CallExpression	instance ( ) . m_commands . end ( )
>191	ArgumentList	 
>192	Callee	instance ( ) . m_commands . end
>193	MemberAccess	instance ( ) . m_commands . end
>194	Identifier	end
>195	MemberAccess	instance ( ) . m_commands
>196	Identifier	m_commands
>197	CallExpression	instance ( )
>198	ArgumentList	 
>199	Callee	instance
>200	Identifier	instance
>201	Identifier	it
>202	ExpressionStatement	 
>203	AssignmentExpr	it = instance ( ) . m_commands . find ( name )
>204	CallExpression	instance ( ) . m_commands . find ( name )
>205	ArgumentList	name
>206	Argument	name
>207	Identifier	name
>208	Callee	instance ( ) . m_commands . find
>209	MemberAccess	instance ( ) . m_commands . find
>210	Identifier	find
>211	MemberAccess	instance ( ) . m_commands
>212	Identifier	m_commands
>213	CallExpression	instance ( )
>214	ArgumentList	 
>215	Callee	instance
>216	Identifier	instance
>217	Identifier	it
>218	Statement	 
>231	FunctionDef	CommandFactory 
>232	ParameterList	const std 
>233	Parameter	 
>234	Identifier	create_function
>235	ParameterType	create_command_type
>236	Parameter	 
>237	Identifier	description
>238	ParameterType	const std 
>239	Parameter	 
>240	Identifier	name
>241	ParameterType	const std 
>242	ReturnType	bool
>243	CompoundStatement	 
>244	ReturnStatement	 
>245	MemberAccess	m_commands . insert ( std 
>246	Identifier	second
>247	CallExpression	m_commands . insert ( std 
>248	ArgumentList	std 
>249	Argument	std 
>250	CallExpression	std 
>251	ArgumentList	name
>252	Argument	info
>253	Identifier	info
>254	Argument	name
>255	Identifier	name
>256	Callee	std 
>257	Identifier	std 
>258	Callee	m_commands . insert
>259	MemberAccess	m_commands . insert
>260	Identifier	insert
>261	Identifier	m_commands
>262	ExpressionStatement	 
>263	CompoundStatement	 
>264	Statement	 
>265	Statement	 
>266	Statement	 
>267	Statement	 
>268	Statement	 
>280	FunctionDef	CommandFactory 
>281	ParameterList	const std 
>282	Parameter	 
>283	Identifier	name
>284	ParameterType	const std 
>285	ReturnType	std 
>286	CompoundStatement	 
>287	ExpressionStatement	 
>288	Statement	 
>289	Statement	 
>290	Statement	 
>291	Statement	 
>292	Statement	 
>293	Statement	 
>294	Statement	 
>295	Statement	 
>296	Statement	 
>297	IfStatement	if ( it != m_commands . end ( ) )
>298	CompoundStatement	 
>299	ReturnStatement	 
>300	RelationalExpression	std 
>301	RelationalExpression	Command > ( ( it -> second . create ) ( ) )
>302	CallExpression	( it -> second . create ) ( )
>303	ArgumentList	 
>304	Callee	it -> second . create
>305	MemberAccess	it -> second . create
>306	Identifier	create
>307	PtrMemberAccess	it -> second
>308	Identifier	second
>309	Identifier	it
>310	Identifier	Command
>311	Identifier	std 
>312	Condition	 
>313	EqualityExpression	it != m_commands . end ( )
>314	CallExpression	m_commands . end ( )
>315	ArgumentList	 
>316	Callee	m_commands . end
>317	MemberAccess	m_commands . end
>318	Identifier	end
>319	Identifier	m_commands
>320	Identifier	it
>321	ExpressionStatement	 
>322	AssignmentExpr	it = m_commands . find ( name )
>323	CallExpression	m_commands . find ( name )
>324	ArgumentList	name
>325	Argument	name
>326	Identifier	name
>327	Callee	m_commands . find
>328	MemberAccess	m_commands . find
>329	Identifier	find
>330	Identifier	m_commands
>331	Identifier	it
>332	Statement	 
>333	Statement	 
<3=6,5,4
<6=13,9,7
<7=8
<9=10
<10=12,11
<18=20,19
<20=59,58,57,56,55,54,52,51,50,49,48,47,46,23,21
<21=22
<23=24
<24=25
<25=42,26
<26=27
<27=28
<28=40,29
<29=36,30
<30=31
<31=33,32
<33=35,34
<36=37
<37=39,38
<40=41
<42=43
<43=45,44
<52=53
<59=60
<60=64,61
<61=63,62
<64=68,65
<65=67,66
<78=81,80,79
<81=122,121,120,119,118,117,115,114,113,112,111,110,109,87,82
<82=83
<83=85,84
<85=86
<87=88
<88=89
<89=105,90
<90=91
<91=92
<92=103,93
<93=94
<94=95
<95=97,96
<97=98
<98=100,99
<100=102,101
<103=104
<105=106
<106=108,107
<115=116
<122=123
<123=125,124
<134=146,145,135
<135=142,139,136
<136=138,137
<139=141,140
<142=144,143
<146=147
<147=148
<148=156,149
<149=154,152,150
<150=151
<152=153
<154=155
<156=157
<157=159,158
<159=161,160
<161=162
<171=177,176,172
<172=173
<173=175,174
<177=218,202,184,178
<178=179
<179=181,180
<181=183,182
<184=188,185
<185=186
<186=187
<188=189
<189=201,190
<190=192,191
<192=193
<193=195,194
<195=197,196
<197=199,198
<199=200
<202=203
<203=217,204
<204=208,205
<205=206
<206=207
<208=209
<209=211,210
<211=213,212
<213=215,214
<215=216
<231=243,242,232
<232=239,236,233
<233=235,234
<236=238,237
<239=241,240
<243=268,267,263,262,244
<244=245
<245=247,246
<247=258,248
<248=249
<249=250
<250=256,251
<251=254,252
<252=253
<254=255
<256=257
<258=259
<259=261,260
<263=266,265,264
<280=286,285,281
<281=282
<282=284,283
<286=333,332,321,297,296,295,294,293,292,291,290,289,288,287
<297=312,298
<298=299
<299=300
<300=311,301
<301=310,302
<302=304,303
<304=305
<305=307,306
<307=309,308
<312=313
<313=320,314
<314=316,315
<316=317
<317=319,318
<321=322
<322=331,323
<323=327,324
<324=325
<325=326
<327=328
<328=330,329
