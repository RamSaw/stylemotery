>3	FunctionDef	StylesheetManager 
>4	ParameterList	const shared_ptr < Configuration > & config
>5	Parameter	 
>6	Identifier	config
>7	ParameterType	const shared_ptr < Configuration > &
>8	CompoundStatement	 
>9	ExpressionStatement	 
>10	AssignmentExpr	stylesheetFolder = config -> get < string > ( opt 
>11	RelationalExpression	config -> get < string > ( opt 
>12	RelationalExpression	string > ( opt 
>13	Identifier	opt 
>14	Identifier	string
>15	PtrMemberAccess	config -> get
>16	Identifier	get
>17	Identifier	config
>18	Identifier	stylesheetFolder
>28	FunctionDef	StylesheetManager 
>29	ParameterList	 
>30	CompoundStatement	 
>31	ExpressionStatement	 
>32	ShiftExpression	log . debugStream ( ) << \"StylesheetManager destructed\"
>33	PrimaryExpression	\"StylesheetManager destructed\"
>34	CallExpression	log . debugStream ( )
>35	ArgumentList	 
>36	Callee	log . debugStream
>37	MemberAccess	log . debugStream
>38	Identifier	debugStream
>39	Identifier	log
>44	FunctionDef	StylesheetManager 
>45	ParameterList	const shared_ptr < RequestManager > & manager
>46	Parameter	 
>47	Identifier	manager
>48	ParameterType	const shared_ptr < RequestManager > &
>49	ReturnType	void
>50	CompoundStatement	 
>51	ExpressionStatement	 
>52	AssignmentExpr	monitorThread = boost 
>53	CallExpression	boost 
>54	ArgumentList	boost 
>55	Argument	boost 
>56	CallExpression	boost 
>57	ArgumentList	& boost 
>58	Argument	& ioService
>59	UnaryOp	& ioService
>60	Identifier	ioService
>61	UnaryOperator	&
>62	Argument	& boost 
>63	UnaryOp	& boost 
>64	Identifier	boost 
>65	UnaryOperator	&
>66	Callee	boost 
>67	Identifier	boost 
>68	Callee	boost 
>69	Identifier	boost 
>70	Identifier	monitorThread
>71	ExpressionStatement	 
>72	CallExpression	monitorService -> async_monitor ( boost 
>73	ArgumentList	boost 
>74	Argument	boost 
>75	CallExpression	boost 
>76	ArgumentList	& StylesheetManager 
>77	Argument	_2
>78	Identifier	_2
>79	Argument	_1
>80	Identifier	_1
>81	Argument	shared_from_this ( )
>82	CallExpression	shared_from_this ( )
>83	ArgumentList	 
>84	Callee	shared_from_this
>85	Identifier	shared_from_this
>86	Argument	& StylesheetManager 
>87	UnaryOp	& StylesheetManager 
>88	Identifier	StylesheetManager 
>89	UnaryOperator	&
>90	Callee	boost 
>91	Identifier	boost 
>92	Callee	monitorService -> async_monitor
>93	PtrMemberAccess	monitorService -> async_monitor
>94	Identifier	async_monitor
>95	Identifier	monitorService
>96	ExpressionStatement	 
>97	CallExpression	monitorService -> add_directory ( config -> get < string > ( opt 
>98	ArgumentList	config -> get < string > ( opt 
>99	Argument	config -> get < string > ( opt 
>100	RelationalExpression	config -> get < string > ( opt 
>101	RelationalExpression	string > ( opt 
>102	Identifier	opt 
>103	Identifier	string
>104	PtrMemberAccess	config -> get
>105	Identifier	get
>106	Identifier	config
>107	Callee	monitorService -> add_directory
>108	PtrMemberAccess	monitorService -> add_directory
>109	Identifier	add_directory
>110	Identifier	monitorService
>111	ForStatement	for ( fs 
>112	CompoundStatement	 
>113	IfStatement	if ( fs 
>114	CompoundStatement	 
>115	ExpressionStatement	 
>116	CallExpression	StylesheetManager 
>117	ArgumentList	dir_iter -> path ( ) . stem ( )
>118	Argument	dir_iter -> path ( ) . stem ( )
>119	CallExpression	dir_iter -> path ( ) . stem ( )
>120	ArgumentList	 
>121	Callee	dir_iter -> path ( ) . stem
>122	MemberAccess	dir_iter -> path ( ) . stem
>123	Identifier	stem
>124	CallExpression	dir_iter -> path ( )
>125	ArgumentList	 
>126	Callee	dir_iter -> path
>127	PtrMemberAccess	dir_iter -> path
>128	Identifier	path
>129	Identifier	dir_iter
>130	Callee	StylesheetManager 
>131	Identifier	StylesheetManager 
>132	Condition	 
>133	AndExpression	fs 
>134	EqualityExpression	dir_iter -> path ( ) . extension ( ) == \".mapcss\"
>135	PrimaryExpression	\".mapcss\"
>136	CallExpression	dir_iter -> path ( ) . extension ( )
>137	ArgumentList	 
>138	Callee	dir_iter -> path ( ) . extension
>139	MemberAccess	dir_iter -> path ( ) . extension
>140	Identifier	extension
>141	CallExpression	dir_iter -> path ( )
>142	ArgumentList	 
>143	Callee	dir_iter -> path
>144	PtrMemberAccess	dir_iter -> path
>145	Identifier	path
>146	Identifier	dir_iter
>147	CallExpression	fs 
>148	ArgumentList	dir_iter -> status ( )
>149	Argument	dir_iter -> status ( )
>150	CallExpression	dir_iter -> status ( )
>151	ArgumentList	 
>152	Callee	dir_iter -> status
>153	PtrMemberAccess	dir_iter -> status
>154	Identifier	status
>155	Identifier	dir_iter
>156	Callee	fs 
>157	Identifier	fs 
>158	UnaryExpression	 
>159	Identifier	dir_iter
>160	IncDec	++
>161	Condition	 
>162	EqualityExpression	dir_iter != end_iter
>163	Identifier	end_iter
>164	Identifier	dir_iter
>165	ForInit	 
>166	IdentifierDeclStatement	fs 
>167	IdentifierDecl	dir_iter ( stylesheetFolder )
>168	Identifier	stylesheetFolder
>169	Identifier	dir_iter
>170	IdentifierDeclType	fs 
>171	IdentifierDeclStatement	 
>172	IdentifierDecl	writeLock ( stylesheetsLock )
>173	Identifier	stylesheetsLock
>174	Identifier	writeLock
>175	IdentifierDeclType	boost 
>176	IdentifierDeclStatement	 
>177	IdentifierDecl	end_iter
>178	Identifier	end_iter
>179	IdentifierDeclType	fs 
>180	ExpressionStatement	 
>181	AssignmentExpr	parsedStylesheets [ \".fallback\" ] = StylesheetManager 
>182	CallExpression	StylesheetManager 
>183	ArgumentList	manager -> getGeodata ( )
>184	Argument	manager -> getGeodata ( )
>185	CallExpression	manager -> getGeodata ( )
>186	ArgumentList	 
>187	Callee	manager -> getGeodata
>188	PtrMemberAccess	manager -> getGeodata
>189	Identifier	getGeodata
>190	Identifier	manager
>191	Callee	StylesheetManager 
>192	Identifier	StylesheetManager 
>193	ArrayIndexing	parsedStylesheets [ \".fallback\" ]
>194	PrimaryExpression	\".fallback\"
>195	Identifier	parsedStylesheets
>196	ExpressionStatement	 
>197	AssignmentExpr	this -> manager = manager
>198	Identifier	manager
>199	PtrMemberAccess	this -> manager
>200	Identifier	manager
>201	Identifier	this
>238	FunctionDef	StylesheetManager 
>239	ParameterList	 
>240	ReturnType	void
>241	CompoundStatement	 
>242	ExpressionStatement	 
>243	CallExpression	monitorThread . join ( )
>244	ArgumentList	 
>245	Callee	monitorThread . join
>246	MemberAccess	monitorThread . join
>247	Identifier	join
>248	Identifier	monitorThread
>249	ExpressionStatement	 
>250	CallExpression	monitorService . reset ( )
>251	ArgumentList	 
>252	Callee	monitorService . reset
>253	MemberAccess	monitorService . reset
>254	Identifier	reset
>255	Identifier	monitorService
>261	FunctionDef	StylesheetManager 
>262	ParameterList	const string & path
>263	Parameter	 
>264	Identifier	path
>265	ParameterType	const string &
>266	ReturnType	bool
>267	CompoundStatement	 
>268	ReturnStatement	 
>269	Identifier	contained
>270	IdentifierDeclStatement	 
>271	IdentifierDecl	contained = ( entry != parsedStylesheets . end ( ) )
>272	AssignmentExpr	contained = ( entry != parsedStylesheets . end ( ) )
>273	EqualityExpression	entry != parsedStylesheets . end ( )
>274	CallExpression	parsedStylesheets . end ( )
>275	ArgumentList	 
>276	Callee	parsedStylesheets . end
>277	MemberAccess	parsedStylesheets . end
>278	Identifier	end
>279	Identifier	parsedStylesheets
>280	Identifier	entry
>281	Identifier	contained
>282	Identifier	contained
>283	IdentifierDeclType	bool
>284	ExpressionStatement	 
>285	AssignmentExpr	entry = parsedStylesheets . find ( path )
>286	CallExpression	parsedStylesheets . find ( path )
>287	ArgumentList	path
>288	Argument	path
>289	Identifier	path
>290	Callee	parsedStylesheets . find
>291	MemberAccess	parsedStylesheets . find
>292	Identifier	find
>293	Identifier	parsedStylesheets
>294	Identifier	entry
>295	Statement	 
>296	IdentifierDeclStatement	 
>297	IdentifierDecl	readLock ( stylesheetsLock )
>298	Identifier	stylesheetsLock
>299	Identifier	readLock
>300	IdentifierDeclType	boost 
>311	FunctionDef	StylesheetManager 
>312	ParameterList	const string & path
>313	Parameter	 
>314	Identifier	path
>315	ParameterType	const string &
>316	ReturnType	shared_ptr < Stylesheet >
>317	CompoundStatement	 
>318	ReturnStatement	 
>319	Identifier	result
>320	IfStatement	if ( entry != parsedStylesheets . end ( ) )
>321	ElseStatement	else
>322	CompoundStatement	 
>323	ExpressionStatement	 
>324	AssignmentExpr	result = parsedStylesheets [ \".fallback\" ]
>325	ArrayIndexing	parsedStylesheets [ \".fallback\" ]
>326	PrimaryExpression	\".fallback\"
>327	Identifier	parsedStylesheets
>328	Identifier	result
>329	CompoundStatement	 
>330	ExpressionStatement	 
>331	AssignmentExpr	result = entry -> second
>332	PtrMemberAccess	entry -> second
>333	Identifier	second
>334	Identifier	entry
>335	Identifier	result
>336	Condition	 
>337	EqualityExpression	entry != parsedStylesheets . end ( )
>338	CallExpression	parsedStylesheets . end ( )
>339	ArgumentList	 
>340	Callee	parsedStylesheets . end
>341	MemberAccess	parsedStylesheets . end
>342	Identifier	end
>343	Identifier	parsedStylesheets
>344	Identifier	entry
>345	IdentifierDeclStatement	 
>346	IdentifierDecl	result
>347	Identifier	result
>348	IdentifierDeclType	shared_ptr < Stylesheet >
>349	ExpressionStatement	 
>350	AssignmentExpr	entry = parsedStylesheets . find ( path )
>351	CallExpression	parsedStylesheets . find ( path )
>352	ArgumentList	path
>353	Argument	path
>354	Identifier	path
>355	Callee	parsedStylesheets . find
>356	MemberAccess	parsedStylesheets . find
>357	Identifier	find
>358	Identifier	parsedStylesheets
>359	Identifier	entry
>360	Statement	 
>361	IdentifierDeclStatement	 
>362	IdentifierDecl	readLock ( stylesheetsLock )
>363	Identifier	stylesheetsLock
>364	Identifier	readLock
>365	IdentifierDeclType	boost 
>379	FunctionDef	StylesheetManager 
>380	ParameterList	const fs 
>381	Parameter	 
>382	Identifier	stylesheet_path
>383	ParameterType	const fs 
>384	ReturnType	void
>385	CompoundStatement	 
>386	ExpressionStatement	 
>387	CallExpression	manager -> enqueue ( boost 
>388	ArgumentList	boost 
>389	Argument	boost 
>390	RelationalExpression	boost 
>391	RelationalExpression	MetaIdentifier > ( TileIdentifier ( 0 , 0 , 0 , stylesheet_path . string ( ) , TileIdentifier 
>392	CallExpression	TileIdentifier ( 0 , 0 , 0 , stylesheet_path . string ( ) , TileIdentifier 
>393	ArgumentList	0
>394	Argument	TileIdentifier 
>395	Identifier	TileIdentifier 
>396	Argument	stylesheet_path . string ( )
>397	CallExpression	stylesheet_path . string ( )
>398	ArgumentList	 
>399	Callee	stylesheet_path . string
>400	MemberAccess	stylesheet_path . string
>401	Identifier	string
>402	Identifier	stylesheet_path
>403	Argument	0
>404	PrimaryExpression	0
>405	Argument	0
>406	PrimaryExpression	0
>407	Argument	0
>408	PrimaryExpression	0
>409	Callee	TileIdentifier
>410	Identifier	TileIdentifier
>411	Identifier	MetaIdentifier
>412	Identifier	boost 
>413	Callee	manager -> enqueue
>414	PtrMemberAccess	manager -> enqueue
>415	Identifier	enqueue
>416	Identifier	manager
>417	ExpressionStatement	 
>418	AssignmentExpr	parsedStylesheets [ stylesheet_path ] = stylesheet
>419	Identifier	stylesheet
>420	ArrayIndexing	parsedStylesheets [ stylesheet_path ]
>421	Identifier	stylesheet_path
>422	Identifier	parsedStylesheets
>423	BlockStarter	 
>424	CompoundStatement	 
>425	ReturnStatement	return ;
>426	ExpressionStatement	logger -> errorStream ( ) << \"You can configure the timeout via '--parse-timeout'.\"
>427	ShiftExpression	logger -> errorStream ( ) << \"You can configure the timeout via '--parse-timeout'.\"
>428	PrimaryExpression	\"You can configure the timeout via '--parse-timeout'.\"
>429	CallExpression	logger -> errorStream ( )
>430	ArgumentList	 
>431	Callee	logger -> errorStream
>432	PtrMemberAccess	logger -> errorStream
>433	Identifier	errorStream
>434	Identifier	logger
>435	ExpressionStatement	logger -> errorStream ( ) << \"Parsing canceled!\"
>436	ShiftExpression	logger -> errorStream ( ) << \"Parsing canceled!\"
>437	PrimaryExpression	\"Parsing canceled!\"
>438	CallExpression	logger -> errorStream ( )
>439	ArgumentList	 
>440	Callee	logger -> errorStream
>441	PtrMemberAccess	logger -> errorStream
>442	Identifier	errorStream
>443	Identifier	logger
>444	ExpressionStatement	logger -> errorStream ( ) << \"Parsing of stylesheet \" << stylesheet_path << \" took more then \" << timeout << \" ms!\"\
>445	ShiftExpression	logger -> errorStream ( ) << \"Parsing of stylesheet \" << stylesheet_path << \" took more then \" << timeout << \" \
>446	ShiftExpression	\"Parsing of stylesheet \" << stylesheet_path << \" took more then \" << timeout << \" ms!\"
>447	ShiftExpression	stylesheet_path << \" took more then \" << timeout << \" ms!\"
>448	ShiftExpression	\" took more then \" << timeout << \" ms!\"
>449	ShiftExpression	timeout << \" ms!\"
>450	PrimaryExpression	\" ms!\"
>451	Identifier	timeout
>452	PrimaryExpression	\" took more then \"
>453	Identifier	stylesheet_path
>454	PrimaryExpression	\"Parsing of stylesheet \"
>455	CallExpression	logger -> errorStream ( )
>456	ArgumentList	 
>457	Callee	logger -> errorStream
>458	PtrMemberAccess	logger -> errorStream
>459	Identifier	errorStream
>460	Identifier	logger
>461	IdentifierDeclStatement	shared_ptr < ParserLogger > logger = boost 
>462	IdentifierDecl	logger = boost 
>463	AssignmentExpr	logger = boost 
>464	RelationalExpression	boost 
>465	RelationalExpression	ParserLogger > ( stylesheet_path . string ( ) )
>466	CallExpression	stylesheet_path . string ( )
>467	ArgumentList	 
>468	Callee	stylesheet_path . string
>469	MemberAccess	stylesheet_path . string
>470	Identifier	string
>471	Identifier	stylesheet_path
>472	Identifier	ParserLogger
>473	Identifier	boost 
>474	Identifier	logger
>475	Identifier	logger
>476	IdentifierDeclType	shared_ptr < ParserLogger >
>477	BlockStarter	 
>478	CompoundStatement	 
>479	ReturnStatement	return ;
>480	IfStatement	if ( errColumn )
>481	ExpressionStatement	logger -> errorStream ( ) << string ( * errColumn , ' ' ) << \"^-here\"
>482	ShiftExpression	logger -> errorStream ( ) << string ( * errColumn , ' ' ) << \"^-here\"
>483	ShiftExpression	string ( * errColumn , ' ' ) << \"^-here\"
>484	PrimaryExpression	\"^-here\"
>485	CallExpression	string ( * errColumn , ' ' )
>486	ArgumentList	* errColumn
>487	Argument	' '
>488	PrimaryExpression	' '
>489	Argument	* errColumn
>490	UnaryOp	* errColumn
>491	Identifier	errColumn
>492	UnaryOperator	*
>493	Callee	string
>494	Identifier	string
>495	CallExpression	logger -> errorStream ( )
>496	ArgumentList	 
>497	Callee	logger -> errorStream
>498	PtrMemberAccess	logger -> errorStream
>499	Identifier	errorStream
>500	Identifier	logger
>501	Condition	errColumn
>502	Identifier	errColumn
>503	IfStatement	if ( errLine )
>504	ExpressionStatement	logger -> errorStream ( ) << \"'\" << * errLine << \"'\"
>505	ShiftExpression	logger -> errorStream ( ) << \"'\" << * errLine << \"'\"
>506	ShiftExpression	\"'\" << * errLine << \"'\"
>507	ShiftExpression	* errLine << \"'\"
>508	PrimaryExpression	\"'\"
>509	UnaryOp	* errLine
>510	Identifier	errLine
>511	UnaryOperator	*
>512	PrimaryExpression	\"'\"
>513	CallExpression	logger -> errorStream ( )
>514	ArgumentList	 
>515	Callee	logger -> errorStream
>516	PtrMemberAccess	logger -> errorStream
>517	Identifier	errorStream
>518	Identifier	logger
>519	Condition	errLine
>520	Identifier	errLine
>521	IdentifierDeclStatement	const int * errColumn = boost 
>522	IdentifierDecl	* errColumn = boost 
>523	AssignmentExpr	* errColumn = boost 
>524	RelationalExpression	boost 
>525	RelationalExpression	excp 
>526	Identifier	e
>527	Identifier	excp 
>528	Identifier	boost 
>529	Identifier	errColumn
>530	Identifier	errColumn
>531	IdentifierDeclType	const int *
>532	IdentifierDeclStatement	const string * errLine = boost 
>533	IdentifierDecl	* errLine = boost 
>534	AssignmentExpr	* errLine = boost 
>535	RelationalExpression	boost 
>536	RelationalExpression	excp 
>537	Identifier	e
>538	Identifier	excp 
>539	Identifier	boost 
>540	Identifier	errLine
>541	Identifier	errLine
>542	IdentifierDeclType	const string *
>543	ExpressionStatement	logger -> errorStream ( ) << \"In line \" << excp 
>544	RelationalExpression	logger -> errorStream ( ) << \"In line \" << excp 
>545	RelationalExpression	excp 
>546	RelationalExpression	( e ) << \" column \" << excp 
>547	RelationalExpression	excp 
>548	ShiftExpression	( e ) << \"
>549	PrimaryExpression	\"
>550	Identifier	e
>551	Identifier	excp 
>552	ShiftExpression	( e ) << \" column \" << excp 
>553	ShiftExpression	\" column \" << excp 
>554	Identifier	excp 
>555	PrimaryExpression	\" column \"
>556	Identifier	e
>557	Identifier	excp 
>558	ShiftExpression	logger -> errorStream ( ) << \"In line \" << excp 
>559	ShiftExpression	\"In line \" << excp 
>560	Identifier	excp 
>561	PrimaryExpression	\"In line \"
>562	CallExpression	logger -> errorStream ( )
>563	ArgumentList	 
>564	Callee	logger -> errorStream
>565	PtrMemberAccess	logger -> errorStream
>566	Identifier	errorStream
>567	Identifier	logger
>568	ExpressionStatement	logger -> errorStream ( ) << excp 
>569	RelationalExpression	logger -> errorStream ( ) << excp 
>570	RelationalExpression	excp 
>571	Expression	e , \"unknown reason!\"
>572	PrimaryExpression	\"unknown reason!\"
>573	Identifier	e
>574	Identifier	excp 
>575	ShiftExpression	logger -> errorStream ( ) << excp 
>576	Identifier	excp 
>577	CallExpression	logger -> errorStream ( )
>578	ArgumentList	 
>579	Callee	logger -> errorStream
>580	PtrMemberAccess	logger -> errorStream
>581	Identifier	errorStream
>582	Identifier	logger
>583	ExpressionStatement	logger -> errorStream ( ) << \"Parsing of file \\"\" << excp 
>584	RelationalExpression	logger -> errorStream ( ) << \"Parsing of file \\"\" << excp 
>585	RelationalExpression	excp 
>586	ShiftExpression	( e , stylesheet_path . string ( ) ) << \"\\" failed
>587	PrimaryExpression	\"\\" failed
>588	Expression	e , stylesheet_path . string ( )
>589	CallExpression	stylesheet_path . string ( )
>590	ArgumentList	 
>591	Callee	stylesheet_path . string
>592	MemberAccess	stylesheet_path . string
>593	Identifier	string
>594	Identifier	stylesheet_path
>595	Identifier	e
>596	Identifier	excp 
>597	ShiftExpression	logger -> errorStream ( ) << \"Parsing of file \\"\" << excp 
>598	ShiftExpression	\"Parsing of file \\"\" << excp 
>599	Identifier	excp 
>600	PrimaryExpression	\"Parsing of file \\"\"
>601	CallExpression	logger -> errorStream ( )
>602	ArgumentList	 
>603	Callee	logger -> errorStream
>604	PtrMemberAccess	logger -> errorStream
>605	Identifier	errorStream
>606	Identifier	logger
>607	IdentifierDeclStatement	shared_ptr < ParserLogger > logger = * boost 
>608	IdentifierDecl	logger = * boost 
>609	AssignmentExpr	logger = * boost 
>610	RelationalExpression	* boost 
>611	RelationalExpression	excp 
>612	Identifier	e
>613	Identifier	excp 
>614	UnaryOp	* boost 
>615	Identifier	boost 
>616	UnaryOperator	*
>617	Identifier	logger
>618	Identifier	logger
>619	IdentifierDeclType	shared_ptr < ParserLogger >
>620	Identifier	e
>621	BlockStarter	 
>622	CompoundStatement	 
>623	ExpressionStatement	stylesheet = Stylesheet 
>624	AssignmentExpr	stylesheet = Stylesheet 
>625	CallExpression	Stylesheet 
>626	ArgumentList	stylesheetFolder / filename
>627	Argument	timeout
>628	Identifier	timeout
>629	Argument	manager -> getGeodata ( )
>630	CallExpression	manager -> getGeodata ( )
>631	ArgumentList	 
>632	Callee	manager -> getGeodata
>633	PtrMemberAccess	manager -> getGeodata
>634	Identifier	getGeodata
>635	Identifier	manager
>636	Argument	stylesheetFolder / filename
>637	MultiplicativeExpression	stylesheetFolder / filename
>638	Identifier	filename
>639	Identifier	stylesheetFolder
>640	Callee	Stylesheet 
>641	Identifier	Stylesheet 
>642	Identifier	stylesheet
>643	IdentifierDeclStatement	fs 
>644	IdentifierDecl	filename ( new_filename )
>645	Identifier	new_filename
>646	Identifier	filename
>647	IdentifierDeclType	fs 
>648	IdentifierDeclStatement	std 
>649	IdentifierDecl	new_filename = stylesheet_path . filename ( ) . string ( ) + \".mapcss\"
>650	AssignmentExpr	new_filename = stylesheet_path . filename ( ) . string ( ) + \".mapcss\"
>651	AdditiveExpression	stylesheet_path . filename ( ) . string ( ) + \".mapcss\"
>652	PrimaryExpression	\".mapcss\"
>653	CallExpression	stylesheet_path . filename ( ) . string ( )
>654	ArgumentList	 
>655	Callee	stylesheet_path . filename ( ) . string
>656	MemberAccess	stylesheet_path . filename ( ) . string
>657	Identifier	string
>658	CallExpression	stylesheet_path . filename ( )
>659	ArgumentList	 
>660	Callee	stylesheet_path . filename
>661	MemberAccess	stylesheet_path . filename
>662	Identifier	filename
>663	Identifier	stylesheet_path
>664	Identifier	new_filename
>665	Identifier	new_filename
>666	IdentifierDeclType	std 
>667	IdentifierDeclStatement	 
>668	IdentifierDecl	timeout = config -> get < int > ( opt 
>669	AssignmentExpr	timeout = config -> get < int > ( opt 
>670	RelationalExpression	config -> get < int > ( opt 
>671	RelationalExpression	int > ( opt 
>672	Identifier	opt 
>673	Identifier	int
>674	PtrMemberAccess	config -> get
>675	Identifier	get
>676	Identifier	config
>677	Identifier	timeout
>678	Identifier	timeout
>679	IdentifierDeclType	int
>680	IdentifierDeclStatement	 
>681	IdentifierDecl	stylesheet
>682	Identifier	stylesheet
>683	IdentifierDeclType	shared_ptr < Stylesheet >
>684	ExpressionStatement	 
>685	CallExpression	assert ( manager )
>686	ArgumentList	manager
>687	Argument	manager
>688	Identifier	manager
>689	Callee	assert
>690	Identifier	assert
>691	IdentifierDeclStatement	 
>692	IdentifierDecl	manager = this -> manager . lock ( )
>693	AssignmentExpr	manager = this -> manager . lock ( )
>694	CallExpression	this -> manager . lock ( )
>695	ArgumentList	 
>696	Callee	this -> manager . lock
>697	MemberAccess	this -> manager . lock
>698	Identifier	lock
>699	PtrMemberAccess	this -> manager
>700	Identifier	manager
>701	Identifier	this
>702	Identifier	manager
>703	Identifier	manager
>704	IdentifierDeclType	shared_ptr < RequestManager >
>748	FunctionDef	StylesheetManager 
>749	ParameterList	const fs 
>750	Parameter	 
>751	Identifier	stylesheet_path
>752	ParameterType	const fs 
>753	ReturnType	void
>754	CompoundStatement	 
>755	ExpressionStatement	 
>756	ShiftExpression	log . infoStream ( ) << \"Deleted Stylesheet[\" << stylesheet_path << \"] from Tile Cache and Stylesheet \
>757	ShiftExpression	\"Deleted Stylesheet[\" << stylesheet_path << \"] from Tile Cache and Stylesheet Cache.\"
>758	ShiftExpression	stylesheet_path << \"] from Tile Cache and Stylesheet Cache.\"
>759	PrimaryExpression	\"] from Tile Cache and Stylesheet Cache.\"
>760	Identifier	stylesheet_path
>761	PrimaryExpression	\"Deleted Stylesheet[\"
>762	CallExpression	log . infoStream ( )
>763	ArgumentList	 
>764	Callee	log . infoStream
>765	MemberAccess	log . infoStream
>766	Identifier	infoStream
>767	Identifier	log
>768	ExpressionStatement	 
>769	CallExpression	parsedStylesheets . erase ( stylesheet_path )
>770	ArgumentList	stylesheet_path
>771	Argument	stylesheet_path
>772	Identifier	stylesheet_path
>773	Callee	parsedStylesheets . erase
>774	MemberAccess	parsedStylesheets . erase
>775	Identifier	erase
>776	Identifier	parsedStylesheets
>777	ExpressionStatement	 
>778	CallExpression	manager -> getCache ( ) -> deleteTiles ( stylesheet_path . string ( ) )
>779	ArgumentList	stylesheet_path . string ( )
>780	Argument	stylesheet_path . string ( )
>781	CallExpression	stylesheet_path . string ( )
>782	ArgumentList	 
>783	Callee	stylesheet_path . string
>784	MemberAccess	stylesheet_path . string
>785	Identifier	string
>786	Identifier	stylesheet_path
>787	Callee	manager -> getCache ( ) -> deleteTiles
>788	PtrMemberAccess	manager -> getCache ( ) -> deleteTiles
>789	Identifier	deleteTiles
>790	CallExpression	manager -> getCache ( )
>791	ArgumentList	 
>792	Callee	manager -> getCache
>793	PtrMemberAccess	manager -> getCache
>794	Identifier	getCache
>795	Identifier	manager
>796	ExpressionStatement	 
>797	CallExpression	assert ( manager )
>798	ArgumentList	manager
>799	Argument	manager
>800	Identifier	manager
>801	Callee	assert
>802	Identifier	assert
>803	IdentifierDeclStatement	 
>804	IdentifierDecl	manager = this -> manager . lock ( )
>805	AssignmentExpr	manager = this -> manager . lock ( )
>806	CallExpression	this -> manager . lock ( )
>807	ArgumentList	 
>808	Callee	this -> manager . lock
>809	MemberAccess	this -> manager . lock
>810	Identifier	lock
>811	PtrMemberAccess	this -> manager
>812	Identifier	manager
>813	Identifier	this
>814	Identifier	manager
>815	Identifier	manager
>816	IdentifierDeclType	shared_ptr < RequestManager >
>831	FunctionDef	StylesheetManager 
>832	ParameterList	const boost 
>833	Parameter	 
>834	Identifier	ev
>835	ParameterType	const boost 
>836	Parameter	 
>837	Identifier	ec
>838	ParameterType	const boost 
>839	ReturnType	void
>840	CompoundStatement	 
>841	ExpressionStatement	 
>842	CallExpression	monitorService -> async_monitor ( boost 
>843	ArgumentList	boost 
>844	Argument	boost 
>845	CallExpression	boost 
>846	ArgumentList	& StylesheetManager 
>847	Argument	_2
>848	Identifier	_2
>849	Argument	_1
>850	Identifier	_1
>851	Argument	shared_from_this ( )
>852	CallExpression	shared_from_this ( )
>853	ArgumentList	 
>854	Callee	shared_from_this
>855	Identifier	shared_from_this
>856	Argument	& StylesheetManager 
>857	UnaryOp	& StylesheetManager 
>858	Identifier	StylesheetManager 
>859	UnaryOperator	&
>860	Callee	boost 
>861	Identifier	boost 
>862	Callee	monitorService -> async_monitor
>863	PtrMemberAccess	monitorService -> async_monitor
>864	Identifier	async_monitor
>865	Identifier	monitorService
>866	IfStatement	if ( path . extension ( ) == \".mapcss\" && path . stem ( ) . string ( ) . find ( \".\" ) != 0 )
>867	CompoundStatement	 
>868	SwitchStatement	switch ( ev . type )
>869	CompoundStatement	 
>870	BreakStatement	 
>871	Label	 
>872	Identifier	default
>873	BreakStatement	 
>874	CompoundStatement	 
>875	ExpressionStatement	 
>876	CallExpression	onNewStylesheet ( path )
>877	ArgumentList	path
>878	Argument	path
>879	Identifier	path
>880	Callee	onNewStylesheet
>881	Identifier	onNewStylesheet
>882	ExpressionStatement	 
>883	CallExpression	onRemovedStylesheet ( path )
>884	ArgumentList	path
>885	Argument	path
>886	Identifier	path
>887	Callee	onRemovedStylesheet
>888	Identifier	onRemovedStylesheet
>889	ExpressionStatement	 
>890	ShiftExpression	log . infoStream ( ) << \"Stylesheet[\" << path << \"] modified!\"
>891	ShiftExpression	\"Stylesheet[\" << path << \"] modified!\"
>892	ShiftExpression	path << \"] modified!\"
>893	PrimaryExpression	\"] modified!\"
>894	Identifier	path
>895	PrimaryExpression	\"Stylesheet[\"
>896	CallExpression	log . infoStream ( )
>897	ArgumentList	 
>898	Callee	log . infoStream
>899	MemberAccess	log . infoStream
>900	Identifier	infoStream
>901	Identifier	log
>902	Label	 
>903	Identifier	eventtype 
>904	BreakStatement	 
>905	CompoundStatement	 
>906	ExpressionStatement	 
>907	CallExpression	onRemovedStylesheet ( path )
>908	ArgumentList	path
>909	Argument	path
>910	Identifier	path
>911	Callee	onRemovedStylesheet
>912	Identifier	onRemovedStylesheet
>913	ExpressionStatement	 
>914	ShiftExpression	log . infoStream ( ) << \"Stylesheet[\" << path << \"] removed!\"
>915	ShiftExpression	\"Stylesheet[\" << path << \"] removed!\"
>916	ShiftExpression	path << \"] removed!\"
>917	PrimaryExpression	\"] removed!\"
>918	Identifier	path
>919	PrimaryExpression	\"Stylesheet[\"
>920	CallExpression	log . infoStream ( )
>921	ArgumentList	 
>922	Callee	log . infoStream
>923	MemberAccess	log . infoStream
>924	Identifier	infoStream
>925	Identifier	log
>926	Label	 
>927	Identifier	eventtype 
>928	BreakStatement	 
>929	CompoundStatement	 
>930	ExpressionStatement	 
>931	CallExpression	onNewStylesheet ( path )
>932	ArgumentList	path
>933	Argument	path
>934	Identifier	path
>935	Callee	onNewStylesheet
>936	Identifier	onNewStylesheet
>937	ExpressionStatement	 
>938	ShiftExpression	log . infoStream ( ) << \"Stylesheet[\" << path << \"] added!\"
>939	ShiftExpression	\"Stylesheet[\" << path << \"] added!\"
>940	ShiftExpression	path << \"] added!\"
>941	PrimaryExpression	\"] added!\"
>942	Identifier	path
>943	PrimaryExpression	\"Stylesheet[\"
>944	CallExpression	log . infoStream ( )
>945	ArgumentList	 
>946	Callee	log . infoStream
>947	MemberAccess	log . infoStream
>948	Identifier	infoStream
>949	Identifier	log
>950	Label	 
>951	Identifier	eventtype 
>952	Condition	 
>953	MemberAccess	ev . type
>954	Identifier	type
>955	Identifier	ev
>956	IdentifierDeclStatement	 
>957	IdentifierDecl	writeLock ( stylesheetsLock )
>958	Identifier	stylesheetsLock
>959	Identifier	writeLock
>960	IdentifierDeclType	boost 
>961	ExpressionStatement	 
>962	AssignmentExpr	path = path . stem ( )
>963	CallExpression	path . stem ( )
>964	ArgumentList	 
>965	Callee	path . stem
>966	MemberAccess	path . stem
>967	Identifier	stem
>968	Identifier	path
>969	Identifier	path
>970	Condition	 
>971	AndExpression	path . extension ( ) == \".mapcss\" && path . stem ( ) . string ( ) . find ( \".\" ) != 0
>972	EqualityExpression	path . stem ( ) . string ( ) . find ( \".\" ) != 0
>973	PrimaryExpression	0
>974	CallExpression	path . stem ( ) . string ( ) . find ( \".\" )
>975	ArgumentList	\".\"
>976	Argument	\".\"
>977	PrimaryExpression	\".\"
>978	Callee	path . stem ( ) . string ( ) . find
>979	MemberAccess	path . stem ( ) . string ( ) . find
>980	Identifier	find
>981	CallExpression	path . stem ( ) . string ( )
>982	ArgumentList	 
>983	Callee	path . stem ( ) . string
>984	MemberAccess	path . stem ( ) . string
>985	Identifier	string
>986	CallExpression	path . stem ( )
>987	ArgumentList	 
>988	Callee	path . stem
>989	MemberAccess	path . stem
>990	Identifier	stem
>991	Identifier	path
>992	EqualityExpression	path . extension ( ) == \".mapcss\"
>993	PrimaryExpression	\".mapcss\"
>994	CallExpression	path . extension ( )
>995	ArgumentList	 
>996	Callee	path . extension
>997	MemberAccess	path . extension
>998	Identifier	extension
>999	Identifier	path
>1000	IdentifierDeclStatement	 
>1001	IdentifierDecl	path = fs 
>1002	AssignmentExpr	path = fs 
>1003	CallExpression	fs 
>1004	ArgumentList	ev . filename
>1005	Argument	ev . filename
>1006	MemberAccess	ev . filename
>1007	Identifier	filename
>1008	Identifier	ev
>1009	Callee	fs 
>1010	Identifier	fs 
>1011	Identifier	path
>1012	Identifier	path
>1013	IdentifierDeclType	fs 
>1014	IfStatement	if ( ec != boost 
>1015	CompoundStatement	 
>1016	ReturnStatement	 
>1017	IfStatement	if ( ec != boost 
>1018	CompoundStatement	 
>1019	ExpressionStatement	 
>1020	ShiftExpression	log . errorStream ( ) << ec . message ( )
>1021	CallExpression	ec . message ( )
>1022	ArgumentList	 
>1023	Callee	ec . message
>1024	MemberAccess	ec . message
>1025	Identifier	message
>1026	Identifier	ec
>1027	CallExpression	log . errorStream ( )
>1028	ArgumentList	 
>1029	Callee	log . errorStream
>1030	MemberAccess	log . errorStream
>1031	Identifier	errorStream
>1032	Identifier	log
>1033	ExpressionStatement	 
>1034	ShiftExpression	log . errorStream ( ) << \"Error while watching the stylesheet folder[\" << stylesheetFolder << \"]
>1035	ShiftExpression	\"Error while watching the stylesheet folder[\" << stylesheetFolder << \"]
>1036	ShiftExpression	stylesheetFolder << \"]
>1037	PrimaryExpression	\"]
>1038	Identifier	stylesheetFolder
>1039	PrimaryExpression	\"Error while watching the stylesheet folder[\"
>1040	CallExpression	log . errorStream ( )
>1041	ArgumentList	 
>1042	Callee	log . errorStream
>1043	MemberAccess	log . errorStream
>1044	Identifier	errorStream
>1045	Identifier	log
>1046	Condition	 
>1047	EqualityExpression	ec != boost 
>1048	Identifier	boost 
>1049	Identifier	ec
>1050	Condition	 
>1051	EqualityExpression	ec != boost 
>1052	CallExpression	boost 
>1053	ArgumentList	 
>1054	Callee	boost 
>1055	Identifier	boost 
>1056	Identifier	ec
>1057	IdentifierDeclStatement	 
>1058	IdentifierDecl	eventtype
>1059	Identifier	eventtype
>1060	IdentifierDeclType	boost 
>1085	FunctionDef	StylesheetManager 
>1086	ParameterList	const shared_ptr < Geodata > & geodata
>1087	Parameter	 
>1088	Identifier	geodata
>1089	ParameterType	const shared_ptr < Geodata > &
>1090	ReturnType	shared_ptr < Stylesheet >
>1091	CompoundStatement	 
>1092	ReturnStatement	 
>1093	RelationalExpression	boost 
>1094	RelationalExpression	Stylesheet > ( geodata , rules , canvasStyle )
>1095	Expression	geodata , rules , canvasStyle
>1096	Expression	rules , canvasStyle
>1097	Identifier	canvasStyle
>1098	Identifier	rules
>1099	Identifier	geodata
>1100	Identifier	Stylesheet
>1101	Identifier	boost 
>1102	ExpressionStatement	 
>1103	CallExpression	rules . push_back ( adminRule )
>1104	ArgumentList	adminRule
>1105	Argument	adminRule
>1106	Identifier	adminRule
>1107	Callee	rules . push_back
>1108	MemberAccess	rules . push_back
>1109	Identifier	push_back
>1110	Identifier	rules
>1111	ExpressionStatement	 
>1112	CallExpression	adminRule -> setAcceptableType ( Rule 
>1113	ArgumentList	Rule 
>1114	Argument	Rule 
>1115	Identifier	Rule 
>1116	Callee	adminRule -> setAcceptableType
>1117	PtrMemberAccess	adminRule -> setAcceptableType
>1118	Identifier	setAcceptableType
>1119	Identifier	adminRule
>1120	ExpressionStatement	 
>1121	CallExpression	adminRule -> setStyleTemplate ( adminStyle )
>1122	ArgumentList	adminStyle
>1123	Argument	adminStyle
>1124	Identifier	adminStyle
>1125	Callee	adminRule -> setStyleTemplate
>1126	PtrMemberAccess	adminRule -> setStyleTemplate
>1127	Identifier	setStyleTemplate
>1128	Identifier	adminRule
>1129	ExpressionStatement	 
>1130	AssignmentExpr	highwayUpStyle -> width = boost 
>1131	RelationalExpression	boost 
>1132	RelationalExpression	eval 
>1133	ShiftExpression	float >> ( 2.0 )
>1134	PrimaryExpression	2.0
>1135	Identifier	float
>1136	Identifier	eval 
>1137	Identifier	boost 
>1138	PtrMemberAccess	highwayUpStyle -> width
>1139	Identifier	width
>1140	Identifier	highwayUpStyle
>1141	ExpressionStatement	 
>1142	AssignmentExpr	highwayStyle -> fill_color = boost 
>1143	RelationalExpression	boost 
>1144	RelationalExpression	eval 
>1145	ShiftExpression	Color >> ( Color ( ( uint8 ) 0xaa , ( uint8 ) 0x00 , ( uint8 ) 0x00 ) )
>1146	CallExpression	Color ( ( uint8 ) 0xaa , ( uint8 ) 0x00 , ( uint8 ) 0x00 )
>1147	ArgumentList	( uint8 ) 0xaa
>1148	Argument	( uint8 ) 0x00
>1149	CastExpression	( uint8 ) 0x00
>1150	PrimaryExpression	0x00
>1151	CastTarget	uint8
>1152	Argument	( uint8 ) 0x00
>1153	CastExpression	( uint8 ) 0x00
>1154	PrimaryExpression	0x00
>1155	CastTarget	uint8
>1156	Argument	( uint8 ) 0xaa
>1157	CastExpression	( uint8 ) 0xaa
>1158	PrimaryExpression	0xaa
>1159	CastTarget	uint8
>1160	Callee	Color
>1161	Identifier	Color
>1162	Identifier	Color
>1163	Identifier	eval 
>1164	Identifier	boost 
>1165	PtrMemberAccess	highwayStyle -> fill_color
>1166	Identifier	fill_color
>1167	Identifier	highwayStyle
>1168	ExpressionStatement	 
>1169	Statement	 
>1170	Statement	 
>1171	Statement	 
>1172	Statement	 
>1173	Statement	 
>1174	Statement	 
>1175	Statement	 
>1176	Statement	 
>1177	Statement	 
>1178	Statement	 
>1179	Statement	 
>1180	Statement	 
>1181	Statement	 
>1182	Statement	 
>1183	ExpressionStatement	 
>1184	CallExpression	adminRule -> setFirstSelector ( adminTagSelector )
>1185	ArgumentList	adminTagSelector
>1186	Argument	adminTagSelector
>1187	Identifier	adminTagSelector
>1188	Callee	adminRule -> setFirstSelector
>1189	PtrMemberAccess	adminRule -> setFirstSelector
>1190	Identifier	setFirstSelector
>1191	Identifier	adminRule
>1192	IdentifierDeclStatement	 
>1193	IdentifierDecl	adminTagSelector = boost 
>1194	AssignmentExpr	adminTagSelector = boost 
>1195	RelationalExpression	boost 
>1196	RelationalExpression	TagEqualsSelector > ( adminRule , adminWaySelector , \"boundary\" , \"administrative\" )
>1197	Expression	adminRule , adminWaySelector , \"boundary\" , \"administrative\"
>1198	Expression	adminWaySelector , \"boundary\" , \"administrative\"
>1199	Expression	\"boundary\" , \"administrative\"
>1200	PrimaryExpression	\"administrative\"
>1201	PrimaryExpression	\"boundary\"
>1202	Identifier	adminWaySelector
>1203	Identifier	adminRule
>1204	Identifier	TagEqualsSelector
>1205	Identifier	boost 
>1206	Identifier	adminTagSelector
>1207	Identifier	adminTagSelector
>1208	IdentifierDeclType	shared_ptr < Selector >
>1209	IdentifierDeclStatement	 
>1210	IdentifierDecl	adminWaySelector = boost 
>1211	AssignmentExpr	adminWaySelector = boost 
>1212	RelationalExpression	boost 
>1213	RelationalExpression	ChildWaysSelector > ( adminRule , adminApplier )
>1214	Expression	adminRule , adminApplier
>1215	Identifier	adminApplier
>1216	Identifier	adminRule
>1217	Identifier	ChildWaysSelector
>1218	Identifier	boost 
>1219	Identifier	adminWaySelector
>1220	Identifier	adminWaySelector
>1221	IdentifierDeclType	shared_ptr < Selector >
>1222	IdentifierDeclStatement	 
>1223	IdentifierDecl	adminApplier = boost 
>1224	AssignmentExpr	adminApplier = boost 
>1225	RelationalExpression	boost 
>1226	RelationalExpression	ApplySelector > ( adminRule )
>1227	Identifier	adminRule
>1228	Identifier	ApplySelector
>1229	Identifier	boost 
>1230	Identifier	adminApplier
>1231	Identifier	adminApplier
>1232	IdentifierDeclType	shared_ptr < ApplySelector >
>1233	IdentifierDeclStatement	 
>1234	IdentifierDecl	adminRule = boost 
>1235	AssignmentExpr	adminRule = boost 
>1236	RelationalExpression	boost 
>1237	RelationalExpression	Rule > ( geodata )
>1238	Identifier	geodata
>1239	Identifier	Rule
>1240	Identifier	boost 
>1241	Identifier	adminRule
>1242	Identifier	adminRule
>1243	IdentifierDeclType	shared_ptr < Rule >
>1244	ExpressionStatement	 
>1245	CallExpression	rules . push_back ( forestRule )
>1246	ArgumentList	forestRule
>1247	Argument	forestRule
>1248	Identifier	forestRule
>1249	Callee	rules . push_back
>1250	MemberAccess	rules . push_back
>1251	Identifier	push_back
>1252	Identifier	rules
>1253	ExpressionStatement	 
>1254	CallExpression	forestRule -> setAcceptableType ( Rule 
>1255	ArgumentList	Rule 
>1256	Argument	Rule 
>1257	Identifier	Rule 
>1258	Callee	forestRule -> setAcceptableType
>1259	PtrMemberAccess	forestRule -> setAcceptableType
>1260	Identifier	setAcceptableType
>1261	Identifier	forestRule
>1262	ExpressionStatement	 
>1263	CallExpression	forestRule -> setStyleTemplate ( forestStyle )
>1264	ArgumentList	forestStyle
>1265	Argument	forestStyle
>1266	Identifier	forestStyle
>1267	Callee	forestRule -> setStyleTemplate
>1268	PtrMemberAccess	forestRule -> setStyleTemplate
>1269	Identifier	setStyleTemplate
>1270	Identifier	forestRule
>1271	ExpressionStatement	 
>1272	AssignmentExpr	highwayStyle -> fill_color = boost 
>1273	RelationalExpression	boost 
>1274	RelationalExpression	eval 
>1275	ShiftExpression	Color >> ( Color ( ( uint8 ) 0x00 , ( uint8 ) 0xaa , ( uint8 ) 0x00 ) )
>1276	CallExpression	Color ( ( uint8 ) 0x00 , ( uint8 ) 0xaa , ( uint8 ) 0x00 )
>1277	ArgumentList	( uint8 ) 0x00
>1278	Argument	( uint8 ) 0x00
>1279	CastExpression	( uint8 ) 0x00
>1280	PrimaryExpression	0x00
>1281	CastTarget	uint8
>1282	Argument	( uint8 ) 0xaa
>1283	CastExpression	( uint8 ) 0xaa
>1284	PrimaryExpression	0xaa
>1285	CastTarget	uint8
>1286	Argument	( uint8 ) 0x00
>1287	CastExpression	( uint8 ) 0x00
>1288	PrimaryExpression	0x00
>1289	CastTarget	uint8
>1290	Callee	Color
>1291	Identifier	Color
>1292	Identifier	Color
>1293	Identifier	eval 
>1294	Identifier	boost 
>1295	PtrMemberAccess	highwayStyle -> fill_color
>1296	Identifier	fill_color
>1297	Identifier	highwayStyle
>1298	ExpressionStatement	 
>1299	Statement	 
>1300	Statement	 
>1301	Statement	 
>1302	Statement	 
>1303	Statement	 
>1304	Statement	 
>1305	Statement	 
>1306	Statement	 
>1307	Statement	 
>1308	Statement	 
>1309	Statement	 
>1310	Statement	 
>1311	Statement	 
>1312	Statement	 
>1313	ExpressionStatement	 
>1314	CallExpression	forestRule -> setFirstSelector ( forestTagSelector )
>1315	ArgumentList	forestTagSelector
>1316	Argument	forestTagSelector
>1317	Identifier	forestTagSelector
>1318	Callee	forestRule -> setFirstSelector
>1319	PtrMemberAccess	forestRule -> setFirstSelector
>1320	Identifier	setFirstSelector
>1321	Identifier	forestRule
>1322	IdentifierDeclStatement	 
>1323	IdentifierDecl	forestTagSelector = boost 
>1324	AssignmentExpr	forestTagSelector = boost 
>1325	RelationalExpression	boost 
>1326	RelationalExpression	TagEqualsSelector > ( forestRule , forestApplier , \"landuse\" , \"forest\" )
>1327	Expression	forestRule , forestApplier , \"landuse\" , \"forest\"
>1328	Expression	forestApplier , \"landuse\" , \"forest\"
>1329	Expression	\"landuse\" , \"forest\"
>1330	PrimaryExpression	\"forest\"
>1331	PrimaryExpression	\"landuse\"
>1332	Identifier	forestApplier
>1333	Identifier	forestRule
>1334	Identifier	TagEqualsSelector
>1335	Identifier	boost 
>1336	Identifier	forestTagSelector
>1337	Identifier	forestTagSelector
>1338	IdentifierDeclType	shared_ptr < Selector >
>1339	IdentifierDeclStatement	 
>1340	IdentifierDecl	forestApplier = boost 
>1341	AssignmentExpr	forestApplier = boost 
>1342	RelationalExpression	boost 
>1343	RelationalExpression	ApplySelector > ( forestRule )
>1344	Identifier	forestRule
>1345	Identifier	ApplySelector
>1346	Identifier	boost 
>1347	Identifier	forestApplier
>1348	Identifier	forestApplier
>1349	IdentifierDeclType	shared_ptr < ApplySelector >
>1350	IdentifierDeclStatement	 
>1351	IdentifierDecl	forestRule = boost 
>1352	AssignmentExpr	forestRule = boost 
>1353	RelationalExpression	boost 
>1354	RelationalExpression	Rule > ( geodata )
>1355	Identifier	geodata
>1356	Identifier	Rule
>1357	Identifier	boost 
>1358	Identifier	forestRule
>1359	Identifier	forestRule
>1360	IdentifierDeclType	shared_ptr < Rule >
>1361	ExpressionStatement	 
>1362	CallExpression	rules . push_back ( highwayUpRule )
>1363	ArgumentList	highwayUpRule
>1364	Argument	highwayUpRule
>1365	Identifier	highwayUpRule
>1366	Callee	rules . push_back
>1367	MemberAccess	rules . push_back
>1368	Identifier	push_back
>1369	Identifier	rules
>1370	ExpressionStatement	 
>1371	CallExpression	highwayUpRule -> setAcceptableType ( Rule 
>1372	ArgumentList	Rule 
>1373	Argument	Rule 
>1374	Identifier	Rule 
>1375	Callee	highwayUpRule -> setAcceptableType
>1376	PtrMemberAccess	highwayUpRule -> setAcceptableType
>1377	Identifier	setAcceptableType
>1378	Identifier	highwayUpRule
>1379	ExpressionStatement	 
>1380	CallExpression	highwayUpRule -> setZoomBounds ( 0 , 15 )
>1381	ArgumentList	0
>1382	Argument	15
>1383	PrimaryExpression	15
>1384	Argument	0
>1385	PrimaryExpression	0
>1386	Callee	highwayUpRule -> setZoomBounds
>1387	PtrMemberAccess	highwayUpRule -> setZoomBounds
>1388	Identifier	setZoomBounds
>1389	Identifier	highwayUpRule
>1390	ExpressionStatement	 
>1391	CallExpression	highwayUpRule -> setStyleTemplate ( highwayUpStyle )
>1392	ArgumentList	highwayUpStyle
>1393	Argument	highwayUpStyle
>1394	Identifier	highwayUpStyle
>1395	Callee	highwayUpRule -> setStyleTemplate
>1396	PtrMemberAccess	highwayUpRule -> setStyleTemplate
>1397	Identifier	setStyleTemplate
>1398	Identifier	highwayUpRule
>1399	ExpressionStatement	 
>1400	AssignmentExpr	highwayUpStyle -> width = boost 
>1401	RelationalExpression	boost 
>1402	RelationalExpression	eval 
>1403	ShiftExpression	float >> ( 1.0 )
>1404	PrimaryExpression	1.0
>1405	Identifier	float
>1406	Identifier	eval 
>1407	Identifier	boost 
>1408	PtrMemberAccess	highwayUpStyle -> width
>1409	Identifier	width
>1410	Identifier	highwayUpStyle
>1411	ExpressionStatement	 
>1412	Statement	 
>1413	Statement	 
>1414	Statement	 
>1415	Statement	 
>1416	Statement	 
>1417	Statement	 
>1418	Statement	 
>1419	Statement	 
>1420	Statement	 
>1421	Statement	 
>1422	Statement	 
>1423	Statement	 
>1424	Statement	 
>1425	Statement	 
>1426	ExpressionStatement	 
>1427	CallExpression	highwayUpRule -> setFirstSelector ( highwayUpTagSelector )
>1428	ArgumentList	highwayUpTagSelector
>1429	Argument	highwayUpTagSelector
>1430	Identifier	highwayUpTagSelector
>1431	Callee	highwayUpRule -> setFirstSelector
>1432	PtrMemberAccess	highwayUpRule -> setFirstSelector
>1433	Identifier	setFirstSelector
>1434	Identifier	highwayUpRule
>1435	IdentifierDeclStatement	 
>1436	IdentifierDecl	highwayUpTagSelector = boost 
>1437	AssignmentExpr	highwayUpTagSelector = boost 
>1438	RelationalExpression	boost 
>1439	RelationalExpression	HasTagSelector > ( highwayUpRule , highwayUpApplier , \"highway\" )
>1440	Expression	highwayUpRule , highwayUpApplier , \"highway\"
>1441	Expression	highwayUpApplier , \"highway\"
>1442	PrimaryExpression	\"highway\"
>1443	Identifier	highwayUpApplier
>1444	Identifier	highwayUpRule
>1445	Identifier	HasTagSelector
>1446	Identifier	boost 
>1447	Identifier	highwayUpTagSelector
>1448	Identifier	highwayUpTagSelector
>1449	IdentifierDeclType	shared_ptr < Selector >
>1450	IdentifierDeclStatement	 
>1451	IdentifierDecl	highwayUpApplier = boost 
>1452	AssignmentExpr	highwayUpApplier = boost 
>1453	RelationalExpression	boost 
>1454	RelationalExpression	ApplySelector > ( highwayUpRule )
>1455	Identifier	highwayUpRule
>1456	Identifier	ApplySelector
>1457	Identifier	boost 
>1458	Identifier	highwayUpApplier
>1459	Identifier	highwayUpApplier
>1460	IdentifierDeclType	shared_ptr < ApplySelector >
>1461	IdentifierDeclStatement	 
>1462	IdentifierDecl	highwayUpRule = boost 
>1463	AssignmentExpr	highwayUpRule = boost 
>1464	RelationalExpression	boost 
>1465	RelationalExpression	Rule > ( geodata )
>1466	Identifier	geodata
>1467	Identifier	Rule
>1468	Identifier	boost 
>1469	Identifier	highwayUpRule
>1470	Identifier	highwayUpRule
>1471	IdentifierDeclType	shared_ptr < Rule >
>1472	ExpressionStatement	 
>1473	CallExpression	rules . push_back ( highwayRule )
>1474	ArgumentList	highwayRule
>1475	Argument	highwayRule
>1476	Identifier	highwayRule
>1477	Callee	rules . push_back
>1478	MemberAccess	rules . push_back
>1479	Identifier	push_back
>1480	Identifier	rules
>1481	ExpressionStatement	 
>1482	CallExpression	highwayRule -> setAcceptableType ( Rule 
>1483	ArgumentList	Rule 
>1484	Argument	Rule 
>1485	Identifier	Rule 
>1486	Callee	highwayRule -> setAcceptableType
>1487	PtrMemberAccess	highwayRule -> setAcceptableType
>1488	Identifier	setAcceptableType
>1489	Identifier	highwayRule
>1490	ExpressionStatement	 
>1491	CallExpression	highwayRule -> setStyleTemplate ( highwayStyle )
>1492	ArgumentList	highwayStyle
>1493	Argument	highwayStyle
>1494	Identifier	highwayStyle
>1495	Callee	highwayRule -> setStyleTemplate
>1496	PtrMemberAccess	highwayRule -> setStyleTemplate
>1497	Identifier	setStyleTemplate
>1498	Identifier	highwayRule
>1499	ExpressionStatement	 
>1500	AssignmentExpr	highwayStyle -> width = boost 
>1501	RelationalExpression	boost 
>1502	RelationalExpression	eval 
>1503	ShiftExpression	float >> ( 2.0 )
>1504	PrimaryExpression	2.0
>1505	Identifier	float
>1506	Identifier	eval 
>1507	Identifier	boost 
>1508	PtrMemberAccess	highwayStyle -> width
>1509	Identifier	width
>1510	Identifier	highwayStyle
>1511	ExpressionStatement	 
>1512	AssignmentExpr	highwayStyle -> color = boost 
>1513	RelationalExpression	boost 
>1514	RelationalExpression	eval 
>1515	ShiftExpression	Color >> ( Color ( ( uint8 ) 0x55 , ( uint8 ) 0x55 , ( uint8 ) 0x55 ) )
>1516	CallExpression	Color ( ( uint8 ) 0x55 , ( uint8 ) 0x55 , ( uint8 ) 0x55 )
>1517	ArgumentList	( uint8 ) 0x55
>1518	Argument	( uint8 ) 0x55
>1519	CastExpression	( uint8 ) 0x55
>1520	PrimaryExpression	0x55
>1521	CastTarget	uint8
>1522	Argument	( uint8 ) 0x55
>1523	CastExpression	( uint8 ) 0x55
>1524	PrimaryExpression	0x55
>1525	CastTarget	uint8
>1526	Argument	( uint8 ) 0x55
>1527	CastExpression	( uint8 ) 0x55
>1528	PrimaryExpression	0x55
>1529	CastTarget	uint8
>1530	Callee	Color
>1531	Identifier	Color
>1532	Identifier	Color
>1533	Identifier	eval 
>1534	Identifier	boost 
>1535	PtrMemberAccess	highwayStyle -> color
>1536	Identifier	color
>1537	Identifier	highwayStyle
>1538	ExpressionStatement	 
>1539	Statement	 
>1540	Statement	 
>1541	Statement	 
>1542	Statement	 
>1543	Statement	 
>1544	Statement	 
>1545	Statement	 
>1546	Statement	 
>1547	Statement	 
>1548	Statement	 
>1549	Statement	 
>1550	Statement	 
>1551	Statement	 
>1552	Statement	 
>1553	ExpressionStatement	 
>1554	CallExpression	highwayRule -> setFirstSelector ( highwayTagSelector )
>1555	ArgumentList	highwayTagSelector
>1556	Argument	highwayTagSelector
>1557	Identifier	highwayTagSelector
>1558	Callee	highwayRule -> setFirstSelector
>1559	PtrMemberAccess	highwayRule -> setFirstSelector
>1560	Identifier	setFirstSelector
>1561	Identifier	highwayRule
>1562	IdentifierDeclStatement	 
>1563	IdentifierDecl	highwayTagSelector = boost 
>1564	AssignmentExpr	highwayTagSelector = boost 
>1565	RelationalExpression	boost 
>1566	RelationalExpression	HasTagSelector > ( highwayRule , highwayApplier , \"highway\" )
>1567	Expression	highwayRule , highwayApplier , \"highway\"
>1568	Expression	highwayApplier , \"highway\"
>1569	PrimaryExpression	\"highway\"
>1570	Identifier	highwayApplier
>1571	Identifier	highwayRule
>1572	Identifier	HasTagSelector
>1573	Identifier	boost 
>1574	Identifier	highwayTagSelector
>1575	Identifier	highwayTagSelector
>1576	IdentifierDeclType	shared_ptr < Selector >
>1577	IdentifierDeclStatement	 
>1578	IdentifierDecl	highwayApplier = boost 
>1579	AssignmentExpr	highwayApplier = boost 
>1580	RelationalExpression	boost 
>1581	RelationalExpression	ApplySelector > ( highwayRule )
>1582	Identifier	highwayRule
>1583	Identifier	ApplySelector
>1584	Identifier	boost 
>1585	Identifier	highwayApplier
>1586	Identifier	highwayApplier
>1587	IdentifierDeclType	shared_ptr < ApplySelector >
>1588	IdentifierDeclStatement	 
>1589	IdentifierDecl	highwayRule = boost 
>1590	AssignmentExpr	highwayRule = boost 
>1591	RelationalExpression	boost 
>1592	RelationalExpression	Rule > ( geodata )
>1593	Identifier	geodata
>1594	Identifier	Rule
>1595	Identifier	boost 
>1596	Identifier	highwayRule
>1597	Identifier	highwayRule
>1598	IdentifierDeclType	shared_ptr < Rule >
>1599	ExpressionStatement	 
>1600	CallExpression	rules . push_back ( highwayNodeRule )
>1601	ArgumentList	highwayNodeRule
>1602	Argument	highwayNodeRule
>1603	Identifier	highwayNodeRule
>1604	Callee	rules . push_back
>1605	MemberAccess	rules . push_back
>1606	Identifier	push_back
>1607	Identifier	rules
>1608	ExpressionStatement	 
>1609	CallExpression	highwayNodeRule -> setAcceptableType ( Rule 
>1610	ArgumentList	Rule 
>1611	Argument	Rule 
>1612	Identifier	Rule 
>1613	Callee	highwayNodeRule -> setAcceptableType
>1614	PtrMemberAccess	highwayNodeRule -> setAcceptableType
>1615	Identifier	setAcceptableType
>1616	Identifier	highwayNodeRule
>1617	ExpressionStatement	 
>1618	CallExpression	highwayNodeRule -> setZoomBounds ( 16 , 18 )
>1619	ArgumentList	16
>1620	Argument	18
>1621	PrimaryExpression	18
>1622	Argument	16
>1623	PrimaryExpression	16
>1624	Callee	highwayNodeRule -> setZoomBounds
>1625	PtrMemberAccess	highwayNodeRule -> setZoomBounds
>1626	Identifier	setZoomBounds
>1627	Identifier	highwayNodeRule
>1628	ExpressionStatement	 
>1629	CallExpression	highwayNodeRule -> setStyleTemplate ( highwayNodeStyle )
>1630	ArgumentList	highwayNodeStyle
>1631	Argument	highwayNodeStyle
>1632	Identifier	highwayNodeStyle
>1633	Callee	highwayNodeRule -> setStyleTemplate
>1634	PtrMemberAccess	highwayNodeRule -> setStyleTemplate
>1635	Identifier	setStyleTemplate
>1636	Identifier	highwayNodeRule
>1637	ExpressionStatement	 
>1638	AssignmentExpr	highwayNodeStyle -> width = boost 
>1639	RelationalExpression	boost 
>1640	RelationalExpression	eval 
>1641	ShiftExpression	float >> ( 5.5 )
>1642	PrimaryExpression	5.5
>1643	Identifier	float
>1644	Identifier	eval 
>1645	Identifier	boost 
>1646	PtrMemberAccess	highwayNodeStyle -> width
>1647	Identifier	width
>1648	Identifier	highwayNodeStyle
>1649	ExpressionStatement	 
>1650	AssignmentExpr	highwayNodeStyle -> color = boost 
>1651	RelationalExpression	boost 
>1652	RelationalExpression	eval 
>1653	ShiftExpression	Color >> ( Color ( ( uint8 ) 0x00 , ( uint8 ) 0x00 , ( uint8 ) 0xFF ) )
>1654	CallExpression	Color ( ( uint8 ) 0x00 , ( uint8 ) 0x00 , ( uint8 ) 0xFF )
>1655	ArgumentList	( uint8 ) 0x00
>1656	Argument	( uint8 ) 0xFF
>1657	CastExpression	( uint8 ) 0xFF
>1658	PrimaryExpression	0xFF
>1659	CastTarget	uint8
>1660	Argument	( uint8 ) 0x00
>1661	CastExpression	( uint8 ) 0x00
>1662	PrimaryExpression	0x00
>1663	CastTarget	uint8
>1664	Argument	( uint8 ) 0x00
>1665	CastExpression	( uint8 ) 0x00
>1666	PrimaryExpression	0x00
>1667	CastTarget	uint8
>1668	Callee	Color
>1669	Identifier	Color
>1670	Identifier	Color
>1671	Identifier	eval 
>1672	Identifier	boost 
>1673	PtrMemberAccess	highwayNodeStyle -> color
>1674	Identifier	color
>1675	Identifier	highwayNodeStyle
>1676	ExpressionStatement	 
>1677	Statement	 
>1678	Statement	 
>1679	Statement	 
>1680	Statement	 
>1681	Statement	 
>1682	Statement	 
>1683	Statement	 
>1684	Statement	 
>1685	Statement	 
>1686	Statement	 
>1687	Statement	 
>1688	Statement	 
>1689	Statement	 
>1690	Statement	 
>1691	ExpressionStatement	 
>1692	CallExpression	highwayNodeRule -> setFirstSelector ( highwayNodeTagSelector )
>1693	ArgumentList	highwayNodeTagSelector
>1694	Argument	highwayNodeTagSelector
>1695	Identifier	highwayNodeTagSelector
>1696	Callee	highwayNodeRule -> setFirstSelector
>1697	PtrMemberAccess	highwayNodeRule -> setFirstSelector
>1698	Identifier	setFirstSelector
>1699	Identifier	highwayNodeRule
>1700	IdentifierDeclStatement	 
>1701	IdentifierDecl	highwayNodeTagSelector = boost 
>1702	AssignmentExpr	highwayNodeTagSelector = boost 
>1703	RelationalExpression	boost 
>1704	RelationalExpression	HasTagSelector > ( highwayNodeRule , highwayNodeApplier , \"highway\" )
>1705	Expression	highwayNodeRule , highwayNodeApplier , \"highway\"
>1706	Expression	highwayNodeApplier , \"highway\"
>1707	PrimaryExpression	\"highway\"
>1708	Identifier	highwayNodeApplier
>1709	Identifier	highwayNodeRule
>1710	Identifier	HasTagSelector
>1711	Identifier	boost 
>1712	Identifier	highwayNodeTagSelector
>1713	Identifier	highwayNodeTagSelector
>1714	IdentifierDeclType	shared_ptr < Selector >
>1715	IdentifierDeclStatement	 
>1716	IdentifierDecl	highwayNodeApplier = boost 
>1717	AssignmentExpr	highwayNodeApplier = boost 
>1718	RelationalExpression	boost 
>1719	RelationalExpression	ApplySelector > ( highwayNodeRule )
>1720	Identifier	highwayNodeRule
>1721	Identifier	ApplySelector
>1722	Identifier	boost 
>1723	Identifier	highwayNodeApplier
>1724	Identifier	highwayNodeApplier
>1725	IdentifierDeclType	shared_ptr < ApplySelector >
>1726	IdentifierDeclStatement	 
>1727	IdentifierDecl	highwayNodeRule = boost 
>1728	AssignmentExpr	highwayNodeRule = boost 
>1729	RelationalExpression	boost 
>1730	RelationalExpression	Rule > ( geodata )
>1731	Identifier	geodata
>1732	Identifier	Rule
>1733	Identifier	boost 
>1734	Identifier	highwayNodeRule
>1735	Identifier	highwayNodeRule
>1736	IdentifierDeclType	shared_ptr < Rule >
>1737	IdentifierDeclStatement	 
>1738	IdentifierDecl	rules
>1739	Identifier	rules
>1740	IdentifierDeclType	std 
>1741	ExpressionStatement	 
>1742	AssignmentExpr	canvasStyle -> fill_color = boost 
>1743	RelationalExpression	boost 
>1744	RelationalExpression	eval 
>1745	ShiftExpression	Color >> ( Color ( ( uint8 ) 0xEF , ( uint8 ) 0xEF , ( uint8 ) 0xD0 ) )
>1746	CallExpression	Color ( ( uint8 ) 0xEF , ( uint8 ) 0xEF , ( uint8 ) 0xD0 )
>1747	ArgumentList	( uint8 ) 0xEF
>1748	Argument	( uint8 ) 0xD0
>1749	CastExpression	( uint8 ) 0xD0
>1750	PrimaryExpression	0xD0
>1751	CastTarget	uint8
>1752	Argument	( uint8 ) 0xEF
>1753	CastExpression	( uint8 ) 0xEF
>1754	PrimaryExpression	0xEF
>1755	CastTarget	uint8
>1756	Argument	( uint8 ) 0xEF
>1757	CastExpression	( uint8 ) 0xEF
>1758	PrimaryExpression	0xEF
>1759	CastTarget	uint8
>1760	Callee	Color
>1761	Identifier	Color
>1762	Identifier	Color
>1763	Identifier	eval 
>1764	Identifier	boost 
>1765	PtrMemberAccess	canvasStyle -> fill_color
>1766	Identifier	fill_color
>1767	Identifier	canvasStyle
>1768	ExpressionStatement	 
>1769	Statement	 
>1770	Statement	 
>1771	Statement	 
>1772	Statement	 
>1773	Statement	 
>1774	Statement	 
>1775	Statement	 
>1776	Statement	 
>1777	Statement	 
>1778	Statement	 
>1779	Statement	 
>1780	Statement	 
>1781	Statement	 
>1782	Statement	 
<3=8,4
<4=5
<5=7,6
<8=9
<9=10
<10=18,11
<11=15,12
<12=14,13
<15=17,16
<28=30,29
<30=31
<31=32
<32=34,33
<34=36,35
<36=37
<37=39,38
<44=50,49,45
<45=46
<46=48,47
<50=196,180,176,171,111,96,71,51
<51=52
<52=70,53
<53=68,54
<54=55
<55=56
<56=66,57
<57=62,58
<58=59
<59=61,60
<62=63
<63=65,64
<66=67
<68=69
<71=72
<72=92,73
<73=74
<74=75
<75=90,76
<76=86,81,79,77
<77=78
<79=80
<81=82
<82=84,83
<84=85
<86=87
<87=89,88
<90=91
<92=93
<93=95,94
<96=97
<97=107,98
<98=99
<99=100
<100=104,101
<101=103,102
<104=106,105
<107=108
<108=110,109
<111=165,161,158,112
<112=113
<113=132,114
<114=115
<115=116
<116=130,117
<117=118
<118=119
<119=121,120
<121=122
<122=124,123
<124=126,125
<126=127
<127=129,128
<130=131
<132=133
<133=147,134
<134=136,135
<136=138,137
<138=139
<139=141,140
<141=143,142
<143=144
<144=146,145
<147=156,148
<148=149
<149=150
<150=152,151
<152=153
<153=155,154
<156=157
<158=160,159
<161=162
<162=164,163
<165=166
<166=167
<167=170,169,168
<171=172
<172=175,174,173
<176=177
<177=179,178
<180=181
<181=193,182
<182=191,183
<183=184
<184=185
<185=187,186
<187=188
<188=190,189
<191=192
<193=195,194
<196=197
<197=199,198
<199=201,200
<238=241,240,239
<241=249,242
<242=243
<243=245,244
<245=246
<246=248,247
<249=250
<250=252,251
<252=253
<253=255,254
<261=267,266,262
<262=263
<263=265,264
<267=296,295,284,270,268
<268=269
<270=271
<271=283,282,272
<272=281,273
<273=280,274
<274=276,275
<276=277
<277=279,278
<284=285
<285=294,286
<286=290,287
<287=288
<288=289
<290=291
<291=293,292
<296=297
<297=300,299,298
<311=317,316,312
<312=313
<313=315,314
<317=361,360,349,345,320,318
<318=319
<320=336,329,321
<321=322
<322=323
<323=324
<324=328,325
<325=327,326
<329=330
<330=331
<331=335,332
<332=334,333
<336=337
<337=344,338
<338=340,339
<340=341
<341=343,342
<345=346
<346=348,347
<349=350
<350=359,351
<351=355,352
<352=353
<353=354
<355=356
<356=358,357
<361=362
<362=365,364,363
<379=385,384,380
<380=381
<381=383,382
<385=691,684,680,667,621,477,423,417,386
<386=387
<387=413,388
<388=389
<389=390
<390=412,391
<391=411,392
<392=409,393
<393=407,405,403,396,394
<394=395
<396=397
<397=399,398
<399=400
<400=402,401
<403=404
<405=406
<407=408
<409=410
<413=414
<414=416,415
<417=418
<418=420,419
<420=422,421
<423=424
<424=461,444,435,426,425
<426=427
<427=429,428
<429=431,430
<431=432
<432=434,433
<435=436
<436=438,437
<438=440,439
<440=441
<441=443,442
<444=445
<445=455,446
<446=454,447
<447=453,448
<448=452,449
<449=451,450
<455=457,456
<457=458
<458=460,459
<461=462
<462=476,475,463
<463=474,464
<464=473,465
<465=472,466
<466=468,467
<468=469
<469=471,470
<477=620,478
<478=607,583,568,543,532,521,503,480,479
<480=501,481
<481=482
<482=495,483
<483=485,484
<485=493,486
<486=489,487
<487=488
<489=490
<490=492,491
<493=494
<495=497,496
<497=498
<498=500,499
<501=502
<503=519,504
<504=505
<505=513,506
<506=512,507
<507=509,508
<509=511,510
<513=515,514
<515=516
<516=518,517
<519=520
<521=522
<522=531,530,523
<523=529,524
<524=528,525
<525=527,526
<532=533
<533=542,541,534
<534=540,535
<535=539,536
<536=538,537
<543=544
<544=558,545
<545=557,546
<546=552,547
<547=551,548
<548=550,549
<552=556,553
<553=555,554
<558=562,559
<559=561,560
<562=564,563
<564=565
<565=567,566
<568=569
<569=575,570
<570=574,571
<571=573,572
<575=577,576
<577=579,578
<579=580
<580=582,581
<583=584
<584=597,585
<585=596,586
<586=588,587
<588=595,589
<589=591,590
<591=592
<592=594,593
<597=601,598
<598=600,599
<601=603,602
<603=604
<604=606,605
<607=608
<608=619,618,609
<609=617,610
<610=614,611
<611=613,612
<614=616,615
<621=622
<622=648,643,623
<623=624
<624=642,625
<625=640,626
<626=636,629,627
<627=628
<629=630
<630=632,631
<632=633
<633=635,634
<636=637
<637=639,638
<640=641
<643=644
<644=647,646,645
<648=649
<649=666,665,650
<650=664,651
<651=653,652
<653=655,654
<655=656
<656=658,657
<658=660,659
<660=661
<661=663,662
<667=668
<668=679,678,669
<669=677,670
<670=674,671
<671=673,672
<674=676,675
<680=681
<681=683,682
<684=685
<685=689,686
<686=687
<687=688
<689=690
<691=692
<692=704,703,693
<693=702,694
<694=696,695
<696=697
<697=699,698
<699=701,700
<748=754,753,749
<749=750
<750=752,751
<754=803,796,777,768,755
<755=756
<756=762,757
<757=761,758
<758=760,759
<762=764,763
<764=765
<765=767,766
<768=769
<769=773,770
<770=771
<771=772
<773=774
<774=776,775
<777=778
<778=787,779
<779=780
<780=781
<781=783,782
<783=784
<784=786,785
<787=788
<788=790,789
<790=792,791
<792=793
<793=795,794
<796=797
<797=801,798
<798=799
<799=800
<801=802
<803=804
<804=816,815,805
<805=814,806
<806=808,807
<808=809
<809=811,810
<811=813,812
<831=840,839,832
<832=836,833
<833=835,834
<836=838,837
<840=1057,1014,1000,866,841
<841=842
<842=862,843
<843=844
<844=845
<845=860,846
<846=856,851,849,847
<847=848
<849=850
<851=852
<852=854,853
<854=855
<856=857
<857=859,858
<860=861
<862=863
<863=865,864
<866=970,867
<867=961,956,868
<868=952,869
<869=950,929,928,926,905,904,902,874,873,871,870
<871=872
<874=889,882,875
<875=876
<876=880,877
<877=878
<878=879
<880=881
<882=883
<883=887,884
<884=885
<885=886
<887=888
<889=890
<890=896,891
<891=895,892
<892=894,893
<896=898,897
<898=899
<899=901,900
<902=903
<905=913,906
<906=907
<907=911,908
<908=909
<909=910
<911=912
<913=914
<914=920,915
<915=919,916
<916=918,917
<920=922,921
<922=923
<923=925,924
<926=927
<929=937,930
<930=931
<931=935,932
<932=933
<933=934
<935=936
<937=938
<938=944,939
<939=943,940
<940=942,941
<944=946,945
<946=947
<947=949,948
<950=951
<952=953
<953=955,954
<956=957
<957=960,959,958
<961=962
<962=969,963
<963=965,964
<965=966
<966=968,967
<970=971
<971=992,972
<972=974,973
<974=978,975
<975=976
<976=977
<978=979
<979=981,980
<981=983,982
<983=984
<984=986,985
<986=988,987
<988=989
<989=991,990
<992=994,993
<994=996,995
<996=997
<997=999,998
<1000=1001
<1001=1013,1012,1002
<1002=1011,1003
<1003=1009,1004
<1004=1005
<1005=1006
<1006=1008,1007
<1009=1010
<1014=1050,1015
<1015=1017,1016
<1017=1046,1018
<1018=1033,1019
<1019=1020
<1020=1027,1021
<1021=1023,1022
<1023=1024
<1024=1026,1025
<1027=1029,1028
<1029=1030
<1030=1032,1031
<1033=1034
<1034=1040,1035
<1035=1039,1036
<1036=1038,1037
<1040=1042,1041
<1042=1043
<1043=1045,1044
<1046=1047
<1047=1049,1048
<1050=1051
<1051=1056,1052
<1052=1054,1053
<1054=1055
<1057=1058
<1058=1060,1059
<1085=1091,1090,1086
<1086=1087
<1087=1089,1088
<1091=1782,1781,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1770,1769,1768,1741,1737,1726,1715,1700,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1649,1637,1628,1617,1608,1599,1588,1577,1562,1553,1552,1551,1550,1549,1548,1547,1546,1545,1544,1543,1542,1541,1540,1539,1538,1511,1499,1490,1481,1472,1461,1450,1435,1426,1425,1424,1423,1422,1421,1420,1419,1418,1417,1416,1415,1414,1413,1412,1411,1399,1390,1379,1370,1092,1102,1111,1120,1129,1141,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1192,1209,1222,1233,1244,1253,1262,1271,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1322,1339,1350,1361
<1092=1093
<1093=1101,1094
<1094=1100,1095
<1095=1099,1096
<1096=1098,1097
<1102=1103
<1103=1107,1104
<1104=1105
<1105=1106
<1107=1108
<1108=1110,1109
<1111=1112
<1112=1116,1113
<1113=1114
<1114=1115
<1116=1117
<1117=1119,1118
<1120=1121
<1121=1125,1122
<1122=1123
<1123=1124
<1125=1126
<1126=1128,1127
<1129=1130
<1130=1138,1131
<1131=1137,1132
<1132=1136,1133
<1133=1135,1134
<1138=1140,1139
<1141=1142
<1142=1165,1143
<1143=1164,1144
<1144=1163,1145
<1145=1162,1146
<1146=1160,1147
<1147=1156,1152,1148
<1148=1149
<1149=1151,1150
<1152=1153
<1153=1155,1154
<1156=1157
<1157=1159,1158
<1160=1161
<1165=1167,1166
<1183=1184
<1184=1188,1185
<1185=1186
<1186=1187
<1188=1189
<1189=1191,1190
<1192=1193
<1193=1208,1207,1194
<1194=1206,1195
<1195=1205,1196
<1196=1204,1197
<1197=1203,1198
<1198=1202,1199
<1199=1201,1200
<1209=1210
<1210=1221,1220,1211
<1211=1219,1212
<1212=1218,1213
<1213=1217,1214
<1214=1216,1215
<1222=1223
<1223=1232,1231,1224
<1224=1230,1225
<1225=1229,1226
<1226=1228,1227
<1233=1234
<1234=1243,1242,1235
<1235=1241,1236
<1236=1240,1237
<1237=1239,1238
<1244=1245
<1245=1249,1246
<1246=1247
<1247=1248
<1249=1250
<1250=1252,1251
<1253=1254
<1254=1258,1255
<1255=1256
<1256=1257
<1258=1259
<1259=1261,1260
<1262=1263
<1263=1267,1264
<1264=1265
<1265=1266
<1267=1268
<1268=1270,1269
<1271=1272
<1272=1295,1273
<1273=1294,1274
<1274=1293,1275
<1275=1292,1276
<1276=1290,1277
<1277=1286,1282,1278
<1278=1279
<1279=1281,1280
<1282=1283
<1283=1285,1284
<1286=1287
<1287=1289,1288
<1290=1291
<1295=1297,1296
<1313=1314
<1314=1318,1315
<1315=1316
<1316=1317
<1318=1319
<1319=1321,1320
<1322=1323
<1323=1338,1337,1324
<1324=1336,1325
<1325=1335,1326
<1326=1334,1327
<1327=1333,1328
<1328=1332,1329
<1329=1331,1330
<1339=1340
<1340=1349,1348,1341
<1341=1347,1342
<1342=1346,1343
<1343=1345,1344
<1350=1351
<1351=1360,1359,1352
<1352=1358,1353
<1353=1357,1354
<1354=1356,1355
<1361=1362
<1362=1366,1363
<1363=1364
<1364=1365
<1366=1367
<1367=1369,1368
<1370=1371
<1371=1375,1372
<1372=1373
<1373=1374
<1375=1376
<1376=1378,1377
<1379=1380
<1380=1386,1381
<1381=1384,1382
<1382=1383
<1384=1385
<1386=1387
<1387=1389,1388
<1390=1391
<1391=1395,1392
<1392=1393
<1393=1394
<1395=1396
<1396=1398,1397
<1399=1400
<1400=1408,1401
<1401=1407,1402
<1402=1406,1403
<1403=1405,1404
<1408=1410,1409
<1426=1427
<1427=1431,1428
<1428=1429
<1429=1430
<1431=1432
<1432=1434,1433
<1435=1436
<1436=1449,1448,1437
<1437=1447,1438
<1438=1446,1439
<1439=1445,1440
<1440=1444,1441
<1441=1443,1442
<1450=1451
<1451=1460,1459,1452
<1452=1458,1453
<1453=1457,1454
<1454=1456,1455
<1461=1462
<1462=1471,1470,1463
<1463=1469,1464
<1464=1468,1465
<1465=1467,1466
<1472=1473
<1473=1477,1474
<1474=1475
<1475=1476
<1477=1478
<1478=1480,1479
<1481=1482
<1482=1486,1483
<1483=1484
<1484=1485
<1486=1487
<1487=1489,1488
<1490=1491
<1491=1495,1492
<1492=1493
<1493=1494
<1495=1496
<1496=1498,1497
<1499=1500
<1500=1508,1501
<1501=1507,1502
<1502=1506,1503
<1503=1505,1504
<1508=1510,1509
<1511=1512
<1512=1535,1513
<1513=1534,1514
<1514=1533,1515
<1515=1532,1516
<1516=1530,1517
<1517=1526,1522,1518
<1518=1519
<1519=1521,1520
<1522=1523
<1523=1525,1524
<1526=1527
<1527=1529,1528
<1530=1531
<1535=1537,1536
<1553=1554
<1554=1558,1555
<1555=1556
<1556=1557
<1558=1559
<1559=1561,1560
<1562=1563
<1563=1576,1575,1564
<1564=1574,1565
<1565=1573,1566
<1566=1572,1567
<1567=1571,1568
<1568=1570,1569
<1577=1578
<1578=1587,1586,1579
<1579=1585,1580
<1580=1584,1581
<1581=1583,1582
<1588=1589
<1589=1598,1597,1590
<1590=1596,1591
<1591=1595,1592
<1592=1594,1593
<1599=1600
<1600=1604,1601
<1601=1602
<1602=1603
<1604=1605
<1605=1607,1606
<1608=1609
<1609=1613,1610
<1610=1611
<1611=1612
<1613=1614
<1614=1616,1615
<1617=1618
<1618=1624,1619
<1619=1622,1620
<1620=1621
<1622=1623
<1624=1625
<1625=1627,1626
<1628=1629
<1629=1633,1630
<1630=1631
<1631=1632
<1633=1634
<1634=1636,1635
<1637=1638
<1638=1646,1639
<1639=1645,1640
<1640=1644,1641
<1641=1643,1642
<1646=1648,1647
<1649=1650
<1650=1673,1651
<1651=1672,1652
<1652=1671,1653
<1653=1670,1654
<1654=1668,1655
<1655=1664,1660,1656
<1656=1657
<1657=1659,1658
<1660=1661
<1661=1663,1662
<1664=1665
<1665=1667,1666
<1668=1669
<1673=1675,1674
<1691=1692
<1692=1696,1693
<1693=1694
<1694=1695
<1696=1697
<1697=1699,1698
<1700=1701
<1701=1714,1713,1702
<1702=1712,1703
<1703=1711,1704
<1704=1710,1705
<1705=1709,1706
<1706=1708,1707
<1715=1716
<1716=1725,1724,1717
<1717=1723,1718
<1718=1722,1719
<1719=1721,1720
<1726=1727
<1727=1736,1735,1728
<1728=1734,1729
<1729=1733,1730
<1730=1732,1731
<1737=1738
<1738=1740,1739
<1741=1742
<1742=1765,1743
<1743=1764,1744
<1744=1763,1745
<1745=1762,1746
<1746=1760,1747
<1747=1756,1752,1748
<1748=1749
<1749=1751,1750
<1752=1753
<1753=1755,1754
<1756=1757
<1757=1759,1758
<1760=1761
<1765=1767,1766
