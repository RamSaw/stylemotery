>3	FunctionDef	Boat 
>4	ParameterList	vec2 pos , string name , float scale
>5	Parameter	 
>6	Identifier	scale
>7	ParameterType	float
>8	Parameter	 
>9	Identifier	name
>10	ParameterType	string
>11	Parameter	 
>12	Identifier	pos
>13	ParameterType	vec2
>14	CompoundStatement	 
>15	ForStatement	for ( int i = 0 ; i < m_num_bubble_streams ; ++ i )
>16	ExpressionStatement	 
>17	AssignmentExpr	m_bbl [ i ] = NULL
>18	Identifier	NULL
>19	ArrayIndexing	m_bbl [ i ]
>20	Identifier	i
>21	Identifier	m_bbl
>22	UnaryExpression	 
>23	Identifier	i
>24	IncDec	++
>25	Condition	 
>26	RelationalExpression	i < m_num_bubble_streams
>27	Identifier	m_num_bubble_streams
>28	Identifier	i
>29	ForInit	 
>30	IdentifierDeclStatement	int i = 0 ;
>31	IdentifierDecl	i = 0
>32	AssignmentExpr	i = 0
>33	PrimaryExpression	0
>34	Identifier	i
>35	Identifier	i
>36	IdentifierDeclType	int
>37	ExpressionStatement	 
>38	AssignmentExpr	m_smoke = NULL
>39	Identifier	NULL
>40	Identifier	m_smoke
>41	ExpressionStatement	 
>42	AssignmentExpr	m_model = & g_resources . mesh_tanker
>43	UnaryOp	& g_resources . mesh_tanker
>44	MemberAccess	g_resources . mesh_tanker
>45	Identifier	mesh_tanker
>46	Identifier	g_resources
>47	UnaryOperator	&
>48	Identifier	m_model
>66	FunctionDef	Boat 
>67	ParameterList	 
>68	CompoundStatement	 
>69	ExpressionStatement	 
>70	ArrayIndexing	m_bbl [ i ]
>71	Identifier	i
>72	Identifier	m_bbl
>73	ForStatement	for ( int i = 0 ; i < m_num_bubble_streams ; ++ i )
>74	Statement	 
>75	UnaryExpression	 
>76	Identifier	i
>77	IncDec	++
>78	Condition	 
>79	RelationalExpression	i < m_num_bubble_streams
>80	Identifier	m_num_bubble_streams
>81	Identifier	i
>82	ForInit	 
>83	IdentifierDeclStatement	int i = 0 ;
>84	IdentifierDecl	i = 0
>85	AssignmentExpr	i = 0
>86	PrimaryExpression	0
>87	Identifier	i
>88	Identifier	i
>89	IdentifierDeclType	int
>90	ExpressionStatement	 
>91	Identifier	m_smoke
>92	Statement	 
>99	FunctionDef	Boat 
>100	ParameterList	float x
>101	Parameter	 
>102	Identifier	x
>103	ParameterType	float
>104	ReturnType	void
>105	CompoundStatement	 
>106	ExpressionStatement	 
>107	CallExpression	g_current_game -> add_effect ( new FX_Ship_Explosion ( expl_pos ) , 0 )
>108	ArgumentList	expl_pos
>109	Argument	0
>110	PrimaryExpression	0
>111	Argument	expl_pos
>112	Identifier	expl_pos
>113	Callee	g_current_game -> add_effect
>114	PtrMemberAccess	g_current_game -> add_effect
>115	Identifier	add_effect
>116	Identifier	g_current_game
>117	IdentifierDeclStatement	 
>118	IdentifierDecl	expl_pos = vec2 ( m_pos [ 0 ] + hit_pos , m_pos [ 1 ] + m_pos_shift - 0.00 )
>119	AssignmentExpr	expl_pos = vec2 ( m_pos [ 0 ] + hit_pos , m_pos [ 1 ] + m_pos_shift - 0.00 )
>120	CallExpression	vec2 ( m_pos [ 0 ] + hit_pos , m_pos [ 1 ] + m_pos_shift - 0.00 )
>121	ArgumentList	m_pos [ 0 ] + hit_pos
>122	Argument	m_pos [ 1 ] + m_pos_shift - 0.00
>123	AdditiveExpression	m_pos [ 1 ] + m_pos_shift - 0.00
>124	AdditiveExpression	m_pos_shift - 0.00
>125	PrimaryExpression	0.00
>126	Identifier	m_pos_shift
>127	ArrayIndexing	m_pos [ 1 ]
>128	PrimaryExpression	1
>129	Identifier	m_pos
>130	Argument	m_pos [ 0 ] + hit_pos
>131	AdditiveExpression	m_pos [ 0 ] + hit_pos
>132	Identifier	hit_pos
>133	ArrayIndexing	m_pos [ 0 ]
>134	PrimaryExpression	0
>135	Identifier	m_pos
>136	Callee	vec2
>137	Identifier	vec2
>138	Identifier	expl_pos
>139	Identifier	expl_pos
>140	IdentifierDeclType	vec2
>141	IfStatement	if ( ! m_damaged )
>142	ElseStatement	else
>143	IfStatement	if ( ! m_sinking )
>144	CompoundStatement	 
>145	ForStatement	for ( int i = 0 ; i < m_num_bubble_streams ; ++ i )
>146	CompoundStatement	 
>147	ExpressionStatement	 
>148	AssignmentExpr	m_bbl_emitpos_x [ i ] = ( ( float ) i / m_num_bubble_streams ) + 0.1 - 0.5 + ( RAND_0_1 - 0.5 ) * 0.175
>149	AdditiveExpression	( ( float ) i / m_num_bubble_streams ) + 0.1 - 0.5 + ( RAND_0_1 - 0.5 ) * 0.175
>150	AdditiveExpression	0.1 - 0.5 + ( RAND_0_1 - 0.5 ) * 0.175
>151	AdditiveExpression	0.5 + ( RAND_0_1 - 0.5 ) * 0.175
>152	MultiplicativeExpression	( RAND_0_1 - 0.5 ) * 0.175
>153	PrimaryExpression	0.175
>154	AdditiveExpression	RAND_0_1 - 0.5
>155	PrimaryExpression	0.5
>156	Identifier	RAND_0_1
>157	PrimaryExpression	0.5
>158	PrimaryExpression	0.1
>159	MultiplicativeExpression	( float ) i / m_num_bubble_streams
>160	Identifier	m_num_bubble_streams
>161	CastExpression	( float ) i
>162	Identifier	i
>163	CastTarget	float
>164	ArrayIndexing	m_bbl_emitpos_x [ i ]
>165	Identifier	i
>166	Identifier	m_bbl_emitpos_x
>167	ExpressionStatement	 
>168	AssignmentExpr	m_bbl [ i ] = new PE_Bubbles ( vec2 ( 0.0 , 0.0 ) )
>169	CallExpression	vec2 ( 0.0 , 0.0 )
>170	ArgumentList	0.0
>171	Argument	0.0
>172	PrimaryExpression	0.0
>173	Argument	0.0
>174	PrimaryExpression	0.0
>175	Callee	vec2
>176	Identifier	vec2
>177	ArrayIndexing	m_bbl [ i ]
>178	Identifier	i
>179	Identifier	m_bbl
>180	UnaryExpression	 
>181	Identifier	i
>182	IncDec	++
>183	Condition	 
>184	RelationalExpression	i < m_num_bubble_streams
>185	Identifier	m_num_bubble_streams
>186	Identifier	i
>187	ForInit	 
>188	IdentifierDeclStatement	int i = 0 ;
>189	IdentifierDecl	i = 0
>190	AssignmentExpr	i = 0
>191	PrimaryExpression	0
>192	Identifier	i
>193	Identifier	i
>194	IdentifierDeclType	int
>195	ExpressionStatement	 
>196	AssignmentExpr	m_sinking_start_rot = m_rot
>197	Identifier	m_rot
>198	Identifier	m_sinking_start_rot
>199	ExpressionStatement	 
>200	AssignmentExpr	m_sinking_start_pos = m_pos_shift
>201	Identifier	m_pos_shift
>202	Identifier	m_sinking_start_pos
>203	ExpressionStatement	 
>204	AssignmentExpr	m_sinking_start_time = g_timer -> now ( )
>205	CallExpression	g_timer -> now ( )
>206	ArgumentList	 
>207	Callee	g_timer -> now
>208	PtrMemberAccess	g_timer -> now
>209	Identifier	now
>210	Identifier	g_timer
>211	Identifier	m_sinking_start_time
>212	ExpressionStatement	 
>213	AssignmentExpr	m_sinking = true
>214	Identifier	true
>215	Identifier	m_sinking
>216	Condition	 
>217	UnaryOp	! m_sinking
>218	Identifier	m_sinking
>219	UnaryOperator	!
>220	CompoundStatement	 
>221	ExpressionStatement	 
>222	AssignmentExpr	m_hit_pos = hit_pos
>223	Identifier	hit_pos
>224	Identifier	m_hit_pos
>225	ExpressionStatement	 
>226	AssignmentExpr	m_smoke = new PE_Smoke ( vec2 ( hit_pos , 0.0 ) )
>227	CallExpression	vec2 ( hit_pos , 0.0 )
>228	ArgumentList	hit_pos
>229	Argument	0.0
>230	PrimaryExpression	0.0
>231	Argument	hit_pos
>232	Identifier	hit_pos
>233	Callee	vec2
>234	Identifier	vec2
>235	Identifier	m_smoke
>236	ExpressionStatement	 
>237	AssignmentExpr	m_damaged = true
>238	Identifier	true
>239	Identifier	m_damaged
>240	Condition	 
>241	UnaryOp	! m_damaged
>242	Identifier	m_damaged
>243	UnaryOperator	!
>244	ExpressionStatement	 
>245	AssignmentExpr	hit_pos = clamp < float > ( hit_pos , - 0.15 , + 0.15 )
>246	RelationalExpression	clamp < float > ( hit_pos , - 0.15 , + 0.15 )
>247	RelationalExpression	float > ( hit_pos , - 0.15 , + 0.15 )
>248	Expression	hit_pos , - 0.15 , + 0.15
>249	Expression	- 0.15 , + 0.15
>250	UnaryOp	+ 0.15
>251	PrimaryExpression	0.15
>252	UnaryOperator	+
>253	UnaryOp	- 0.15
>254	PrimaryExpression	0.15
>255	UnaryOperator	-
>256	Identifier	hit_pos
>257	Identifier	float
>258	Identifier	clamp
>259	Identifier	hit_pos
>260	IdentifierDeclStatement	 
>261	IdentifierDecl	hit_pos = x - m_pos [ 0 ]
>262	AssignmentExpr	hit_pos = x - m_pos [ 0 ]
>263	AdditiveExpression	x - m_pos [ 0 ]
>264	ArrayIndexing	m_pos [ 0 ]
>265	PrimaryExpression	0
>266	Identifier	m_pos
>267	Identifier	x
>268	Identifier	hit_pos
>269	Identifier	hit_pos
>270	IdentifierDeclType	float
>304	FunctionDef	Boat 
>305	ParameterList	 
>306	ReturnType	void
>307	CompoundStatement	 
>308	ExpressionStatement	 
>309	CallExpression	glPopMatrix ( )
>310	ArgumentList	 
>311	Callee	glPopMatrix
>312	Identifier	glPopMatrix
>313	ExpressionStatement	 
>314	CallExpression	g_resources . font -> print_text ( m_name . c_str ( ) , vec2 ( text_pos , 0.0 ) , text_scale , false , vec4 ( 1.0f , \
>315	ArgumentList	m_name . c_str ( )
>316	Argument	vec4 ( 1.0f , 1.0f , 1.0f , 1.0f )
>317	CallExpression	vec4 ( 1.0f , 1.0f , 1.0f , 1.0f )
>318	ArgumentList	1.0f
>319	Argument	1.0f
>320	PrimaryExpression	1.0f
>321	Argument	1.0f
>322	PrimaryExpression	1.0f
>323	Argument	1.0f
>324	PrimaryExpression	1.0f
>325	Argument	1.0f
>326	PrimaryExpression	1.0f
>327	Callee	vec4
>328	Identifier	vec4
>329	Argument	false
>330	Identifier	false
>331	Argument	text_scale
>332	Identifier	text_scale
>333	Argument	vec2 ( text_pos , 0.0 )
>334	CallExpression	vec2 ( text_pos , 0.0 )
>335	ArgumentList	text_pos
>336	Argument	0.0
>337	PrimaryExpression	0.0
>338	Argument	text_pos
>339	Identifier	text_pos
>340	Callee	vec2
>341	Identifier	vec2
>342	Argument	m_name . c_str ( )
>343	CallExpression	m_name . c_str ( )
>344	ArgumentList	 
>345	Callee	m_name . c_str
>346	MemberAccess	m_name . c_str
>347	Identifier	c_str
>348	Identifier	m_name
>349	Callee	g_resources . font -> print_text
>350	PtrMemberAccess	g_resources . font -> print_text
>351	Identifier	print_text
>352	MemberAccess	g_resources . font
>353	Identifier	font
>354	Identifier	g_resources
>355	IdentifierDeclStatement	 
>356	IdentifierDecl	text_pos = 0.4f - g_resources . font -> size_of_text ( m_name . c_str ( ) , text_scale )
>357	AssignmentExpr	text_pos = 0.4f - g_resources . font -> size_of_text ( m_name . c_str ( ) , text_scale )
>358	AdditiveExpression	0.4f - g_resources . font -> size_of_text ( m_name . c_str ( ) , text_scale )
>359	CallExpression	g_resources . font -> size_of_text ( m_name . c_str ( ) , text_scale )
>360	ArgumentList	m_name . c_str ( )
>361	Argument	text_scale
>362	Identifier	text_scale
>363	Argument	m_name . c_str ( )
>364	CallExpression	m_name . c_str ( )
>365	ArgumentList	 
>366	Callee	m_name . c_str
>367	MemberAccess	m_name . c_str
>368	Identifier	c_str
>369	Identifier	m_name
>370	Callee	g_resources . font -> size_of_text
>371	PtrMemberAccess	g_resources . font -> size_of_text
>372	Identifier	size_of_text
>373	MemberAccess	g_resources . font
>374	Identifier	font
>375	Identifier	g_resources
>376	PrimaryExpression	0.4f
>377	Identifier	text_pos
>378	Identifier	text_pos
>379	IdentifierDeclType	float
>380	IdentifierDeclStatement	 
>381	IdentifierDecl	text_scale = 0.8f
>382	AssignmentExpr	text_scale = 0.8f
>383	PrimaryExpression	0.8f
>384	Identifier	text_scale
>385	Identifier	text_scale
>386	IdentifierDeclType	float
>387	ExpressionStatement	 
>388	CallExpression	( * m_model ) -> draw ( )
>389	ArgumentList	 
>390	Callee	( * m_model ) -> draw
>391	PtrMemberAccess	( * m_model ) -> draw
>392	Identifier	draw
>393	UnaryOp	* m_model
>394	Identifier	m_model
>395	UnaryOperator	*
>396	ExpressionStatement	 
>397	CallExpression	glColor3f ( 0 , 0 , 0 )
>398	ArgumentList	0
>399	Argument	0
>400	PrimaryExpression	0
>401	Argument	0
>402	PrimaryExpression	0
>403	Argument	0
>404	PrimaryExpression	0
>405	Callee	glColor3f
>406	Identifier	glColor3f
>407	ExpressionStatement	 
>408	CallExpression	glDisable ( GL_TEXTURE_2D )
>409	ArgumentList	GL_TEXTURE_2D
>410	Argument	GL_TEXTURE_2D
>411	Identifier	GL_TEXTURE_2D
>412	Callee	glDisable
>413	Identifier	glDisable
>414	ExpressionStatement	 
>415	AssignmentExpr	m_obb = OBB ( ( * m_model ) -> m_aabb )
>416	CallExpression	OBB ( ( * m_model ) -> m_aabb )
>417	ArgumentList	( * m_model ) -> m_aabb
>418	Argument	( * m_model ) -> m_aabb
>419	PtrMemberAccess	( * m_model ) -> m_aabb
>420	Identifier	m_aabb
>421	UnaryOp	* m_model
>422	Identifier	m_model
>423	UnaryOperator	*
>424	Callee	OBB
>425	Identifier	OBB
>426	Identifier	m_obb
>427	IfStatement	if ( m_sinking )
>428	CompoundStatement	 
>429	ForStatement	for ( int i = 0 ; i < m_num_bubble_streams ; ++ i )
>430	CompoundStatement	 
>431	ExpressionStatement	 
>432	CallExpression	m_bbl [ i ] -> draw ( )
>433	ArgumentList	 
>434	Callee	m_bbl [ i ] -> draw
>435	PtrMemberAccess	m_bbl [ i ] -> draw
>436	Identifier	draw
>437	ArrayIndexing	m_bbl [ i ]
>438	Identifier	i
>439	Identifier	m_bbl
>440	ExpressionStatement	 
>441	CallExpression	m_bbl [ i ] -> update ( )
>442	ArgumentList	 
>443	Callee	m_bbl [ i ] -> update
>444	PtrMemberAccess	m_bbl [ i ] -> update
>445	Identifier	update
>446	ArrayIndexing	m_bbl [ i ]
>447	Identifier	i
>448	Identifier	m_bbl
>449	ExpressionStatement	 
>450	CallExpression	m_bbl [ i ] -> set_pos ( pos )
>451	ArgumentList	pos
>452	Argument	pos
>453	Identifier	pos
>454	Callee	m_bbl [ i ] -> set_pos
>455	PtrMemberAccess	m_bbl [ i ] -> set_pos
>456	Identifier	set_pos
>457	ArrayIndexing	m_bbl [ i ]
>458	Identifier	i
>459	Identifier	m_bbl
>460	IdentifierDeclStatement	 
>461	IdentifierDecl	pos = vec2 ( transformPoint ( mt , vec3 ( m_bbl_emitpos_x [ i ] , 0.0 , 0.0 ) ) )
>462	AssignmentExpr	pos = vec2 ( transformPoint ( mt , vec3 ( m_bbl_emitpos_x [ i ] , 0.0 , 0.0 ) ) )
>463	CallExpression	vec2 ( transformPoint ( mt , vec3 ( m_bbl_emitpos_x [ i ] , 0.0 , 0.0 ) ) )
>464	ArgumentList	transformPoint ( mt , vec3 ( m_bbl_emitpos_x [ i ] , 0.0 , 0.0 ) )
>465	Argument	transformPoint ( mt , vec3 ( m_bbl_emitpos_x [ i ] , 0.0 , 0.0 ) )
>466	CallExpression	transformPoint ( mt , vec3 ( m_bbl_emitpos_x [ i ] , 0.0 , 0.0 ) )
>467	ArgumentList	mt
>468	Argument	vec3 ( m_bbl_emitpos_x [ i ] , 0.0 , 0.0 )
>469	CallExpression	vec3 ( m_bbl_emitpos_x [ i ] , 0.0 , 0.0 )
>470	ArgumentList	m_bbl_emitpos_x [ i ]
>471	Argument	0.0
>472	PrimaryExpression	0.0
>473	Argument	0.0
>474	PrimaryExpression	0.0
>475	Argument	m_bbl_emitpos_x [ i ]
>476	ArrayIndexing	m_bbl_emitpos_x [ i ]
>477	Identifier	i
>478	Identifier	m_bbl_emitpos_x
>479	Callee	vec3
>480	Identifier	vec3
>481	Argument	mt
>482	Identifier	mt
>483	Callee	transformPoint
>484	Identifier	transformPoint
>485	Callee	vec2
>486	Identifier	vec2
>487	Identifier	pos
>488	Identifier	pos
>489	IdentifierDeclType	vec2
>490	UnaryExpression	 
>491	Identifier	i
>492	IncDec	++
>493	Condition	 
>494	RelationalExpression	i < m_num_bubble_streams
>495	Identifier	m_num_bubble_streams
>496	Identifier	i
>497	ForInit	 
>498	IdentifierDeclStatement	int i = 0 ;
>499	IdentifierDecl	i = 0
>500	AssignmentExpr	i = 0
>501	PrimaryExpression	0
>502	Identifier	i
>503	Identifier	i
>504	IdentifierDeclType	int
>505	IdentifierDeclStatement	 
>506	IdentifierDecl	mt = glGetCurrentMatrix ( GL_MODELVIEW_MATRIX )
>507	AssignmentExpr	mt = glGetCurrentMatrix ( GL_MODELVIEW_MATRIX )
>508	CallExpression	glGetCurrentMatrix ( GL_MODELVIEW_MATRIX )
>509	ArgumentList	GL_MODELVIEW_MATRIX
>510	Argument	GL_MODELVIEW_MATRIX
>511	Identifier	GL_MODELVIEW_MATRIX
>512	Callee	glGetCurrentMatrix
>513	Identifier	glGetCurrentMatrix
>514	Identifier	mt
>515	Identifier	mt
>516	IdentifierDeclType	mat4
>517	Condition	 
>518	Identifier	m_sinking
>519	ExpressionStatement	 
>520	CallExpression	glRotatef ( m_rot , 0 , 0 , 1 )
>521	ArgumentList	m_rot
>522	Argument	1
>523	PrimaryExpression	1
>524	Argument	0
>525	PrimaryExpression	0
>526	Argument	0
>527	PrimaryExpression	0
>528	Argument	m_rot
>529	Identifier	m_rot
>530	Callee	glRotatef
>531	Identifier	glRotatef
>532	ExpressionStatement	 
>533	CallExpression	glScalef ( m_scale , m_scale , 1.0f )
>534	ArgumentList	m_scale
>535	Argument	1.0f
>536	PrimaryExpression	1.0f
>537	Argument	m_scale
>538	Identifier	m_scale
>539	Argument	m_scale
>540	Identifier	m_scale
>541	Callee	glScalef
>542	Identifier	glScalef
>543	ExpressionStatement	 
>544	CallExpression	glTranslatef ( m_pos [ 0 ] , m_pos [ 1 ] + m_pos_shift , 0.0 )
>545	ArgumentList	m_pos [ 0 ]
>546	Argument	0.0
>547	PrimaryExpression	0.0
>548	Argument	m_pos [ 1 ] + m_pos_shift
>549	AdditiveExpression	m_pos [ 1 ] + m_pos_shift
>550	Identifier	m_pos_shift
>551	ArrayIndexing	m_pos [ 1 ]
>552	PrimaryExpression	1
>553	Identifier	m_pos
>554	Argument	m_pos [ 0 ]
>555	ArrayIndexing	m_pos [ 0 ]
>556	PrimaryExpression	0
>557	Identifier	m_pos
>558	Callee	glTranslatef
>559	Identifier	glTranslatef
>560	ExpressionStatement	 
>561	CallExpression	glPushMatrix ( )
>562	ArgumentList	 
>563	Callee	glPushMatrix
>564	Identifier	glPushMatrix
>565	IfStatement	if ( m_damaged )
>566	CompoundStatement	 
>567	ExpressionStatement	 
>568	CallExpression	m_smoke -> draw ( )
>569	ArgumentList	 
>570	Callee	m_smoke -> draw
>571	PtrMemberAccess	m_smoke -> draw
>572	Identifier	draw
>573	Identifier	m_smoke
>574	ExpressionStatement	 
>575	CallExpression	m_smoke -> update ( )
>576	ArgumentList	 
>577	Callee	m_smoke -> update
>578	PtrMemberAccess	m_smoke -> update
>579	Identifier	update
>580	Identifier	m_smoke
>581	ExpressionStatement	 
>582	CallExpression	m_smoke -> set_pos ( vec2 ( m_pos [ 0 ] + m_hit_pos , m_pos [ 1 ] + m_pos_shift - 0.01 ) )
>583	ArgumentList	vec2 ( m_pos [ 0 ] + m_hit_pos , m_pos [ 1 ] + m_pos_shift - 0.01 )
>584	Argument	vec2 ( m_pos [ 0 ] + m_hit_pos , m_pos [ 1 ] + m_pos_shift - 0.01 )
>585	CallExpression	vec2 ( m_pos [ 0 ] + m_hit_pos , m_pos [ 1 ] + m_pos_shift - 0.01 )
>586	ArgumentList	m_pos [ 0 ] + m_hit_pos
>587	Argument	m_pos [ 1 ] + m_pos_shift - 0.01
>588	AdditiveExpression	m_pos [ 1 ] + m_pos_shift - 0.01
>589	AdditiveExpression	m_pos_shift - 0.01
>590	PrimaryExpression	0.01
>591	Identifier	m_pos_shift
>592	ArrayIndexing	m_pos [ 1 ]
>593	PrimaryExpression	1
>594	Identifier	m_pos
>595	Argument	m_pos [ 0 ] + m_hit_pos
>596	AdditiveExpression	m_pos [ 0 ] + m_hit_pos
>597	Identifier	m_hit_pos
>598	ArrayIndexing	m_pos [ 0 ]
>599	PrimaryExpression	0
>600	Identifier	m_pos
>601	Callee	vec2
>602	Identifier	vec2
>603	Callee	m_smoke -> set_pos
>604	PtrMemberAccess	m_smoke -> set_pos
>605	Identifier	set_pos
>606	Identifier	m_smoke
>607	Condition	 
>608	Identifier	m_damaged
>609	IfStatement	if ( m_sinking )
>610	ElseStatement	else
>611	CompoundStatement	 
>612	ExpressionStatement	 
>613	AssignmentExpr	m_rot = Sea 
>614	MultiplicativeExpression	Sea 
>615	MultiplicativeExpression	0.2f * 333
>616	PrimaryExpression	333
>617	PrimaryExpression	0.2f
>618	CallExpression	Sea 
>619	ArgumentList	m_pos [ 0 ]
>620	Argument	m_pos [ 0 ]
>621	ArrayIndexing	m_pos [ 0 ]
>622	PrimaryExpression	0
>623	Identifier	m_pos
>624	Callee	Sea 
>625	Identifier	Sea 
>626	Identifier	m_rot
>627	ExpressionStatement	 
>628	AssignmentExpr	m_pos_shift = Sea 
>629	MultiplicativeExpression	Sea 
>630	PrimaryExpression	0.35f
>631	CallExpression	Sea 
>632	ArgumentList	m_pos [ 0 ] - 0.05f
>633	Argument	m_pos [ 0 ] - 0.05f
>634	AdditiveExpression	m_pos [ 0 ] - 0.05f
>635	PrimaryExpression	0.05f
>636	ArrayIndexing	m_pos [ 0 ]
>637	PrimaryExpression	0
>638	Identifier	m_pos
>639	Callee	Sea 
>640	Identifier	Sea 
>641	Identifier	m_pos_shift
>642	CompoundStatement	 
>643	IfStatement	if ( delta_t > 0.5 )
>644	ExpressionStatement	 
>645	CallExpression	m_smoke -> stop_emitting ( )
>646	ArgumentList	 
>647	Callee	m_smoke -> stop_emitting
>648	PtrMemberAccess	m_smoke -> stop_emitting
>649	Identifier	stop_emitting
>650	Identifier	m_smoke
>651	Condition	 
>652	RelationalExpression	delta_t > 0.5
>653	PrimaryExpression	0.5
>654	Identifier	delta_t
>655	IfStatement	if ( delta_t < 1.0 )
>656	ElseStatement	else
>657	CompoundStatement	 
>658	ExpressionStatement	 
>659	AssignmentExpr	m_rot = m_sinking_start_rot + m_sinking_start_rot * 5.0 * delta_t
>660	AdditiveExpression	m_sinking_start_rot + m_sinking_start_rot * 5.0 * delta_t
>661	MultiplicativeExpression	m_sinking_start_rot * 5.0 * delta_t
>662	MultiplicativeExpression	5.0 * delta_t
>663	Identifier	delta_t
>664	PrimaryExpression	5.0
>665	Identifier	m_sinking_start_rot
>666	Identifier	m_sinking_start_rot
>667	Identifier	m_rot
>668	ExpressionStatement	 
>669	AssignmentExpr	m_pos_shift = m_sinking_start_pos + 0.05 * delta_t + 0.03 - 0.05
>670	AdditiveExpression	m_sinking_start_pos + 0.05 * delta_t + 0.03 - 0.05
>671	AdditiveExpression	0.05 * delta_t + 0.03 - 0.05
>672	AdditiveExpression	0.03 - 0.05
>673	PrimaryExpression	0.05
>674	PrimaryExpression	0.03
>675	MultiplicativeExpression	0.05 * delta_t
>676	Identifier	delta_t
>677	PrimaryExpression	0.05
>678	Identifier	m_sinking_start_pos
>679	Identifier	m_pos_shift
>680	CompoundStatement	 
>681	ExpressionStatement	 
>682	AssignmentExpr	m_rot = m_sinking_start_rot + m_sinking_start_rot * 5.0 * delta_t * delta_t
>683	AdditiveExpression	m_sinking_start_rot + m_sinking_start_rot * 5.0 * delta_t * delta_t
>684	MultiplicativeExpression	m_sinking_start_rot * 5.0 * delta_t * delta_t
>685	MultiplicativeExpression	5.0 * delta_t * delta_t
>686	MultiplicativeExpression	delta_t * delta_t
>687	Identifier	delta_t
>688	Identifier	delta_t
>689	PrimaryExpression	5.0
>690	Identifier	m_sinking_start_rot
>691	Identifier	m_sinking_start_rot
>692	Identifier	m_rot
>693	ExpressionStatement	 
>694	AssignmentExpr	m_pos_shift = m_sinking_start_pos + 0.03 * delta_t * delta_t
>695	AdditiveExpression	m_sinking_start_pos + 0.03 * delta_t * delta_t
>696	MultiplicativeExpression	0.03 * delta_t * delta_t
>697	MultiplicativeExpression	delta_t * delta_t
>698	Identifier	delta_t
>699	Identifier	delta_t
>700	PrimaryExpression	0.03
>701	Identifier	m_sinking_start_pos
>702	Identifier	m_pos_shift
>703	Condition	 
>704	RelationalExpression	delta_t < 1.0
>705	PrimaryExpression	1.0
>706	Identifier	delta_t
>707	IfStatement	if ( delta_t > 25.0 )
>708	ReturnStatement	 
>709	Condition	 
>710	RelationalExpression	delta_t > 25.0
>711	PrimaryExpression	25.0
>712	Identifier	delta_t
>713	IdentifierDeclStatement	 
>714	IdentifierDecl	delta_t = g_timer -> now ( ) - m_sinking_start_time
>715	AssignmentExpr	delta_t = g_timer -> now ( ) - m_sinking_start_time
>716	AdditiveExpression	g_timer -> now ( ) - m_sinking_start_time
>717	Identifier	m_sinking_start_time
>718	CallExpression	g_timer -> now ( )
>719	ArgumentList	 
>720	Callee	g_timer -> now
>721	PtrMemberAccess	g_timer -> now
>722	Identifier	now
>723	Identifier	g_timer
>724	Identifier	delta_t
>725	Identifier	delta_t
>726	IdentifierDeclType	float
>727	Condition	 
>728	Identifier	m_sinking
>781	FunctionDef	Boat 
>782	ParameterList	 
>783	ReturnType	bool
>784	CompoundStatement	 
>785	ReturnStatement	 
>786	Identifier	m_sinking
>791	FunctionDef	Boat 
>792	ParameterList	 
>793	ReturnType	bool
>794	CompoundStatement	 
>795	ReturnStatement	 
>796	UnaryOp	! m_sinking
>797	Identifier	m_sinking
>798	UnaryOperator	!
<3=14,4
<4=11,8,5
<5=7,6
<8=10,9
<11=13,12
<14=41,37,15
<15=29,25,22,16
<16=17
<17=19,18
<19=21,20
<22=24,23
<25=26
<26=28,27
<29=30
<30=31
<31=36,35,32
<32=34,33
<37=38
<38=40,39
<41=42
<42=48,43
<43=47,44
<44=46,45
<66=68,67
<68=92,90,73,69
<69=70
<70=72,71
<73=82,78,75,74
<75=77,76
<78=79
<79=81,80
<82=83
<83=84
<84=89,88,85
<85=87,86
<90=91
<99=105,104,100
<100=101
<101=103,102
<105=260,244,141,117,106
<106=107
<107=113,108
<108=111,109
<109=110
<111=112
<113=114
<114=116,115
<117=118
<118=140,139,119
<119=138,120
<120=136,121
<121=130,122
<122=123
<123=127,124
<124=126,125
<127=129,128
<130=131
<131=133,132
<133=135,134
<136=137
<141=240,220,142
<142=143
<143=216,144
<144=212,203,199,195,145
<145=187,183,180,146
<146=167,147
<147=148
<148=164,149
<149=159,150
<150=158,151
<151=157,152
<152=154,153
<154=156,155
<159=161,160
<161=163,162
<164=166,165
<167=168
<168=177,169
<169=175,170
<170=173,171
<171=172
<173=174
<175=176
<177=179,178
<180=182,181
<183=184
<184=186,185
<187=188
<188=189
<189=194,193,190
<190=192,191
<195=196
<196=198,197
<199=200
<200=202,201
<203=204
<204=211,205
<205=207,206
<207=208
<208=210,209
<212=213
<213=215,214
<216=217
<217=219,218
<220=236,225,221
<221=222
<222=224,223
<225=226
<226=235,227
<227=233,228
<228=231,229
<229=230
<231=232
<233=234
<236=237
<237=239,238
<240=241
<241=243,242
<244=245
<245=259,246
<246=258,247
<247=257,248
<248=256,249
<249=253,250
<250=252,251
<253=255,254
<260=261
<261=270,269,262
<262=268,263
<263=267,264
<264=266,265
<304=307,306,305
<307=609,565,560,543,532,519,427,414,407,396,387,380,355,313,308
<308=309
<309=311,310
<311=312
<313=314
<314=349,315
<315=342,333,331,329,316
<316=317
<317=327,318
<318=325,323,321,319
<319=320
<321=322
<323=324
<325=326
<327=328
<329=330
<331=332
<333=334
<334=340,335
<335=338,336
<336=337
<338=339
<340=341
<342=343
<343=345,344
<345=346
<346=348,347
<349=350
<350=352,351
<352=354,353
<355=356
<356=379,378,357
<357=377,358
<358=376,359
<359=370,360
<360=363,361
<361=362
<363=364
<364=366,365
<366=367
<367=369,368
<370=371
<371=373,372
<373=375,374
<380=381
<381=386,385,382
<382=384,383
<387=388
<388=390,389
<390=391
<391=393,392
<393=395,394
<396=397
<397=405,398
<398=403,401,399
<399=400
<401=402
<403=404
<405=406
<407=408
<408=412,409
<409=410
<410=411
<412=413
<414=415
<415=426,416
<416=424,417
<417=418
<418=419
<419=421,420
<421=423,422
<424=425
<427=517,428
<428=505,429
<429=497,493,490,430
<430=460,449,440,431
<431=432
<432=434,433
<434=435
<435=437,436
<437=439,438
<440=441
<441=443,442
<443=444
<444=446,445
<446=448,447
<449=450
<450=454,451
<451=452
<452=453
<454=455
<455=457,456
<457=459,458
<460=461
<461=489,488,462
<462=487,463
<463=485,464
<464=465
<465=466
<466=483,467
<467=481,468
<468=469
<469=479,470
<470=475,473,471
<471=472
<473=474
<475=476
<476=478,477
<479=480
<481=482
<483=484
<485=486
<490=492,491
<493=494
<494=496,495
<497=498
<498=499
<499=504,503,500
<500=502,501
<505=506
<506=516,515,507
<507=514,508
<508=512,509
<509=510
<510=511
<512=513
<517=518
<519=520
<520=530,521
<521=528,526,524,522
<522=523
<524=525
<526=527
<528=529
<530=531
<532=533
<533=541,534
<534=539,537,535
<535=536
<537=538
<539=540
<541=542
<543=544
<544=558,545
<545=554,548,546
<546=547
<548=549
<549=551,550
<551=553,552
<554=555
<555=557,556
<558=559
<560=561
<561=563,562
<563=564
<565=607,566
<566=581,574,567
<567=568
<568=570,569
<570=571
<571=573,572
<574=575
<575=577,576
<577=578
<578=580,579
<581=582
<582=603,583
<583=584
<584=585
<585=601,586
<586=595,587
<587=588
<588=592,589
<589=591,590
<592=594,593
<595=596
<596=598,597
<598=600,599
<601=602
<603=604
<604=606,605
<607=608
<609=727,642,610
<610=611
<611=627,612
<612=613
<613=626,614
<614=618,615
<615=617,616
<618=624,619
<619=620
<620=621
<621=623,622
<624=625
<627=628
<628=641,629
<629=631,630
<631=639,632
<632=633
<633=634
<634=636,635
<636=638,637
<639=640
<642=713,707,655,643
<643=651,644
<644=645
<645=647,646
<647=648
<648=650,649
<651=652
<652=654,653
<655=703,680,656
<656=657
<657=668,658
<658=659
<659=667,660
<660=666,661
<661=665,662
<662=664,663
<668=669
<669=679,670
<670=678,671
<671=675,672
<672=674,673
<675=677,676
<680=693,681
<681=682
<682=692,683
<683=691,684
<684=690,685
<685=689,686
<686=688,687
<693=694
<694=702,695
<695=701,696
<696=700,697
<697=699,698
<703=704
<704=706,705
<707=709,708
<709=710
<710=712,711
<713=714
<714=726,725,715
<715=724,716
<716=718,717
<718=720,719
<720=721
<721=723,722
<727=728
<781=784,783,782
<784=785
<785=786
<791=794,793,792
<794=795
<795=796
<796=798,797
