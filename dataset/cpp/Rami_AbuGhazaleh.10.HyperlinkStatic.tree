>3	FunctionDef	CHyperlinkStatic 
>4	ParameterList	 
>5	CompoundStatement	 
>9	FunctionDef	CHyperlinkStatic 
>10	ParameterList	std 
>11	Parameter	 
>12	Identifier	strHyperlink
>13	ParameterType	std 
>14	ReturnType	void
>15	CompoundStatement	 
>16	ExpressionStatement	 
>17	AssignmentExpr	_strHyperlink = strHyperlink . c_str ( )
>18	CallExpression	strHyperlink . c_str ( )
>19	ArgumentList	 
>20	Callee	strHyperlink . c_str
>21	MemberAccess	strHyperlink . c_str
>22	Identifier	c_str
>23	Identifier	strHyperlink
>24	Identifier	_strHyperlink
>31	FunctionDef	CHyperlinkStatic 
>32	ParameterList	std 
>33	Parameter	 
>34	Identifier	strCaption
>35	ParameterType	std 
>36	ReturnType	void
>37	CompoundStatement	 
>38	ExpressionStatement	 
>39	AssignmentExpr	_bGetCaptionSize = false
>40	Identifier	false
>41	Identifier	_bGetCaptionSize
>42	ExpressionStatement	 
>43	AssignmentExpr	_strCaption = strCaption . c_str ( )
>44	CallExpression	strCaption . c_str ( )
>45	ArgumentList	 
>46	Callee	strCaption . c_str
>47	MemberAccess	strCaption . c_str
>48	Identifier	c_str
>49	Identifier	strCaption
>50	Identifier	_strCaption
>59	FunctionDef	CHyperlinkStatic 
>60	ParameterList	UINT nFlags , CPoint point
>61	Parameter	 
>62	Identifier	point
>63	ParameterType	CPoint
>64	Parameter	 
>65	Identifier	nFlags
>66	ParameterType	UINT
>67	ReturnType	void
>68	CompoundStatement	 
>69	BlockStarter	 
>70	CompoundStatement	 
>71	ExpressionStatement	DniMessageBox 
>72	CallExpression	DniMessageBox 
>73	ArgumentList	DVLib 
>74	Argument	MB_OK | MB_ICONSTOP
>75	InclusiveOrExpression	MB_OK | MB_ICONSTOP
>76	Identifier	MB_ICONSTOP
>77	Identifier	MB_OK
>78	Argument	DVLib 
>79	CallExpression	DVLib 
>80	ArgumentList	 
>81	Callee	DVLib 
>82	MemberAccess	DVLib 
>83	Identifier	c_str
>84	CallExpression	DVLib 
>85	ArgumentList	ex . what ( )
>86	Argument	ex . what ( )
>87	CallExpression	ex . what ( )
>88	ArgumentList	 
>89	Callee	ex . what
>90	MemberAccess	ex . what
>91	Identifier	what
>92	Identifier	ex
>93	Callee	DVLib 
>94	Identifier	DVLib 
>95	Callee	DniMessageBox 
>96	Identifier	DniMessageBox 
>97	Identifier	ex
>98	BlockStarter	 
>99	CompoundStatement	 
>100	ExpressionStatement	CStatic 
>101	CallExpression	CStatic 
>102	ArgumentList	nFlags
>103	Argument	point
>104	Identifier	point
>105	Argument	nFlags
>106	Identifier	nFlags
>107	Callee	CStatic 
>108	Identifier	CStatic 
>109	IfStatement	if ( InCaptionRange ( point ) )
>110	ExpressionStatement	DVLib 
>111	CallExpression	DVLib 
>112	ArgumentList	_strHyperlink . GetBuffer ( )
>113	Argument	_strHyperlink . GetBuffer ( )
>114	CallExpression	_strHyperlink . GetBuffer ( )
>115	ArgumentList	 
>116	Callee	_strHyperlink . GetBuffer
>117	MemberAccess	_strHyperlink . GetBuffer
>118	Identifier	GetBuffer
>119	Identifier	_strHyperlink
>120	Callee	DVLib 
>121	Identifier	DVLib 
>122	Condition	InCaptionRange ( point )
>123	CallExpression	InCaptionRange ( point )
>124	ArgumentList	point
>125	Argument	point
>126	Identifier	point
>127	Callee	InCaptionRange
>128	Identifier	InCaptionRange
>129	IfStatement	if ( _bGetCaptionSize == false )
>130	ExpressionStatement	GetCaptionSize ( )
>131	CallExpression	GetCaptionSize ( )
>132	ArgumentList	 
>133	Callee	GetCaptionSize
>134	Identifier	GetCaptionSize
>135	Condition	_bGetCaptionSize == false
>136	EqualityExpression	_bGetCaptionSize == false
>137	Identifier	false
>138	Identifier	_bGetCaptionSize
>155	FunctionDef	CHyperlinkStatic 
>156	ParameterList	LPCTSTR lpszText , DWORD dwStyle , const RECT & rect , CWnd * pParentWnd , UINT nID
>157	Parameter	 
>158	Identifier	nID
>159	ParameterType	UINT
>160	Parameter	 
>161	Identifier	pParentWnd
>162	ParameterType	CWnd *
>163	Parameter	 
>164	Identifier	rect
>165	ParameterType	const RECT &
>166	Parameter	 
>167	Identifier	dwStyle
>168	ParameterType	DWORD
>169	Parameter	 
>170	Identifier	lpszText
>171	ParameterType	LPCTSTR
>172	ReturnType	BOOL
>173	CompoundStatement	 
>174	ReturnStatement	 
>175	Identifier	rc
>176	ExpressionStatement	 
>177	CallExpression	SetCaption ( lpszText )
>178	ArgumentList	lpszText
>179	Argument	lpszText
>180	Identifier	lpszText
>181	Callee	SetCaption
>182	Identifier	SetCaption
>183	IdentifierDeclStatement	 
>184	IdentifierDecl	rc = CStatic 
>185	AssignmentExpr	rc = CStatic 
>186	CallExpression	CStatic 
>187	ArgumentList	lpszText
>188	Argument	nID
>189	Identifier	nID
>190	Argument	pParentWnd
>191	Identifier	pParentWnd
>192	Argument	rect
>193	Identifier	rect
>194	Argument	dwStyle
>195	Identifier	dwStyle
>196	Argument	lpszText
>197	Identifier	lpszText
>198	Callee	CStatic 
>199	Identifier	CStatic 
>200	Identifier	rc
>201	Identifier	rc
>202	IdentifierDeclType	BOOL
>203	ExpressionStatement	 
>204	CallExpression	_rect . SetRect ( rect . left , rect . top , rect . right , rect . bottom )
>205	ArgumentList	rect . left
>206	Argument	rect . bottom
>207	MemberAccess	rect . bottom
>208	Identifier	bottom
>209	Identifier	rect
>210	Argument	rect . right
>211	MemberAccess	rect . right
>212	Identifier	right
>213	Identifier	rect
>214	Argument	rect . top
>215	MemberAccess	rect . top
>216	Identifier	top
>217	Identifier	rect
>218	Argument	rect . left
>219	MemberAccess	rect . left
>220	Identifier	left
>221	Identifier	rect
>222	Callee	_rect . SetRect
>223	MemberAccess	_rect . SetRect
>224	Identifier	SetRect
>225	Identifier	_rect
>241	FunctionDef	CHyperlinkStatic 
>242	ParameterList	 
>243	ReturnType	void
>244	CompoundStatement	 
>245	ExpressionStatement	 
>246	CallExpression	dc . SelectObject ( pOldFont )
>247	ArgumentList	pOldFont
>248	Argument	pOldFont
>249	Identifier	pOldFont
>250	Callee	dc . SelectObject
>251	MemberAccess	dc . SelectObject
>252	Identifier	SelectObject
>253	Identifier	dc
>254	ExpressionStatement	 
>255	CallExpression	dc . TextOut ( _captionRect . left , _captionRect . top , _strCaption )
>256	ArgumentList	_captionRect . left
>257	Argument	_strCaption
>258	Identifier	_strCaption
>259	Argument	_captionRect . top
>260	MemberAccess	_captionRect . top
>261	Identifier	top
>262	Identifier	_captionRect
>263	Argument	_captionRect . left
>264	MemberAccess	_captionRect . left
>265	Identifier	left
>266	Identifier	_captionRect
>267	Callee	dc . TextOut
>268	MemberAccess	dc . TextOut
>269	Identifier	TextOut
>270	Identifier	dc
>271	IfStatement	if ( ! _bGetCaptionSize )
>272	CompoundStatement	 
>273	ExpressionStatement	 
>274	CallExpression	GetCaptionSize ( )
>275	ArgumentList	 
>276	Callee	GetCaptionSize
>277	Identifier	GetCaptionSize
>278	Condition	 
>279	UnaryOp	! _bGetCaptionSize
>280	Identifier	_bGetCaptionSize
>281	UnaryOperator	!
>282	ExpressionStatement	 
>283	CallExpression	dc . SetTextColor ( RGB ( 0 , 0 , 255 ) )
>284	ArgumentList	RGB ( 0 , 0 , 255 )
>285	Argument	RGB ( 0 , 0 , 255 )
>286	CallExpression	RGB ( 0 , 0 , 255 )
>287	ArgumentList	0
>288	Argument	255
>289	PrimaryExpression	255
>290	Argument	0
>291	PrimaryExpression	0
>292	Argument	0
>293	PrimaryExpression	0
>294	Callee	RGB
>295	Identifier	RGB
>296	Callee	dc . SetTextColor
>297	MemberAccess	dc . SetTextColor
>298	Identifier	SetTextColor
>299	Identifier	dc
>300	ExpressionStatement	 
>301	CallExpression	dc . SetBkMode ( TRANSPARENT )
>302	ArgumentList	TRANSPARENT
>303	Argument	TRANSPARENT
>304	Identifier	TRANSPARENT
>305	Callee	dc . SetBkMode
>306	MemberAccess	dc . SetBkMode
>307	Identifier	SetBkMode
>308	Identifier	dc
>309	IdentifierDeclStatement	 
>310	IdentifierDecl	* pOldFont = ( CFont * ) dc . SelectObject ( & _fontCaption )
>311	AssignmentExpr	* pOldFont = ( CFont * ) dc . SelectObject ( & _fontCaption )
>312	CastExpression	( CFont * ) dc . SelectObject ( & _fontCaption )
>313	CallExpression	dc . SelectObject ( & _fontCaption )
>314	ArgumentList	& _fontCaption
>315	Argument	& _fontCaption
>316	UnaryOp	& _fontCaption
>317	Identifier	_fontCaption
>318	UnaryOperator	&
>319	Callee	dc . SelectObject
>320	MemberAccess	dc . SelectObject
>321	Identifier	SelectObject
>322	Identifier	dc
>323	CastTarget	CFont *
>324	Identifier	pOldFont
>325	Identifier	pOldFont
>326	IdentifierDeclType	CFont *
>327	IdentifierDeclStatement	 
>328	IdentifierDecl	dc ( this )
>329	Identifier	this
>330	Identifier	dc
>331	IdentifierDeclType	CPaintDC
>332	IfStatement	if ( _bCreateFont == false )
>333	CompoundStatement	 
>334	ExpressionStatement	 
>335	CallExpression	CreateFont ( )
>336	ArgumentList	 
>337	Callee	CreateFont
>338	Identifier	CreateFont
>339	Condition	 
>340	EqualityExpression	_bCreateFont == false
>341	Identifier	false
>342	Identifier	_bCreateFont
>359	FunctionDef	CHyperlinkStatic 
>360	ParameterList	 
>361	ReturnType	void
>362	CompoundStatement	 
>363	ExpressionStatement	 
>364	CallExpression	_fontCaption . DeleteObject ( )
>365	ArgumentList	 
>366	Callee	_fontCaption . DeleteObject
>367	MemberAccess	_fontCaption . DeleteObject
>368	Identifier	DeleteObject
>369	Identifier	_fontCaption
>370	ExpressionStatement	 
>371	CallExpression	CStatic 
>372	ArgumentList	 
>373	Callee	CStatic 
>374	Identifier	CStatic 
>379	FunctionDef	CHyperlinkStatic 
>380	ParameterList	 
>381	ReturnType	void
>382	CompoundStatement	 
>383	ExpressionStatement	 
>384	CallExpression	CStatic 
>385	ArgumentList	 
>386	Callee	CStatic 
>387	Identifier	CStatic 
>388	ExpressionStatement	 
>389	CallExpression	ModifyStyle ( 0 , SS_NOTIFY | SS_OWNERDRAW , TRUE )
>390	ArgumentList	0
>391	Argument	TRUE
>392	Identifier	TRUE
>393	Argument	SS_NOTIFY | SS_OWNERDRAW
>394	InclusiveOrExpression	SS_NOTIFY | SS_OWNERDRAW
>395	Identifier	SS_OWNERDRAW
>396	Identifier	SS_NOTIFY
>397	Argument	0
>398	PrimaryExpression	0
>399	Callee	ModifyStyle
>400	Identifier	ModifyStyle
>407	FunctionDef	CHyperlinkStatic 
>408	ParameterList	UINT nFlags , CPoint point
>409	Parameter	 
>410	Identifier	point
>411	ParameterType	CPoint
>412	Parameter	 
>413	Identifier	nFlags
>414	ParameterType	UINT
>415	ReturnType	void
>416	CompoundStatement	 
>417	ExpressionStatement	 
>418	CallExpression	CStatic 
>419	ArgumentList	nFlags
>420	Argument	point
>421	Identifier	point
>422	Argument	nFlags
>423	Identifier	nFlags
>424	Callee	CStatic 
>425	Identifier	CStatic 
>426	IfStatement	if ( _bMouseInControl == false )
>427	ElseStatement	else
>428	CompoundStatement	 
>429	ExpressionStatement	 
>430	CallExpression	SetCursor ( ( InCaptionRange ( point ) ) ? _hHandCursor 
>431	ArgumentList	( InCaptionRange ( point ) ) ? _hHandCursor 
>432	Argument	( InCaptionRange ( point ) ) ? _hHandCursor 
>433	ConditionalExpression	( InCaptionRange ( point ) ) ? _hHandCursor 
>434	Identifier	_hArrowCursor
>435	Identifier	_hHandCursor
>436	Condition	InCaptionRange ( point )
>437	CallExpression	InCaptionRange ( point )
>438	ArgumentList	point
>439	Argument	point
>440	Identifier	point
>441	Callee	InCaptionRange
>442	Identifier	InCaptionRange
>443	Callee	SetCursor
>444	Identifier	SetCursor
>445	Statement	 
>446	IfStatement	if ( _bGetCaptionSize == false )
>447	CompoundStatement	 
>448	ExpressionStatement	 
>449	CallExpression	GetCaptionSize ( )
>450	ArgumentList	 
>451	Callee	GetCaptionSize
>452	Identifier	GetCaptionSize
>453	Condition	 
>454	EqualityExpression	_bGetCaptionSize == false
>455	Identifier	false
>456	Identifier	_bGetCaptionSize
>457	CompoundStatement	 
>458	ExpressionStatement	 
>459	AssignmentExpr	_bMouseInControl = true
>460	Identifier	true
>461	Identifier	_bMouseInControl
>462	ExpressionStatement	 
>463	CallExpression	_TrackMouseEvent ( & tme )
>464	ArgumentList	& tme
>465	Argument	& tme
>466	UnaryOp	& tme
>467	Identifier	tme
>468	UnaryOperator	&
>469	Callee	_TrackMouseEvent
>470	Identifier	_TrackMouseEvent
>471	ExpressionStatement	 
>472	AssignmentExpr	tme . dwFlags = TME_LEAVE
>473	Identifier	TME_LEAVE
>474	MemberAccess	tme . dwFlags
>475	Identifier	dwFlags
>476	Identifier	tme
>477	ExpressionStatement	 
>478	AssignmentExpr	tme . hwndTrack = GetSafeHwnd ( )
>479	CallExpression	GetSafeHwnd ( )
>480	ArgumentList	 
>481	Callee	GetSafeHwnd
>482	Identifier	GetSafeHwnd
>483	MemberAccess	tme . hwndTrack
>484	Identifier	hwndTrack
>485	Identifier	tme
>486	ExpressionStatement	 
>487	AssignmentExpr	tme . cbSize = sizeof ( tme )
>488	SizeofExpr	sizeof ( tme )
>489	SizeofOperand	tme
>490	Sizeof	sizeof
>491	MemberAccess	tme . cbSize
>492	Identifier	cbSize
>493	Identifier	tme
>494	IdentifierDeclStatement	 
>495	IdentifierDecl	tme
>496	Identifier	tme
>497	IdentifierDeclType	TRACKMOUSEEVENT
>498	Condition	 
>499	EqualityExpression	_bMouseInControl == false
>500	Identifier	false
>501	Identifier	_bMouseInControl
>521	FunctionDef	CHyperlinkStatic 
>522	ParameterList	 
>523	ReturnType	void
>524	CompoundStatement	 
>525	IfStatement	if ( pFontParent )
>526	CompoundStatement	 
>527	ExpressionStatement	 
>528	AssignmentExpr	_bCreateFont = true
>529	Identifier	true
>530	Identifier	_bCreateFont
>531	ExpressionStatement	 
>532	CallExpression	_fontCaption . CreateFontIndirect ( & lf )
>533	ArgumentList	& lf
>534	Argument	& lf
>535	UnaryOp	& lf
>536	Identifier	lf
>537	UnaryOperator	&
>538	Callee	_fontCaption . CreateFontIndirect
>539	MemberAccess	_fontCaption . CreateFontIndirect
>540	Identifier	CreateFontIndirect
>541	Identifier	_fontCaption
>542	ExpressionStatement	 
>543	AssignmentExpr	lf . lfUnderline = TRUE
>544	Identifier	TRUE
>545	MemberAccess	lf . lfUnderline
>546	Identifier	lfUnderline
>547	Identifier	lf
>548	ExpressionStatement	 
>549	CallExpression	pFontParent -> GetObject ( sizeof ( lf ) , & lf )
>550	ArgumentList	sizeof ( lf )
>551	Argument	& lf
>552	UnaryOp	& lf
>553	Identifier	lf
>554	UnaryOperator	&
>555	Argument	sizeof ( lf )
>556	SizeofExpr	sizeof ( lf )
>557	SizeofOperand	lf
>558	Sizeof	sizeof
>559	Callee	pFontParent -> GetObject
>560	PtrMemberAccess	pFontParent -> GetObject
>561	Identifier	GetObject
>562	Identifier	pFontParent
>563	IdentifierDeclStatement	 
>564	IdentifierDecl	lf
>565	Identifier	lf
>566	IdentifierDeclType	LOGFONT
>567	Condition	 
>568	Identifier	pFontParent
>569	IdentifierDeclStatement	 
>570	IdentifierDecl	* pFontParent = GetParent ( ) -> GetFont ( )
>571	AssignmentExpr	* pFontParent = GetParent ( ) -> GetFont ( )
>572	CallExpression	GetParent ( ) -> GetFont ( )
>573	ArgumentList	 
>574	Callee	GetParent ( ) -> GetFont
>575	PtrMemberAccess	GetParent ( ) -> GetFont
>576	Identifier	GetFont
>577	CallExpression	GetParent ( )
>578	ArgumentList	 
>579	Callee	GetParent
>580	Identifier	GetParent
>581	Identifier	pFontParent
>582	Identifier	pFontParent
>583	IdentifierDeclType	CFont *
>598	FunctionDef	CHyperlinkStatic 
>599	ParameterList	 
>600	ReturnType	void
>601	CompoundStatement	 
>602	IfStatement	if ( ! _bGetCaptionSize && _bCreateFont )
>603	CompoundStatement	 
>604	ExpressionStatement	 
>605	AssignmentExpr	_bGetCaptionSize = true
>606	Identifier	true
>607	Identifier	_bGetCaptionSize
>608	ExpressionStatement	 
>609	CallExpression	_captionRect . SetRect ( 0 , ( _rect . bottom - _rect . top - _sizeCaption . cy - 1 ) / 2 , _rect . right - _rect \
>610	ArgumentList	0
>611	Argument	( _rect . bottom - _rect . top - _sizeCaption . cy - 1 ) / 2 + _sizeCaption . cy
>612	AdditiveExpression	( _rect . bottom - _rect . top - _sizeCaption . cy - 1 ) / 2 + _sizeCaption . cy
>613	MemberAccess	_sizeCaption . cy
>614	Identifier	cy
>615	Identifier	_sizeCaption
>616	MultiplicativeExpression	( _rect . bottom - _rect . top - _sizeCaption . cy - 1 ) / 2
>617	PrimaryExpression	2
>618	AdditiveExpression	_rect . bottom - _rect . top - _sizeCaption . cy - 1
>619	AdditiveExpression	_rect . top - _sizeCaption . cy - 1
>620	AdditiveExpression	_sizeCaption . cy - 1
>621	PrimaryExpression	1
>622	MemberAccess	_sizeCaption . cy
>623	Identifier	cy
>624	Identifier	_sizeCaption
>625	MemberAccess	_rect . top
>626	Identifier	top
>627	Identifier	_rect
>628	MemberAccess	_rect . bottom
>629	Identifier	bottom
>630	Identifier	_rect
>631	Argument	_rect . right - _rect . left
>632	AdditiveExpression	_rect . right - _rect . left
>633	MemberAccess	_rect . left
>634	Identifier	left
>635	Identifier	_rect
>636	MemberAccess	_rect . right
>637	Identifier	right
>638	Identifier	_rect
>639	Argument	( _rect . bottom - _rect . top - _sizeCaption . cy - 1 ) / 2
>640	MultiplicativeExpression	( _rect . bottom - _rect . top - _sizeCaption . cy - 1 ) / 2
>641	PrimaryExpression	2
>642	AdditiveExpression	_rect . bottom - _rect . top - _sizeCaption . cy - 1
>643	AdditiveExpression	_rect . top - _sizeCaption . cy - 1
>644	AdditiveExpression	_sizeCaption . cy - 1
>645	PrimaryExpression	1
>646	MemberAccess	_sizeCaption . cy
>647	Identifier	cy
>648	Identifier	_sizeCaption
>649	MemberAccess	_rect . top
>650	Identifier	top
>651	Identifier	_rect
>652	MemberAccess	_rect . bottom
>653	Identifier	bottom
>654	Identifier	_rect
>655	Argument	0
>656	PrimaryExpression	0
>657	Callee	_captionRect . SetRect
>658	MemberAccess	_captionRect . SetRect
>659	Identifier	SetRect
>660	Identifier	_captionRect
>661	ExpressionStatement	 
>662	CallExpression	GetWindowRect ( & _rect )
>663	ArgumentList	& _rect
>664	Argument	& _rect
>665	UnaryOp	& _rect
>666	Identifier	_rect
>667	UnaryOperator	&
>668	Callee	GetWindowRect
>669	Identifier	GetWindowRect
>670	ExpressionStatement	 
>671	CallExpression	dc . SelectObject ( pOldFont )
>672	ArgumentList	pOldFont
>673	Argument	pOldFont
>674	Identifier	pOldFont
>675	Callee	dc . SelectObject
>676	MemberAccess	dc . SelectObject
>677	Identifier	SelectObject
>678	Identifier	dc
>679	ExpressionStatement	 
>680	AssignmentExpr	_sizeCaption = dc . GetTextExtent ( _strCaption )
>681	CallExpression	dc . GetTextExtent ( _strCaption )
>682	ArgumentList	_strCaption
>683	Argument	_strCaption
>684	Identifier	_strCaption
>685	Callee	dc . GetTextExtent
>686	MemberAccess	dc . GetTextExtent
>687	Identifier	GetTextExtent
>688	Identifier	dc
>689	Identifier	_sizeCaption
>690	IdentifierDeclStatement	 
>691	IdentifierDecl	* pOldFont = dc . SelectObject ( & _fontCaption )
>692	AssignmentExpr	* pOldFont = dc . SelectObject ( & _fontCaption )
>693	CallExpression	dc . SelectObject ( & _fontCaption )
>694	ArgumentList	& _fontCaption
>695	Argument	& _fontCaption
>696	UnaryOp	& _fontCaption
>697	Identifier	_fontCaption
>698	UnaryOperator	&
>699	Callee	dc . SelectObject
>700	MemberAccess	dc . SelectObject
>701	Identifier	SelectObject
>702	Identifier	dc
>703	Identifier	pOldFont
>704	Identifier	pOldFont
>705	IdentifierDeclType	CFont *
>706	IdentifierDeclStatement	 
>707	IdentifierDecl	dc ( this )
>708	Identifier	this
>709	Identifier	dc
>710	IdentifierDeclType	CClientDC
>711	Condition	 
>712	AndExpression	! _bGetCaptionSize && _bCreateFont
>713	Identifier	_bCreateFont
>714	UnaryOp	! _bGetCaptionSize
>715	Identifier	_bGetCaptionSize
>716	UnaryOperator	!
>738	FunctionDef	CHyperlinkStatic 
>739	ParameterList	CPoint & point
>740	Parameter	 
>741	Identifier	point
>742	ParameterType	CPoint &
>743	ReturnType	bool
>744	CompoundStatement	 
>745	ReturnStatement	 
>746	ConditionalExpression	_captionRect . PtInRect ( point ) ? true 
>747	Identifier	false
>748	Identifier	true
>749	Condition	_captionRect . PtInRect ( point )
>750	CallExpression	_captionRect . PtInRect ( point )
>751	ArgumentList	point
>752	Argument	point
>753	Identifier	point
>754	Callee	_captionRect . PtInRect
>755	MemberAccess	_captionRect . PtInRect
>756	Identifier	PtInRect
>757	Identifier	_captionRect
<3=5,4
<9=15,14,10
<10=11
<11=13,12
<15=16
<16=17
<17=24,18
<18=20,19
<20=21
<21=23,22
<31=37,36,32
<32=33
<33=35,34
<37=42,38
<38=39
<39=41,40
<42=43
<43=50,44
<44=46,45
<46=47
<47=49,48
<59=68,67,60
<60=64,61
<61=63,62
<64=66,65
<68=98,69
<69=97,70
<70=71
<71=72
<72=95,73
<73=78,74
<74=75
<75=77,76
<78=79
<79=81,80
<81=82
<82=84,83
<84=93,85
<85=86
<86=87
<87=89,88
<89=90
<90=92,91
<93=94
<95=96
<98=99
<99=129,109,100
<100=101
<101=107,102
<102=105,103
<103=104
<105=106
<107=108
<109=122,110
<110=111
<111=120,112
<112=113
<113=114
<114=116,115
<116=117
<117=119,118
<120=121
<122=123
<123=127,124
<124=125
<125=126
<127=128
<129=135,130
<130=131
<131=133,132
<133=134
<135=136
<136=138,137
<155=173,172,156
<156=169,166,163,160,157
<157=159,158
<160=162,161
<163=165,164
<166=168,167
<169=171,170
<173=203,183,176,174
<174=175
<176=177
<177=181,178
<178=179
<179=180
<181=182
<183=184
<184=202,201,185
<185=200,186
<186=198,187
<187=196,194,192,190,188
<188=189
<190=191
<192=193
<194=195
<196=197
<198=199
<203=204
<204=222,205
<205=218,214,210,206
<206=207
<207=209,208
<210=211
<211=213,212
<214=215
<215=217,216
<218=219
<219=221,220
<222=223
<223=225,224
<241=244,243,242
<244=332,327,309,300,282,271,254,245
<245=246
<246=250,247
<247=248
<248=249
<250=251
<251=253,252
<254=255
<255=267,256
<256=263,259,257
<257=258
<259=260
<260=262,261
<263=264
<264=266,265
<267=268
<268=270,269
<271=278,272
<272=273
<273=274
<274=276,275
<276=277
<278=279
<279=281,280
<282=283
<283=296,284
<284=285
<285=286
<286=294,287
<287=292,290,288
<288=289
<290=291
<292=293
<294=295
<296=297
<297=299,298
<300=301
<301=305,302
<302=303
<303=304
<305=306
<306=308,307
<309=310
<310=326,325,311
<311=324,312
<312=323,313
<313=319,314
<314=315
<315=316
<316=318,317
<319=320
<320=322,321
<327=328
<328=331,330,329
<332=339,333
<333=334
<334=335
<335=337,336
<337=338
<339=340
<340=342,341
<359=362,361,360
<362=370,363
<363=364
<364=366,365
<366=367
<367=369,368
<370=371
<371=373,372
<373=374
<379=382,381,380
<382=388,383
<383=384
<384=386,385
<386=387
<388=389
<389=399,390
<390=397,393,391
<391=392
<393=394
<394=396,395
<397=398
<399=400
<407=416,415,408
<408=412,409
<409=411,410
<412=414,413
<416=426,417
<417=418
<418=424,419
<419=422,420
<420=421
<422=423
<424=425
<426=498,457,427
<427=428
<428=446,445,429
<429=430
<430=443,431
<431=432
<432=433
<433=436,435,434
<436=437
<437=441,438
<438=439
<439=440
<441=442
<443=444
<446=453,447
<447=448
<448=449
<449=451,450
<451=452
<453=454
<454=456,455
<457=494,486,477,471,462,458
<458=459
<459=461,460
<462=463
<463=469,464
<464=465
<465=466
<466=468,467
<469=470
<471=472
<472=474,473
<474=476,475
<477=478
<478=483,479
<479=481,480
<481=482
<483=485,484
<486=487
<487=491,488
<488=490,489
<491=493,492
<494=495
<495=497,496
<498=499
<499=501,500
<521=524,523,522
<524=569,525
<525=567,526
<526=563,548,542,531,527
<527=528
<528=530,529
<531=532
<532=538,533
<533=534
<534=535
<535=537,536
<538=539
<539=541,540
<542=543
<543=545,544
<545=547,546
<548=549
<549=559,550
<550=555,551
<551=552
<552=554,553
<555=556
<556=558,557
<559=560
<560=562,561
<563=564
<564=566,565
<567=568
<569=570
<570=583,582,571
<571=581,572
<572=574,573
<574=575
<575=577,576
<577=579,578
<579=580
<598=601,600,599
<601=602
<602=711,603
<603=706,690,679,670,661,608,604
<604=605
<605=607,606
<608=609
<609=657,610
<610=655,639,631,611
<611=612
<612=616,613
<613=615,614
<616=618,617
<618=628,619
<619=625,620
<620=622,621
<622=624,623
<625=627,626
<628=630,629
<631=632
<632=636,633
<633=635,634
<636=638,637
<639=640
<640=642,641
<642=652,643
<643=649,644
<644=646,645
<646=648,647
<649=651,650
<652=654,653
<655=656
<657=658
<658=660,659
<661=662
<662=668,663
<663=664
<664=665
<665=667,666
<668=669
<670=671
<671=675,672
<672=673
<673=674
<675=676
<676=678,677
<679=680
<680=689,681
<681=685,682
<682=683
<683=684
<685=686
<686=688,687
<690=691
<691=705,704,692
<692=703,693
<693=699,694
<694=695
<695=696
<696=698,697
<699=700
<700=702,701
<706=707
<707=710,709,708
<711=712
<712=714,713
<714=716,715
<738=744,743,739
<739=740
<740=742,741
<744=745
<745=746
<746=749,748,747
<749=750
<750=754,751
<751=752
<752=753
<754=755
<755=757,756
