>3	FunctionDef	main (long argc , char * * argv)
>4	ParameterList	long argc , char * * argv
>5	Parameter	 
>6	Identifier	argv
>7	ParameterType	char * *
>8	Parameter	 
>9	Identifier	argc
>10	ParameterType	long
>11	ReturnType	long
>12	CompoundStatement	 
>13	ExpressionStatement	 
>14	Identifier	prD
>15	Statement	 
>16	Statement	 
>17	Statement	 
>18	ExpressionStatement	 
>19	CallExpression	lasso2 ( X , D , spa , 10 , 0.15 )
>20	ArgumentList	X
>21	Argument	0.15
>22	PrimaryExpression	0.15
>23	Argument	10
>24	PrimaryExpression	10
>25	Argument	spa
>26	Identifier	spa
>27	Argument	D
>28	Identifier	D
>29	Argument	X
>30	Identifier	X
>31	Callee	lasso2
>32	Identifier	lasso2
>33	IdentifierDeclStatement	 
>34	IdentifierDecl	spa
>35	Identifier	spa
>36	IdentifierDeclType	SpMatrix < double >
>37	ExpressionStatement	 
>38	CallExpression	X . setAleat ( )
>39	ArgumentList	 
>40	Callee	X . setAleat
>41	MemberAccess	X . setAleat
>42	Identifier	setAleat
>43	Identifier	X
>44	IdentifierDeclStatement	 
>45	IdentifierDecl	X ( m , n )
>46	Expression	m , n
>47	Identifier	n
>48	Identifier	m
>49	Identifier	X
>50	IdentifierDeclType	Matrix < double >
>51	IdentifierDeclStatement	 
>52	IdentifierDecl	n = 100
>53	AssignmentExpr	n = 100
>54	PrimaryExpression	100
>55	Identifier	n
>56	Identifier	n
>57	IdentifierDeclType	long
>58	ExpressionStatement	 
>59	CallExpression	D2 . normalize ( )
>60	ArgumentList	 
>61	Callee	D2 . normalize
>62	MemberAccess	D2 . normalize
>63	Identifier	normalize
>64	Identifier	D2
>65	ExpressionStatement	 
>66	CallExpression	D2 . setAleat ( )
>67	ArgumentList	 
>68	Callee	D2 . setAleat
>69	MemberAccess	D2 . setAleat
>70	Identifier	setAleat
>71	Identifier	D2
>72	IdentifierDeclStatement	 
>73	IdentifierDecl	D2 ( m , p )
>74	Expression	m , p
>75	Identifier	p
>76	Identifier	m
>77	Identifier	D2
>78	IdentifierDeclType	Matrix < double >
>79	ExpressionStatement	 
>80	CallExpression	D . normalize ( )
>81	ArgumentList	 
>82	Callee	D . normalize
>83	MemberAccess	D . normalize
>84	Identifier	normalize
>85	Identifier	D
>86	ExpressionStatement	 
>87	CallExpression	D . setAleat ( )
>88	ArgumentList	 
>89	Callee	D . setAleat
>90	MemberAccess	D . setAleat
>91	Identifier	setAleat
>92	Identifier	D
>93	IdentifierDeclStatement	 
>94	IdentifierDecl	D ( prD , m , p )
>95	Expression	prD , m , p
>96	Expression	m , p
>97	Identifier	p
>98	Identifier	m
>99	Identifier	prD
>100	Identifier	D
>101	IdentifierDeclType	Matrix < double >
>102	IdentifierDeclStatement	 
>103	IdentifierDecl	* prD = new double [ m * p ]
>104	AssignmentExpr	* prD = new double [ m * p ]
>105	MultiplicativeExpression	m * p
>106	Identifier	p
>107	Identifier	m
>108	Identifier	prD
>109	Identifier	prD
>110	IdentifierDeclType	double *
>111	IdentifierDeclStatement	 
>112	IdentifierDecl	p = 20
>113	AssignmentExpr	p = 20
>114	PrimaryExpression	20
>115	Identifier	p
>116	Identifier	p
>117	IdentifierDeclType	long
>118	IdentifierDeclStatement	 
>119	IdentifierDecl	m = 10
>120	AssignmentExpr	m = 10
>121	PrimaryExpression	10
>122	Identifier	m
>123	Identifier	m
>124	IdentifierDeclType	long
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=118,111,102,93,86,79,72,65,58,51,44,37,33,18,17,16,15,13
<13=14
<18=19
<19=31,20
<20=29,27,25,23,21
<21=22
<23=24
<25=26
<27=28
<29=30
<31=32
<33=34
<34=36,35
<37=38
<38=40,39
<40=41
<41=43,42
<44=45
<45=50,49,46
<46=48,47
<51=52
<52=57,56,53
<53=55,54
<58=59
<59=61,60
<61=62
<62=64,63
<65=66
<66=68,67
<68=69
<69=71,70
<72=73
<73=78,77,74
<74=76,75
<79=80
<80=82,81
<82=83
<83=85,84
<86=87
<87=89,88
<89=90
<90=92,91
<93=94
<94=101,100,95
<95=99,96
<96=98,97
<102=103
<103=110,109,104
<104=108,105
<105=107,106
<111=112
<112=117,116,113
<113=115,114
<118=119
<119=124,123,120
<120=122,121
