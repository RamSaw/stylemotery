>5	FunctionDef	StepManagerTest ()
>6	ParameterList	 
>7	CompoundStatement	 
>21	FunctionDef	getUniqueMatchIdOrZeroFor (const string & stepMatch)
>22	ParameterList	const string & stepMatch
>23	Parameter	 
>24	Identifier	stepMatch
>25	ParameterType	const string &
>26	ReturnType	int
>27	CompoundStatement	 
>28	IfStatement	if ( resultSet . size ( ) != 1 )
>29	ElseStatement	else
>30	CompoundStatement	 
>31	ReturnStatement	 
>32	PtrMemberAccess	resultSet . begin ( ) -> stepInfo -> id
>33	Identifier	id
>34	PtrMemberAccess	resultSet . begin ( ) -> stepInfo
>35	Identifier	stepInfo
>36	CallExpression	resultSet . begin ( )
>37	ArgumentList	 
>38	Callee	resultSet . begin
>39	MemberAccess	resultSet . begin
>40	Identifier	begin
>41	Identifier	resultSet
>42	CompoundStatement	 
>43	ReturnStatement	 
>44	PrimaryExpression	0
>45	Condition	 
>46	EqualityExpression	resultSet . size ( ) != 1
>47	PrimaryExpression	1
>48	CallExpression	resultSet . size ( )
>49	ArgumentList	 
>50	Callee	resultSet . size
>51	MemberAccess	resultSet . size
>52	Identifier	size
>53	Identifier	resultSet
>54	IdentifierDeclStatement	 
>55	IdentifierDecl	resultSet = getResultSetFor ( stepMatch )
>56	AssignmentExpr	resultSet = getResultSetFor ( stepMatch )
>57	CallExpression	getResultSetFor ( stepMatch )
>58	ArgumentList	stepMatch
>59	Argument	stepMatch
>60	Identifier	stepMatch
>61	Callee	getResultSetFor
>62	Identifier	getResultSetFor
>63	Identifier	resultSet
>64	Identifier	resultSet
>65	IdentifierDeclType	MatchResult 
>81	FunctionDef	countMatches (const string & stepMatch)
>82	ParameterList	const string & stepMatch
>83	Parameter	 
>84	Identifier	stepMatch
>85	ParameterType	const string &
>86	ReturnType	int
>87	CompoundStatement	 
>88	ReturnStatement	 
>89	CallExpression	getResultSetFor ( stepMatch ) . size ( )
>90	ArgumentList	 
>91	Callee	getResultSetFor ( stepMatch ) . size
>92	MemberAccess	getResultSetFor ( stepMatch ) . size
>93	Identifier	size
>94	CallExpression	getResultSetFor ( stepMatch )
>95	ArgumentList	stepMatch
>96	Argument	stepMatch
>97	Identifier	stepMatch
>98	Callee	getResultSetFor
>99	Identifier	getResultSetFor
>106	FunctionDef	matchesOnce (const string & stepMatch)
>107	ParameterList	const string & stepMatch
>108	Parameter	 
>109	Identifier	stepMatch
>110	ParameterType	const string &
>111	ReturnType	bool
>112	CompoundStatement	 
>113	ReturnStatement	 
>114	EqualityExpression	countMatches ( stepMatch ) == 1
>115	PrimaryExpression	1
>116	CallExpression	countMatches ( stepMatch )
>117	ArgumentList	stepMatch
>118	Argument	stepMatch
>119	Identifier	stepMatch
>120	Callee	countMatches
>121	Identifier	countMatches
>127	FunctionDef	matchesAtLeastOnce (const string & stepMatch)
>128	ParameterList	const string & stepMatch
>129	Parameter	 
>130	Identifier	stepMatch
>131	ParameterType	const string &
>132	ReturnType	bool
>133	CompoundStatement	 
>134	ReturnStatement	 
>135	RelationalExpression	countMatches ( stepMatch ) > 0
>136	PrimaryExpression	0
>137	CallExpression	countMatches ( stepMatch )
>138	ArgumentList	stepMatch
>139	Argument	stepMatch
>140	Identifier	stepMatch
>141	Callee	countMatches
>142	Identifier	countMatches
>148	FunctionDef	extractedParamsAre (const string stepMatch , map < int , string > params)
>149	ParameterList	const string stepMatch , map < int , string > params
>150	Parameter	 
>151	Identifier	params
>152	ParameterType	map < int , string >
>153	Parameter	 
>154	Identifier	stepMatch
>155	ParameterType	const string
>156	ReturnType	bool
>157	CompoundStatement	 
>158	ReturnStatement	 
>159	Identifier	true
>160	ForStatement	for ( rsi = match . submatches . begin ( ) ; rsi != match . submatches . end ( ) ; ++ rsi )
>161	CompoundStatement	 
>162	IfStatement	if ( rsi -> value != params [ rsi -> position ] )
>163	CompoundStatement	 
>164	ReturnStatement	 
>165	Identifier	false
>166	Condition	 
>167	EqualityExpression	rsi -> value != params [ rsi -> position ]
>168	ArrayIndexing	params [ rsi -> position ]
>169	PtrMemberAccess	rsi -> position
>170	Identifier	position
>171	Identifier	rsi
>172	Identifier	params
>173	PtrMemberAccess	rsi -> value
>174	Identifier	value
>175	Identifier	rsi
>176	IfStatement	if ( params . find ( rsi -> position ) == params . end ( ) )
>177	ReturnStatement	 
>178	Identifier	false
>179	Condition	 
>180	EqualityExpression	params . find ( rsi -> position ) == params . end ( )
>181	CallExpression	params . end ( )
>182	ArgumentList	 
>183	Callee	params . end
>184	MemberAccess	params . end
>185	Identifier	end
>186	Identifier	params
>187	CallExpression	params . find ( rsi -> position )
>188	ArgumentList	rsi -> position
>189	Argument	rsi -> position
>190	PtrMemberAccess	rsi -> position
>191	Identifier	position
>192	Identifier	rsi
>193	Callee	params . find
>194	MemberAccess	params . find
>195	Identifier	find
>196	Identifier	params
>197	UnaryExpression	 
>198	Identifier	rsi
>199	IncDec	++
>200	Condition	 
>201	EqualityExpression	rsi != match . submatches . end ( )
>202	CallExpression	match . submatches . end ( )
>203	ArgumentList	 
>204	Callee	match . submatches . end
>205	MemberAccess	match . submatches . end
>206	Identifier	end
>207	MemberAccess	match . submatches
>208	Identifier	submatches
>209	Identifier	match
>210	Identifier	rsi
>211	ForInit	 
>212	AssignmentExpr	rsi = match . submatches . begin ( )
>213	CallExpression	match . submatches . begin ( )
>214	ArgumentList	 
>215	Callee	match . submatches . begin
>216	MemberAccess	match . submatches . begin
>217	Identifier	begin
>218	MemberAccess	match . submatches
>219	Identifier	submatches
>220	Identifier	match
>221	Identifier	rsi
>222	IdentifierDeclStatement	 
>223	IdentifierDecl	rsi
>224	Identifier	rsi
>225	IdentifierDeclType	SingleStepMatch 
>226	IfStatement	if ( params . size ( ) != match . submatches . size ( ) )
>227	CompoundStatement	 
>228	ReturnStatement	 
>229	Identifier	false
>230	Condition	 
>231	EqualityExpression	params . size ( ) != match . submatches . size ( )
>232	CallExpression	match . submatches . size ( )
>233	ArgumentList	 
>234	Callee	match . submatches . size
>235	MemberAccess	match . submatches . size
>236	Identifier	size
>237	MemberAccess	match . submatches
>238	Identifier	submatches
>239	Identifier	match
>240	CallExpression	params . size ( )
>241	ArgumentList	 
>242	Callee	params . size
>243	MemberAccess	params . size
>244	Identifier	size
>245	Identifier	params
>246	IdentifierDeclStatement	 
>247	IdentifierDecl	match = resultSet . front ( )
>248	AssignmentExpr	match = resultSet . front ( )
>249	CallExpression	resultSet . front ( )
>250	ArgumentList	 
>251	Callee	resultSet . front
>252	MemberAccess	resultSet . front
>253	Identifier	front
>254	Identifier	resultSet
>255	Identifier	match
>256	Identifier	match
>257	IdentifierDeclType	SingleStepMatch
>258	IfStatement	if ( resultSet . size ( ) != 1 )
>259	CompoundStatement	 
>260	ReturnStatement	 
>261	Identifier	false
>262	Condition	 
>263	EqualityExpression	resultSet . size ( ) != 1
>264	PrimaryExpression	1
>265	CallExpression	resultSet . size ( )
>266	ArgumentList	 
>267	Callee	resultSet . size
>268	MemberAccess	resultSet . size
>269	Identifier	size
>270	Identifier	resultSet
>271	IdentifierDeclStatement	 
>272	IdentifierDecl	resultSet = getResultSetFor ( stepMatch )
>273	AssignmentExpr	resultSet = getResultSetFor ( stepMatch )
>274	CallExpression	getResultSetFor ( stepMatch )
>275	ArgumentList	stepMatch
>276	Argument	stepMatch
>277	Identifier	stepMatch
>278	Callee	getResultSetFor
>279	Identifier	getResultSetFor
>280	Identifier	resultSet
>281	Identifier	resultSet
>282	IdentifierDeclType	MatchResult 
>309	FunctionDef	getResultSetFor (const string & stepMatch)
>310	ParameterList	const string & stepMatch
>311	Parameter	 
>312	Identifier	stepMatch
>313	ParameterType	const string &
>314	ReturnType	MatchResult 
>315	CompoundStatement	 
>316	ReturnStatement	 
>317	CallExpression	stepManager . stepMatches ( stepMatch ) . getResultSet ( )
>318	ArgumentList	 
>319	Callee	stepManager . stepMatches ( stepMatch ) . getResultSet
>320	MemberAccess	stepManager . stepMatches ( stepMatch ) . getResultSet
>321	Identifier	getResultSet
>322	CallExpression	stepManager . stepMatches ( stepMatch )
>323	ArgumentList	stepMatch
>324	Argument	stepMatch
>325	Identifier	stepMatch
>326	Callee	stepManager . stepMatches
>327	MemberAccess	stepManager . stepMatches
>328	Identifier	stepMatches
>329	Identifier	stepManager
>337	FunctionDef	TearDown ()
>338	ParameterList	 
>339	ReturnType	void
>340	CompoundStatement	 
>341	ExpressionStatement	 
>342	CallExpression	stepManager . clearSteps ( )
>343	ArgumentList	 
>344	Callee	stepManager . clearSteps
>345	MemberAccess	stepManager . clearSteps
>346	Identifier	clearSteps
>347	Identifier	stepManager
<5=7,6
<21=27,26,22
<22=23
<23=25,24
<27=54,28
<28=45,42,29
<29=30
<30=31
<31=32
<32=34,33
<34=36,35
<36=38,37
<38=39
<39=41,40
<42=43
<43=44
<45=46
<46=48,47
<48=50,49
<50=51
<51=53,52
<54=55
<55=65,64,56
<56=63,57
<57=61,58
<58=59
<59=60
<61=62
<81=87,86,82
<82=83
<83=85,84
<87=88
<88=89
<89=91,90
<91=92
<92=94,93
<94=98,95
<95=96
<96=97
<98=99
<106=112,111,107
<107=108
<108=110,109
<112=113
<113=114
<114=116,115
<116=120,117
<117=118
<118=119
<120=121
<127=133,132,128
<128=129
<129=131,130
<133=134
<134=135
<135=137,136
<137=141,138
<138=139
<139=140
<141=142
<148=157,156,149
<149=153,150
<150=152,151
<153=155,154
<157=271,258,246,226,222,160,158
<158=159
<160=211,200,197,161
<161=176,162
<162=166,163
<163=164
<164=165
<166=167
<167=173,168
<168=172,169
<169=171,170
<173=175,174
<176=179,177
<177=178
<179=180
<180=187,181
<181=183,182
<183=184
<184=186,185
<187=193,188
<188=189
<189=190
<190=192,191
<193=194
<194=196,195
<197=199,198
<200=201
<201=210,202
<202=204,203
<204=205
<205=207,206
<207=209,208
<211=212
<212=221,213
<213=215,214
<215=216
<216=218,217
<218=220,219
<222=223
<223=225,224
<226=230,227
<227=228
<228=229
<230=231
<231=240,232
<232=234,233
<234=235
<235=237,236
<237=239,238
<240=242,241
<242=243
<243=245,244
<246=247
<247=257,256,248
<248=255,249
<249=251,250
<251=252
<252=254,253
<258=262,259
<259=260
<260=261
<262=263
<263=265,264
<265=267,266
<267=268
<268=270,269
<271=272
<272=282,281,273
<273=280,274
<274=278,275
<275=276
<276=277
<278=279
<309=315,314,310
<310=311
<311=313,312
<315=316
<316=317
<317=319,318
<319=320
<320=322,321
<322=326,323
<323=324
<324=325
<326=327
<327=329,328
<337=340,339,338
<340=341
<341=342
<342=344,343
<344=345
<345=347,346
