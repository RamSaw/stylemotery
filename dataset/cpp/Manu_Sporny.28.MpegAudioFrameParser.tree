>3	FunctionDef	MpegAudioFrameParser 
>4	ParameterList	 
>5	CompoundStatement	 
>6	ExpressionStatement	 
>7	AssignmentExpr	mLastOffset = - 1
>8	UnaryOp	- 1
>9	PrimaryExpression	1
>10	UnaryOperator	-
>11	Identifier	mLastOffset
>12	ExpressionStatement	 
>13	AssignmentExpr	mLastHeader = NULL
>14	Identifier	NULL
>15	Identifier	mLastHeader
>22	FunctionDef	MpegAudioFrameParser 
>23	ParameterList	 
>24	CompoundStatement	 
>25	IfStatement	if ( mLastHeader != NULL )
>26	CompoundStatement	 
>27	ExpressionStatement	 
>28	Identifier	mLastHeader
>29	Statement	 
>30	Condition	 
>31	EqualityExpression	mLastHeader != NULL
>32	Identifier	NULL
>33	Identifier	mLastHeader
>39	FunctionDef	MpegAudioFrameParser 
>40	ParameterList	 
>41	ReturnType	void
>42	CompoundStatement	 
>43	IfStatement	if ( mLastHeader != NULL )
>44	CompoundStatement	 
>45	ExpressionStatement	 
>46	AssignmentExpr	mLastOffset = - 1
>47	UnaryOp	- 1
>48	PrimaryExpression	1
>49	UnaryOperator	-
>50	Identifier	mLastOffset
>51	ExpressionStatement	 
>52	AssignmentExpr	mLastHeader = NULL
>53	Identifier	NULL
>54	Identifier	mLastHeader
>55	ExpressionStatement	 
>56	Identifier	mLastHeader
>57	Statement	 
>58	Condition	 
>59	EqualityExpression	mLastHeader != NULL
>60	Identifier	NULL
>61	Identifier	mLastHeader
>68	FunctionDef	MpegAudioFrameParser 
>69	ParameterList	const char * b , int length
>70	Parameter	 
>71	Identifier	length
>72	ParameterType	int
>73	Parameter	 
>74	Identifier	b
>75	ParameterType	const char *
>76	ReturnType	int
>77	CompoundStatement	 
>78	ReturnStatement	 
>79	Identifier	rval
>80	IfStatement	if ( header -> convertFromBytes ( b , length ) )
>81	ElseStatement	else
>82	CompoundStatement	 
>83	ExpressionStatement	 
>84	Identifier	header
>85	Statement	 
>86	CompoundStatement	 
>87	IfStatement	if ( length < frameLength )
>88	CompoundStatement	 
>89	ExpressionStatement	 
>90	AssignmentExpr	rval = frameLength - length
>91	AdditiveExpression	frameLength - length
>92	Identifier	length
>93	Identifier	frameLength
>94	Identifier	rval
>95	Condition	 
>96	RelationalExpression	length < frameLength
>97	Identifier	frameLength
>98	Identifier	length
>99	IdentifierDeclStatement	 
>100	IdentifierDecl	frameLength = header -> getFrameLength ( )
>101	AssignmentExpr	frameLength = header -> getFrameLength ( )
>102	CallExpression	header -> getFrameLength ( )
>103	ArgumentList	 
>104	Callee	header -> getFrameLength
>105	PtrMemberAccess	header -> getFrameLength
>106	Identifier	getFrameLength
>107	Identifier	header
>108	Identifier	frameLength
>109	Identifier	frameLength
>110	IdentifierDeclType	int
>111	ExpressionStatement	 
>112	AssignmentExpr	mLastHeader = header
>113	Identifier	header
>114	Identifier	mLastHeader
>115	Condition	 
>116	CallExpression	header -> convertFromBytes ( b , length )
>117	ArgumentList	b
>118	Argument	length
>119	Identifier	length
>120	Argument	b
>121	Identifier	b
>122	Callee	header -> convertFromBytes
>123	PtrMemberAccess	header -> convertFromBytes
>124	Identifier	convertFromBytes
>125	Identifier	header
>126	IdentifierDeclStatement	 
>127	IdentifierDecl	* header = new AudioFrameHeader ( )
>128	AssignmentExpr	* header = new AudioFrameHeader ( )
>129	UnaryExpression	new AudioFrameHeader ( )
>130	Identifier	header
>131	Identifier	header
>132	IdentifierDeclType	AudioFrameHeader *
>133	IdentifierDeclStatement	 
>134	IdentifierDecl	rval = 0
>135	AssignmentExpr	rval = 0
>136	PrimaryExpression	0
>137	Identifier	rval
>138	Identifier	rval
>139	IdentifierDeclType	int
>152	FunctionDef	MpegAudioFrameParser 
>153	ParameterList	const char * b , int length
>154	Parameter	 
>155	Identifier	length
>156	ParameterType	int
>157	Parameter	 
>158	Identifier	b
>159	ParameterType	const char *
>160	ReturnType	int
>161	CompoundStatement	 
>162	ReturnStatement	 
>163	Identifier	rval
>164	IfStatement	if ( length < 4 )
>165	ElseStatement	else
>166	CompoundStatement	 
>167	ForStatement	for ( int offset = 0 ; offset < end ; ++ offset )
>168	CompoundStatement	 
>169	IfStatement	if ( ub [ offset + 1 ] > 0xdf )
>170	ElseStatement	else
>171	CompoundStatement	 
>172	ExpressionStatement	 
>173	UnaryExpression	++ offset
>174	Identifier	offset
>175	IncDec	++
>176	CompoundStatement	 
>177	IfStatement	if ( ub [ offset ] == 0xff )
>178	CompoundStatement	 
>179	BreakStatement	 
>180	IfStatement	if ( mLastHeader != NULL )
>181	CompoundStatement	 
>182	ExpressionStatement	 
>183	AssignmentExpr	mLastOffset = offset
>184	Identifier	offset
>185	Identifier	mLastOffset
>186	Condition	 
>187	EqualityExpression	mLastHeader != NULL
>188	Identifier	NULL
>189	Identifier	mLastHeader
>190	ExpressionStatement	 
>191	AssignmentExpr	rval = parseFrame ( b + offset , end - offset + 1 )
>192	CallExpression	parseFrame ( b + offset , end - offset + 1 )
>193	ArgumentList	b + offset
>194	Argument	end - offset + 1
>195	AdditiveExpression	end - offset + 1
>196	AdditiveExpression	offset + 1
>197	PrimaryExpression	1
>198	Identifier	offset
>199	Identifier	end
>200	Argument	b + offset
>201	AdditiveExpression	b + offset
>202	Identifier	offset
>203	Identifier	b
>204	Callee	parseFrame
>205	Identifier	parseFrame
>206	Identifier	rval
>207	Condition	 
>208	EqualityExpression	ub [ offset ] == 0xff
>209	PrimaryExpression	0xff
>210	ArrayIndexing	ub [ offset ]
>211	Identifier	offset
>212	Identifier	ub
>213	Condition	 
>214	RelationalExpression	ub [ offset + 1 ] > 0xdf
>215	PrimaryExpression	0xdf
>216	ArrayIndexing	ub [ offset + 1 ]
>217	AdditiveExpression	offset + 1
>218	PrimaryExpression	1
>219	Identifier	offset
>220	Identifier	ub
>221	UnaryExpression	 
>222	Identifier	offset
>223	IncDec	++
>224	Condition	 
>225	RelationalExpression	offset < end
>226	Identifier	end
>227	Identifier	offset
>228	ForInit	 
>229	IdentifierDeclStatement	int offset = 0 ;
>230	IdentifierDecl	offset = 0
>231	AssignmentExpr	offset = 0
>232	PrimaryExpression	0
>233	Identifier	offset
>234	Identifier	offset
>235	IdentifierDeclType	int
>236	IdentifierDeclStatement	 
>237	IdentifierDecl	end = length - 1
>238	AssignmentExpr	end = length - 1
>239	AdditiveExpression	length - 1
>240	PrimaryExpression	1
>241	Identifier	length
>242	Identifier	end
>243	Identifier	end
>244	IdentifierDeclType	int
>245	IdentifierDeclStatement	 
>246	IdentifierDecl	* ub = ( const unsigned char * ) b
>247	AssignmentExpr	* ub = ( const unsigned char * ) b
>248	CastExpression	( const unsigned char * ) b
>249	Identifier	b
>250	CastTarget	const unsigned char *
>251	Identifier	ub
>252	Identifier	ub
>253	IdentifierDeclType	const unsigned char *
>254	CompoundStatement	 
>255	ExpressionStatement	 
>256	AssignmentExpr	rval = 4 - length
>257	AdditiveExpression	4 - length
>258	Identifier	length
>259	PrimaryExpression	4
>260	Identifier	rval
>261	Condition	 
>262	RelationalExpression	length < 4
>263	PrimaryExpression	4
>264	Identifier	length
>265	ExpressionStatement	 
>266	CallExpression	reset ( )
>267	ArgumentList	 
>268	Callee	reset
>269	Identifier	reset
>270	IdentifierDeclStatement	 
>271	IdentifierDecl	rval = 0
>272	AssignmentExpr	rval = 0
>273	PrimaryExpression	0
>274	Identifier	rval
>275	Identifier	rval
>276	IdentifierDeclType	int
>292	FunctionDef	MpegAudioFrameParser 
>293	ParameterList	 
>294	ReturnType	AudioFrameHeader *
>295	CompoundStatement	 
>296	ReturnStatement	 
>297	Identifier	mLastHeader
>302	FunctionDef	MpegAudioFrameParser 
>303	ParameterList	 
>304	ReturnType	int
>305	CompoundStatement	 
>306	ReturnStatement	 
>307	Identifier	mLastOffset
<3=5,4
<5=12,6
<6=7
<7=11,8
<8=10,9
<12=13
<13=15,14
<22=24,23
<24=25
<25=30,26
<26=29,27
<27=28
<30=31
<31=33,32
<39=42,41,40
<42=43
<43=58,44
<44=57,55,51,45
<45=46
<46=50,47
<47=49,48
<51=52
<52=54,53
<55=56
<58=59
<59=61,60
<68=77,76,69
<69=73,70
<70=72,71
<73=75,74
<77=133,126,80,78
<78=79
<80=115,86,81
<81=82
<82=85,83
<83=84
<86=111,99,87
<87=95,88
<88=89
<89=90
<90=94,91
<91=93,92
<95=96
<96=98,97
<99=100
<100=110,109,101
<101=108,102
<102=104,103
<104=105
<105=107,106
<111=112
<112=114,113
<115=116
<116=122,117
<117=120,118
<118=119
<120=121
<122=123
<123=125,124
<126=127
<127=132,131,128
<128=130,129
<133=134
<134=139,138,135
<135=137,136
<152=161,160,153
<153=157,154
<154=156,155
<157=159,158
<161=270,265,164,162
<162=163
<164=261,254,165
<165=166
<166=245,236,167
<167=228,224,221,168
<168=169
<169=213,176,170
<170=171
<171=172
<172=173
<173=175,174
<176=177
<177=207,178
<178=190,180,179
<180=186,181
<181=182
<182=183
<183=185,184
<186=187
<187=189,188
<190=191
<191=206,192
<192=204,193
<193=200,194
<194=195
<195=199,196
<196=198,197
<200=201
<201=203,202
<204=205
<207=208
<208=210,209
<210=212,211
<213=214
<214=216,215
<216=220,217
<217=219,218
<221=223,222
<224=225
<225=227,226
<228=229
<229=230
<230=235,234,231
<231=233,232
<236=237
<237=244,243,238
<238=242,239
<239=241,240
<245=246
<246=253,252,247
<247=251,248
<248=250,249
<254=255
<255=256
<256=260,257
<257=259,258
<261=262
<262=264,263
<265=266
<266=268,267
<268=269
<270=271
<271=276,275,272
<272=274,273
<292=295,294,293
<295=296
<296=297
<302=305,304,303
<305=306
<306=307
