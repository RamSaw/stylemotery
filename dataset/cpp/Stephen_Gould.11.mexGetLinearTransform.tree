>3	FunctionDef	usage ()
>4	ParameterList	 
>5	ReturnType	void
>6	CompoundStatement	 
>7	ExpressionStatement	 
>8	CallExpression	mexPrintf ( \"\n\" )
>9	ArgumentList	\"\n\"
>10	Argument	\"\n\"
>11	PrimaryExpression	\"\n\"
>12	Callee	mexPrintf
>13	Identifier	mexPrintf
>14	ExpressionStatement	 
>15	CallExpression	drwnMatlabUtils 
>16	ArgumentList	 
>17	Callee	drwnMatlabUtils 
>18	Identifier	drwnMatlabUtils 
>19	ExpressionStatement	 
>20	CallExpression	mexPrintf ( \"OPTIONS
>21	ArgumentList	\"OPTIONS
>22	Argument	\"OPTIONS
>23	PrimaryExpression	\"OPTIONS
>24	Callee	mexPrintf
>25	Identifier	mexPrintf
>26	ExpressionStatement	 
>27	CallExpression	mexPrintf ( \"USAGE
>28	ArgumentList	\"USAGE
>29	Argument	\"USAGE
>30	PrimaryExpression	\"USAGE
>31	Callee	mexPrintf
>32	Identifier	mexPrintf
>33	ExpressionStatement	 
>34	CallExpression	mexPrintf ( \"\n\" )
>35	ArgumentList	\"\n\"
>36	Argument	\"\n\"
>37	PrimaryExpression	\"\n\"
>38	Callee	mexPrintf
>39	Identifier	mexPrintf
>40	ExpressionStatement	 
>41	CallExpression	mexPrintf ( DRWN_USAGE_HEADER )
>42	ArgumentList	DRWN_USAGE_HEADER
>43	Argument	DRWN_USAGE_HEADER
>44	Identifier	DRWN_USAGE_HEADER
>45	Callee	mexPrintf
>46	Identifier	mexPrintf
>51	FunctionDef	mexFunction (int nlhs , mxArray * plhs [ ] , int nrhs , const mxArray * prhs [ ])
>52	ParameterList	int nlhs , mxArray * plhs [ ] , int nrhs , const mxArray * prhs [ ]
>53	Parameter	 
>54	Identifier	prhs
>55	ParameterType	const mxArray * [ ]
>56	Parameter	 
>57	Identifier	nrhs
>58	ParameterType	int
>59	Parameter	 
>60	Identifier	plhs
>61	ParameterType	mxArray * [ ]
>62	Parameter	 
>63	Identifier	nlhs
>64	ParameterType	int
>65	ReturnType	void
>66	CompoundStatement	 
>67	ExpressionStatement	 
>68	CallExpression	drwnCodeProfiler 
>69	ArgumentList	 
>70	Callee	drwnCodeProfiler 
>71	Identifier	drwnCodeProfiler 
>72	ExpressionStatement	 
>73	CallExpression	drwnCodeProfiler 
>74	ArgumentList	drwnCodeProfiler 
>75	Argument	drwnCodeProfiler 
>76	CallExpression	drwnCodeProfiler 
>77	ArgumentList	\"mex\"
>78	Argument	\"mex\"
>79	PrimaryExpression	\"mex\"
>80	Callee	drwnCodeProfiler 
>81	Identifier	drwnCodeProfiler 
>82	Callee	drwnCodeProfiler 
>83	Identifier	drwnCodeProfiler 
>84	ExpressionStatement	 
>85	CallExpression	mxFree ( xmlFilename )
>86	ArgumentList	xmlFilename
>87	Argument	xmlFilename
>88	Identifier	xmlFilename
>89	Callee	mxFree
>90	Identifier	mxFree
>91	IfStatement	if ( nlhs >= 2 )
>92	CompoundStatement	 
>93	ForStatement	for ( int col = 0 ; col < xform . numInputs ( ) ; col ++ )
>94	CompoundStatement	 
>95	ForStatement	for ( int row = 0 ; row < xform . numOutputs ( ) ; row ++ )
>96	CompoundStatement	 
>97	ExpressionStatement	 
>98	AssignmentExpr	* p ++ = xform . projection ( ) ( row , col )
>99	CallExpression	xform . projection ( ) ( row , col )
>100	ArgumentList	row
>101	Argument	col
>102	Identifier	col
>103	Argument	row
>104	Identifier	row
>105	Callee	xform . projection ( )
>106	CallExpression	xform . projection ( )
>107	ArgumentList	 
>108	Callee	xform . projection
>109	MemberAccess	xform . projection
>110	Identifier	projection
>111	Identifier	xform
>112	UnaryOp	* p ++
>113	IncDecOp	p ++
>114	IncDec	++
>115	Identifier	p
>116	UnaryOperator	*
>117	IncDecOp	 
>118	IncDec	++
>119	Identifier	row
>120	Condition	 
>121	RelationalExpression	row < xform . numOutputs ( )
>122	CallExpression	xform . numOutputs ( )
>123	ArgumentList	 
>124	Callee	xform . numOutputs
>125	MemberAccess	xform . numOutputs
>126	Identifier	numOutputs
>127	Identifier	xform
>128	Identifier	row
>129	ForInit	 
>130	IdentifierDeclStatement	int row = 0 ;
>131	IdentifierDecl	row = 0
>132	AssignmentExpr	row = 0
>133	PrimaryExpression	0
>134	Identifier	row
>135	Identifier	row
>136	IdentifierDeclType	int
>137	IncDecOp	 
>138	IncDec	++
>139	Identifier	col
>140	Condition	 
>141	RelationalExpression	col < xform . numInputs ( )
>142	CallExpression	xform . numInputs ( )
>143	ArgumentList	 
>144	Callee	xform . numInputs
>145	MemberAccess	xform . numInputs
>146	Identifier	numInputs
>147	Identifier	xform
>148	Identifier	col
>149	ForInit	 
>150	IdentifierDeclStatement	int col = 0 ;
>151	IdentifierDecl	col = 0
>152	AssignmentExpr	col = 0
>153	PrimaryExpression	0
>154	Identifier	col
>155	Identifier	col
>156	IdentifierDeclType	int
>157	IdentifierDeclStatement	 
>158	IdentifierDecl	* p = mxGetPr ( plhs [ 1 ] )
>159	AssignmentExpr	* p = mxGetPr ( plhs [ 1 ] )
>160	CallExpression	mxGetPr ( plhs [ 1 ] )
>161	ArgumentList	plhs [ 1 ]
>162	Argument	plhs [ 1 ]
>163	ArrayIndexing	plhs [ 1 ]
>164	PrimaryExpression	1
>165	Identifier	plhs
>166	Callee	mxGetPr
>167	Identifier	mxGetPr
>168	Identifier	p
>169	Identifier	p
>170	IdentifierDeclType	double *
>171	ExpressionStatement	 
>172	AssignmentExpr	plhs [ 1 ] = mxCreateDoubleMatrix ( xform . numOutputs ( ) , xform . numInputs ( ) , mxREAL )
>173	CallExpression	mxCreateDoubleMatrix ( xform . numOutputs ( ) , xform . numInputs ( ) , mxREAL )
>174	ArgumentList	xform . numOutputs ( )
>175	Argument	mxREAL
>176	Identifier	mxREAL
>177	Argument	xform . numInputs ( )
>178	CallExpression	xform . numInputs ( )
>179	ArgumentList	 
>180	Callee	xform . numInputs
>181	MemberAccess	xform . numInputs
>182	Identifier	numInputs
>183	Identifier	xform
>184	Argument	xform . numOutputs ( )
>185	CallExpression	xform . numOutputs ( )
>186	ArgumentList	 
>187	Callee	xform . numOutputs
>188	MemberAccess	xform . numOutputs
>189	Identifier	numOutputs
>190	Identifier	xform
>191	Callee	mxCreateDoubleMatrix
>192	Identifier	mxCreateDoubleMatrix
>193	ArrayIndexing	plhs [ 1 ]
>194	PrimaryExpression	1
>195	Identifier	plhs
>196	Condition	 
>197	RelationalExpression	nlhs >= 2
>198	PrimaryExpression	2
>199	Identifier	nlhs
>200	IfStatement	if ( nlhs >= 1 )
>201	CompoundStatement	 
>202	ForStatement	for ( int row = 0 ; row < xform . numInputs ( ) ; row ++ )
>203	CompoundStatement	 
>204	ExpressionStatement	 
>205	AssignmentExpr	* p ++ = xform . translation ( ) ( row )
>206	CallExpression	xform . translation ( ) ( row )
>207	ArgumentList	row
>208	Argument	row
>209	Identifier	row
>210	Callee	xform . translation ( )
>211	CallExpression	xform . translation ( )
>212	ArgumentList	 
>213	Callee	xform . translation
>214	MemberAccess	xform . translation
>215	Identifier	translation
>216	Identifier	xform
>217	UnaryOp	* p ++
>218	IncDecOp	p ++
>219	IncDec	++
>220	Identifier	p
>221	UnaryOperator	*
>222	IncDecOp	 
>223	IncDec	++
>224	Identifier	row
>225	Condition	 
>226	RelationalExpression	row < xform . numInputs ( )
>227	CallExpression	xform . numInputs ( )
>228	ArgumentList	 
>229	Callee	xform . numInputs
>230	MemberAccess	xform . numInputs
>231	Identifier	numInputs
>232	Identifier	xform
>233	Identifier	row
>234	ForInit	 
>235	IdentifierDeclStatement	int row = 0 ;
>236	IdentifierDecl	row = 0
>237	AssignmentExpr	row = 0
>238	PrimaryExpression	0
>239	Identifier	row
>240	Identifier	row
>241	IdentifierDeclType	int
>242	IdentifierDeclStatement	 
>243	IdentifierDecl	* p = mxGetPr ( plhs [ 0 ] )
>244	AssignmentExpr	* p = mxGetPr ( plhs [ 0 ] )
>245	CallExpression	mxGetPr ( plhs [ 0 ] )
>246	ArgumentList	plhs [ 0 ]
>247	Argument	plhs [ 0 ]
>248	ArrayIndexing	plhs [ 0 ]
>249	PrimaryExpression	0
>250	Identifier	plhs
>251	Callee	mxGetPr
>252	Identifier	mxGetPr
>253	Identifier	p
>254	Identifier	p
>255	IdentifierDeclType	double *
>256	ExpressionStatement	 
>257	AssignmentExpr	plhs [ 0 ] = mxCreateDoubleMatrix ( xform . numInputs ( ) , 1 , mxREAL )
>258	CallExpression	mxCreateDoubleMatrix ( xform . numInputs ( ) , 1 , mxREAL )
>259	ArgumentList	xform . numInputs ( )
>260	Argument	mxREAL
>261	Identifier	mxREAL
>262	Argument	1
>263	PrimaryExpression	1
>264	Argument	xform . numInputs ( )
>265	CallExpression	xform . numInputs ( )
>266	ArgumentList	 
>267	Callee	xform . numInputs
>268	MemberAccess	xform . numInputs
>269	Identifier	numInputs
>270	Identifier	xform
>271	Callee	mxCreateDoubleMatrix
>272	Identifier	mxCreateDoubleMatrix
>273	ArrayIndexing	plhs [ 0 ]
>274	PrimaryExpression	0
>275	Identifier	plhs
>276	Condition	 
>277	RelationalExpression	nlhs >= 1
>278	PrimaryExpression	1
>279	Identifier	nlhs
>280	ExpressionStatement	 
>281	CallExpression	xform . read ( xmlFilename )
>282	ArgumentList	xmlFilename
>283	Argument	xmlFilename
>284	Identifier	xmlFilename
>285	Callee	xform . read
>286	MemberAccess	xform . read
>287	Identifier	read
>288	Identifier	xform
>289	IdentifierDeclStatement	 
>290	IdentifierDecl	xform
>291	Identifier	xform
>292	IdentifierDeclType	drwnLinearTransform
>293	ExpressionStatement	 
>294	CallExpression	DRWN_LOG_VERBOSE ( \"Loading transform from \" << xmlFilename << \"...\" )
>295	ArgumentList	\"Loading transform from \" << xmlFilename << \"...\"
>296	Argument	\"Loading transform from \" << xmlFilename << \"...\"
>297	ShiftExpression	\"Loading transform from \" << xmlFilename << \"...\"
>298	ShiftExpression	xmlFilename << \"...\"
>299	PrimaryExpression	\"...\"
>300	Identifier	xmlFilename
>301	PrimaryExpression	\"Loading transform from \"
>302	Callee	DRWN_LOG_VERBOSE
>303	Identifier	DRWN_LOG_VERBOSE
>304	IdentifierDeclStatement	 
>305	IdentifierDecl	* xmlFilename = mxArrayToString ( prhs [ 0 ] )
>306	AssignmentExpr	* xmlFilename = mxArrayToString ( prhs [ 0 ] )
>307	CallExpression	mxArrayToString ( prhs [ 0 ] )
>308	ArgumentList	prhs [ 0 ]
>309	Argument	prhs [ 0 ]
>310	ArrayIndexing	prhs [ 0 ]
>311	PrimaryExpression	0
>312	Identifier	prhs
>313	Callee	mxArrayToString
>314	Identifier	mxArrayToString
>315	Identifier	xmlFilename
>316	Identifier	xmlFilename
>317	IdentifierDeclType	char *
>318	ExpressionStatement	 
>319	CallExpression	drwnCodeProfiler 
>320	ArgumentList	drwnCodeProfiler 
>321	Argument	drwnCodeProfiler 
>322	CallExpression	drwnCodeProfiler 
>323	ArgumentList	\"mex\"
>324	Argument	\"mex\"
>325	PrimaryExpression	\"mex\"
>326	Callee	drwnCodeProfiler 
>327	Identifier	drwnCodeProfiler 
>328	Callee	drwnCodeProfiler 
>329	Identifier	drwnCodeProfiler 
>330	ExpressionStatement	 
>331	CallExpression	drwnMatlabUtils 
>332	ArgumentList	options
>333	Argument	options
>334	Identifier	options
>335	Callee	drwnMatlabUtils 
>336	Identifier	drwnMatlabUtils 
>337	IfStatement	if ( nrhs == 2 )
>338	CompoundStatement	 
>339	ExpressionStatement	 
>340	CallExpression	drwnMatlabUtils 
>341	ArgumentList	prhs [ 1 ]
>342	Argument	options
>343	Identifier	options
>344	Argument	prhs [ 1 ]
>345	ArrayIndexing	prhs [ 1 ]
>346	PrimaryExpression	1
>347	Identifier	prhs
>348	Callee	drwnMatlabUtils 
>349	Identifier	drwnMatlabUtils 
>350	Condition	 
>351	EqualityExpression	nrhs == 2
>352	PrimaryExpression	2
>353	Identifier	nrhs
>354	ExpressionStatement	 
>355	CallExpression	drwnMatlabUtils 
>356	ArgumentList	options
>357	Argument	options
>358	Identifier	options
>359	Callee	drwnMatlabUtils 
>360	Identifier	drwnMatlabUtils 
>361	IdentifierDeclStatement	 
>362	IdentifierDecl	options
>363	Identifier	options
>364	IdentifierDeclType	map < string , string >
>365	IfStatement	if ( ( nrhs != 1 ) && ( nrhs != 2 ) )
>366	CompoundStatement	 
>367	ReturnStatement	 
>368	ExpressionStatement	 
>369	CallExpression	usage ( )
>370	ArgumentList	 
>371	Callee	usage
>372	Identifier	usage
>373	Condition	 
>374	AndExpression	( nrhs != 1 ) && ( nrhs != 2 )
>375	EqualityExpression	nrhs != 2
>376	PrimaryExpression	2
>377	Identifier	nrhs
>378	EqualityExpression	nrhs != 1
>379	PrimaryExpression	1
>380	Identifier	nrhs
>381	ExpressionStatement	 
>382	CallExpression	drwnMatlabUtils 
>383	ArgumentList	 
>384	Callee	drwnMatlabUtils 
>385	Identifier	drwnMatlabUtils 
<3=6,5,4
<6=40,33,26,19,14,7
<7=8
<8=12,9
<9=10
<10=11
<12=13
<14=15
<15=17,16
<17=18
<19=20
<20=24,21
<21=22
<22=23
<24=25
<26=27
<27=31,28
<28=29
<29=30
<31=32
<33=34
<34=38,35
<35=36
<36=37
<38=39
<40=41
<41=45,42
<42=43
<43=44
<45=46
<51=66,65,52
<52=62,59,56,53
<53=55,54
<56=58,57
<59=61,60
<62=64,63
<66=381,365,361,354,337,330,318,304,293,289,280,200,91,84,72,67
<67=68
<68=70,69
<70=71
<72=73
<73=82,74
<74=75
<75=76
<76=80,77
<77=78
<78=79
<80=81
<82=83
<84=85
<85=89,86
<86=87
<87=88
<89=90
<91=196,92
<92=171,157,93
<93=149,140,137,94
<94=95
<95=129,120,117,96
<96=97
<97=98
<98=112,99
<99=105,100
<100=103,101
<101=102
<103=104
<105=106
<106=108,107
<108=109
<109=111,110
<112=116,113
<113=115,114
<117=119,118
<120=121
<121=128,122
<122=124,123
<124=125
<125=127,126
<129=130
<130=131
<131=136,135,132
<132=134,133
<137=139,138
<140=141
<141=148,142
<142=144,143
<144=145
<145=147,146
<149=150
<150=151
<151=156,155,152
<152=154,153
<157=158
<158=170,169,159
<159=168,160
<160=166,161
<161=162
<162=163
<163=165,164
<166=167
<171=172
<172=193,173
<173=191,174
<174=184,177,175
<175=176
<177=178
<178=180,179
<180=181
<181=183,182
<184=185
<185=187,186
<187=188
<188=190,189
<191=192
<193=195,194
<196=197
<197=199,198
<200=276,201
<201=256,242,202
<202=234,225,222,203
<203=204
<204=205
<205=217,206
<206=210,207
<207=208
<208=209
<210=211
<211=213,212
<213=214
<214=216,215
<217=221,218
<218=220,219
<222=224,223
<225=226
<226=233,227
<227=229,228
<229=230
<230=232,231
<234=235
<235=236
<236=241,240,237
<237=239,238
<242=243
<243=255,254,244
<244=253,245
<245=251,246
<246=247
<247=248
<248=250,249
<251=252
<256=257
<257=273,258
<258=271,259
<259=264,262,260
<260=261
<262=263
<264=265
<265=267,266
<267=268
<268=270,269
<271=272
<273=275,274
<276=277
<277=279,278
<280=281
<281=285,282
<282=283
<283=284
<285=286
<286=288,287
<289=290
<290=292,291
<293=294
<294=302,295
<295=296
<296=297
<297=301,298
<298=300,299
<302=303
<304=305
<305=317,316,306
<306=315,307
<307=313,308
<308=309
<309=310
<310=312,311
<313=314
<318=319
<319=328,320
<320=321
<321=322
<322=326,323
<323=324
<324=325
<326=327
<328=329
<330=331
<331=335,332
<332=333
<333=334
<335=336
<337=350,338
<338=339
<339=340
<340=348,341
<341=344,342
<342=343
<344=345
<345=347,346
<348=349
<350=351
<351=353,352
<354=355
<355=359,356
<356=357
<357=358
<359=360
<361=362
<362=364,363
<365=373,366
<366=368,367
<368=369
<369=371,370
<371=372
<373=374
<374=378,375
<375=377,376
<378=380,379
<381=382
<382=384,383
<384=385
