>9	FunctionDef	SignalHandler 
>10	ParameterList	int unused
>11	Parameter	 
>12	Identifier	unused
>13	ParameterType	int
>14	ReturnType	void
>15	CompoundStatement	 
>16	ExpressionStatement	 
>17	CallExpression	write ( sighupFd [ 0 ] , & a , sizeof ( a ) )
>18	ArgumentList	sighupFd [ 0 ]
>19	Argument	sizeof ( a )
>20	SizeofExpr	sizeof ( a )
>21	SizeofOperand	a
>22	Sizeof	sizeof
>23	Argument	& a
>24	UnaryOp	& a
>25	Identifier	a
>26	UnaryOperator	&
>27	Argument	sighupFd [ 0 ]
>28	ArrayIndexing	sighupFd [ 0 ]
>29	PrimaryExpression	0
>30	Identifier	sighupFd
>31	Callee	write
>32	Identifier	write
>33	Statement	 
>34	Statement	 
>35	Statement	 
>36	Statement	 
>37	IdentifierDeclStatement	 
>38	IdentifierDecl	a = 1
>39	AssignmentExpr	a = 1
>40	PrimaryExpression	1
>41	Identifier	a
>42	Identifier	a
>43	IdentifierDeclType	char
>44	IfStatement	if ( sighupFd [ 0 ] < 0 )
>45	ReturnStatement	 
>46	Condition	 
>47	RelationalExpression	sighupFd [ 0 ] < 0
>48	PrimaryExpression	0
>49	ArrayIndexing	sighupFd [ 0 ]
>50	PrimaryExpression	0
>51	Identifier	sighupFd
>52	Statement	 
>53	Statement	 
>54	Statement	 
>55	Statement	 
>64	FunctionDef	SignalHandler 
>65	ParameterList	int unused
>66	Parameter	 
>67	Identifier	unused
>68	ParameterType	int
>69	ReturnType	void
>70	CompoundStatement	 
>71	ExpressionStatement	 
>72	CallExpression	write ( sigtermFd [ 0 ] , & a , sizeof ( a ) )
>73	ArgumentList	sigtermFd [ 0 ]
>74	Argument	sizeof ( a )
>75	SizeofExpr	sizeof ( a )
>76	SizeofOperand	a
>77	Sizeof	sizeof
>78	Argument	& a
>79	UnaryOp	& a
>80	Identifier	a
>81	UnaryOperator	&
>82	Argument	sigtermFd [ 0 ]
>83	ArrayIndexing	sigtermFd [ 0 ]
>84	PrimaryExpression	0
>85	Identifier	sigtermFd
>86	Callee	write
>87	Identifier	write
>88	Statement	 
>89	Statement	 
>90	Statement	 
>91	Statement	 
>92	IdentifierDeclStatement	 
>93	IdentifierDecl	a = 1
>94	AssignmentExpr	a = 1
>95	PrimaryExpression	1
>96	Identifier	a
>97	Identifier	a
>98	IdentifierDeclType	char
>99	IfStatement	if ( sigtermFd [ 0 ] < 0 )
>100	ReturnStatement	 
>101	Condition	 
>102	RelationalExpression	sigtermFd [ 0 ] < 0
>103	PrimaryExpression	0
>104	ArrayIndexing	sigtermFd [ 0 ]
>105	PrimaryExpression	0
>106	Identifier	sigtermFd
>107	Statement	 
>108	Statement	 
>109	Statement	 
>110	Statement	 
>119	FunctionDef	SignalHandler 
>120	ParameterList	int unused
>121	Parameter	 
>122	Identifier	unused
>123	ParameterType	int
>124	ReturnType	void
>125	CompoundStatement	 
>126	ExpressionStatement	 
>127	CallExpression	write ( sigintFd [ 0 ] , & a , sizeof ( a ) )
>128	ArgumentList	sigintFd [ 0 ]
>129	Argument	sizeof ( a )
>130	SizeofExpr	sizeof ( a )
>131	SizeofOperand	a
>132	Sizeof	sizeof
>133	Argument	& a
>134	UnaryOp	& a
>135	Identifier	a
>136	UnaryOperator	&
>137	Argument	sigintFd [ 0 ]
>138	ArrayIndexing	sigintFd [ 0 ]
>139	PrimaryExpression	0
>140	Identifier	sigintFd
>141	Callee	write
>142	Identifier	write
>143	Statement	 
>144	Statement	 
>145	Statement	 
>146	Statement	 
>147	IdentifierDeclStatement	 
>148	IdentifierDecl	a = 1
>149	AssignmentExpr	a = 1
>150	PrimaryExpression	1
>151	Identifier	a
>152	Identifier	a
>153	IdentifierDeclType	char
>154	IfStatement	if ( sigintFd [ 0 ] < 0 )
>155	ReturnStatement	 
>156	Condition	 
>157	RelationalExpression	sigintFd [ 0 ] < 0
>158	PrimaryExpression	0
>159	ArrayIndexing	sigintFd [ 0 ]
>160	PrimaryExpression	0
>161	Identifier	sigintFd
>162	Statement	 
>163	Statement	 
>164	Statement	 
>165	Statement	 
>174	FunctionDef	SignalHandler 
>175	ParameterList	QObject * parent
>176	Parameter	 
>177	Identifier	parent
>178	ParameterType	QObject *
>179	CompoundStatement	 
>180	ExpressionStatement	 
>181	CallExpression	connect ( snInt , SIGNAL ( activated ( int ) ) , this , SIGNAL ( sigQuitApp ( ) ) )
>182	ArgumentList	snInt
>183	Argument	SIGNAL ( sigQuitApp ( ) )
>184	CallExpression	SIGNAL ( sigQuitApp ( ) )
>185	ArgumentList	sigQuitApp ( )
>186	Argument	sigQuitApp ( )
>187	CallExpression	sigQuitApp ( )
>188	ArgumentList	 
>189	Callee	sigQuitApp
>190	Identifier	sigQuitApp
>191	Callee	SIGNAL
>192	Identifier	SIGNAL
>193	Argument	this
>194	Identifier	this
>195	Argument	SIGNAL ( activated ( int ) )
>196	CallExpression	SIGNAL ( activated ( int ) )
>197	ArgumentList	activated ( int )
>198	Argument	activated ( int )
>199	CallExpression	activated ( int )
>200	ArgumentList	int
>201	Argument	int
>202	Identifier	int
>203	Callee	activated
>204	Identifier	activated
>205	Callee	SIGNAL
>206	Identifier	SIGNAL
>207	Argument	snInt
>208	Identifier	snInt
>209	Callee	connect
>210	Identifier	connect
>211	ExpressionStatement	 
>212	CallExpression	connect ( snInt , SIGNAL ( activated ( int ) ) , this , SIGNAL ( sigInt ( ) ) )
>213	ArgumentList	snInt
>214	Argument	SIGNAL ( sigInt ( ) )
>215	CallExpression	SIGNAL ( sigInt ( ) )
>216	ArgumentList	sigInt ( )
>217	Argument	sigInt ( )
>218	CallExpression	sigInt ( )
>219	ArgumentList	 
>220	Callee	sigInt
>221	Identifier	sigInt
>222	Callee	SIGNAL
>223	Identifier	SIGNAL
>224	Argument	this
>225	Identifier	this
>226	Argument	SIGNAL ( activated ( int ) )
>227	CallExpression	SIGNAL ( activated ( int ) )
>228	ArgumentList	activated ( int )
>229	Argument	activated ( int )
>230	CallExpression	activated ( int )
>231	ArgumentList	int
>232	Argument	int
>233	Identifier	int
>234	Callee	activated
>235	Identifier	activated
>236	Callee	SIGNAL
>237	Identifier	SIGNAL
>238	Argument	snInt
>239	Identifier	snInt
>240	Callee	connect
>241	Identifier	connect
>242	ExpressionStatement	 
>243	CallExpression	connect ( snInt , SIGNAL ( activated ( int ) ) , this , SLOT ( readInt ( ) ) )
>244	ArgumentList	snInt
>245	Argument	SLOT ( readInt ( ) )
>246	CallExpression	SLOT ( readInt ( ) )
>247	ArgumentList	readInt ( )
>248	Argument	readInt ( )
>249	CallExpression	readInt ( )
>250	ArgumentList	 
>251	Callee	readInt
>252	Identifier	readInt
>253	Callee	SLOT
>254	Identifier	SLOT
>255	Argument	this
>256	Identifier	this
>257	Argument	SIGNAL ( activated ( int ) )
>258	CallExpression	SIGNAL ( activated ( int ) )
>259	ArgumentList	activated ( int )
>260	Argument	activated ( int )
>261	CallExpression	activated ( int )
>262	ArgumentList	int
>263	Argument	int
>264	Identifier	int
>265	Callee	activated
>266	Identifier	activated
>267	Callee	SIGNAL
>268	Identifier	SIGNAL
>269	Argument	snInt
>270	Identifier	snInt
>271	Callee	connect
>272	Identifier	connect
>273	ExpressionStatement	 
>274	CallExpression	connect ( snTerm , SIGNAL ( activated ( int ) ) , this , SIGNAL ( sigQuitApp ( ) ) )
>275	ArgumentList	snTerm
>276	Argument	SIGNAL ( sigQuitApp ( ) )
>277	CallExpression	SIGNAL ( sigQuitApp ( ) )
>278	ArgumentList	sigQuitApp ( )
>279	Argument	sigQuitApp ( )
>280	CallExpression	sigQuitApp ( )
>281	ArgumentList	 
>282	Callee	sigQuitApp
>283	Identifier	sigQuitApp
>284	Callee	SIGNAL
>285	Identifier	SIGNAL
>286	Argument	this
>287	Identifier	this
>288	Argument	SIGNAL ( activated ( int ) )
>289	CallExpression	SIGNAL ( activated ( int ) )
>290	ArgumentList	activated ( int )
>291	Argument	activated ( int )
>292	CallExpression	activated ( int )
>293	ArgumentList	int
>294	Argument	int
>295	Identifier	int
>296	Callee	activated
>297	Identifier	activated
>298	Callee	SIGNAL
>299	Identifier	SIGNAL
>300	Argument	snTerm
>301	Identifier	snTerm
>302	Callee	connect
>303	Identifier	connect
>304	ExpressionStatement	 
>305	CallExpression	connect ( snTerm , SIGNAL ( activated ( int ) ) , this , SIGNAL ( sigTerm ( ) ) )
>306	ArgumentList	snTerm
>307	Argument	SIGNAL ( sigTerm ( ) )
>308	CallExpression	SIGNAL ( sigTerm ( ) )
>309	ArgumentList	sigTerm ( )
>310	Argument	sigTerm ( )
>311	CallExpression	sigTerm ( )
>312	ArgumentList	 
>313	Callee	sigTerm
>314	Identifier	sigTerm
>315	Callee	SIGNAL
>316	Identifier	SIGNAL
>317	Argument	this
>318	Identifier	this
>319	Argument	SIGNAL ( activated ( int ) )
>320	CallExpression	SIGNAL ( activated ( int ) )
>321	ArgumentList	activated ( int )
>322	Argument	activated ( int )
>323	CallExpression	activated ( int )
>324	ArgumentList	int
>325	Argument	int
>326	Identifier	int
>327	Callee	activated
>328	Identifier	activated
>329	Callee	SIGNAL
>330	Identifier	SIGNAL
>331	Argument	snTerm
>332	Identifier	snTerm
>333	Callee	connect
>334	Identifier	connect
>335	ExpressionStatement	 
>336	CallExpression	connect ( snTerm , SIGNAL ( activated ( int ) ) , this , SLOT ( readTerm ( ) ) )
>337	ArgumentList	snTerm
>338	Argument	SLOT ( readTerm ( ) )
>339	CallExpression	SLOT ( readTerm ( ) )
>340	ArgumentList	readTerm ( )
>341	Argument	readTerm ( )
>342	CallExpression	readTerm ( )
>343	ArgumentList	 
>344	Callee	readTerm
>345	Identifier	readTerm
>346	Callee	SLOT
>347	Identifier	SLOT
>348	Argument	this
>349	Identifier	this
>350	Argument	SIGNAL ( activated ( int ) )
>351	CallExpression	SIGNAL ( activated ( int ) )
>352	ArgumentList	activated ( int )
>353	Argument	activated ( int )
>354	CallExpression	activated ( int )
>355	ArgumentList	int
>356	Argument	int
>357	Identifier	int
>358	Callee	activated
>359	Identifier	activated
>360	Callee	SIGNAL
>361	Identifier	SIGNAL
>362	Argument	snTerm
>363	Identifier	snTerm
>364	Callee	connect
>365	Identifier	connect
>366	ExpressionStatement	 
>367	CallExpression	connect ( snHup , SIGNAL ( activated ( int ) ) , this , SIGNAL ( sigQuitApp ( ) ) )
>368	ArgumentList	snHup
>369	Argument	SIGNAL ( sigQuitApp ( ) )
>370	CallExpression	SIGNAL ( sigQuitApp ( ) )
>371	ArgumentList	sigQuitApp ( )
>372	Argument	sigQuitApp ( )
>373	CallExpression	sigQuitApp ( )
>374	ArgumentList	 
>375	Callee	sigQuitApp
>376	Identifier	sigQuitApp
>377	Callee	SIGNAL
>378	Identifier	SIGNAL
>379	Argument	this
>380	Identifier	this
>381	Argument	SIGNAL ( activated ( int ) )
>382	CallExpression	SIGNAL ( activated ( int ) )
>383	ArgumentList	activated ( int )
>384	Argument	activated ( int )
>385	CallExpression	activated ( int )
>386	ArgumentList	int
>387	Argument	int
>388	Identifier	int
>389	Callee	activated
>390	Identifier	activated
>391	Callee	SIGNAL
>392	Identifier	SIGNAL
>393	Argument	snHup
>394	Identifier	snHup
>395	Callee	connect
>396	Identifier	connect
>397	ExpressionStatement	 
>398	CallExpression	connect ( snHup , SIGNAL ( activated ( int ) ) , this , SIGNAL ( sigHup ( ) ) )
>399	ArgumentList	snHup
>400	Argument	SIGNAL ( sigHup ( ) )
>401	CallExpression	SIGNAL ( sigHup ( ) )
>402	ArgumentList	sigHup ( )
>403	Argument	sigHup ( )
>404	CallExpression	sigHup ( )
>405	ArgumentList	 
>406	Callee	sigHup
>407	Identifier	sigHup
>408	Callee	SIGNAL
>409	Identifier	SIGNAL
>410	Argument	this
>411	Identifier	this
>412	Argument	SIGNAL ( activated ( int ) )
>413	CallExpression	SIGNAL ( activated ( int ) )
>414	ArgumentList	activated ( int )
>415	Argument	activated ( int )
>416	CallExpression	activated ( int )
>417	ArgumentList	int
>418	Argument	int
>419	Identifier	int
>420	Callee	activated
>421	Identifier	activated
>422	Callee	SIGNAL
>423	Identifier	SIGNAL
>424	Argument	snHup
>425	Identifier	snHup
>426	Callee	connect
>427	Identifier	connect
>428	ExpressionStatement	 
>429	CallExpression	connect ( snHup , SIGNAL ( activated ( int ) ) , this , SLOT ( readHup ( ) ) )
>430	ArgumentList	snHup
>431	Argument	SLOT ( readHup ( ) )
>432	CallExpression	SLOT ( readHup ( ) )
>433	ArgumentList	readHup ( )
>434	Argument	readHup ( )
>435	CallExpression	readHup ( )
>436	ArgumentList	 
>437	Callee	readHup
>438	Identifier	readHup
>439	Callee	SLOT
>440	Identifier	SLOT
>441	Argument	this
>442	Identifier	this
>443	Argument	SIGNAL ( activated ( int ) )
>444	CallExpression	SIGNAL ( activated ( int ) )
>445	ArgumentList	activated ( int )
>446	Argument	activated ( int )
>447	CallExpression	activated ( int )
>448	ArgumentList	int
>449	Argument	int
>450	Identifier	int
>451	Callee	activated
>452	Identifier	activated
>453	Callee	SIGNAL
>454	Identifier	SIGNAL
>455	Argument	snHup
>456	Identifier	snHup
>457	Callee	connect
>458	Identifier	connect
>459	ExpressionStatement	 
>460	AssignmentExpr	snInt = new QSocketNotifier ( sigintFd [ 1 ] , QSocketNotifier 
>461	Expression	sigintFd [ 1 ] , QSocketNotifier 
>462	Expression	QSocketNotifier 
>463	Identifier	this
>464	Identifier	QSocketNotifier 
>465	ArrayIndexing	sigintFd [ 1 ]
>466	PrimaryExpression	1
>467	Identifier	sigintFd
>468	Identifier	snInt
>469	ExpressionStatement	 
>470	AssignmentExpr	snTerm = new QSocketNotifier ( sigtermFd [ 1 ] , QSocketNotifier 
>471	Expression	sigtermFd [ 1 ] , QSocketNotifier 
>472	Expression	QSocketNotifier 
>473	Identifier	this
>474	Identifier	QSocketNotifier 
>475	ArrayIndexing	sigtermFd [ 1 ]
>476	PrimaryExpression	1
>477	Identifier	sigtermFd
>478	Identifier	snTerm
>479	ExpressionStatement	 
>480	AssignmentExpr	snHup = new QSocketNotifier ( sighupFd [ 1 ] , QSocketNotifier 
>481	Expression	sighupFd [ 1 ] , QSocketNotifier 
>482	Expression	QSocketNotifier 
>483	Identifier	this
>484	Identifier	QSocketNotifier 
>485	ArrayIndexing	sighupFd [ 1 ]
>486	PrimaryExpression	1
>487	Identifier	sighupFd
>488	Identifier	snHup
>489	IfStatement	if ( sigintFd [ 1 ] < 0 && ! setup ( ) )
>490	CompoundStatement	 
>491	ReturnStatement	 
>492	ExpressionStatement	 
>493	CallExpression	qCritical ( \"Failed setting up signal handler\" )
>494	ArgumentList	\"Failed setting up signal handler\"
>495	Argument	\"Failed setting up signal handler\"
>496	PrimaryExpression	\"Failed setting up signal handler\"
>497	Callee	qCritical
>498	Identifier	qCritical
>499	Condition	 
>500	AndExpression	sigintFd [ 1 ] < 0 && ! setup ( )
>501	UnaryOp	! setup ( )
>502	CallExpression	setup ( )
>503	ArgumentList	 
>504	Callee	setup
>505	Identifier	setup
>506	UnaryOperator	!
>507	RelationalExpression	sigintFd [ 1 ] < 0
>508	PrimaryExpression	0
>509	ArrayIndexing	sigintFd [ 1 ]
>510	PrimaryExpression	1
>511	Identifier	sigintFd
>539	FunctionDef	SignalHandler 
>540	ParameterList	 
>541	CompoundStatement	 
>545	FunctionDef	SignalHandler 
>546	ParameterList	 
>547	ReturnType	bool
>548	CompoundStatement	 
>549	ReturnStatement	 
>550	Identifier	false
>551	ExpressionStatement	 
>552	AssignmentExpr	sigintFd [ 1 ] = - 1
>553	UnaryOp	- 1
>554	PrimaryExpression	1
>555	UnaryOperator	-
>556	ArrayIndexing	sigintFd [ 1 ]
>557	PrimaryExpression	1
>558	Identifier	sigintFd
>559	ExpressionStatement	 
>560	AssignmentExpr	sigintFd [ 0 ] = - 1
>561	UnaryOp	- 1
>562	PrimaryExpression	1
>563	UnaryOperator	-
>564	ArrayIndexing	sigintFd [ 0 ]
>565	PrimaryExpression	0
>566	Identifier	sigintFd
>567	ExpressionStatement	 
>568	AssignmentExpr	sigtermFd [ 1 ] = - 1
>569	UnaryOp	- 1
>570	PrimaryExpression	1
>571	UnaryOperator	-
>572	ArrayIndexing	sigtermFd [ 1 ]
>573	PrimaryExpression	1
>574	Identifier	sigtermFd
>575	ExpressionStatement	 
>576	AssignmentExpr	sigtermFd [ 0 ] = - 1
>577	UnaryOp	- 1
>578	PrimaryExpression	1
>579	UnaryOperator	-
>580	ArrayIndexing	sigtermFd [ 0 ]
>581	PrimaryExpression	0
>582	Identifier	sigtermFd
>583	ExpressionStatement	 
>584	AssignmentExpr	sighupFd [ 1 ] = - 1
>585	UnaryOp	- 1
>586	PrimaryExpression	1
>587	UnaryOperator	-
>588	ArrayIndexing	sighupFd [ 1 ]
>589	PrimaryExpression	1
>590	Identifier	sighupFd
>591	ExpressionStatement	 
>592	AssignmentExpr	sighupFd [ 0 ] = - 1
>593	UnaryOp	- 1
>594	PrimaryExpression	1
>595	UnaryOperator	-
>596	ArrayIndexing	sighupFd [ 0 ]
>597	PrimaryExpression	0
>598	Identifier	sighupFd
>599	ExpressionStatement	 
>600	CallExpression	close ( sigintFd [ 1 ] )
>601	ArgumentList	sigintFd [ 1 ]
>602	Argument	sigintFd [ 1 ]
>603	ArrayIndexing	sigintFd [ 1 ]
>604	PrimaryExpression	1
>605	Identifier	sigintFd
>606	Callee	close
>607	Identifier	close
>608	IfStatement	if ( sigintFd [ 1 ] >= 0 )
>609	Statement	 
>610	Condition	 
>611	RelationalExpression	sigintFd [ 1 ] >= 0
>612	PrimaryExpression	0
>613	ArrayIndexing	sigintFd [ 1 ]
>614	PrimaryExpression	1
>615	Identifier	sigintFd
>616	ExpressionStatement	 
>617	CallExpression	close ( sigintFd [ 0 ] )
>618	ArgumentList	sigintFd [ 0 ]
>619	Argument	sigintFd [ 0 ]
>620	ArrayIndexing	sigintFd [ 0 ]
>621	PrimaryExpression	0
>622	Identifier	sigintFd
>623	Callee	close
>624	Identifier	close
>625	IfStatement	if ( sigintFd [ 0 ] >= 0 )
>626	Statement	 
>627	Condition	 
>628	RelationalExpression	sigintFd [ 0 ] >= 0
>629	PrimaryExpression	0
>630	ArrayIndexing	sigintFd [ 0 ]
>631	PrimaryExpression	0
>632	Identifier	sigintFd
>633	ExpressionStatement	 
>634	CallExpression	close ( sigtermFd [ 1 ] )
>635	ArgumentList	sigtermFd [ 1 ]
>636	Argument	sigtermFd [ 1 ]
>637	ArrayIndexing	sigtermFd [ 1 ]
>638	PrimaryExpression	1
>639	Identifier	sigtermFd
>640	Callee	close
>641	Identifier	close
>642	IfStatement	if ( sigtermFd [ 1 ] >= 0 )
>643	Statement	 
>644	Condition	 
>645	RelationalExpression	sigtermFd [ 1 ] >= 0
>646	PrimaryExpression	0
>647	ArrayIndexing	sigtermFd [ 1 ]
>648	PrimaryExpression	1
>649	Identifier	sigtermFd
>650	ExpressionStatement	 
>651	CallExpression	close ( sigtermFd [ 0 ] )
>652	ArgumentList	sigtermFd [ 0 ]
>653	Argument	sigtermFd [ 0 ]
>654	ArrayIndexing	sigtermFd [ 0 ]
>655	PrimaryExpression	0
>656	Identifier	sigtermFd
>657	Callee	close
>658	Identifier	close
>659	IfStatement	if ( sigtermFd [ 0 ] >= 0 )
>660	Statement	 
>661	Condition	 
>662	RelationalExpression	sigtermFd [ 0 ] >= 0
>663	PrimaryExpression	0
>664	ArrayIndexing	sigtermFd [ 0 ]
>665	PrimaryExpression	0
>666	Identifier	sigtermFd
>667	ExpressionStatement	 
>668	CallExpression	close ( sighupFd [ 1 ] )
>669	ArgumentList	sighupFd [ 1 ]
>670	Argument	sighupFd [ 1 ]
>671	ArrayIndexing	sighupFd [ 1 ]
>672	PrimaryExpression	1
>673	Identifier	sighupFd
>674	Callee	close
>675	Identifier	close
>676	IfStatement	if ( sighupFd [ 1 ] >= 0 )
>677	Statement	 
>678	Condition	 
>679	RelationalExpression	sighupFd [ 1 ] >= 0
>680	PrimaryExpression	0
>681	ArrayIndexing	sighupFd [ 1 ]
>682	PrimaryExpression	1
>683	Identifier	sighupFd
>684	ExpressionStatement	 
>685	CallExpression	close ( sighupFd [ 0 ] )
>686	ArgumentList	sighupFd [ 0 ]
>687	Argument	sighupFd [ 0 ]
>688	ArrayIndexing	sighupFd [ 0 ]
>689	PrimaryExpression	0
>690	Identifier	sighupFd
>691	Callee	close
>692	Identifier	close
>693	IfStatement	if ( sighupFd [ 0 ] >= 0 )
>694	Statement	 
>695	Condition	 
>696	RelationalExpression	sighupFd [ 0 ] >= 0
>697	PrimaryExpression	0
>698	ArrayIndexing	sighupFd [ 0 ]
>699	PrimaryExpression	0
>700	Identifier	sighupFd
>701	Label	 
>702	Identifier	error
>703	ReturnStatement	 
>704	Identifier	true
>705	GotoStatement	 
>706	Identifier	error
>707	Statement	 
>708	Statement	 
>709	Statement	 
>710	Statement	 
>711	Statement	 
>712	Statement	 
>713	Statement	 
>714	Statement	 
>715	Statement	 
>716	Statement	 
>717	Statement	 
>718	Statement	 
>719	Statement	 
>720	ExpressionStatement	 
>721	AssignmentExpr	intAct . sa_flags = SA_RESTART
>722	Identifier	SA_RESTART
>723	MemberAccess	intAct . sa_flags
>724	Identifier	sa_flags
>725	Identifier	intAct
>726	ExpressionStatement	 
>727	CallExpression	sigemptyset ( & intAct . sa_mask )
>728	ArgumentList	& intAct . sa_mask
>729	Argument	& intAct . sa_mask
>730	UnaryOp	& intAct . sa_mask
>731	MemberAccess	intAct . sa_mask
>732	Identifier	sa_mask
>733	Identifier	intAct
>734	UnaryOperator	&
>735	Callee	sigemptyset
>736	Identifier	sigemptyset
>737	Statement	 
>738	ExpressionStatement	 
>739	AssignmentExpr	intAct . sa_handler = & SignalHandler 
>740	UnaryOp	& SignalHandler 
>741	Identifier	SignalHandler 
>742	UnaryOperator	&
>743	MemberAccess	intAct . sa_handler
>744	Identifier	sa_handler
>745	Identifier	intAct
>746	GotoStatement	 
>747	Identifier	error
>748	Statement	 
>749	Statement	 
>750	Statement	 
>751	Statement	 
>752	Statement	 
>753	Statement	 
>754	Statement	 
>755	Statement	 
>756	Statement	 
>757	Statement	 
>758	Statement	 
>759	Statement	 
>760	Statement	 
>761	ExpressionStatement	 
>762	AssignmentExpr	termAct . sa_flags = SA_RESTART
>763	Identifier	SA_RESTART
>764	MemberAccess	termAct . sa_flags
>765	Identifier	sa_flags
>766	Identifier	termAct
>767	ExpressionStatement	 
>768	CallExpression	sigemptyset ( & termAct . sa_mask )
>769	ArgumentList	& termAct . sa_mask
>770	Argument	& termAct . sa_mask
>771	UnaryOp	& termAct . sa_mask
>772	MemberAccess	termAct . sa_mask
>773	Identifier	sa_mask
>774	Identifier	termAct
>775	UnaryOperator	&
>776	Callee	sigemptyset
>777	Identifier	sigemptyset
>778	Statement	 
>779	ExpressionStatement	 
>780	AssignmentExpr	termAct . sa_handler = & SignalHandler 
>781	UnaryOp	& SignalHandler 
>782	Identifier	SignalHandler 
>783	UnaryOperator	&
>784	MemberAccess	termAct . sa_handler
>785	Identifier	sa_handler
>786	Identifier	termAct
>787	GotoStatement	 
>788	Identifier	error
>789	Statement	 
>790	Statement	 
>791	Statement	 
>792	Statement	 
>793	Statement	 
>794	Statement	 
>795	Statement	 
>796	Statement	 
>797	Statement	 
>798	Statement	 
>799	Statement	 
>800	Statement	 
>801	Statement	 
>802	ExpressionStatement	 
>803	AssignmentExpr	hupAct . sa_flags = SA_RESTART
>804	Identifier	SA_RESTART
>805	MemberAccess	hupAct . sa_flags
>806	Identifier	sa_flags
>807	Identifier	hupAct
>808	ExpressionStatement	 
>809	CallExpression	sigemptyset ( & hupAct . sa_mask )
>810	ArgumentList	& hupAct . sa_mask
>811	Argument	& hupAct . sa_mask
>812	UnaryOp	& hupAct . sa_mask
>813	MemberAccess	hupAct . sa_mask
>814	Identifier	sa_mask
>815	Identifier	hupAct
>816	UnaryOperator	&
>817	Callee	sigemptyset
>818	Identifier	sigemptyset
>819	Statement	 
>820	ExpressionStatement	 
>821	AssignmentExpr	hupAct . sa_handler = & SignalHandler 
>822	UnaryOp	& SignalHandler 
>823	Identifier	SignalHandler 
>824	UnaryOperator	&
>825	MemberAccess	hupAct . sa_handler
>826	Identifier	sa_handler
>827	Identifier	hupAct
>828	GotoStatement	 
>829	Identifier	error
>830	Statement	 
>831	Statement	 
>832	Statement	 
>833	Statement	 
>834	Statement	 
>835	Statement	 
>836	Statement	 
>837	Statement	 
>838	Statement	 
>839	Statement	 
>840	Statement	 
>841	Statement	 
>842	Statement	 
>843	Statement	 
>844	GotoStatement	 
>845	Identifier	error
>846	Statement	 
>847	Statement	 
>848	Statement	 
>849	Statement	 
>850	Statement	 
>851	Statement	 
>852	Statement	 
>853	Statement	 
>854	Statement	 
>855	Statement	 
>856	Statement	 
>857	Statement	 
>858	Statement	 
>859	Statement	 
>860	GotoStatement	 
>861	Identifier	error
>862	Statement	 
>863	Statement	 
>864	Statement	 
>865	Statement	 
>866	Statement	 
>867	Statement	 
>868	Statement	 
>869	Statement	 
>870	Statement	 
>871	Statement	 
>872	Statement	 
>873	Statement	 
>874	Statement	 
>875	Statement	 
>876	IdentifierDeclStatement	 
>877	IdentifierDecl	intAct
>878	Identifier	intAct
>879	IdentifierDeclType	struct sigaction
>880	IdentifierDecl	termAct
>881	Identifier	termAct
>882	IdentifierDeclType	struct sigaction
>883	IdentifierDecl	hupAct
>884	Identifier	hupAct
>885	IdentifierDeclType	struct sigaction
>916	FunctionDef	SignalHandler 
>917	ParameterList	 
>918	ReturnType	void
>919	CompoundStatement	 
>920	ExpressionStatement	 
>921	CallExpression	snHup -> setEnabled ( true )
>922	ArgumentList	true
>923	Argument	true
>924	Identifier	true
>925	Callee	snHup -> setEnabled
>926	PtrMemberAccess	snHup -> setEnabled
>927	Identifier	setEnabled
>928	Identifier	snHup
>929	ExpressionStatement	 
>930	CallExpression	read ( sighupFd [ 1 ] , & a , sizeof ( a ) )
>931	ArgumentList	sighupFd [ 1 ]
>932	Argument	sizeof ( a )
>933	SizeofExpr	sizeof ( a )
>934	SizeofOperand	a
>935	Sizeof	sizeof
>936	Argument	& a
>937	UnaryOp	& a
>938	Identifier	a
>939	UnaryOperator	&
>940	Argument	sighupFd [ 1 ]
>941	ArrayIndexing	sighupFd [ 1 ]
>942	PrimaryExpression	1
>943	Identifier	sighupFd
>944	Callee	read
>945	Identifier	read
>946	Statement	 
>947	Statement	 
>948	Statement	 
>949	Statement	 
>950	IdentifierDeclStatement	 
>951	IdentifierDecl	a
>952	Identifier	a
>953	IdentifierDeclType	char
>954	ExpressionStatement	 
>955	CallExpression	snHup -> setEnabled ( false )
>956	ArgumentList	false
>957	Argument	false
>958	Identifier	false
>959	Callee	snHup -> setEnabled
>960	PtrMemberAccess	snHup -> setEnabled
>961	Identifier	setEnabled
>962	Identifier	snHup
>973	FunctionDef	SignalHandler 
>974	ParameterList	 
>975	ReturnType	void
>976	CompoundStatement	 
>977	ExpressionStatement	 
>978	CallExpression	snTerm -> setEnabled ( true )
>979	ArgumentList	true
>980	Argument	true
>981	Identifier	true
>982	Callee	snTerm -> setEnabled
>983	PtrMemberAccess	snTerm -> setEnabled
>984	Identifier	setEnabled
>985	Identifier	snTerm
>986	ExpressionStatement	 
>987	CallExpression	read ( sigtermFd [ 1 ] , & a , sizeof ( a ) )
>988	ArgumentList	sigtermFd [ 1 ]
>989	Argument	sizeof ( a )
>990	SizeofExpr	sizeof ( a )
>991	SizeofOperand	a
>992	Sizeof	sizeof
>993	Argument	& a
>994	UnaryOp	& a
>995	Identifier	a
>996	UnaryOperator	&
>997	Argument	sigtermFd [ 1 ]
>998	ArrayIndexing	sigtermFd [ 1 ]
>999	PrimaryExpression	1
>1000	Identifier	sigtermFd
>1001	Callee	read
>1002	Identifier	read
>1003	Statement	 
>1004	Statement	 
>1005	Statement	 
>1006	Statement	 
>1007	IdentifierDeclStatement	 
>1008	IdentifierDecl	a
>1009	Identifier	a
>1010	IdentifierDeclType	char
>1011	ExpressionStatement	 
>1012	CallExpression	snTerm -> setEnabled ( false )
>1013	ArgumentList	false
>1014	Argument	false
>1015	Identifier	false
>1016	Callee	snTerm -> setEnabled
>1017	PtrMemberAccess	snTerm -> setEnabled
>1018	Identifier	setEnabled
>1019	Identifier	snTerm
>1030	FunctionDef	SignalHandler 
>1031	ParameterList	 
>1032	ReturnType	void
>1033	CompoundStatement	 
>1034	ExpressionStatement	 
>1035	CallExpression	snInt -> setEnabled ( true )
>1036	ArgumentList	true
>1037	Argument	true
>1038	Identifier	true
>1039	Callee	snInt -> setEnabled
>1040	PtrMemberAccess	snInt -> setEnabled
>1041	Identifier	setEnabled
>1042	Identifier	snInt
>1043	ExpressionStatement	 
>1044	CallExpression	read ( sigintFd [ 1 ] , & a , sizeof ( a ) )
>1045	ArgumentList	sigintFd [ 1 ]
>1046	Argument	sizeof ( a )
>1047	SizeofExpr	sizeof ( a )
>1048	SizeofOperand	a
>1049	Sizeof	sizeof
>1050	Argument	& a
>1051	UnaryOp	& a
>1052	Identifier	a
>1053	UnaryOperator	&
>1054	Argument	sigintFd [ 1 ]
>1055	ArrayIndexing	sigintFd [ 1 ]
>1056	PrimaryExpression	1
>1057	Identifier	sigintFd
>1058	Callee	read
>1059	Identifier	read
>1060	Statement	 
>1061	Statement	 
>1062	Statement	 
>1063	Statement	 
>1064	IdentifierDeclStatement	 
>1065	IdentifierDecl	a
>1066	Identifier	a
>1067	IdentifierDeclType	char
>1068	ExpressionStatement	 
>1069	CallExpression	snInt -> setEnabled ( false )
>1070	ArgumentList	false
>1071	Argument	false
>1072	Identifier	false
>1073	Callee	snInt -> setEnabled
>1074	PtrMemberAccess	snInt -> setEnabled
>1075	Identifier	setEnabled
>1076	Identifier	snInt
<9=15,14,10
<10=11
<11=13,12
<15=55,54,53,52,44,37,36,35,34,33,16
<16=17
<17=31,18
<18=27,23,19
<19=20
<20=22,21
<23=24
<24=26,25
<27=28
<28=30,29
<31=32
<37=38
<38=43,42,39
<39=41,40
<44=46,45
<46=47
<47=49,48
<49=51,50
<64=70,69,65
<65=66
<66=68,67
<70=110,109,108,107,99,92,91,90,89,88,71
<71=72
<72=86,73
<73=82,78,74
<74=75
<75=77,76
<78=79
<79=81,80
<82=83
<83=85,84
<86=87
<92=93
<93=98,97,94
<94=96,95
<99=101,100
<101=102
<102=104,103
<104=106,105
<119=125,124,120
<120=121
<121=123,122
<125=165,164,163,162,154,147,146,145,144,143,126
<126=127
<127=141,128
<128=137,133,129
<129=130
<130=132,131
<133=134
<134=136,135
<137=138
<138=140,139
<141=142
<147=148
<148=153,152,149
<149=151,150
<154=156,155
<156=157
<157=159,158
<159=161,160
<174=179,175
<175=176
<176=178,177
<179=489,479,469,459,428,397,366,335,304,273,242,211,180
<180=181
<181=209,182
<182=207,195,193,183
<183=184
<184=191,185
<185=186
<186=187
<187=189,188
<189=190
<191=192
<193=194
<195=196
<196=205,197
<197=198
<198=199
<199=203,200
<200=201
<201=202
<203=204
<205=206
<207=208
<209=210
<211=212
<212=240,213
<213=238,226,224,214
<214=215
<215=222,216
<216=217
<217=218
<218=220,219
<220=221
<222=223
<224=225
<226=227
<227=236,228
<228=229
<229=230
<230=234,231
<231=232
<232=233
<234=235
<236=237
<238=239
<240=241
<242=243
<243=271,244
<244=269,257,255,245
<245=246
<246=253,247
<247=248
<248=249
<249=251,250
<251=252
<253=254
<255=256
<257=258
<258=267,259
<259=260
<260=261
<261=265,262
<262=263
<263=264
<265=266
<267=268
<269=270
<271=272
<273=274
<274=302,275
<275=300,288,286,276
<276=277
<277=284,278
<278=279
<279=280
<280=282,281
<282=283
<284=285
<286=287
<288=289
<289=298,290
<290=291
<291=292
<292=296,293
<293=294
<294=295
<296=297
<298=299
<300=301
<302=303
<304=305
<305=333,306
<306=331,319,317,307
<307=308
<308=315,309
<309=310
<310=311
<311=313,312
<313=314
<315=316
<317=318
<319=320
<320=329,321
<321=322
<322=323
<323=327,324
<324=325
<325=326
<327=328
<329=330
<331=332
<333=334
<335=336
<336=364,337
<337=362,350,348,338
<338=339
<339=346,340
<340=341
<341=342
<342=344,343
<344=345
<346=347
<348=349
<350=351
<351=360,352
<352=353
<353=354
<354=358,355
<355=356
<356=357
<358=359
<360=361
<362=363
<364=365
<366=367
<367=395,368
<368=393,381,379,369
<369=370
<370=377,371
<371=372
<372=373
<373=375,374
<375=376
<377=378
<379=380
<381=382
<382=391,383
<383=384
<384=385
<385=389,386
<386=387
<387=388
<389=390
<391=392
<393=394
<395=396
<397=398
<398=426,399
<399=424,412,410,400
<400=401
<401=408,402
<402=403
<403=404
<404=406,405
<406=407
<408=409
<410=411
<412=413
<413=422,414
<414=415
<415=416
<416=420,417
<417=418
<418=419
<420=421
<422=423
<424=425
<426=427
<428=429
<429=457,430
<430=455,443,441,431
<431=432
<432=439,433
<433=434
<434=435
<435=437,436
<437=438
<439=440
<441=442
<443=444
<444=453,445
<445=446
<446=447
<447=451,448
<448=449
<449=450
<451=452
<453=454
<455=456
<457=458
<459=460
<460=468,461
<461=465,462
<462=464,463
<465=467,466
<469=470
<470=478,471
<471=475,472
<472=474,473
<475=477,476
<479=480
<480=488,481
<481=485,482
<482=484,483
<485=487,486
<489=499,490
<490=492,491
<492=493
<493=497,494
<494=495
<495=496
<497=498
<499=500
<500=507,501
<501=506,502
<502=504,503
<504=505
<507=509,508
<509=511,510
<539=541,540
<545=548,547,546
<548=876,875,874,873,872,871,870,869,868,867,866,865,864,863,862,860,859,858,857,856,855,854,853,852,851,850,849,848,847,846,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,828,820,819,808,802,801,800,799,798,797,796,795,794,793,792,791,790,789,787,779,778,767,761,760,759,758,549,551,559,567,575,583,591,599,608,616,625,633,642,650,659,667,676,684,693,701,703,705,707,708,709,710,711,712,713,714,715,716,717,718,719,720,726,737,738,746,748,749,750,751,752,753,754,755,756,757
<549=550
<551=552
<552=556,553
<553=555,554
<556=558,557
<559=560
<560=564,561
<561=563,562
<564=566,565
<567=568
<568=572,569
<569=571,570
<572=574,573
<575=576
<576=580,577
<577=579,578
<580=582,581
<583=584
<584=588,585
<585=587,586
<588=590,589
<591=592
<592=596,593
<593=595,594
<596=598,597
<599=600
<600=606,601
<601=602
<602=603
<603=605,604
<606=607
<608=610,609
<610=611
<611=613,612
<613=615,614
<616=617
<617=623,618
<618=619
<619=620
<620=622,621
<623=624
<625=627,626
<627=628
<628=630,629
<630=632,631
<633=634
<634=640,635
<635=636
<636=637
<637=639,638
<640=641
<642=644,643
<644=645
<645=647,646
<647=649,648
<650=651
<651=657,652
<652=653
<653=654
<654=656,655
<657=658
<659=661,660
<661=662
<662=664,663
<664=666,665
<667=668
<668=674,669
<669=670
<670=671
<671=673,672
<674=675
<676=678,677
<678=679
<679=681,680
<681=683,682
<684=685
<685=691,686
<686=687
<687=688
<688=690,689
<691=692
<693=695,694
<695=696
<696=698,697
<698=700,699
<701=702
<703=704
<705=706
<720=721
<721=723,722
<723=725,724
<726=727
<727=735,728
<728=729
<729=730
<730=734,731
<731=733,732
<735=736
<738=739
<739=743,740
<740=742,741
<743=745,744
<746=747
<761=762
<762=764,763
<764=766,765
<767=768
<768=776,769
<769=770
<770=771
<771=775,772
<772=774,773
<776=777
<779=780
<780=784,781
<781=783,782
<784=786,785
<787=788
<802=803
<803=805,804
<805=807,806
<808=809
<809=817,810
<810=811
<811=812
<812=816,813
<813=815,814
<817=818
<820=821
<821=825,822
<822=824,823
<825=827,826
<828=829
<844=845
<860=861
<876=883,880,877
<877=879,878
<880=882,881
<883=885,884
<916=919,918,917
<919=954,950,949,948,947,946,929,920
<920=921
<921=925,922
<922=923
<923=924
<925=926
<926=928,927
<929=930
<930=944,931
<931=940,936,932
<932=933
<933=935,934
<936=937
<937=939,938
<940=941
<941=943,942
<944=945
<950=951
<951=953,952
<954=955
<955=959,956
<956=957
<957=958
<959=960
<960=962,961
<973=976,975,974
<976=1011,1007,1006,1005,1004,1003,986,977
<977=978
<978=982,979
<979=980
<980=981
<982=983
<983=985,984
<986=987
<987=1001,988
<988=997,993,989
<989=990
<990=992,991
<993=994
<994=996,995
<997=998
<998=1000,999
<1001=1002
<1007=1008
<1008=1010,1009
<1011=1012
<1012=1016,1013
<1013=1014
<1014=1015
<1016=1017
<1017=1019,1018
<1030=1033,1032,1031
<1033=1068,1064,1063,1062,1061,1060,1043,1034
<1034=1035
<1035=1039,1036
<1036=1037
<1037=1038
<1039=1040
<1040=1042,1041
<1043=1044
<1044=1058,1045
<1045=1054,1050,1046
<1046=1047
<1047=1049,1048
<1050=1051
<1051=1053,1052
<1054=1055
<1055=1057,1056
<1058=1059
<1064=1065
<1065=1067,1066
<1068=1069
<1069=1073,1070
<1070=1071
<1071=1072
<1073=1074
<1074=1076,1075
