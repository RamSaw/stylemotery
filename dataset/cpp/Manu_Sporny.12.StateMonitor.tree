>3	FunctionDef	StateMonitor 
>4	ParameterList	 
>5	CompoundStatement	 
>9	FunctionDef	StateMonitor 
>10	ParameterList	 
>11	CompoundStatement	 
>15	FunctionDef	StateMonitor 
>16	ParameterList	const char * state , monarch 
>17	Parameter	 
>18	Identifier	stateInfo
>19	ParameterType	monarch 
>20	Parameter	 
>21	Identifier	state
>22	ParameterType	const char *
>23	ReturnType	bool
>24	CompoundStatement	 
>25	ReturnStatement	 
>26	CallExpression	addStates ( stateInfos )
>27	ArgumentList	stateInfos
>28	Argument	stateInfos
>29	Identifier	stateInfos
>30	Callee	addStates
>31	Identifier	addStates
>32	ExpressionStatement	 
>33	AssignmentExpr	stateInfos [ state ] = stateInfo
>34	Identifier	stateInfo
>35	ArrayIndexing	stateInfos [ state ]
>36	Identifier	state
>37	Identifier	stateInfos
>38	IdentifierDeclStatement	 
>39	IdentifierDecl	stateInfos
>40	Identifier	stateInfos
>41	IdentifierDeclType	DynamicObject
>51	FunctionDef	StateMonitor 
>52	ParameterList	 
>53	ReturnType	void
>54	CompoundStatement	 
>55	ExpressionStatement	 
>56	CallExpression	removeStates ( all )
>57	ArgumentList	all
>58	Argument	all
>59	Identifier	all
>60	Callee	removeStates
>61	Identifier	removeStates
>62	IdentifierDeclStatement	 
>63	IdentifierDecl	all = getAll ( )
>64	AssignmentExpr	all = getAll ( )
>65	CallExpression	getAll ( )
>66	ArgumentList	 
>67	Callee	getAll
>68	Identifier	getAll
>69	Identifier	all
>70	Identifier	all
>71	IdentifierDeclType	DynamicObject
>77	FunctionDef	StateMonitor 
>78	ParameterList	const char * state
>79	Parameter	 
>80	Identifier	state
>81	ParameterType	const char *
>82	ReturnType	bool
>83	CompoundStatement	 
>84	ReturnStatement	 
>85	CallExpression	removeStates ( states )
>86	ArgumentList	states
>87	Argument	states
>88	Identifier	states
>89	Callee	removeStates
>90	Identifier	removeStates
>91	ExpressionStatement	 
>92	CallExpression	states [ state ] . setNull ( )
>93	ArgumentList	 
>94	Callee	states [ state ] . setNull
>95	MemberAccess	states [ state ] . setNull
>96	Identifier	setNull
>97	ArrayIndexing	states [ state ]
>98	Identifier	state
>99	Identifier	states
>100	IdentifierDeclStatement	 
>101	IdentifierDecl	states
>102	Identifier	states
>103	IdentifierDeclType	DynamicObject
>112	FunctionDef	StateMonitor 
>113	ParameterList	const char * state
>114	Parameter	 
>115	Identifier	state
>116	ParameterType	const char *
>117	ReturnType	bool
>118	CompoundStatement	 
>119	ReturnStatement	 
>120	CallExpression	resetStates ( states )
>121	ArgumentList	states
>122	Argument	states
>123	Identifier	states
>124	Callee	resetStates
>125	Identifier	resetStates
>126	ExpressionStatement	 
>127	CallExpression	states [ state ] . setNull ( )
>128	ArgumentList	 
>129	Callee	states [ state ] . setNull
>130	MemberAccess	states [ state ] . setNull
>131	Identifier	setNull
>132	ArrayIndexing	states [ state ]
>133	Identifier	state
>134	Identifier	states
>135	IdentifierDeclStatement	 
>136	IdentifierDecl	states
>137	Identifier	states
>138	IdentifierDeclType	DynamicObject
>147	FunctionDef	StateMonitor 
>148	ParameterList	const char * state , DynamicObject & value , bool clone
>149	Parameter	 
>150	Identifier	clone
>151	ParameterType	bool
>152	Parameter	 
>153	Identifier	value
>154	ParameterType	DynamicObject &
>155	Parameter	 
>156	Identifier	state
>157	ParameterType	const char *
>158	ReturnType	bool
>159	CompoundStatement	 
>160	ReturnStatement	 
>161	CallExpression	setStates ( states , clone )
>162	ArgumentList	states
>163	Argument	clone
>164	Identifier	clone
>165	Argument	states
>166	Identifier	states
>167	Callee	setStates
>168	Identifier	setStates
>169	ExpressionStatement	 
>170	AssignmentExpr	states [ state ] = value
>171	Identifier	value
>172	ArrayIndexing	states [ state ]
>173	Identifier	state
>174	Identifier	states
>175	IdentifierDeclStatement	 
>176	IdentifierDecl	states
>177	Identifier	states
>178	IdentifierDeclType	DynamicObject
>189	FunctionDef	StateMonitor 
>190	ParameterList	const char * state , uint64_t value
>191	Parameter	 
>192	Identifier	value
>193	ParameterType	uint64_t
>194	Parameter	 
>195	Identifier	state
>196	ParameterType	const char *
>197	ReturnType	bool
>198	CompoundStatement	 
>199	ReturnStatement	 
>200	CallExpression	setStates ( states )
>201	ArgumentList	states
>202	Argument	states
>203	Identifier	states
>204	Callee	setStates
>205	Identifier	setStates
>206	ExpressionStatement	 
>207	AssignmentExpr	states [ state ] = value
>208	Identifier	value
>209	ArrayIndexing	states [ state ]
>210	Identifier	state
>211	Identifier	states
>212	IdentifierDeclStatement	 
>213	IdentifierDecl	states
>214	Identifier	states
>215	IdentifierDeclType	DynamicObject
>225	FunctionDef	StateMonitor 
>226	ParameterList	const char * state , DynamicObject & target
>227	Parameter	 
>228	Identifier	target
>229	ParameterType	DynamicObject &
>230	Parameter	 
>231	Identifier	state
>232	ParameterType	const char *
>233	ReturnType	bool
>234	CompoundStatement	 
>235	ReturnStatement	 
>236	Identifier	rval
>237	IfStatement	if ( rval )
>238	CompoundStatement	 
>239	ExpressionStatement	 
>240	AssignmentExpr	target = states [ state ]
>241	ArrayIndexing	states [ state ]
>242	Identifier	state
>243	Identifier	states
>244	Identifier	target
>245	Condition	 
>246	Identifier	rval
>247	ExpressionStatement	 
>248	AssignmentExpr	rval = getStates ( states )
>249	CallExpression	getStates ( states )
>250	ArgumentList	states
>251	Argument	states
>252	Identifier	states
>253	Callee	getStates
>254	Identifier	getStates
>255	Identifier	rval
>256	ExpressionStatement	 
>257	CallExpression	states [ state ] -> setType ( target -> getType ( ) )
>258	ArgumentList	target -> getType ( )
>259	Argument	target -> getType ( )
>260	CallExpression	target -> getType ( )
>261	ArgumentList	 
>262	Callee	target -> getType
>263	PtrMemberAccess	target -> getType
>264	Identifier	getType
>265	Identifier	target
>266	Callee	states [ state ] -> setType
>267	PtrMemberAccess	states [ state ] -> setType
>268	Identifier	setType
>269	ArrayIndexing	states [ state ]
>270	Identifier	state
>271	Identifier	states
>272	IdentifierDeclStatement	 
>273	IdentifierDecl	states
>274	Identifier	states
>275	IdentifierDeclType	DynamicObject
>276	IdentifierDeclStatement	 
>277	IdentifierDecl	rval
>278	Identifier	rval
>279	IdentifierDeclType	bool
>292	FunctionDef	StateMonitor 
>293	ParameterList	const char * state , uint64_t & target
>294	Parameter	 
>295	Identifier	target
>296	ParameterType	uint64_t &
>297	Parameter	 
>298	Identifier	state
>299	ParameterType	const char *
>300	ReturnType	bool
>301	CompoundStatement	 
>302	ReturnStatement	 
>303	Identifier	rval
>304	IfStatement	if ( rval )
>305	CompoundStatement	 
>306	ExpressionStatement	 
>307	AssignmentExpr	target = tmp -> getUInt64 ( )
>308	CallExpression	tmp -> getUInt64 ( )
>309	ArgumentList	 
>310	Callee	tmp -> getUInt64
>311	PtrMemberAccess	tmp -> getUInt64
>312	Identifier	getUInt64
>313	Identifier	tmp
>314	Identifier	target
>315	Condition	 
>316	Identifier	rval
>317	ExpressionStatement	 
>318	AssignmentExpr	rval = getState ( state , tmp )
>319	CallExpression	getState ( state , tmp )
>320	ArgumentList	state
>321	Argument	tmp
>322	Identifier	tmp
>323	Argument	state
>324	Identifier	state
>325	Callee	getState
>326	Identifier	getState
>327	Identifier	rval
>328	ExpressionStatement	 
>329	CallExpression	tmp -> setType ( UInt64 )
>330	ArgumentList	UInt64
>331	Argument	UInt64
>332	Identifier	UInt64
>333	Callee	tmp -> setType
>334	PtrMemberAccess	tmp -> setType
>335	Identifier	setType
>336	Identifier	tmp
>337	IdentifierDeclStatement	 
>338	IdentifierDecl	tmp
>339	Identifier	tmp
>340	IdentifierDeclType	DynamicObject
>341	IdentifierDeclStatement	 
>342	IdentifierDecl	rval
>343	Identifier	rval
>344	IdentifierDeclType	bool
>356	FunctionDef	StateMonitor 
>357	ParameterList	const char * state , int64_t adjustment
>358	Parameter	 
>359	Identifier	adjustment
>360	ParameterType	int64_t
>361	Parameter	 
>362	Identifier	state
>363	ParameterType	const char *
>364	ReturnType	bool
>365	CompoundStatement	 
>366	ReturnStatement	 
>367	CallExpression	adjustStates ( states )
>368	ArgumentList	states
>369	Argument	states
>370	Identifier	states
>371	Callee	adjustStates
>372	Identifier	adjustStates
>373	ExpressionStatement	 
>374	AssignmentExpr	states [ state ] = adjustment
>375	Identifier	adjustment
>376	ArrayIndexing	states [ state ]
>377	Identifier	state
>378	Identifier	states
>379	IdentifierDeclStatement	 
>380	IdentifierDecl	states
>381	Identifier	states
>382	IdentifierDeclType	DynamicObject
>392	FunctionDef	StateMonitor 
>393	ParameterList	const char * state , uint64_t adjustment
>394	Parameter	 
>395	Identifier	adjustment
>396	ParameterType	uint64_t
>397	Parameter	 
>398	Identifier	state
>399	ParameterType	const char *
>400	ReturnType	bool
>401	CompoundStatement	 
>402	ReturnStatement	 
>403	CallExpression	adjustStates ( states )
>404	ArgumentList	states
>405	Argument	states
>406	Identifier	states
>407	Callee	adjustStates
>408	Identifier	adjustStates
>409	ExpressionStatement	 
>410	AssignmentExpr	states [ state ] = adjustment
>411	Identifier	adjustment
>412	ArrayIndexing	states [ state ]
>413	Identifier	state
>414	Identifier	states
>415	IdentifierDeclStatement	 
>416	IdentifierDecl	states
>417	Identifier	states
>418	IdentifierDeclType	DynamicObject
<3=5,4
<9=11,10
<15=24,23,16
<16=20,17
<17=19,18
<20=22,21
<24=38,32,25
<25=26
<26=30,27
<27=28
<28=29
<30=31
<32=33
<33=35,34
<35=37,36
<38=39
<39=41,40
<51=54,53,52
<54=62,55
<55=56
<56=60,57
<57=58
<58=59
<60=61
<62=63
<63=71,70,64
<64=69,65
<65=67,66
<67=68
<77=83,82,78
<78=79
<79=81,80
<83=100,91,84
<84=85
<85=89,86
<86=87
<87=88
<89=90
<91=92
<92=94,93
<94=95
<95=97,96
<97=99,98
<100=101
<101=103,102
<112=118,117,113
<113=114
<114=116,115
<118=135,126,119
<119=120
<120=124,121
<121=122
<122=123
<124=125
<126=127
<127=129,128
<129=130
<130=132,131
<132=134,133
<135=136
<136=138,137
<147=159,158,148
<148=155,152,149
<149=151,150
<152=154,153
<155=157,156
<159=175,169,160
<160=161
<161=167,162
<162=165,163
<163=164
<165=166
<167=168
<169=170
<170=172,171
<172=174,173
<175=176
<176=178,177
<189=198,197,190
<190=194,191
<191=193,192
<194=196,195
<198=212,206,199
<199=200
<200=204,201
<201=202
<202=203
<204=205
<206=207
<207=209,208
<209=211,210
<212=213
<213=215,214
<225=234,233,226
<226=230,227
<227=229,228
<230=232,231
<234=276,272,256,247,237,235
<235=236
<237=245,238
<238=239
<239=240
<240=244,241
<241=243,242
<245=246
<247=248
<248=255,249
<249=253,250
<250=251
<251=252
<253=254
<256=257
<257=266,258
<258=259
<259=260
<260=262,261
<262=263
<263=265,264
<266=267
<267=269,268
<269=271,270
<272=273
<273=275,274
<276=277
<277=279,278
<292=301,300,293
<293=297,294
<294=296,295
<297=299,298
<301=341,337,328,317,304,302
<302=303
<304=315,305
<305=306
<306=307
<307=314,308
<308=310,309
<310=311
<311=313,312
<315=316
<317=318
<318=327,319
<319=325,320
<320=323,321
<321=322
<323=324
<325=326
<328=329
<329=333,330
<330=331
<331=332
<333=334
<334=336,335
<337=338
<338=340,339
<341=342
<342=344,343
<356=365,364,357
<357=361,358
<358=360,359
<361=363,362
<365=379,373,366
<366=367
<367=371,368
<368=369
<369=370
<371=372
<373=374
<374=376,375
<376=378,377
<379=380
<380=382,381
<392=401,400,393
<393=397,394
<394=396,395
<397=399,398
<401=415,409,402
<402=403
<403=407,404
<404=405
<405=406
<407=408
<409=410
<410=412,411
<412=414,413
<415=416
<416=418,417
