>13	FunctionDef	main (int argc , char * argv [ ])
>14	ParameterList	int argc , char * argv [ ]
>15	Parameter	 
>16	Identifier	argv
>17	ParameterType	char * [ ]
>18	Parameter	 
>19	Identifier	argc
>20	ParameterType	int
>21	ReturnType	int
>22	CompoundStatement	 
>23	ExpressionStatement	 
>24	ShiftExpression	std 
>25	ShiftExpression	\" max=\" << diff_max << \"ms (\" << percent_max << \"%)\n\"
>26	ShiftExpression	diff_max << \"ms (\" << percent_max << \"%)\n\"
>27	ShiftExpression	\"ms (\" << percent_max << \"%)\n\"
>28	ShiftExpression	percent_max << \"%)\n\"
>29	PrimaryExpression	\"%)\n\"
>30	Identifier	percent_max
>31	PrimaryExpression	\"ms (\"
>32	Identifier	diff_max
>33	PrimaryExpression	\" max=\"
>34	Identifier	std 
>35	ExpressionStatement	 
>36	ShiftExpression	std 
>37	ShiftExpression	\" avg=\" << diff_avg << \"ms (\" << percent_avg << \"%)\"
>38	ShiftExpression	diff_avg << \"ms (\" << percent_avg << \"%)\"
>39	ShiftExpression	\"ms (\" << percent_avg << \"%)\"
>40	ShiftExpression	percent_avg << \"%)\"
>41	PrimaryExpression	\"%)\"
>42	Identifier	percent_avg
>43	PrimaryExpression	\"ms (\"
>44	Identifier	diff_avg
>45	PrimaryExpression	\" avg=\"
>46	Identifier	std 
>47	ExpressionStatement	 
>48	ShiftExpression	std 
>49	ShiftExpression	\" min=\" << diff_min << \"ms (\" << percent_min << \"%)\"
>50	ShiftExpression	diff_min << \"ms (\" << percent_min << \"%)\"
>51	ShiftExpression	\"ms (\" << percent_min << \"%)\"
>52	ShiftExpression	percent_min << \"%)\"
>53	PrimaryExpression	\"%)\"
>54	Identifier	percent_min
>55	PrimaryExpression	\"ms (\"
>56	Identifier	diff_min
>57	PrimaryExpression	\" min=\"
>58	Identifier	std 
>59	ExpressionStatement	 
>60	ShiftExpression	std 
>61	PrimaryExpression	\"difference
>62	Identifier	std 
>63	IdentifierDeclStatement	 
>64	IdentifierDecl	percent_max = std 
>65	AssignmentExpr	percent_max = std 
>66	MultiplicativeExpression	std 
>67	Identifier	prfactor
>68	CallExpression	std 
>69	ArgumentList	( 100.0 * diff_max / static_max ) * prfactor
>70	Argument	( 100.0 * diff_max / static_max ) * prfactor
>71	MultiplicativeExpression	( 100.0 * diff_max / static_max ) * prfactor
>72	Identifier	prfactor
>73	MultiplicativeExpression	100.0 * diff_max / static_max
>74	MultiplicativeExpression	diff_max / static_max
>75	Identifier	static_max
>76	Identifier	diff_max
>77	PrimaryExpression	100.0
>78	Callee	std 
>79	Identifier	std 
>80	Identifier	percent_max
>81	Identifier	percent_max
>82	IdentifierDeclType	double
>83	IdentifierDeclStatement	 
>84	IdentifierDecl	percent_avg = std 
>85	AssignmentExpr	percent_avg = std 
>86	MultiplicativeExpression	std 
>87	Identifier	prfactor
>88	CallExpression	std 
>89	ArgumentList	( 100.0 * diff_avg / static_avg ) * prfactor
>90	Argument	( 100.0 * diff_avg / static_avg ) * prfactor
>91	MultiplicativeExpression	( 100.0 * diff_avg / static_avg ) * prfactor
>92	Identifier	prfactor
>93	MultiplicativeExpression	100.0 * diff_avg / static_avg
>94	MultiplicativeExpression	diff_avg / static_avg
>95	Identifier	static_avg
>96	Identifier	diff_avg
>97	PrimaryExpression	100.0
>98	Callee	std 
>99	Identifier	std 
>100	Identifier	percent_avg
>101	Identifier	percent_avg
>102	IdentifierDeclType	double
>103	IdentifierDeclStatement	 
>104	IdentifierDecl	percent_min = std 
>105	AssignmentExpr	percent_min = std 
>106	MultiplicativeExpression	std 
>107	Identifier	prfactor
>108	CallExpression	std 
>109	ArgumentList	( 100.0 * diff_min / static_min ) * prfactor
>110	Argument	( 100.0 * diff_min / static_min ) * prfactor
>111	MultiplicativeExpression	( 100.0 * diff_min / static_min ) * prfactor
>112	Identifier	prfactor
>113	MultiplicativeExpression	100.0 * diff_min / static_min
>114	MultiplicativeExpression	diff_min / static_min
>115	Identifier	static_min
>116	Identifier	diff_min
>117	PrimaryExpression	100.0
>118	Callee	std 
>119	Identifier	std 
>120	Identifier	percent_min
>121	Identifier	percent_min
>122	IdentifierDeclType	double
>123	IdentifierDeclStatement	 
>124	IdentifierDecl	prfactor = 10.0
>125	AssignmentExpr	prfactor = 10.0
>126	PrimaryExpression	10.0
>127	Identifier	prfactor
>128	Identifier	prfactor
>129	IdentifierDeclType	double
>130	IdentifierDeclStatement	 
>131	IdentifierDecl	diff_max = std 
>132	AssignmentExpr	diff_max = std 
>133	MultiplicativeExpression	std 
>134	Identifier	rfactor
>135	CallExpression	std 
>136	ArgumentList	( dynamic_max - static_max ) * rfactor
>137	Argument	( dynamic_max - static_max ) * rfactor
>138	MultiplicativeExpression	( dynamic_max - static_max ) * rfactor
>139	Identifier	rfactor
>140	AdditiveExpression	dynamic_max - static_max
>141	Identifier	static_max
>142	Identifier	dynamic_max
>143	Callee	std 
>144	Identifier	std 
>145	Identifier	diff_max
>146	Identifier	diff_max
>147	IdentifierDeclType	double
>148	IdentifierDeclStatement	 
>149	IdentifierDecl	diff_avg = std 
>150	AssignmentExpr	diff_avg = std 
>151	MultiplicativeExpression	std 
>152	Identifier	rfactor
>153	CallExpression	std 
>154	ArgumentList	( dynamic_avg - static_avg ) * rfactor
>155	Argument	( dynamic_avg - static_avg ) * rfactor
>156	MultiplicativeExpression	( dynamic_avg - static_avg ) * rfactor
>157	Identifier	rfactor
>158	AdditiveExpression	dynamic_avg - static_avg
>159	Identifier	static_avg
>160	Identifier	dynamic_avg
>161	Callee	std 
>162	Identifier	std 
>163	Identifier	diff_avg
>164	Identifier	diff_avg
>165	IdentifierDeclType	double
>166	IdentifierDeclStatement	 
>167	IdentifierDecl	diff_min = std 
>168	AssignmentExpr	diff_min = std 
>169	MultiplicativeExpression	std 
>170	Identifier	rfactor
>171	CallExpression	std 
>172	ArgumentList	( dynamic_min - static_min ) * rfactor
>173	Argument	( dynamic_min - static_min ) * rfactor
>174	MultiplicativeExpression	( dynamic_min - static_min ) * rfactor
>175	Identifier	rfactor
>176	AdditiveExpression	dynamic_min - static_min
>177	Identifier	static_min
>178	Identifier	dynamic_min
>179	Callee	std 
>180	Identifier	std 
>181	Identifier	diff_min
>182	Identifier	diff_min
>183	IdentifierDeclType	double
>184	IdentifierDeclStatement	 
>185	IdentifierDecl	rfactor = 100.0
>186	AssignmentExpr	rfactor = 100.0
>187	PrimaryExpression	100.0
>188	Identifier	rfactor
>189	Identifier	rfactor
>190	IdentifierDeclType	double
>191	ExpressionStatement	 
>192	ShiftExpression	std 
>193	ShiftExpression	\"dynamic min=\" << dynamic_min << \"ms avg=\" << dynamic_avg << \"ms max=\" << dynamic_max << \"ms\n\"
>194	ShiftExpression	dynamic_min << \"ms avg=\" << dynamic_avg << \"ms max=\" << dynamic_max << \"ms\n\"
>195	ShiftExpression	\"ms avg=\" << dynamic_avg << \"ms max=\" << dynamic_max << \"ms\n\"
>196	ShiftExpression	dynamic_avg << \"ms max=\" << dynamic_max << \"ms\n\"
>197	ShiftExpression	\"ms max=\" << dynamic_max << \"ms\n\"
>198	ShiftExpression	dynamic_max << \"ms\n\"
>199	PrimaryExpression	\"ms\n\"
>200	Identifier	dynamic_max
>201	PrimaryExpression	\"ms max=\"
>202	Identifier	dynamic_avg
>203	PrimaryExpression	\"ms avg=\"
>204	Identifier	dynamic_min
>205	PrimaryExpression	\"dynamic min=\"
>206	Identifier	std 
>207	ExpressionStatement	 
>208	ShiftExpression	std 
>209	ShiftExpression	\"static  min=\" << static_min << \"ms avg=\" << static_avg << \"ms max=\" << static_max << \"ms\n\"
>210	ShiftExpression	static_min << \"ms avg=\" << static_avg << \"ms max=\" << static_max << \"ms\n\"
>211	ShiftExpression	\"ms avg=\" << static_avg << \"ms max=\" << static_max << \"ms\n\"
>212	ShiftExpression	static_avg << \"ms max=\" << static_max << \"ms\n\"
>213	ShiftExpression	\"ms max=\" << static_max << \"ms\n\"
>214	ShiftExpression	static_max << \"ms\n\"
>215	PrimaryExpression	\"ms\n\"
>216	Identifier	static_max
>217	PrimaryExpression	\"ms max=\"
>218	Identifier	static_avg
>219	PrimaryExpression	\"ms avg=\"
>220	Identifier	static_min
>221	PrimaryExpression	\"static  min=\"
>222	Identifier	std 
>223	IdentifierDeclStatement	 
>224	IdentifierDecl	dynamic_avg = dynamic_sum / runs
>225	AssignmentExpr	dynamic_avg = dynamic_sum / runs
>226	MultiplicativeExpression	dynamic_sum / runs
>227	Identifier	runs
>228	Identifier	dynamic_sum
>229	Identifier	dynamic_avg
>230	Identifier	dynamic_avg
>231	IdentifierDeclType	double
>232	IdentifierDeclStatement	 
>233	IdentifierDecl	static_avg = static_sum / runs
>234	AssignmentExpr	static_avg = static_sum / runs
>235	MultiplicativeExpression	static_sum / runs
>236	Identifier	runs
>237	Identifier	static_sum
>238	Identifier	static_avg
>239	Identifier	static_avg
>240	IdentifierDeclType	double
>241	ForStatement	for ( int i = 0 ; i < runs ; ++ i )
>242	CompoundStatement	 
>243	CompoundStatement	 
>244	ExpressionStatement	 
>245	AssignmentExpr	dynamic_sum += duration
>246	Identifier	duration
>247	Identifier	dynamic_sum
>248	IfStatement	if ( duration > dynamic_max )
>249	ExpressionStatement	 
>250	AssignmentExpr	dynamic_max = duration
>251	Identifier	duration
>252	Identifier	dynamic_max
>253	Condition	 
>254	RelationalExpression	duration > dynamic_max
>255	Identifier	dynamic_max
>256	Identifier	duration
>257	IfStatement	if ( duration < dynamic_min )
>258	ExpressionStatement	 
>259	AssignmentExpr	dynamic_min = duration
>260	Identifier	duration
>261	Identifier	dynamic_min
>262	Condition	 
>263	RelationalExpression	duration < dynamic_min
>264	Identifier	dynamic_min
>265	Identifier	duration
>266	ExpressionStatement	 
>267	Expression	duration = std 
>268	RelationalExpression	std 
>269	CallExpression	( end - start ) . count ( )
>270	ArgumentList	 
>271	Callee	( end - start ) . count
>272	MemberAccess	( end - start ) . count
>273	Identifier	count
>274	AdditiveExpression	end - start
>275	Identifier	start
>276	Identifier	end
>277	Identifier	std 
>278	AssignmentExpr	duration = std 
>279	RelationalExpression	std 
>280	Identifier	double
>281	Identifier	std 
>282	Identifier	duration
>283	Statement	 
>284	ExpressionStatement	 
>285	AssignmentExpr	end = std 
>286	CallExpression	std 
>287	ArgumentList	 
>288	Callee	std 
>289	Identifier	std 
>290	Identifier	end
>291	Statement	 
>292	ExpressionStatement	 
>293	CallExpression	osmium 
>294	ArgumentList	tmp_buffer
>295	Argument	dynamic_location_handler
>296	Identifier	dynamic_location_handler
>297	Argument	tmp_buffer
>298	Identifier	tmp_buffer
>299	Callee	osmium 
>300	Identifier	osmium 
>301	ExpressionStatement	 
>302	AssignmentExpr	start = std 
>303	CallExpression	std 
>304	ArgumentList	 
>305	Callee	std 
>306	Identifier	std 
>307	Identifier	start
>308	Statement	 
>309	ExpressionStatement	 
>310	CallExpression	dynamic_location_handler . ignore_errors ( )
>311	ArgumentList	 
>312	Callee	dynamic_location_handler . ignore_errors
>313	MemberAccess	dynamic_location_handler . ignore_errors
>314	Identifier	ignore_errors
>315	Identifier	dynamic_location_handler
>316	IdentifierDeclStatement	 
>317	IdentifierDecl	dynamic_location_handler ( * index )
>318	UnaryOp	* index
>319	Identifier	index
>320	UnaryOperator	*
>321	Identifier	dynamic_location_handler
>322	IdentifierDeclType	dynamic_location_handler_type
>323	IdentifierDeclStatement	 
>324	IdentifierDecl	index = map_factory . create_map ( location_store )
>325	AssignmentExpr	index = map_factory . create_map ( location_store )
>326	CallExpression	map_factory . create_map ( location_store )
>327	ArgumentList	location_store
>328	Argument	location_store
>329	Identifier	location_store
>330	Callee	map_factory . create_map
>331	MemberAccess	map_factory . create_map
>332	Identifier	create_map
>333	Identifier	map_factory
>334	Identifier	index
>335	Identifier	index
>336	IdentifierDeclType	std 
>337	CompoundStatement	 
>338	ExpressionStatement	 
>339	CallExpression	tmp_buffer . commit ( )
>340	ArgumentList	 
>341	Callee	tmp_buffer . commit
>342	MemberAccess	tmp_buffer . commit
>343	Identifier	commit
>344	Identifier	tmp_buffer
>345	ExpressionStatement	 
>346	CallExpression	tmp_buffer . add_item ( item )
>347	ArgumentList	item
>348	Argument	item
>349	Identifier	item
>350	Callee	tmp_buffer . add_item
>351	MemberAccess	tmp_buffer . add_item
>352	Identifier	add_item
>353	Identifier	tmp_buffer
>354	Statement	 
>355	Statement	 
>356	Label	 
>357	Identifier	item
>358	Statement	 
>359	Statement	 
>360	Statement	 
>361	Statement	 
>362	Statement	 
>363	IdentifierDeclStatement	 
>364	IdentifierDecl	tmp_buffer ( buffer . committed ( ) )
>365	CallExpression	buffer . committed ( )
>366	ArgumentList	 
>367	Callee	buffer . committed
>368	MemberAccess	buffer . committed
>369	Identifier	committed
>370	Identifier	buffer
>371	Identifier	tmp_buffer
>372	IdentifierDeclType	osmium 
>373	CompoundStatement	 
>374	ExpressionStatement	 
>375	AssignmentExpr	static_sum += duration
>376	Identifier	duration
>377	Identifier	static_sum
>378	IfStatement	if ( duration > static_max )
>379	ExpressionStatement	 
>380	AssignmentExpr	static_max = duration
>381	Identifier	duration
>382	Identifier	static_max
>383	Condition	 
>384	RelationalExpression	duration > static_max
>385	Identifier	static_max
>386	Identifier	duration
>387	IfStatement	if ( duration < static_min )
>388	ExpressionStatement	 
>389	AssignmentExpr	static_min = duration
>390	Identifier	duration
>391	Identifier	static_min
>392	Condition	 
>393	RelationalExpression	duration < static_min
>394	Identifier	static_min
>395	Identifier	duration
>396	ExpressionStatement	 
>397	Expression	duration = std 
>398	RelationalExpression	std 
>399	CallExpression	( end - start ) . count ( )
>400	ArgumentList	 
>401	Callee	( end - start ) . count
>402	MemberAccess	( end - start ) . count
>403	Identifier	count
>404	AdditiveExpression	end - start
>405	Identifier	start
>406	Identifier	end
>407	Identifier	std 
>408	AssignmentExpr	duration = std 
>409	RelationalExpression	std 
>410	Identifier	double
>411	Identifier	std 
>412	Identifier	duration
>413	Statement	 
>414	ExpressionStatement	 
>415	AssignmentExpr	end = std 
>416	CallExpression	std 
>417	ArgumentList	 
>418	Callee	std 
>419	Identifier	std 
>420	Identifier	end
>421	Statement	 
>422	ExpressionStatement	 
>423	CallExpression	osmium 
>424	ArgumentList	tmp_buffer
>425	Argument	static_location_handler
>426	Identifier	static_location_handler
>427	Argument	tmp_buffer
>428	Identifier	tmp_buffer
>429	Callee	osmium 
>430	Identifier	osmium 
>431	ExpressionStatement	 
>432	AssignmentExpr	start = std 
>433	CallExpression	std 
>434	ArgumentList	 
>435	Callee	std 
>436	Identifier	std 
>437	Identifier	start
>438	Statement	 
>439	IdentifierDeclStatement	 
>440	IdentifierDecl	static_location_handler ( static_index )
>441	Identifier	static_index
>442	Identifier	static_location_handler
>443	IdentifierDeclType	static_location_handler_type
>444	IdentifierDeclStatement	 
>445	IdentifierDecl	static_index
>446	Identifier	static_index
>447	IdentifierDeclType	static_index_type
>448	CompoundStatement	 
>449	ExpressionStatement	 
>450	CallExpression	tmp_buffer . commit ( )
>451	ArgumentList	 
>452	Callee	tmp_buffer . commit
>453	MemberAccess	tmp_buffer . commit
>454	Identifier	commit
>455	Identifier	tmp_buffer
>456	ExpressionStatement	 
>457	CallExpression	tmp_buffer . add_item ( item )
>458	ArgumentList	item
>459	Argument	item
>460	Identifier	item
>461	Callee	tmp_buffer . add_item
>462	MemberAccess	tmp_buffer . add_item
>463	Identifier	add_item
>464	Identifier	tmp_buffer
>465	Statement	 
>466	Statement	 
>467	Label	 
>468	Identifier	item
>469	Statement	 
>470	Statement	 
>471	Statement	 
>472	Statement	 
>473	Statement	 
>474	IdentifierDeclStatement	 
>475	IdentifierDecl	tmp_buffer ( buffer . committed ( ) )
>476	CallExpression	buffer . committed ( )
>477	ArgumentList	 
>478	Callee	buffer . committed
>479	MemberAccess	buffer . committed
>480	Identifier	committed
>481	Identifier	buffer
>482	Identifier	tmp_buffer
>483	IdentifierDeclType	osmium 
>484	UnaryExpression	 
>485	Identifier	i
>486	IncDec	++
>487	Condition	 
>488	RelationalExpression	i < runs
>489	Identifier	runs
>490	Identifier	i
>491	ForInit	 
>492	IdentifierDeclStatement	int i = 0 ;
>493	IdentifierDecl	i = 0
>494	AssignmentExpr	i = 0
>495	PrimaryExpression	0
>496	Identifier	i
>497	Identifier	i
>498	IdentifierDeclType	int
>499	IdentifierDeclStatement	 
>500	IdentifierDecl	dynamic_max = 0
>501	AssignmentExpr	dynamic_max = 0
>502	PrimaryExpression	0
>503	Identifier	dynamic_max
>504	Identifier	dynamic_max
>505	IdentifierDeclType	double
>506	IdentifierDeclStatement	 
>507	IdentifierDecl	dynamic_sum = 0
>508	AssignmentExpr	dynamic_sum = 0
>509	PrimaryExpression	0
>510	Identifier	dynamic_sum
>511	Identifier	dynamic_sum
>512	IdentifierDeclType	double
>513	ExpressionStatement	 
>514	CallExpression	max ( )
>515	ArgumentList	 
>516	Callee	max
>517	Identifier	max
>518	Statement	 
>519	Statement	 
>520	Statement	 
>521	Statement	 
>522	Statement	 
>523	Statement	 
>524	Statement	 
>525	Statement	 
>526	Statement	 
>527	Statement	 
>528	IdentifierDeclStatement	 
>529	IdentifierDecl	static_max = 0
>530	AssignmentExpr	static_max = 0
>531	PrimaryExpression	0
>532	Identifier	static_max
>533	Identifier	static_max
>534	IdentifierDeclType	double
>535	IdentifierDeclStatement	 
>536	IdentifierDecl	static_sum = 0
>537	AssignmentExpr	static_sum = 0
>538	PrimaryExpression	0
>539	Identifier	static_sum
>540	Identifier	static_sum
>541	IdentifierDeclType	double
>542	ExpressionStatement	 
>543	CallExpression	max ( )
>544	ArgumentList	 
>545	Callee	max
>546	Identifier	max
>547	Statement	 
>548	Statement	 
>549	Statement	 
>550	Statement	 
>551	Statement	 
>552	Statement	 
>553	Statement	 
>554	Statement	 
>555	Statement	 
>556	Statement	 
>557	ExpressionStatement	 
>558	ShiftExpression	std 
>559	ShiftExpression	\"runs
>560	ShiftExpression	runs << \"\n\"
>561	PrimaryExpression	\"\n\"
>562	Identifier	runs
>563	PrimaryExpression	\"runs
>564	Identifier	std 
>565	ExpressionStatement	 
>566		std 
>567	ShiftExpression	\"input
>568	ShiftExpression	input_filename << \" buffer_size=\" << buffer_size << \"MBytes\n\"
>569	ShiftExpression	\" buffer_size=\" << buffer_size << \"MBytes\n\"
>570	ShiftExpression	buffer_size << \"MBytes\n\"
>571	PrimaryExpression	\"MBytes\n\"
>572	Identifier	buffer_size
>573	PrimaryExpression	\" buffer_size=\"
>574	Identifier	input_filename
>575	PrimaryExpression	\"input
>576	Identifier	std 
>577	ExpressionStatement	 
>578	Statement	 
>579	Statement	 
>580	Statement	 
>581	Statement	 
>582	Statement	 
>583	Statement	 
>584	Statement	 
>585	Statement	 
>586	Statement	 
>587	Statement	 
>588	Statement	 
>589	Statement	 
>590	Statement	 
>591	Statement	 
>592	Statement	 
>593	Statement	 
>594	Statement	 
>595	Statement	 
>596	Statement	 
>597	Statement	 
>598	Statement	 
>599	ExpressionStatement	 
>600	AssignmentExpr	buffer_size = buffer . committed ( ) / ( 1024 * 1024 )
>601	MultiplicativeExpression	buffer . committed ( ) / ( 1024 * 1024 )
>602	MultiplicativeExpression	1024 * 1024
>603	PrimaryExpression	1024
>604	PrimaryExpression	1024
>605	CallExpression	buffer . committed ( )
>606	ArgumentList	 
>607	Callee	buffer . committed
>608	MemberAccess	buffer . committed
>609	Identifier	committed
>610	Identifier	buffer
>611	Identifier	buffer_size
>612	Statement	 
>613	Statement	 
>614	ExpressionStatement	 
>615	CallExpression	instance ( )
>616	ArgumentList	 
>617	Callee	instance
>618	Identifier	instance
>619	Statement	 
>620	Statement	 
>621	Statement	 
>622	Statement	 
>623	Statement	 
>624	Statement	 
>625	Statement	 
>626	Statement	 
>627	Statement	 
>628	Statement	 
>629	Statement	 
>630	Statement	 
>631	Statement	 
>632	Statement	 
>633	Statement	 
>634	Statement	 
>635	Statement	 
>636	Statement	 
>637	Statement	 
>638	Statement	 
>639	IdentifierDeclStatement	 
>640	IdentifierDecl	buffer = osmium 
>641	AssignmentExpr	buffer = osmium 
>642	CallExpression	osmium 
>643	ArgumentList	input_filename
>644	Argument	input_filename
>645	Identifier	input_filename
>646	Callee	osmium 
>647	Identifier	osmium 
>648	Identifier	buffer
>649	Identifier	buffer
>650	IdentifierDeclType	osmium 
>651	IdentifierDeclStatement	 
>652	IdentifierDecl	input_filename = argv [ 1 ]
>653	AssignmentExpr	input_filename = argv [ 1 ]
>654	ArrayIndexing	argv [ 1 ]
>655	PrimaryExpression	1
>656	Identifier	argv
>657	Identifier	input_filename
>658	Identifier	input_filename
>659	IdentifierDeclType	std 
>660	IfStatement	if ( argc != 2 )
>661	CompoundStatement	 
>662	ExpressionStatement	 
>663	CallExpression	exit ( 1 )
>664	ArgumentList	1
>665	Argument	1
>666	PrimaryExpression	1
>667	Callee	exit
>668	Identifier	exit
>669	ExpressionStatement	 
>670	ShiftExpression	std 
>671	ShiftExpression	\"Usage
>672	ShiftExpression	argv [ 0 ] << \" OSMFILE\n\"
>673	PrimaryExpression	\" OSMFILE\n\"
>674	ArrayIndexing	argv [ 0 ]
>675	PrimaryExpression	0
>676	Identifier	argv
>677	PrimaryExpression	\"Usage
>678	Identifier	std 
>679	Condition	 
>680	EqualityExpression	argc != 2
>681	PrimaryExpression	2
>682	Identifier	argc
<13=22,21,14
<14=18,15
<15=17,16
<18=20,19
<22=660,651,639,638,637,636,635,634,633,632,631,630,629,628,627,626,625,624,623,622,621,620,619,614,613,612,599,598,597,596,595,594,593,592,591,590,589,588,587,586,585,584,583,582,23,35,47,59,63,83,103,123,130,148,166,184,191,207,223,232,241,499,506,513,518,519,520,521,522,523,524,525,526,527,528,535,542,547,548,549,550,551,552,553,554,555,556,557,565,577,578,579,580,581
<23=24
<24=34,25
<25=33,26
<26=32,27
<27=31,28
<28=30,29
<35=36
<36=46,37
<37=45,38
<38=44,39
<39=43,40
<40=42,41
<47=48
<48=58,49
<49=57,50
<50=56,51
<51=55,52
<52=54,53
<59=60
<60=62,61
<63=64
<64=82,81,65
<65=80,66
<66=68,67
<68=78,69
<69=70
<70=71
<71=73,72
<73=77,74
<74=76,75
<78=79
<83=84
<84=102,101,85
<85=100,86
<86=88,87
<88=98,89
<89=90
<90=91
<91=93,92
<93=97,94
<94=96,95
<98=99
<103=104
<104=122,121,105
<105=120,106
<106=108,107
<108=118,109
<109=110
<110=111
<111=113,112
<113=117,114
<114=116,115
<118=119
<123=124
<124=129,128,125
<125=127,126
<130=131
<131=147,146,132
<132=145,133
<133=135,134
<135=143,136
<136=137
<137=138
<138=140,139
<140=142,141
<143=144
<148=149
<149=165,164,150
<150=163,151
<151=153,152
<153=161,154
<154=155
<155=156
<156=158,157
<158=160,159
<161=162
<166=167
<167=183,182,168
<168=181,169
<169=171,170
<171=179,172
<172=173
<173=174
<174=176,175
<176=178,177
<179=180
<184=185
<185=190,189,186
<186=188,187
<191=192
<192=206,193
<193=205,194
<194=204,195
<195=203,196
<196=202,197
<197=201,198
<198=200,199
<207=208
<208=222,209
<209=221,210
<210=220,211
<211=219,212
<212=218,213
<213=217,214
<214=216,215
<223=224
<224=231,230,225
<225=229,226
<226=228,227
<232=233
<233=240,239,234
<234=238,235
<235=237,236
<241=491,487,484,242
<242=373,243
<243=363,362,361,360,359,358,356,355,354,337,323,316,309,308,301,292,291,284,283,266,257,248,244
<244=245
<245=247,246
<248=253,249
<249=250
<250=252,251
<253=254
<254=256,255
<257=262,258
<258=259
<259=261,260
<262=263
<263=265,264
<266=267
<267=278,268
<268=277,269
<269=271,270
<271=272
<272=274,273
<274=276,275
<278=282,279
<279=281,280
<284=285
<285=290,286
<286=288,287
<288=289
<292=293
<293=299,294
<294=297,295
<295=296
<297=298
<299=300
<301=302
<302=307,303
<303=305,304
<305=306
<309=310
<310=312,311
<312=313
<313=315,314
<316=317
<317=322,321,318
<318=320,319
<323=324
<324=336,335,325
<325=334,326
<326=330,327
<327=328
<328=329
<330=331
<331=333,332
<337=345,338
<338=339
<339=341,340
<341=342
<342=344,343
<345=346
<346=350,347
<347=348
<348=349
<350=351
<351=353,352
<356=357
<363=364
<364=372,371,365
<365=367,366
<367=368
<368=370,369
<373=474,473,472,471,470,469,467,466,465,448,444,439,438,431,422,421,414,413,396,387,378,374
<374=375
<375=377,376
<378=383,379
<379=380
<380=382,381
<383=384
<384=386,385
<387=392,388
<388=389
<389=391,390
<392=393
<393=395,394
<396=397
<397=408,398
<398=407,399
<399=401,400
<401=402
<402=404,403
<404=406,405
<408=412,409
<409=411,410
<414=415
<415=420,416
<416=418,417
<418=419
<422=423
<423=429,424
<424=427,425
<425=426
<427=428
<429=430
<431=432
<432=437,433
<433=435,434
<435=436
<439=440
<440=443,442,441
<444=445
<445=447,446
<448=456,449
<449=450
<450=452,451
<452=453
<453=455,454
<456=457
<457=461,458
<458=459
<459=460
<461=462
<462=464,463
<467=468
<474=475
<475=483,482,476
<476=478,477
<478=479
<479=481,480
<484=486,485
<487=488
<488=490,489
<491=492
<492=493
<493=498,497,494
<494=496,495
<499=500
<500=505,504,501
<501=503,502
<506=507
<507=512,511,508
<508=510,509
<513=514
<514=516,515
<516=517
<528=529
<529=534,533,530
<530=532,531
<535=536
<536=541,540,537
<537=539,538
<542=543
<543=545,544
<545=546
<557=558
<558=564,559
<559=563,560
<560=562,561
<565=566
<566=576,567
<567=575,568
<568=574,569
<569=573,570
<570=572,571
<599=600
<600=611,601
<601=605,602
<602=604,603
<605=607,606
<607=608
<608=610,609
<614=615
<615=617,616
<617=618
<639=640
<640=650,649,641
<641=648,642
<642=646,643
<643=644
<644=645
<646=647
<651=652
<652=659,658,653
<653=657,654
<654=656,655
<660=679,661
<661=669,662
<662=663
<663=667,664
<664=665
<665=666
<667=668
<669=670
<670=678,671
<671=677,672
<672=674,673
<674=676,675
<679=680
<680=682,681
