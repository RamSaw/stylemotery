>9	FunctionDef	GetServerIP ()
>10	ParameterList	 
>11	ReturnType	unsigned long
>12	CompoundStatement	 
>13	ExpressionStatement	 
>14	MemberAccess	sin_addr . s_addr
>15	Identifier	s_addr
>16	Identifier	sin_addr
>17	Statement	 
>18	Statement	 
>19	Statement	 
>20	Statement	 
>21	Statement	 
>22	Statement	 
>23	Statement	 
>24	Statement	 
>25	Statement	 
>26	Statement	 
>27	Statement	 
>28	Statement	 
>29	Statement	 
>30	Statement	 
>35	FunctionDef	UDPsocket ()
>36	ParameterList	 
>37	ReturnType	int
>38	CompoundStatement	 
>39	ReturnStatement	 
>40	Identifier	s
>41	IfStatement	if ( s == INVALID_SOCKET )
>42	CompoundStatement	 
>43	ExpressionStatement	 
>44	CallExpression	I_Error ( \"can't create socket
>45	ArgumentList	\"can't create socket
>46	Argument	strerror ( errno )
>47	CallExpression	strerror ( errno )
>48	ArgumentList	errno
>49	Argument	errno
>50	Identifier	errno
>51	Callee	strerror
>52	Identifier	strerror
>53	Argument	\"can't create socket
>54	PrimaryExpression	\"can't create socket
>55	Callee	I_Error
>56	Identifier	I_Error
>57	IdentifierDeclStatement	 
>58	IdentifierDecl	err = WSAGetLastError ( )
>59	AssignmentExpr	err = WSAGetLastError ( )
>60	CallExpression	WSAGetLastError ( )
>61	ArgumentList	 
>62	Callee	WSAGetLastError
>63	Identifier	WSAGetLastError
>64	Identifier	err
>65	Identifier	err
>66	IdentifierDeclType	int
>67	Condition	 
>68	EqualityExpression	s == INVALID_SOCKET
>69	Identifier	INVALID_SOCKET
>70	Identifier	s
>71	ExpressionStatement	 
>72	AssignmentExpr	s = socket ( AF_INET , SOCK_DGRAM , IPPROTO_UDP )
>73	CallExpression	socket ( AF_INET , SOCK_DGRAM , IPPROTO_UDP )
>74	ArgumentList	AF_INET
>75	Argument	IPPROTO_UDP
>76	Identifier	IPPROTO_UDP
>77	Argument	SOCK_DGRAM
>78	Identifier	SOCK_DGRAM
>79	Argument	AF_INET
>80	Identifier	AF_INET
>81	Callee	socket
>82	Identifier	socket
>83	Identifier	s
>84	IdentifierDeclStatement	 
>85	IdentifierDecl	s
>86	Identifier	s
>87	IdentifierDeclType	int
>101	FunctionDef	BindToLocalPort (int s , int port)
>102	ParameterList	int s , int port
>103	Parameter	 
>104	Identifier	port
>105	ParameterType	int
>106	Parameter	 
>107	Identifier	s
>108	ParameterType	int
>109	ReturnType	void
>110	CompoundStatement	 
>111	ExpressionStatement	 
>112	AssignmentExpr	v = bind ( s , ( sockaddr * ) & address , sizeof ( address ) )
>113	CallExpression	bind ( s , ( sockaddr * ) & address , sizeof ( address ) )
>114	ArgumentList	s
>115	Argument	sizeof ( address )
>116	SizeofExpr	sizeof ( address )
>117	SizeofOperand	address
>118	Sizeof	sizeof
>119	Argument	( sockaddr * ) & address
>120	CastExpression	( sockaddr * ) & address
>121	UnaryOp	& address
>122	Identifier	address
>123	UnaryOperator	&
>124	CastTarget	sockaddr *
>125	Argument	s
>126	Identifier	s
>127	Callee	bind
>128	Identifier	bind
>129	Identifier	v
>130	ExpressionStatement	 
>131	AssignmentExpr	address . sin_port = port
>132	Identifier	port
>133	MemberAccess	address . sin_port
>134	Identifier	sin_port
>135	Identifier	address
>136	ExpressionStatement	 
>137	AssignmentExpr	address . sin_addr . s_addr = INADDR_ANY
>138	Identifier	INADDR_ANY
>139	MemberAccess	address . sin_addr . s_addr
>140	Identifier	s_addr
>141	MemberAccess	address . sin_addr
>142	Identifier	sin_addr
>143	Identifier	address
>144	ExpressionStatement	 
>145	AssignmentExpr	address . sin_family = AF_INET
>146	Identifier	AF_INET
>147	MemberAccess	address . sin_family
>148	Identifier	sin_family
>149	Identifier	address
>150	ExpressionStatement	 
>151	CallExpression	memset ( & address , 0 , sizeof ( address ) )
>152	ArgumentList	& address
>153	Argument	sizeof ( address )
>154	SizeofExpr	sizeof ( address )
>155	SizeofOperand	address
>156	Sizeof	sizeof
>157	Argument	0
>158	PrimaryExpression	0
>159	Argument	& address
>160	UnaryOp	& address
>161	Identifier	address
>162	UnaryOperator	&
>163	Callee	memset
>164	Identifier	memset
>165	IdentifierDeclStatement	 
>166	IdentifierDecl	address
>167	Identifier	address
>168	IdentifierDeclType	struct sockaddr_in
>169	IdentifierDeclStatement	 
>170	IdentifierDecl	v
>171	Identifier	v
>172	IdentifierDeclType	int
>188	FunctionDef	PacketSend ()
>189	ParameterList	 
>190	ReturnType	void
>191	CompoundStatement	 
>192	CompoundStatement	 
>193	ExpressionStatement	 
>194	Statement	 
>195	Statement	 
>196	Statement	 
>197	Statement	 
>198	Statement	 
>199	Statement	 
>200	Statement	 
>201	Statement	 
>202	Statement	 
>203	Statement	 
>204	Statement	 
>205	Statement	 
>206	Statement	 
>207	Statement	 
>208	Statement	 
>209	Statement	 
>210	Statement	 
>211	Statement	 
>212	Statement	 
>213	Statement	 
>214	Statement	 
>215	Statement	 
>216	Statement	 
>217	Statement	 
>218	Statement	 
>219	Statement	 
>220	Statement	 
>221	Statement	 
>222	Statement	 
>223	Statement	 
>224	Statement	 
>225	Statement	 
>226	Statement	 
>227	Statement	 
>228	Statement	 
>229	Statement	 
>230	Statement	 
>231	Statement	 
>232	Statement	 
>233	ExpressionStatement	 
>234	MemberAccess	g -> doomcom . datalength
>235	Identifier	datalength
>236	PtrMemberAccess	g -> doomcom
>237	Identifier	doomcom
>238	Identifier	g
>239	Statement	 
>240	Statement	 
>241	Statement	 
>242	Statement	 
>243	Statement	 
>244	ExpressionStatement	 
>245	AssignmentExpr	buffer . buf = ( char * ) & sw
>246	CastExpression	( char * ) & sw
>247	UnaryOp	& sw
>248	Identifier	sw
>249	UnaryOperator	&
>250	CastTarget	char *
>251	MemberAccess	buffer . buf
>252	Identifier	buf
>253	Identifier	buffer
>254	IdentifierDeclStatement	 
>255	IdentifierDecl	buffer
>256	Identifier	buffer
>257	IdentifierDeclType	WSABUF
>258	CompoundStatement	 
>259	ExpressionStatement	 
>260	MemberAccess	g -> netbuffer -> cmds [ c ] . buttons
>261	Identifier	buttons
>262	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>263	Identifier	c
>264	PtrMemberAccess	g -> netbuffer -> cmds
>265	Identifier	cmds
>266	PtrMemberAccess	g -> netbuffer
>267	Identifier	netbuffer
>268	Identifier	g
>269	Statement	 
>270	Statement	 
>271	Statement	 
>272	Statement	 
>273	Statement	 
>274	Statement	 
>275	Statement	 
>276	Statement	 
>277	Statement	 
>278	Statement	 
>279	ExpressionStatement	 
>280	Statement	 
>281	Statement	 
>282	Statement	 
>283	Statement	 
>284	Statement	 
>285	Statement	 
>286	Statement	 
>287	Statement	 
>288	Statement	 
>289	Statement	 
>290	Statement	 
>291	Statement	 
>292	Statement	 
>293	Statement	 
>294	Statement	 
>295	Statement	 
>296	Statement	 
>297	Statement	 
>298	Statement	 
>299	Statement	 
>300	Statement	 
>301	Statement	 
>302	Statement	 
>303	ExpressionStatement	 
>304	MemberAccess	g -> netbuffer -> cmds [ c ] . sidemove
>305	Identifier	sidemove
>306	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>307	Identifier	c
>308	PtrMemberAccess	g -> netbuffer -> cmds
>309	Identifier	cmds
>310	PtrMemberAccess	g -> netbuffer
>311	Identifier	netbuffer
>312	Identifier	g
>313	Statement	 
>314	Statement	 
>315	Statement	 
>316	Statement	 
>317	Statement	 
>318	Statement	 
>319	Statement	 
>320	Statement	 
>321	Statement	 
>322	Statement	 
>323	ExpressionStatement	 
>324	MemberAccess	g -> netbuffer -> cmds [ c ] . forwardmove
>325	Identifier	forwardmove
>326	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>327	Identifier	c
>328	PtrMemberAccess	g -> netbuffer -> cmds
>329	Identifier	cmds
>330	PtrMemberAccess	g -> netbuffer
>331	Identifier	netbuffer
>332	Identifier	g
>333	Statement	 
>334	Statement	 
>335	Statement	 
>336	Statement	 
>337	Statement	 
>338	Statement	 
>339	Statement	 
>340	Statement	 
>341	Statement	 
>342	Statement	 
>343	Statement	 
>344	Statement	 
>345	Statement	 
>346	ExpressionStatement	 
>347	PtrMemberAccess	g -> netbuffer -> numtics
>348	Identifier	numtics
>349	PtrMemberAccess	g -> netbuffer
>350	Identifier	netbuffer
>351	Identifier	g
>352	Statement	 
>353	Statement	 
>354	Statement	 
>355	ExpressionStatement	 
>356	AssignmentExpr	c = 0
>357	PrimaryExpression	0
>358	Identifier	c
>359	Statement	 
>360	Statement	 
>361	ExpressionStatement	 
>362	PtrMemberAccess	g -> netbuffer -> numtics
>363	Identifier	numtics
>364	PtrMemberAccess	g -> netbuffer
>365	Identifier	netbuffer
>366	Identifier	g
>367	Statement	 
>368	Statement	 
>369	Statement	 
>370	Statement	 
>371	Statement	 
>372	ExpressionStatement	 
>373	PtrMemberAccess	g -> netbuffer -> starttic
>374	Identifier	starttic
>375	PtrMemberAccess	g -> netbuffer
>376	Identifier	netbuffer
>377	Identifier	g
>378	Statement	 
>379	Statement	 
>380	Statement	 
>381	Statement	 
>382	Statement	 
>383	ExpressionStatement	 
>384	PtrMemberAccess	g -> netbuffer -> retransmitfrom
>385	Identifier	retransmitfrom
>386	PtrMemberAccess	g -> netbuffer
>387	Identifier	netbuffer
>388	Identifier	g
>389	Statement	 
>390	Statement	 
>391	Statement	 
>392	Statement	 
>393	Statement	 
>394	ExpressionStatement	 
>395	PtrMemberAccess	g -> netbuffer -> player
>396	Identifier	player
>397	PtrMemberAccess	g -> netbuffer
>398	Identifier	netbuffer
>399	Identifier	g
>400	Statement	 
>401	Statement	 
>402	Statement	 
>403	Statement	 
>404	Statement	 
>405	ExpressionStatement	 
>406	Statement	 
>407	Statement	 
>408	Statement	 
>409	Statement	 
>410	Statement	 
>411	Statement	 
>412	Statement	 
>413	Statement	 
>414	Statement	 
>415	Statement	 
>416	Statement	 
>417	Statement	 
>418	Statement	 
>419	Statement	 
>420	Statement	 
>421	ExpressionStatement	 
>422	Statement	 
>423	Statement	 
>424	Statement	 
>425	Statement	 
>426	Statement	 
>427	Statement	 
>428	Statement	 
>429	Statement	 
>430	Statement	 
>431	Statement	 
>432	Statement	 
>433	Statement	 
>434	Statement	 
>435	IdentifierDeclStatement	 
>436	IdentifierDecl	sw
>437	Identifier	sw
>438	IdentifierDeclType	doomdata_t
>439	IdentifierDeclStatement	 
>440	IdentifierDecl	c
>441	Identifier	c
>442	IdentifierDeclType	int
>462	FunctionDef	PacketGet ()
>463	ParameterList	 
>464	ReturnType	void
>465	CompoundStatement	 
>466	CompoundStatement	 
>467	ExpressionStatement	 
>468	AssignmentExpr	g -> netbuffer -> cmds [ c ] . buttons = sw . cmds [ c ] . buttons
>469	MemberAccess	sw . cmds [ c ] . buttons
>470	Identifier	buttons
>471	ArrayIndexing	sw . cmds [ c ]
>472	Identifier	c
>473	MemberAccess	sw . cmds
>474	Identifier	cmds
>475	Identifier	sw
>476	MemberAccess	g -> netbuffer -> cmds [ c ] . buttons
>477	Identifier	buttons
>478	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>479	Identifier	c
>480	PtrMemberAccess	g -> netbuffer -> cmds
>481	Identifier	cmds
>482	PtrMemberAccess	g -> netbuffer
>483	Identifier	netbuffer
>484	Identifier	g
>485	Statement	 
>486	ExpressionStatement	 
>487	AssignmentExpr	g -> netbuffer -> cmds [ c ] . angleturn = ntohs ( sw . cmds [ c ] . angleturn )
>488	CallExpression	ntohs ( sw . cmds [ c ] . angleturn )
>489	ArgumentList	sw . cmds [ c ] . angleturn
>490	Argument	sw . cmds [ c ] . angleturn
>491	MemberAccess	sw . cmds [ c ] . angleturn
>492	Identifier	angleturn
>493	ArrayIndexing	sw . cmds [ c ]
>494	Identifier	c
>495	MemberAccess	sw . cmds
>496	Identifier	cmds
>497	Identifier	sw
>498	Callee	ntohs
>499	Identifier	ntohs
>500	MemberAccess	g -> netbuffer -> cmds [ c ] . angleturn
>501	Identifier	angleturn
>502	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>503	Identifier	c
>504	PtrMemberAccess	g -> netbuffer -> cmds
>505	Identifier	cmds
>506	PtrMemberAccess	g -> netbuffer
>507	Identifier	netbuffer
>508	Identifier	g
>509	Statement	 
>510	ExpressionStatement	 
>511	AssignmentExpr	g -> netbuffer -> cmds [ c ] . sidemove = sw . cmds [ c ] . sidemove
>512	MemberAccess	sw . cmds [ c ] . sidemove
>513	Identifier	sidemove
>514	ArrayIndexing	sw . cmds [ c ]
>515	Identifier	c
>516	MemberAccess	sw . cmds
>517	Identifier	cmds
>518	Identifier	sw
>519	MemberAccess	g -> netbuffer -> cmds [ c ] . sidemove
>520	Identifier	sidemove
>521	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>522	Identifier	c
>523	PtrMemberAccess	g -> netbuffer -> cmds
>524	Identifier	cmds
>525	PtrMemberAccess	g -> netbuffer
>526	Identifier	netbuffer
>527	Identifier	g
>528	Statement	 
>529	ExpressionStatement	 
>530	AssignmentExpr	g -> netbuffer -> cmds [ c ] . forwardmove = sw . cmds [ c ] . forwardmove
>531	MemberAccess	sw . cmds [ c ] . forwardmove
>532	Identifier	forwardmove
>533	ArrayIndexing	sw . cmds [ c ]
>534	Identifier	c
>535	MemberAccess	sw . cmds
>536	Identifier	cmds
>537	Identifier	sw
>538	MemberAccess	g -> netbuffer -> cmds [ c ] . forwardmove
>539	Identifier	forwardmove
>540	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>541	Identifier	c
>542	PtrMemberAccess	g -> netbuffer -> cmds
>543	Identifier	cmds
>544	PtrMemberAccess	g -> netbuffer
>545	Identifier	netbuffer
>546	Identifier	g
>547	Statement	 
>548	Statement	 
>549	Statement	 
>550	Statement	 
>551	ExpressionStatement	 
>552	PtrMemberAccess	g -> netbuffer -> numtics
>553	Identifier	numtics
>554	PtrMemberAccess	g -> netbuffer
>555	Identifier	netbuffer
>556	Identifier	g
>557	Statement	 
>558	Statement	 
>559	Statement	 
>560	ExpressionStatement	 
>561	AssignmentExpr	c = 0
>562	PrimaryExpression	0
>563	Identifier	c
>564	Statement	 
>565	Statement	 
>566	ExpressionStatement	 
>567	AssignmentExpr	g -> netbuffer -> numtics = sw . numtics
>568	MemberAccess	sw . numtics
>569	Identifier	numtics
>570	Identifier	sw
>571	PtrMemberAccess	g -> netbuffer -> numtics
>572	Identifier	numtics
>573	PtrMemberAccess	g -> netbuffer
>574	Identifier	netbuffer
>575	Identifier	g
>576	Statement	 
>577	ExpressionStatement	 
>578	AssignmentExpr	g -> netbuffer -> starttic = sw . starttic
>579	MemberAccess	sw . starttic
>580	Identifier	starttic
>581	Identifier	sw
>582	PtrMemberAccess	g -> netbuffer -> starttic
>583	Identifier	starttic
>584	PtrMemberAccess	g -> netbuffer
>585	Identifier	netbuffer
>586	Identifier	g
>587	Statement	 
>588	ExpressionStatement	 
>589	AssignmentExpr	g -> netbuffer -> retransmitfrom = sw . retransmitfrom
>590	MemberAccess	sw . retransmitfrom
>591	Identifier	retransmitfrom
>592	Identifier	sw
>593	PtrMemberAccess	g -> netbuffer -> retransmitfrom
>594	Identifier	retransmitfrom
>595	PtrMemberAccess	g -> netbuffer
>596	Identifier	netbuffer
>597	Identifier	g
>598	Statement	 
>599	ExpressionStatement	 
>600	AssignmentExpr	g -> netbuffer -> player = sw . player
>601	MemberAccess	sw . player
>602	Identifier	player
>603	Identifier	sw
>604	PtrMemberAccess	g -> netbuffer -> player
>605	Identifier	player
>606	PtrMemberAccess	g -> netbuffer
>607	Identifier	netbuffer
>608	Identifier	g
>609	Statement	 
>610	ExpressionStatement	 
>611	AssignmentExpr	g -> netbuffer -> checksum = ntohl ( sw . checksum )
>612	CallExpression	ntohl ( sw . checksum )
>613	ArgumentList	sw . checksum
>614	Argument	sw . checksum
>615	MemberAccess	sw . checksum
>616	Identifier	checksum
>617	Identifier	sw
>618	Callee	ntohl
>619	Identifier	ntohl
>620	PtrMemberAccess	g -> netbuffer -> checksum
>621	Identifier	checksum
>622	PtrMemberAccess	g -> netbuffer
>623	Identifier	netbuffer
>624	Identifier	g
>625	Statement	 
>626	ExpressionStatement	 
>627	AssignmentExpr	g -> doomcom . datalength = ( short ) num_recieved
>628	CastExpression	( short ) num_recieved
>629	Identifier	num_recieved
>630	CastTarget	short
>631	MemberAccess	g -> doomcom . datalength
>632	Identifier	datalength
>633	PtrMemberAccess	g -> doomcom
>634	Identifier	doomcom
>635	Identifier	g
>636	Statement	 
>637	ExpressionStatement	 
>638	AssignmentExpr	g -> doomcom . remotenode = i
>639	Identifier	i
>640	MemberAccess	g -> doomcom . remotenode
>641	Identifier	remotenode
>642	PtrMemberAccess	g -> doomcom
>643	Identifier	doomcom
>644	Identifier	g
>645	Statement	 
>646	ExpressionStatement	 
>647	AssignmentExpr	i = source
>648	Identifier	source
>649	Identifier	i
>650	ExpressionStatement	 
>651	CallExpression	DoomLib 
>652	ArgumentList	sw . sourceDest
>653	Argument	& dest
>654	UnaryOp	& dest
>655	Identifier	dest
>656	UnaryOperator	&
>657	Argument	& source
>658	UnaryOp	& source
>659	Identifier	source
>660	UnaryOperator	&
>661	Argument	sw . sourceDest
>662	MemberAccess	sw . sourceDest
>663	Identifier	sourceDest
>664	Identifier	sw
>665	Callee	DoomLib 
>666	Identifier	DoomLib 
>667	IdentifierDeclStatement	 
>668	IdentifierDecl	dest
>669	Identifier	dest
>670	IdentifierDeclType	int
>671	IdentifierDeclStatement	 
>672	IdentifierDecl	source
>673	Identifier	source
>674	IdentifierDeclType	int
>675	IfStatement	if ( c == SOCKET_ERROR )
>676	CompoundStatement	 
>677	ReturnStatement	 
>678	ExpressionStatement	 
>679	AssignmentExpr	g -> doomcom . remotenode = - 1
>680	UnaryOp	- 1
>681	PrimaryExpression	1
>682	UnaryOperator	-
>683	MemberAccess	g -> doomcom . remotenode
>684	Identifier	remotenode
>685	PtrMemberAccess	g -> doomcom
>686	Identifier	doomcom
>687	Identifier	g
>688	Statement	 
>689	Condition	 
>690	EqualityExpression	c == SOCKET_ERROR
>691	Identifier	SOCKET_ERROR
>692	Identifier	c
>693	ExpressionStatement	 
>694	AssignmentExpr	c = DoomLib 
>695	CallExpression	DoomLib 
>696	ArgumentList	( char * ) & sw
>697	Argument	& num_recieved
>698	UnaryOp	& num_recieved
>699	Identifier	num_recieved
>700	UnaryOperator	&
>701	Argument	( char * ) & sw
>702	CastExpression	( char * ) & sw
>703	UnaryOp	& sw
>704	Identifier	sw
>705	UnaryOperator	&
>706	CastTarget	char *
>707	Callee	DoomLib 
>708	Identifier	DoomLib 
>709	Identifier	c
>710	ExpressionStatement	 
>711	AssignmentExpr	fromlen = sizeof ( fromaddress )
>712	SizeofExpr	sizeof ( fromaddress )
>713	SizeofOperand	fromaddress
>714	Sizeof	sizeof
>715	Identifier	fromlen
>716	ExpressionStatement	 
>717	AssignmentExpr	buffer . len = sizeof ( sw )
>718	SizeofExpr	sizeof ( sw )
>719	SizeofOperand	sw
>720	Sizeof	sizeof
>721	MemberAccess	buffer . len
>722	Identifier	len
>723	Identifier	buffer
>724	ExpressionStatement	 
>725	AssignmentExpr	buffer . buf = ( char * ) & sw
>726	CastExpression	( char * ) & sw
>727	UnaryOp	& sw
>728	Identifier	sw
>729	UnaryOperator	&
>730	CastTarget	char *
>731	MemberAccess	buffer . buf
>732	Identifier	buf
>733	Identifier	buffer
>734	IdentifierDeclStatement	 
>735	IdentifierDecl	flags = 0
>736	AssignmentExpr	flags = 0
>737	PrimaryExpression	0
>738	Identifier	flags
>739	Identifier	flags
>740	IdentifierDeclType	DWORD
>741	IdentifierDecl	num_recieved
>742	Identifier	num_recieved
>743	IdentifierDeclType	DWORD
>744	IdentifierDeclStatement	 
>745	IdentifierDecl	buffer
>746	Identifier	buffer
>747	IdentifierDeclType	WSABUF
>748	IdentifierDeclStatement	 
>749	IdentifierDecl	sw
>750	Identifier	sw
>751	IdentifierDeclType	doomdata_t
>752	IdentifierDeclStatement	 
>753	IdentifierDecl	fromlen
>754	Identifier	fromlen
>755	IdentifierDeclType	int
>756	IdentifierDeclStatement	 
>757	IdentifierDecl	fromaddress
>758	Identifier	fromaddress
>759	IdentifierDeclType	struct sockaddr_in
>760	IdentifierDeclStatement	 
>761	IdentifierDecl	c
>762	Identifier	c
>763	IdentifierDeclType	int
>764	IdentifierDeclStatement	 
>765	IdentifierDecl	i
>766	Identifier	i
>767	IdentifierDeclType	int
>826	FunctionDef	I_TrySetupNetwork ()
>827	ParameterList	 
>828	ReturnType	static int
>829	CompoundStatement	 
>830	ReturnStatement	 
>831	PrimaryExpression	1
>835	FunctionDef	I_InitNetwork ()
>836	ParameterList	 
>837	ReturnType	void
>838	CompoundStatement	 
>839	CompoundStatement	 
>840	ExpressionStatement	 
>841	AssignmentExpr	g -> doomcom . ticdup = 9
>842	PrimaryExpression	9
>843	MemberAccess	g -> doomcom . ticdup
>844	Identifier	ticdup
>845	PtrMemberAccess	g -> doomcom
>846	Identifier	doomcom
>847	Identifier	g
>848	Statement	 
>849	Statement	 
>850	Statement	 
>851	Statement	 
>852	Statement	 
>853	Statement	 
>854	Statement	 
>855	Statement	 
>856	Statement	 
>857	Statement	 
>858	Statement	 
>859	Statement	 
>860	ExpressionStatement	 
>861	AssignmentExpr	g -> doomcom . ticdup = 1
>862	PrimaryExpression	1
>863	MemberAccess	g -> doomcom . ticdup
>864	Identifier	ticdup
>865	PtrMemberAccess	g -> doomcom
>866	Identifier	doomcom
>867	Identifier	g
>868	Statement	 
>869	Statement	 
>870	Statement	 
>871	Statement	 
>872	Statement	 
>873	Statement	 
>874	Statement	 
>875	Statement	 
>876	Statement	 
>877	Statement	 
>878	Statement	 
>879	Statement	 
>880	ExpressionStatement	 
>881	AdditiveExpression	g -> myargv [ i + 1 ] [ 0 ] - '0'
>882	PrimaryExpression	'0'
>883	ArrayIndexing	g -> myargv [ i + 1 ] [ 0 ]
>884	PrimaryExpression	0
>885	ArrayIndexing	g -> myargv [ i + 1 ]
>886	AdditiveExpression	i + 1
>887	PrimaryExpression	1
>888	Identifier	i
>889	PtrMemberAccess	g -> myargv
>890	Identifier	myargv
>891	Identifier	g
>892	Statement	 
>893	Statement	 
>894	Statement	 
>895	Statement	 
>896	Statement	 
>897	Statement	 
>898	Statement	 
>899	Statement	 
>900	Statement	 
>901	Statement	 
>902	Statement	 
>903	Statement	 
>904	Statement	 
>905	Statement	 
>906	Statement	 
>907	Statement	 
>908	Statement	 
>909	Statement	 
>910	Statement	 
>911	Statement	 
>912	Statement	 
>913	ExpressionStatement	 
>914	AssignmentExpr	i = M_CheckParm ( \"-dup\" )
>915	CallExpression	M_CheckParm ( \"-dup\" )
>916	ArgumentList	\"-dup\"
>917	Argument	\"-dup\"
>918	PrimaryExpression	\"-dup\"
>919	Callee	M_CheckParm
>920	Identifier	M_CheckParm
>921	Identifier	i
>922	ExpressionStatement	 
>923	Statement	 
>924	Statement	 
>925	Statement	 
>926	Statement	 
>927	Statement	 
>928	Statement	 
>929	Statement	 
>930	Statement	 
>931	Statement	 
>932	Statement	 
>933	Statement	 
>934	Statement	 
>935	Statement	 
>936	Statement	 
>937	Statement	 
>938	Statement	 
>939	Statement	 
>940	Statement	 
>941	IdentifierDeclStatement	 
>942	IdentifierDecl	a = 0
>943	AssignmentExpr	a = 0
>944	PrimaryExpression	0
>945	Identifier	a
>946	Identifier	a
>947	IdentifierDeclType	int
>948	IdentifierDeclStatement	 
>949	IdentifierDecl	p
>950	Identifier	p
>951	IdentifierDeclType	int
>952	IdentifierDeclStatement	 
>953	IdentifierDecl	i
>954	Identifier	i
>955	IdentifierDeclType	int
>956	IdentifierDeclStatement	 
>957	IdentifierDecl	trueval = true
>958	AssignmentExpr	trueval = true
>959	Identifier	true
>960	Identifier	true
>961	Identifier	trueval
>962	IdentifierDeclType	qboolean
>980	FunctionDef	I_ShutdownNetwork ()
>981	ParameterList	 
>982	ReturnType	void
>983	CompoundStatement	 
>984	IfStatement	if ( globalNetworking )
>985	CompoundStatement	 
>986	ExpressionStatement	 
>987	AssignmentExpr	globalNetworking = false
>988	Identifier	false
>989	Identifier	globalNetworking
>990	ExpressionStatement	 
>991	CallExpression	DoomLib 
>992	ArgumentList	curPlayer
>993	Argument	curPlayer
>994	Identifier	curPlayer
>995	Callee	DoomLib 
>996	Identifier	DoomLib 
>997	ForStatement	for ( int player = 0 ; player < App -> Game -> Interface . GetNumPlayers ( ) ; ++ player )
>998	CompoundStatement	 
>999	CompoundStatement	 
>1000	ExpressionStatement	 
>1001	Statement	 
>1002	Statement	 
>1003	Statement	 
>1004	Statement	 
>1005	Statement	 
>1006	Statement	 
>1007	Statement	 
>1008	ExpressionStatement	 
>1009	Statement	 
>1010	Statement	 
>1011	Statement	 
>1012	Statement	 
>1013	Statement	 
>1014	Statement	 
>1015	Statement	 
>1016	Statement	 
>1017	Statement	 
>1018	ExpressionStatement	 
>1019	CallExpression	I_Printf ( \"[-] Shut down sendsocket for player %d\n\" , DoomLib 
>1020	ArgumentList	\"[-] Shut down sendsocket for player %d\n\"
>1021	Argument	DoomLib 
>1022	CallExpression	DoomLib 
>1023	ArgumentList	 
>1024	Callee	DoomLib 
>1025	Identifier	DoomLib 
>1026	Argument	\"[-] Shut down sendsocket for player %d\n\"
>1027	PrimaryExpression	\"[-] Shut down sendsocket for player %d\n\"
>1028	Callee	I_Printf
>1029	Identifier	I_Printf
>1030	Statement	 
>1031	Statement	 
>1032	Statement	 
>1033	Statement	 
>1034	Statement	 
>1035	Statement	 
>1036	Statement	 
>1037	Statement	 
>1038	Statement	 
>1039	CompoundStatement	 
>1040	ExpressionStatement	 
>1041	Statement	 
>1042	Statement	 
>1043	Statement	 
>1044	Statement	 
>1045	Statement	 
>1046	Statement	 
>1047	Statement	 
>1048	ExpressionStatement	 
>1049	Statement	 
>1050	Statement	 
>1051	Statement	 
>1052	Statement	 
>1053	Statement	 
>1054	Statement	 
>1055	Statement	 
>1056	Statement	 
>1057	Statement	 
>1058	ExpressionStatement	 
>1059	CallExpression	I_Printf ( \"[-] Shut down insocket for player %d\n\" , DoomLib 
>1060	ArgumentList	\"[-] Shut down insocket for player %d\n\"
>1061	Argument	DoomLib 
>1062	CallExpression	DoomLib 
>1063	ArgumentList	 
>1064	Callee	DoomLib 
>1065	Identifier	DoomLib 
>1066	Argument	\"[-] Shut down insocket for player %d\n\"
>1067	PrimaryExpression	\"[-] Shut down insocket for player %d\n\"
>1068	Callee	I_Printf
>1069	Identifier	I_Printf
>1070	Statement	 
>1071	Statement	 
>1072	Statement	 
>1073	Statement	 
>1074	Statement	 
>1075	Statement	 
>1076	Statement	 
>1077	Statement	 
>1078	Statement	 
>1079	ExpressionStatement	 
>1080	CallExpression	DoomLib 
>1081	ArgumentList	player
>1082	Argument	player
>1083	Identifier	player
>1084	Callee	DoomLib 
>1085	Identifier	DoomLib 
>1086	UnaryExpression	 
>1087	Identifier	player
>1088	IncDec	++
>1089	Condition	 
>1090	RelationalExpression	player < App -> Game -> Interface . GetNumPlayers ( )
>1091	CallExpression	App -> Game -> Interface . GetNumPlayers ( )
>1092	ArgumentList	 
>1093	Callee	App -> Game -> Interface . GetNumPlayers
>1094	MemberAccess	App -> Game -> Interface . GetNumPlayers
>1095	Identifier	GetNumPlayers
>1096	PtrMemberAccess	App -> Game -> Interface
>1097	Identifier	Interface
>1098	PtrMemberAccess	App -> Game
>1099	Identifier	Game
>1100	Identifier	App
>1101	Identifier	player
>1102	ForInit	 
>1103	IdentifierDeclStatement	int player = 0 ;
>1104	IdentifierDecl	player = 0
>1105	AssignmentExpr	player = 0
>1106	PrimaryExpression	0
>1107	Identifier	player
>1108	Identifier	player
>1109	IdentifierDeclType	int
>1110	IdentifierDeclStatement	 
>1111	IdentifierDecl	curPlayer = DoomLib 
>1112	AssignmentExpr	curPlayer = DoomLib 
>1113	CallExpression	DoomLib 
>1114	ArgumentList	 
>1115	Callee	DoomLib 
>1116	Identifier	DoomLib 
>1117	Identifier	curPlayer
>1118	Identifier	curPlayer
>1119	IdentifierDeclType	int
>1120	Condition	 
>1121	Identifier	globalNetworking
>1137	FunctionDef	I_NetCmd ()
>1138	ParameterList	 
>1139	ReturnType	void
>1140	CompoundStatement	 
>1141	CompoundStatement	 
>1142	ExpressionStatement	 
>1143	CallExpression	netsend ( )
>1144	ArgumentList	 
>1145	Callee	netsend
>1146	Identifier	netsend
>1147	Statement	 
>1148	Statement	 
>1149	Statement	 
>1150	Statement	 
>1151	Statement	 
>1152	Statement	 
>1153	Statement	 
>1154	Statement	 
>1155	Statement	 
>1156	Statement	 
>1157	Statement	 
<9=12,11,10
<12=30,29,28,27,26,25,24,23,22,21,20,19,18,17,13
<13=14
<14=16,15
<35=38,37,36
<38=84,71,41,39
<39=40
<41=67,42
<42=57,43
<43=44
<44=55,45
<45=53,46
<46=47
<47=51,48
<48=49
<49=50
<51=52
<53=54
<55=56
<57=58
<58=66,65,59
<59=64,60
<60=62,61
<62=63
<67=68
<68=70,69
<71=72
<72=83,73
<73=81,74
<74=79,77,75
<75=76
<77=78
<79=80
<81=82
<84=85
<85=87,86
<101=110,109,102
<102=106,103
<103=105,104
<106=108,107
<110=169,165,150,144,136,130,111
<111=112
<112=129,113
<113=127,114
<114=125,119,115
<115=116
<116=118,117
<119=120
<120=124,121
<121=123,122
<125=126
<127=128
<130=131
<131=133,132
<133=135,134
<136=137
<137=139,138
<139=141,140
<141=143,142
<144=145
<145=147,146
<147=149,148
<150=151
<151=163,152
<152=159,157,153
<153=154
<154=156,155
<157=158
<159=160
<160=162,161
<163=164
<165=166
<166=168,167
<169=170
<170=172,171
<188=191,190,189
<191=439,435,434,433,432,431,430,429,428,427,426,425,424,423,422,421,420,419,192,258,343,344,345,346,352,353,354,355,359,360,361,367,368,369,370,371,372,378,379,380,381,382,383,389,390,391,392,393,394,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418
<192=254,244,243,242,241,240,239,233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,214,213,212,211,210,209,208,207,206,205,204,203,202,201,200,199,198,197,196,195,194,193
<233=234
<234=236,235
<236=238,237
<244=245
<245=251,246
<246=250,247
<247=249,248
<251=253,252
<254=255
<255=257,256
<258=342,341,340,339,338,337,336,259,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,313,314,315,316,317,318,319,320,321,322,323,333,334,335
<259=260
<260=262,261
<262=264,263
<264=266,265
<266=268,267
<303=304
<304=306,305
<306=308,307
<308=310,309
<310=312,311
<323=324
<324=326,325
<326=328,327
<328=330,329
<330=332,331
<346=347
<347=349,348
<349=351,350
<355=356
<356=358,357
<361=362
<362=364,363
<364=366,365
<372=373
<373=375,374
<375=377,376
<383=384
<384=386,385
<386=388,387
<394=395
<395=397,396
<397=399,398
<435=436
<436=438,437
<439=440
<440=442,441
<462=465,464,463
<465=764,760,756,752,748,744,734,724,716,710,693,675,671,667,650,646,645,637,636,626,625,610,609,599,598,588,587,577,576,566,565,564,560,559,558,557,551,550,549,548,466
<466=547,529,528,510,509,486,485,467
<467=468
<468=476,469
<469=471,470
<471=473,472
<473=475,474
<476=478,477
<478=480,479
<480=482,481
<482=484,483
<486=487
<487=500,488
<488=498,489
<489=490
<490=491
<491=493,492
<493=495,494
<495=497,496
<498=499
<500=502,501
<502=504,503
<504=506,505
<506=508,507
<510=511
<511=519,512
<512=514,513
<514=516,515
<516=518,517
<519=521,520
<521=523,522
<523=525,524
<525=527,526
<529=530
<530=538,531
<531=533,532
<533=535,534
<535=537,536
<538=540,539
<540=542,541
<542=544,543
<544=546,545
<551=552
<552=554,553
<554=556,555
<560=561
<561=563,562
<566=567
<567=571,568
<568=570,569
<571=573,572
<573=575,574
<577=578
<578=582,579
<579=581,580
<582=584,583
<584=586,585
<588=589
<589=593,590
<590=592,591
<593=595,594
<595=597,596
<599=600
<600=604,601
<601=603,602
<604=606,605
<606=608,607
<610=611
<611=620,612
<612=618,613
<613=614
<614=615
<615=617,616
<618=619
<620=622,621
<622=624,623
<626=627
<627=631,628
<628=630,629
<631=633,632
<633=635,634
<637=638
<638=640,639
<640=642,641
<642=644,643
<646=647
<647=649,648
<650=651
<651=665,652
<652=661,657,653
<653=654
<654=656,655
<657=658
<658=660,659
<661=662
<662=664,663
<665=666
<667=668
<668=670,669
<671=672
<672=674,673
<675=689,676
<676=688,678,677
<678=679
<679=683,680
<680=682,681
<683=685,684
<685=687,686
<689=690
<690=692,691
<693=694
<694=709,695
<695=707,696
<696=701,697
<697=698
<698=700,699
<701=702
<702=706,703
<703=705,704
<707=708
<710=711
<711=715,712
<712=714,713
<716=717
<717=721,718
<718=720,719
<721=723,722
<724=725
<725=731,726
<726=730,727
<727=729,728
<731=733,732
<734=741,735
<735=740,739,736
<736=738,737
<741=743,742
<744=745
<745=747,746
<748=749
<749=751,750
<752=753
<753=755,754
<756=757
<757=759,758
<760=761
<761=763,762
<764=765
<765=767,766
<826=829,828,827
<829=830
<830=831
<835=838,837,836
<838=956,952,948,941,940,939,938,937,936,935,934,933,932,931,930,929,928,927,926,925,924,923,922,913,912,911,910,909,908,907,906,905,904,903,902,901,900,839
<839=899,898,897,896,895,894,893,892,880,879,878,877,876,875,874,873,872,871,870,869,868,860,859,858,857,856,855,854,853,852,851,850,849,848,840
<840=841
<841=843,842
<843=845,844
<845=847,846
<860=861
<861=863,862
<863=865,864
<865=867,866
<880=881
<881=883,882
<883=885,884
<885=889,886
<886=888,887
<889=891,890
<913=914
<914=921,915
<915=919,916
<916=917
<917=918
<919=920
<941=942
<942=947,946,943
<943=945,944
<948=949
<949=951,950
<952=953
<953=955,954
<956=957
<957=962,961,958
<958=960,959
<980=983,982,981
<983=984
<984=1120,985
<985=1110,997,990,986
<986=987
<987=989,988
<990=991
<991=995,992
<992=993
<993=994
<995=996
<997=1102,1089,1086,998
<998=1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1039,1038,1037,1036,1035,1034,1033,1032,1031,1030,999
<999=1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000
<1018=1019
<1019=1028,1020
<1020=1026,1021
<1021=1022
<1022=1024,1023
<1024=1025
<1026=1027
<1028=1029
<1039=1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1040
<1058=1059
<1059=1068,1060
<1060=1066,1061
<1061=1062
<1062=1064,1063
<1064=1065
<1066=1067
<1068=1069
<1079=1080
<1080=1084,1081
<1081=1082
<1082=1083
<1084=1085
<1086=1088,1087
<1089=1090
<1090=1101,1091
<1091=1093,1092
<1093=1094
<1094=1096,1095
<1096=1098,1097
<1098=1100,1099
<1102=1103
<1103=1104
<1104=1109,1108,1105
<1105=1107,1106
<1110=1111
<1111=1119,1118,1112
<1112=1117,1113
<1113=1115,1114
<1115=1116
<1120=1121
<1137=1140,1139,1138
<1140=1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1141
<1141=1142
<1142=1143
<1143=1145,1144
<1145=1146
