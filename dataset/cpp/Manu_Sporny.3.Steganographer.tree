>3	FunctionDef	Steganographer 
>4	ParameterList	 
>5	CompoundStatement	 
>6	ExpressionStatement	 
>7	CallExpression	reset ( )
>8	ArgumentList	 
>9	Callee	reset
>10	Identifier	reset
>14	FunctionDef	Steganographer 
>15	ParameterList	 
>16	CompoundStatement	 
>20	FunctionDef	Steganographer 
>21	ParameterList	 
>22	ReturnType	void
>23	CompoundStatement	 
>24	ExpressionStatement	 
>25	AssignmentExpr	mRetryMutation = false
>26	Identifier	false
>27	Identifier	mRetryMutation
>28	ExpressionStatement	 
>29	AssignmentExpr	mImmutableBytes = 0
>30	PrimaryExpression	0
>31	Identifier	mImmutableBytes
>32	ExpressionStatement	 
>33	CallExpression	mWatermark . setNull ( )
>34	ArgumentList	 
>35	Callee	mWatermark . setNull
>36	MemberAccess	mWatermark . setNull
>37	Identifier	setNull
>38	Identifier	mWatermark
>46	FunctionDef	Steganographer 
>47	ParameterList	const char * b , int length
>48	Parameter	 
>49	Identifier	length
>50	ParameterType	int
>51	Parameter	 
>52	Identifier	b
>53	ParameterType	const char *
>54	ReturnType	int
>55	CompoundStatement	 
>56	ReturnStatement	 
>57	Identifier	rval
>58	IfStatement	if ( mImmutableBytes > 0 )
>59	CompoundStatement	 
>60	ExpressionStatement	 
>61	AssignmentExpr	mImmutableBytes -= rval
>62	Identifier	rval
>63	Identifier	mImmutableBytes
>64	ExpressionStatement	 
>65	AssignmentExpr	rval = ( int ) ( mImmutableBytes & 0x7fffffff )
>66	CastExpression	( int ) ( mImmutableBytes & 0x7fffffff )
>67	BitAndExpression	mImmutableBytes & 0x7fffffff
>68	PrimaryExpression	0x7fffffff
>69	Identifier	mImmutableBytes
>70	CastTarget	int
>71	Identifier	rval
>72	Condition	 
>73	RelationalExpression	mImmutableBytes > 0
>74	PrimaryExpression	0
>75	Identifier	mImmutableBytes
>76	IfStatement	if ( mImmutableBytes == 0 )
>77	ElseStatement	else
>78	IfStatement	if ( mImmutableBytes == - 1 )
>79	CompoundStatement	 
>80	ExpressionStatement	 
>81	AssignmentExpr	mImmutableBytes = 0
>82	PrimaryExpression	0
>83	Identifier	mImmutableBytes
>84	Condition	 
>85	EqualityExpression	mImmutableBytes == - 1
>86	UnaryOp	- 1
>87	PrimaryExpression	1
>88	UnaryOperator	-
>89	Identifier	mImmutableBytes
>90	CompoundStatement	 
>91	ExpressionStatement	 
>92	AssignmentExpr	rval = mWatermark -> inspect ( b , length )
>93	CallExpression	mWatermark -> inspect ( b , length )
>94	ArgumentList	b
>95	Argument	length
>96	Identifier	length
>97	Argument	b
>98	Identifier	b
>99	Callee	mWatermark -> inspect
>100	PtrMemberAccess	mWatermark -> inspect
>101	Identifier	inspect
>102	Identifier	mWatermark
>103	Identifier	rval
>104	Condition	 
>105	EqualityExpression	mImmutableBytes == 0
>106	PrimaryExpression	0
>107	Identifier	mImmutableBytes
>108	IfStatement	if ( mImmutableBytes == 0 )
>109	CompoundStatement	 
>110	ExpressionStatement	 
>111	AssignmentExpr	mImmutableBytes = mWatermark -> getImmutableBytes ( b , length , false )
>112	CallExpression	mWatermark -> getImmutableBytes ( b , length , false )
>113	ArgumentList	b
>114	Argument	false
>115	Identifier	false
>116	Argument	length
>117	Identifier	length
>118	Argument	b
>119	Identifier	b
>120	Callee	mWatermark -> getImmutableBytes
>121	PtrMemberAccess	mWatermark -> getImmutableBytes
>122	Identifier	getImmutableBytes
>123	Identifier	mWatermark
>124	Identifier	mImmutableBytes
>125	Condition	 
>126	EqualityExpression	mImmutableBytes == 0
>127	PrimaryExpression	0
>128	Identifier	mImmutableBytes
>129	IdentifierDeclStatement	 
>130	IdentifierDecl	rval = 0
>131	AssignmentExpr	rval = 0
>132	PrimaryExpression	0
>133	Identifier	rval
>134	Identifier	rval
>135	IdentifierDeclType	int
>148	FunctionDef	Steganographer 
>149	ParameterList	 
>150	ReturnType	bool
>151	CompoundStatement	 
>152	ReturnStatement	 
>153	ConditionalExpression	mWatermark . isNull ( ) ? true 
>154	CallExpression	mWatermark -> isDataSatisfied ( )
>155	ArgumentList	 
>156	Callee	mWatermark -> isDataSatisfied
>157	PtrMemberAccess	mWatermark -> isDataSatisfied
>158	Identifier	isDataSatisfied
>159	Identifier	mWatermark
>160	Identifier	true
>161	Condition	mWatermark . isNull ( )
>162	CallExpression	mWatermark . isNull ( )
>163	ArgumentList	 
>164	Callee	mWatermark . isNull
>165	MemberAccess	mWatermark . isNull
>166	Identifier	isNull
>167	Identifier	mWatermark
>176	FunctionDef	Steganographer 
>177	ParameterList	 
>178	ReturnType	bool
>179	CompoundStatement	 
>180	ReturnStatement	 
>181	Identifier	false
>186	FunctionDef	Steganographer 
>187	ParameterList	ByteBuffer * src , ByteBuffer * dst , bool finish
>188	Parameter	 
>189	Identifier	finish
>190	ParameterType	bool
>191	Parameter	 
>192	Identifier	dst
>193	ParameterType	ByteBuffer *
>194	Parameter	 
>195	Identifier	src
>196	ParameterType	ByteBuffer *
>197	ReturnType	MutationAlgorithm 
>198	CompoundStatement	 
>199	ReturnStatement	 
>200	Identifier	rval
>201	IfStatement	if ( mWatermark . isNull ( ) )
>202	ElseStatement	else
>203	CompoundStatement	 
>204	IfStatement	if ( rval == MutationAlgorithm 
>205	CompoundStatement	 
>206	ExpressionStatement	 
>207	AssignmentExpr	rval = MutationAlgorithm 
>208	Identifier	MutationAlgorithm 
>209	Identifier	rval
>210	Condition	 
>211	AndExpression	rval == MutationAlgorithm 
>212	Identifier	finish
>213	EqualityExpression	rval == MutationAlgorithm 
>214	Identifier	MutationAlgorithm 
>215	Identifier	rval
>216	IfStatement	if ( mImmutableBytes > 0 )
>217	CompoundStatement	 
>218	IfStatement	if ( ! src -> isEmpty ( ) )
>219	ElseStatement	else
>220	CompoundStatement	 
>221	ExpressionStatement	 
>222	AssignmentExpr	rval = MutationAlgorithm 
>223	Identifier	MutationAlgorithm 
>224	Identifier	rval
>225	CompoundStatement	 
>226	ExpressionStatement	 
>227	AssignmentExpr	mImmutableBytes -= src -> get ( dst , ( int ) ( mImmutableBytes & 0x7fffffff ) , true )
>228	CallExpression	src -> get ( dst , ( int ) ( mImmutableBytes & 0x7fffffff ) , true )
>229	ArgumentList	dst
>230	Argument	true
>231	Identifier	true
>232	Argument	( int ) ( mImmutableBytes & 0x7fffffff )
>233	CastExpression	( int ) ( mImmutableBytes & 0x7fffffff )
>234	BitAndExpression	mImmutableBytes & 0x7fffffff
>235	PrimaryExpression	0x7fffffff
>236	Identifier	mImmutableBytes
>237	CastTarget	int
>238	Argument	dst
>239	Identifier	dst
>240	Callee	src -> get
>241	PtrMemberAccess	src -> get
>242	Identifier	get
>243	Identifier	src
>244	Identifier	mImmutableBytes
>245	Condition	 
>246	UnaryOp	! src -> isEmpty ( )
>247	CallExpression	src -> isEmpty ( )
>248	ArgumentList	 
>249	Callee	src -> isEmpty
>250	PtrMemberAccess	src -> isEmpty
>251	Identifier	isEmpty
>252	Identifier	src
>253	UnaryOperator	!
>254	Condition	 
>255	RelationalExpression	mImmutableBytes > 0
>256	PrimaryExpression	0
>257	Identifier	mImmutableBytes
>258	IfStatement	if ( mImmutableBytes == 0 )
>259	CompoundStatement	 
>260	IfStatement	if ( mImmutableBytes == 0 )
>261	ElseStatement	else
>262	IfStatement	if ( mImmutableBytes == - 1 )
>263	ElseStatement	else
>264	IfStatement	if ( mImmutableBytes < - 1 )
>265	CompoundStatement	 
>266	ExpressionStatement	 
>267	AssignmentExpr	rval = MutationAlgorithm 
>268	Identifier	MutationAlgorithm 
>269	Identifier	rval
>270	Condition	 
>271	RelationalExpression	mImmutableBytes < - 1
>272	UnaryOp	- 1
>273	PrimaryExpression	1
>274	UnaryOperator	-
>275	Identifier	mImmutableBytes
>276	CompoundStatement	 
>277	ExpressionStatement	 
>278	AssignmentExpr	mImmutableBytes = 0
>279	PrimaryExpression	0
>280	Identifier	mImmutableBytes
>281	ExpressionStatement	 
>282	AssignmentExpr	rval = MutationAlgorithm 
>283	Identifier	MutationAlgorithm 
>284	Identifier	rval
>285	Condition	 
>286	EqualityExpression	mImmutableBytes == - 1
>287	UnaryOp	- 1
>288	PrimaryExpression	1
>289	UnaryOperator	-
>290	Identifier	mImmutableBytes
>291	CompoundStatement	 
>292	IfStatement	if ( mRetryMutation )
>293	CompoundStatement	 
>294	ExpressionStatement	 
>295	AssignmentExpr	rval = MutationAlgorithm 
>296	Identifier	MutationAlgorithm 
>297	Identifier	rval
>298	Condition	 
>299	Identifier	mRetryMutation
>300	ExpressionStatement	 
>301	AssignmentExpr	mRetryMutation = ! mWatermark -> mutate ( src , dst , finish )
>302	UnaryOp	! mWatermark -> mutate ( src , dst , finish )
>303	CallExpression	mWatermark -> mutate ( src , dst , finish )
>304	ArgumentList	src
>305	Argument	finish
>306	Identifier	finish
>307	Argument	dst
>308	Identifier	dst
>309	Argument	src
>310	Identifier	src
>311	Callee	mWatermark -> mutate
>312	PtrMemberAccess	mWatermark -> mutate
>313	Identifier	mutate
>314	Identifier	mWatermark
>315	UnaryOperator	!
>316	Identifier	mRetryMutation
>317	Condition	 
>318	EqualityExpression	mImmutableBytes == 0
>319	PrimaryExpression	0
>320	Identifier	mImmutableBytes
>321	IfStatement	if ( ! mRetryMutation )
>322	CompoundStatement	 
>323	ExpressionStatement	 
>324	AssignmentExpr	mImmutableBytes = mWatermark -> getImmutableBytes ( src -> data ( ) , src -> length ( ) , finish )
>325	CallExpression	mWatermark -> getImmutableBytes ( src -> data ( ) , src -> length ( ) , finish )
>326	ArgumentList	src -> data ( )
>327	Argument	finish
>328	Identifier	finish
>329	Argument	src -> length ( )
>330	CallExpression	src -> length ( )
>331	ArgumentList	 
>332	Callee	src -> length
>333	PtrMemberAccess	src -> length
>334	Identifier	length
>335	Identifier	src
>336	Argument	src -> data ( )
>337	CallExpression	src -> data ( )
>338	ArgumentList	 
>339	Callee	src -> data
>340	PtrMemberAccess	src -> data
>341	Identifier	data
>342	Identifier	src
>343	Callee	mWatermark -> getImmutableBytes
>344	PtrMemberAccess	mWatermark -> getImmutableBytes
>345	Identifier	getImmutableBytes
>346	Identifier	mWatermark
>347	Identifier	mImmutableBytes
>348	Condition	 
>349	UnaryOp	! mRetryMutation
>350	Identifier	mRetryMutation
>351	UnaryOperator	!
>352	Condition	 
>353	EqualityExpression	mImmutableBytes == 0
>354	PrimaryExpression	0
>355	Identifier	mImmutableBytes
>356	CompoundStatement	 
>357	ExpressionStatement	 
>358	AssignmentExpr	rval = MutationAlgorithm 
>359	Identifier	MutationAlgorithm 
>360	Identifier	rval
>361	Condition	 
>362	CallExpression	mWatermark . isNull ( )
>363	ArgumentList	 
>364	Callee	mWatermark . isNull
>365	MemberAccess	mWatermark . isNull
>366	Identifier	isNull
>367	Identifier	mWatermark
>368	IdentifierDeclStatement	 
>369	IdentifierDecl	rval = MutationAlgorithm 
>370	AssignmentExpr	rval = MutationAlgorithm 
>371	Identifier	MutationAlgorithm 
>372	Identifier	MutationAlgorithm 
>373	Identifier	rval
>374	IdentifierDeclType	MutationAlgorithm 
>400	FunctionDef	Steganographer 
>401	ParameterList	WatermarkRef & wm
>402	Parameter	 
>403	Identifier	wm
>404	ParameterType	WatermarkRef &
>405	ReturnType	void
>406	CompoundStatement	 
>407	ExpressionStatement	 
>408	AssignmentExpr	mWatermark = wm
>409	Identifier	wm
>410	Identifier	mWatermark
>416	FunctionDef	Steganographer 
>417	ParameterList	 
>418	ReturnType	WatermarkRef
>419	CompoundStatement	 
>420	ReturnStatement	 
>421	Identifier	mWatermark
<3=5,4
<5=6
<6=7
<7=9,8
<9=10
<14=16,15
<20=23,22,21
<23=32,28,24
<24=25
<25=27,26
<28=29
<29=31,30
<32=33
<33=35,34
<35=36
<36=38,37
<46=55,54,47
<47=51,48
<48=50,49
<51=53,52
<55=129,108,76,58,56
<56=57
<58=72,59
<59=64,60
<60=61
<61=63,62
<64=65
<65=71,66
<66=70,67
<67=69,68
<72=73
<73=75,74
<76=104,90,77
<77=78
<78=84,79
<79=80
<80=81
<81=83,82
<84=85
<85=89,86
<86=88,87
<90=91
<91=92
<92=103,93
<93=99,94
<94=97,95
<95=96
<97=98
<99=100
<100=102,101
<104=105
<105=107,106
<108=125,109
<109=110
<110=111
<111=124,112
<112=120,113
<113=118,116,114
<114=115
<116=117
<118=119
<120=121
<121=123,122
<125=126
<126=128,127
<129=130
<130=135,134,131
<131=133,132
<148=151,150,149
<151=152
<152=153
<153=161,160,154
<154=156,155
<156=157
<157=159,158
<161=162
<162=164,163
<164=165
<165=167,166
<176=179,178,177
<179=180
<180=181
<186=198,197,187
<187=194,191,188
<188=190,189
<191=193,192
<194=196,195
<198=368,201,199
<199=200
<201=361,356,202
<202=203
<203=258,216,204
<204=210,205
<205=206
<206=207
<207=209,208
<210=211
<211=213,212
<213=215,214
<216=254,217
<217=218
<218=245,225,219
<219=220
<220=221
<221=222
<222=224,223
<225=226
<226=227
<227=244,228
<228=240,229
<229=238,232,230
<230=231
<232=233
<233=237,234
<234=236,235
<238=239
<240=241
<241=243,242
<245=246
<246=253,247
<247=249,248
<249=250
<250=252,251
<254=255
<255=257,256
<258=352,259
<259=321,260
<260=317,291,261
<261=262
<262=285,276,263
<263=264
<264=270,265
<265=266
<266=267
<267=269,268
<270=271
<271=275,272
<272=274,273
<276=281,277
<277=278
<278=280,279
<281=282
<282=284,283
<285=286
<286=290,287
<287=289,288
<291=300,292
<292=298,293
<293=294
<294=295
<295=297,296
<298=299
<300=301
<301=316,302
<302=315,303
<303=311,304
<304=309,307,305
<305=306
<307=308
<309=310
<311=312
<312=314,313
<317=318
<318=320,319
<321=348,322
<322=323
<323=324
<324=347,325
<325=343,326
<326=336,329,327
<327=328
<329=330
<330=332,331
<332=333
<333=335,334
<336=337
<337=339,338
<339=340
<340=342,341
<343=344
<344=346,345
<348=349
<349=351,350
<352=353
<353=355,354
<356=357
<357=358
<358=360,359
<361=362
<362=364,363
<364=365
<365=367,366
<368=369
<369=374,373,370
<370=372,371
<400=406,405,401
<401=402
<402=404,403
<406=407
<407=408
<408=410,409
<416=419,418,417
<419=420
<420=421
