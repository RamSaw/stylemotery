>4	FunctionDef	output_pubs (const osmium 
>5	ParameterList	const osmium 
>6	Parameter	 
>7	Identifier	object
>8	ParameterType	const osmium 
>9	ReturnType	void
>10	CompoundStatement	 
>11	IfStatement	if ( amenity && ! strcmp ( amenity , \"pub\" ) )
>12	CompoundStatement	 
>13	IfStatement	if ( name )
>14	CompoundStatement	 
>15	ExpressionStatement	 
>16	ShiftExpression	std 
>17	ShiftExpression	name << std 
>18	Identifier	std 
>19	Identifier	name
>20	Identifier	std 
>21	Condition	 
>22	Identifier	name
>23	IdentifierDeclStatement	 
>24	IdentifierDecl	* name = object . tags ( ) [ \"name\" ]
>25	AssignmentExpr	* name = object . tags ( ) [ \"name\" ]
>26	ArrayIndexing	object . tags ( ) [ \"name\" ]
>27	PrimaryExpression	\"name\"
>28	CallExpression	object . tags ( )
>29	ArgumentList	 
>30	Callee	object . tags
>31	MemberAccess	object . tags
>32	Identifier	tags
>33	Identifier	object
>34	Identifier	name
>35	Identifier	name
>36	IdentifierDeclType	const char *
>37	Condition	 
>38	AndExpression	amenity && ! strcmp ( amenity , \"pub\" )
>39	UnaryOp	! strcmp ( amenity , \"pub\" )
>40	CallExpression	strcmp ( amenity , \"pub\" )
>41	ArgumentList	amenity
>42	Argument	\"pub\"
>43	PrimaryExpression	\"pub\"
>44	Argument	amenity
>45	Identifier	amenity
>46	Callee	strcmp
>47	Identifier	strcmp
>48	UnaryOperator	!
>49	Identifier	amenity
>50	IdentifierDeclStatement	 
>51	IdentifierDecl	* amenity = object . tags ( ) [ \"amenity\" ]
>52	AssignmentExpr	* amenity = object . tags ( ) [ \"amenity\" ]
>53	ArrayIndexing	object . tags ( ) [ \"amenity\" ]
>54	PrimaryExpression	\"amenity\"
>55	CallExpression	object . tags ( )
>56	ArgumentList	 
>57	Callee	object . tags
>58	MemberAccess	object . tags
>59	Identifier	tags
>60	Identifier	object
>61	Identifier	amenity
>62	Identifier	amenity
>63	IdentifierDeclType	const char *
>74	FunctionDef	node (const osmium 
>75	ParameterList	const osmium 
>76	Parameter	 
>77	Identifier	node
>78	ParameterType	const osmium 
>79	ReturnType	void
>80	CompoundStatement	 
>81	ExpressionStatement	 
>82	CallExpression	output_pubs ( node )
>83	ArgumentList	node
>84	Argument	node
>85	Identifier	node
>86	Callee	output_pubs
>87	Identifier	output_pubs
>92	FunctionDef	way (const osmium 
>93	ParameterList	const osmium 
>94	Parameter	 
>95	Identifier	way
>96	ParameterType	const osmium 
>97	ReturnType	void
>98	CompoundStatement	 
>99	ExpressionStatement	 
>100	CallExpression	output_pubs ( way )
>101	ArgumentList	way
>102	Argument	way
>103	Identifier	way
>104	Callee	output_pubs
>105	Identifier	output_pubs
>110	FunctionDef	main (int argc , char * argv [ ])
>111	ParameterList	int argc , char * argv [ ]
>112	Parameter	 
>113	Identifier	argv
>114	ParameterType	char * [ ]
>115	Parameter	 
>116	Identifier	argc
>117	ParameterType	int
>118	ReturnType	int
>119	CompoundStatement	 
>120	ExpressionStatement	 
>121	CallExpression	osmium 
>122	ArgumentList	reader
>123	Argument	names_handler
>124	Identifier	names_handler
>125	Argument	reader
>126	Identifier	reader
>127	Callee	osmium 
>128	Identifier	osmium 
>129	IdentifierDeclStatement	 
>130	IdentifierDecl	reader ( argv [ 1 ] , osmium 
>131	Expression	argv [ 1 ] , osmium 
>132	InclusiveOrExpression	osmium 
>133	Identifier	osmium 
>134	Identifier	osmium 
>135	ArrayIndexing	argv [ 1 ]
>136	PrimaryExpression	1
>137	Identifier	argv
>138	Identifier	reader
>139	IdentifierDeclType	osmium 
>140	IdentifierDeclStatement	 
>141	IdentifierDecl	names_handler
>142	Identifier	names_handler
>143	IdentifierDeclType	NamesHandler
>144	IfStatement	if ( argc != 2 )
>145	CompoundStatement	 
>146	ExpressionStatement	 
>147	CallExpression	exit ( 1 )
>148	ArgumentList	1
>149	Argument	1
>150	PrimaryExpression	1
>151	Callee	exit
>152	Identifier	exit
>153	ExpressionStatement	 
>154	ShiftExpression	std 
>155	ShiftExpression	\"Usage
>156	ShiftExpression	argv [ 0 ] << \" OSMFILE\n\"
>157	PrimaryExpression	\" OSMFILE\n\"
>158	ArrayIndexing	argv [ 0 ]
>159	PrimaryExpression	0
>160	Identifier	argv
>161	PrimaryExpression	\"Usage
>162	Identifier	std 
>163	Condition	 
>164	EqualityExpression	argc != 2
>165	PrimaryExpression	2
>166	Identifier	argc
<4=10,9,5
<5=6
<6=8,7
<10=50,11
<11=37,12
<12=23,13
<13=21,14
<14=15
<15=16
<16=20,17
<17=19,18
<21=22
<23=24
<24=36,35,25
<25=34,26
<26=28,27
<28=30,29
<30=31
<31=33,32
<37=38
<38=49,39
<39=48,40
<40=46,41
<41=44,42
<42=43
<44=45
<46=47
<50=51
<51=63,62,52
<52=61,53
<53=55,54
<55=57,56
<57=58
<58=60,59
<74=80,79,75
<75=76
<76=78,77
<80=81
<81=82
<82=86,83
<83=84
<84=85
<86=87
<92=98,97,93
<93=94
<94=96,95
<98=99
<99=100
<100=104,101
<101=102
<102=103
<104=105
<110=119,118,111
<111=115,112
<112=114,113
<115=117,116
<119=144,140,129,120
<120=121
<121=127,122
<122=125,123
<123=124
<125=126
<127=128
<129=130
<130=139,138,131
<131=135,132
<132=134,133
<135=137,136
<140=141
<141=143,142
<144=163,145
<145=153,146
<146=147
<147=151,148
<148=149
<149=150
<151=152
<153=154
<154=162,155
<155=161,156
<156=158,157
<158=160,159
<163=164
<164=166,165
