>13	FunctionDef	GameMenu 
>14	ParameterList	 
>15	CompoundStatement	 
>16	IfStatement	if ( g_current_game )
>17	ExpressionStatement	 
>18	CallExpression	m_menusystem . switch_to_menu ( \"main_ingame\" )
>19	ArgumentList	\"main_ingame\"
>20	Argument	\"main_ingame\"
>21	PrimaryExpression	\"main_ingame\"
>22	Callee	m_menusystem . switch_to_menu
>23	MemberAccess	m_menusystem . switch_to_menu
>24	Identifier	switch_to_menu
>25	Identifier	m_menusystem
>26	Condition	 
>27	Identifier	g_current_game
>28	ExpressionStatement	 
>29	CallExpression	create_menus ( )
>30	ArgumentList	 
>31	Callee	create_menus
>32	Identifier	create_menus
>38	FunctionDef	GameMenu 
>39	ParameterList	 
>40	CompoundStatement	 
>41	ExpressionStatement	 
>42	ArrayIndexing	m_menus [ i ]
>43	Identifier	i
>44	Identifier	m_menus
>45	ForStatement	for ( unsigned int i = 0 ; i < m_menus . size ( ) ; ++ i )
>46	Statement	 
>47	UnaryExpression	 
>48	Identifier	i
>49	IncDec	++
>50	Condition	 
>51	RelationalExpression	i < m_menus . size ( )
>52	CallExpression	m_menus . size ( )
>53	ArgumentList	 
>54	Callee	m_menus . size
>55	MemberAccess	m_menus . size
>56	Identifier	size
>57	Identifier	m_menus
>58	Identifier	i
>59	ForInit	 
>60	IdentifierDeclStatement	unsigned int i = 0 ;
>61	IdentifierDecl	i = 0
>62	AssignmentExpr	i = 0
>63	PrimaryExpression	0
>64	Identifier	i
>65	Identifier	i
>66	IdentifierDeclType	unsigned int
>73	FunctionDef	GameMenu 
>74	ParameterList	 
>75	ReturnType	void
>76	CompoundStatement	 
>77	ExpressionStatement	 
>78	CallExpression	m_menus . push_back ( m_menu )
>79	ArgumentList	m_menu
>80	Argument	m_menu
>81	Identifier	m_menu
>82	Callee	m_menus . push_back
>83	MemberAccess	m_menus . push_back
>84	Identifier	push_back
>85	Identifier	m_menus
>86	ExpressionStatement	 
>87	CallExpression	m_menusystem . add_menu ( \"newgame\" , m_menu )
>88	ArgumentList	\"newgame\"
>89	Argument	m_menu
>90	Identifier	m_menu
>91	Argument	\"newgame\"
>92	PrimaryExpression	\"newgame\"
>93	Callee	m_menusystem . add_menu
>94	MemberAccess	m_menusystem . add_menu
>95	Identifier	add_menu
>96	Identifier	m_menusystem
>97	ExpressionStatement	 
>98	AssignmentExpr	m_menu = new GraphicMenu ( items , g_resources . font , 1.0 )
>99	Expression	items , g_resources . font , 1.0
>100	Expression	g_resources . font , 1.0
>101	PrimaryExpression	1.0
>102	MemberAccess	g_resources . font
>103	Identifier	font
>104	Identifier	g_resources
>105	Identifier	items
>106	Identifier	m_menu
>107	ExpressionStatement	 
>108	CallExpression	items . push_back ( Menuitem ( \"\" , \"Back\" , \"\" , \"
>109	ArgumentList	Menuitem ( \"\" , \"Back\" , \"\" , \"
>110	Argument	Menuitem ( \"\" , \"Back\" , \"\" , \"
>111	CallExpression	Menuitem ( \"\" , \"Back\" , \"\" , \"
>112	ArgumentList	\"\"
>113	Argument	\"
>114	PrimaryExpression	\"
>115	Argument	\"\"
>116	PrimaryExpression	\"\"
>117	Argument	\"Back\"
>118	PrimaryExpression	\"Back\"
>119	Argument	\"\"
>120	PrimaryExpression	\"\"
>121	Callee	Menuitem
>122	Identifier	Menuitem
>123	Callee	items . push_back
>124	MemberAccess	items . push_back
>125	Identifier	push_back
>126	Identifier	items
>127	ExpressionStatement	 
>128	CallExpression	items . push_back ( Menuitem ( \"layout\" , \"Theme\" , \"layout_change\" , \"\" , layouts , 0 ) )
>129	ArgumentList	Menuitem ( \"layout\" , \"Theme\" , \"layout_change\" , \"\" , layouts , 0 )
>130	Argument	Menuitem ( \"layout\" , \"Theme\" , \"layout_change\" , \"\" , layouts , 0 )
>131	CallExpression	Menuitem ( \"layout\" , \"Theme\" , \"layout_change\" , \"\" , layouts , 0 )
>132	ArgumentList	\"layout\"
>133	Argument	0
>134	PrimaryExpression	0
>135	Argument	layouts
>136	Identifier	layouts
>137	Argument	\"\"
>138	PrimaryExpression	\"\"
>139	Argument	\"layout_change\"
>140	PrimaryExpression	\"layout_change\"
>141	Argument	\"Theme\"
>142	PrimaryExpression	\"Theme\"
>143	Argument	\"layout\"
>144	PrimaryExpression	\"layout\"
>145	Callee	Menuitem
>146	Identifier	Menuitem
>147	Callee	items . push_back
>148	MemberAccess	items . push_back
>149	Identifier	push_back
>150	Identifier	items
>151	ExpressionStatement	 
>152	CallExpression	items . push_back ( Menuitem ( \"startingwave\" , \"Starting wave\" , \"\" , \"\" , waves , 0 ) )
>153	ArgumentList	Menuitem ( \"startingwave\" , \"Starting wave\" , \"\" , \"\" , waves , 0 )
>154	Argument	Menuitem ( \"startingwave\" , \"Starting wave\" , \"\" , \"\" , waves , 0 )
>155	CallExpression	Menuitem ( \"startingwave\" , \"Starting wave\" , \"\" , \"\" , waves , 0 )
>156	ArgumentList	\"startingwave\"
>157	Argument	0
>158	PrimaryExpression	0
>159	Argument	waves
>160	Identifier	waves
>161	Argument	\"\"
>162	PrimaryExpression	\"\"
>163	Argument	\"\"
>164	PrimaryExpression	\"\"
>165	Argument	\"Starting wave\"
>166	PrimaryExpression	\"Starting wave\"
>167	Argument	\"startingwave\"
>168	PrimaryExpression	\"startingwave\"
>169	Callee	Menuitem
>170	Identifier	Menuitem
>171	Callee	items . push_back
>172	MemberAccess	items . push_back
>173	Identifier	push_back
>174	Identifier	items
>175	ExpressionStatement	 
>176	CallExpression	items . push_back ( Menuitem ( \"difficulty\" , \"Difficulty\" , \"\" , \"\" , difficulty , 1 ) )
>177	ArgumentList	Menuitem ( \"difficulty\" , \"Difficulty\" , \"\" , \"\" , difficulty , 1 )
>178	Argument	Menuitem ( \"difficulty\" , \"Difficulty\" , \"\" , \"\" , difficulty , 1 )
>179	CallExpression	Menuitem ( \"difficulty\" , \"Difficulty\" , \"\" , \"\" , difficulty , 1 )
>180	ArgumentList	\"difficulty\"
>181	Argument	1
>182	PrimaryExpression	1
>183	Argument	difficulty
>184	Identifier	difficulty
>185	Argument	\"\"
>186	PrimaryExpression	\"\"
>187	Argument	\"\"
>188	PrimaryExpression	\"\"
>189	Argument	\"Difficulty\"
>190	PrimaryExpression	\"Difficulty\"
>191	Argument	\"difficulty\"
>192	PrimaryExpression	\"difficulty\"
>193	Callee	Menuitem
>194	Identifier	Menuitem
>195	Callee	items . push_back
>196	MemberAccess	items . push_back
>197	Identifier	push_back
>198	Identifier	items
>199	ExpressionStatement	 
>200	CallExpression	items . push_back ( Menuitem ( \"\" , \"Start\" , \"start_game\" , \"\" ) )
>201	ArgumentList	Menuitem ( \"\" , \"Start\" , \"start_game\" , \"\" )
>202	Argument	Menuitem ( \"\" , \"Start\" , \"start_game\" , \"\" )
>203	CallExpression	Menuitem ( \"\" , \"Start\" , \"start_game\" , \"\" )
>204	ArgumentList	\"\"
>205	Argument	\"\"
>206	PrimaryExpression	\"\"
>207	Argument	\"start_game\"
>208	PrimaryExpression	\"start_game\"
>209	Argument	\"Start\"
>210	PrimaryExpression	\"Start\"
>211	Argument	\"\"
>212	PrimaryExpression	\"\"
>213	Callee	Menuitem
>214	Identifier	Menuitem
>215	Callee	items . push_back
>216	MemberAccess	items . push_back
>217	Identifier	push_back
>218	Identifier	items
>219	ExpressionStatement	 
>220	CallExpression	items . clear ( )
>221	ArgumentList	 
>222	Callee	items . clear
>223	MemberAccess	items . clear
>224	Identifier	clear
>225	Identifier	items
>226	ExpressionStatement	 
>227	CallExpression	waves . push_back ( MenuitemOption ( \"50\" , \"50\" ) )
>228	ArgumentList	MenuitemOption ( \"50\" , \"50\" )
>229	Argument	MenuitemOption ( \"50\" , \"50\" )
>230	CallExpression	MenuitemOption ( \"50\" , \"50\" )
>231	ArgumentList	\"50\"
>232	Argument	\"50\"
>233	PrimaryExpression	\"50\"
>234	Argument	\"50\"
>235	PrimaryExpression	\"50\"
>236	Callee	MenuitemOption
>237	Identifier	MenuitemOption
>238	Callee	waves . push_back
>239	MemberAccess	waves . push_back
>240	Identifier	push_back
>241	Identifier	waves
>242	ExpressionStatement	 
>243	CallExpression	waves . push_back ( MenuitemOption ( \"25\" , \"25\" ) )
>244	ArgumentList	MenuitemOption ( \"25\" , \"25\" )
>245	Argument	MenuitemOption ( \"25\" , \"25\" )
>246	CallExpression	MenuitemOption ( \"25\" , \"25\" )
>247	ArgumentList	\"25\"
>248	Argument	\"25\"
>249	PrimaryExpression	\"25\"
>250	Argument	\"25\"
>251	PrimaryExpression	\"25\"
>252	Callee	MenuitemOption
>253	Identifier	MenuitemOption
>254	Callee	waves . push_back
>255	MemberAccess	waves . push_back
>256	Identifier	push_back
>257	Identifier	waves
>258	ExpressionStatement	 
>259	CallExpression	waves . push_back ( MenuitemOption ( \"10\" , \"10\" ) )
>260	ArgumentList	MenuitemOption ( \"10\" , \"10\" )
>261	Argument	MenuitemOption ( \"10\" , \"10\" )
>262	CallExpression	MenuitemOption ( \"10\" , \"10\" )
>263	ArgumentList	\"10\"
>264	Argument	\"10\"
>265	PrimaryExpression	\"10\"
>266	Argument	\"10\"
>267	PrimaryExpression	\"10\"
>268	Callee	MenuitemOption
>269	Identifier	MenuitemOption
>270	Callee	waves . push_back
>271	MemberAccess	waves . push_back
>272	Identifier	push_back
>273	Identifier	waves
>274	ExpressionStatement	 
>275	CallExpression	waves . push_back ( MenuitemOption ( \"5\" , \"5\" ) )
>276	ArgumentList	MenuitemOption ( \"5\" , \"5\" )
>277	Argument	MenuitemOption ( \"5\" , \"5\" )
>278	CallExpression	MenuitemOption ( \"5\" , \"5\" )
>279	ArgumentList	\"5\"
>280	Argument	\"5\"
>281	PrimaryExpression	\"5\"
>282	Argument	\"5\"
>283	PrimaryExpression	\"5\"
>284	Callee	MenuitemOption
>285	Identifier	MenuitemOption
>286	Callee	waves . push_back
>287	MemberAccess	waves . push_back
>288	Identifier	push_back
>289	Identifier	waves
>290	ExpressionStatement	 
>291	CallExpression	waves . push_back ( MenuitemOption ( \"1\" , \"1\" ) )
>292	ArgumentList	MenuitemOption ( \"1\" , \"1\" )
>293	Argument	MenuitemOption ( \"1\" , \"1\" )
>294	CallExpression	MenuitemOption ( \"1\" , \"1\" )
>295	ArgumentList	\"1\"
>296	Argument	\"1\"
>297	PrimaryExpression	\"1\"
>298	Argument	\"1\"
>299	PrimaryExpression	\"1\"
>300	Callee	MenuitemOption
>301	Identifier	MenuitemOption
>302	Callee	waves . push_back
>303	MemberAccess	waves . push_back
>304	Identifier	push_back
>305	Identifier	waves
>306	IdentifierDeclStatement	 
>307	IdentifierDecl	waves
>308	Identifier	waves
>309	IdentifierDeclType	menuoptions_t
>310	ExpressionStatement	 
>311	CallExpression	difficulty . push_back ( MenuitemOption ( \"Hard\" , \"2\" ) )
>312	ArgumentList	MenuitemOption ( \"Hard\" , \"2\" )
>313	Argument	MenuitemOption ( \"Hard\" , \"2\" )
>314	CallExpression	MenuitemOption ( \"Hard\" , \"2\" )
>315	ArgumentList	\"Hard\"
>316	Argument	\"2\"
>317	PrimaryExpression	\"2\"
>318	Argument	\"Hard\"
>319	PrimaryExpression	\"Hard\"
>320	Callee	MenuitemOption
>321	Identifier	MenuitemOption
>322	Callee	difficulty . push_back
>323	MemberAccess	difficulty . push_back
>324	Identifier	push_back
>325	Identifier	difficulty
>326	ExpressionStatement	 
>327	CallExpression	difficulty . push_back ( MenuitemOption ( \"Normal\" , \"1\" ) )
>328	ArgumentList	MenuitemOption ( \"Normal\" , \"1\" )
>329	Argument	MenuitemOption ( \"Normal\" , \"1\" )
>330	CallExpression	MenuitemOption ( \"Normal\" , \"1\" )
>331	ArgumentList	\"Normal\"
>332	Argument	\"1\"
>333	PrimaryExpression	\"1\"
>334	Argument	\"Normal\"
>335	PrimaryExpression	\"Normal\"
>336	Callee	MenuitemOption
>337	Identifier	MenuitemOption
>338	Callee	difficulty . push_back
>339	MemberAccess	difficulty . push_back
>340	Identifier	push_back
>341	Identifier	difficulty
>342	ExpressionStatement	 
>343	CallExpression	difficulty . push_back ( MenuitemOption ( \"Easy\" , \"0\" ) )
>344	ArgumentList	MenuitemOption ( \"Easy\" , \"0\" )
>345	Argument	MenuitemOption ( \"Easy\" , \"0\" )
>346	CallExpression	MenuitemOption ( \"Easy\" , \"0\" )
>347	ArgumentList	\"Easy\"
>348	Argument	\"0\"
>349	PrimaryExpression	\"0\"
>350	Argument	\"Easy\"
>351	PrimaryExpression	\"Easy\"
>352	Callee	MenuitemOption
>353	Identifier	MenuitemOption
>354	Callee	difficulty . push_back
>355	MemberAccess	difficulty . push_back
>356	Identifier	push_back
>357	Identifier	difficulty
>358	IdentifierDeclStatement	 
>359	IdentifierDecl	difficulty
>360	Identifier	difficulty
>361	IdentifierDeclType	menuoptions_t
>362	ExpressionStatement	 
>363	CallExpression	layouts . push_back ( MenuitemOption ( * it , * it ) )
>364	ArgumentList	MenuitemOption ( * it , * it )
>365	Argument	MenuitemOption ( * it , * it )
>366	CallExpression	MenuitemOption ( * it , * it )
>367	ArgumentList	* it
>368	Argument	* it
>369	UnaryOp	* it
>370	Identifier	it
>371	UnaryOperator	*
>372	Argument	* it
>373	UnaryOp	* it
>374	Identifier	it
>375	UnaryOperator	*
>376	Callee	MenuitemOption
>377	Identifier	MenuitemOption
>378	Callee	layouts . push_back
>379	MemberAccess	layouts . push_back
>380	Identifier	push_back
>381	Identifier	layouts
>382	Statement	 
>383	Statement	 
>384	Statement	 
>385	Statement	 
>386	Statement	 
>387	Statement	 
>388	Statement	 
>389	Statement	 
>390	Statement	 
>391	Statement	 
>392	Statement	 
>393	IdentifierDeclStatement	 
>394	IdentifierDecl	names = g_layouts -> get_names ( )
>395	AssignmentExpr	names = g_layouts -> get_names ( )
>396	CallExpression	g_layouts -> get_names ( )
>397	ArgumentList	 
>398	Callee	g_layouts -> get_names
>399	PtrMemberAccess	g_layouts -> get_names
>400	Identifier	get_names
>401	Identifier	g_layouts
>402	Identifier	names
>403	Identifier	names
>404	IdentifierDeclType	vector < string >
>405	IdentifierDeclStatement	 
>406	IdentifierDecl	layouts
>407	Identifier	layouts
>408	IdentifierDeclType	menuoptions_t
>409	ExpressionStatement	 
>410	CallExpression	m_menus . push_back ( m_menu )
>411	ArgumentList	m_menu
>412	Argument	m_menu
>413	Identifier	m_menu
>414	Callee	m_menus . push_back
>415	MemberAccess	m_menus . push_back
>416	Identifier	push_back
>417	Identifier	m_menus
>418	ExpressionStatement	 
>419	CallExpression	m_menusystem . add_menu ( \"inputsettings\" , m_menu )
>420	ArgumentList	\"inputsettings\"
>421	Argument	m_menu
>422	Identifier	m_menu
>423	Argument	\"inputsettings\"
>424	PrimaryExpression	\"inputsettings\"
>425	Callee	m_menusystem . add_menu
>426	MemberAccess	m_menusystem . add_menu
>427	Identifier	add_menu
>428	Identifier	m_menusystem
>429	ExpressionStatement	 
>430	AssignmentExpr	m_menu = new GraphicMenu ( items , g_resources . font , 1.0 )
>431	Expression	items , g_resources . font , 1.0
>432	Expression	g_resources . font , 1.0
>433	PrimaryExpression	1.0
>434	MemberAccess	g_resources . font
>435	Identifier	font
>436	Identifier	g_resources
>437	Identifier	items
>438	Identifier	m_menu
>439	ExpressionStatement	 
>440	CallExpression	items . push_back ( Menuitem ( \"\" , \"Back\" , \"\" , \"
>441	ArgumentList	Menuitem ( \"\" , \"Back\" , \"\" , \"
>442	Argument	Menuitem ( \"\" , \"Back\" , \"\" , \"
>443	CallExpression	Menuitem ( \"\" , \"Back\" , \"\" , \"
>444	ArgumentList	\"\"
>445	Argument	\"
>446	PrimaryExpression	\"
>447	Argument	\"\"
>448	PrimaryExpression	\"\"
>449	Argument	\"Back\"
>450	PrimaryExpression	\"Back\"
>451	Argument	\"\"
>452	PrimaryExpression	\"\"
>453	Callee	Menuitem
>454	Identifier	Menuitem
>455	Callee	items . push_back
>456	MemberAccess	items . push_back
>457	Identifier	push_back
>458	Identifier	items
>459	ExpressionStatement	 
>460	CallExpression	items . push_back ( Menuitem ( \"mouse_sensitivity\" , \"Mouse Sensitivity\" , \"mouse_sensitivity_change\" , \"\" , sensitivity , ( \
>461	ArgumentList	Menuitem ( \"mouse_sensitivity\" , \"Mouse Sensitivity\" , \"mouse_sensitivity_change\" , \"\" , sensitivity , ( g_settings \
>462	Argument	Menuitem ( \"mouse_sensitivity\" , \"Mouse Sensitivity\" , \"mouse_sensitivity_change\" , \"\" , sensitivity , ( g_settings \
>463	CallExpression	Menuitem ( \"mouse_sensitivity\" , \"Mouse Sensitivity\" , \"mouse_sensitivity_change\" , \"\" , sensitivity , ( g_settings \
>464	ArgumentList	\"mouse_sensitivity\"
>465	Argument	( g_settings -> m_mouse_sensitivity ) - 1
>466	AdditiveExpression	( g_settings -> m_mouse_sensitivity ) - 1
>467	PrimaryExpression	1
>468	PtrMemberAccess	g_settings -> m_mouse_sensitivity
>469	Identifier	m_mouse_sensitivity
>470	Identifier	g_settings
>471	Argument	sensitivity
>472	Identifier	sensitivity
>473	Argument	\"\"
>474	PrimaryExpression	\"\"
>475	Argument	\"mouse_sensitivity_change\"
>476	PrimaryExpression	\"mouse_sensitivity_change\"
>477	Argument	\"Mouse Sensitivity\"
>478	PrimaryExpression	\"Mouse Sensitivity\"
>479	Argument	\"mouse_sensitivity\"
>480	PrimaryExpression	\"mouse_sensitivity\"
>481	Callee	Menuitem
>482	Identifier	Menuitem
>483	Callee	items . push_back
>484	MemberAccess	items . push_back
>485	Identifier	push_back
>486	Identifier	items
>487	ExpressionStatement	 
>488	CallExpression	items . clear ( )
>489	ArgumentList	 
>490	Callee	items . clear
>491	MemberAccess	items . clear
>492	Identifier	clear
>493	Identifier	items
>494	ForStatement	for ( int i = 1 ; i <= 10 ; ++ i )
>495	ExpressionStatement	 
>496	CallExpression	sensitivity . push_back ( MenuitemOption ( to_string < int > ( i ) , to_string < int > ( i ) ) )
>497	ArgumentList	MenuitemOption ( to_string < int > ( i ) , to_string < int > ( i ) )
>498	Argument	MenuitemOption ( to_string < int > ( i ) , to_string < int > ( i ) )
>499	CallExpression	MenuitemOption ( to_string < int > ( i ) , to_string < int > ( i ) )
>500	ArgumentList	to_string < int > ( i )
>501	Argument	to_string < int > ( i )
>502	RelationalExpression	to_string < int > ( i )
>503	RelationalExpression	int > ( i )
>504	Identifier	i
>505	Identifier	int
>506	Identifier	to_string
>507	Argument	to_string < int > ( i )
>508	RelationalExpression	to_string < int > ( i )
>509	RelationalExpression	int > ( i )
>510	Identifier	i
>511	Identifier	int
>512	Identifier	to_string
>513	Callee	MenuitemOption
>514	Identifier	MenuitemOption
>515	Callee	sensitivity . push_back
>516	MemberAccess	sensitivity . push_back
>517	Identifier	push_back
>518	Identifier	sensitivity
>519	UnaryExpression	 
>520	Identifier	i
>521	IncDec	++
>522	Condition	 
>523	RelationalExpression	i <= 10
>524	PrimaryExpression	10
>525	Identifier	i
>526	ForInit	 
>527	IdentifierDeclStatement	int i = 1 ;
>528	IdentifierDecl	i = 1
>529	AssignmentExpr	i = 1
>530	PrimaryExpression	1
>531	Identifier	i
>532	Identifier	i
>533	IdentifierDeclType	int
>534	IdentifierDeclStatement	 
>535	IdentifierDecl	sensitivity
>536	Identifier	sensitivity
>537	IdentifierDeclType	menuoptions_t
>538	ExpressionStatement	 
>539	CallExpression	m_menus . push_back ( m_menu )
>540	ArgumentList	m_menu
>541	Argument	m_menu
>542	Identifier	m_menu
>543	Callee	m_menus . push_back
>544	MemberAccess	m_menus . push_back
>545	Identifier	push_back
>546	Identifier	m_menus
>547	ExpressionStatement	 
>548	CallExpression	m_menusystem . add_menu ( \"videosettings\" , m_menu )
>549	ArgumentList	\"videosettings\"
>550	Argument	m_menu
>551	Identifier	m_menu
>552	Argument	\"videosettings\"
>553	PrimaryExpression	\"videosettings\"
>554	Callee	m_menusystem . add_menu
>555	MemberAccess	m_menusystem . add_menu
>556	Identifier	add_menu
>557	Identifier	m_menusystem
>558	ExpressionStatement	 
>559	AssignmentExpr	m_menu = new GraphicMenu ( items , g_resources . font , 1.0 )
>560	Expression	items , g_resources . font , 1.0
>561	Expression	g_resources . font , 1.0
>562	PrimaryExpression	1.0
>563	MemberAccess	g_resources . font
>564	Identifier	font
>565	Identifier	g_resources
>566	Identifier	items
>567	Identifier	m_menu
>568	ExpressionStatement	 
>569	CallExpression	items . push_back ( Menuitem ( \"\" , \"Back\" , \"\" , \"
>570	ArgumentList	Menuitem ( \"\" , \"Back\" , \"\" , \"
>571	Argument	Menuitem ( \"\" , \"Back\" , \"\" , \"
>572	CallExpression	Menuitem ( \"\" , \"Back\" , \"\" , \"
>573	ArgumentList	\"\"
>574	Argument	\"
>575	PrimaryExpression	\"
>576	Argument	\"\"
>577	PrimaryExpression	\"\"
>578	Argument	\"Back\"
>579	PrimaryExpression	\"Back\"
>580	Argument	\"\"
>581	PrimaryExpression	\"\"
>582	Callee	Menuitem
>583	Identifier	Menuitem
>584	Callee	items . push_back
>585	MemberAccess	items . push_back
>586	Identifier	push_back
>587	Identifier	items
>588	ExpressionStatement	 
>589	CallExpression	items . push_back ( Menuitem ( \"\" , \"Apply settings\" , \"apply_video_settings\" , \"\" ) )
>590	ArgumentList	Menuitem ( \"\" , \"Apply settings\" , \"apply_video_settings\" , \"\" )
>591	Argument	Menuitem ( \"\" , \"Apply settings\" , \"apply_video_settings\" , \"\" )
>592	CallExpression	Menuitem ( \"\" , \"Apply settings\" , \"apply_video_settings\" , \"\" )
>593	ArgumentList	\"\"
>594	Argument	\"\"
>595	PrimaryExpression	\"\"
>596	Argument	\"apply_video_settings\"
>597	PrimaryExpression	\"apply_video_settings\"
>598	Argument	\"Apply settings\"
>599	PrimaryExpression	\"Apply settings\"
>600	Argument	\"\"
>601	PrimaryExpression	\"\"
>602	Callee	Menuitem
>603	Identifier	Menuitem
>604	Callee	items . push_back
>605	MemberAccess	items . push_back
>606	Identifier	push_back
>607	Identifier	items
>608	ExpressionStatement	 
>609	CallExpression	items . push_back ( Menuitem ( \"vsync\" , \"V-sync\" , \"\" , \"\" , boolean , g_settings -> m_vsync ) )
>610	ArgumentList	Menuitem ( \"vsync\" , \"V-sync\" , \"\" , \"\" , boolean , g_settings -> m_vsync )
>611	Argument	Menuitem ( \"vsync\" , \"V-sync\" , \"\" , \"\" , boolean , g_settings -> m_vsync )
>612	CallExpression	Menuitem ( \"vsync\" , \"V-sync\" , \"\" , \"\" , boolean , g_settings -> m_vsync )
>613	ArgumentList	\"vsync\"
>614	Argument	g_settings -> m_vsync
>615	PtrMemberAccess	g_settings -> m_vsync
>616	Identifier	m_vsync
>617	Identifier	g_settings
>618	Argument	boolean
>619	Identifier	boolean
>620	Argument	\"\"
>621	PrimaryExpression	\"\"
>622	Argument	\"\"
>623	PrimaryExpression	\"\"
>624	Argument	\"V-sync\"
>625	PrimaryExpression	\"V-sync\"
>626	Argument	\"vsync\"
>627	PrimaryExpression	\"vsync\"
>628	Callee	Menuitem
>629	Identifier	Menuitem
>630	Callee	items . push_back
>631	MemberAccess	items . push_back
>632	Identifier	push_back
>633	Identifier	items
>634	ExpressionStatement	 
>635	CallExpression	items . push_back ( Menuitem ( \"fullscreen\" , \"Fullscreen\" , \"\" , \"\" , boolean , g_settings -> m_fullscreen ) )
>636	ArgumentList	Menuitem ( \"fullscreen\" , \"Fullscreen\" , \"\" , \"\" , boolean , g_settings -> m_fullscreen )
>637	Argument	Menuitem ( \"fullscreen\" , \"Fullscreen\" , \"\" , \"\" , boolean , g_settings -> m_fullscreen )
>638	CallExpression	Menuitem ( \"fullscreen\" , \"Fullscreen\" , \"\" , \"\" , boolean , g_settings -> m_fullscreen )
>639	ArgumentList	\"fullscreen\"
>640	Argument	g_settings -> m_fullscreen
>641	PtrMemberAccess	g_settings -> m_fullscreen
>642	Identifier	m_fullscreen
>643	Identifier	g_settings
>644	Argument	boolean
>645	Identifier	boolean
>646	Argument	\"\"
>647	PrimaryExpression	\"\"
>648	Argument	\"\"
>649	PrimaryExpression	\"\"
>650	Argument	\"Fullscreen\"
>651	PrimaryExpression	\"Fullscreen\"
>652	Argument	\"fullscreen\"
>653	PrimaryExpression	\"fullscreen\"
>654	Callee	Menuitem
>655	Identifier	Menuitem
>656	Callee	items . push_back
>657	MemberAccess	items . push_back
>658	Identifier	push_back
>659	Identifier	items
>660	ExpressionStatement	 
>661	CallExpression	items . push_back ( Menuitem ( \"resolution\" , \"Resolution\" , \"\" , \"\" , resolutions , selected_resolution ) )
>662	ArgumentList	Menuitem ( \"resolution\" , \"Resolution\" , \"\" , \"\" , resolutions , selected_resolution )
>663	Argument	Menuitem ( \"resolution\" , \"Resolution\" , \"\" , \"\" , resolutions , selected_resolution )
>664	CallExpression	Menuitem ( \"resolution\" , \"Resolution\" , \"\" , \"\" , resolutions , selected_resolution )
>665	ArgumentList	\"resolution\"
>666	Argument	selected_resolution
>667	Identifier	selected_resolution
>668	Argument	resolutions
>669	Identifier	resolutions
>670	Argument	\"\"
>671	PrimaryExpression	\"\"
>672	Argument	\"\"
>673	PrimaryExpression	\"\"
>674	Argument	\"Resolution\"
>675	PrimaryExpression	\"Resolution\"
>676	Argument	\"resolution\"
>677	PrimaryExpression	\"resolution\"
>678	Callee	Menuitem
>679	Identifier	Menuitem
>680	Callee	items . push_back
>681	MemberAccess	items . push_back
>682	Identifier	push_back
>683	Identifier	items
>684	ExpressionStatement	 
>685	CallExpression	items . clear ( )
>686	ArgumentList	 
>687	Callee	items . clear
>688	MemberAccess	items . clear
>689	Identifier	clear
>690	Identifier	items
>691	ExpressionStatement	 
>692	CallExpression	boolean . push_back ( MenuitemOption ( \"Yes\" , \"1\" ) )
>693	ArgumentList	MenuitemOption ( \"Yes\" , \"1\" )
>694	Argument	MenuitemOption ( \"Yes\" , \"1\" )
>695	CallExpression	MenuitemOption ( \"Yes\" , \"1\" )
>696	ArgumentList	\"Yes\"
>697	Argument	\"1\"
>698	PrimaryExpression	\"1\"
>699	Argument	\"Yes\"
>700	PrimaryExpression	\"Yes\"
>701	Callee	MenuitemOption
>702	Identifier	MenuitemOption
>703	Callee	boolean . push_back
>704	MemberAccess	boolean . push_back
>705	Identifier	push_back
>706	Identifier	boolean
>707	ExpressionStatement	 
>708	CallExpression	boolean . push_back ( MenuitemOption ( \"No\" , \"0\" ) )
>709	ArgumentList	MenuitemOption ( \"No\" , \"0\" )
>710	Argument	MenuitemOption ( \"No\" , \"0\" )
>711	CallExpression	MenuitemOption ( \"No\" , \"0\" )
>712	ArgumentList	\"No\"
>713	Argument	\"0\"
>714	PrimaryExpression	\"0\"
>715	Argument	\"No\"
>716	PrimaryExpression	\"No\"
>717	Callee	MenuitemOption
>718	Identifier	MenuitemOption
>719	Callee	boolean . push_back
>720	MemberAccess	boolean . push_back
>721	Identifier	push_back
>722	Identifier	boolean
>723	IdentifierDeclStatement	 
>724	IdentifierDecl	boolean
>725	Identifier	boolean
>726	IdentifierDeclType	menuoptions_t
>727	ExpressionStatement	 
>728	CallExpression	m_menus . push_back ( m_menu )
>729	ArgumentList	m_menu
>730	Argument	m_menu
>731	Identifier	m_menu
>732	Callee	m_menus . push_back
>733	MemberAccess	m_menus . push_back
>734	Identifier	push_back
>735	Identifier	m_menus
>736	ExpressionStatement	 
>737	CallExpression	m_menusystem . add_menu ( \"settings\" , m_menu )
>738	ArgumentList	\"settings\"
>739	Argument	m_menu
>740	Identifier	m_menu
>741	Argument	\"settings\"
>742	PrimaryExpression	\"settings\"
>743	Callee	m_menusystem . add_menu
>744	MemberAccess	m_menusystem . add_menu
>745	Identifier	add_menu
>746	Identifier	m_menusystem
>747	ExpressionStatement	 
>748	AssignmentExpr	m_menu = new GraphicMenu ( items , g_resources . font , 1.0 )
>749	Expression	items , g_resources . font , 1.0
>750	Expression	g_resources . font , 1.0
>751	PrimaryExpression	1.0
>752	MemberAccess	g_resources . font
>753	Identifier	font
>754	Identifier	g_resources
>755	Identifier	items
>756	Identifier	m_menu
>757	ExpressionStatement	 
>758	CallExpression	items . push_back ( Menuitem ( \"\" , \"Back\" , \"\" , \"
>759	ArgumentList	Menuitem ( \"\" , \"Back\" , \"\" , \"
>760	Argument	Menuitem ( \"\" , \"Back\" , \"\" , \"
>761	CallExpression	Menuitem ( \"\" , \"Back\" , \"\" , \"
>762	ArgumentList	\"\"
>763	Argument	\"
>764	PrimaryExpression	\"
>765	Argument	\"\"
>766	PrimaryExpression	\"\"
>767	Argument	\"Back\"
>768	PrimaryExpression	\"Back\"
>769	Argument	\"\"
>770	PrimaryExpression	\"\"
>771	Callee	Menuitem
>772	Identifier	Menuitem
>773	Callee	items . push_back
>774	MemberAccess	items . push_back
>775	Identifier	push_back
>776	Identifier	items
>777	ExpressionStatement	 
>778	CallExpression	items . push_back ( Menuitem ( \"\" , \"Input Settings\" , \"\" , \"inputsettings\" ) )
>779	ArgumentList	Menuitem ( \"\" , \"Input Settings\" , \"\" , \"inputsettings\" )
>780	Argument	Menuitem ( \"\" , \"Input Settings\" , \"\" , \"inputsettings\" )
>781	CallExpression	Menuitem ( \"\" , \"Input Settings\" , \"\" , \"inputsettings\" )
>782	ArgumentList	\"\"
>783	Argument	\"inputsettings\"
>784	PrimaryExpression	\"inputsettings\"
>785	Argument	\"\"
>786	PrimaryExpression	\"\"
>787	Argument	\"Input Settings\"
>788	PrimaryExpression	\"Input Settings\"
>789	Argument	\"\"
>790	PrimaryExpression	\"\"
>791	Callee	Menuitem
>792	Identifier	Menuitem
>793	Callee	items . push_back
>794	MemberAccess	items . push_back
>795	Identifier	push_back
>796	Identifier	items
>797	ExpressionStatement	 
>798	CallExpression	items . push_back ( Menuitem ( \"\" , \"Video Settings\" , \"\" , \"videosettings\" ) )
>799	ArgumentList	Menuitem ( \"\" , \"Video Settings\" , \"\" , \"videosettings\" )
>800	Argument	Menuitem ( \"\" , \"Video Settings\" , \"\" , \"videosettings\" )
>801	CallExpression	Menuitem ( \"\" , \"Video Settings\" , \"\" , \"videosettings\" )
>802	ArgumentList	\"\"
>803	Argument	\"videosettings\"
>804	PrimaryExpression	\"videosettings\"
>805	Argument	\"\"
>806	PrimaryExpression	\"\"
>807	Argument	\"Video Settings\"
>808	PrimaryExpression	\"Video Settings\"
>809	Argument	\"\"
>810	PrimaryExpression	\"\"
>811	Callee	Menuitem
>812	Identifier	Menuitem
>813	Callee	items . push_back
>814	MemberAccess	items . push_back
>815	Identifier	push_back
>816	Identifier	items
>817	ExpressionStatement	 
>818	CallExpression	items . clear ( )
>819	ArgumentList	 
>820	Callee	items . clear
>821	MemberAccess	items . clear
>822	Identifier	clear
>823	Identifier	items
>824	ExpressionStatement	 
>825	CallExpression	m_menus . push_back ( m_menu )
>826	ArgumentList	m_menu
>827	Argument	m_menu
>828	Identifier	m_menu
>829	Callee	m_menus . push_back
>830	MemberAccess	m_menus . push_back
>831	Identifier	push_back
>832	Identifier	m_menus
>833	ExpressionStatement	 
>834	CallExpression	m_menusystem . add_menu ( \"main_ingame\" , m_menu )
>835	ArgumentList	\"main_ingame\"
>836	Argument	m_menu
>837	Identifier	m_menu
>838	Argument	\"main_ingame\"
>839	PrimaryExpression	\"main_ingame\"
>840	Callee	m_menusystem . add_menu
>841	MemberAccess	m_menusystem . add_menu
>842	Identifier	add_menu
>843	Identifier	m_menusystem
>844	ExpressionStatement	 
>845	AssignmentExpr	m_menu = new GraphicMenu ( items , g_resources . font , 1.0 )
>846	Expression	items , g_resources . font , 1.0
>847	Expression	g_resources . font , 1.0
>848	PrimaryExpression	1.0
>849	MemberAccess	g_resources . font
>850	Identifier	font
>851	Identifier	g_resources
>852	Identifier	items
>853	Identifier	m_menu
>854	ExpressionStatement	 
>855	CallExpression	items . push_front ( Menuitem ( \"\" , \"Resume Game\" , \"resumegame\" , \"\" ) )
>856	ArgumentList	Menuitem ( \"\" , \"Resume Game\" , \"resumegame\" , \"\" )
>857	Argument	Menuitem ( \"\" , \"Resume Game\" , \"resumegame\" , \"\" )
>858	CallExpression	Menuitem ( \"\" , \"Resume Game\" , \"resumegame\" , \"\" )
>859	ArgumentList	\"\"
>860	Argument	\"\"
>861	PrimaryExpression	\"\"
>862	Argument	\"resumegame\"
>863	PrimaryExpression	\"resumegame\"
>864	Argument	\"Resume Game\"
>865	PrimaryExpression	\"Resume Game\"
>866	Argument	\"\"
>867	PrimaryExpression	\"\"
>868	Callee	Menuitem
>869	Identifier	Menuitem
>870	Callee	items . push_front
>871	MemberAccess	items . push_front
>872	Identifier	push_front
>873	Identifier	items
>874	ExpressionStatement	 
>875	CallExpression	m_menus . push_back ( m_menu )
>876	ArgumentList	m_menu
>877	Argument	m_menu
>878	Identifier	m_menu
>879	Callee	m_menus . push_back
>880	MemberAccess	m_menus . push_back
>881	Identifier	push_back
>882	Identifier	m_menus
>883	ExpressionStatement	 
>884	CallExpression	m_menusystem . add_menu ( \"main\" , m_menu )
>885	ArgumentList	\"main\"
>886	Argument	m_menu
>887	Identifier	m_menu
>888	Argument	\"main\"
>889	PrimaryExpression	\"main\"
>890	Callee	m_menusystem . add_menu
>891	MemberAccess	m_menusystem . add_menu
>892	Identifier	add_menu
>893	Identifier	m_menusystem
>894	IdentifierDeclStatement	 
>895	IdentifierDecl	* m_menu = new GraphicMenu ( items , g_resources . font , 1.0 )
>896	AssignmentExpr	* m_menu = new GraphicMenu ( items , g_resources . font , 1.0 )
>897	Expression	items , g_resources . font , 1.0
>898	Expression	g_resources . font , 1.0
>899	PrimaryExpression	1.0
>900	MemberAccess	g_resources . font
>901	Identifier	font
>902	Identifier	g_resources
>903	Identifier	items
>904	Identifier	m_menu
>905	Identifier	m_menu
>906	IdentifierDeclType	Menu *
>907	ExpressionStatement	 
>908	CallExpression	items . push_back ( Menuitem ( \"\" , \"Exit\" , \"exit\" , \"\" ) )
>909	ArgumentList	Menuitem ( \"\" , \"Exit\" , \"exit\" , \"\" )
>910	Argument	Menuitem ( \"\" , \"Exit\" , \"exit\" , \"\" )
>911	CallExpression	Menuitem ( \"\" , \"Exit\" , \"exit\" , \"\" )
>912	ArgumentList	\"\"
>913	Argument	\"\"
>914	PrimaryExpression	\"\"
>915	Argument	\"exit\"
>916	PrimaryExpression	\"exit\"
>917	Argument	\"Exit\"
>918	PrimaryExpression	\"Exit\"
>919	Argument	\"\"
>920	PrimaryExpression	\"\"
>921	Callee	Menuitem
>922	Identifier	Menuitem
>923	Callee	items . push_back
>924	MemberAccess	items . push_back
>925	Identifier	push_back
>926	Identifier	items
>927	ExpressionStatement	 
>928	CallExpression	items . push_back ( Menuitem ( \"\" , \"Credits\" , \"credits\" , \"\" ) )
>929	ArgumentList	Menuitem ( \"\" , \"Credits\" , \"credits\" , \"\" )
>930	Argument	Menuitem ( \"\" , \"Credits\" , \"credits\" , \"\" )
>931	CallExpression	Menuitem ( \"\" , \"Credits\" , \"credits\" , \"\" )
>932	ArgumentList	\"\"
>933	Argument	\"\"
>934	PrimaryExpression	\"\"
>935	Argument	\"credits\"
>936	PrimaryExpression	\"credits\"
>937	Argument	\"Credits\"
>938	PrimaryExpression	\"Credits\"
>939	Argument	\"\"
>940	PrimaryExpression	\"\"
>941	Callee	Menuitem
>942	Identifier	Menuitem
>943	Callee	items . push_back
>944	MemberAccess	items . push_back
>945	Identifier	push_back
>946	Identifier	items
>947	ExpressionStatement	 
>948	CallExpression	items . push_back ( Menuitem ( \"\" , \"Hiscore\" , \"scores\" , \"\" ) )
>949	ArgumentList	Menuitem ( \"\" , \"Hiscore\" , \"scores\" , \"\" )
>950	Argument	Menuitem ( \"\" , \"Hiscore\" , \"scores\" , \"\" )
>951	CallExpression	Menuitem ( \"\" , \"Hiscore\" , \"scores\" , \"\" )
>952	ArgumentList	\"\"
>953	Argument	\"\"
>954	PrimaryExpression	\"\"
>955	Argument	\"scores\"
>956	PrimaryExpression	\"scores\"
>957	Argument	\"Hiscore\"
>958	PrimaryExpression	\"Hiscore\"
>959	Argument	\"\"
>960	PrimaryExpression	\"\"
>961	Callee	Menuitem
>962	Identifier	Menuitem
>963	Callee	items . push_back
>964	MemberAccess	items . push_back
>965	Identifier	push_back
>966	Identifier	items
>967	ExpressionStatement	 
>968	CallExpression	items . push_back ( Menuitem ( \"\" , \"Settings\" , \"\" , \"settings\" ) )
>969	ArgumentList	Menuitem ( \"\" , \"Settings\" , \"\" , \"settings\" )
>970	Argument	Menuitem ( \"\" , \"Settings\" , \"\" , \"settings\" )
>971	CallExpression	Menuitem ( \"\" , \"Settings\" , \"\" , \"settings\" )
>972	ArgumentList	\"\"
>973	Argument	\"settings\"
>974	PrimaryExpression	\"settings\"
>975	Argument	\"\"
>976	PrimaryExpression	\"\"
>977	Argument	\"Settings\"
>978	PrimaryExpression	\"Settings\"
>979	Argument	\"\"
>980	PrimaryExpression	\"\"
>981	Callee	Menuitem
>982	Identifier	Menuitem
>983	Callee	items . push_back
>984	MemberAccess	items . push_back
>985	Identifier	push_back
>986	Identifier	items
>987	ExpressionStatement	 
>988	CallExpression	items . push_back ( Menuitem ( \"\" , \"New Game\" , \"\" , \"newgame\" ) )
>989	ArgumentList	Menuitem ( \"\" , \"New Game\" , \"\" , \"newgame\" )
>990	Argument	Menuitem ( \"\" , \"New Game\" , \"\" , \"newgame\" )
>991	CallExpression	Menuitem ( \"\" , \"New Game\" , \"\" , \"newgame\" )
>992	ArgumentList	\"\"
>993	Argument	\"newgame\"
>994	PrimaryExpression	\"newgame\"
>995	Argument	\"\"
>996	PrimaryExpression	\"\"
>997	Argument	\"New Game\"
>998	PrimaryExpression	\"New Game\"
>999	Argument	\"\"
>1000	PrimaryExpression	\"\"
>1001	Callee	Menuitem
>1002	Identifier	Menuitem
>1003	Callee	items . push_back
>1004	MemberAccess	items . push_back
>1005	Identifier	push_back
>1006	Identifier	items
>1007	IdentifierDeclStatement	 
>1008	IdentifierDecl	items
>1009	Identifier	items
>1010	IdentifierDeclType	menuitems_t
>1011	ExpressionStatement	 
>1012	Identifier	vidmodes
>1013	Statement	 
>1014	Statement	 
>1015	Statement	 
>1016	ForStatement	for ( int i = 0 , x = 0 ; i < nummodes ; ++ i )
>1017	CompoundStatement	 
>1018	ExpressionStatement	 
>1019	IncDecOp	x ++
>1020	IncDec	++
>1021	Identifier	x
>1022	IfStatement	if ( vidmodes [ i ] . Width == current_w && vidmodes [ i ] . Height == current_h )
>1023	ExpressionStatement	 
>1024	AssignmentExpr	selected_resolution = x
>1025	Identifier	x
>1026	Identifier	selected_resolution
>1027	Condition	 
>1028	AndExpression	vidmodes [ i ] . Width == current_w && vidmodes [ i ] . Height == current_h
>1029	EqualityExpression	vidmodes [ i ] . Height == current_h
>1030	Identifier	current_h
>1031	MemberAccess	vidmodes [ i ] . Height
>1032	Identifier	Height
>1033	ArrayIndexing	vidmodes [ i ]
>1034	Identifier	i
>1035	Identifier	vidmodes
>1036	EqualityExpression	vidmodes [ i ] . Width == current_w
>1037	Identifier	current_w
>1038	MemberAccess	vidmodes [ i ] . Width
>1039	Identifier	Width
>1040	ArrayIndexing	vidmodes [ i ]
>1041	Identifier	i
>1042	Identifier	vidmodes
>1043	ExpressionStatement	 
>1044	CallExpression	resolutions . push_back ( MenuitemOption ( s , s2 ) )
>1045	ArgumentList	MenuitemOption ( s , s2 )
>1046	Argument	MenuitemOption ( s , s2 )
>1047	CallExpression	MenuitemOption ( s , s2 )
>1048	ArgumentList	s
>1049	Argument	s2
>1050	Identifier	s2
>1051	Argument	s
>1052	Identifier	s
>1053	Callee	MenuitemOption
>1054	Identifier	MenuitemOption
>1055	Callee	resolutions . push_back
>1056	MemberAccess	resolutions . push_back
>1057	Identifier	push_back
>1058	Identifier	resolutions
>1059	IdentifierDeclStatement	 
>1060	IdentifierDecl	s2 = to_string < int > ( vidmodes [ i ] . Width ) + \" \" + to_string < int > ( vidmodes [ i ] . Height )
>1061	AssignmentExpr	s2 = to_string < int > ( vidmodes [ i ] . Width ) + \" \" + to_string < int > ( vidmodes [ i ] . Height )
>1062	RelationalExpression	to_string < int > ( vidmodes [ i ] . Width ) + \" \" + to_string < int > ( vidmodes [ i ] . Height )
>1063	RelationalExpression	int > ( vidmodes [ i ] . Width ) + \" \" + to_string < int > ( vidmodes [ i ] . Height )
>1064	RelationalExpression	( vidmodes [ i ] . Width ) + \" \" + to_string < int > ( vidmodes [ i ] . Height )
>1065	RelationalExpression	int > ( vidmodes [ i ] . Height )
>1066	MemberAccess	vidmodes [ i ] . Height
>1067	Identifier	Height
>1068	ArrayIndexing	vidmodes [ i ]
>1069	Identifier	i
>1070	Identifier	vidmodes
>1071	Identifier	int
>1072	AdditiveExpression	( vidmodes [ i ] . Width ) + \" \" + to_string
>1073	AdditiveExpression	\" \" + to_string
>1074	Identifier	to_string
>1075	PrimaryExpression	\" \"
>1076	MemberAccess	vidmodes [ i ] . Width
>1077	Identifier	Width
>1078	ArrayIndexing	vidmodes [ i ]
>1079	Identifier	i
>1080	Identifier	vidmodes
>1081	Identifier	int
>1082	Identifier	to_string
>1083	Identifier	s2
>1084	Identifier	s2
>1085	IdentifierDeclType	string
>1086	IdentifierDeclStatement	 
>1087	IdentifierDecl	s = to_string < int > ( vidmodes [ i ] . Width ) + \"x\" + to_string < int > ( vidmodes [ i ] . Height )
>1088	AssignmentExpr	s = to_string < int > ( vidmodes [ i ] . Width ) + \"x\" + to_string < int > ( vidmodes [ i ] . Height )
>1089	RelationalExpression	to_string < int > ( vidmodes [ i ] . Width ) + \"x\" + to_string < int > ( vidmodes [ i ] . Height )
>1090	RelationalExpression	int > ( vidmodes [ i ] . Width ) + \"x\" + to_string < int > ( vidmodes [ i ] . Height )
>1091	RelationalExpression	( vidmodes [ i ] . Width ) + \"x\" + to_string < int > ( vidmodes [ i ] . Height )
>1092	RelationalExpression	int > ( vidmodes [ i ] . Height )
>1093	MemberAccess	vidmodes [ i ] . Height
>1094	Identifier	Height
>1095	ArrayIndexing	vidmodes [ i ]
>1096	Identifier	i
>1097	Identifier	vidmodes
>1098	Identifier	int
>1099	AdditiveExpression	( vidmodes [ i ] . Width ) + \"x\" + to_string
>1100	AdditiveExpression	\"x\" + to_string
>1101	Identifier	to_string
>1102	PrimaryExpression	\"x\"
>1103	MemberAccess	vidmodes [ i ] . Width
>1104	Identifier	Width
>1105	ArrayIndexing	vidmodes [ i ]
>1106	Identifier	i
>1107	Identifier	vidmodes
>1108	Identifier	int
>1109	Identifier	to_string
>1110	Identifier	s
>1111	Identifier	s
>1112	IdentifierDeclType	string
>1113	IfStatement	if ( vidmodes [ i ] . Width < 1024 )
>1114	ContinueStatement	 
>1115	Condition	 
>1116	RelationalExpression	vidmodes [ i ] . Width < 1024
>1117	PrimaryExpression	1024
>1118	MemberAccess	vidmodes [ i ] . Width
>1119	Identifier	Width
>1120	ArrayIndexing	vidmodes [ i ]
>1121	Identifier	i
>1122	Identifier	vidmodes
>1123	IfStatement	if ( ( vidmodes [ i ] . RedBits + vidmodes [ i ] . GreenBits + vidmodes [ i ] . BlueBits ) < 24 )
>1124	ContinueStatement	 
>1125	Condition	 
>1126	RelationalExpression	( vidmodes [ i ] . RedBits + vidmodes [ i ] . GreenBits + vidmodes [ i ] . BlueBits ) < 24
>1127	PrimaryExpression	24
>1128	AdditiveExpression	vidmodes [ i ] . RedBits + vidmodes [ i ] . GreenBits + vidmodes [ i ] . BlueBits
>1129	AdditiveExpression	vidmodes [ i ] . GreenBits + vidmodes [ i ] . BlueBits
>1130	MemberAccess	vidmodes [ i ] . BlueBits
>1131	Identifier	BlueBits
>1132	ArrayIndexing	vidmodes [ i ]
>1133	Identifier	i
>1134	Identifier	vidmodes
>1135	MemberAccess	vidmodes [ i ] . GreenBits
>1136	Identifier	GreenBits
>1137	ArrayIndexing	vidmodes [ i ]
>1138	Identifier	i
>1139	Identifier	vidmodes
>1140	MemberAccess	vidmodes [ i ] . RedBits
>1141	Identifier	RedBits
>1142	ArrayIndexing	vidmodes [ i ]
>1143	Identifier	i
>1144	Identifier	vidmodes
>1145	UnaryExpression	 
>1146	Identifier	i
>1147	IncDec	++
>1148	Condition	 
>1149	RelationalExpression	i < nummodes
>1150	Identifier	nummodes
>1151	Identifier	i
>1152	ForInit	 
>1153	IdentifierDeclStatement	int i = 0 , x = 0 ;
>1154	IdentifierDecl	x = 0
>1155	AssignmentExpr	x = 0
>1156	PrimaryExpression	0
>1157	Identifier	x
>1158	Identifier	x
>1159	IdentifierDeclType	int
>1160	IdentifierDecl	i = 0
>1161	AssignmentExpr	i = 0
>1162	PrimaryExpression	0
>1163	Identifier	i
>1164	Identifier	i
>1165	IdentifierDeclType	int
>1166	IdentifierDeclStatement	 
>1167	IdentifierDecl	selected_resolution = 0
>1168	AssignmentExpr	selected_resolution = 0
>1169	PrimaryExpression	0
>1170	Identifier	selected_resolution
>1171	Identifier	selected_resolution
>1172	IdentifierDeclType	int
>1173	IdentifierDeclStatement	 
>1174	IdentifierDecl	resolutions
>1175	Identifier	resolutions
>1176	IdentifierDeclType	menuoptions_t
>1177	IdentifierDeclStatement	 
>1178	IdentifierDecl	nummodes = glfwGetVideoModes ( vidmodes , 256 )
>1179	AssignmentExpr	nummodes = glfwGetVideoModes ( vidmodes , 256 )
>1180	CallExpression	glfwGetVideoModes ( vidmodes , 256 )
>1181	ArgumentList	vidmodes
>1182	Argument	256
>1183	PrimaryExpression	256
>1184	Argument	vidmodes
>1185	Identifier	vidmodes
>1186	Callee	glfwGetVideoModes
>1187	Identifier	glfwGetVideoModes
>1188	Identifier	nummodes
>1189	Identifier	nummodes
>1190	IdentifierDeclType	int
>1191	IdentifierDeclStatement	 
>1192	IdentifierDecl	* vidmodes = new GLFWvidmode [ 256 ]
>1193	AssignmentExpr	* vidmodes = new GLFWvidmode [ 256 ]
>1194	PrimaryExpression	256
>1195	Identifier	vidmodes
>1196	Identifier	vidmodes
>1197	IdentifierDeclType	GLFWvidmode *
>1198	ExpressionStatement	 
>1199	CallExpression	glfwGetWindowSize ( & current_w , & current_h )
>1200	ArgumentList	& current_w
>1201	Argument	& current_h
>1202	UnaryOp	& current_h
>1203	Identifier	current_h
>1204	UnaryOperator	&
>1205	Argument	& current_w
>1206	UnaryOp	& current_w
>1207	Identifier	current_w
>1208	UnaryOperator	&
>1209	Callee	glfwGetWindowSize
>1210	Identifier	glfwGetWindowSize
>1211	IdentifierDeclStatement	 
>1212	IdentifierDecl	current_h = 0
>1213	AssignmentExpr	current_h = 0
>1214	PrimaryExpression	0
>1215	Identifier	current_h
>1216	Identifier	current_h
>1217	IdentifierDeclType	int
>1218	IdentifierDecl	current_w = 0
>1219	AssignmentExpr	current_w = 0
>1220	PrimaryExpression	0
>1221	Identifier	current_w
>1222	Identifier	current_w
>1223	IdentifierDeclType	int
>1224	ExpressionStatement	 
>1225	AssignmentExpr	m_menusystem = MenuSystem ( )
>1226	CallExpression	MenuSystem ( )
>1227	ArgumentList	 
>1228	Callee	MenuSystem
>1229	Identifier	MenuSystem
>1230	Identifier	m_menusystem
>1281	FunctionDef	GameMenu 
>1282	ParameterList	str_pair_t action
>1283	Parameter	 
>1284	Identifier	action
>1285	ParameterType	str_pair_t
>1286	ReturnType	void
>1287	CompoundStatement	 
>1288	IfStatement	if ( name == \"resumegame\" )
>1289	CompoundStatement	 
>1290	ExpressionStatement	 
>1291	CallExpression	g_timer -> unpause ( )
>1292	ArgumentList	 
>1293	Callee	g_timer -> unpause
>1294	PtrMemberAccess	g_timer -> unpause
>1295	Identifier	unpause
>1296	Identifier	g_timer
>1297	ExpressionStatement	 
>1298	AssignmentExpr	g_mode = MODE_GAME
>1299	Identifier	MODE_GAME
>1300	Identifier	g_mode
>1301	Condition	 
>1302	EqualityExpression	name == \"resumegame\"
>1303	PrimaryExpression	\"resumegame\"
>1304	Identifier	name
>1305	IfStatement	if ( name == \"start_game\" )
>1306	CompoundStatement	 
>1307	ExpressionStatement	 
>1308	CallExpression	g_timer -> unpause ( )
>1309	ArgumentList	 
>1310	Callee	g_timer -> unpause
>1311	PtrMemberAccess	g_timer -> unpause
>1312	Identifier	unpause
>1313	Identifier	g_timer
>1314	ExpressionStatement	 
>1315	AssignmentExpr	g_mode = MODE_GAME
>1316	Identifier	MODE_GAME
>1317	Identifier	g_mode
>1318	ExpressionStatement	 
>1319	AssignmentExpr	g_current_game = new Game ( difficulty , wave )
>1320	Expression	difficulty , wave
>1321	Identifier	wave
>1322	Identifier	difficulty
>1323	Identifier	g_current_game
>1324	ExpressionStatement	 
>1325	Identifier	g_current_game
>1326	Statement	 
>1327	ExpressionStatement	 
>1328	CallExpression	m_menusystem . switch_to_menu ( \"main_ingame\" )
>1329	ArgumentList	\"main_ingame\"
>1330	Argument	\"main_ingame\"
>1331	PrimaryExpression	\"main_ingame\"
>1332	Callee	m_menusystem . switch_to_menu
>1333	MemberAccess	m_menusystem . switch_to_menu
>1334	Identifier	switch_to_menu
>1335	Identifier	m_menusystem
>1336	IdentifierDeclStatement	 
>1337	IdentifierDecl	wave = from_string < int > ( opts [ \"startingwave\" ] )
>1338	AssignmentExpr	wave = from_string < int > ( opts [ \"startingwave\" ] )
>1339	RelationalExpression	from_string < int > ( opts [ \"startingwave\" ] )
>1340	RelationalExpression	int > ( opts [ \"startingwave\" ] )
>1341	ArrayIndexing	opts [ \"startingwave\" ]
>1342	PrimaryExpression	\"startingwave\"
>1343	Identifier	opts
>1344	Identifier	int
>1345	Identifier	from_string
>1346	Identifier	wave
>1347	Identifier	wave
>1348	IdentifierDeclType	int
>1349	IdentifierDeclStatement	 
>1350	IdentifierDecl	difficulty = from_string < int > ( opts [ \"difficulty\" ] )
>1351	AssignmentExpr	difficulty = from_string < int > ( opts [ \"difficulty\" ] )
>1352	RelationalExpression	from_string < int > ( opts [ \"difficulty\" ] )
>1353	RelationalExpression	int > ( opts [ \"difficulty\" ] )
>1354	ArrayIndexing	opts [ \"difficulty\" ]
>1355	PrimaryExpression	\"difficulty\"
>1356	Identifier	opts
>1357	Identifier	int
>1358	Identifier	from_string
>1359	Identifier	difficulty
>1360	Identifier	difficulty
>1361	IdentifierDeclType	int
>1362	IdentifierDeclStatement	 
>1363	IdentifierDecl	opts = m -> collect_options ( )
>1364	AssignmentExpr	opts = m -> collect_options ( )
>1365	CallExpression	m -> collect_options ( )
>1366	ArgumentList	 
>1367	Callee	m -> collect_options
>1368	PtrMemberAccess	m -> collect_options
>1369	Identifier	collect_options
>1370	Identifier	m
>1371	Identifier	opts
>1372	Identifier	opts
>1373	IdentifierDeclType	map_str_str_t
>1374	IdentifierDeclStatement	 
>1375	IdentifierDecl	* m = m_menusystem . str_to_menup ( \"newgame\" )
>1376	AssignmentExpr	* m = m_menusystem . str_to_menup ( \"newgame\" )
>1377	CallExpression	m_menusystem . str_to_menup ( \"newgame\" )
>1378	ArgumentList	\"newgame\"
>1379	Argument	\"newgame\"
>1380	PrimaryExpression	\"newgame\"
>1381	Callee	m_menusystem . str_to_menup
>1382	MemberAccess	m_menusystem . str_to_menup
>1383	Identifier	str_to_menup
>1384	Identifier	m_menusystem
>1385	Identifier	m
>1386	Identifier	m
>1387	IdentifierDeclType	Menu *
>1388	Condition	 
>1389	EqualityExpression	name == \"start_game\"
>1390	PrimaryExpression	\"start_game\"
>1391	Identifier	name
>1392	IfStatement	if ( name == \"scores\" )
>1393	CompoundStatement	 
>1394	ExpressionStatement	 
>1395	AssignmentExpr	g_mode = MODE_SCORES
>1396	Identifier	MODE_SCORES
>1397	Identifier	g_mode
>1398	Condition	 
>1399	EqualityExpression	name == \"scores\"
>1400	PrimaryExpression	\"scores\"
>1401	Identifier	name
>1402	IfStatement	if ( name == \"credits\" )
>1403	CompoundStatement	 
>1404	ExpressionStatement	 
>1405	AssignmentExpr	g_mode = MODE_CREDITS
>1406	Identifier	MODE_CREDITS
>1407	Identifier	g_mode
>1408	Condition	 
>1409	EqualityExpression	name == \"credits\"
>1410	PrimaryExpression	\"credits\"
>1411	Identifier	name
>1412	IfStatement	if ( name == \"mouse_sensitivity_change\" )
>1413	CompoundStatement	 
>1414	ExpressionStatement	 
>1415	CallExpression	g_mouse . set_accel ( sens )
>1416	ArgumentList	sens
>1417	Argument	sens
>1418	Identifier	sens
>1419	Callee	g_mouse . set_accel
>1420	MemberAccess	g_mouse . set_accel
>1421	Identifier	set_accel
>1422	Identifier	g_mouse
>1423	ExpressionStatement	 
>1424	AssignmentExpr	g_settings -> m_mouse_sensitivity = sens
>1425	Identifier	sens
>1426	PtrMemberAccess	g_settings -> m_mouse_sensitivity
>1427	Identifier	m_mouse_sensitivity
>1428	Identifier	g_settings
>1429	IdentifierDeclStatement	 
>1430	IdentifierDecl	sens = from_string < int > ( value )
>1431	AssignmentExpr	sens = from_string < int > ( value )
>1432	RelationalExpression	from_string < int > ( value )
>1433	RelationalExpression	int > ( value )
>1434	Identifier	value
>1435	Identifier	int
>1436	Identifier	from_string
>1437	Identifier	sens
>1438	Identifier	sens
>1439	IdentifierDeclType	int
>1440	Condition	 
>1441	EqualityExpression	name == \"mouse_sensitivity_change\"
>1442	PrimaryExpression	\"mouse_sensitivity_change\"
>1443	Identifier	name
>1444	IfStatement	if ( name == \"layout_change\" )
>1445	CompoundStatement	 
>1446	ExpressionStatement	 
>1447	CallExpression	g_layouts -> set_layout ( value )
>1448	ArgumentList	value
>1449	Argument	value
>1450	Identifier	value
>1451	Callee	g_layouts -> set_layout
>1452	PtrMemberAccess	g_layouts -> set_layout
>1453	Identifier	set_layout
>1454	Identifier	g_layouts
>1455	Condition	 
>1456	EqualityExpression	name == \"layout_change\"
>1457	PrimaryExpression	\"layout_change\"
>1458	Identifier	name
>1459	IfStatement	if ( name == \"apply_video_settings\" )
>1460	CompoundStatement	 
>1461	ExpressionStatement	 
>1462	AssignmentExpr	g_exit = true
>1463	Identifier	true
>1464	Identifier	g_exit
>1465	ExpressionStatement	 
>1466	AssignmentExpr	g_restart = true
>1467	Identifier	true
>1468	Identifier	g_restart
>1469	ExpressionStatement	 
>1470	AssignmentExpr	g_settings -> m_fullscreen = ( from_string < int > ( opts [ \"fullscreen\" ] ) ? true 
>1471	ConditionalExpression	from_string < int > ( opts [ \"fullscreen\" ] ) ? true 
>1472	Identifier	false
>1473	Identifier	true
>1474	Condition	from_string < int > ( opts [ \"fullscreen\" ] )
>1475	RelationalExpression	from_string < int > ( opts [ \"fullscreen\" ] )
>1476	RelationalExpression	int > ( opts [ \"fullscreen\" ] )
>1477	ArrayIndexing	opts [ \"fullscreen\" ]
>1478	PrimaryExpression	\"fullscreen\"
>1479	Identifier	opts
>1480	Identifier	int
>1481	Identifier	from_string
>1482	PtrMemberAccess	g_settings -> m_fullscreen
>1483	Identifier	m_fullscreen
>1484	Identifier	g_settings
>1485	ExpressionStatement	 
>1486	AssignmentExpr	g_settings -> m_vsync = ( from_string < int > ( opts [ \"vsync\" ] ) ? true 
>1487	ConditionalExpression	from_string < int > ( opts [ \"vsync\" ] ) ? true 
>1488	Identifier	false
>1489	Identifier	true
>1490	Condition	from_string < int > ( opts [ \"vsync\" ] )
>1491	RelationalExpression	from_string < int > ( opts [ \"vsync\" ] )
>1492	RelationalExpression	int > ( opts [ \"vsync\" ] )
>1493	ArrayIndexing	opts [ \"vsync\" ]
>1494	PrimaryExpression	\"vsync\"
>1495	Identifier	opts
>1496	Identifier	int
>1497	Identifier	from_string
>1498	PtrMemberAccess	g_settings -> m_vsync
>1499	Identifier	m_vsync
>1500	Identifier	g_settings
>1501	ExpressionStatement	 
>1502	ShiftExpression	s >> g_settings -> m_res_x >> g_settings -> m_res_y
>1503	ShiftExpression	g_settings -> m_res_x >> g_settings -> m_res_y
>1504	PtrMemberAccess	g_settings -> m_res_y
>1505	Identifier	m_res_y
>1506	Identifier	g_settings
>1507	PtrMemberAccess	g_settings -> m_res_x
>1508	Identifier	m_res_x
>1509	Identifier	g_settings
>1510	Identifier	s
>1511	IdentifierDeclStatement	 
>1512	IdentifierDecl	s ( opts [ \"resolution\" ] )
>1513	ArrayIndexing	opts [ \"resolution\" ]
>1514	PrimaryExpression	\"resolution\"
>1515	Identifier	opts
>1516	Identifier	s
>1517	IdentifierDeclType	stringstream
>1518	IdentifierDeclStatement	 
>1519	IdentifierDecl	opts = m -> collect_options ( )
>1520	AssignmentExpr	opts = m -> collect_options ( )
>1521	CallExpression	m -> collect_options ( )
>1522	ArgumentList	 
>1523	Callee	m -> collect_options
>1524	PtrMemberAccess	m -> collect_options
>1525	Identifier	collect_options
>1526	Identifier	m
>1527	Identifier	opts
>1528	Identifier	opts
>1529	IdentifierDeclType	map_str_str_t
>1530	IdentifierDeclStatement	 
>1531	IdentifierDecl	* m = m_menusystem . str_to_menup ( \"videosettings\" )
>1532	AssignmentExpr	* m = m_menusystem . str_to_menup ( \"videosettings\" )
>1533	CallExpression	m_menusystem . str_to_menup ( \"videosettings\" )
>1534	ArgumentList	\"videosettings\"
>1535	Argument	\"videosettings\"
>1536	PrimaryExpression	\"videosettings\"
>1537	Callee	m_menusystem . str_to_menup
>1538	MemberAccess	m_menusystem . str_to_menup
>1539	Identifier	str_to_menup
>1540	Identifier	m_menusystem
>1541	Identifier	m
>1542	Identifier	m
>1543	IdentifierDeclType	Menu *
>1544	Condition	 
>1545	EqualityExpression	name == \"apply_video_settings\"
>1546	PrimaryExpression	\"apply_video_settings\"
>1547	Identifier	name
>1548	IfStatement	if ( name == \"exit\" )
>1549	CompoundStatement	 
>1550	ExpressionStatement	 
>1551	AssignmentExpr	g_exit = true
>1552	Identifier	true
>1553	Identifier	g_exit
>1554	Condition	 
>1555	EqualityExpression	name == \"exit\"
>1556	PrimaryExpression	\"exit\"
>1557	Identifier	name
>1558	IdentifierDeclStatement	 
>1559	IdentifierDecl	& value = action . second
>1560	AssignmentExpr	& value = action . second
>1561	MemberAccess	action . second
>1562	Identifier	second
>1563	Identifier	action
>1564	Identifier	value
>1565	Identifier	value
>1566	IdentifierDeclType	string &
>1567	IdentifierDeclStatement	 
>1568	IdentifierDecl	& name = action . first
>1569	AssignmentExpr	& name = action . first
>1570	MemberAccess	action . first
>1571	Identifier	first
>1572	Identifier	action
>1573	Identifier	name
>1574	Identifier	name
>1575	IdentifierDeclType	string &
>1614	FunctionDef	GameMenu 
>1615	ParameterList	 
>1616	ReturnType	void
>1617	CompoundStatement	 
>1618	ExpressionStatement	 
>1619	CallExpression	m_menusystem . draw ( vec2 ( 0.0 , 0.45f ) , true )
>1620	ArgumentList	vec2 ( 0.0 , 0.45f )
>1621	Argument	true
>1622	Identifier	true
>1623	Argument	vec2 ( 0.0 , 0.45f )
>1624	CallExpression	vec2 ( 0.0 , 0.45f )
>1625	ArgumentList	0.0
>1626	Argument	0.45f
>1627	PrimaryExpression	0.45f
>1628	Argument	0.0
>1629	PrimaryExpression	0.0
>1630	Callee	vec2
>1631	Identifier	vec2
>1632	Callee	m_menusystem . draw
>1633	MemberAccess	m_menusystem . draw
>1634	Identifier	draw
>1635	Identifier	m_menusystem
>1642	FunctionDef	GameMenu 
>1643	ParameterList	int button
>1644	Parameter	 
>1645	Identifier	button
>1646	ParameterType	int
>1647	ReturnType	void
>1648	CompoundStatement	 
>1649	ExpressionStatement	 
>1650	CallExpression	process_action ( * it )
>1651	ArgumentList	* it
>1652	Argument	* it
>1653	UnaryOp	* it
>1654	Identifier	it
>1655	UnaryOperator	*
>1656	Callee	process_action
>1657	Identifier	process_action
>1658	Statement	 
>1659	Statement	 
>1660	Statement	 
>1661	Statement	 
>1662	Statement	 
>1663	Statement	 
>1664	Statement	 
>1665	Statement	 
>1666	IdentifierDeclStatement	 
>1667	IdentifierDecl	actions = m_menusystem . get_pending_actions ( )
>1668	AssignmentExpr	actions = m_menusystem . get_pending_actions ( )
>1669	CallExpression	m_menusystem . get_pending_actions ( )
>1670	ArgumentList	 
>1671	Callee	m_menusystem . get_pending_actions
>1672	MemberAccess	m_menusystem . get_pending_actions
>1673	Identifier	get_pending_actions
>1674	Identifier	m_menusystem
>1675	Identifier	actions
>1676	Identifier	actions
>1677	IdentifierDeclType	vec_str_pair_t
>1678	ExpressionStatement	 
>1679	CallExpression	m_menusystem . mouse_action ( button )
>1680	ArgumentList	button
>1681	Argument	button
>1682	Identifier	button
>1683	Callee	m_menusystem . mouse_action
>1684	MemberAccess	m_menusystem . mouse_action
>1685	Identifier	mouse_action
>1686	Identifier	m_menusystem
>1696	FunctionDef	GameMenu 
>1697	ParameterList	 
>1698	ReturnType	void
>1699	CompoundStatement	 
>1700	ExpressionStatement	 
>1701	CallExpression	m_menusystem . mouse_moved ( )
>1702	ArgumentList	 
>1703	Callee	m_menusystem . mouse_moved
>1704	MemberAccess	m_menusystem . mouse_moved
>1705	Identifier	mouse_moved
>1706	Identifier	m_menusystem
>1711	FunctionDef	GameMenu 
>1712	ParameterList	int dir
>1713	Parameter	 
>1714	Identifier	dir
>1715	ParameterType	int
>1716	ReturnType	void
>1717	CompoundStatement	 
>1718	ExpressionStatement	 
>1719	CallExpression	m_menusystem . mouse_wheel ( dir )
>1720	ArgumentList	dir
>1721	Argument	dir
>1722	Identifier	dir
>1723	Callee	m_menusystem . mouse_wheel
>1724	MemberAccess	m_menusystem . mouse_wheel
>1725	Identifier	mouse_wheel
>1726	Identifier	m_menusystem
>1732	FunctionDef	GameMenu 
>1733	ParameterList	int key
>1734	Parameter	 
>1735	Identifier	key
>1736	ParameterType	int
>1737	ReturnType	void
>1738	CompoundStatement	 
>1739	ExpressionStatement	 
>1740	CallExpression	process_action ( * it )
>1741	ArgumentList	* it
>1742	Argument	* it
>1743	UnaryOp	* it
>1744	Identifier	it
>1745	UnaryOperator	*
>1746	Callee	process_action
>1747	Identifier	process_action
>1748	Statement	 
>1749	Statement	 
>1750	Statement	 
>1751	Statement	 
>1752	Statement	 
>1753	Statement	 
>1754	Statement	 
>1755	Statement	 
>1756	IdentifierDeclStatement	 
>1757	IdentifierDecl	actions = m_menusystem . get_pending_actions ( )
>1758	AssignmentExpr	actions = m_menusystem . get_pending_actions ( )
>1759	CallExpression	m_menusystem . get_pending_actions ( )
>1760	ArgumentList	 
>1761	Callee	m_menusystem . get_pending_actions
>1762	MemberAccess	m_menusystem . get_pending_actions
>1763	Identifier	get_pending_actions
>1764	Identifier	m_menusystem
>1765	Identifier	actions
>1766	Identifier	actions
>1767	IdentifierDeclType	vec_str_pair_t
>1768	IfStatement	if ( topexit )
>1769	CompoundStatement	 
>1770	IfStatement	if ( g_current_game )
>1771	ElseStatement	else
>1772	CompoundStatement	 
>1773	ExpressionStatement	 
>1774	AssignmentExpr	g_exit = true
>1775	Identifier	true
>1776	Identifier	g_exit
>1777	CompoundStatement	 
>1778	ExpressionStatement	 
>1779	CallExpression	g_timer -> unpause ( )
>1780	ArgumentList	 
>1781	Callee	g_timer -> unpause
>1782	PtrMemberAccess	g_timer -> unpause
>1783	Identifier	unpause
>1784	Identifier	g_timer
>1785	ExpressionStatement	 
>1786	AssignmentExpr	g_mode = MODE_GAME
>1787	Identifier	MODE_GAME
>1788	Identifier	g_mode
>1789	Condition	 
>1790	Identifier	g_current_game
>1791	Condition	 
>1792	Identifier	topexit
>1793	IdentifierDeclStatement	 
>1794	IdentifierDecl	topexit = m_menusystem . key_action ( key )
>1795	AssignmentExpr	topexit = m_menusystem . key_action ( key )
>1796	CallExpression	m_menusystem . key_action ( key )
>1797	ArgumentList	key
>1798	Argument	key
>1799	Identifier	key
>1800	Callee	m_menusystem . key_action
>1801	MemberAccess	m_menusystem . key_action
>1802	Identifier	key_action
>1803	Identifier	m_menusystem
>1804	Identifier	topexit
>1805	Identifier	topexit
>1806	IdentifierDeclType	bool
>1824	FunctionDef	GameMenu 
>1825	ParameterList	const int item
>1826	Parameter	 
>1827	Identifier	item
>1828	ParameterType	const int
>1829	ReturnType	void
>1830	CompoundStatement	 
>1831	ExpressionStatement	 
>1832	CallExpression	m_menusystem . switch_to_item ( item )
>1833	ArgumentList	item
>1834	Argument	item
>1835	Identifier	item
>1836	Callee	m_menusystem . switch_to_item
>1837	MemberAccess	m_menusystem . switch_to_item
>1838	Identifier	switch_to_item
>1839	Identifier	m_menusystem
>1845	FunctionDef	GameMenu 
>1846	ParameterList	const string & menu
>1847	Parameter	 
>1848	Identifier	menu
>1849	ParameterType	const string &
>1850	ReturnType	void
>1851	CompoundStatement	 
>1852	ExpressionStatement	 
>1853	CallExpression	m_menusystem . switch_to_menu ( menu )
>1854	ArgumentList	menu
>1855	Argument	menu
>1856	Identifier	menu
>1857	Callee	m_menusystem . switch_to_menu
>1858	MemberAccess	m_menusystem . switch_to_menu
>1859	Identifier	switch_to_menu
>1860	Identifier	m_menusystem
<13=15,14
<15=28,16
<16=26,17
<17=18
<18=22,19
<19=20
<20=21
<22=23
<23=25,24
<26=27
<28=29
<29=31,30
<31=32
<38=40,39
<40=45,41
<41=42
<42=44,43
<45=59,50,47,46
<47=49,48
<50=51
<51=58,52
<52=54,53
<54=55
<55=57,56
<59=60
<60=61
<61=66,65,62
<62=64,63
<73=76,75,74
<76=1224,1211,1198,1191,1177,1173,1166,1016,1015,1014,1013,1011,1007,987,967,947,927,907,894,883,874,854,844,833,824,817,797,777,757,747,736,727,723,707,691,77,86,97,107,127,151,175,199,219,226,242,258,274,290,306,310,326,342,358,362,382,383,384,385,386,387,388,389,390,391,392,393,405,409,418,429,439,459,487,494,534,538,547,558,568,588,608,634,660,684
<77=78
<78=82,79
<79=80
<80=81
<82=83
<83=85,84
<86=87
<87=93,88
<88=91,89
<89=90
<91=92
<93=94
<94=96,95
<97=98
<98=106,99
<99=105,100
<100=102,101
<102=104,103
<107=108
<108=123,109
<109=110
<110=111
<111=121,112
<112=119,117,115,113
<113=114
<115=116
<117=118
<119=120
<121=122
<123=124
<124=126,125
<127=128
<128=147,129
<129=130
<130=131
<131=145,132
<132=143,141,139,137,135,133
<133=134
<135=136
<137=138
<139=140
<141=142
<143=144
<145=146
<147=148
<148=150,149
<151=152
<152=171,153
<153=154
<154=155
<155=169,156
<156=167,165,163,161,159,157
<157=158
<159=160
<161=162
<163=164
<165=166
<167=168
<169=170
<171=172
<172=174,173
<175=176
<176=195,177
<177=178
<178=179
<179=193,180
<180=191,189,187,185,183,181
<181=182
<183=184
<185=186
<187=188
<189=190
<191=192
<193=194
<195=196
<196=198,197
<199=200
<200=215,201
<201=202
<202=203
<203=213,204
<204=211,209,207,205
<205=206
<207=208
<209=210
<211=212
<213=214
<215=216
<216=218,217
<219=220
<220=222,221
<222=223
<223=225,224
<226=227
<227=238,228
<228=229
<229=230
<230=236,231
<231=234,232
<232=233
<234=235
<236=237
<238=239
<239=241,240
<242=243
<243=254,244
<244=245
<245=246
<246=252,247
<247=250,248
<248=249
<250=251
<252=253
<254=255
<255=257,256
<258=259
<259=270,260
<260=261
<261=262
<262=268,263
<263=266,264
<264=265
<266=267
<268=269
<270=271
<271=273,272
<274=275
<275=286,276
<276=277
<277=278
<278=284,279
<279=282,280
<280=281
<282=283
<284=285
<286=287
<287=289,288
<290=291
<291=302,292
<292=293
<293=294
<294=300,295
<295=298,296
<296=297
<298=299
<300=301
<302=303
<303=305,304
<306=307
<307=309,308
<310=311
<311=322,312
<312=313
<313=314
<314=320,315
<315=318,316
<316=317
<318=319
<320=321
<322=323
<323=325,324
<326=327
<327=338,328
<328=329
<329=330
<330=336,331
<331=334,332
<332=333
<334=335
<336=337
<338=339
<339=341,340
<342=343
<343=354,344
<344=345
<345=346
<346=352,347
<347=350,348
<348=349
<350=351
<352=353
<354=355
<355=357,356
<358=359
<359=361,360
<362=363
<363=378,364
<364=365
<365=366
<366=376,367
<367=372,368
<368=369
<369=371,370
<372=373
<373=375,374
<376=377
<378=379
<379=381,380
<393=394
<394=404,403,395
<395=402,396
<396=398,397
<398=399
<399=401,400
<405=406
<406=408,407
<409=410
<410=414,411
<411=412
<412=413
<414=415
<415=417,416
<418=419
<419=425,420
<420=423,421
<421=422
<423=424
<425=426
<426=428,427
<429=430
<430=438,431
<431=437,432
<432=434,433
<434=436,435
<439=440
<440=455,441
<441=442
<442=443
<443=453,444
<444=451,449,447,445
<445=446
<447=448
<449=450
<451=452
<453=454
<455=456
<456=458,457
<459=460
<460=483,461
<461=462
<462=463
<463=481,464
<464=479,477,475,473,471,465
<465=466
<466=468,467
<468=470,469
<471=472
<473=474
<475=476
<477=478
<479=480
<481=482
<483=484
<484=486,485
<487=488
<488=490,489
<490=491
<491=493,492
<494=526,522,519,495
<495=496
<496=515,497
<497=498
<498=499
<499=513,500
<500=507,501
<501=502
<502=506,503
<503=505,504
<507=508
<508=512,509
<509=511,510
<513=514
<515=516
<516=518,517
<519=521,520
<522=523
<523=525,524
<526=527
<527=528
<528=533,532,529
<529=531,530
<534=535
<535=537,536
<538=539
<539=543,540
<540=541
<541=542
<543=544
<544=546,545
<547=548
<548=554,549
<549=552,550
<550=551
<552=553
<554=555
<555=557,556
<558=559
<559=567,560
<560=566,561
<561=563,562
<563=565,564
<568=569
<569=584,570
<570=571
<571=572
<572=582,573
<573=580,578,576,574
<574=575
<576=577
<578=579
<580=581
<582=583
<584=585
<585=587,586
<588=589
<589=604,590
<590=591
<591=592
<592=602,593
<593=600,598,596,594
<594=595
<596=597
<598=599
<600=601
<602=603
<604=605
<605=607,606
<608=609
<609=630,610
<610=611
<611=612
<612=628,613
<613=626,624,622,620,618,614
<614=615
<615=617,616
<618=619
<620=621
<622=623
<624=625
<626=627
<628=629
<630=631
<631=633,632
<634=635
<635=656,636
<636=637
<637=638
<638=654,639
<639=652,650,648,646,644,640
<640=641
<641=643,642
<644=645
<646=647
<648=649
<650=651
<652=653
<654=655
<656=657
<657=659,658
<660=661
<661=680,662
<662=663
<663=664
<664=678,665
<665=676,674,672,670,668,666
<666=667
<668=669
<670=671
<672=673
<674=675
<676=677
<678=679
<680=681
<681=683,682
<684=685
<685=687,686
<687=688
<688=690,689
<691=692
<692=703,693
<693=694
<694=695
<695=701,696
<696=699,697
<697=698
<699=700
<701=702
<703=704
<704=706,705
<707=708
<708=719,709
<709=710
<710=711
<711=717,712
<712=715,713
<713=714
<715=716
<717=718
<719=720
<720=722,721
<723=724
<724=726,725
<727=728
<728=732,729
<729=730
<730=731
<732=733
<733=735,734
<736=737
<737=743,738
<738=741,739
<739=740
<741=742
<743=744
<744=746,745
<747=748
<748=756,749
<749=755,750
<750=752,751
<752=754,753
<757=758
<758=773,759
<759=760
<760=761
<761=771,762
<762=769,767,765,763
<763=764
<765=766
<767=768
<769=770
<771=772
<773=774
<774=776,775
<777=778
<778=793,779
<779=780
<780=781
<781=791,782
<782=789,787,785,783
<783=784
<785=786
<787=788
<789=790
<791=792
<793=794
<794=796,795
<797=798
<798=813,799
<799=800
<800=801
<801=811,802
<802=809,807,805,803
<803=804
<805=806
<807=808
<809=810
<811=812
<813=814
<814=816,815
<817=818
<818=820,819
<820=821
<821=823,822
<824=825
<825=829,826
<826=827
<827=828
<829=830
<830=832,831
<833=834
<834=840,835
<835=838,836
<836=837
<838=839
<840=841
<841=843,842
<844=845
<845=853,846
<846=852,847
<847=849,848
<849=851,850
<854=855
<855=870,856
<856=857
<857=858
<858=868,859
<859=866,864,862,860
<860=861
<862=863
<864=865
<866=867
<868=869
<870=871
<871=873,872
<874=875
<875=879,876
<876=877
<877=878
<879=880
<880=882,881
<883=884
<884=890,885
<885=888,886
<886=887
<888=889
<890=891
<891=893,892
<894=895
<895=906,905,896
<896=904,897
<897=903,898
<898=900,899
<900=902,901
<907=908
<908=923,909
<909=910
<910=911
<911=921,912
<912=919,917,915,913
<913=914
<915=916
<917=918
<919=920
<921=922
<923=924
<924=926,925
<927=928
<928=943,929
<929=930
<930=931
<931=941,932
<932=939,937,935,933
<933=934
<935=936
<937=938
<939=940
<941=942
<943=944
<944=946,945
<947=948
<948=963,949
<949=950
<950=951
<951=961,952
<952=959,957,955,953
<953=954
<955=956
<957=958
<959=960
<961=962
<963=964
<964=966,965
<967=968
<968=983,969
<969=970
<970=971
<971=981,972
<972=979,977,975,973
<973=974
<975=976
<977=978
<979=980
<981=982
<983=984
<984=986,985
<987=988
<988=1003,989
<989=990
<990=991
<991=1001,992
<992=999,997,995,993
<993=994
<995=996
<997=998
<999=1000
<1001=1002
<1003=1004
<1004=1006,1005
<1007=1008
<1008=1010,1009
<1011=1012
<1016=1152,1148,1145,1017
<1017=1123,1113,1086,1059,1043,1022,1018
<1018=1019
<1019=1021,1020
<1022=1027,1023
<1023=1024
<1024=1026,1025
<1027=1028
<1028=1036,1029
<1029=1031,1030
<1031=1033,1032
<1033=1035,1034
<1036=1038,1037
<1038=1040,1039
<1040=1042,1041
<1043=1044
<1044=1055,1045
<1045=1046
<1046=1047
<1047=1053,1048
<1048=1051,1049
<1049=1050
<1051=1052
<1053=1054
<1055=1056
<1056=1058,1057
<1059=1060
<1060=1085,1084,1061
<1061=1083,1062
<1062=1082,1063
<1063=1081,1064
<1064=1072,1065
<1065=1071,1066
<1066=1068,1067
<1068=1070,1069
<1072=1076,1073
<1073=1075,1074
<1076=1078,1077
<1078=1080,1079
<1086=1087
<1087=1112,1111,1088
<1088=1110,1089
<1089=1109,1090
<1090=1108,1091
<1091=1099,1092
<1092=1098,1093
<1093=1095,1094
<1095=1097,1096
<1099=1103,1100
<1100=1102,1101
<1103=1105,1104
<1105=1107,1106
<1113=1115,1114
<1115=1116
<1116=1118,1117
<1118=1120,1119
<1120=1122,1121
<1123=1125,1124
<1125=1126
<1126=1128,1127
<1128=1140,1129
<1129=1135,1130
<1130=1132,1131
<1132=1134,1133
<1135=1137,1136
<1137=1139,1138
<1140=1142,1141
<1142=1144,1143
<1145=1147,1146
<1148=1149
<1149=1151,1150
<1152=1153
<1153=1160,1154
<1154=1159,1158,1155
<1155=1157,1156
<1160=1165,1164,1161
<1161=1163,1162
<1166=1167
<1167=1172,1171,1168
<1168=1170,1169
<1173=1174
<1174=1176,1175
<1177=1178
<1178=1190,1189,1179
<1179=1188,1180
<1180=1186,1181
<1181=1184,1182
<1182=1183
<1184=1185
<1186=1187
<1191=1192
<1192=1197,1196,1193
<1193=1195,1194
<1198=1199
<1199=1209,1200
<1200=1205,1201
<1201=1202
<1202=1204,1203
<1205=1206
<1206=1208,1207
<1209=1210
<1211=1218,1212
<1212=1217,1216,1213
<1213=1215,1214
<1218=1223,1222,1219
<1219=1221,1220
<1224=1225
<1225=1230,1226
<1226=1228,1227
<1228=1229
<1281=1287,1286,1282
<1282=1283
<1283=1285,1284
<1287=1567,1558,1548,1459,1444,1412,1402,1392,1305,1288
<1288=1301,1289
<1289=1297,1290
<1290=1291
<1291=1293,1292
<1293=1294
<1294=1296,1295
<1297=1298
<1298=1300,1299
<1301=1302
<1302=1304,1303
<1305=1388,1306
<1306=1374,1362,1349,1336,1327,1326,1324,1318,1314,1307
<1307=1308
<1308=1310,1309
<1310=1311
<1311=1313,1312
<1314=1315
<1315=1317,1316
<1318=1319
<1319=1323,1320
<1320=1322,1321
<1324=1325
<1327=1328
<1328=1332,1329
<1329=1330
<1330=1331
<1332=1333
<1333=1335,1334
<1336=1337
<1337=1348,1347,1338
<1338=1346,1339
<1339=1345,1340
<1340=1344,1341
<1341=1343,1342
<1349=1350
<1350=1361,1360,1351
<1351=1359,1352
<1352=1358,1353
<1353=1357,1354
<1354=1356,1355
<1362=1363
<1363=1373,1372,1364
<1364=1371,1365
<1365=1367,1366
<1367=1368
<1368=1370,1369
<1374=1375
<1375=1387,1386,1376
<1376=1385,1377
<1377=1381,1378
<1378=1379
<1379=1380
<1381=1382
<1382=1384,1383
<1388=1389
<1389=1391,1390
<1392=1398,1393
<1393=1394
<1394=1395
<1395=1397,1396
<1398=1399
<1399=1401,1400
<1402=1408,1403
<1403=1404
<1404=1405
<1405=1407,1406
<1408=1409
<1409=1411,1410
<1412=1440,1413
<1413=1429,1423,1414
<1414=1415
<1415=1419,1416
<1416=1417
<1417=1418
<1419=1420
<1420=1422,1421
<1423=1424
<1424=1426,1425
<1426=1428,1427
<1429=1430
<1430=1439,1438,1431
<1431=1437,1432
<1432=1436,1433
<1433=1435,1434
<1440=1441
<1441=1443,1442
<1444=1455,1445
<1445=1446
<1446=1447
<1447=1451,1448
<1448=1449
<1449=1450
<1451=1452
<1452=1454,1453
<1455=1456
<1456=1458,1457
<1459=1544,1460
<1460=1530,1518,1511,1501,1485,1469,1465,1461
<1461=1462
<1462=1464,1463
<1465=1466
<1466=1468,1467
<1469=1470
<1470=1482,1471
<1471=1474,1473,1472
<1474=1475
<1475=1481,1476
<1476=1480,1477
<1477=1479,1478
<1482=1484,1483
<1485=1486
<1486=1498,1487
<1487=1490,1489,1488
<1490=1491
<1491=1497,1492
<1492=1496,1493
<1493=1495,1494
<1498=1500,1499
<1501=1502
<1502=1510,1503
<1503=1507,1504
<1504=1506,1505
<1507=1509,1508
<1511=1512
<1512=1517,1516,1513
<1513=1515,1514
<1518=1519
<1519=1529,1528,1520
<1520=1527,1521
<1521=1523,1522
<1523=1524
<1524=1526,1525
<1530=1531
<1531=1543,1542,1532
<1532=1541,1533
<1533=1537,1534
<1534=1535
<1535=1536
<1537=1538
<1538=1540,1539
<1544=1545
<1545=1547,1546
<1548=1554,1549
<1549=1550
<1550=1551
<1551=1553,1552
<1554=1555
<1555=1557,1556
<1558=1559
<1559=1566,1565,1560
<1560=1564,1561
<1561=1563,1562
<1567=1568
<1568=1575,1574,1569
<1569=1573,1570
<1570=1572,1571
<1614=1617,1616,1615
<1617=1618
<1618=1619
<1619=1632,1620
<1620=1623,1621
<1621=1622
<1623=1624
<1624=1630,1625
<1625=1628,1626
<1626=1627
<1628=1629
<1630=1631
<1632=1633
<1633=1635,1634
<1642=1648,1647,1643
<1643=1644
<1644=1646,1645
<1648=1678,1666,1665,1664,1663,1662,1661,1660,1659,1658,1649
<1649=1650
<1650=1656,1651
<1651=1652
<1652=1653
<1653=1655,1654
<1656=1657
<1666=1667
<1667=1677,1676,1668
<1668=1675,1669
<1669=1671,1670
<1671=1672
<1672=1674,1673
<1678=1679
<1679=1683,1680
<1680=1681
<1681=1682
<1683=1684
<1684=1686,1685
<1696=1699,1698,1697
<1699=1700
<1700=1701
<1701=1703,1702
<1703=1704
<1704=1706,1705
<1711=1717,1716,1712
<1712=1713
<1713=1715,1714
<1717=1718
<1718=1719
<1719=1723,1720
<1720=1721
<1721=1722
<1723=1724
<1724=1726,1725
<1732=1738,1737,1733
<1733=1734
<1734=1736,1735
<1738=1793,1768,1756,1755,1754,1753,1752,1751,1750,1749,1748,1739
<1739=1740
<1740=1746,1741
<1741=1742
<1742=1743
<1743=1745,1744
<1746=1747
<1756=1757
<1757=1767,1766,1758
<1758=1765,1759
<1759=1761,1760
<1761=1762
<1762=1764,1763
<1768=1791,1769
<1769=1770
<1770=1789,1777,1771
<1771=1772
<1772=1773
<1773=1774
<1774=1776,1775
<1777=1785,1778
<1778=1779
<1779=1781,1780
<1781=1782
<1782=1784,1783
<1785=1786
<1786=1788,1787
<1789=1790
<1791=1792
<1793=1794
<1794=1806,1805,1795
<1795=1804,1796
<1796=1800,1797
<1797=1798
<1798=1799
<1800=1801
<1801=1803,1802
<1824=1830,1829,1825
<1825=1826
<1826=1828,1827
<1830=1831
<1831=1832
<1832=1836,1833
<1833=1834
<1834=1835
<1836=1837
<1837=1839,1838
<1845=1851,1850,1846
<1846=1847
<1847=1849,1848
<1851=1852
<1852=1853
<1853=1857,1854
<1854=1855
<1855=1856
<1857=1858
<1858=1860,1859
