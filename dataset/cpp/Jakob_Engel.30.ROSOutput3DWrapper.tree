>3	FunctionDef	ROSOutput3DWrapper 
>4	ParameterList	int width , int height
>5	Parameter	 
>6	Identifier	height
>7	ParameterType	int
>8	Parameter	 
>9	Identifier	width
>10	ParameterType	int
>11	CompoundStatement	 
>12	ExpressionStatement	 
>13	AssignmentExpr	publishLvl = 0
>14	PrimaryExpression	0
>15	Identifier	publishLvl
>16	ExpressionStatement	 
>17	AssignmentExpr	pose_publisher = nh_ . advertise < geometry_msgs 
>18	RelationalExpression	nh_ . advertise < geometry_msgs 
>19	RelationalExpression	geometry_msgs 
>20	Expression	pose_channel , 1
>21	PrimaryExpression	1
>22	Identifier	pose_channel
>23	Identifier	geometry_msgs 
>24	MemberAccess	nh_ . advertise
>25	Identifier	advertise
>26	Identifier	nh_
>27	Identifier	pose_publisher
>28	ExpressionStatement	 
>29	AssignmentExpr	pose_channel = nh_ . resolveName ( \"lsd_slam/pose\" )
>30	CallExpression	nh_ . resolveName ( \"lsd_slam/pose\" )
>31	ArgumentList	\"lsd_slam/pose\"
>32	Argument	\"lsd_slam/pose\"
>33	PrimaryExpression	\"lsd_slam/pose\"
>34	Callee	nh_ . resolveName
>35	MemberAccess	nh_ . resolveName
>36	Identifier	resolveName
>37	Identifier	nh_
>38	Identifier	pose_channel
>39	ExpressionStatement	 
>40	AssignmentExpr	debugInfo_publisher = nh_ . advertise < std_msgs 
>41	RelationalExpression	nh_ . advertise < std_msgs 
>42	RelationalExpression	std_msgs 
>43	Expression	debugInfo_channel , 1
>44	PrimaryExpression	1
>45	Identifier	debugInfo_channel
>46	Identifier	std_msgs 
>47	MemberAccess	nh_ . advertise
>48	Identifier	advertise
>49	Identifier	nh_
>50	Identifier	debugInfo_publisher
>51	ExpressionStatement	 
>52	AssignmentExpr	debugInfo_channel = nh_ . resolveName ( \"lsd_slam/debug\" )
>53	CallExpression	nh_ . resolveName ( \"lsd_slam/debug\" )
>54	ArgumentList	\"lsd_slam/debug\"
>55	Argument	\"lsd_slam/debug\"
>56	PrimaryExpression	\"lsd_slam/debug\"
>57	Callee	nh_ . resolveName
>58	MemberAccess	nh_ . resolveName
>59	Identifier	resolveName
>60	Identifier	nh_
>61	Identifier	debugInfo_channel
>62	ExpressionStatement	 
>63	AssignmentExpr	graph_publisher = nh_ . advertise < lsd_slam_viewer 
>64	RelationalExpression	nh_ . advertise < lsd_slam_viewer 
>65	RelationalExpression	lsd_slam_viewer 
>66	Expression	graph_channel , 1
>67	PrimaryExpression	1
>68	Identifier	graph_channel
>69	Identifier	lsd_slam_viewer 
>70	MemberAccess	nh_ . advertise
>71	Identifier	advertise
>72	Identifier	nh_
>73	Identifier	graph_publisher
>74	ExpressionStatement	 
>75	AssignmentExpr	graph_channel = nh_ . resolveName ( \"lsd_slam/graph\" )
>76	CallExpression	nh_ . resolveName ( \"lsd_slam/graph\" )
>77	ArgumentList	\"lsd_slam/graph\"
>78	Argument	\"lsd_slam/graph\"
>79	PrimaryExpression	\"lsd_slam/graph\"
>80	Callee	nh_ . resolveName
>81	MemberAccess	nh_ . resolveName
>82	Identifier	resolveName
>83	Identifier	nh_
>84	Identifier	graph_channel
>85	ExpressionStatement	 
>86	AssignmentExpr	keyframe_publisher = nh_ . advertise < lsd_slam_viewer 
>87	RelationalExpression	nh_ . advertise < lsd_slam_viewer 
>88	RelationalExpression	lsd_slam_viewer 
>89	Expression	keyframe_channel , 1
>90	PrimaryExpression	1
>91	Identifier	keyframe_channel
>92	Identifier	lsd_slam_viewer 
>93	MemberAccess	nh_ . advertise
>94	Identifier	advertise
>95	Identifier	nh_
>96	Identifier	keyframe_publisher
>97	ExpressionStatement	 
>98	AssignmentExpr	keyframe_channel = nh_ . resolveName ( \"lsd_slam/keyframes\" )
>99	CallExpression	nh_ . resolveName ( \"lsd_slam/keyframes\" )
>100	ArgumentList	\"lsd_slam/keyframes\"
>101	Argument	\"lsd_slam/keyframes\"
>102	PrimaryExpression	\"lsd_slam/keyframes\"
>103	Callee	nh_ . resolveName
>104	MemberAccess	nh_ . resolveName
>105	Identifier	resolveName
>106	Identifier	nh_
>107	Identifier	keyframe_channel
>108	ExpressionStatement	 
>109	AssignmentExpr	liveframe_publisher = nh_ . advertise < lsd_slam_viewer 
>110	RelationalExpression	nh_ . advertise < lsd_slam_viewer 
>111	RelationalExpression	lsd_slam_viewer 
>112	Expression	liveframe_channel , 1
>113	PrimaryExpression	1
>114	Identifier	liveframe_channel
>115	Identifier	lsd_slam_viewer 
>116	MemberAccess	nh_ . advertise
>117	Identifier	advertise
>118	Identifier	nh_
>119	Identifier	liveframe_publisher
>120	ExpressionStatement	 
>121	AssignmentExpr	liveframe_channel = nh_ . resolveName ( \"lsd_slam/liveframes\" )
>122	CallExpression	nh_ . resolveName ( \"lsd_slam/liveframes\" )
>123	ArgumentList	\"lsd_slam/liveframes\"
>124	Argument	\"lsd_slam/liveframes\"
>125	PrimaryExpression	\"lsd_slam/liveframes\"
>126	Callee	nh_ . resolveName
>127	MemberAccess	nh_ . resolveName
>128	Identifier	resolveName
>129	Identifier	nh_
>130	Identifier	liveframe_channel
>131	ExpressionStatement	 
>132	AssignmentExpr	this -> height = height
>133	Identifier	height
>134	PtrMemberAccess	this -> height
>135	Identifier	height
>136	Identifier	this
>137	ExpressionStatement	 
>138	AssignmentExpr	this -> width = width
>139	Identifier	width
>140	PtrMemberAccess	this -> width
>141	Identifier	width
>142	Identifier	this
>170	FunctionDef	ROSOutput3DWrapper 
>171	ParameterList	 
>172	CompoundStatement	 
>176	FunctionDef	ROSOutput3DWrapper 
>177	ParameterList	Frame * f
>178	Parameter	 
>179	Identifier	f
>180	ParameterType	Frame *
>181	ReturnType	void
>182	CompoundStatement	 
>183	ExpressionStatement	 
>184	CallExpression	keyframe_publisher . publish ( fMsg )
>185	ArgumentList	fMsg
>186	Argument	fMsg
>187	Identifier	fMsg
>188	Callee	keyframe_publisher . publish
>189	MemberAccess	keyframe_publisher . publish
>190	Identifier	publish
>191	Identifier	keyframe_publisher
>192	ForStatement	for ( int idx = 0 ; idx < w * h ; idx ++ )
>193	CompoundStatement	 
>194	ExpressionStatement	 
>195	AssignmentExpr	pc [ idx ] . color [ 3 ] = color [ idx ]
>196	ArrayIndexing	color [ idx ]
>197	Identifier	idx
>198	Identifier	color
>199	ArrayIndexing	pc [ idx ] . color [ 3 ]
>200	PrimaryExpression	3
>201	MemberAccess	pc [ idx ] . color
>202	Identifier	color
>203	ArrayIndexing	pc [ idx ]
>204	Identifier	idx
>205	Identifier	pc
>206	ExpressionStatement	 
>207	AssignmentExpr	pc [ idx ] . color [ 2 ] = color [ idx ]
>208	ArrayIndexing	color [ idx ]
>209	Identifier	idx
>210	Identifier	color
>211	ArrayIndexing	pc [ idx ] . color [ 2 ]
>212	PrimaryExpression	2
>213	MemberAccess	pc [ idx ] . color
>214	Identifier	color
>215	ArrayIndexing	pc [ idx ]
>216	Identifier	idx
>217	Identifier	pc
>218	ExpressionStatement	 
>219	AssignmentExpr	pc [ idx ] . color [ 1 ] = color [ idx ]
>220	ArrayIndexing	color [ idx ]
>221	Identifier	idx
>222	Identifier	color
>223	ArrayIndexing	pc [ idx ] . color [ 1 ]
>224	PrimaryExpression	1
>225	MemberAccess	pc [ idx ] . color
>226	Identifier	color
>227	ArrayIndexing	pc [ idx ]
>228	Identifier	idx
>229	Identifier	pc
>230	ExpressionStatement	 
>231	AssignmentExpr	pc [ idx ] . color [ 0 ] = color [ idx ]
>232	ArrayIndexing	color [ idx ]
>233	Identifier	idx
>234	Identifier	color
>235	ArrayIndexing	pc [ idx ] . color [ 0 ]
>236	PrimaryExpression	0
>237	MemberAccess	pc [ idx ] . color
>238	Identifier	color
>239	ArrayIndexing	pc [ idx ]
>240	Identifier	idx
>241	Identifier	pc
>242	ExpressionStatement	 
>243	AssignmentExpr	pc [ idx ] . idepth_var = idepthVar [ idx ]
>244	ArrayIndexing	idepthVar [ idx ]
>245	Identifier	idx
>246	Identifier	idepthVar
>247	MemberAccess	pc [ idx ] . idepth_var
>248	Identifier	idepth_var
>249	ArrayIndexing	pc [ idx ]
>250	Identifier	idx
>251	Identifier	pc
>252	ExpressionStatement	 
>253	AssignmentExpr	pc [ idx ] . idepth = idepth [ idx ]
>254	ArrayIndexing	idepth [ idx ]
>255	Identifier	idx
>256	Identifier	idepth
>257	MemberAccess	pc [ idx ] . idepth
>258	Identifier	idepth
>259	ArrayIndexing	pc [ idx ]
>260	Identifier	idx
>261	Identifier	pc
>262	IncDecOp	 
>263	IncDec	++
>264	Identifier	idx
>265	Condition	 
>266	RelationalExpression	idx < w * h
>267	MultiplicativeExpression	w * h
>268	Identifier	h
>269	Identifier	w
>270	Identifier	idx
>271	ForInit	 
>272	IdentifierDeclStatement	int idx = 0 ;
>273	IdentifierDecl	idx = 0
>274	AssignmentExpr	idx = 0
>275	PrimaryExpression	0
>276	Identifier	idx
>277	Identifier	idx
>278	IdentifierDeclType	int
>279	IdentifierDeclStatement	 
>280	IdentifierDecl	* color = f -> image ( publishLvl )
>281	AssignmentExpr	* color = f -> image ( publishLvl )
>282	CallExpression	f -> image ( publishLvl )
>283	ArgumentList	publishLvl
>284	Argument	publishLvl
>285	Identifier	publishLvl
>286	Callee	f -> image
>287	PtrMemberAccess	f -> image
>288	Identifier	image
>289	Identifier	f
>290	Identifier	color
>291	Identifier	color
>292	IdentifierDeclType	const float *
>293	IdentifierDeclStatement	 
>294	IdentifierDecl	* idepthVar = f -> idepthVar ( publishLvl )
>295	AssignmentExpr	* idepthVar = f -> idepthVar ( publishLvl )
>296	CallExpression	f -> idepthVar ( publishLvl )
>297	ArgumentList	publishLvl
>298	Argument	publishLvl
>299	Identifier	publishLvl
>300	Callee	f -> idepthVar
>301	PtrMemberAccess	f -> idepthVar
>302	Identifier	idepthVar
>303	Identifier	f
>304	Identifier	idepthVar
>305	Identifier	idepthVar
>306	IdentifierDeclType	const float *
>307	IdentifierDeclStatement	 
>308	IdentifierDecl	* idepth = f -> idepth ( publishLvl )
>309	AssignmentExpr	* idepth = f -> idepth ( publishLvl )
>310	CallExpression	f -> idepth ( publishLvl )
>311	ArgumentList	publishLvl
>312	Argument	publishLvl
>313	Identifier	publishLvl
>314	Callee	f -> idepth
>315	PtrMemberAccess	f -> idepth
>316	Identifier	idepth
>317	Identifier	f
>318	Identifier	idepth
>319	Identifier	idepth
>320	IdentifierDeclType	const float *
>321	IdentifierDeclStatement	 
>322	IdentifierDecl	* pc = ( InputPointDense * ) fMsg . pointcloud . data ( )
>323	AssignmentExpr	* pc = ( InputPointDense * ) fMsg . pointcloud . data ( )
>324	CastExpression	( InputPointDense * ) fMsg . pointcloud . data ( )
>325	CallExpression	fMsg . pointcloud . data ( )
>326	ArgumentList	 
>327	Callee	fMsg . pointcloud . data
>328	MemberAccess	fMsg . pointcloud . data
>329	Identifier	data
>330	MemberAccess	fMsg . pointcloud
>331	Identifier	pointcloud
>332	Identifier	fMsg
>333	CastTarget	InputPointDense *
>334	Identifier	pc
>335	Identifier	pc
>336	IdentifierDeclType	InputPointDense *
>337	ExpressionStatement	 
>338	CallExpression	fMsg . pointcloud . resize ( w * h * sizeof ( InputPointDense ) )
>339	ArgumentList	w * h * sizeof ( InputPointDense )
>340	Argument	w * h * sizeof ( InputPointDense )
>341	MultiplicativeExpression	w * h * sizeof ( InputPointDense )
>342	MultiplicativeExpression	h * sizeof ( InputPointDense )
>343	SizeofExpr	sizeof ( InputPointDense )
>344	SizeofOperand	InputPointDense
>345	Sizeof	sizeof
>346	Identifier	h
>347	Identifier	w
>348	Callee	fMsg . pointcloud . resize
>349	MemberAccess	fMsg . pointcloud . resize
>350	Identifier	resize
>351	MemberAccess	fMsg . pointcloud
>352	Identifier	pointcloud
>353	Identifier	fMsg
>354	ExpressionStatement	 
>355	AssignmentExpr	fMsg . height = h
>356	Identifier	h
>357	MemberAccess	fMsg . height
>358	Identifier	height
>359	Identifier	fMsg
>360	ExpressionStatement	 
>361	AssignmentExpr	fMsg . width = w
>362	Identifier	w
>363	MemberAccess	fMsg . width
>364	Identifier	width
>365	Identifier	fMsg
>366	ExpressionStatement	 
>367	AssignmentExpr	fMsg . cy = f -> cy ( publishLvl )
>368	CallExpression	f -> cy ( publishLvl )
>369	ArgumentList	publishLvl
>370	Argument	publishLvl
>371	Identifier	publishLvl
>372	Callee	f -> cy
>373	PtrMemberAccess	f -> cy
>374	Identifier	cy
>375	Identifier	f
>376	MemberAccess	fMsg . cy
>377	Identifier	cy
>378	Identifier	fMsg
>379	ExpressionStatement	 
>380	AssignmentExpr	fMsg . cx = f -> cx ( publishLvl )
>381	CallExpression	f -> cx ( publishLvl )
>382	ArgumentList	publishLvl
>383	Argument	publishLvl
>384	Identifier	publishLvl
>385	Callee	f -> cx
>386	PtrMemberAccess	f -> cx
>387	Identifier	cx
>388	Identifier	f
>389	MemberAccess	fMsg . cx
>390	Identifier	cx
>391	Identifier	fMsg
>392	ExpressionStatement	 
>393	AssignmentExpr	fMsg . fy = f -> fy ( publishLvl )
>394	CallExpression	f -> fy ( publishLvl )
>395	ArgumentList	publishLvl
>396	Argument	publishLvl
>397	Identifier	publishLvl
>398	Callee	f -> fy
>399	PtrMemberAccess	f -> fy
>400	Identifier	fy
>401	Identifier	f
>402	MemberAccess	fMsg . fy
>403	Identifier	fy
>404	Identifier	fMsg
>405	ExpressionStatement	 
>406	AssignmentExpr	fMsg . fx = f -> fx ( publishLvl )
>407	CallExpression	f -> fx ( publishLvl )
>408	ArgumentList	publishLvl
>409	Argument	publishLvl
>410	Identifier	publishLvl
>411	Callee	f -> fx
>412	PtrMemberAccess	f -> fx
>413	Identifier	fx
>414	Identifier	f
>415	MemberAccess	fMsg . fx
>416	Identifier	fx
>417	Identifier	fMsg
>418	ExpressionStatement	 
>419	Statement	 
>420	Statement	 
>421	Statement	 
>422	Statement	 
>423	Statement	 
>424	Statement	 
>425	Statement	 
>426	Statement	 
>427	Statement	 
>428	Statement	 
>429	Statement	 
>430	Statement	 
>431	Statement	 
>432	Statement	 
>433	Statement	 
>434	Statement	 
>435	Statement	 
>436	Statement	 
>437	Statement	 
>438	Statement	 
>439	Statement	 
>440	Statement	 
>441	Statement	 
>442	Statement	 
>443	Statement	 
>444	Statement	 
>445	Statement	 
>446	Statement	 
>447	Statement	 
>448	Statement	 
>449	Statement	 
>450	Statement	 
>451	Statement	 
>452	Statement	 
>453	IdentifierDeclStatement	 
>454	IdentifierDecl	h = f -> height ( publishLvl )
>455	AssignmentExpr	h = f -> height ( publishLvl )
>456	CallExpression	f -> height ( publishLvl )
>457	ArgumentList	publishLvl
>458	Argument	publishLvl
>459	Identifier	publishLvl
>460	Callee	f -> height
>461	PtrMemberAccess	f -> height
>462	Identifier	height
>463	Identifier	f
>464	Identifier	h
>465	Identifier	h
>466	IdentifierDeclType	int
>467	IdentifierDeclStatement	 
>468	IdentifierDecl	w = f -> width ( publishLvl )
>469	AssignmentExpr	w = f -> width ( publishLvl )
>470	CallExpression	f -> width ( publishLvl )
>471	ArgumentList	publishLvl
>472	Argument	publishLvl
>473	Identifier	publishLvl
>474	Callee	f -> width
>475	PtrMemberAccess	f -> width
>476	Identifier	width
>477	Identifier	f
>478	Identifier	w
>479	Identifier	w
>480	IdentifierDeclType	int
>481	ExpressionStatement	 
>482	AssignmentExpr	fMsg . isKeyframe = true
>483	Identifier	true
>484	MemberAccess	fMsg . isKeyframe
>485	Identifier	isKeyframe
>486	Identifier	fMsg
>487	ExpressionStatement	 
>488	AssignmentExpr	fMsg . time = f -> timestamp ( )
>489	CallExpression	f -> timestamp ( )
>490	ArgumentList	 
>491	Callee	f -> timestamp
>492	PtrMemberAccess	f -> timestamp
>493	Identifier	timestamp
>494	Identifier	f
>495	MemberAccess	fMsg . time
>496	Identifier	time
>497	Identifier	fMsg
>498	ExpressionStatement	 
>499	AssignmentExpr	fMsg . id = f -> id ( )
>500	CallExpression	f -> id ( )
>501	ArgumentList	 
>502	Callee	f -> id
>503	PtrMemberAccess	f -> id
>504	Identifier	id
>505	Identifier	f
>506	MemberAccess	fMsg . id
>507	Identifier	id
>508	Identifier	fMsg
>509	IdentifierDeclStatement	 
>510	IdentifierDecl	lock = f -> getActiveLock ( )
>511	AssignmentExpr	lock = f -> getActiveLock ( )
>512	CallExpression	f -> getActiveLock ( )
>513	ArgumentList	 
>514	Callee	f -> getActiveLock
>515	PtrMemberAccess	f -> getActiveLock
>516	Identifier	getActiveLock
>517	Identifier	f
>518	Identifier	lock
>519	Identifier	lock
>520	IdentifierDeclType	boost 
>521	IdentifierDeclStatement	 
>522	IdentifierDecl	fMsg
>523	Identifier	fMsg
>524	IdentifierDeclType	lsd_slam_viewer 
>576	FunctionDef	ROSOutput3DWrapper 
>577	ParameterList	Frame * kf
>578	Parameter	 
>579	Identifier	kf
>580	ParameterType	Frame *
>581	ReturnType	void
>582	CompoundStatement	 
>583	ExpressionStatement	 
>584	CallExpression	pose_publisher . publish ( pMsg )
>585	ArgumentList	pMsg
>586	Argument	pMsg
>587	Identifier	pMsg
>588	Callee	pose_publisher . publish
>589	MemberAccess	pose_publisher . publish
>590	Identifier	publish
>591	Identifier	pose_publisher
>592	ExpressionStatement	 
>593	AssignmentExpr	pMsg . header . frame_id = \"world\"
>594	PrimaryExpression	\"world\"
>595	MemberAccess	pMsg . header . frame_id
>596	Identifier	frame_id
>597	MemberAccess	pMsg . header
>598	Identifier	header
>599	Identifier	pMsg
>600	ExpressionStatement	 
>601	AssignmentExpr	pMsg . header . stamp = ros 
>602	CallExpression	ros 
>603	ArgumentList	kf -> timestamp ( )
>604	Argument	kf -> timestamp ( )
>605	CallExpression	kf -> timestamp ( )
>606	ArgumentList	 
>607	Callee	kf -> timestamp
>608	PtrMemberAccess	kf -> timestamp
>609	Identifier	timestamp
>610	Identifier	kf
>611	Callee	ros 
>612	Identifier	ros 
>613	MemberAccess	pMsg . header . stamp
>614	Identifier	stamp
>615	MemberAccess	pMsg . header
>616	Identifier	header
>617	Identifier	pMsg
>618	IfStatement	if ( pMsg . pose . orientation . w < 0 )
>619	CompoundStatement	 
>620	ExpressionStatement	 
>621	AssignmentExpr	pMsg . pose . orientation . w *= - 1
>622	UnaryOp	- 1
>623	PrimaryExpression	1
>624	UnaryOperator	-
>625	MemberAccess	pMsg . pose . orientation . w
>626	Identifier	w
>627	MemberAccess	pMsg . pose . orientation
>628	Identifier	orientation
>629	MemberAccess	pMsg . pose
>630	Identifier	pose
>631	Identifier	pMsg
>632	ExpressionStatement	 
>633	AssignmentExpr	pMsg . pose . orientation . z *= - 1
>634	UnaryOp	- 1
>635	PrimaryExpression	1
>636	UnaryOperator	-
>637	MemberAccess	pMsg . pose . orientation . z
>638	Identifier	z
>639	MemberAccess	pMsg . pose . orientation
>640	Identifier	orientation
>641	MemberAccess	pMsg . pose
>642	Identifier	pose
>643	Identifier	pMsg
>644	ExpressionStatement	 
>645	AssignmentExpr	pMsg . pose . orientation . y *= - 1
>646	UnaryOp	- 1
>647	PrimaryExpression	1
>648	UnaryOperator	-
>649	MemberAccess	pMsg . pose . orientation . y
>650	Identifier	y
>651	MemberAccess	pMsg . pose . orientation
>652	Identifier	orientation
>653	MemberAccess	pMsg . pose
>654	Identifier	pose
>655	Identifier	pMsg
>656	ExpressionStatement	 
>657	AssignmentExpr	pMsg . pose . orientation . x *= - 1
>658	UnaryOp	- 1
>659	PrimaryExpression	1
>660	UnaryOperator	-
>661	MemberAccess	pMsg . pose . orientation . x
>662	Identifier	x
>663	MemberAccess	pMsg . pose . orientation
>664	Identifier	orientation
>665	MemberAccess	pMsg . pose
>666	Identifier	pose
>667	Identifier	pMsg
>668	Condition	 
>669	RelationalExpression	pMsg . pose . orientation . w < 0
>670	PrimaryExpression	0
>671	MemberAccess	pMsg . pose . orientation . w
>672	Identifier	w
>673	MemberAccess	pMsg . pose . orientation
>674	Identifier	orientation
>675	MemberAccess	pMsg . pose
>676	Identifier	pose
>677	Identifier	pMsg
>678	ExpressionStatement	 
>679	AssignmentExpr	pMsg . pose . orientation . w = camToWorld . so3 ( ) . unit_quaternion ( ) . w ( )
>680	CallExpression	camToWorld . so3 ( ) . unit_quaternion ( ) . w ( )
>681	ArgumentList	 
>682	Callee	camToWorld . so3 ( ) . unit_quaternion ( ) . w
>683	MemberAccess	camToWorld . so3 ( ) . unit_quaternion ( ) . w
>684	Identifier	w
>685	CallExpression	camToWorld . so3 ( ) . unit_quaternion ( )
>686	ArgumentList	 
>687	Callee	camToWorld . so3 ( ) . unit_quaternion
>688	MemberAccess	camToWorld . so3 ( ) . unit_quaternion
>689	Identifier	unit_quaternion
>690	CallExpression	camToWorld . so3 ( )
>691	ArgumentList	 
>692	Callee	camToWorld . so3
>693	MemberAccess	camToWorld . so3
>694	Identifier	so3
>695	Identifier	camToWorld
>696	MemberAccess	pMsg . pose . orientation . w
>697	Identifier	w
>698	MemberAccess	pMsg . pose . orientation
>699	Identifier	orientation
>700	MemberAccess	pMsg . pose
>701	Identifier	pose
>702	Identifier	pMsg
>703	ExpressionStatement	 
>704	AssignmentExpr	pMsg . pose . orientation . z = camToWorld . so3 ( ) . unit_quaternion ( ) . z ( )
>705	CallExpression	camToWorld . so3 ( ) . unit_quaternion ( ) . z ( )
>706	ArgumentList	 
>707	Callee	camToWorld . so3 ( ) . unit_quaternion ( ) . z
>708	MemberAccess	camToWorld . so3 ( ) . unit_quaternion ( ) . z
>709	Identifier	z
>710	CallExpression	camToWorld . so3 ( ) . unit_quaternion ( )
>711	ArgumentList	 
>712	Callee	camToWorld . so3 ( ) . unit_quaternion
>713	MemberAccess	camToWorld . so3 ( ) . unit_quaternion
>714	Identifier	unit_quaternion
>715	CallExpression	camToWorld . so3 ( )
>716	ArgumentList	 
>717	Callee	camToWorld . so3
>718	MemberAccess	camToWorld . so3
>719	Identifier	so3
>720	Identifier	camToWorld
>721	MemberAccess	pMsg . pose . orientation . z
>722	Identifier	z
>723	MemberAccess	pMsg . pose . orientation
>724	Identifier	orientation
>725	MemberAccess	pMsg . pose
>726	Identifier	pose
>727	Identifier	pMsg
>728	ExpressionStatement	 
>729	AssignmentExpr	pMsg . pose . orientation . y = camToWorld . so3 ( ) . unit_quaternion ( ) . y ( )
>730	CallExpression	camToWorld . so3 ( ) . unit_quaternion ( ) . y ( )
>731	ArgumentList	 
>732	Callee	camToWorld . so3 ( ) . unit_quaternion ( ) . y
>733	MemberAccess	camToWorld . so3 ( ) . unit_quaternion ( ) . y
>734	Identifier	y
>735	CallExpression	camToWorld . so3 ( ) . unit_quaternion ( )
>736	ArgumentList	 
>737	Callee	camToWorld . so3 ( ) . unit_quaternion
>738	MemberAccess	camToWorld . so3 ( ) . unit_quaternion
>739	Identifier	unit_quaternion
>740	CallExpression	camToWorld . so3 ( )
>741	ArgumentList	 
>742	Callee	camToWorld . so3
>743	MemberAccess	camToWorld . so3
>744	Identifier	so3
>745	Identifier	camToWorld
>746	MemberAccess	pMsg . pose . orientation . y
>747	Identifier	y
>748	MemberAccess	pMsg . pose . orientation
>749	Identifier	orientation
>750	MemberAccess	pMsg . pose
>751	Identifier	pose
>752	Identifier	pMsg
>753	ExpressionStatement	 
>754	AssignmentExpr	pMsg . pose . orientation . x = camToWorld . so3 ( ) . unit_quaternion ( ) . x ( )
>755	CallExpression	camToWorld . so3 ( ) . unit_quaternion ( ) . x ( )
>756	ArgumentList	 
>757	Callee	camToWorld . so3 ( ) . unit_quaternion ( ) . x
>758	MemberAccess	camToWorld . so3 ( ) . unit_quaternion ( ) . x
>759	Identifier	x
>760	CallExpression	camToWorld . so3 ( ) . unit_quaternion ( )
>761	ArgumentList	 
>762	Callee	camToWorld . so3 ( ) . unit_quaternion
>763	MemberAccess	camToWorld . so3 ( ) . unit_quaternion
>764	Identifier	unit_quaternion
>765	CallExpression	camToWorld . so3 ( )
>766	ArgumentList	 
>767	Callee	camToWorld . so3
>768	MemberAccess	camToWorld . so3
>769	Identifier	so3
>770	Identifier	camToWorld
>771	MemberAccess	pMsg . pose . orientation . x
>772	Identifier	x
>773	MemberAccess	pMsg . pose . orientation
>774	Identifier	orientation
>775	MemberAccess	pMsg . pose
>776	Identifier	pose
>777	Identifier	pMsg
>778	ExpressionStatement	 
>779	AssignmentExpr	pMsg . pose . position . z = camToWorld . translation ( ) [ 2 ]
>780	ArrayIndexing	camToWorld . translation ( ) [ 2 ]
>781	PrimaryExpression	2
>782	CallExpression	camToWorld . translation ( )
>783	ArgumentList	 
>784	Callee	camToWorld . translation
>785	MemberAccess	camToWorld . translation
>786	Identifier	translation
>787	Identifier	camToWorld
>788	MemberAccess	pMsg . pose . position . z
>789	Identifier	z
>790	MemberAccess	pMsg . pose . position
>791	Identifier	position
>792	MemberAccess	pMsg . pose
>793	Identifier	pose
>794	Identifier	pMsg
>795	ExpressionStatement	 
>796	AssignmentExpr	pMsg . pose . position . y = camToWorld . translation ( ) [ 1 ]
>797	ArrayIndexing	camToWorld . translation ( ) [ 1 ]
>798	PrimaryExpression	1
>799	CallExpression	camToWorld . translation ( )
>800	ArgumentList	 
>801	Callee	camToWorld . translation
>802	MemberAccess	camToWorld . translation
>803	Identifier	translation
>804	Identifier	camToWorld
>805	MemberAccess	pMsg . pose . position . y
>806	Identifier	y
>807	MemberAccess	pMsg . pose . position
>808	Identifier	position
>809	MemberAccess	pMsg . pose
>810	Identifier	pose
>811	Identifier	pMsg
>812	ExpressionStatement	 
>813	AssignmentExpr	pMsg . pose . position . x = camToWorld . translation ( ) [ 0 ]
>814	ArrayIndexing	camToWorld . translation ( ) [ 0 ]
>815	PrimaryExpression	0
>816	CallExpression	camToWorld . translation ( )
>817	ArgumentList	 
>818	Callee	camToWorld . translation
>819	MemberAccess	camToWorld . translation
>820	Identifier	translation
>821	Identifier	camToWorld
>822	MemberAccess	pMsg . pose . position . x
>823	Identifier	x
>824	MemberAccess	pMsg . pose . position
>825	Identifier	position
>826	MemberAccess	pMsg . pose
>827	Identifier	pose
>828	Identifier	pMsg
>829	IdentifierDeclStatement	 
>830	IdentifierDecl	pMsg
>831	Identifier	pMsg
>832	IdentifierDeclType	geometry_msgs 
>833	IdentifierDeclStatement	 
>834	IdentifierDecl	camToWorld = se3FromSim3 ( kf -> getScaledCamToWorld ( ) )
>835	AssignmentExpr	camToWorld = se3FromSim3 ( kf -> getScaledCamToWorld ( ) )
>836	CallExpression	se3FromSim3 ( kf -> getScaledCamToWorld ( ) )
>837	ArgumentList	kf -> getScaledCamToWorld ( )
>838	Argument	kf -> getScaledCamToWorld ( )
>839	CallExpression	kf -> getScaledCamToWorld ( )
>840	ArgumentList	 
>841	Callee	kf -> getScaledCamToWorld
>842	PtrMemberAccess	kf -> getScaledCamToWorld
>843	Identifier	getScaledCamToWorld
>844	Identifier	kf
>845	Callee	se3FromSim3
>846	Identifier	se3FromSim3
>847	Identifier	camToWorld
>848	Identifier	camToWorld
>849	IdentifierDeclType	SE3
>850	ExpressionStatement	 
>851	CallExpression	liveframe_publisher . publish ( fMsg )
>852	ArgumentList	fMsg
>853	Argument	fMsg
>854	Identifier	fMsg
>855	Callee	liveframe_publisher . publish
>856	MemberAccess	liveframe_publisher . publish
>857	Identifier	publish
>858	Identifier	liveframe_publisher
>859	ExpressionStatement	 
>860	CallExpression	fMsg . pointcloud . clear ( )
>861	ArgumentList	 
>862	Callee	fMsg . pointcloud . clear
>863	MemberAccess	fMsg . pointcloud . clear
>864	Identifier	clear
>865	MemberAccess	fMsg . pointcloud
>866	Identifier	pointcloud
>867	Identifier	fMsg
>868	ExpressionStatement	 
>869	AssignmentExpr	fMsg . height = kf -> height ( publishLvl )
>870	CallExpression	kf -> height ( publishLvl )
>871	ArgumentList	publishLvl
>872	Argument	publishLvl
>873	Identifier	publishLvl
>874	Callee	kf -> height
>875	PtrMemberAccess	kf -> height
>876	Identifier	height
>877	Identifier	kf
>878	MemberAccess	fMsg . height
>879	Identifier	height
>880	Identifier	fMsg
>881	ExpressionStatement	 
>882	AssignmentExpr	fMsg . width = kf -> width ( publishLvl )
>883	CallExpression	kf -> width ( publishLvl )
>884	ArgumentList	publishLvl
>885	Argument	publishLvl
>886	Identifier	publishLvl
>887	Callee	kf -> width
>888	PtrMemberAccess	kf -> width
>889	Identifier	width
>890	Identifier	kf
>891	MemberAccess	fMsg . width
>892	Identifier	width
>893	Identifier	fMsg
>894	ExpressionStatement	 
>895	AssignmentExpr	fMsg . cy = kf -> cy ( publishLvl )
>896	CallExpression	kf -> cy ( publishLvl )
>897	ArgumentList	publishLvl
>898	Argument	publishLvl
>899	Identifier	publishLvl
>900	Callee	kf -> cy
>901	PtrMemberAccess	kf -> cy
>902	Identifier	cy
>903	Identifier	kf
>904	MemberAccess	fMsg . cy
>905	Identifier	cy
>906	Identifier	fMsg
>907	ExpressionStatement	 
>908	AssignmentExpr	fMsg . cx = kf -> cx ( publishLvl )
>909	CallExpression	kf -> cx ( publishLvl )
>910	ArgumentList	publishLvl
>911	Argument	publishLvl
>912	Identifier	publishLvl
>913	Callee	kf -> cx
>914	PtrMemberAccess	kf -> cx
>915	Identifier	cx
>916	Identifier	kf
>917	MemberAccess	fMsg . cx
>918	Identifier	cx
>919	Identifier	fMsg
>920	ExpressionStatement	 
>921	AssignmentExpr	fMsg . fy = kf -> fy ( publishLvl )
>922	CallExpression	kf -> fy ( publishLvl )
>923	ArgumentList	publishLvl
>924	Argument	publishLvl
>925	Identifier	publishLvl
>926	Callee	kf -> fy
>927	PtrMemberAccess	kf -> fy
>928	Identifier	fy
>929	Identifier	kf
>930	MemberAccess	fMsg . fy
>931	Identifier	fy
>932	Identifier	fMsg
>933	ExpressionStatement	 
>934	AssignmentExpr	fMsg . fx = kf -> fx ( publishLvl )
>935	CallExpression	kf -> fx ( publishLvl )
>936	ArgumentList	publishLvl
>937	Argument	publishLvl
>938	Identifier	publishLvl
>939	Callee	kf -> fx
>940	PtrMemberAccess	kf -> fx
>941	Identifier	fx
>942	Identifier	kf
>943	MemberAccess	fMsg . fx
>944	Identifier	fx
>945	Identifier	fMsg
>946	ExpressionStatement	 
>947	Statement	 
>948	Statement	 
>949	Statement	 
>950	Statement	 
>951	Statement	 
>952	Statement	 
>953	Statement	 
>954	Statement	 
>955	Statement	 
>956	Statement	 
>957	Statement	 
>958	Statement	 
>959	Statement	 
>960	Statement	 
>961	Statement	 
>962	Statement	 
>963	Statement	 
>964	Statement	 
>965	Statement	 
>966	Statement	 
>967	Statement	 
>968	Statement	 
>969	Statement	 
>970	Statement	 
>971	Statement	 
>972	Statement	 
>973	Statement	 
>974	Statement	 
>975	Statement	 
>976	Statement	 
>977	Statement	 
>978	Statement	 
>979	Statement	 
>980	Statement	 
>981	ExpressionStatement	 
>982	AssignmentExpr	fMsg . isKeyframe = false
>983	Identifier	false
>984	MemberAccess	fMsg . isKeyframe
>985	Identifier	isKeyframe
>986	Identifier	fMsg
>987	ExpressionStatement	 
>988	AssignmentExpr	fMsg . time = kf -> timestamp ( )
>989	CallExpression	kf -> timestamp ( )
>990	ArgumentList	 
>991	Callee	kf -> timestamp
>992	PtrMemberAccess	kf -> timestamp
>993	Identifier	timestamp
>994	Identifier	kf
>995	MemberAccess	fMsg . time
>996	Identifier	time
>997	Identifier	fMsg
>998	ExpressionStatement	 
>999	AssignmentExpr	fMsg . id = kf -> id ( )
>1000	CallExpression	kf -> id ( )
>1001	ArgumentList	 
>1002	Callee	kf -> id
>1003	PtrMemberAccess	kf -> id
>1004	Identifier	id
>1005	Identifier	kf
>1006	MemberAccess	fMsg . id
>1007	Identifier	id
>1008	Identifier	fMsg
>1009	IdentifierDeclStatement	 
>1010	IdentifierDecl	fMsg
>1011	Identifier	fMsg
>1012	IdentifierDeclType	lsd_slam_viewer 
>1068	FunctionDef	ROSOutput3DWrapper 
>1069	ParameterList	KeyFrameGraph * graph
>1070	Parameter	 
>1071	Identifier	graph
>1072	ParameterType	KeyFrameGraph *
>1073	ReturnType	void
>1074	CompoundStatement	 
>1075	ExpressionStatement	 
>1076	CallExpression	graph_publisher . publish ( gMsg )
>1077	ArgumentList	gMsg
>1078	Argument	gMsg
>1079	Identifier	gMsg
>1080	Callee	graph_publisher . publish
>1081	MemberAccess	graph_publisher . publish
>1082	Identifier	publish
>1083	Identifier	graph_publisher
>1084	ExpressionStatement	 
>1085	CallExpression	graph -> keyframesAllMutex . unlock_shared ( )
>1086	ArgumentList	 
>1087	Callee	graph -> keyframesAllMutex . unlock_shared
>1088	MemberAccess	graph -> keyframesAllMutex . unlock_shared
>1089	Identifier	unlock_shared
>1090	PtrMemberAccess	graph -> keyframesAllMutex
>1091	Identifier	keyframesAllMutex
>1092	Identifier	graph
>1093	ForStatement	for ( unsigned int i = 0 ; i < graph -> keyframesAll . size ( ) ; i ++ )
>1094	CompoundStatement	 
>1095	ExpressionStatement	 
>1096	Statement	 
>1097	Statement	 
>1098	Statement	 
>1099	Statement	 
>1100	Statement	 
>1101	Statement	 
>1102	Statement	 
>1103	Statement	 
>1104	Statement	 
>1105	Statement	 
>1106	Statement	 
>1107	Statement	 
>1108	Statement	 
>1109	Statement	 
>1110	Statement	 
>1111	Statement	 
>1112	Statement	 
>1113	Statement	 
>1114	Statement	 
>1115	Statement	 
>1116	Statement	 
>1117	Statement	 
>1118	Statement	 
>1119	Statement	 
>1120	Statement	 
>1121	Statement	 
>1122	Statement	 
>1123	Statement	 
>1124	Statement	 
>1125	Statement	 
>1126	Statement	 
>1127	Statement	 
>1128	Statement	 
>1129	Statement	 
>1130	Statement	 
>1131	Statement	 
>1132	Statement	 
>1133	Statement	 
>1134	ExpressionStatement	 
>1135	AssignmentExpr	framePoseData [ i ] . id = graph -> keyframesAll [ i ] -> id ( )
>1136	CallExpression	graph -> keyframesAll [ i ] -> id ( )
>1137	ArgumentList	 
>1138	Callee	graph -> keyframesAll [ i ] -> id
>1139	PtrMemberAccess	graph -> keyframesAll [ i ] -> id
>1140	Identifier	id
>1141	ArrayIndexing	graph -> keyframesAll [ i ]
>1142	Identifier	i
>1143	PtrMemberAccess	graph -> keyframesAll
>1144	Identifier	keyframesAll
>1145	Identifier	graph
>1146	MemberAccess	framePoseData [ i ] . id
>1147	Identifier	id
>1148	ArrayIndexing	framePoseData [ i ]
>1149	Identifier	i
>1150	Identifier	framePoseData
>1151	IncDecOp	 
>1152	IncDec	++
>1153	Identifier	i
>1154	Condition	 
>1155	RelationalExpression	i < graph -> keyframesAll . size ( )
>1156	CallExpression	graph -> keyframesAll . size ( )
>1157	ArgumentList	 
>1158	Callee	graph -> keyframesAll . size
>1159	MemberAccess	graph -> keyframesAll . size
>1160	Identifier	size
>1161	PtrMemberAccess	graph -> keyframesAll
>1162	Identifier	keyframesAll
>1163	Identifier	graph
>1164	Identifier	i
>1165	ForInit	 
>1166	IdentifierDeclStatement	unsigned int i = 0 ;
>1167	IdentifierDecl	i = 0
>1168	AssignmentExpr	i = 0
>1169	PrimaryExpression	0
>1170	Identifier	i
>1171	Identifier	i
>1172	IdentifierDeclType	unsigned int
>1173	IdentifierDeclStatement	 
>1174	IdentifierDecl	* framePoseData = ( GraphFramePose * ) gMsg . frameData . data ( )
>1175	AssignmentExpr	* framePoseData = ( GraphFramePose * ) gMsg . frameData . data ( )
>1176	CastExpression	( GraphFramePose * ) gMsg . frameData . data ( )
>1177	CallExpression	gMsg . frameData . data ( )
>1178	ArgumentList	 
>1179	Callee	gMsg . frameData . data
>1180	MemberAccess	gMsg . frameData . data
>1181	Identifier	data
>1182	MemberAccess	gMsg . frameData
>1183	Identifier	frameData
>1184	Identifier	gMsg
>1185	CastTarget	GraphFramePose *
>1186	Identifier	framePoseData
>1187	Identifier	framePoseData
>1188	IdentifierDeclType	GraphFramePose *
>1189	ExpressionStatement	 
>1190	CallExpression	gMsg . frameData . resize ( gMsg . numFrames * sizeof ( GraphFramePose ) )
>1191	ArgumentList	gMsg . numFrames * sizeof ( GraphFramePose )
>1192	Argument	gMsg . numFrames * sizeof ( GraphFramePose )
>1193	MultiplicativeExpression	gMsg . numFrames * sizeof ( GraphFramePose )
>1194	SizeofExpr	sizeof ( GraphFramePose )
>1195	SizeofOperand	GraphFramePose
>1196	Sizeof	sizeof
>1197	MemberAccess	gMsg . numFrames
>1198	Identifier	numFrames
>1199	Identifier	gMsg
>1200	Callee	gMsg . frameData . resize
>1201	MemberAccess	gMsg . frameData . resize
>1202	Identifier	resize
>1203	MemberAccess	gMsg . frameData
>1204	Identifier	frameData
>1205	Identifier	gMsg
>1206	ExpressionStatement	 
>1207	AssignmentExpr	gMsg . numFrames = graph -> keyframesAll . size ( )
>1208	CallExpression	graph -> keyframesAll . size ( )
>1209	ArgumentList	 
>1210	Callee	graph -> keyframesAll . size
>1211	MemberAccess	graph -> keyframesAll . size
>1212	Identifier	size
>1213	PtrMemberAccess	graph -> keyframesAll
>1214	Identifier	keyframesAll
>1215	Identifier	graph
>1216	MemberAccess	gMsg . numFrames
>1217	Identifier	numFrames
>1218	Identifier	gMsg
>1219	ExpressionStatement	 
>1220	CallExpression	graph -> keyframesAllMutex . lock_shared ( )
>1221	ArgumentList	 
>1222	Callee	graph -> keyframesAllMutex . lock_shared
>1223	MemberAccess	graph -> keyframesAllMutex . lock_shared
>1224	Identifier	lock_shared
>1225	PtrMemberAccess	graph -> keyframesAllMutex
>1226	Identifier	keyframesAllMutex
>1227	Identifier	graph
>1228	ExpressionStatement	 
>1229	CallExpression	graph -> edgesListsMutex . unlock ( )
>1230	ArgumentList	 
>1231	Callee	graph -> edgesListsMutex . unlock
>1232	MemberAccess	graph -> edgesListsMutex . unlock
>1233	Identifier	unlock
>1234	PtrMemberAccess	graph -> edgesListsMutex
>1235	Identifier	edgesListsMutex
>1236	Identifier	graph
>1237	ForStatement	for ( unsigned int i = 0 ; i < graph -> edgesAll . size ( ) ; i ++ )
>1238	CompoundStatement	 
>1239	ExpressionStatement	 
>1240	AssignmentExpr	constraintData [ i ] . err = sqrt ( err . dot ( err ) )
>1241	CallExpression	sqrt ( err . dot ( err ) )
>1242	ArgumentList	err . dot ( err )
>1243	Argument	err . dot ( err )
>1244	CallExpression	err . dot ( err )
>1245	ArgumentList	err
>1246	Argument	err
>1247	Identifier	err
>1248	Callee	err . dot
>1249	MemberAccess	err . dot
>1250	Identifier	dot
>1251	Identifier	err
>1252	Callee	sqrt
>1253	Identifier	sqrt
>1254	MemberAccess	constraintData [ i ] . err
>1255	Identifier	err
>1256	ArrayIndexing	constraintData [ i ]
>1257	Identifier	i
>1258	Identifier	constraintData
>1259	IdentifierDeclStatement	 
>1260	IdentifierDecl	err = graph -> edgesAll [ i ] -> edge -> error ( )
>1261	AssignmentExpr	err = graph -> edgesAll [ i ] -> edge -> error ( )
>1262	CallExpression	graph -> edgesAll [ i ] -> edge -> error ( )
>1263	ArgumentList	 
>1264	Callee	graph -> edgesAll [ i ] -> edge -> error
>1265	PtrMemberAccess	graph -> edgesAll [ i ] -> edge -> error
>1266	Identifier	error
>1267	PtrMemberAccess	graph -> edgesAll [ i ] -> edge
>1268	Identifier	edge
>1269	ArrayIndexing	graph -> edgesAll [ i ]
>1270	Identifier	i
>1271	PtrMemberAccess	graph -> edgesAll
>1272	Identifier	edgesAll
>1273	Identifier	graph
>1274	Identifier	err
>1275	Identifier	err
>1276	IdentifierDeclType	Sophus 
>1277	ExpressionStatement	 
>1278	AssignmentExpr	constraintData [ i ] . to = graph -> edgesAll [ i ] -> secondFrame -> id ( )
>1279	CallExpression	graph -> edgesAll [ i ] -> secondFrame -> id ( )
>1280	ArgumentList	 
>1281	Callee	graph -> edgesAll [ i ] -> secondFrame -> id
>1282	PtrMemberAccess	graph -> edgesAll [ i ] -> secondFrame -> id
>1283	Identifier	id
>1284	PtrMemberAccess	graph -> edgesAll [ i ] -> secondFrame
>1285	Identifier	secondFrame
>1286	ArrayIndexing	graph -> edgesAll [ i ]
>1287	Identifier	i
>1288	PtrMemberAccess	graph -> edgesAll
>1289	Identifier	edgesAll
>1290	Identifier	graph
>1291	MemberAccess	constraintData [ i ] . to
>1292	Identifier	to
>1293	ArrayIndexing	constraintData [ i ]
>1294	Identifier	i
>1295	Identifier	constraintData
>1296	ExpressionStatement	 
>1297	AssignmentExpr	constraintData [ i ] . from = graph -> edgesAll [ i ] -> firstFrame -> id ( )
>1298	CallExpression	graph -> edgesAll [ i ] -> firstFrame -> id ( )
>1299	ArgumentList	 
>1300	Callee	graph -> edgesAll [ i ] -> firstFrame -> id
>1301	PtrMemberAccess	graph -> edgesAll [ i ] -> firstFrame -> id
>1302	Identifier	id
>1303	PtrMemberAccess	graph -> edgesAll [ i ] -> firstFrame
>1304	Identifier	firstFrame
>1305	ArrayIndexing	graph -> edgesAll [ i ]
>1306	Identifier	i
>1307	PtrMemberAccess	graph -> edgesAll
>1308	Identifier	edgesAll
>1309	Identifier	graph
>1310	MemberAccess	constraintData [ i ] . from
>1311	Identifier	from
>1312	ArrayIndexing	constraintData [ i ]
>1313	Identifier	i
>1314	Identifier	constraintData
>1315	IncDecOp	 
>1316	IncDec	++
>1317	Identifier	i
>1318	Condition	 
>1319	RelationalExpression	i < graph -> edgesAll . size ( )
>1320	CallExpression	graph -> edgesAll . size ( )
>1321	ArgumentList	 
>1322	Callee	graph -> edgesAll . size
>1323	MemberAccess	graph -> edgesAll . size
>1324	Identifier	size
>1325	PtrMemberAccess	graph -> edgesAll
>1326	Identifier	edgesAll
>1327	Identifier	graph
>1328	Identifier	i
>1329	ForInit	 
>1330	IdentifierDeclStatement	unsigned int i = 0 ;
>1331	IdentifierDecl	i = 0
>1332	AssignmentExpr	i = 0
>1333	PrimaryExpression	0
>1334	Identifier	i
>1335	Identifier	i
>1336	IdentifierDeclType	unsigned int
>1337	IdentifierDeclStatement	 
>1338	IdentifierDecl	* constraintData = ( GraphConstraint * ) gMsg . constraintsData . data ( )
>1339	AssignmentExpr	* constraintData = ( GraphConstraint * ) gMsg . constraintsData . data ( )
>1340	CastExpression	( GraphConstraint * ) gMsg . constraintsData . data ( )
>1341	CallExpression	gMsg . constraintsData . data ( )
>1342	ArgumentList	 
>1343	Callee	gMsg . constraintsData . data
>1344	MemberAccess	gMsg . constraintsData . data
>1345	Identifier	data
>1346	MemberAccess	gMsg . constraintsData
>1347	Identifier	constraintsData
>1348	Identifier	gMsg
>1349	CastTarget	GraphConstraint *
>1350	Identifier	constraintData
>1351	Identifier	constraintData
>1352	IdentifierDeclType	GraphConstraint *
>1353	ExpressionStatement	 
>1354	CallExpression	gMsg . constraintsData . resize ( gMsg . numConstraints * sizeof ( GraphConstraint ) )
>1355	ArgumentList	gMsg . numConstraints * sizeof ( GraphConstraint )
>1356	Argument	gMsg . numConstraints * sizeof ( GraphConstraint )
>1357	MultiplicativeExpression	gMsg . numConstraints * sizeof ( GraphConstraint )
>1358	SizeofExpr	sizeof ( GraphConstraint )
>1359	SizeofOperand	GraphConstraint
>1360	Sizeof	sizeof
>1361	MemberAccess	gMsg . numConstraints
>1362	Identifier	numConstraints
>1363	Identifier	gMsg
>1364	Callee	gMsg . constraintsData . resize
>1365	MemberAccess	gMsg . constraintsData . resize
>1366	Identifier	resize
>1367	MemberAccess	gMsg . constraintsData
>1368	Identifier	constraintsData
>1369	Identifier	gMsg
>1370	ExpressionStatement	 
>1371	AssignmentExpr	gMsg . numConstraints = graph -> edgesAll . size ( )
>1372	CallExpression	graph -> edgesAll . size ( )
>1373	ArgumentList	 
>1374	Callee	graph -> edgesAll . size
>1375	MemberAccess	graph -> edgesAll . size
>1376	Identifier	size
>1377	PtrMemberAccess	graph -> edgesAll
>1378	Identifier	edgesAll
>1379	Identifier	graph
>1380	MemberAccess	gMsg . numConstraints
>1381	Identifier	numConstraints
>1382	Identifier	gMsg
>1383	ExpressionStatement	 
>1384	CallExpression	graph -> edgesListsMutex . lock ( )
>1385	ArgumentList	 
>1386	Callee	graph -> edgesListsMutex . lock
>1387	MemberAccess	graph -> edgesListsMutex . lock
>1388	Identifier	lock
>1389	PtrMemberAccess	graph -> edgesListsMutex
>1390	Identifier	edgesListsMutex
>1391	Identifier	graph
>1392	IdentifierDeclStatement	 
>1393	IdentifierDecl	gMsg
>1394	Identifier	gMsg
>1395	IdentifierDeclType	lsd_slam_viewer 
>1448	FunctionDef	ROSOutput3DWrapper 
>1449	ParameterList	Eigen 
>1450	Parameter	 
>1451	Identifier	identifier
>1452	ParameterType	std 
>1453	Parameter	 
>1454	Identifier	pt
>1455	ParameterType	Eigen 
>1456	ReturnType	void
>1457	CompoundStatement	 
>1463	FunctionDef	ROSOutput3DWrapper 
>1464	ParameterList	Eigen 
>1465	Parameter	 
>1466	Identifier	data
>1467	ParameterType	Eigen 
>1468	ReturnType	void
>1469	CompoundStatement	 
>1470	ExpressionStatement	 
>1471	CallExpression	debugInfo_publisher . publish ( msg )
>1472	ArgumentList	msg
>1473	Argument	msg
>1474	Identifier	msg
>1475	Callee	debugInfo_publisher . publish
>1476	MemberAccess	debugInfo_publisher . publish
>1477	Identifier	publish
>1478	Identifier	debugInfo_publisher
>1479	ForStatement	for ( int i = 0 ; i < 20 ; i ++ )
>1480	ExpressionStatement	 
>1481	CallExpression	msg . data . push_back ( ( float ) ( data [ i ] ) )
>1482	ArgumentList	( float ) ( data [ i ] )
>1483	Argument	( float ) ( data [ i ] )
>1484	CastExpression	( float ) ( data [ i ] )
>1485	ArrayIndexing	data [ i ]
>1486	Identifier	i
>1487	Identifier	data
>1488	CastTarget	float
>1489	Callee	msg . data . push_back
>1490	MemberAccess	msg . data . push_back
>1491	Identifier	push_back
>1492	MemberAccess	msg . data
>1493	Identifier	data
>1494	Identifier	msg
>1495	IncDecOp	 
>1496	IncDec	++
>1497	Identifier	i
>1498	Condition	 
>1499	RelationalExpression	i < 20
>1500	PrimaryExpression	20
>1501	Identifier	i
>1502	ForInit	 
>1503	IdentifierDeclStatement	int i = 0 ;
>1504	IdentifierDecl	i = 0
>1505	AssignmentExpr	i = 0
>1506	PrimaryExpression	0
>1507	Identifier	i
>1508	Identifier	i
>1509	IdentifierDeclType	int
>1510	IdentifierDeclStatement	 
>1511	IdentifierDecl	msg
>1512	Identifier	msg
>1513	IdentifierDeclType	std_msgs 
<3=11,4
<4=8,5
<5=7,6
<8=10,9
<11=137,131,120,108,97,85,74,62,51,39,28,16,12
<12=13
<13=15,14
<16=17
<17=27,18
<18=24,19
<19=23,20
<20=22,21
<24=26,25
<28=29
<29=38,30
<30=34,31
<31=32
<32=33
<34=35
<35=37,36
<39=40
<40=50,41
<41=47,42
<42=46,43
<43=45,44
<47=49,48
<51=52
<52=61,53
<53=57,54
<54=55
<55=56
<57=58
<58=60,59
<62=63
<63=73,64
<64=70,65
<65=69,66
<66=68,67
<70=72,71
<74=75
<75=84,76
<76=80,77
<77=78
<78=79
<80=81
<81=83,82
<85=86
<86=96,87
<87=93,88
<88=92,89
<89=91,90
<93=95,94
<97=98
<98=107,99
<99=103,100
<100=101
<101=102
<103=104
<104=106,105
<108=109
<109=119,110
<110=116,111
<111=115,112
<112=114,113
<116=118,117
<120=121
<121=130,122
<122=126,123
<123=124
<124=125
<126=127
<127=129,128
<131=132
<132=134,133
<134=136,135
<137=138
<138=140,139
<140=142,141
<170=172,171
<176=182,181,177
<177=178
<178=180,179
<182=521,509,498,487,481,183,192,279,293,307,321,337,354,360,366,379,392,405,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,467
<183=184
<184=188,185
<185=186
<186=187
<188=189
<189=191,190
<192=271,265,262,193
<193=252,242,230,218,206,194
<194=195
<195=199,196
<196=198,197
<199=201,200
<201=203,202
<203=205,204
<206=207
<207=211,208
<208=210,209
<211=213,212
<213=215,214
<215=217,216
<218=219
<219=223,220
<220=222,221
<223=225,224
<225=227,226
<227=229,228
<230=231
<231=235,232
<232=234,233
<235=237,236
<237=239,238
<239=241,240
<242=243
<243=247,244
<244=246,245
<247=249,248
<249=251,250
<252=253
<253=257,254
<254=256,255
<257=259,258
<259=261,260
<262=264,263
<265=266
<266=270,267
<267=269,268
<271=272
<272=273
<273=278,277,274
<274=276,275
<279=280
<280=292,291,281
<281=290,282
<282=286,283
<283=284
<284=285
<286=287
<287=289,288
<293=294
<294=306,305,295
<295=304,296
<296=300,297
<297=298
<298=299
<300=301
<301=303,302
<307=308
<308=320,319,309
<309=318,310
<310=314,311
<311=312
<312=313
<314=315
<315=317,316
<321=322
<322=336,335,323
<323=334,324
<324=333,325
<325=327,326
<327=328
<328=330,329
<330=332,331
<337=338
<338=348,339
<339=340
<340=341
<341=347,342
<342=346,343
<343=345,344
<348=349
<349=351,350
<351=353,352
<354=355
<355=357,356
<357=359,358
<360=361
<361=363,362
<363=365,364
<366=367
<367=376,368
<368=372,369
<369=370
<370=371
<372=373
<373=375,374
<376=378,377
<379=380
<380=389,381
<381=385,382
<382=383
<383=384
<385=386
<386=388,387
<389=391,390
<392=393
<393=402,394
<394=398,395
<395=396
<396=397
<398=399
<399=401,400
<402=404,403
<405=406
<406=415,407
<407=411,408
<408=409
<409=410
<411=412
<412=414,413
<415=417,416
<453=454
<454=466,465,455
<455=464,456
<456=460,457
<457=458
<458=459
<460=461
<461=463,462
<467=468
<468=480,479,469
<469=478,470
<470=474,471
<471=472
<472=473
<474=475
<475=477,476
<481=482
<482=484,483
<484=486,485
<487=488
<488=495,489
<489=491,490
<491=492
<492=494,493
<495=497,496
<498=499
<499=506,500
<500=502,501
<502=503
<503=505,504
<506=508,507
<509=510
<510=520,519,511
<511=518,512
<512=514,513
<514=515
<515=517,516
<521=522
<522=524,523
<576=582,581,577
<577=578
<578=580,579
<582=1009,998,987,981,980,979,978,977,976,975,583,592,600,618,678,703,728,753,778,795,812,829,833,850,859,868,881,894,907,920,933,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974
<583=584
<584=588,585
<585=586
<586=587
<588=589
<589=591,590
<592=593
<593=595,594
<595=597,596
<597=599,598
<600=601
<601=613,602
<602=611,603
<603=604
<604=605
<605=607,606
<607=608
<608=610,609
<611=612
<613=615,614
<615=617,616
<618=668,619
<619=656,644,632,620
<620=621
<621=625,622
<622=624,623
<625=627,626
<627=629,628
<629=631,630
<632=633
<633=637,634
<634=636,635
<637=639,638
<639=641,640
<641=643,642
<644=645
<645=649,646
<646=648,647
<649=651,650
<651=653,652
<653=655,654
<656=657
<657=661,658
<658=660,659
<661=663,662
<663=665,664
<665=667,666
<668=669
<669=671,670
<671=673,672
<673=675,674
<675=677,676
<678=679
<679=696,680
<680=682,681
<682=683
<683=685,684
<685=687,686
<687=688
<688=690,689
<690=692,691
<692=693
<693=695,694
<696=698,697
<698=700,699
<700=702,701
<703=704
<704=721,705
<705=707,706
<707=708
<708=710,709
<710=712,711
<712=713
<713=715,714
<715=717,716
<717=718
<718=720,719
<721=723,722
<723=725,724
<725=727,726
<728=729
<729=746,730
<730=732,731
<732=733
<733=735,734
<735=737,736
<737=738
<738=740,739
<740=742,741
<742=743
<743=745,744
<746=748,747
<748=750,749
<750=752,751
<753=754
<754=771,755
<755=757,756
<757=758
<758=760,759
<760=762,761
<762=763
<763=765,764
<765=767,766
<767=768
<768=770,769
<771=773,772
<773=775,774
<775=777,776
<778=779
<779=788,780
<780=782,781
<782=784,783
<784=785
<785=787,786
<788=790,789
<790=792,791
<792=794,793
<795=796
<796=805,797
<797=799,798
<799=801,800
<801=802
<802=804,803
<805=807,806
<807=809,808
<809=811,810
<812=813
<813=822,814
<814=816,815
<816=818,817
<818=819
<819=821,820
<822=824,823
<824=826,825
<826=828,827
<829=830
<830=832,831
<833=834
<834=849,848,835
<835=847,836
<836=845,837
<837=838
<838=839
<839=841,840
<841=842
<842=844,843
<845=846
<850=851
<851=855,852
<852=853
<853=854
<855=856
<856=858,857
<859=860
<860=862,861
<862=863
<863=865,864
<865=867,866
<868=869
<869=878,870
<870=874,871
<871=872
<872=873
<874=875
<875=877,876
<878=880,879
<881=882
<882=891,883
<883=887,884
<884=885
<885=886
<887=888
<888=890,889
<891=893,892
<894=895
<895=904,896
<896=900,897
<897=898
<898=899
<900=901
<901=903,902
<904=906,905
<907=908
<908=917,909
<909=913,910
<910=911
<911=912
<913=914
<914=916,915
<917=919,918
<920=921
<921=930,922
<922=926,923
<923=924
<924=925
<926=927
<927=929,928
<930=932,931
<933=934
<934=943,935
<935=939,936
<936=937
<937=938
<939=940
<940=942,941
<943=945,944
<981=982
<982=984,983
<984=986,985
<987=988
<988=995,989
<989=991,990
<991=992
<992=994,993
<995=997,996
<998=999
<999=1006,1000
<1000=1002,1001
<1002=1003
<1003=1005,1004
<1006=1008,1007
<1009=1010
<1010=1012,1011
<1068=1074,1073,1069
<1069=1070
<1070=1072,1071
<1074=1392,1383,1370,1353,1337,1237,1228,1219,1206,1189,1173,1093,1084,1075
<1075=1076
<1076=1080,1077
<1077=1078
<1078=1079
<1080=1081
<1081=1083,1082
<1084=1085
<1085=1087,1086
<1087=1088
<1088=1090,1089
<1090=1092,1091
<1093=1165,1154,1151,1094
<1094=1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1098,1097,1096,1095
<1134=1135
<1135=1146,1136
<1136=1138,1137
<1138=1139
<1139=1141,1140
<1141=1143,1142
<1143=1145,1144
<1146=1148,1147
<1148=1150,1149
<1151=1153,1152
<1154=1155
<1155=1164,1156
<1156=1158,1157
<1158=1159
<1159=1161,1160
<1161=1163,1162
<1165=1166
<1166=1167
<1167=1172,1171,1168
<1168=1170,1169
<1173=1174
<1174=1188,1187,1175
<1175=1186,1176
<1176=1185,1177
<1177=1179,1178
<1179=1180
<1180=1182,1181
<1182=1184,1183
<1189=1190
<1190=1200,1191
<1191=1192
<1192=1193
<1193=1197,1194
<1194=1196,1195
<1197=1199,1198
<1200=1201
<1201=1203,1202
<1203=1205,1204
<1206=1207
<1207=1216,1208
<1208=1210,1209
<1210=1211
<1211=1213,1212
<1213=1215,1214
<1216=1218,1217
<1219=1220
<1220=1222,1221
<1222=1223
<1223=1225,1224
<1225=1227,1226
<1228=1229
<1229=1231,1230
<1231=1232
<1232=1234,1233
<1234=1236,1235
<1237=1329,1318,1315,1238
<1238=1296,1277,1259,1239
<1239=1240
<1240=1254,1241
<1241=1252,1242
<1242=1243
<1243=1244
<1244=1248,1245
<1245=1246
<1246=1247
<1248=1249
<1249=1251,1250
<1252=1253
<1254=1256,1255
<1256=1258,1257
<1259=1260
<1260=1276,1275,1261
<1261=1274,1262
<1262=1264,1263
<1264=1265
<1265=1267,1266
<1267=1269,1268
<1269=1271,1270
<1271=1273,1272
<1277=1278
<1278=1291,1279
<1279=1281,1280
<1281=1282
<1282=1284,1283
<1284=1286,1285
<1286=1288,1287
<1288=1290,1289
<1291=1293,1292
<1293=1295,1294
<1296=1297
<1297=1310,1298
<1298=1300,1299
<1300=1301
<1301=1303,1302
<1303=1305,1304
<1305=1307,1306
<1307=1309,1308
<1310=1312,1311
<1312=1314,1313
<1315=1317,1316
<1318=1319
<1319=1328,1320
<1320=1322,1321
<1322=1323
<1323=1325,1324
<1325=1327,1326
<1329=1330
<1330=1331
<1331=1336,1335,1332
<1332=1334,1333
<1337=1338
<1338=1352,1351,1339
<1339=1350,1340
<1340=1349,1341
<1341=1343,1342
<1343=1344
<1344=1346,1345
<1346=1348,1347
<1353=1354
<1354=1364,1355
<1355=1356
<1356=1357
<1357=1361,1358
<1358=1360,1359
<1361=1363,1362
<1364=1365
<1365=1367,1366
<1367=1369,1368
<1370=1371
<1371=1380,1372
<1372=1374,1373
<1374=1375
<1375=1377,1376
<1377=1379,1378
<1380=1382,1381
<1383=1384
<1384=1386,1385
<1386=1387
<1387=1389,1388
<1389=1391,1390
<1392=1393
<1393=1395,1394
<1448=1457,1456,1449
<1449=1453,1450
<1450=1452,1451
<1453=1455,1454
<1463=1469,1468,1464
<1464=1465
<1465=1467,1466
<1469=1510,1479,1470
<1470=1471
<1471=1475,1472
<1472=1473
<1473=1474
<1475=1476
<1476=1478,1477
<1479=1502,1498,1495,1480
<1480=1481
<1481=1489,1482
<1482=1483
<1483=1484
<1484=1488,1485
<1485=1487,1486
<1489=1490
<1490=1492,1491
<1492=1494,1493
<1495=1497,1496
<1498=1499
<1499=1501,1500
<1502=1503
<1503=1504
<1504=1509,1508,1505
<1505=1507,1506
<1510=1511
<1511=1513,1512
