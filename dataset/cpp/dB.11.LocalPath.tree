>3	FunctionDef	CLocalPath 
>4	ParameterList	const CString & Path
>5	Parameter	 
>6	Identifier	Path
>7	ParameterType	const CString &
>8	ReturnType	include < String / GStrings . hpp >
>9	CompoundStatement	 
>10	ExpressionStatement	 
>11	CallExpression	SetPath ( Path )
>12	ArgumentList	Path
>13	Argument	Path
>14	Identifier	Path
>15	Callee	SetPath
>16	Identifier	SetPath
>17	ExpressionStatement	 
>18	AssignmentExpr	m_Drive = 0
>19	PrimaryExpression	0
>20	Identifier	m_Drive
>26	FunctionDef	CLocalPath 
>27	ParameterList	const CLocalPath & Path
>28	Parameter	 
>29	Identifier	Path
>30	ParameterType	const CLocalPath &
>31	CompoundStatement	 
>32	ExpressionStatement	 
>33	AssignmentExpr	( * this ) = Path
>34	Identifier	Path
>35	UnaryOp	* this
>36	Identifier	this
>37	UnaryOperator	*
>44	FunctionDef	operator = (const CString & Path)
>45	ParameterList	const CString & Path
>46	Parameter	 
>47	Identifier	Path
>48	ParameterType	const CString &
>49	CompoundStatement	 
>50	ReturnStatement	 
>51	UnaryOp	* this
>52	Identifier	this
>53	UnaryOperator	*
>54	ExpressionStatement	 
>55	CallExpression	SetPath ( Path )
>56	ArgumentList	Path
>57	Argument	Path
>58	Identifier	Path
>59	Callee	SetPath
>60	Identifier	SetPath
>67	FunctionDef	CLocalPath 
>68	ParameterList	 
>69	CompoundStatement	 
>70	ExpressionStatement	 
>71	AssignmentExpr	m_Drive = 0
>72	PrimaryExpression	0
>73	Identifier	m_Drive
>78	FunctionDef	operator = (const CLocalPath & Path)
>79	ParameterList	const CLocalPath & Path
>80	Parameter	 
>81	Identifier	Path
>82	ParameterType	const CLocalPath &
>83	CompoundStatement	 
>84	ReturnStatement	 
>85	UnaryOp	* this
>86	Identifier	this
>87	UnaryOperator	*
>88	ExpressionStatement	 
>89	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>90	ArgumentList	tagSystem
>91	Argument	\"CLocalPath
>92	Expression	\"CLocalPath
>93	Expression	m_PathFull . GetBuffer ( ) , m_Path . GetBuffer ( ) , m_Filename . GetBuffer ( )
>94	Expression	m_Path . GetBuffer ( ) , m_Filename . GetBuffer ( )
>95	CallExpression	m_Filename . GetBuffer ( )
>96	ArgumentList	 
>97	Callee	m_Filename . GetBuffer
>98	MemberAccess	m_Filename . GetBuffer
>99	Identifier	GetBuffer
>100	Identifier	m_Filename
>101	CallExpression	m_Path . GetBuffer ( )
>102	ArgumentList	 
>103	Callee	m_Path . GetBuffer
>104	MemberAccess	m_Path . GetBuffer
>105	Identifier	GetBuffer
>106	Identifier	m_Path
>107	CallExpression	m_PathFull . GetBuffer ( )
>108	ArgumentList	 
>109	Callee	m_PathFull . GetBuffer
>110	MemberAccess	m_PathFull . GetBuffer
>111	Identifier	GetBuffer
>112	Identifier	m_PathFull
>113	PrimaryExpression	\"CLocalPath
>114	Argument	levInfo
>115	Identifier	levInfo
>116	Argument	tagSystem
>117	Identifier	tagSystem
>118	Callee	Trace
>119	Identifier	Trace
>120	ExpressionStatement	 
>121	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>122	ArgumentList	tagSystem
>123	Argument	\"CLocalPath
>124	Expression	\"CLocalPath
>125	Expression	m_Drive , m_NetworkServer . GetBuffer ( )
>126	CallExpression	m_NetworkServer . GetBuffer ( )
>127	ArgumentList	 
>128	Callee	m_NetworkServer . GetBuffer
>129	MemberAccess	m_NetworkServer . GetBuffer
>130	Identifier	GetBuffer
>131	Identifier	m_NetworkServer
>132	Identifier	m_Drive
>133	PrimaryExpression	\"CLocalPath
>134	Argument	levInfo
>135	Identifier	levInfo
>136	Argument	tagSystem
>137	Identifier	tagSystem
>138	Callee	Trace
>139	Identifier	Trace
>140	ExpressionStatement	 
>141	AssignmentExpr	m_NetworkServer = Path . m_NetworkServer
>142	MemberAccess	Path . m_NetworkServer
>143	Identifier	m_NetworkServer
>144	Identifier	Path
>145	Identifier	m_NetworkServer
>146	ExpressionStatement	 
>147	AssignmentExpr	m_Drive = Path . m_Drive
>148	MemberAccess	Path . m_Drive
>149	Identifier	m_Drive
>150	Identifier	Path
>151	Identifier	m_Drive
>152	ExpressionStatement	 
>153	AssignmentExpr	m_Filename = Path . m_Filename
>154	MemberAccess	Path . m_Filename
>155	Identifier	m_Filename
>156	Identifier	Path
>157	Identifier	m_Filename
>158	ExpressionStatement	 
>159	AssignmentExpr	m_Path = Path . m_Path
>160	MemberAccess	Path . m_Path
>161	Identifier	m_Path
>162	Identifier	Path
>163	Identifier	m_Path
>164	ExpressionStatement	 
>165	AssignmentExpr	m_PathFull = Path . m_PathFull
>166	MemberAccess	Path . m_PathFull
>167	Identifier	m_PathFull
>168	Identifier	Path
>169	Identifier	m_PathFull
>192	FunctionDef	CLocalPath 
>193	ParameterList	const CString & Path , const CString & Filename
>194	Parameter	 
>195	Identifier	Filename
>196	ParameterType	const CString &
>197	Parameter	 
>198	Identifier	Path
>199	ParameterType	const CString &
>200	CompoundStatement	 
>201	ExpressionStatement	 
>202	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>203	ArgumentList	tagSystem
>204	Argument	\"CLocalPath
>205	Expression	\"CLocalPath
>206	Expression	m_PathFull . GetBuffer ( ) , m_Path . GetBuffer ( ) , m_Filename . GetBuffer ( )
>207	Expression	m_Path . GetBuffer ( ) , m_Filename . GetBuffer ( )
>208	CallExpression	m_Filename . GetBuffer ( )
>209	ArgumentList	 
>210	Callee	m_Filename . GetBuffer
>211	MemberAccess	m_Filename . GetBuffer
>212	Identifier	GetBuffer
>213	Identifier	m_Filename
>214	CallExpression	m_Path . GetBuffer ( )
>215	ArgumentList	 
>216	Callee	m_Path . GetBuffer
>217	MemberAccess	m_Path . GetBuffer
>218	Identifier	GetBuffer
>219	Identifier	m_Path
>220	CallExpression	m_PathFull . GetBuffer ( )
>221	ArgumentList	 
>222	Callee	m_PathFull . GetBuffer
>223	MemberAccess	m_PathFull . GetBuffer
>224	Identifier	GetBuffer
>225	Identifier	m_PathFull
>226	PrimaryExpression	\"CLocalPath
>227	Argument	levInfo
>228	Identifier	levInfo
>229	Argument	tagSystem
>230	Identifier	tagSystem
>231	Callee	Trace
>232	Identifier	Trace
>233	ExpressionStatement	 
>234	AssignmentExpr	m_Filename = Filename
>235	Identifier	Filename
>236	Identifier	m_Filename
>237	ExpressionStatement	 
>238	CallExpression	m_Path . Replace ( '\\' , '/' )
>239	ArgumentList	'\\'
>240	Argument	'/'
>241	PrimaryExpression	'/'
>242	Argument	'\\'
>243	PrimaryExpression	'\\'
>244	Callee	m_Path . Replace
>245	MemberAccess	m_Path . Replace
>246	Identifier	Replace
>247	Identifier	m_Path
>248	ExpressionStatement	 
>249	CallExpression	m_Path . Replace ( '/' , '\\' )
>250	ArgumentList	'/'
>251	Argument	'\\'
>252	PrimaryExpression	'\\'
>253	Argument	'/'
>254	PrimaryExpression	'/'
>255	Callee	m_Path . Replace
>256	MemberAccess	m_Path . Replace
>257	Identifier	Replace
>258	Identifier	m_Path
>259	ExpressionStatement	 
>260	AssignmentExpr	m_PathFull += Filename
>261	Identifier	Filename
>262	Identifier	m_PathFull
>263	ExpressionStatement	 
>264	AssignmentExpr	m_Path = m_PathFull
>265	Identifier	m_PathFull
>266	Identifier	m_Path
>267	ExpressionStatement	 
>268	CallExpression	Terminate ( m_PathFull )
>269	ArgumentList	m_PathFull
>270	Argument	m_PathFull
>271	Identifier	m_PathFull
>272	Callee	Terminate
>273	Identifier	Terminate
>274	ExpressionStatement	 
>275	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>276	ArgumentList	tagSystem
>277	Argument	\"CLocalPath
>278	Expression	\"CLocalPath
>279	CallExpression	m_PathFull . GetBuffer ( )
>280	ArgumentList	 
>281	Callee	m_PathFull . GetBuffer
>282	MemberAccess	m_PathFull . GetBuffer
>283	Identifier	GetBuffer
>284	Identifier	m_PathFull
>285	PrimaryExpression	\"CLocalPath
>286	Argument	levInfo
>287	Identifier	levInfo
>288	Argument	tagSystem
>289	Identifier	tagSystem
>290	Callee	Trace
>291	Identifier	Trace
>292	IfStatement	if ( Path . GetLength ( ) )
>293	ElseStatement	else
>294	ExpressionStatement	 
>295	AssignmentExpr	m_PathFull = GetCurrentDirectory ( )
>296	CallExpression	GetCurrentDirectory ( )
>297	ArgumentList	 
>298	Callee	GetCurrentDirectory
>299	Identifier	GetCurrentDirectory
>300	Identifier	m_PathFull
>301	ExpressionStatement	 
>302	AssignmentExpr	m_PathFull = Path
>303	Identifier	Path
>304	Identifier	m_PathFull
>305	Condition	 
>306	CallExpression	Path . GetLength ( )
>307	ArgumentList	 
>308	Callee	Path . GetLength
>309	MemberAccess	Path . GetLength
>310	Identifier	GetLength
>311	Identifier	Path
>327	FunctionDef	CLocalPath 
>328	ParameterList	CVector < CString > & Vector
>329	Parameter	 
>330	Identifier	Vector
>331	ParameterType	CVector < CString > &
>332	ReturnType	void
>333	CompoundStatement	 
>334	CompoundStatement	 
>335	IfStatement	if ( Vector [ i ] == g_strPathParent )
>336	ElseStatement	else
>337	IfStatement	if ( Vector [ i ] == g_strPathCurrent )
>338	ExpressionStatement	 
>339	CallExpression	Vector . RemoveAt ( i )
>340	ArgumentList	i
>341	Argument	i
>342	Identifier	i
>343	Callee	Vector . RemoveAt
>344	MemberAccess	Vector . RemoveAt
>345	Identifier	RemoveAt
>346	Identifier	Vector
>347	Condition	 
>348	EqualityExpression	Vector [ i ] == g_strPathCurrent
>349	Identifier	g_strPathCurrent
>350	ArrayIndexing	Vector [ i ]
>351	Identifier	i
>352	Identifier	Vector
>353	CompoundStatement	 
>354	ExpressionStatement	 
>355	CallExpression	Vector . RemoveAt ( i )
>356	ArgumentList	i
>357	Argument	i
>358	Identifier	i
>359	Callee	Vector . RemoveAt
>360	MemberAccess	Vector . RemoveAt
>361	Identifier	RemoveAt
>362	Identifier	Vector
>363	CompoundStatement	 
>364	IfStatement	if ( ( Vector [ j ] != g_strPathParent ) && ( Vector [ j ] != g_strPathCurrent ) )
>365	CompoundStatement	 
>366	BreakStatement	 
>367	ExpressionStatement	 
>368	AssignmentExpr	Vector [ j ] = g_strPathCurrent
>369	Identifier	g_strPathCurrent
>370	ArrayIndexing	Vector [ j ]
>371	Identifier	j
>372	Identifier	Vector
>373	Condition	 
>374	AndExpression	( Vector [ j ] != g_strPathParent ) && ( Vector [ j ] != g_strPathCurrent )
>375	EqualityExpression	Vector [ j ] != g_strPathCurrent
>376	Identifier	g_strPathCurrent
>377	ArrayIndexing	Vector [ j ]
>378	Identifier	j
>379	Identifier	Vector
>380	EqualityExpression	Vector [ j ] != g_strPathParent
>381	Identifier	g_strPathParent
>382	ArrayIndexing	Vector [ j ]
>383	Identifier	j
>384	Identifier	Vector
>385	Statement	 
>386	Statement	 
>387	Statement	 
>388	ExpressionStatement	 
>389	RelationalExpression	j >= 0
>390	PrimaryExpression	0
>391	Identifier	j
>392	IdentifierDeclStatement	 
>393	IdentifierDecl	j = i - 1
>394	AssignmentExpr	j = i - 1
>395	AdditiveExpression	i - 1
>396	PrimaryExpression	1
>397	Identifier	i
>398	Identifier	j
>399	Identifier	j
>400	IdentifierDeclType	int
>401	Statement	 
>402	Statement	 
>403	Statement	 
>404	Condition	 
>405	EqualityExpression	Vector [ i ] == g_strPathParent
>406	Identifier	g_strPathParent
>407	ArrayIndexing	Vector [ i ]
>408	Identifier	i
>409	Identifier	Vector
>410	Statement	 
>411	Statement	 
>412	Statement	 
>413	ExpressionStatement	 
>414	RelationalExpression	i >= 0
>415	PrimaryExpression	0
>416	Identifier	i
>417	IdentifierDeclStatement	 
>418	IdentifierDecl	i = Vector . GetSize ( ) - 1
>419	AssignmentExpr	i = Vector . GetSize ( ) - 1
>420	AdditiveExpression	Vector . GetSize ( ) - 1
>421	PrimaryExpression	1
>422	CallExpression	Vector . GetSize ( )
>423	ArgumentList	 
>424	Callee	Vector . GetSize
>425	MemberAccess	Vector . GetSize
>426	Identifier	GetSize
>427	Identifier	Vector
>428	Identifier	i
>429	Identifier	i
>430	IdentifierDeclType	int
>431	Statement	 
>432	Statement	 
>433	Statement	 
>447	FunctionDef	CLocalPath 
>448	ParameterList	const CString & Path
>449	Parameter	 
>450	Identifier	Path
>451	ParameterType	const CString &
>452	ReturnType	void
>453	CompoundStatement	 
>454	ExpressionStatement	 
>455	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>456	ArgumentList	tagSystem
>457	Argument	\"CLocalPath
>458	Expression	\"CLocalPath
>459	Expression	m_PathFull . GetBuffer ( ) , m_Path . GetBuffer ( ) , m_Filename . GetBuffer ( )
>460	Expression	m_Path . GetBuffer ( ) , m_Filename . GetBuffer ( )
>461	CallExpression	m_Filename . GetBuffer ( )
>462	ArgumentList	 
>463	Callee	m_Filename . GetBuffer
>464	MemberAccess	m_Filename . GetBuffer
>465	Identifier	GetBuffer
>466	Identifier	m_Filename
>467	CallExpression	m_Path . GetBuffer ( )
>468	ArgumentList	 
>469	Callee	m_Path . GetBuffer
>470	MemberAccess	m_Path . GetBuffer
>471	Identifier	GetBuffer
>472	Identifier	m_Path
>473	CallExpression	m_PathFull . GetBuffer ( )
>474	ArgumentList	 
>475	Callee	m_PathFull . GetBuffer
>476	MemberAccess	m_PathFull . GetBuffer
>477	Identifier	GetBuffer
>478	Identifier	m_PathFull
>479	PrimaryExpression	\"CLocalPath
>480	Argument	levInfo
>481	Identifier	levInfo
>482	Argument	tagSystem
>483	Identifier	tagSystem
>484	Callee	Trace
>485	Identifier	Trace
>486	ExpressionStatement	 
>487	CallExpression	Terminate ( m_Path )
>488	ArgumentList	m_Path
>489	Argument	m_Path
>490	Identifier	m_Path
>491	Callee	Terminate
>492	Identifier	Terminate
>493	CompoundStatement	 
>494	ExpressionStatement	 
>495	AssignmentExpr	m_Path += m_PathVector [ i ]
>496	ArrayIndexing	m_PathVector [ i ]
>497	Identifier	i
>498	Identifier	m_PathVector
>499	Identifier	m_Path
>500	IfStatement	if ( i )
>501	ExpressionStatement	 
>502	AssignmentExpr	m_Path += PATH_SEPARATOR
>503	Identifier	PATH_SEPARATOR
>504	Identifier	m_Path
>505	Condition	 
>506	Identifier	i
>507	Statement	 
>508	Statement	 
>509	Statement	 
>510	ExpressionStatement	 
>511	RelationalExpression	i < ( int ) m_PathVector . GetSize ( )
>512	CastExpression	( int ) m_PathVector . GetSize ( )
>513	CallExpression	m_PathVector . GetSize ( )
>514	ArgumentList	 
>515	Callee	m_PathVector . GetSize
>516	MemberAccess	m_PathVector . GetSize
>517	Identifier	GetSize
>518	Identifier	m_PathVector
>519	CastTarget	int
>520	Identifier	i
>521	IdentifierDeclStatement	 
>522	IdentifierDecl	i = 0
>523	AssignmentExpr	i = 0
>524	PrimaryExpression	0
>525	Identifier	i
>526	Identifier	i
>527	IdentifierDeclType	int
>528	Statement	 
>529	Statement	 
>530	Statement	 
>531	IfStatement	if ( m_NetworkServer . GetLength ( ) )
>532	CompoundStatement	 
>533	ExpressionStatement	 
>534	AssignmentExpr	m_Path = \"\\\\\" + m_NetworkServer + '\\'
>535	AdditiveExpression	\"\\\\\" + m_NetworkServer + '\\'
>536	AdditiveExpression	m_NetworkServer + '\\'
>537	PrimaryExpression	'\\'
>538	Identifier	m_NetworkServer
>539	PrimaryExpression	\"\\\\\"
>540	Identifier	m_Path
>541	Condition	 
>542	CallExpression	m_NetworkServer . GetLength ( )
>543	ArgumentList	 
>544	Callee	m_NetworkServer . GetLength
>545	MemberAccess	m_NetworkServer . GetLength
>546	Identifier	GetLength
>547	Identifier	m_NetworkServer
>548	IfStatement	if ( m_Drive )
>549	CompoundStatement	 
>550	IfStatement	if ( ( ! m_PathVector . GetSize ( ) ) || ( m_PathVector [ 0 ] . GetLength ( ) ) )
>551	ExpressionStatement	 
>552	AssignmentExpr	m_Path += '\\'
>553	PrimaryExpression	'\\'
>554	Identifier	m_Path
>555	Condition	 
>556	OrExpression	( ! m_PathVector . GetSize ( ) ) || ( m_PathVector [ 0 ] . GetLength ( ) )
>557	CallExpression	m_PathVector [ 0 ] . GetLength ( )
>558	ArgumentList	 
>559	Callee	m_PathVector [ 0 ] . GetLength
>560	MemberAccess	m_PathVector [ 0 ] . GetLength
>561	Identifier	GetLength
>562	ArrayIndexing	m_PathVector [ 0 ]
>563	PrimaryExpression	0
>564	Identifier	m_PathVector
>565	UnaryOp	! m_PathVector . GetSize ( )
>566	CallExpression	m_PathVector . GetSize ( )
>567	ArgumentList	 
>568	Callee	m_PathVector . GetSize
>569	MemberAccess	m_PathVector . GetSize
>570	Identifier	GetSize
>571	Identifier	m_PathVector
>572	UnaryOperator	!
>573	ExpressionStatement	 
>574	AssignmentExpr	m_Path = CString ( m_Drive ) + '
>575	AdditiveExpression	CString ( m_Drive ) + '
>576	PrimaryExpression	'
>577	CallExpression	CString ( m_Drive )
>578	ArgumentList	m_Drive
>579	Argument	m_Drive
>580	Identifier	m_Drive
>581	Callee	CString
>582	Identifier	CString
>583	Identifier	m_Path
>584	Condition	 
>585	Identifier	m_Drive
>586	ExpressionStatement	 
>587	CallExpression	m_Path . Empty ( )
>588	ArgumentList	 
>589	Callee	m_Path . Empty
>590	MemberAccess	m_Path . Empty
>591	Identifier	Empty
>592	Identifier	m_Path
>593	ExpressionStatement	 
>594	CallExpression	ResolvePath ( m_PathVector )
>595	ArgumentList	m_PathVector
>596	Argument	m_PathVector
>597	Identifier	m_PathVector
>598	Callee	ResolvePath
>599	Identifier	ResolvePath
>600	IfStatement	if ( ( m_PathVector . GetSize ( ) >= 3 ) && ( m_PathVector [ 0 ] . GetLength ( ) == 0 ) && ( m_PathVector [ 1 ] \
>601	CompoundStatement	 
>602	ExpressionStatement	 
>603	CallExpression	m_PathVector . RemoveAt ( 0 , 3 )
>604	ArgumentList	0
>605	Argument	3
>606	PrimaryExpression	3
>607	Argument	0
>608	PrimaryExpression	0
>609	Callee	m_PathVector . RemoveAt
>610	MemberAccess	m_PathVector . RemoveAt
>611	Identifier	RemoveAt
>612	Identifier	m_PathVector
>613	ExpressionStatement	 
>614	AssignmentExpr	m_NetworkServer = m_PathVector [ 2 ]
>615	ArrayIndexing	m_PathVector [ 2 ]
>616	PrimaryExpression	2
>617	Identifier	m_PathVector
>618	Identifier	m_NetworkServer
>619	Condition	 
>620	AndExpression	( m_PathVector . GetSize ( ) >= 3 ) && ( m_PathVector [ 0 ] . GetLength ( ) == 0 ) && ( m_PathVector [ \
>621	AndExpression	( m_PathVector [ 0 ] . GetLength ( ) == 0 ) && ( m_PathVector [ 1 ] . GetLength ( ) == 0 )
>622	EqualityExpression	m_PathVector [ 1 ] . GetLength ( ) == 0
>623	PrimaryExpression	0
>624	CallExpression	m_PathVector [ 1 ] . GetLength ( )
>625	ArgumentList	 
>626	Callee	m_PathVector [ 1 ] . GetLength
>627	MemberAccess	m_PathVector [ 1 ] . GetLength
>628	Identifier	GetLength
>629	ArrayIndexing	m_PathVector [ 1 ]
>630	PrimaryExpression	1
>631	Identifier	m_PathVector
>632	EqualityExpression	m_PathVector [ 0 ] . GetLength ( ) == 0
>633	PrimaryExpression	0
>634	CallExpression	m_PathVector [ 0 ] . GetLength ( )
>635	ArgumentList	 
>636	Callee	m_PathVector [ 0 ] . GetLength
>637	MemberAccess	m_PathVector [ 0 ] . GetLength
>638	Identifier	GetLength
>639	ArrayIndexing	m_PathVector [ 0 ]
>640	PrimaryExpression	0
>641	Identifier	m_PathVector
>642	RelationalExpression	m_PathVector . GetSize ( ) >= 3
>643	PrimaryExpression	3
>644	CallExpression	m_PathVector . GetSize ( )
>645	ArgumentList	 
>646	Callee	m_PathVector . GetSize
>647	MemberAccess	m_PathVector . GetSize
>648	Identifier	GetSize
>649	Identifier	m_PathVector
>650	IfStatement	if ( ( m_PathVector . GetSize ( ) && m_PathVector [ 0 ] . GetLength ( ) ) || ( ! m_PathVector . GetSize ( ) ) )
>651	CompoundStatement	 
>652	ExpressionStatement	 
>653	CallExpression	m_PathVector . InsertAt ( 0 , CurDirVector )
>654	ArgumentList	0
>655	Argument	CurDirVector
>656	Identifier	CurDirVector
>657	Argument	0
>658	PrimaryExpression	0
>659	Callee	m_PathVector . InsertAt
>660	MemberAccess	m_PathVector . InsertAt
>661	Identifier	InsertAt
>662	Identifier	m_PathVector
>663	IfStatement	if ( ( CurDirVector . GetSize ( ) > 1 ) && ( ! CurDirVector [ CurDirVector . GetSize ( ) - 1 ] . GetLength ( ) ) )
>664	ExpressionStatement	 
>665	CallExpression	CurDirVector . RemoveAt ( CurDirVector . GetSize ( ) - 1 )
>666	ArgumentList	CurDirVector . GetSize ( ) - 1
>667	Argument	CurDirVector . GetSize ( ) - 1
>668	AdditiveExpression	CurDirVector . GetSize ( ) - 1
>669	PrimaryExpression	1
>670	CallExpression	CurDirVector . GetSize ( )
>671	ArgumentList	 
>672	Callee	CurDirVector . GetSize
>673	MemberAccess	CurDirVector . GetSize
>674	Identifier	GetSize
>675	Identifier	CurDirVector
>676	Callee	CurDirVector . RemoveAt
>677	MemberAccess	CurDirVector . RemoveAt
>678	Identifier	RemoveAt
>679	Identifier	CurDirVector
>680	Condition	 
>681	AndExpression	( CurDirVector . GetSize ( ) > 1 ) && ( ! CurDirVector [ CurDirVector . GetSize ( ) - 1 ] . GetLength ( ) )
>682	UnaryOp	! CurDirVector [ CurDirVector . GetSize ( ) - 1 ] . GetLength ( )
>683	CallExpression	CurDirVector [ CurDirVector . GetSize ( ) - 1 ] . GetLength ( )
>684	ArgumentList	 
>685	Callee	CurDirVector [ CurDirVector . GetSize ( ) - 1 ] . GetLength
>686	MemberAccess	CurDirVector [ CurDirVector . GetSize ( ) - 1 ] . GetLength
>687	Identifier	GetLength
>688	ArrayIndexing	CurDirVector [ CurDirVector . GetSize ( ) - 1 ]
>689	AdditiveExpression	CurDirVector . GetSize ( ) - 1
>690	PrimaryExpression	1
>691	CallExpression	CurDirVector . GetSize ( )
>692	ArgumentList	 
>693	Callee	CurDirVector . GetSize
>694	MemberAccess	CurDirVector . GetSize
>695	Identifier	GetSize
>696	Identifier	CurDirVector
>697	Identifier	CurDirVector
>698	UnaryOperator	!
>699	RelationalExpression	CurDirVector . GetSize ( ) > 1
>700	PrimaryExpression	1
>701	CallExpression	CurDirVector . GetSize ( )
>702	ArgumentList	 
>703	Callee	CurDirVector . GetSize
>704	MemberAccess	CurDirVector . GetSize
>705	Identifier	GetSize
>706	Identifier	CurDirVector
>707	ExpressionStatement	 
>708	CallExpression	_chdrive ( CurrentDrive )
>709	ArgumentList	CurrentDrive
>710	Argument	CurrentDrive
>711	Identifier	CurrentDrive
>712	Callee	_chdrive
>713	Identifier	_chdrive
>714	IfStatement	if ( m_Drive && CurDirVector . GetSize ( ) && IsDrive ( CurDirVector [ 0 ] ) )
>715	ExpressionStatement	 
>716	CallExpression	CurDirVector . RemoveAt ( 0 )
>717	ArgumentList	0
>718	Argument	0
>719	PrimaryExpression	0
>720	Callee	CurDirVector . RemoveAt
>721	MemberAccess	CurDirVector . RemoveAt
>722	Identifier	RemoveAt
>723	Identifier	CurDirVector
>724	Condition	 
>725	AndExpression	m_Drive && CurDirVector . GetSize ( ) && IsDrive ( CurDirVector [ 0 ] )
>726	AndExpression	CurDirVector . GetSize ( ) && IsDrive ( CurDirVector [ 0 ] )
>727	CallExpression	IsDrive ( CurDirVector [ 0 ] )
>728	ArgumentList	CurDirVector [ 0 ]
>729	Argument	CurDirVector [ 0 ]
>730	ArrayIndexing	CurDirVector [ 0 ]
>731	PrimaryExpression	0
>732	Identifier	CurDirVector
>733	Callee	IsDrive
>734	Identifier	IsDrive
>735	CallExpression	CurDirVector . GetSize ( )
>736	ArgumentList	 
>737	Callee	CurDirVector . GetSize
>738	MemberAccess	CurDirVector . GetSize
>739	Identifier	GetSize
>740	Identifier	CurDirVector
>741	Identifier	m_Drive
>742	ExpressionStatement	 
>743	CallExpression	GetCurrentDirectoryVector ( & CurDirVector )
>744	ArgumentList	& CurDirVector
>745	Argument	& CurDirVector
>746	UnaryOp	& CurDirVector
>747	Identifier	CurDirVector
>748	UnaryOperator	&
>749	Callee	GetCurrentDirectoryVector
>750	Identifier	GetCurrentDirectoryVector
>751	IdentifierDeclStatement	 
>752	IdentifierDecl	CurDirVector
>753	Identifier	CurDirVector
>754	IdentifierDeclType	CVector < CString >
>755	ExpressionStatement	 
>756	CallExpression	_chdrive ( tolower ( m_Drive ) - 'a' + 1 )
>757	ArgumentList	tolower ( m_Drive ) - 'a' + 1
>758	Argument	tolower ( m_Drive ) - 'a' + 1
>759	AdditiveExpression	tolower ( m_Drive ) - 'a' + 1
>760	AdditiveExpression	'a' + 1
>761	PrimaryExpression	1
>762	PrimaryExpression	'a'
>763	CallExpression	tolower ( m_Drive )
>764	ArgumentList	m_Drive
>765	Argument	m_Drive
>766	Identifier	m_Drive
>767	Callee	tolower
>768	Identifier	tolower
>769	Callee	_chdrive
>770	Identifier	_chdrive
>771	IdentifierDeclStatement	 
>772	IdentifierDecl	CurrentDrive = _getdrive ( )
>773	AssignmentExpr	CurrentDrive = _getdrive ( )
>774	CallExpression	_getdrive ( )
>775	ArgumentList	 
>776	Callee	_getdrive
>777	Identifier	_getdrive
>778	Identifier	CurrentDrive
>779	Identifier	CurrentDrive
>780	IdentifierDeclType	int
>781	Condition	 
>782	OrExpression	( m_PathVector . GetSize ( ) && m_PathVector [ 0 ] . GetLength ( ) ) || ( ! m_PathVector . GetSize ( ) )
>783	UnaryOp	! m_PathVector . GetSize ( )
>784	CallExpression	m_PathVector . GetSize ( )
>785	ArgumentList	 
>786	Callee	m_PathVector . GetSize
>787	MemberAccess	m_PathVector . GetSize
>788	Identifier	GetSize
>789	Identifier	m_PathVector
>790	UnaryOperator	!
>791	AndExpression	m_PathVector . GetSize ( ) && m_PathVector [ 0 ] . GetLength ( )
>792	CallExpression	m_PathVector [ 0 ] . GetLength ( )
>793	ArgumentList	 
>794	Callee	m_PathVector [ 0 ] . GetLength
>795	MemberAccess	m_PathVector [ 0 ] . GetLength
>796	Identifier	GetLength
>797	ArrayIndexing	m_PathVector [ 0 ]
>798	PrimaryExpression	0
>799	Identifier	m_PathVector
>800	CallExpression	m_PathVector . GetSize ( )
>801	ArgumentList	 
>802	Callee	m_PathVector . GetSize
>803	MemberAccess	m_PathVector . GetSize
>804	Identifier	GetSize
>805	Identifier	m_PathVector
>806	IfStatement	if ( m_PathVector . GetSize ( ) )
>807	ElseStatement	else
>808	ExpressionStatement	 
>809	CallExpression	m_Filename . Empty ( )
>810	ArgumentList	 
>811	Callee	m_Filename . Empty
>812	MemberAccess	m_Filename . Empty
>813	Identifier	Empty
>814	Identifier	m_Filename
>815	CompoundStatement	 
>816	ExpressionStatement	 
>817	CallExpression	m_PathVector . RemoveAt ( m_PathVector . GetSize ( ) - 1 )
>818	ArgumentList	m_PathVector . GetSize ( ) - 1
>819	Argument	m_PathVector . GetSize ( ) - 1
>820	AdditiveExpression	m_PathVector . GetSize ( ) - 1
>821	PrimaryExpression	1
>822	CallExpression	m_PathVector . GetSize ( )
>823	ArgumentList	 
>824	Callee	m_PathVector . GetSize
>825	MemberAccess	m_PathVector . GetSize
>826	Identifier	GetSize
>827	Identifier	m_PathVector
>828	Callee	m_PathVector . RemoveAt
>829	MemberAccess	m_PathVector . RemoveAt
>830	Identifier	RemoveAt
>831	Identifier	m_PathVector
>832	ExpressionStatement	 
>833	AssignmentExpr	m_Filename = m_PathVector [ m_PathVector . GetSize ( ) - 1 ]
>834	ArrayIndexing	m_PathVector [ m_PathVector . GetSize ( ) - 1 ]
>835	AdditiveExpression	m_PathVector . GetSize ( ) - 1
>836	PrimaryExpression	1
>837	CallExpression	m_PathVector . GetSize ( )
>838	ArgumentList	 
>839	Callee	m_PathVector . GetSize
>840	MemberAccess	m_PathVector . GetSize
>841	Identifier	GetSize
>842	Identifier	m_PathVector
>843	Identifier	m_PathVector
>844	Identifier	m_Filename
>845	Condition	 
>846	CallExpression	m_PathVector . GetSize ( )
>847	ArgumentList	 
>848	Callee	m_PathVector . GetSize
>849	MemberAccess	m_PathVector . GetSize
>850	Identifier	GetSize
>851	Identifier	m_PathVector
>852	ExpressionStatement	 
>853	CallExpression	CString 
>854	ArgumentList	m_PathFull
>855	Argument	& m_PathVector
>856	UnaryOp	& m_PathVector
>857	Identifier	m_PathVector
>858	UnaryOperator	&
>859	Argument	PATH_SEPARATOR
>860	Identifier	PATH_SEPARATOR
>861	Argument	m_PathFull
>862	Identifier	m_PathFull
>863	Callee	CString 
>864	Identifier	CString 
>865	ExpressionStatement	 
>866	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>867	ArgumentList	tagSystem
>868	Argument	\"CLocalPath
>869	Expression	\"CLocalPath
>870	CallExpression	m_PathFull . GetBuffer ( )
>871	ArgumentList	 
>872	Callee	m_PathFull . GetBuffer
>873	MemberAccess	m_PathFull . GetBuffer
>874	Identifier	GetBuffer
>875	Identifier	m_PathFull
>876	PrimaryExpression	\"CLocalPath
>877	Argument	levInfo
>878	Identifier	levInfo
>879	Argument	tagSystem
>880	Identifier	tagSystem
>881	Callee	Trace
>882	Identifier	Trace
>883	IfStatement	if ( m_PathFull . Pos ( '
>884	CompoundStatement	 
>885	ExpressionStatement	 
>886	CallExpression	m_PathFull . Delete ( 0 , 2 )
>887	ArgumentList	0
>888	Argument	2
>889	PrimaryExpression	2
>890	Argument	0
>891	PrimaryExpression	0
>892	Callee	m_PathFull . Delete
>893	MemberAccess	m_PathFull . Delete
>894	Identifier	Delete
>895	Identifier	m_PathFull
>896	ExpressionStatement	 
>897	AssignmentExpr	m_Drive = ( unsigned char ) tolower ( ( unsigned char ) m_PathFull [ 0 ] )
>898	CastExpression	( unsigned char ) tolower ( ( unsigned char ) m_PathFull [ 0 ] )
>899	CallExpression	tolower ( ( unsigned char ) m_PathFull [ 0 ] )
>900	ArgumentList	( unsigned char ) m_PathFull [ 0 ]
>901	Argument	( unsigned char ) m_PathFull [ 0 ]
>902	CastExpression	( unsigned char ) m_PathFull [ 0 ]
>903	ArrayIndexing	m_PathFull [ 0 ]
>904	PrimaryExpression	0
>905	Identifier	m_PathFull
>906	CastTarget	unsigned char
>907	Callee	tolower
>908	Identifier	tolower
>909	CastTarget	unsigned char
>910	Identifier	m_Drive
>911	Condition	 
>912	EqualityExpression	m_PathFull . Pos ( '
>913	PrimaryExpression	1
>914	CallExpression	m_PathFull . Pos ( '
>915	ArgumentList	'
>916	Argument	'
>917	PrimaryExpression	'
>918	Callee	m_PathFull . Pos
>919	MemberAccess	m_PathFull . Pos
>920	Identifier	Pos
>921	Identifier	m_PathFull
>922	ExpressionStatement	 
>923	CallExpression	m_PathFull . Replace ( '\\' , '/' )
>924	ArgumentList	'\\'
>925	Argument	'/'
>926	PrimaryExpression	'/'
>927	Argument	'\\'
>928	PrimaryExpression	'\\'
>929	Callee	m_PathFull . Replace
>930	MemberAccess	m_PathFull . Replace
>931	Identifier	Replace
>932	Identifier	m_PathFull
>933	ExpressionStatement	 
>934	CallExpression	m_PathFull . Replace ( '/' , '\\' )
>935	ArgumentList	'/'
>936	Argument	'\\'
>937	PrimaryExpression	'\\'
>938	Argument	'/'
>939	PrimaryExpression	'/'
>940	Callee	m_PathFull . Replace
>941	MemberAccess	m_PathFull . Replace
>942	Identifier	Replace
>943	Identifier	m_PathFull
>944	ExpressionStatement	 
>945	AssignmentExpr	m_PathFull = Path
>946	Identifier	Path
>947	Identifier	m_PathFull
>986	FunctionDef	CLocalPath 
>987	ParameterList	 
>988	ReturnType	CString
>989	CompoundStatement	 
>990	ReturnStatement	 
>991	Identifier	CString 
>992	ExpressionStatement	 
>993	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>994	ArgumentList	tagSystem
>995	Argument	\"CLocalPath
>996	PrimaryExpression	\"CLocalPath
>997	Argument	levInfo
>998	Identifier	levInfo
>999	Argument	tagSystem
>1000	Identifier	tagSystem
>1001	Callee	Trace
>1002	Identifier	Trace
>1003	IfStatement	if ( pCurrentDirectory )
>1004	CompoundStatement	 
>1005	ReturnStatement	 
>1006	Identifier	Result
>1007	ExpressionStatement	 
>1008	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>1009	ArgumentList	tagSystem
>1010	Argument	\"CLocalPath
>1011	Expression	\"CLocalPath
>1012	CallExpression	Result . GetBuffer ( )
>1013	ArgumentList	 
>1014	Callee	Result . GetBuffer
>1015	MemberAccess	Result . GetBuffer
>1016	Identifier	GetBuffer
>1017	Identifier	Result
>1018	PrimaryExpression	\"CLocalPath
>1019	Argument	levInfo
>1020	Identifier	levInfo
>1021	Argument	tagSystem
>1022	Identifier	tagSystem
>1023	Callee	Trace
>1024	Identifier	Trace
>1025	ExpressionStatement	 
>1026	CallExpression	Terminate ( Result )
>1027	ArgumentList	Result
>1028	Argument	Result
>1029	Identifier	Result
>1030	Callee	Terminate
>1031	Identifier	Terminate
>1032	ExpressionStatement	 
>1033	AssignmentExpr	Result = pCurrentDirectory
>1034	Identifier	pCurrentDirectory
>1035	Identifier	Result
>1036	Condition	 
>1037	Identifier	pCurrentDirectory
>1038	ExpressionStatement	 
>1039	AssignmentExpr	pCurrentDirectory = getenv ( \"PWD\" )
>1040	CallExpression	getenv ( \"PWD\" )
>1041	ArgumentList	\"PWD\"
>1042	Argument	\"PWD\"
>1043	PrimaryExpression	\"PWD\"
>1044	Callee	getenv
>1045	Identifier	getenv
>1046	Identifier	pCurrentDirectory
>1047	IfStatement	if ( getwd ( Buffer ) )
>1048	CompoundStatement	 
>1049	ReturnStatement	 
>1050	Identifier	Result
>1051	ExpressionStatement	 
>1052	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>1053	ArgumentList	tagSystem
>1054	Argument	\"CLocalPath
>1055	Expression	\"CLocalPath
>1056	CallExpression	Result . GetBuffer ( )
>1057	ArgumentList	 
>1058	Callee	Result . GetBuffer
>1059	MemberAccess	Result . GetBuffer
>1060	Identifier	GetBuffer
>1061	Identifier	Result
>1062	PrimaryExpression	\"CLocalPath
>1063	Argument	levInfo
>1064	Identifier	levInfo
>1065	Argument	tagSystem
>1066	Identifier	tagSystem
>1067	Callee	Trace
>1068	Identifier	Trace
>1069	ExpressionStatement	 
>1070	CallExpression	Terminate ( Result )
>1071	ArgumentList	Result
>1072	Argument	Result
>1073	Identifier	Result
>1074	Callee	Terminate
>1075	Identifier	Terminate
>1076	ExpressionStatement	 
>1077	AssignmentExpr	Result = Buffer
>1078	Identifier	Buffer
>1079	Identifier	Result
>1080	Condition	 
>1081	CallExpression	getwd ( Buffer )
>1082	ArgumentList	Buffer
>1083	Argument	Buffer
>1084	Identifier	Buffer
>1085	Callee	getwd
>1086	Identifier	getwd
>1087	IfStatement	if ( pCurrentDirectory )
>1088	CompoundStatement	 
>1089	ReturnStatement	 
>1090	Identifier	Result
>1091	ExpressionStatement	 
>1092	CallExpression	free ( pCurrentDirectory )
>1093	ArgumentList	pCurrentDirectory
>1094	Argument	pCurrentDirectory
>1095	Identifier	pCurrentDirectory
>1096	Callee	free
>1097	Identifier	free
>1098	ExpressionStatement	 
>1099	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>1100	ArgumentList	tagSystem
>1101	Argument	\"CLocalPath
>1102	Expression	\"CLocalPath
>1103	CallExpression	Result . GetBuffer ( )
>1104	ArgumentList	 
>1105	Callee	Result . GetBuffer
>1106	MemberAccess	Result . GetBuffer
>1107	Identifier	GetBuffer
>1108	Identifier	Result
>1109	PrimaryExpression	\"CLocalPath
>1110	Argument	levInfo
>1111	Identifier	levInfo
>1112	Argument	tagSystem
>1113	Identifier	tagSystem
>1114	Callee	Trace
>1115	Identifier	Trace
>1116	ExpressionStatement	 
>1117	CallExpression	Terminate ( Result )
>1118	ArgumentList	Result
>1119	Argument	Result
>1120	Identifier	Result
>1121	Callee	Terminate
>1122	Identifier	Terminate
>1123	ExpressionStatement	 
>1124	AssignmentExpr	Result = pCurrentDirectory
>1125	Identifier	pCurrentDirectory
>1126	Identifier	Result
>1127	Condition	 
>1128	Identifier	pCurrentDirectory
>1129	ExpressionStatement	 
>1130	AssignmentExpr	pCurrentDirectory = base_getcwd ( NULL , 0 )
>1131	CallExpression	base_getcwd ( NULL , 0 )
>1132	ArgumentList	NULL
>1133	Argument	0
>1134	PrimaryExpression	0
>1135	Argument	NULL
>1136	Identifier	NULL
>1137	Callee	base_getcwd
>1138	Identifier	base_getcwd
>1139	Identifier	pCurrentDirectory
>1140	IfStatement	if ( base_getcwd ( Buffer , MAXPATHLEN ) )
>1141	CompoundStatement	 
>1142	ReturnStatement	 
>1143	Identifier	Result
>1144	ExpressionStatement	 
>1145	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>1146	ArgumentList	tagSystem
>1147	Argument	\"CLocalPath
>1148	Expression	\"CLocalPath
>1149	CallExpression	Result . GetBuffer ( )
>1150	ArgumentList	 
>1151	Callee	Result . GetBuffer
>1152	MemberAccess	Result . GetBuffer
>1153	Identifier	GetBuffer
>1154	Identifier	Result
>1155	PrimaryExpression	\"CLocalPath
>1156	Argument	levInfo
>1157	Identifier	levInfo
>1158	Argument	tagSystem
>1159	Identifier	tagSystem
>1160	Callee	Trace
>1161	Identifier	Trace
>1162	ExpressionStatement	 
>1163	CallExpression	Terminate ( Result )
>1164	ArgumentList	Result
>1165	Argument	Result
>1166	Identifier	Result
>1167	Callee	Terminate
>1168	Identifier	Terminate
>1169	ExpressionStatement	 
>1170	AssignmentExpr	Result = Buffer
>1171	Identifier	Buffer
>1172	Identifier	Result
>1173	Condition	 
>1174	CallExpression	base_getcwd ( Buffer , MAXPATHLEN )
>1175	ArgumentList	Buffer
>1176	Argument	MAXPATHLEN
>1177	Identifier	MAXPATHLEN
>1178	Argument	Buffer
>1179	Identifier	Buffer
>1180	Callee	base_getcwd
>1181	Identifier	base_getcwd
>1182	IdentifierDeclStatement	 
>1183	IdentifierDecl	* pCurrentDirectory = NULL
>1184	AssignmentExpr	* pCurrentDirectory = NULL
>1185	Identifier	NULL
>1186	Identifier	NULL
>1187	Identifier	pCurrentDirectory
>1188	IdentifierDeclType	char *
>1189	IdentifierDeclStatement	 
>1190	IdentifierDecl	Result
>1191	Identifier	Result
>1192	IdentifierDeclType	CString
>1193	IdentifierDeclStatement	 
>1194	IdentifierDecl	Buffer [ MAXPATHLEN + 1 ]
>1195	AdditiveExpression	MAXPATHLEN + 1
>1196	PrimaryExpression	1
>1197	Identifier	MAXPATHLEN
>1198	Identifier	Buffer
>1199	IdentifierDeclType	char [ MAXPATHLEN + 1 ]
>1215	FunctionDef	CLocalPath 
>1216	ParameterList	const CString & Directory
>1217	Parameter	 
>1218	Identifier	Directory
>1219	ParameterType	const CString &
>1220	ReturnType	bool
>1221	CompoundStatement	 
>1222	ReturnStatement	 
>1223	Identifier	bResult
>1224	ExpressionStatement	 
>1225	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>1226	ArgumentList	tagSystem
>1227	Argument	\"CLocalPath
>1228	Expression	\"CLocalPath
>1229	Expression	Directory . GetBuffer ( ) , bResult ? \"yes\" 
>1230	Expression	bResult ? \"yes\" 
>1231	MemberAccess	Stat . st_mode
>1232	Identifier	st_mode
>1233	Identifier	Stat
>1234	ConditionalExpression	bResult ? \"yes\" 
>1235	PrimaryExpression	\"no\"
>1236	PrimaryExpression	\"yes\"
>1237	Condition	bResult
>1238	Identifier	bResult
>1239	CallExpression	Directory . GetBuffer ( )
>1240	ArgumentList	 
>1241	Callee	Directory . GetBuffer
>1242	MemberAccess	Directory . GetBuffer
>1243	Identifier	GetBuffer
>1244	Identifier	Directory
>1245	PrimaryExpression	\"CLocalPath
>1246	Argument	levInfo
>1247	Identifier	levInfo
>1248	Argument	tagSystem
>1249	Identifier	tagSystem
>1250	Callee	Trace
>1251	Identifier	Trace
>1252	IfStatement	if ( ! bResult && Directory . GetLength ( ) && Directory [ Directory . GetLength ( ) - 1 ] == PATH_SEPARATOR )
>1253	CompoundStatement	 
>1254	ExpressionStatement	 
>1255	Statement	 
>1256	Statement	 
>1257	Statement	 
>1258	Statement	 
>1259	Statement	 
>1260	Statement	 
>1261	Statement	 
>1262	Statement	 
>1263	Statement	 
>1264	Statement	 
>1265	Statement	 
>1266	Statement	 
>1267	Statement	 
>1268	Statement	 
>1269	Statement	 
>1270	Statement	 
>1271	Statement	 
>1272	Statement	 
>1273	Statement	 
>1274	Statement	 
>1275	Statement	 
>1276	Statement	 
>1277	Statement	 
>1278	Statement	 
>1279	Statement	 
>1280	Statement	 
>1281	Statement	 
>1282	Statement	 
>1283	Statement	 
>1284	Statement	 
>1285	Statement	 
>1286	Statement	 
>1287	Statement	 
>1288	Statement	 
>1289	Statement	 
>1290	Statement	 
>1291	Statement	 
>1292	Statement	 
>1293	Statement	 
>1294	Statement	 
>1295	Statement	 
>1296	Statement	 
>1297	Statement	 
>1298	ExpressionStatement	 
>1299	CallExpression	DirectoryCandidate . Delete ( DirectoryCandidate . GetLength ( ) - 1 , 1 )
>1300	ArgumentList	DirectoryCandidate . GetLength ( ) - 1
>1301	Argument	1
>1302	PrimaryExpression	1
>1303	Argument	DirectoryCandidate . GetLength ( ) - 1
>1304	AdditiveExpression	DirectoryCandidate . GetLength ( ) - 1
>1305	PrimaryExpression	1
>1306	CallExpression	DirectoryCandidate . GetLength ( )
>1307	ArgumentList	 
>1308	Callee	DirectoryCandidate . GetLength
>1309	MemberAccess	DirectoryCandidate . GetLength
>1310	Identifier	GetLength
>1311	Identifier	DirectoryCandidate
>1312	Callee	DirectoryCandidate . Delete
>1313	MemberAccess	DirectoryCandidate . Delete
>1314	Identifier	Delete
>1315	Identifier	DirectoryCandidate
>1316	IdentifierDeclStatement	 
>1317	IdentifierDecl	DirectoryCandidate ( Directory )
>1318	Identifier	Directory
>1319	Identifier	DirectoryCandidate
>1320	IdentifierDeclType	CString
>1321	Condition	 
>1322	AndExpression	! bResult && Directory . GetLength ( ) && Directory [ Directory . GetLength ( ) - 1 ] == PATH_SEPARATOR
>1323	AndExpression	Directory . GetLength ( ) && Directory [ Directory . GetLength ( ) - 1 ] == PATH_SEPARATOR
>1324	EqualityExpression	Directory [ Directory . GetLength ( ) - 1 ] == PATH_SEPARATOR
>1325	Identifier	PATH_SEPARATOR
>1326	ArrayIndexing	Directory [ Directory . GetLength ( ) - 1 ]
>1327	AdditiveExpression	Directory . GetLength ( ) - 1
>1328	PrimaryExpression	1
>1329	CallExpression	Directory . GetLength ( )
>1330	ArgumentList	 
>1331	Callee	Directory . GetLength
>1332	MemberAccess	Directory . GetLength
>1333	Identifier	GetLength
>1334	Identifier	Directory
>1335	Identifier	Directory
>1336	CallExpression	Directory . GetLength ( )
>1337	ArgumentList	 
>1338	Callee	Directory . GetLength
>1339	MemberAccess	Directory . GetLength
>1340	Identifier	GetLength
>1341	Identifier	Directory
>1342	UnaryOp	! bResult
>1343	Identifier	bResult
>1344	UnaryOperator	!
>1345	ExpressionStatement	 
>1346	Statement	 
>1347	Statement	 
>1348	Statement	 
>1349	Statement	 
>1350	Statement	 
>1351	Statement	 
>1352	Statement	 
>1353	Statement	 
>1354	Statement	 
>1355	Statement	 
>1356	Statement	 
>1357	Statement	 
>1358	Statement	 
>1359	Statement	 
>1360	Statement	 
>1361	Statement	 
>1362	Statement	 
>1363	Statement	 
>1364	Statement	 
>1365	Statement	 
>1366	Statement	 
>1367	Statement	 
>1368	Statement	 
>1369	Statement	 
>1370	Statement	 
>1371	Statement	 
>1372	Statement	 
>1373	Statement	 
>1374	Statement	 
>1375	Statement	 
>1376	Statement	 
>1377	Statement	 
>1378	Statement	 
>1379	Statement	 
>1380	Statement	 
>1381	Statement	 
>1382	Statement	 
>1383	Statement	 
>1384	Statement	 
>1385	Statement	 
>1386	Statement	 
>1387	Statement	 
>1388	Statement	 
>1389	Statement	 
>1390	ExpressionStatement	 
>1391	CallExpression	memset ( & Stat , 0 , sizeof ( struct_stat ) )
>1392	ArgumentList	& Stat
>1393	Argument	sizeof ( struct_stat )
>1394	SizeofExpr	sizeof ( struct_stat )
>1395	SizeofOperand	struct_stat
>1396	Sizeof	sizeof
>1397	Argument	0
>1398	PrimaryExpression	0
>1399	Argument	& Stat
>1400	UnaryOp	& Stat
>1401	Identifier	Stat
>1402	UnaryOperator	&
>1403	Callee	memset
>1404	Identifier	memset
>1405	IdentifierDeclStatement	 
>1406	IdentifierDecl	Stat
>1407	Identifier	Stat
>1408	IdentifierDeclType	struct_stat
>1409	IfStatement	if ( Directory . GetLength ( ) == 2 && Directory [ 1 ] == '
>1410	ReturnStatement	 
>1411	CallExpression	DirectoryExists ( Directory + \"\\\" )
>1412	ArgumentList	Directory + \"\\\"
>1413	Argument	Directory + \"\\\"
>1414	AdditiveExpression	Directory + \"\\\"
>1415	PrimaryExpression	\"\\\"
>1416	Identifier	Directory
>1417	Callee	DirectoryExists
>1418	Identifier	DirectoryExists
>1419	Condition	 
>1420	AndExpression	Directory . GetLength ( ) == 2 && Directory [ 1 ] == '
>1421	EqualityExpression	Directory [ 1 ] == '
>1422	PrimaryExpression	'
>1423	ArrayIndexing	Directory [ 1 ]
>1424	PrimaryExpression	1
>1425	Identifier	Directory
>1426	EqualityExpression	Directory . GetLength ( ) == 2
>1427	PrimaryExpression	2
>1428	CallExpression	Directory . GetLength ( )
>1429	ArgumentList	 
>1430	Callee	Directory . GetLength
>1431	MemberAccess	Directory . GetLength
>1432	Identifier	GetLength
>1433	Identifier	Directory
>1452	FunctionDef	CLocalPath 
>1453	ParameterList	 
>1454	ReturnType	bool
>1455	CompoundStatement	 
>1456	ReturnStatement	 
>1457	Identifier	Result
>1458	ExpressionStatement	 
>1459	CallExpression	base_chdir ( ( const char * ) CurrentDirectory . GetBuffer ( ) )
>1460	ArgumentList	( const char * ) CurrentDirectory . GetBuffer ( )
>1461	Argument	( const char * ) CurrentDirectory . GetBuffer ( )
>1462	CastExpression	( const char * ) CurrentDirectory . GetBuffer ( )
>1463	CallExpression	CurrentDirectory . GetBuffer ( )
>1464	ArgumentList	 
>1465	Callee	CurrentDirectory . GetBuffer
>1466	MemberAccess	CurrentDirectory . GetBuffer
>1467	Identifier	GetBuffer
>1468	Identifier	CurrentDirectory
>1469	CastTarget	const char *
>1470	Callee	base_chdir
>1471	Identifier	base_chdir
>1472	IdentifierDeclStatement	 
>1473	IdentifierDecl	Result = ForceDirectory ( m_PathVector , false )
>1474	AssignmentExpr	Result = ForceDirectory ( m_PathVector , false )
>1475	CallExpression	ForceDirectory ( m_PathVector , false )
>1476	ArgumentList	m_PathVector
>1477	Argument	false
>1478	Identifier	false
>1479	Argument	m_PathVector
>1480	Identifier	m_PathVector
>1481	Callee	ForceDirectory
>1482	Identifier	ForceDirectory
>1483	Identifier	Result
>1484	Identifier	Result
>1485	IdentifierDeclType	bool
>1486	IdentifierDeclStatement	 
>1487	IdentifierDecl	CurrentDirectory = GetCurrentDirectory ( )
>1488	AssignmentExpr	CurrentDirectory = GetCurrentDirectory ( )
>1489	CallExpression	GetCurrentDirectory ( )
>1490	ArgumentList	 
>1491	Callee	GetCurrentDirectory
>1492	Identifier	GetCurrentDirectory
>1493	Identifier	CurrentDirectory
>1494	Identifier	CurrentDirectory
>1495	IdentifierDeclType	CString
>1506	FunctionDef	CLocalPath 
>1507	ParameterList	const CString & Path
>1508	Parameter	 
>1509	Identifier	Path
>1510	ParameterType	const CString &
>1511	ReturnType	bool
>1512	CompoundStatement	 
>1513	ReturnStatement	 
>1514	CallExpression	LocalPath . ForceDirectory ( )
>1515	ArgumentList	 
>1516	Callee	LocalPath . ForceDirectory
>1517	MemberAccess	LocalPath . ForceDirectory
>1518	Identifier	ForceDirectory
>1519	Identifier	LocalPath
>1520	IdentifierDeclStatement	 
>1521	IdentifierDecl	LocalPath ( Path )
>1522	Identifier	Path
>1523	Identifier	LocalPath
>1524	IdentifierDeclType	CLocalPath
>1531	FunctionDef	CLocalPath 
>1532	ParameterList	const CVector < CString > & Vector , bool SaveDirectory
>1533	Parameter	 
>1534	Identifier	SaveDirectory
>1535	ParameterType	bool
>1536	Parameter	 
>1537	Identifier	Vector
>1538	ParameterType	const CVector < CString > &
>1539	ReturnType	bool
>1540	CompoundStatement	 
>1541	ReturnStatement	 
>1542	Identifier	Result
>1543	IfStatement	if ( SaveDirectory )
>1544	ExpressionStatement	 
>1545	CallExpression	base_chdir ( CurrentDirectory . GetBuffer ( ) )
>1546	ArgumentList	CurrentDirectory . GetBuffer ( )
>1547	Argument	CurrentDirectory . GetBuffer ( )
>1548	CallExpression	CurrentDirectory . GetBuffer ( )
>1549	ArgumentList	 
>1550	Callee	CurrentDirectory . GetBuffer
>1551	MemberAccess	CurrentDirectory . GetBuffer
>1552	Identifier	GetBuffer
>1553	Identifier	CurrentDirectory
>1554	Callee	base_chdir
>1555	Identifier	base_chdir
>1556	Condition	 
>1557	Identifier	SaveDirectory
>1558	CompoundStatement	 
>1559	ExpressionStatement	 
>1560	AssignmentExpr	CurrentPath = Target
>1561	Identifier	Target
>1562	Identifier	CurrentPath
>1563	IfStatement	if ( base_chdir ( Target . GetBuffer ( ) ) == - 1 )
>1564	CompoundStatement	 
>1565	IfStatement	if ( base_mkdir ( Target . GetBuffer ( ) ) == - 1 )
>1566	CompoundStatement	 
>1567	BreakStatement	 
>1568	ExpressionStatement	 
>1569	AssignmentExpr	Result = false
>1570	Identifier	false
>1571	Identifier	Result
>1572	Condition	 
>1573	EqualityExpression	base_mkdir ( Target . GetBuffer ( ) ) == - 1
>1574	UnaryOp	- 1
>1575	PrimaryExpression	1
>1576	UnaryOperator	-
>1577	CallExpression	base_mkdir ( Target . GetBuffer ( ) )
>1578	ArgumentList	Target . GetBuffer ( )
>1579	Argument	Target . GetBuffer ( )
>1580	CallExpression	Target . GetBuffer ( )
>1581	ArgumentList	 
>1582	Callee	Target . GetBuffer
>1583	MemberAccess	Target . GetBuffer
>1584	Identifier	GetBuffer
>1585	Identifier	Target
>1586	Callee	base_mkdir
>1587	Identifier	base_mkdir
>1588	Condition	 
>1589	EqualityExpression	base_chdir ( Target . GetBuffer ( ) ) == - 1
>1590	UnaryOp	- 1
>1591	PrimaryExpression	1
>1592	UnaryOperator	-
>1593	CallExpression	base_chdir ( Target . GetBuffer ( ) )
>1594	ArgumentList	Target . GetBuffer ( )
>1595	Argument	Target . GetBuffer ( )
>1596	CallExpression	Target . GetBuffer ( )
>1597	ArgumentList	 
>1598	Callee	Target . GetBuffer
>1599	MemberAccess	Target . GetBuffer
>1600	Identifier	GetBuffer
>1601	Identifier	Target
>1602	Callee	base_chdir
>1603	Identifier	base_chdir
>1604	ExpressionStatement	 
>1605	CallExpression	Terminate ( Target )
>1606	ArgumentList	Target
>1607	Argument	Target
>1608	Identifier	Target
>1609	Callee	Terminate
>1610	Identifier	Terminate
>1611	ExpressionStatement	 
>1612	AssignmentExpr	Target = CurrentPath + Vector [ i ]
>1613	AdditiveExpression	CurrentPath + Vector [ i ]
>1614	ArrayIndexing	Vector [ i ]
>1615	Identifier	i
>1616	Identifier	Vector
>1617	Identifier	CurrentPath
>1618	Identifier	Target
>1619	Statement	 
>1620	Statement	 
>1621	Statement	 
>1622	ExpressionStatement	 
>1623	RelationalExpression	i < ( int ) Vector . GetSize ( )
>1624	CastExpression	( int ) Vector . GetSize ( )
>1625	CallExpression	Vector . GetSize ( )
>1626	ArgumentList	 
>1627	Callee	Vector . GetSize
>1628	MemberAccess	Vector . GetSize
>1629	Identifier	GetSize
>1630	Identifier	Vector
>1631	CastTarget	int
>1632	Identifier	i
>1633	IdentifierDeclStatement	 
>1634	IdentifierDecl	i = 0
>1635	AssignmentExpr	i = 0
>1636	PrimaryExpression	0
>1637	Identifier	i
>1638	Identifier	i
>1639	IdentifierDeclType	int
>1640	Statement	 
>1641	Statement	 
>1642	Statement	 
>1643	IdentifierDeclStatement	 
>1644	IdentifierDecl	Result = true
>1645	AssignmentExpr	Result = true
>1646	Identifier	true
>1647	Identifier	true
>1648	Identifier	Result
>1649	IdentifierDeclType	bool
>1650	IdentifierDeclStatement	 
>1651	IdentifierDecl	CurrentPath
>1652	Identifier	CurrentPath
>1653	IdentifierDeclType	CString
>1654	IdentifierDeclStatement	 
>1655	IdentifierDecl	Target
>1656	Identifier	Target
>1657	IdentifierDeclType	CString
>1658	IfStatement	if ( SaveDirectory )
>1659	ExpressionStatement	 
>1660	AssignmentExpr	CurrentDirectory = GetCurrentDirectory ( )
>1661	CallExpression	GetCurrentDirectory ( )
>1662	ArgumentList	 
>1663	Callee	GetCurrentDirectory
>1664	Identifier	GetCurrentDirectory
>1665	Identifier	CurrentDirectory
>1666	Condition	 
>1667	Identifier	SaveDirectory
>1668	IdentifierDeclStatement	 
>1669	IdentifierDecl	CurrentDirectory
>1670	Identifier	CurrentDirectory
>1671	IdentifierDeclType	CString
>1692	FunctionDef	CLocalPath 
>1693	ParameterList	bool Recursive , bool Files , bool Directories , CVector < CString > & Target , const CString & Root
>1694	Parameter	 
>1695	Identifier	Root
>1696	ParameterType	const CString &
>1697	Parameter	 
>1698	Identifier	Target
>1699	ParameterType	CVector < CString > &
>1700	Parameter	 
>1701	Identifier	Directories
>1702	ParameterType	bool
>1703	Parameter	 
>1704	Identifier	Files
>1705	ParameterType	bool
>1706	Parameter	 
>1707	Identifier	Recursive
>1708	ParameterType	bool
>1709	ReturnType	void
>1710	CompoundStatement	 
>1711	ExpressionStatement	 
>1712	CallExpression	base_chdir ( CurrentDirectory . GetBuffer ( ) )
>1713	ArgumentList	CurrentDirectory . GetBuffer ( )
>1714	Argument	CurrentDirectory . GetBuffer ( )
>1715	CallExpression	CurrentDirectory . GetBuffer ( )
>1716	ArgumentList	 
>1717	Callee	CurrentDirectory . GetBuffer
>1718	MemberAccess	CurrentDirectory . GetBuffer
>1719	Identifier	GetBuffer
>1720	Identifier	CurrentDirectory
>1721	Callee	base_chdir
>1722	Identifier	base_chdir
>1723	ExpressionStatement	 
>1724	CallExpression	FindClose ( hFile )
>1725	ArgumentList	hFile
>1726	Argument	hFile
>1727	Identifier	hFile
>1728	Callee	FindClose
>1729	Identifier	FindClose
>1730	DoStatement	do
>1731	Condition	 
>1732	EqualityExpression	FindNextFile ( hFile , & FindData ) != 0
>1733	PrimaryExpression	0
>1734	CallExpression	FindNextFile ( hFile , & FindData )
>1735	ArgumentList	hFile
>1736	Argument	& FindData
>1737	UnaryOp	& FindData
>1738	Identifier	FindData
>1739	UnaryOperator	&
>1740	Argument	hFile
>1741	Identifier	hFile
>1742	Callee	FindNextFile
>1743	Identifier	FindNextFile
>1744	CompoundStatement	 
>1745	IfStatement	if ( ( FileName != g_strPathParent ) && ( FileName != g_strPathCurrent ) )
>1746	CompoundStatement	 
>1747	IfStatement	if ( FindData . dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY )
>1748	ElseStatement	else
>1749	CompoundStatement	 
>1750	IfStatement	if ( Files )
>1751	CompoundStatement	 
>1752	ExpressionStatement	 
>1753	AssignmentExpr	Target += NewDirectory
>1754	Identifier	NewDirectory
>1755	Identifier	Target
>1756	Condition	 
>1757	Identifier	Files
>1758	CompoundStatement	 
>1759	IfStatement	if ( Recursive )
>1760	ExpressionStatement	 
>1761	CallExpression	PopulatePathContents ( Recursive , Files , Directories , Target , NewDirectory )
>1762	ArgumentList	Recursive
>1763	Argument	NewDirectory
>1764	Identifier	NewDirectory
>1765	Argument	Target
>1766	Identifier	Target
>1767	Argument	Directories
>1768	Identifier	Directories
>1769	Argument	Files
>1770	Identifier	Files
>1771	Argument	Recursive
>1772	Identifier	Recursive
>1773	Callee	PopulatePathContents
>1774	Identifier	PopulatePathContents
>1775	Condition	 
>1776	Identifier	Recursive
>1777	IfStatement	if ( Directories )
>1778	CompoundStatement	 
>1779	ExpressionStatement	 
>1780	AssignmentExpr	Target += NewDirectory
>1781	Identifier	NewDirectory
>1782	Identifier	Target
>1783	Condition	 
>1784	Identifier	Directories
>1785	ExpressionStatement	 
>1786	CallExpression	Terminate ( NewDirectory )
>1787	ArgumentList	NewDirectory
>1788	Argument	NewDirectory
>1789	Identifier	NewDirectory
>1790	Callee	Terminate
>1791	Identifier	Terminate
>1792	Condition	 
>1793	BitAndExpression	FindData . dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY
>1794	Identifier	FILE_ATTRIBUTE_DIRECTORY
>1795	MemberAccess	FindData . dwFileAttributes
>1796	Identifier	dwFileAttributes
>1797	Identifier	FindData
>1798	Condition	 
>1799	AndExpression	( FileName != g_strPathParent ) && ( FileName != g_strPathCurrent )
>1800	EqualityExpression	FileName != g_strPathCurrent
>1801	Identifier	g_strPathCurrent
>1802	Identifier	FileName
>1803	EqualityExpression	FileName != g_strPathParent
>1804	Identifier	g_strPathParent
>1805	Identifier	FileName
>1806	ExpressionStatement	 
>1807	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>1808	ArgumentList	tagSystem
>1809	Argument	\"CLocalPath
>1810	Expression	\"CLocalPath
>1811	CallExpression	NewDirectory . GetBuffer ( )
>1812	ArgumentList	 
>1813	Callee	NewDirectory . GetBuffer
>1814	MemberAccess	NewDirectory . GetBuffer
>1815	Identifier	GetBuffer
>1816	Identifier	NewDirectory
>1817	PrimaryExpression	\"CLocalPath
>1818	Argument	levInfo
>1819	Identifier	levInfo
>1820	Argument	tagSystem
>1821	Identifier	tagSystem
>1822	Callee	Trace
>1823	Identifier	Trace
>1824	ExpressionStatement	 
>1825	CallExpression	NewDirectory . Append ( FileName )
>1826	ArgumentList	FileName
>1827	Argument	FileName
>1828	Identifier	FileName
>1829	Callee	NewDirectory . Append
>1830	MemberAccess	NewDirectory . Append
>1831	Identifier	Append
>1832	Identifier	NewDirectory
>1833	ExpressionStatement	 
>1834	AssignmentExpr	FileName = FindData . cFileName
>1835	MemberAccess	FindData . cFileName
>1836	Identifier	cFileName
>1837	Identifier	FindData
>1838	Identifier	FileName
>1839	ExpressionStatement	 
>1840	AssignmentExpr	NewDirectory = CurrentRoot
>1841	Identifier	CurrentRoot
>1842	Identifier	NewDirectory
>1843	IfStatement	if ( hFile == INVALID_HANDLE_VALUE )
>1844	ReturnStatement	 
>1845	Condition	 
>1846	EqualityExpression	hFile == INVALID_HANDLE_VALUE
>1847	Identifier	INVALID_HANDLE_VALUE
>1848	Identifier	hFile
>1849	ExpressionStatement	 
>1850	AssignmentExpr	hFile = FindFirstFile ( ( const char * ) NewRoot . GetBuffer ( ) , & FindData )
>1851	CallExpression	FindFirstFile ( ( const char * ) NewRoot . GetBuffer ( ) , & FindData )
>1852	ArgumentList	( const char * ) NewRoot . GetBuffer ( )
>1853	Argument	& FindData
>1854	UnaryOp	& FindData
>1855	Identifier	FindData
>1856	UnaryOperator	&
>1857	Argument	( const char * ) NewRoot . GetBuffer ( )
>1858	CastExpression	( const char * ) NewRoot . GetBuffer ( )
>1859	CallExpression	NewRoot . GetBuffer ( )
>1860	ArgumentList	 
>1861	Callee	NewRoot . GetBuffer
>1862	MemberAccess	NewRoot . GetBuffer
>1863	Identifier	GetBuffer
>1864	Identifier	NewRoot
>1865	CastTarget	const char *
>1866	Callee	FindFirstFile
>1867	Identifier	FindFirstFile
>1868	Identifier	hFile
>1869	IdentifierDeclStatement	 
>1870	IdentifierDecl	hFile
>1871	Identifier	hFile
>1872	IdentifierDeclType	HANDLE
>1873	ExpressionStatement	 
>1874	CallExpression	ZeroMemory ( & FindData , sizeof ( WIN32_FIND_DATA ) )
>1875	ArgumentList	& FindData
>1876	Argument	sizeof ( WIN32_FIND_DATA )
>1877	SizeofExpr	sizeof ( WIN32_FIND_DATA )
>1878	SizeofOperand	WIN32_FIND_DATA
>1879	Sizeof	sizeof
>1880	Argument	& FindData
>1881	UnaryOp	& FindData
>1882	Identifier	FindData
>1883	UnaryOperator	&
>1884	Callee	ZeroMemory
>1885	Identifier	ZeroMemory
>1886	IdentifierDeclStatement	 
>1887	IdentifierDecl	FindData
>1888	Identifier	FindData
>1889	IdentifierDeclType	WIN32_FIND_DATA
>1890	ExpressionStatement	 
>1891	CallExpression	NewRoot . Append ( \"*.*\" )
>1892	ArgumentList	\"*.*\"
>1893	Argument	\"*.*\"
>1894	PrimaryExpression	\"*.*\"
>1895	Callee	NewRoot . Append
>1896	MemberAccess	NewRoot . Append
>1897	Identifier	Append
>1898	Identifier	NewRoot
>1899	IdentifierDeclStatement	 
>1900	IdentifierDecl	NewRoot ( CurrentRoot )
>1901	Identifier	CurrentRoot
>1902	Identifier	NewRoot
>1903	IdentifierDeclType	CString
>1904	IdentifierDeclStatement	 
>1905	IdentifierDecl	FileName
>1906	Identifier	FileName
>1907	IdentifierDeclType	CString
>1908	IdentifierDeclStatement	 
>1909	IdentifierDecl	NewDirectory
>1910	Identifier	NewDirectory
>1911	IdentifierDeclType	CString
>1912	ExpressionStatement	 
>1913	CallExpression	closedir ( hFile )
>1914	ArgumentList	hFile
>1915	Argument	hFile
>1916	Identifier	hFile
>1917	Callee	closedir
>1918	Identifier	closedir
>1919	WhileStatement	while ( ( c_file = readdir ( hFile ) ) )
>1920	CompoundStatement	 
>1921	IfStatement	if ( ( FileName != g_strPathParent ) && ( FileName != g_strPathCurrent ) )
>1922	CompoundStatement	 
>1923	IfStatement	if ( ! base_chdir ( NewDirectory . GetBuffer ( ) ) )
>1924	ElseStatement	else
>1925	IfStatement	if ( Files )
>1926	ExpressionStatement	 
>1927	AssignmentExpr	Target += NewDirectory
>1928	Identifier	NewDirectory
>1929	Identifier	Target
>1930	Condition	 
>1931	Identifier	Files
>1932	CompoundStatement	 
>1933	IfStatement	if ( Recursive )
>1934	ExpressionStatement	 
>1935	CallExpression	PopulatePathContents ( Recursive , Files , Directories , Target , NewDirectory )
>1936	ArgumentList	Recursive
>1937	Argument	NewDirectory
>1938	Identifier	NewDirectory
>1939	Argument	Target
>1940	Identifier	Target
>1941	Argument	Directories
>1942	Identifier	Directories
>1943	Argument	Files
>1944	Identifier	Files
>1945	Argument	Recursive
>1946	Identifier	Recursive
>1947	Callee	PopulatePathContents
>1948	Identifier	PopulatePathContents
>1949	Condition	 
>1950	Identifier	Recursive
>1951	IfStatement	if ( Directories )
>1952	ExpressionStatement	 
>1953	AssignmentExpr	Target += NewDirectory
>1954	Identifier	NewDirectory
>1955	Identifier	Target
>1956	Condition	 
>1957	Identifier	Directories
>1958	ExpressionStatement	 
>1959	CallExpression	Terminate ( NewDirectory )
>1960	ArgumentList	NewDirectory
>1961	Argument	NewDirectory
>1962	Identifier	NewDirectory
>1963	Callee	Terminate
>1964	Identifier	Terminate
>1965	Condition	 
>1966	UnaryOp	! base_chdir ( NewDirectory . GetBuffer ( ) )
>1967	CallExpression	base_chdir ( NewDirectory . GetBuffer ( ) )
>1968	ArgumentList	NewDirectory . GetBuffer ( )
>1969	Argument	NewDirectory . GetBuffer ( )
>1970	CallExpression	NewDirectory . GetBuffer ( )
>1971	ArgumentList	 
>1972	Callee	NewDirectory . GetBuffer
>1973	MemberAccess	NewDirectory . GetBuffer
>1974	Identifier	GetBuffer
>1975	Identifier	NewDirectory
>1976	Callee	base_chdir
>1977	Identifier	base_chdir
>1978	UnaryOperator	!
>1979	Condition	 
>1980	AndExpression	( FileName != g_strPathParent ) && ( FileName != g_strPathCurrent )
>1981	EqualityExpression	FileName != g_strPathCurrent
>1982	Identifier	g_strPathCurrent
>1983	Identifier	FileName
>1984	EqualityExpression	FileName != g_strPathParent
>1985	Identifier	g_strPathParent
>1986	Identifier	FileName
>1987	ExpressionStatement	 
>1988	CallExpression	NewDirectory . Append ( FileName )
>1989	ArgumentList	FileName
>1990	Argument	FileName
>1991	Identifier	FileName
>1992	Callee	NewDirectory . Append
>1993	MemberAccess	NewDirectory . Append
>1994	Identifier	Append
>1995	Identifier	NewDirectory
>1996	IdentifierDeclStatement	 
>1997	IdentifierDecl	FileName ( c_file -> d_name )
>1998	PtrMemberAccess	c_file -> d_name
>1999	Identifier	d_name
>2000	Identifier	c_file
>2001	Identifier	FileName
>2002	IdentifierDeclType	CString
>2003	IdentifierDeclStatement	 
>2004	IdentifierDecl	NewDirectory = CurrentRoot
>2005	AssignmentExpr	NewDirectory = CurrentRoot
>2006	Identifier	CurrentRoot
>2007	Identifier	CurrentRoot
>2008	Identifier	NewDirectory
>2009	IdentifierDeclType	CString
>2010	Condition	 
>2011	AssignmentExpr	c_file = readdir ( hFile )
>2012	CallExpression	readdir ( hFile )
>2013	ArgumentList	hFile
>2014	Argument	hFile
>2015	Identifier	hFile
>2016	Callee	readdir
>2017	Identifier	readdir
>2018	Identifier	c_file
>2019	ExpressionStatement	 
>2020	AssignmentExpr	hFile = opendir ( ( const char * ) CurrentRoot . GetBuffer ( ) )
>2021	CallExpression	opendir ( ( const char * ) CurrentRoot . GetBuffer ( ) )
>2022	ArgumentList	( const char * ) CurrentRoot . GetBuffer ( )
>2023	Argument	( const char * ) CurrentRoot . GetBuffer ( )
>2024	CastExpression	( const char * ) CurrentRoot . GetBuffer ( )
>2025	CallExpression	CurrentRoot . GetBuffer ( )
>2026	ArgumentList	 
>2027	Callee	CurrentRoot . GetBuffer
>2028	MemberAccess	CurrentRoot . GetBuffer
>2029	Identifier	GetBuffer
>2030	Identifier	CurrentRoot
>2031	CastTarget	const char *
>2032	Callee	opendir
>2033	Identifier	opendir
>2034	Identifier	hFile
>2035	IdentifierDeclStatement	 
>2036	IdentifierDecl	* c_file
>2037	Identifier	c_file
>2038	IdentifierDeclType	struct dirent *
>2039	IdentifierDeclStatement	 
>2040	IdentifierDecl	* hFile
>2041	Identifier	hFile
>2042	IdentifierDeclType	DIR *
>2043	ExpressionStatement	 
>2044	CallExpression	CurrentRoot . TerminateWith ( PATH_SEPARATOR )
>2045	ArgumentList	PATH_SEPARATOR
>2046	Argument	PATH_SEPARATOR
>2047	Identifier	PATH_SEPARATOR
>2048	Callee	CurrentRoot . TerminateWith
>2049	MemberAccess	CurrentRoot . TerminateWith
>2050	Identifier	TerminateWith
>2051	Identifier	CurrentRoot
>2052	IfStatement	if ( ! Root . GetLength ( ) )
>2053	ExpressionStatement	 
>2054	AssignmentExpr	CurrentRoot = CurrentDirectory
>2055	Identifier	CurrentDirectory
>2056	Identifier	CurrentRoot
>2057	Condition	 
>2058	UnaryOp	! Root . GetLength ( )
>2059	CallExpression	Root . GetLength ( )
>2060	ArgumentList	 
>2061	Callee	Root . GetLength
>2062	MemberAccess	Root . GetLength
>2063	Identifier	GetLength
>2064	Identifier	Root
>2065	UnaryOperator	!
>2066	IdentifierDeclStatement	 
>2067	IdentifierDecl	CurrentRoot ( Root )
>2068	Identifier	Root
>2069	Identifier	CurrentRoot
>2070	IdentifierDeclType	CString
>2071	IdentifierDeclStatement	 
>2072	IdentifierDecl	CurrentDirectory = GetCurrentDirectory ( )
>2073	AssignmentExpr	CurrentDirectory = GetCurrentDirectory ( )
>2074	CallExpression	GetCurrentDirectory ( )
>2075	ArgumentList	 
>2076	Callee	GetCurrentDirectory
>2077	Identifier	GetCurrentDirectory
>2078	Identifier	CurrentDirectory
>2079	Identifier	CurrentDirectory
>2080	IdentifierDeclType	CString
>2118	FunctionDef	CLocalPath 
>2119	ParameterList	bool Recursive
>2120	Parameter	 
>2121	Identifier	Recursive
>2122	ParameterType	bool
>2123	ReturnType	CVector < CString >
>2124	CompoundStatement	 
>2125	ReturnStatement	 
>2126	Identifier	Result
>2127	ExpressionStatement	 
>2128	CallExpression	PopulatePathContents ( Recursive , true , true , Result , m_Path )
>2129	ArgumentList	Recursive
>2130	Argument	m_Path
>2131	Identifier	m_Path
>2132	Argument	Result
>2133	Identifier	Result
>2134	Argument	true
>2135	Identifier	true
>2136	Argument	true
>2137	Identifier	true
>2138	Argument	Recursive
>2139	Identifier	Recursive
>2140	Callee	PopulatePathContents
>2141	Identifier	PopulatePathContents
>2142	IdentifierDeclStatement	 
>2143	IdentifierDecl	Result
>2144	Identifier	Result
>2145	IdentifierDeclType	CVector < CString >
>2153	FunctionDef	CLocalPath 
>2154	ParameterList	bool Recursive
>2155	Parameter	 
>2156	Identifier	Recursive
>2157	ParameterType	bool
>2158	ReturnType	CVector < CString >
>2159	CompoundStatement	 
>2160	ReturnStatement	 
>2161	Identifier	Result
>2162	ExpressionStatement	 
>2163	CallExpression	PopulatePathContents ( Recursive , true , false , Result , m_Path )
>2164	ArgumentList	Recursive
>2165	Argument	m_Path
>2166	Identifier	m_Path
>2167	Argument	Result
>2168	Identifier	Result
>2169	Argument	false
>2170	Identifier	false
>2171	Argument	true
>2172	Identifier	true
>2173	Argument	Recursive
>2174	Identifier	Recursive
>2175	Callee	PopulatePathContents
>2176	Identifier	PopulatePathContents
>2177	IdentifierDeclStatement	 
>2178	IdentifierDecl	Result
>2179	Identifier	Result
>2180	IdentifierDeclType	CVector < CString >
>2189	FunctionDef	CLocalPath 
>2190	ParameterList	bool Recursive
>2191	Parameter	 
>2192	Identifier	Recursive
>2193	ParameterType	bool
>2194	ReturnType	CVector < CString >
>2195	CompoundStatement	 
>2196	ReturnStatement	 
>2197	Identifier	Result
>2198	ExpressionStatement	 
>2199	CallExpression	PopulatePathContents ( Recursive , false , true , Result , m_Path )
>2200	ArgumentList	Recursive
>2201	Argument	m_Path
>2202	Identifier	m_Path
>2203	Argument	Result
>2204	Identifier	Result
>2205	Argument	true
>2206	Identifier	true
>2207	Argument	false
>2208	Identifier	false
>2209	Argument	Recursive
>2210	Identifier	Recursive
>2211	Callee	PopulatePathContents
>2212	Identifier	PopulatePathContents
>2213	IdentifierDeclStatement	 
>2214	IdentifierDecl	Result
>2215	Identifier	Result
>2216	IdentifierDeclType	CVector < CString >
>2225	FunctionDef	CLocalPath 
>2226	ParameterList	const CString & Source , const CString & Target
>2227	Parameter	 
>2228	Identifier	Target
>2229	ParameterType	const CString &
>2230	Parameter	 
>2231	Identifier	Source
>2232	ParameterType	const CString &
>2233	ReturnType	bool
>2234	CompoundStatement	 
>2235	ReturnStatement	 
>2236	Identifier	false
>2237	IfStatement	if ( ! rename ( Source . GetBuffer ( ) , Target . GetBuffer ( ) ) )
>2238	ElseStatement	else
>2239	ReturnStatement	 
>2240	Identifier	false
>2241	ReturnStatement	 
>2242	Identifier	true
>2243	Condition	 
>2244	UnaryOp	! rename ( Source . GetBuffer ( ) , Target . GetBuffer ( ) )
>2245	CallExpression	rename ( Source . GetBuffer ( ) , Target . GetBuffer ( ) )
>2246	ArgumentList	Source . GetBuffer ( )
>2247	Argument	Target . GetBuffer ( )
>2248	CallExpression	Target . GetBuffer ( )
>2249	ArgumentList	 
>2250	Callee	Target . GetBuffer
>2251	MemberAccess	Target . GetBuffer
>2252	Identifier	GetBuffer
>2253	Identifier	Target
>2254	Argument	Source . GetBuffer ( )
>2255	CallExpression	Source . GetBuffer ( )
>2256	ArgumentList	 
>2257	Callee	Source . GetBuffer
>2258	MemberAccess	Source . GetBuffer
>2259	Identifier	GetBuffer
>2260	Identifier	Source
>2261	Callee	rename
>2262	Identifier	rename
>2263	UnaryOperator	!
>2274	FunctionDef	CLocalPath 
>2275	ParameterList	const CString & String
>2276	Parameter	 
>2277	Identifier	String
>2278	ParameterType	const CString &
>2279	ReturnType	CString
>2280	CompoundStatement	 
>2281	ReturnStatement	 
>2282	Identifier	TmpString
>2283	ExpressionStatement	 
>2284	CallExpression	TmpString . Delete ( 0 , sPos + 1 )
>2285	ArgumentList	0
>2286	Argument	sPos + 1
>2287	AdditiveExpression	sPos + 1
>2288	PrimaryExpression	1
>2289	Identifier	sPos
>2290	Argument	0
>2291	PrimaryExpression	0
>2292	Callee	TmpString . Delete
>2293	MemberAccess	TmpString . Delete
>2294	Identifier	Delete
>2295	Identifier	TmpString
>2296	IfStatement	if ( sPos == - 1 )
>2297	ReturnStatement	 
>2298	Identifier	TmpString
>2299	Condition	 
>2300	EqualityExpression	sPos == - 1
>2301	UnaryOp	- 1
>2302	PrimaryExpression	1
>2303	UnaryOperator	-
>2304	Identifier	sPos
>2305	IdentifierDeclStatement	 
>2306	IdentifierDecl	sPos = TmpString . InvPos ( PATH_SEPARATOR )
>2307	AssignmentExpr	sPos = TmpString . InvPos ( PATH_SEPARATOR )
>2308	CallExpression	TmpString . InvPos ( PATH_SEPARATOR )
>2309	ArgumentList	PATH_SEPARATOR
>2310	Argument	PATH_SEPARATOR
>2311	Identifier	PATH_SEPARATOR
>2312	Callee	TmpString . InvPos
>2313	MemberAccess	TmpString . InvPos
>2314	Identifier	InvPos
>2315	Identifier	TmpString
>2316	Identifier	sPos
>2317	Identifier	sPos
>2318	IdentifierDeclType	int
>2319	ExpressionStatement	 
>2320	CallExpression	TmpString . Trim ( PATH_SEPARATOR )
>2321	ArgumentList	PATH_SEPARATOR
>2322	Argument	PATH_SEPARATOR
>2323	Identifier	PATH_SEPARATOR
>2324	Callee	TmpString . Trim
>2325	MemberAccess	TmpString . Trim
>2326	Identifier	Trim
>2327	Identifier	TmpString
>2328	IdentifierDeclStatement	 
>2329	IdentifierDecl	TmpString ( String )
>2330	Identifier	String
>2331	Identifier	TmpString
>2332	IdentifierDeclType	CString
>2341	FunctionDef	CLocalPath 
>2342	ParameterList	const CString & Filename , CString * pResult
>2343	Parameter	 
>2344	Identifier	pResult
>2345	ParameterType	CString *
>2346	Parameter	 
>2347	Identifier	Filename
>2348	ParameterType	const CString &
>2349	ReturnType	bool
>2350	CompoundStatement	 
>2351	ReturnStatement	 
>2352	Identifier	true
>2353	ExpressionStatement	 
>2354	CallExpression	pResult -> SetLength ( )
>2355	ArgumentList	 
>2356	Callee	pResult -> SetLength
>2357	PtrMemberAccess	pResult -> SetLength
>2358	Identifier	SetLength
>2359	Identifier	pResult
>2360	IfStatement	if ( nPathLength > nBufferLength )
>2361	ReturnStatement	 
>2362	Identifier	false
>2363	Condition	 
>2364	RelationalExpression	nPathLength > nBufferLength
>2365	Identifier	nBufferLength
>2366	Identifier	nPathLength
>2367	IfStatement	if ( nPathLength > nBufferLength )
>2368	CompoundStatement	 
>2369	ExpressionStatement	 
>2370	CallExpression	GetFullPathNameA ( Filename . GetBuffer ( ) , nBufferLength , pResult -> GetData ( ) , & lpFilePart )
>2371	ArgumentList	Filename . GetBuffer ( )
>2372	Argument	& lpFilePart
>2373	UnaryOp	& lpFilePart
>2374	Identifier	lpFilePart
>2375	UnaryOperator	&
>2376	Argument	pResult -> GetData ( )
>2377	CallExpression	pResult -> GetData ( )
>2378	ArgumentList	 
>2379	Callee	pResult -> GetData
>2380	PtrMemberAccess	pResult -> GetData
>2381	Identifier	GetData
>2382	Identifier	pResult
>2383	Argument	nBufferLength
>2384	Identifier	nBufferLength
>2385	Argument	Filename . GetBuffer ( )
>2386	CallExpression	Filename . GetBuffer ( )
>2387	ArgumentList	 
>2388	Callee	Filename . GetBuffer
>2389	MemberAccess	Filename . GetBuffer
>2390	Identifier	GetBuffer
>2391	Identifier	Filename
>2392	Callee	GetFullPathNameA
>2393	Identifier	GetFullPathNameA
>2394	Statement	 
>2395	Statement	 
>2396	Statement	 
>2397	ExpressionStatement	 
>2398	AssignmentExpr	nBufferLength = pResult -> GetSize ( ) - 1
>2399	AdditiveExpression	pResult -> GetSize ( ) - 1
>2400	PrimaryExpression	1
>2401	CallExpression	pResult -> GetSize ( )
>2402	ArgumentList	 
>2403	Callee	pResult -> GetSize
>2404	PtrMemberAccess	pResult -> GetSize
>2405	Identifier	GetSize
>2406	Identifier	pResult
>2407	Identifier	nBufferLength
>2408	ExpressionStatement	 
>2409	CallExpression	pResult -> SetSize ( nPathLength + 1 )
>2410	ArgumentList	nPathLength + 1
>2411	Argument	nPathLength + 1
>2412	AdditiveExpression	nPathLength + 1
>2413	PrimaryExpression	1
>2414	Identifier	nPathLength
>2415	Callee	pResult -> SetSize
>2416	PtrMemberAccess	pResult -> SetSize
>2417	Identifier	SetSize
>2418	Identifier	pResult
>2419	Condition	 
>2420	RelationalExpression	nPathLength > nBufferLength
>2421	Identifier	nBufferLength
>2422	Identifier	nPathLength
>2423	ExpressionStatement	 
>2424	CallExpression	GetFullPathNameA ( Filename . GetBuffer ( ) , nBufferLength , pResult -> GetData ( ) , & lpFilePart )
>2425	ArgumentList	Filename . GetBuffer ( )
>2426	Argument	& lpFilePart
>2427	UnaryOp	& lpFilePart
>2428	Identifier	lpFilePart
>2429	UnaryOperator	&
>2430	Argument	pResult -> GetData ( )
>2431	CallExpression	pResult -> GetData ( )
>2432	ArgumentList	 
>2433	Callee	pResult -> GetData
>2434	PtrMemberAccess	pResult -> GetData
>2435	Identifier	GetData
>2436	Identifier	pResult
>2437	Argument	nBufferLength
>2438	Identifier	nBufferLength
>2439	Argument	Filename . GetBuffer ( )
>2440	CallExpression	Filename . GetBuffer ( )
>2441	ArgumentList	 
>2442	Callee	Filename . GetBuffer
>2443	MemberAccess	Filename . GetBuffer
>2444	Identifier	GetBuffer
>2445	Identifier	Filename
>2446	Callee	GetFullPathNameA
>2447	Identifier	GetFullPathNameA
>2448	Statement	 
>2449	Statement	 
>2450	Statement	 
>2451	Statement	 
>2452	IdentifierDeclStatement	 
>2453	IdentifierDecl	* lpFilePart = NULL
>2454	AssignmentExpr	* lpFilePart = NULL
>2455	Identifier	NULL
>2456	Identifier	NULL
>2457	Identifier	lpFilePart
>2458	IdentifierDeclType	char *
>2459	IdentifierDeclStatement	 
>2460	IdentifierDecl	nBufferLength = pResult -> GetSize ( ) - 1
>2461	AssignmentExpr	nBufferLength = pResult -> GetSize ( ) - 1
>2462	AdditiveExpression	pResult -> GetSize ( ) - 1
>2463	PrimaryExpression	1
>2464	CallExpression	pResult -> GetSize ( )
>2465	ArgumentList	 
>2466	Callee	pResult -> GetSize
>2467	PtrMemberAccess	pResult -> GetSize
>2468	Identifier	GetSize
>2469	Identifier	pResult
>2470	Identifier	nBufferLength
>2471	Identifier	nBufferLength
>2472	IdentifierDeclType	DWORD
>2473	ExpressionStatement	 
>2474	CallExpression	pResult -> SetSize ( MAXPATHLEN , false )
>2475	ArgumentList	MAXPATHLEN
>2476	Argument	false
>2477	Identifier	false
>2478	Argument	MAXPATHLEN
>2479	Identifier	MAXPATHLEN
>2480	Callee	pResult -> SetSize
>2481	PtrMemberAccess	pResult -> SetSize
>2482	Identifier	SetSize
>2483	Identifier	pResult
>2484	IfStatement	if ( ! pResult )
>2485	ReturnStatement	 
>2486	Identifier	false
>2487	Condition	 
>2488	UnaryOp	! pResult
>2489	Identifier	pResult
>2490	UnaryOperator	!
>2508	FunctionDef	CLocalPath 
>2509	ParameterList	const CString & Base , const CString & Relative
>2510	Parameter	 
>2511	Identifier	Relative
>2512	ParameterType	const CString &
>2513	Parameter	 
>2514	Identifier	Base
>2515	ParameterType	const CString &
>2516	ReturnType	CString
>2517	CompoundStatement	 
>2518	ReturnStatement	 
>2519	Identifier	CurrentDirectory
>2520	ExpressionStatement	 
>2521	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalPath
>2522	ArgumentList	tagSystem
>2523	Argument	\"CLocalPath
>2524	Expression	\"CLocalPath
>2525	Expression	Base . GetBuffer ( ) , Relative . GetBuffer ( ) , CurrentDirectory . GetBuffer ( )
>2526	Expression	Relative . GetBuffer ( ) , CurrentDirectory . GetBuffer ( )
>2527	CallExpression	CurrentDirectory . GetBuffer ( )
>2528	ArgumentList	 
>2529	Callee	CurrentDirectory . GetBuffer
>2530	MemberAccess	CurrentDirectory . GetBuffer
>2531	Identifier	GetBuffer
>2532	Identifier	CurrentDirectory
>2533	CallExpression	Relative . GetBuffer ( )
>2534	ArgumentList	 
>2535	Callee	Relative . GetBuffer
>2536	MemberAccess	Relative . GetBuffer
>2537	Identifier	GetBuffer
>2538	Identifier	Relative
>2539	CallExpression	Base . GetBuffer ( )
>2540	ArgumentList	 
>2541	Callee	Base . GetBuffer
>2542	MemberAccess	Base . GetBuffer
>2543	Identifier	GetBuffer
>2544	Identifier	Base
>2545	PrimaryExpression	\"CLocalPath
>2546	Argument	levInfo
>2547	Identifier	levInfo
>2548	Argument	tagSystem
>2549	Identifier	tagSystem
>2550	Callee	Trace
>2551	Identifier	Trace
>2552	ForStatement	for ( int i = CurrentDirectory . GetLength ( ) - 1 ; i > 0 ; i -- )
>2553	CompoundStatement	 
>2554	IfStatement	if ( CurrentDirectory [ i ] == '/' && CurrentDirectory [ i - 1 ] == '/' )
>2555	CompoundStatement	 
>2556	ExpressionStatement	 
>2557	CallExpression	CurrentDirectory . Delete ( i , 1 )
>2558	ArgumentList	i
>2559	Argument	1
>2560	PrimaryExpression	1
>2561	Argument	i
>2562	Identifier	i
>2563	Callee	CurrentDirectory . Delete
>2564	MemberAccess	CurrentDirectory . Delete
>2565	Identifier	Delete
>2566	Identifier	CurrentDirectory
>2567	Condition	 
>2568	AndExpression	CurrentDirectory [ i ] == '/' && CurrentDirectory [ i - 1 ] == '/'
>2569	EqualityExpression	CurrentDirectory [ i - 1 ] == '/'
>2570	PrimaryExpression	'/'
>2571	ArrayIndexing	CurrentDirectory [ i - 1 ]
>2572	AdditiveExpression	i - 1
>2573	PrimaryExpression	1
>2574	Identifier	i
>2575	Identifier	CurrentDirectory
>2576	EqualityExpression	CurrentDirectory [ i ] == '/'
>2577	PrimaryExpression	'/'
>2578	ArrayIndexing	CurrentDirectory [ i ]
>2579	Identifier	i
>2580	Identifier	CurrentDirectory
>2581	IncDecOp	 
>2582	IncDec	--
>2583	Identifier	i
>2584	Condition	 
>2585	RelationalExpression	i > 0
>2586	PrimaryExpression	0
>2587	Identifier	i
>2588	ForInit	 
>2589	IdentifierDeclStatement	int i = CurrentDirectory . GetLength ( ) - 1 ;
>2590	IdentifierDecl	i = CurrentDirectory . GetLength ( ) - 1
>2591	AssignmentExpr	i = CurrentDirectory . GetLength ( ) - 1
>2592	AdditiveExpression	CurrentDirectory . GetLength ( ) - 1
>2593	PrimaryExpression	1
>2594	CallExpression	CurrentDirectory . GetLength ( )
>2595	ArgumentList	 
>2596	Callee	CurrentDirectory . GetLength
>2597	MemberAccess	CurrentDirectory . GetLength
>2598	Identifier	GetLength
>2599	Identifier	CurrentDirectory
>2600	Identifier	i
>2601	Identifier	i
>2602	IdentifierDeclType	int
>2603	WhileStatement	while ( 1 )
>2604	CompoundStatement	 
>2605	ExpressionStatement	 
>2606	CallExpression	CurrentDirectory . Delete ( eltPos , dotPos + ( __SlashDotDotSlash . GetLength ( ) - 1 ) - eltPos )
>2607	ArgumentList	eltPos
>2608	Argument	dotPos + ( __SlashDotDotSlash . GetLength ( ) - 1 ) - eltPos
>2609	AdditiveExpression	dotPos + ( __SlashDotDotSlash . GetLength ( ) - 1 ) - eltPos
>2610	AdditiveExpression	( __SlashDotDotSlash . GetLength ( ) - 1 ) - eltPos
>2611	Identifier	eltPos
>2612	AdditiveExpression	__SlashDotDotSlash . GetLength ( ) - 1
>2613	PrimaryExpression	1
>2614	CallExpression	__SlashDotDotSlash . GetLength ( )
>2615	ArgumentList	 
>2616	Callee	__SlashDotDotSlash . GetLength
>2617	MemberAccess	__SlashDotDotSlash . GetLength
>2618	Identifier	GetLength
>2619	Identifier	__SlashDotDotSlash
>2620	Identifier	dotPos
>2621	Argument	eltPos
>2622	Identifier	eltPos
>2623	Callee	CurrentDirectory . Delete
>2624	MemberAccess	CurrentDirectory . Delete
>2625	Identifier	Delete
>2626	Identifier	CurrentDirectory
>2627	ForStatement	for ( ; eltPos >= 0 ; eltPos -- )
>2628	IfStatement	if ( CurrentDirectory [ eltPos ] == '/' )
>2629	BreakStatement	 
>2630	Condition	 
>2631	EqualityExpression	CurrentDirectory [ eltPos ] == '/'
>2632	PrimaryExpression	'/'
>2633	ArrayIndexing	CurrentDirectory [ eltPos ]
>2634	Identifier	eltPos
>2635	Identifier	CurrentDirectory
>2636	IncDecOp	 
>2637	IncDec	--
>2638	Identifier	eltPos
>2639	Condition	 
>2640	RelationalExpression	eltPos >= 0
>2641	PrimaryExpression	0
>2642	Identifier	eltPos
>2643	IdentifierDeclStatement	 
>2644	IdentifierDecl	eltPos = ( dotPos ? dotPos - 1 
>2645	AssignmentExpr	eltPos = ( dotPos ? dotPos - 1 
>2646	ConditionalExpression	dotPos ? dotPos - 1 
>2647	PrimaryExpression	0
>2648	AdditiveExpression	dotPos - 1
>2649	PrimaryExpression	1
>2650	Identifier	dotPos
>2651	Condition	dotPos
>2652	Identifier	dotPos
>2653	Identifier	eltPos
>2654	Identifier	eltPos
>2655	IdentifierDeclType	int
>2656	IfStatement	if ( dotPos == - 1 )
>2657	BreakStatement	 
>2658	Condition	 
>2659	EqualityExpression	dotPos == - 1
>2660	UnaryOp	- 1
>2661	PrimaryExpression	1
>2662	UnaryOperator	-
>2663	Identifier	dotPos
>2664	IdentifierDeclStatement	 
>2665	IdentifierDecl	dotPos = CurrentDirectory . Pos ( __SlashDotDotSlash )
>2666	AssignmentExpr	dotPos = CurrentDirectory . Pos ( __SlashDotDotSlash )
>2667	CallExpression	CurrentDirectory . Pos ( __SlashDotDotSlash )
>2668	ArgumentList	__SlashDotDotSlash
>2669	Argument	__SlashDotDotSlash
>2670	Identifier	__SlashDotDotSlash
>2671	Callee	CurrentDirectory . Pos
>2672	MemberAccess	CurrentDirectory . Pos
>2673	Identifier	Pos
>2674	Identifier	CurrentDirectory
>2675	Identifier	dotPos
>2676	Identifier	dotPos
>2677	IdentifierDeclType	int
>2678	Condition	 
>2679	PrimaryExpression	1
>2680	ExpressionStatement	 
>2681	AssignmentExpr	CurrentDirectory += LocalDirectory
>2682	Identifier	LocalDirectory
>2683	Identifier	CurrentDirectory
>2684	IfStatement	if ( LocalDirectory . StartsWith ( '/' ) )
>2685	CompoundStatement	 
>2686	ExpressionStatement	 
>2687	CallExpression	CurrentDirectory . Empty ( )
>2688	ArgumentList	 
>2689	Callee	CurrentDirectory . Empty
>2690	MemberAccess	CurrentDirectory . Empty
>2691	Identifier	Empty
>2692	Identifier	CurrentDirectory
>2693	Condition	 
>2694	CallExpression	LocalDirectory . StartsWith ( '/' )
>2695	ArgumentList	'/'
>2696	Argument	'/'
>2697	PrimaryExpression	'/'
>2698	Callee	LocalDirectory . StartsWith
>2699	MemberAccess	LocalDirectory . StartsWith
>2700	Identifier	StartsWith
>2701	Identifier	LocalDirectory
>2702	IfStatement	if ( CLocalPath 
>2703	CompoundStatement	 
>2704	ExpressionStatement	 
>2705	CallExpression	CurrentDirectory . Empty ( )
>2706	ArgumentList	 
>2707	Callee	CurrentDirectory . Empty
>2708	MemberAccess	CurrentDirectory . Empty
>2709	Identifier	Empty
>2710	Identifier	CurrentDirectory
>2711	Condition	 
>2712	CallExpression	CLocalPath 
>2713	ArgumentList	LocalDirectory
>2714	Argument	LocalDirectory
>2715	Identifier	LocalDirectory
>2716	Callee	CLocalPath 
>2717	Identifier	CLocalPath 
>2718	IfStatement	if ( sFlag )
>2719	CompoundStatement	 
>2720	ExpressionStatement	 
>2721	AssignmentExpr	CurrentDirectory += '/'
>2722	PrimaryExpression	'/'
>2723	Identifier	CurrentDirectory
>2724	Condition	 
>2725	Identifier	sFlag
>2726	IfStatement	if ( CurrentDirectory . GetLength ( ) && ( CurrentDirectory [ CurrentDirectory . GetLength ( ) - 1 ] == '/' ) )
>2727	ElseStatement	else
>2728	IfStatement	if ( LocalDirectory . GetLength ( ) && ( LocalDirectory [ 0 ] == '/' ) )
>2729	CompoundStatement	 
>2730	ExpressionStatement	 
>2731	AssignmentExpr	sFlag = false
>2732	Identifier	false
>2733	Identifier	sFlag
>2734	Condition	 
>2735	AndExpression	LocalDirectory . GetLength ( ) && ( LocalDirectory [ 0 ] == '/' )
>2736	EqualityExpression	LocalDirectory [ 0 ] == '/'
>2737	PrimaryExpression	'/'
>2738	ArrayIndexing	LocalDirectory [ 0 ]
>2739	PrimaryExpression	0
>2740	Identifier	LocalDirectory
>2741	CallExpression	LocalDirectory . GetLength ( )
>2742	ArgumentList	 
>2743	Callee	LocalDirectory . GetLength
>2744	MemberAccess	LocalDirectory . GetLength
>2745	Identifier	GetLength
>2746	Identifier	LocalDirectory
>2747	CompoundStatement	 
>2748	ExpressionStatement	 
>2749	AssignmentExpr	sFlag = false
>2750	Identifier	false
>2751	Identifier	sFlag
>2752	Condition	 
>2753	AndExpression	CurrentDirectory . GetLength ( ) && ( CurrentDirectory [ CurrentDirectory . GetLength ( ) - 1 ] == '/' )
>2754	EqualityExpression	CurrentDirectory [ CurrentDirectory . GetLength ( ) - 1 ] == '/'
>2755	PrimaryExpression	'/'
>2756	ArrayIndexing	CurrentDirectory [ CurrentDirectory . GetLength ( ) - 1 ]
>2757	AdditiveExpression	CurrentDirectory . GetLength ( ) - 1
>2758	PrimaryExpression	1
>2759	CallExpression	CurrentDirectory . GetLength ( )
>2760	ArgumentList	 
>2761	Callee	CurrentDirectory . GetLength
>2762	MemberAccess	CurrentDirectory . GetLength
>2763	Identifier	GetLength
>2764	Identifier	CurrentDirectory
>2765	Identifier	CurrentDirectory
>2766	CallExpression	CurrentDirectory . GetLength ( )
>2767	ArgumentList	 
>2768	Callee	CurrentDirectory . GetLength
>2769	MemberAccess	CurrentDirectory . GetLength
>2770	Identifier	GetLength
>2771	Identifier	CurrentDirectory
>2772	IdentifierDeclStatement	 
>2773	IdentifierDecl	sFlag = true
>2774	AssignmentExpr	sFlag = true
>2775	Identifier	true
>2776	Identifier	true
>2777	Identifier	sFlag
>2778	IdentifierDeclType	bool
>2779	WhileStatement	while ( LocalDirectory . StartsWith ( __DotDotSlash ) )
>2780	CompoundStatement	 
>2781	IfStatement	if ( bPos >= 0 )
>2782	ElseStatement	else
>2783	BreakStatement	 
>2784	CompoundStatement	 
>2785	WhileStatement	while ( LocalDirectory . StartsWith ( __DotSlash ) )
>2786	ExpressionStatement	 
>2787	CallExpression	LocalDirectory . Delete ( 0 , __DotSlash . GetLength ( ) )
>2788	ArgumentList	0
>2789	Argument	__DotSlash . GetLength ( )
>2790	CallExpression	__DotSlash . GetLength ( )
>2791	ArgumentList	 
>2792	Callee	__DotSlash . GetLength
>2793	MemberAccess	__DotSlash . GetLength
>2794	Identifier	GetLength
>2795	Identifier	__DotSlash
>2796	Argument	0
>2797	PrimaryExpression	0
>2798	Callee	LocalDirectory . Delete
>2799	MemberAccess	LocalDirectory . Delete
>2800	Identifier	Delete
>2801	Identifier	LocalDirectory
>2802	Condition	 
>2803	CallExpression	LocalDirectory . StartsWith ( __DotSlash )
>2804	ArgumentList	__DotSlash
>2805	Argument	__DotSlash
>2806	Identifier	__DotSlash
>2807	Callee	LocalDirectory . StartsWith
>2808	MemberAccess	LocalDirectory . StartsWith
>2809	Identifier	StartsWith
>2810	Identifier	LocalDirectory
>2811	ExpressionStatement	 
>2812	CallExpression	LocalDirectory . Delete ( 0 , __DotDotSlash . GetLength ( ) )
>2813	ArgumentList	0
>2814	Argument	__DotDotSlash . GetLength ( )
>2815	CallExpression	__DotDotSlash . GetLength ( )
>2816	ArgumentList	 
>2817	Callee	__DotDotSlash . GetLength
>2818	MemberAccess	__DotDotSlash . GetLength
>2819	Identifier	GetLength
>2820	Identifier	__DotDotSlash
>2821	Argument	0
>2822	PrimaryExpression	0
>2823	Callee	LocalDirectory . Delete
>2824	MemberAccess	LocalDirectory . Delete
>2825	Identifier	Delete
>2826	Identifier	LocalDirectory
>2827	ExpressionStatement	 
>2828	CallExpression	CurrentDirectory . Delete ( bPos , CurrentDirectory . GetLength ( ) )
>2829	ArgumentList	bPos
>2830	Argument	CurrentDirectory . GetLength ( )
>2831	CallExpression	CurrentDirectory . GetLength ( )
>2832	ArgumentList	 
>2833	Callee	CurrentDirectory . GetLength
>2834	MemberAccess	CurrentDirectory . GetLength
>2835	Identifier	GetLength
>2836	Identifier	CurrentDirectory
>2837	Argument	bPos
>2838	Identifier	bPos
>2839	Callee	CurrentDirectory . Delete
>2840	MemberAccess	CurrentDirectory . Delete
>2841	Identifier	Delete
>2842	Identifier	CurrentDirectory
>2843	Condition	 
>2844	RelationalExpression	bPos >= 0
>2845	PrimaryExpression	0
>2846	Identifier	bPos
>2847	IdentifierDeclStatement	 
>2848	IdentifierDecl	bPos = CurrentDirectory . InvPos ( '/' )
>2849	AssignmentExpr	bPos = CurrentDirectory . InvPos ( '/' )
>2850	CallExpression	CurrentDirectory . InvPos ( '/' )
>2851	ArgumentList	'/'
>2852	Argument	'/'
>2853	PrimaryExpression	'/'
>2854	Callee	CurrentDirectory . InvPos
>2855	MemberAccess	CurrentDirectory . InvPos
>2856	Identifier	InvPos
>2857	Identifier	CurrentDirectory
>2858	Identifier	bPos
>2859	Identifier	bPos
>2860	IdentifierDeclType	int
>2861	Condition	 
>2862	CallExpression	LocalDirectory . StartsWith ( __DotDotSlash )
>2863	ArgumentList	__DotDotSlash
>2864	Argument	__DotDotSlash
>2865	Identifier	__DotDotSlash
>2866	Callee	LocalDirectory . StartsWith
>2867	MemberAccess	LocalDirectory . StartsWith
>2868	Identifier	StartsWith
>2869	Identifier	LocalDirectory
>2870	WhileStatement	while ( LocalDirectory . StartsWith ( __DotSlash ) )
>2871	CompoundStatement	 
>2872	ExpressionStatement	 
>2873	CallExpression	LocalDirectory . Delete ( 0 , __DotSlash . GetLength ( ) )
>2874	ArgumentList	0
>2875	Argument	__DotSlash . GetLength ( )
>2876	CallExpression	__DotSlash . GetLength ( )
>2877	ArgumentList	 
>2878	Callee	__DotSlash . GetLength
>2879	MemberAccess	__DotSlash . GetLength
>2880	Identifier	GetLength
>2881	Identifier	__DotSlash
>2882	Argument	0
>2883	PrimaryExpression	0
>2884	Callee	LocalDirectory . Delete
>2885	MemberAccess	LocalDirectory . Delete
>2886	Identifier	Delete
>2887	Identifier	LocalDirectory
>2888	Condition	 
>2889	CallExpression	LocalDirectory . StartsWith ( __DotSlash )
>2890	ArgumentList	__DotSlash
>2891	Argument	__DotSlash
>2892	Identifier	__DotSlash
>2893	Callee	LocalDirectory . StartsWith
>2894	MemberAccess	LocalDirectory . StartsWith
>2895	Identifier	StartsWith
>2896	Identifier	LocalDirectory
>2897	WhileStatement	while ( CurrentDirectory . StartsWith ( __DotSlash ) )
>2898	CompoundStatement	 
>2899	ExpressionStatement	 
>2900	CallExpression	CurrentDirectory . Delete ( 0 , __DotSlash . GetLength ( ) )
>2901	ArgumentList	0
>2902	Argument	__DotSlash . GetLength ( )
>2903	CallExpression	__DotSlash . GetLength ( )
>2904	ArgumentList	 
>2905	Callee	__DotSlash . GetLength
>2906	MemberAccess	__DotSlash . GetLength
>2907	Identifier	GetLength
>2908	Identifier	__DotSlash
>2909	Argument	0
>2910	PrimaryExpression	0
>2911	Callee	CurrentDirectory . Delete
>2912	MemberAccess	CurrentDirectory . Delete
>2913	Identifier	Delete
>2914	Identifier	CurrentDirectory
>2915	Condition	 
>2916	CallExpression	CurrentDirectory . StartsWith ( __DotSlash )
>2917	ArgumentList	__DotSlash
>2918	Argument	__DotSlash
>2919	Identifier	__DotSlash
>2920	Callee	CurrentDirectory . StartsWith
>2921	MemberAccess	CurrentDirectory . StartsWith
>2922	Identifier	StartsWith
>2923	Identifier	CurrentDirectory
>2924	IfStatement	if ( CurrentDirectory . GetLength ( ) && ( CurrentDirectory [ CurrentDirectory . GetLength ( ) - 1 ] == '/' ) )
>2925	CompoundStatement	 
>2926	ExpressionStatement	 
>2927	CallExpression	CurrentDirectory . Delete ( CurrentDirectory . GetLength ( ) - 1 , CurrentDirectory . GetLength ( ) )
>2928	ArgumentList	CurrentDirectory . GetLength ( ) - 1
>2929	Argument	CurrentDirectory . GetLength ( )
>2930	CallExpression	CurrentDirectory . GetLength ( )
>2931	ArgumentList	 
>2932	Callee	CurrentDirectory . GetLength
>2933	MemberAccess	CurrentDirectory . GetLength
>2934	Identifier	GetLength
>2935	Identifier	CurrentDirectory
>2936	Argument	CurrentDirectory . GetLength ( ) - 1
>2937	AdditiveExpression	CurrentDirectory . GetLength ( ) - 1
>2938	PrimaryExpression	1
>2939	CallExpression	CurrentDirectory . GetLength ( )
>2940	ArgumentList	 
>2941	Callee	CurrentDirectory . GetLength
>2942	MemberAccess	CurrentDirectory . GetLength
>2943	Identifier	GetLength
>2944	Identifier	CurrentDirectory
>2945	Callee	CurrentDirectory . Delete
>2946	MemberAccess	CurrentDirectory . Delete
>2947	Identifier	Delete
>2948	Identifier	CurrentDirectory
>2949	Condition	 
>2950	AndExpression	CurrentDirectory . GetLength ( ) && ( CurrentDirectory [ CurrentDirectory . GetLength ( ) - 1 ] == '/' )
>2951	EqualityExpression	CurrentDirectory [ CurrentDirectory . GetLength ( ) - 1 ] == '/'
>2952	PrimaryExpression	'/'
>2953	ArrayIndexing	CurrentDirectory [ CurrentDirectory . GetLength ( ) - 1 ]
>2954	AdditiveExpression	CurrentDirectory . GetLength ( ) - 1
>2955	PrimaryExpression	1
>2956	CallExpression	CurrentDirectory . GetLength ( )
>2957	ArgumentList	 
>2958	Callee	CurrentDirectory . GetLength
>2959	MemberAccess	CurrentDirectory . GetLength
>2960	Identifier	GetLength
>2961	Identifier	CurrentDirectory
>2962	Identifier	CurrentDirectory
>2963	CallExpression	CurrentDirectory . GetLength ( )
>2964	ArgumentList	 
>2965	Callee	CurrentDirectory . GetLength
>2966	MemberAccess	CurrentDirectory . GetLength
>2967	Identifier	GetLength
>2968	Identifier	CurrentDirectory
>2969	ExpressionStatement	 
>2970	CallExpression	CurrentDirectory . Replace ( '\\' , '/' )
>2971	ArgumentList	'\\'
>2972	Argument	'/'
>2973	PrimaryExpression	'/'
>2974	Argument	'\\'
>2975	PrimaryExpression	'\\'
>2976	Callee	CurrentDirectory . Replace
>2977	MemberAccess	CurrentDirectory . Replace
>2978	Identifier	Replace
>2979	Identifier	CurrentDirectory
>2980	IdentifierDeclStatement	 
>2981	IdentifierDecl	CurrentDirectory = Base
>2982	AssignmentExpr	CurrentDirectory = Base
>2983	Identifier	Base
>2984	Identifier	Base
>2985	Identifier	CurrentDirectory
>2986	IdentifierDeclType	CString
>2987	IdentifierDeclStatement	 
>2988	IdentifierDecl	__SlashDotDotSlash ( \"/../\" )
>2989	PrimaryExpression	\"/../\"
>2990	Identifier	__SlashDotDotSlash
>2991	IdentifierDeclType	const CString
>2992	Statement	 
>2993	IdentifierDeclStatement	 
>2994	IdentifierDecl	__DotDotSlash ( \"../\" )
>2995	PrimaryExpression	\"../\"
>2996	Identifier	__DotDotSlash
>2997	IdentifierDeclType	const CString
>2998	Statement	 
>2999	IdentifierDeclStatement	 
>3000	IdentifierDecl	__DotSlash ( \"./\" )
>3001	PrimaryExpression	\"./\"
>3002	Identifier	__DotSlash
>3003	IdentifierDeclType	const CString
>3004	Statement	 
>3005	ExpressionStatement	 
>3006	CallExpression	LocalDirectory . Replace ( '\\' , '/' )
>3007	ArgumentList	'\\'
>3008	Argument	'/'
>3009	PrimaryExpression	'/'
>3010	Argument	'\\'
>3011	PrimaryExpression	'\\'
>3012	Callee	LocalDirectory . Replace
>3013	MemberAccess	LocalDirectory . Replace
>3014	Identifier	Replace
>3015	Identifier	LocalDirectory
>3016	IdentifierDeclStatement	 
>3017	IdentifierDecl	LocalDirectory ( Relative )
>3018	Identifier	Relative
>3019	Identifier	LocalDirectory
>3020	IdentifierDeclType	CString
<3=9,8,4
<4=5
<5=7,6
<9=17,10
<10=11
<11=15,12
<12=13
<13=14
<15=16
<17=18
<18=20,19
<26=31,27
<27=28
<28=30,29
<31=32
<32=33
<33=35,34
<35=37,36
<44=49,45
<45=46
<46=48,47
<49=54,50
<50=51
<51=53,52
<54=55
<55=59,56
<56=57
<57=58
<59=60
<67=69,68
<69=70
<70=71
<71=73,72
<78=83,79
<79=80
<80=82,81
<83=164,158,152,146,140,120,88,84
<84=85
<85=87,86
<88=89
<89=118,90
<90=116,114,91
<91=92
<92=113,93
<93=107,94
<94=101,95
<95=97,96
<97=98
<98=100,99
<101=103,102
<103=104
<104=106,105
<107=109,108
<109=110
<110=112,111
<114=115
<116=117
<118=119
<120=121
<121=138,122
<122=136,134,123
<123=124
<124=133,125
<125=132,126
<126=128,127
<128=129
<129=131,130
<134=135
<136=137
<138=139
<140=141
<141=145,142
<142=144,143
<146=147
<147=151,148
<148=150,149
<152=153
<153=157,154
<154=156,155
<158=159
<159=163,160
<160=162,161
<164=165
<165=169,166
<166=168,167
<192=200,193
<193=197,194
<194=196,195
<197=199,198
<200=292,274,267,263,259,248,237,233,201
<201=202
<202=231,203
<203=229,227,204
<204=205
<205=226,206
<206=220,207
<207=214,208
<208=210,209
<210=211
<211=213,212
<214=216,215
<216=217
<217=219,218
<220=222,221
<222=223
<223=225,224
<227=228
<229=230
<231=232
<233=234
<234=236,235
<237=238
<238=244,239
<239=242,240
<240=241
<242=243
<244=245
<245=247,246
<248=249
<249=255,250
<250=253,251
<251=252
<253=254
<255=256
<256=258,257
<259=260
<260=262,261
<263=264
<264=266,265
<267=268
<268=272,269
<269=270
<270=271
<272=273
<274=275
<275=290,276
<276=288,286,277
<277=278
<278=285,279
<279=281,280
<281=282
<282=284,283
<286=287
<288=289
<290=291
<292=305,301,293
<293=294
<294=295
<295=300,296
<296=298,297
<298=299
<301=302
<302=304,303
<305=306
<306=308,307
<308=309
<309=311,310
<327=333,332,328
<328=329
<329=331,330
<333=433,432,431,417,413,412,411,410,334
<334=335
<335=404,353,336
<336=337
<337=347,338
<338=339
<339=343,340
<340=341
<341=342
<343=344
<344=346,345
<347=348
<348=350,349
<350=352,351
<353=403,402,401,392,388,387,386,385,363,354
<354=355
<355=359,356
<356=357
<357=358
<359=360
<360=362,361
<363=364
<364=373,365
<365=367,366
<367=368
<368=370,369
<370=372,371
<373=374
<374=380,375
<375=377,376
<377=379,378
<380=382,381
<382=384,383
<388=389
<389=391,390
<392=393
<393=400,399,394
<394=398,395
<395=397,396
<404=405
<405=407,406
<407=409,408
<413=414
<414=416,415
<417=418
<418=430,429,419
<419=428,420
<420=422,421
<422=424,423
<424=425
<425=427,426
<447=453,452,448
<448=449
<449=451,450
<453=944,933,922,883,865,852,806,650,600,593,586,548,531,530,529,528,521,510,509,508,507,493,486,454
<454=455
<455=484,456
<456=482,480,457
<457=458
<458=479,459
<459=473,460
<460=467,461
<461=463,462
<463=464
<464=466,465
<467=469,468
<469=470
<470=472,471
<473=475,474
<475=476
<476=478,477
<480=481
<482=483
<484=485
<486=487
<487=491,488
<488=489
<489=490
<491=492
<493=500,494
<494=495
<495=499,496
<496=498,497
<500=505,501
<501=502
<502=504,503
<505=506
<510=511
<511=520,512
<512=519,513
<513=515,514
<515=516
<516=518,517
<521=522
<522=527,526,523
<523=525,524
<531=541,532
<532=533
<533=534
<534=540,535
<535=539,536
<536=538,537
<541=542
<542=544,543
<544=545
<545=547,546
<548=584,549
<549=573,550
<550=555,551
<551=552
<552=554,553
<555=556
<556=565,557
<557=559,558
<559=560
<560=562,561
<562=564,563
<565=572,566
<566=568,567
<568=569
<569=571,570
<573=574
<574=583,575
<575=577,576
<577=581,578
<578=579
<579=580
<581=582
<584=585
<586=587
<587=589,588
<589=590
<590=592,591
<593=594
<594=598,595
<595=596
<596=597
<598=599
<600=619,601
<601=613,602
<602=603
<603=609,604
<604=607,605
<605=606
<607=608
<609=610
<610=612,611
<613=614
<614=618,615
<615=617,616
<619=620
<620=642,621
<621=632,622
<622=624,623
<624=626,625
<626=627
<627=629,628
<629=631,630
<632=634,633
<634=636,635
<636=637
<637=639,638
<639=641,640
<642=644,643
<644=646,645
<646=647
<647=649,648
<650=781,651
<651=771,755,751,742,714,707,663,652
<652=653
<653=659,654
<654=657,655
<655=656
<657=658
<659=660
<660=662,661
<663=680,664
<664=665
<665=676,666
<666=667
<667=668
<668=670,669
<670=672,671
<672=673
<673=675,674
<676=677
<677=679,678
<680=681
<681=699,682
<682=698,683
<683=685,684
<685=686
<686=688,687
<688=697,689
<689=691,690
<691=693,692
<693=694
<694=696,695
<699=701,700
<701=703,702
<703=704
<704=706,705
<707=708
<708=712,709
<709=710
<710=711
<712=713
<714=724,715
<715=716
<716=720,717
<717=718
<718=719
<720=721
<721=723,722
<724=725
<725=741,726
<726=735,727
<727=733,728
<728=729
<729=730
<730=732,731
<733=734
<735=737,736
<737=738
<738=740,739
<742=743
<743=749,744
<744=745
<745=746
<746=748,747
<749=750
<751=752
<752=754,753
<755=756
<756=769,757
<757=758
<758=759
<759=763,760
<760=762,761
<763=767,764
<764=765
<765=766
<767=768
<769=770
<771=772
<772=780,779,773
<773=778,774
<774=776,775
<776=777
<781=782
<782=791,783
<783=790,784
<784=786,785
<786=787
<787=789,788
<791=800,792
<792=794,793
<794=795
<795=797,796
<797=799,798
<800=802,801
<802=803
<803=805,804
<806=845,815,807
<807=808
<808=809
<809=811,810
<811=812
<812=814,813
<815=832,816
<816=817
<817=828,818
<818=819
<819=820
<820=822,821
<822=824,823
<824=825
<825=827,826
<828=829
<829=831,830
<832=833
<833=844,834
<834=843,835
<835=837,836
<837=839,838
<839=840
<840=842,841
<845=846
<846=848,847
<848=849
<849=851,850
<852=853
<853=863,854
<854=861,859,855
<855=856
<856=858,857
<859=860
<861=862
<863=864
<865=866
<866=881,867
<867=879,877,868
<868=869
<869=876,870
<870=872,871
<872=873
<873=875,874
<877=878
<879=880
<881=882
<883=911,884
<884=896,885
<885=886
<886=892,887
<887=890,888
<888=889
<890=891
<892=893
<893=895,894
<896=897
<897=910,898
<898=909,899
<899=907,900
<900=901
<901=902
<902=906,903
<903=905,904
<907=908
<911=912
<912=914,913
<914=918,915
<915=916
<916=917
<918=919
<919=921,920
<922=923
<923=929,924
<924=927,925
<925=926
<927=928
<929=930
<930=932,931
<933=934
<934=940,935
<935=938,936
<936=937
<938=939
<940=941
<941=943,942
<944=945
<945=947,946
<986=989,988,987
<989=1193,1189,1182,1140,1129,1087,1047,1038,1003,992,990
<990=991
<992=993
<993=1001,994
<994=999,997,995
<995=996
<997=998
<999=1000
<1001=1002
<1003=1036,1004
<1004=1032,1025,1007,1005
<1005=1006
<1007=1008
<1008=1023,1009
<1009=1021,1019,1010
<1010=1011
<1011=1018,1012
<1012=1014,1013
<1014=1015
<1015=1017,1016
<1019=1020
<1021=1022
<1023=1024
<1025=1026
<1026=1030,1027
<1027=1028
<1028=1029
<1030=1031
<1032=1033
<1033=1035,1034
<1036=1037
<1038=1039
<1039=1046,1040
<1040=1044,1041
<1041=1042
<1042=1043
<1044=1045
<1047=1080,1048
<1048=1076,1069,1051,1049
<1049=1050
<1051=1052
<1052=1067,1053
<1053=1065,1063,1054
<1054=1055
<1055=1062,1056
<1056=1058,1057
<1058=1059
<1059=1061,1060
<1063=1064
<1065=1066
<1067=1068
<1069=1070
<1070=1074,1071
<1071=1072
<1072=1073
<1074=1075
<1076=1077
<1077=1079,1078
<1080=1081
<1081=1085,1082
<1082=1083
<1083=1084
<1085=1086
<1087=1127,1088
<1088=1123,1116,1098,1091,1089
<1089=1090
<1091=1092
<1092=1096,1093
<1093=1094
<1094=1095
<1096=1097
<1098=1099
<1099=1114,1100
<1100=1112,1110,1101
<1101=1102
<1102=1109,1103
<1103=1105,1104
<1105=1106
<1106=1108,1107
<1110=1111
<1112=1113
<1114=1115
<1116=1117
<1117=1121,1118
<1118=1119
<1119=1120
<1121=1122
<1123=1124
<1124=1126,1125
<1127=1128
<1129=1130
<1130=1139,1131
<1131=1137,1132
<1132=1135,1133
<1133=1134
<1135=1136
<1137=1138
<1140=1173,1141
<1141=1169,1162,1144,1142
<1142=1143
<1144=1145
<1145=1160,1146
<1146=1158,1156,1147
<1147=1148
<1148=1155,1149
<1149=1151,1150
<1151=1152
<1152=1154,1153
<1156=1157
<1158=1159
<1160=1161
<1162=1163
<1163=1167,1164
<1164=1165
<1165=1166
<1167=1168
<1169=1170
<1170=1172,1171
<1173=1174
<1174=1180,1175
<1175=1178,1176
<1176=1177
<1178=1179
<1180=1181
<1182=1183
<1183=1188,1187,1184
<1184=1186,1185
<1189=1190
<1190=1192,1191
<1193=1194
<1194=1199,1198,1195
<1195=1197,1196
<1215=1221,1220,1216
<1216=1217
<1217=1219,1218
<1221=1409,1222,1224,1252,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1405
<1222=1223
<1224=1225
<1225=1250,1226
<1226=1248,1246,1227
<1227=1228
<1228=1245,1229
<1229=1239,1230
<1230=1234,1231
<1231=1233,1232
<1234=1237,1236,1235
<1237=1238
<1239=1241,1240
<1241=1242
<1242=1244,1243
<1246=1247
<1248=1249
<1250=1251
<1252=1321,1253
<1253=1316,1298,1297,1296,1295,1294,1293,1292,1291,1290,1289,1288,1287,1286,1285,1284,1283,1282,1281,1280,1279,1278,1277,1276,1275,1274,1273,1272,1271,1270,1269,1268,1267,1266,1265,1264,1263,1262,1261,1260,1259,1258,1257,1256,1255,1254
<1298=1299
<1299=1312,1300
<1300=1303,1301
<1301=1302
<1303=1304
<1304=1306,1305
<1306=1308,1307
<1308=1309
<1309=1311,1310
<1312=1313
<1313=1315,1314
<1316=1317
<1317=1320,1319,1318
<1321=1322
<1322=1342,1323
<1323=1336,1324
<1324=1326,1325
<1326=1335,1327
<1327=1329,1328
<1329=1331,1330
<1331=1332
<1332=1334,1333
<1336=1338,1337
<1338=1339
<1339=1341,1340
<1342=1344,1343
<1390=1391
<1391=1403,1392
<1392=1399,1397,1393
<1393=1394
<1394=1396,1395
<1397=1398
<1399=1400
<1400=1402,1401
<1403=1404
<1405=1406
<1406=1408,1407
<1409=1419,1410
<1410=1411
<1411=1417,1412
<1412=1413
<1413=1414
<1414=1416,1415
<1417=1418
<1419=1420
<1420=1426,1421
<1421=1423,1422
<1423=1425,1424
<1426=1428,1427
<1428=1430,1429
<1430=1431
<1431=1433,1432
<1452=1455,1454,1453
<1455=1486,1472,1458,1456
<1456=1457
<1458=1459
<1459=1470,1460
<1460=1461
<1461=1462
<1462=1469,1463
<1463=1465,1464
<1465=1466
<1466=1468,1467
<1470=1471
<1472=1473
<1473=1485,1484,1474
<1474=1483,1475
<1475=1481,1476
<1476=1479,1477
<1477=1478
<1479=1480
<1481=1482
<1486=1487
<1487=1495,1494,1488
<1488=1493,1489
<1489=1491,1490
<1491=1492
<1506=1512,1511,1507
<1507=1508
<1508=1510,1509
<1512=1520,1513
<1513=1514
<1514=1516,1515
<1516=1517
<1517=1519,1518
<1520=1521
<1521=1524,1523,1522
<1531=1540,1539,1532
<1532=1536,1533
<1533=1535,1534
<1536=1538,1537
<1540=1668,1658,1654,1650,1643,1642,1641,1640,1633,1622,1621,1620,1619,1558,1543,1541
<1541=1542
<1543=1556,1544
<1544=1545
<1545=1554,1546
<1546=1547
<1547=1548
<1548=1550,1549
<1550=1551
<1551=1553,1552
<1554=1555
<1556=1557
<1558=1611,1604,1563,1559
<1559=1560
<1560=1562,1561
<1563=1588,1564
<1564=1565
<1565=1572,1566
<1566=1568,1567
<1568=1569
<1569=1571,1570
<1572=1573
<1573=1577,1574
<1574=1576,1575
<1577=1586,1578
<1578=1579
<1579=1580
<1580=1582,1581
<1582=1583
<1583=1585,1584
<1586=1587
<1588=1589
<1589=1593,1590
<1590=1592,1591
<1593=1602,1594
<1594=1595
<1595=1596
<1596=1598,1597
<1598=1599
<1599=1601,1600
<1602=1603
<1604=1605
<1605=1609,1606
<1606=1607
<1607=1608
<1609=1610
<1611=1612
<1612=1618,1613
<1613=1617,1614
<1614=1616,1615
<1622=1623
<1623=1632,1624
<1624=1631,1625
<1625=1627,1626
<1627=1628
<1628=1630,1629
<1633=1634
<1634=1639,1638,1635
<1635=1637,1636
<1643=1644
<1644=1649,1648,1645
<1645=1647,1646
<1650=1651
<1651=1653,1652
<1654=1655
<1655=1657,1656
<1658=1666,1659
<1659=1660
<1660=1665,1661
<1661=1663,1662
<1663=1664
<1666=1667
<1668=1669
<1669=1671,1670
<1692=1710,1709,1693
<1693=1706,1703,1700,1697,1694
<1694=1696,1695
<1697=1699,1698
<1700=1702,1701
<1703=1705,1704
<1706=1708,1707
<1710=2071,2066,2052,2043,2039,2035,2019,1919,1912,1908,1904,1899,1890,1886,1873,1869,1849,1843,1730,1723,1711
<1711=1712
<1712=1721,1713
<1713=1714
<1714=1715
<1715=1717,1716
<1717=1718
<1718=1720,1719
<1721=1722
<1723=1724
<1724=1728,1725
<1725=1726
<1726=1727
<1728=1729
<1730=1744,1731
<1731=1732
<1732=1734,1733
<1734=1742,1735
<1735=1740,1736
<1736=1737
<1737=1739,1738
<1740=1741
<1742=1743
<1744=1839,1833,1824,1806,1745
<1745=1798,1746
<1746=1747
<1747=1792,1758,1748
<1748=1749
<1749=1750
<1750=1756,1751
<1751=1752
<1752=1753
<1753=1755,1754
<1756=1757
<1758=1785,1777,1759
<1759=1775,1760
<1760=1761
<1761=1773,1762
<1762=1771,1769,1767,1765,1763
<1763=1764
<1765=1766
<1767=1768
<1769=1770
<1771=1772
<1773=1774
<1775=1776
<1777=1783,1778
<1778=1779
<1779=1780
<1780=1782,1781
<1783=1784
<1785=1786
<1786=1790,1787
<1787=1788
<1788=1789
<1790=1791
<1792=1793
<1793=1795,1794
<1795=1797,1796
<1798=1799
<1799=1803,1800
<1800=1802,1801
<1803=1805,1804
<1806=1807
<1807=1822,1808
<1808=1820,1818,1809
<1809=1810
<1810=1817,1811
<1811=1813,1812
<1813=1814
<1814=1816,1815
<1818=1819
<1820=1821
<1822=1823
<1824=1825
<1825=1829,1826
<1826=1827
<1827=1828
<1829=1830
<1830=1832,1831
<1833=1834
<1834=1838,1835
<1835=1837,1836
<1839=1840
<1840=1842,1841
<1843=1845,1844
<1845=1846
<1846=1848,1847
<1849=1850
<1850=1868,1851
<1851=1866,1852
<1852=1857,1853
<1853=1854
<1854=1856,1855
<1857=1858
<1858=1865,1859
<1859=1861,1860
<1861=1862
<1862=1864,1863
<1866=1867
<1869=1870
<1870=1872,1871
<1873=1874
<1874=1884,1875
<1875=1880,1876
<1876=1877
<1877=1879,1878
<1880=1881
<1881=1883,1882
<1884=1885
<1886=1887
<1887=1889,1888
<1890=1891
<1891=1895,1892
<1892=1893
<1893=1894
<1895=1896
<1896=1898,1897
<1899=1900
<1900=1903,1902,1901
<1904=1905
<1905=1907,1906
<1908=1909
<1909=1911,1910
<1912=1913
<1913=1917,1914
<1914=1915
<1915=1916
<1917=1918
<1919=2010,1920
<1920=2003,1996,1987,1921
<1921=1979,1922
<1922=1923
<1923=1965,1932,1924
<1924=1925
<1925=1930,1926
<1926=1927
<1927=1929,1928
<1930=1931
<1932=1958,1951,1933
<1933=1949,1934
<1934=1935
<1935=1947,1936
<1936=1945,1943,1941,1939,1937
<1937=1938
<1939=1940
<1941=1942
<1943=1944
<1945=1946
<1947=1948
<1949=1950
<1951=1956,1952
<1952=1953
<1953=1955,1954
<1956=1957
<1958=1959
<1959=1963,1960
<1960=1961
<1961=1962
<1963=1964
<1965=1966
<1966=1978,1967
<1967=1976,1968
<1968=1969
<1969=1970
<1970=1972,1971
<1972=1973
<1973=1975,1974
<1976=1977
<1979=1980
<1980=1984,1981
<1981=1983,1982
<1984=1986,1985
<1987=1988
<1988=1992,1989
<1989=1990
<1990=1991
<1992=1993
<1993=1995,1994
<1996=1997
<1997=2002,2001,1998
<1998=2000,1999
<2003=2004
<2004=2009,2008,2005
<2005=2007,2006
<2010=2011
<2011=2018,2012
<2012=2016,2013
<2013=2014
<2014=2015
<2016=2017
<2019=2020
<2020=2034,2021
<2021=2032,2022
<2022=2023
<2023=2024
<2024=2031,2025
<2025=2027,2026
<2027=2028
<2028=2030,2029
<2032=2033
<2035=2036
<2036=2038,2037
<2039=2040
<2040=2042,2041
<2043=2044
<2044=2048,2045
<2045=2046
<2046=2047
<2048=2049
<2049=2051,2050
<2052=2057,2053
<2053=2054
<2054=2056,2055
<2057=2058
<2058=2065,2059
<2059=2061,2060
<2061=2062
<2062=2064,2063
<2066=2067
<2067=2070,2069,2068
<2071=2072
<2072=2080,2079,2073
<2073=2078,2074
<2074=2076,2075
<2076=2077
<2118=2124,2123,2119
<2119=2120
<2120=2122,2121
<2124=2142,2127,2125
<2125=2126
<2127=2128
<2128=2140,2129
<2129=2138,2136,2134,2132,2130
<2130=2131
<2132=2133
<2134=2135
<2136=2137
<2138=2139
<2140=2141
<2142=2143
<2143=2145,2144
<2153=2159,2158,2154
<2154=2155
<2155=2157,2156
<2159=2177,2162,2160
<2160=2161
<2162=2163
<2163=2175,2164
<2164=2173,2171,2169,2167,2165
<2165=2166
<2167=2168
<2169=2170
<2171=2172
<2173=2174
<2175=2176
<2177=2178
<2178=2180,2179
<2189=2195,2194,2190
<2190=2191
<2191=2193,2192
<2195=2213,2198,2196
<2196=2197
<2198=2199
<2199=2211,2200
<2200=2209,2207,2205,2203,2201
<2201=2202
<2203=2204
<2205=2206
<2207=2208
<2209=2210
<2211=2212
<2213=2214
<2214=2216,2215
<2225=2234,2233,2226
<2226=2230,2227
<2227=2229,2228
<2230=2232,2231
<2234=2237,2235
<2235=2236
<2237=2243,2241,2238
<2238=2239
<2239=2240
<2241=2242
<2243=2244
<2244=2263,2245
<2245=2261,2246
<2246=2254,2247
<2247=2248
<2248=2250,2249
<2250=2251
<2251=2253,2252
<2254=2255
<2255=2257,2256
<2257=2258
<2258=2260,2259
<2261=2262
<2274=2280,2279,2275
<2275=2276
<2276=2278,2277
<2280=2328,2319,2305,2296,2283,2281
<2281=2282
<2283=2284
<2284=2292,2285
<2285=2290,2286
<2286=2287
<2287=2289,2288
<2290=2291
<2292=2293
<2293=2295,2294
<2296=2299,2297
<2297=2298
<2299=2300
<2300=2304,2301
<2301=2303,2302
<2305=2306
<2306=2318,2317,2307
<2307=2316,2308
<2308=2312,2309
<2309=2310
<2310=2311
<2312=2313
<2313=2315,2314
<2319=2320
<2320=2324,2321
<2321=2322
<2322=2323
<2324=2325
<2325=2327,2326
<2328=2329
<2329=2332,2331,2330
<2341=2350,2349,2342
<2342=2346,2343
<2343=2345,2344
<2346=2348,2347
<2350=2484,2473,2459,2452,2451,2450,2449,2448,2423,2367,2360,2353,2351
<2351=2352
<2353=2354
<2354=2356,2355
<2356=2357
<2357=2359,2358
<2360=2363,2361
<2361=2362
<2363=2364
<2364=2366,2365
<2367=2419,2368
<2368=2408,2397,2396,2395,2394,2369
<2369=2370
<2370=2392,2371
<2371=2385,2383,2376,2372
<2372=2373
<2373=2375,2374
<2376=2377
<2377=2379,2378
<2379=2380
<2380=2382,2381
<2383=2384
<2385=2386
<2386=2388,2387
<2388=2389
<2389=2391,2390
<2392=2393
<2397=2398
<2398=2407,2399
<2399=2401,2400
<2401=2403,2402
<2403=2404
<2404=2406,2405
<2408=2409
<2409=2415,2410
<2410=2411
<2411=2412
<2412=2414,2413
<2415=2416
<2416=2418,2417
<2419=2420
<2420=2422,2421
<2423=2424
<2424=2446,2425
<2425=2439,2437,2430,2426
<2426=2427
<2427=2429,2428
<2430=2431
<2431=2433,2432
<2433=2434
<2434=2436,2435
<2437=2438
<2439=2440
<2440=2442,2441
<2442=2443
<2443=2445,2444
<2446=2447
<2452=2453
<2453=2458,2457,2454
<2454=2456,2455
<2459=2460
<2460=2472,2471,2461
<2461=2470,2462
<2462=2464,2463
<2464=2466,2465
<2466=2467
<2467=2469,2468
<2473=2474
<2474=2480,2475
<2475=2478,2476
<2476=2477
<2478=2479
<2480=2481
<2481=2483,2482
<2484=2487,2485
<2485=2486
<2487=2488
<2488=2490,2489
<2508=2517,2516,2509
<2509=2513,2510
<2510=2512,2511
<2513=2515,2514
<2517=3016,3005,3004,2999,2998,2993,2992,2987,2980,2969,2924,2897,2870,2779,2772,2726,2718,2702,2684,2680,2603,2552,2520,2518
<2518=2519
<2520=2521
<2521=2550,2522
<2522=2548,2546,2523
<2523=2524
<2524=2545,2525
<2525=2539,2526
<2526=2533,2527
<2527=2529,2528
<2529=2530
<2530=2532,2531
<2533=2535,2534
<2535=2536
<2536=2538,2537
<2539=2541,2540
<2541=2542
<2542=2544,2543
<2546=2547
<2548=2549
<2550=2551
<2552=2588,2584,2581,2553
<2553=2554
<2554=2567,2555
<2555=2556
<2556=2557
<2557=2563,2558
<2558=2561,2559
<2559=2560
<2561=2562
<2563=2564
<2564=2566,2565
<2567=2568
<2568=2576,2569
<2569=2571,2570
<2571=2575,2572
<2572=2574,2573
<2576=2578,2577
<2578=2580,2579
<2581=2583,2582
<2584=2585
<2585=2587,2586
<2588=2589
<2589=2590
<2590=2602,2601,2591
<2591=2600,2592
<2592=2594,2593
<2594=2596,2595
<2596=2597
<2597=2599,2598
<2603=2678,2604
<2604=2664,2656,2643,2627,2605
<2605=2606
<2606=2623,2607
<2607=2621,2608
<2608=2609
<2609=2620,2610
<2610=2612,2611
<2612=2614,2613
<2614=2616,2615
<2616=2617
<2617=2619,2618
<2621=2622
<2623=2624
<2624=2626,2625
<2627=2639,2636,2628
<2628=2630,2629
<2630=2631
<2631=2633,2632
<2633=2635,2634
<2636=2638,2637
<2639=2640
<2640=2642,2641
<2643=2644
<2644=2655,2654,2645
<2645=2653,2646
<2646=2651,2648,2647
<2648=2650,2649
<2651=2652
<2656=2658,2657
<2658=2659
<2659=2663,2660
<2660=2662,2661
<2664=2665
<2665=2677,2676,2666
<2666=2675,2667
<2667=2671,2668
<2668=2669
<2669=2670
<2671=2672
<2672=2674,2673
<2678=2679
<2680=2681
<2681=2683,2682
<2684=2693,2685
<2685=2686
<2686=2687
<2687=2689,2688
<2689=2690
<2690=2692,2691
<2693=2694
<2694=2698,2695
<2695=2696
<2696=2697
<2698=2699
<2699=2701,2700
<2702=2711,2703
<2703=2704
<2704=2705
<2705=2707,2706
<2707=2708
<2708=2710,2709
<2711=2712
<2712=2716,2713
<2713=2714
<2714=2715
<2716=2717
<2718=2724,2719
<2719=2720
<2720=2721
<2721=2723,2722
<2724=2725
<2726=2752,2747,2727
<2727=2728
<2728=2734,2729
<2729=2730
<2730=2731
<2731=2733,2732
<2734=2735
<2735=2741,2736
<2736=2738,2737
<2738=2740,2739
<2741=2743,2742
<2743=2744
<2744=2746,2745
<2747=2748
<2748=2749
<2749=2751,2750
<2752=2753
<2753=2766,2754
<2754=2756,2755
<2756=2765,2757
<2757=2759,2758
<2759=2761,2760
<2761=2762
<2762=2764,2763
<2766=2768,2767
<2768=2769
<2769=2771,2770
<2772=2773
<2773=2778,2777,2774
<2774=2776,2775
<2779=2861,2780
<2780=2847,2781
<2781=2843,2784,2782
<2782=2783
<2784=2827,2811,2785
<2785=2802,2786
<2786=2787
<2787=2798,2788
<2788=2796,2789
<2789=2790
<2790=2792,2791
<2792=2793
<2793=2795,2794
<2796=2797
<2798=2799
<2799=2801,2800
<2802=2803
<2803=2807,2804
<2804=2805
<2805=2806
<2807=2808
<2808=2810,2809
<2811=2812
<2812=2823,2813
<2813=2821,2814
<2814=2815
<2815=2817,2816
<2817=2818
<2818=2820,2819
<2821=2822
<2823=2824
<2824=2826,2825
<2827=2828
<2828=2839,2829
<2829=2837,2830
<2830=2831
<2831=2833,2832
<2833=2834
<2834=2836,2835
<2837=2838
<2839=2840
<2840=2842,2841
<2843=2844
<2844=2846,2845
<2847=2848
<2848=2860,2859,2849
<2849=2858,2850
<2850=2854,2851
<2851=2852
<2852=2853
<2854=2855
<2855=2857,2856
<2861=2862
<2862=2866,2863
<2863=2864
<2864=2865
<2866=2867
<2867=2869,2868
<2870=2888,2871
<2871=2872
<2872=2873
<2873=2884,2874
<2874=2882,2875
<2875=2876
<2876=2878,2877
<2878=2879
<2879=2881,2880
<2882=2883
<2884=2885
<2885=2887,2886
<2888=2889
<2889=2893,2890
<2890=2891
<2891=2892
<2893=2894
<2894=2896,2895
<2897=2915,2898
<2898=2899
<2899=2900
<2900=2911,2901
<2901=2909,2902
<2902=2903
<2903=2905,2904
<2905=2906
<2906=2908,2907
<2909=2910
<2911=2912
<2912=2914,2913
<2915=2916
<2916=2920,2917
<2917=2918
<2918=2919
<2920=2921
<2921=2923,2922
<2924=2949,2925
<2925=2926
<2926=2927
<2927=2945,2928
<2928=2936,2929
<2929=2930
<2930=2932,2931
<2932=2933
<2933=2935,2934
<2936=2937
<2937=2939,2938
<2939=2941,2940
<2941=2942
<2942=2944,2943
<2945=2946
<2946=2948,2947
<2949=2950
<2950=2963,2951
<2951=2953,2952
<2953=2962,2954
<2954=2956,2955
<2956=2958,2957
<2958=2959
<2959=2961,2960
<2963=2965,2964
<2965=2966
<2966=2968,2967
<2969=2970
<2970=2976,2971
<2971=2974,2972
<2972=2973
<2974=2975
<2976=2977
<2977=2979,2978
<2980=2981
<2981=2986,2985,2982
<2982=2984,2983
<2987=2988
<2988=2991,2990,2989
<2993=2994
<2994=2997,2996,2995
<2999=3000
<3000=3003,3002,3001
<3005=3006
<3006=3012,3007
<3007=3010,3008
<3008=3009
<3010=3011
<3012=3013
<3013=3015,3014
<3016=3017
<3017=3020,3019,3018
