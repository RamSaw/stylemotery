>3	FunctionDef	TwitchHandler 
>4	ParameterList	const QString & stream , const QString & dest , const QNetworkProxy & proxy , QObject * parent
>5	Parameter	 
>6	Identifier	parent
>7	ParameterType	QObject *
>8	Parameter	 
>9	Identifier	proxy
>10	ParameterType	const QNetworkProxy &
>11	Parameter	 
>12	Identifier	dest
>13	ParameterType	const QString &
>14	Parameter	 
>15	Identifier	stream
>16	ParameterType	const QString &
>17	CompoundStatement	 
>18	ExpressionStatement	 
>19	CallExpression	connect ( m3uLoadTimer , & QTimer 
>20	ArgumentList	m3uLoadTimer
>21	Argument	& TwitchHandler 
>22	UnaryOp	& TwitchHandler 
>23	Identifier	TwitchHandler 
>24	UnaryOperator	&
>25	Argument	this
>26	Identifier	this
>27	Argument	& QTimer 
>28	UnaryOp	& QTimer 
>29	Identifier	QTimer 
>30	UnaryOperator	&
>31	Argument	m3uLoadTimer
>32	Identifier	m3uLoadTimer
>33	Callee	connect
>34	Identifier	connect
>35	ExpressionStatement	 
>36	CallExpression	connect ( retryTimer , & QTimer 
>37	ArgumentList	retryTimer
>38	Argument	& TwitchHandler 
>39	UnaryOp	& TwitchHandler 
>40	Identifier	TwitchHandler 
>41	UnaryOperator	&
>42	Argument	this
>43	Identifier	this
>44	Argument	& QTimer 
>45	UnaryOp	& QTimer 
>46	Identifier	QTimer 
>47	UnaryOperator	&
>48	Argument	retryTimer
>49	Identifier	retryTimer
>50	Callee	connect
>51	Identifier	connect
>52	ExpressionStatement	 
>53	CallExpression	connect ( reauthTimer , & QTimer 
>54	ArgumentList	reauthTimer
>55	Argument	& TwitchHandler 
>56	UnaryOp	& TwitchHandler 
>57	Identifier	TwitchHandler 
>58	UnaryOperator	&
>59	Argument	this
>60	Identifier	this
>61	Argument	& QTimer 
>62	UnaryOp	& QTimer 
>63	Identifier	QTimer 
>64	UnaryOperator	&
>65	Argument	reauthTimer
>66	Identifier	reauthTimer
>67	Callee	connect
>68	Identifier	connect
>69	ExpressionStatement	 
>70	CallExpression	retryTimer -> setSingleShot ( true )
>71	ArgumentList	true
>72	Argument	true
>73	Identifier	true
>74	Callee	retryTimer -> setSingleShot
>75	PtrMemberAccess	retryTimer -> setSingleShot
>76	Identifier	setSingleShot
>77	Identifier	retryTimer
>78	ExpressionStatement	 
>79	CallExpression	retryTimer -> setInterval ( 10000 )
>80	ArgumentList	10000
>81	Argument	10000
>82	PrimaryExpression	10000
>83	Callee	retryTimer -> setInterval
>84	PtrMemberAccess	retryTimer -> setInterval
>85	Identifier	setInterval
>86	Identifier	retryTimer
>87	ExpressionStatement	 
>88	AssignmentExpr	retryTimer = new QTimer ( this )
>89	Identifier	this
>90	Identifier	retryTimer
>91	ExpressionStatement	 
>92	CallExpression	m3uLoadTimer -> setSingleShot ( false )
>93	ArgumentList	false
>94	Argument	false
>95	Identifier	false
>96	Callee	m3uLoadTimer -> setSingleShot
>97	PtrMemberAccess	m3uLoadTimer -> setSingleShot
>98	Identifier	setSingleShot
>99	Identifier	m3uLoadTimer
>100	ExpressionStatement	 
>101	CallExpression	m3uLoadTimer -> setInterval ( 1000 )
>102	ArgumentList	1000
>103	Argument	1000
>104	PrimaryExpression	1000
>105	Callee	m3uLoadTimer -> setInterval
>106	PtrMemberAccess	m3uLoadTimer -> setInterval
>107	Identifier	setInterval
>108	Identifier	m3uLoadTimer
>109	ExpressionStatement	 
>110	AssignmentExpr	m3uLoadTimer = new QTimer ( this )
>111	Identifier	this
>112	Identifier	m3uLoadTimer
>113	ExpressionStatement	 
>114	CallExpression	reauthTimer -> start ( )
>115	ArgumentList	 
>116	Callee	reauthTimer -> start
>117	PtrMemberAccess	reauthTimer -> start
>118	Identifier	start
>119	Identifier	reauthTimer
>120	ExpressionStatement	 
>121	CallExpression	reauthTimer -> setSingleShot ( false )
>122	ArgumentList	false
>123	Argument	false
>124	Identifier	false
>125	Callee	reauthTimer -> setSingleShot
>126	PtrMemberAccess	reauthTimer -> setSingleShot
>127	Identifier	setSingleShot
>128	Identifier	reauthTimer
>129	ExpressionStatement	 
>130	CallExpression	reauthTimer -> setInterval ( 5 * 60 * 1000 )
>131	ArgumentList	5 * 60 * 1000
>132	Argument	5 * 60 * 1000
>133	MultiplicativeExpression	5 * 60 * 1000
>134	MultiplicativeExpression	60 * 1000
>135	PrimaryExpression	1000
>136	PrimaryExpression	60
>137	PrimaryExpression	5
>138	Callee	reauthTimer -> setInterval
>139	PtrMemberAccess	reauthTimer -> setInterval
>140	Identifier	setInterval
>141	Identifier	reauthTimer
>142	IdentifierDeclStatement	 
>143	IdentifierDecl	* reauthTimer = new QTimer ( this )
>144	AssignmentExpr	* reauthTimer = new QTimer ( this )
>145	Identifier	this
>146	Identifier	this
>147	Identifier	reauthTimer
>148	IdentifierDeclType	QTimer *
>149	ExpressionStatement	 
>150	CallExpression	recentlyLoaded . setTimeout ( 120000 )
>151	ArgumentList	120000
>152	Argument	120000
>153	PrimaryExpression	120000
>154	Callee	recentlyLoaded . setTimeout
>155	MemberAccess	recentlyLoaded . setTimeout
>156	Identifier	setTimeout
>157	Identifier	recentlyLoaded
>158	ExpressionStatement	 
>159	CallExpression	reauth ( )
>160	ArgumentList	 
>161	Callee	reauth
>162	Identifier	reauth
>163	ExpressionStatement	 
>164	CallExpression	connect ( nam , & QNetworkAccessManager 
>165	ArgumentList	nam
>166	Argument	del
>167	Identifier	del
>168	Argument	& QNetworkAccessManager 
>169	UnaryOp	& QNetworkAccessManager 
>170	Identifier	QNetworkAccessManager 
>171	UnaryOperator	&
>172	Argument	nam
>173	Identifier	nam
>174	Callee	connect
>175	Identifier	connect
>176	ExpressionStatement	 
>177	CompoundStatement	 
>178	ExpressionStatement	 
>179	CallExpression	rpl -> deleteLater ( )
>180	ArgumentList	 
>181	Callee	rpl -> deleteLater
>182	PtrMemberAccess	rpl -> deleteLater
>183	Identifier	deleteLater
>184	Identifier	rpl
>185	Statement	 
>186	Statement	 
>187	Statement	 
>188	Statement	 
>189	Statement	 
>190	Statement	 
>191	Statement	 
>192	Statement	 
>193	Statement	 
>194	Statement	 
>195	ExpressionStatement	 
>196	CallExpression	nam -> setProxy ( proxy )
>197	ArgumentList	proxy
>198	Argument	proxy
>199	Identifier	proxy
>200	Callee	nam -> setProxy
>201	PtrMemberAccess	nam -> setProxy
>202	Identifier	setProxy
>203	Identifier	nam
>204	ExpressionStatement	 
>205	AssignmentExpr	nam = new QNetworkAccessManager ( this )
>206	Identifier	this
>207	Identifier	nam
>229	FunctionDef	TwitchHandler 
>230	ParameterList	 
>231	ReturnType	void
>232	CompoundStatement	 
>233	ExpressionStatement	 
>234	ShiftExpression	qDebug ( ) << \"Reauthing
>235	ShiftExpression	\"Reauthing
>236	Identifier	url
>237	PrimaryExpression	\"Reauthing
>238	CallExpression	qDebug ( )
>239	ArgumentList	 
>240	Callee	qDebug
>241	Identifier	qDebug
>242	ExpressionStatement	 
>243	Statement	 
>244	CompoundStatement	 
>245	ExpressionStatement	 
>246	CallExpression	tokenReply ( reply )
>247	ArgumentList	reply
>248	Argument	reply
>249	Identifier	reply
>250	Callee	tokenReply
>251	Identifier	tokenReply
>252	Statement	 
>253	Statement	 
>254	Statement	 
>255	Statement	 
>256	Statement	 
>257	Statement	 
>258	Statement	 
>259	Statement	 
>260	Statement	 
>261	Statement	 
>262	Statement	 
>263	Statement	 
>264	Statement	 
>265	Statement	 
>266	Statement	 
>267	Statement	 
>268	Statement	 
>269	Statement	 
>270	IdentifierDeclStatement	 
>271	IdentifierDecl	* reply = nam -> get ( req )
>272	AssignmentExpr	* reply = nam -> get ( req )
>273	CallExpression	nam -> get ( req )
>274	ArgumentList	req
>275	Argument	req
>276	Identifier	req
>277	Callee	nam -> get
>278	PtrMemberAccess	nam -> get
>279	Identifier	get
>280	Identifier	nam
>281	Identifier	reply
>282	Identifier	reply
>283	IdentifierDeclType	QNetworkReply *
>284	ExpressionStatement	 
>285	CallExpression	req . setUrl ( url )
>286	ArgumentList	url
>287	Argument	url
>288	Identifier	url
>289	Callee	req . setUrl
>290	MemberAccess	req . setUrl
>291	Identifier	setUrl
>292	Identifier	req
>293	IdentifierDeclStatement	 
>294	IdentifierDecl	url = QString ( \"http
>295	AssignmentExpr	url = QString ( \"http
>296	CallExpression	QString ( \"http
>297	ArgumentList	stream
>298	Argument	stream
>299	Identifier	stream
>300	Callee	QString ( \"http
>301	MemberAccess	QString ( \"http
>302	Identifier	arg
>303	CallExpression	QString ( \"http
>304	ArgumentList	\"http
>305	Argument	\"http
>306	PrimaryExpression	\"http
>307	Callee	QString
>308	Identifier	QString
>309	Identifier	url
>310	Identifier	url
>311	IdentifierDeclType	QString
>312	IdentifierDeclStatement	 
>313	IdentifierDecl	req
>314	Identifier	req
>315	IdentifierDeclType	QNetworkRequest
>328	FunctionDef	TwitchHandler 
>329	ParameterList	QNetworkReply * reply
>330	Parameter	 
>331	Identifier	reply
>332	ParameterType	QNetworkReply *
>333	ReturnType	void
>334	CompoundStatement	 
>335	ExpressionStatement	 
>336	ShiftExpression	qDebug ( ) << \"Requested usher
>337	ShiftExpression	\"Requested usher
>338	CallExpression	url . toString ( )
>339	ArgumentList	 
>340	Callee	url . toString
>341	MemberAccess	url . toString
>342	Identifier	toString
>343	Identifier	url
>344	PrimaryExpression	\"Requested usher
>345	CallExpression	qDebug ( )
>346	ArgumentList	 
>347	Callee	qDebug
>348	Identifier	qDebug
>349	ExpressionStatement	 
>350	CallExpression	m3uLoadTimer -> stop ( )
>351	ArgumentList	 
>352	Callee	m3uLoadTimer -> stop
>353	PtrMemberAccess	m3uLoadTimer -> stop
>354	Identifier	stop
>355	Identifier	m3uLoadTimer
>356	ExpressionStatement	 
>357	Statement	 
>358	CompoundStatement	 
>359	ExpressionStatement	 
>360	CallExpression	usherReply ( reply )
>361	ArgumentList	reply
>362	Argument	reply
>363	Identifier	reply
>364	Callee	usherReply
>365	Identifier	usherReply
>366	Statement	 
>367	Statement	 
>368	Statement	 
>369	Statement	 
>370	Statement	 
>371	Statement	 
>372	Statement	 
>373	Statement	 
>374	Statement	 
>375	Statement	 
>376	Statement	 
>377	Statement	 
>378	Statement	 
>379	Statement	 
>380	Statement	 
>381	Statement	 
>382	Statement	 
>383	Statement	 
>384	ExpressionStatement	 
>385	AssignmentExpr	reply = nam -> get ( req )
>386	CallExpression	nam -> get ( req )
>387	ArgumentList	req
>388	Argument	req
>389	Identifier	req
>390	Callee	nam -> get
>391	PtrMemberAccess	nam -> get
>392	Identifier	get
>393	Identifier	nam
>394	Identifier	reply
>395	ExpressionStatement	 
>396	CallExpression	req . setUrl ( url )
>397	ArgumentList	url
>398	Argument	url
>399	Identifier	url
>400	Callee	req . setUrl
>401	MemberAccess	req . setUrl
>402	Identifier	setUrl
>403	Identifier	req
>404	ExpressionStatement	 
>405	CallExpression	url . setQuery ( qry )
>406	ArgumentList	qry
>407	Argument	qry
>408	Identifier	qry
>409	Callee	url . setQuery
>410	MemberAccess	url . setQuery
>411	Identifier	setQuery
>412	Identifier	url
>413	ExpressionStatement	 
>414	CallExpression	qry . addQueryItem ( \"allow_source\" , \"true\" )
>415	ArgumentList	\"allow_source\"
>416	Argument	\"true\"
>417	PrimaryExpression	\"true\"
>418	Argument	\"allow_source\"
>419	PrimaryExpression	\"allow_source\"
>420	Callee	qry . addQueryItem
>421	MemberAccess	qry . addQueryItem
>422	Identifier	addQueryItem
>423	Identifier	qry
>424	ExpressionStatement	 
>425	CallExpression	qry . addQueryItem ( \"token\" , token )
>426	ArgumentList	\"token\"
>427	Argument	token
>428	Identifier	token
>429	Argument	\"token\"
>430	PrimaryExpression	\"token\"
>431	Callee	qry . addQueryItem
>432	MemberAccess	qry . addQueryItem
>433	Identifier	addQueryItem
>434	Identifier	qry
>435	ExpressionStatement	 
>436	CallExpression	qry . addQueryItem ( \"sig\" , sig )
>437	ArgumentList	\"sig\"
>438	Argument	sig
>439	Identifier	sig
>440	Argument	\"sig\"
>441	PrimaryExpression	\"sig\"
>442	Callee	qry . addQueryItem
>443	MemberAccess	qry . addQueryItem
>444	Identifier	addQueryItem
>445	Identifier	qry
>446	ExpressionStatement	 
>447	CallExpression	qry . addQueryItem ( \"type\" , \"any\" )
>448	ArgumentList	\"type\"
>449	Argument	\"any\"
>450	PrimaryExpression	\"any\"
>451	Argument	\"type\"
>452	PrimaryExpression	\"type\"
>453	Callee	qry . addQueryItem
>454	MemberAccess	qry . addQueryItem
>455	Identifier	addQueryItem
>456	Identifier	qry
>457	ExpressionStatement	 
>458	CallExpression	qry . addQueryItem ( \"player\" , \"twitchweb\" )
>459	ArgumentList	\"player\"
>460	Argument	\"twitchweb\"
>461	PrimaryExpression	\"twitchweb\"
>462	Argument	\"player\"
>463	PrimaryExpression	\"player\"
>464	Callee	qry . addQueryItem
>465	MemberAccess	qry . addQueryItem
>466	Identifier	addQueryItem
>467	Identifier	qry
>468	IdentifierDeclStatement	 
>469	IdentifierDecl	qry
>470	Identifier	qry
>471	IdentifierDeclType	QUrlQuery
>472	IdentifierDeclStatement	 
>473	IdentifierDecl	url = QString ( \"http
>474	AssignmentExpr	url = QString ( \"http
>475	CallExpression	QString ( \"http
>476	ArgumentList	stream
>477	Argument	stream
>478	Identifier	stream
>479	Callee	QString ( \"http
>480	MemberAccess	QString ( \"http
>481	Identifier	arg
>482	CallExpression	QString ( \"http
>483	ArgumentList	\"http
>484	Argument	\"http
>485	PrimaryExpression	\"http
>486	Callee	QString
>487	Identifier	QString
>488	Identifier	url
>489	Identifier	url
>490	IdentifierDeclType	QUrl
>491	IdentifierDeclStatement	 
>492	IdentifierDecl	req
>493	Identifier	req
>494	IdentifierDeclType	QNetworkRequest
>495	IfStatement	if ( ! newToken . isEmpty ( ) && ! newSig . isEmpty ( ) )
>496	ElseStatement	else
>497	CompoundStatement	 
>498	ReturnStatement	 
>499	ExpressionStatement	 
>500	ShiftExpression	qDebug ( ) << \"New info is empty!\"
>501	PrimaryExpression	\"New info is empty!\"
>502	CallExpression	qDebug ( )
>503	ArgumentList	 
>504	Callee	qDebug
>505	Identifier	qDebug
>506	CompoundStatement	 
>507	ExpressionStatement	 
>508	AssignmentExpr	haveToken = true
>509	Identifier	true
>510	Identifier	haveToken
>511	ExpressionStatement	 
>512	AssignmentExpr	sig = newSig
>513	Identifier	newSig
>514	Identifier	sig
>515	ExpressionStatement	 
>516	AssignmentExpr	token = newToken
>517	Identifier	newToken
>518	Identifier	token
>519	Condition	 
>520	AndExpression	! newToken . isEmpty ( ) && ! newSig . isEmpty ( )
>521	UnaryOp	! newSig . isEmpty ( )
>522	CallExpression	newSig . isEmpty ( )
>523	ArgumentList	 
>524	Callee	newSig . isEmpty
>525	MemberAccess	newSig . isEmpty
>526	Identifier	isEmpty
>527	Identifier	newSig
>528	UnaryOperator	!
>529	UnaryOp	! newToken . isEmpty ( )
>530	CallExpression	newToken . isEmpty ( )
>531	ArgumentList	 
>532	Callee	newToken . isEmpty
>533	MemberAccess	newToken . isEmpty
>534	Identifier	isEmpty
>535	Identifier	newToken
>536	UnaryOperator	!
>537	IdentifierDeclStatement	 
>538	IdentifierDecl	newSig = doc . object ( ) . value ( \"sig\" ) . toString ( )
>539	AssignmentExpr	newSig = doc . object ( ) . value ( \"sig\" ) . toString ( )
>540	CallExpression	doc . object ( ) . value ( \"sig\" ) . toString ( )
>541	ArgumentList	 
>542	Callee	doc . object ( ) . value ( \"sig\" ) . toString
>543	MemberAccess	doc . object ( ) . value ( \"sig\" ) . toString
>544	Identifier	toString
>545	CallExpression	doc . object ( ) . value ( \"sig\" )
>546	ArgumentList	\"sig\"
>547	Argument	\"sig\"
>548	PrimaryExpression	\"sig\"
>549	Callee	doc . object ( ) . value
>550	MemberAccess	doc . object ( ) . value
>551	Identifier	value
>552	CallExpression	doc . object ( )
>553	ArgumentList	 
>554	Callee	doc . object
>555	MemberAccess	doc . object
>556	Identifier	object
>557	Identifier	doc
>558	Identifier	newSig
>559	Identifier	newSig
>560	IdentifierDeclType	QString
>561	IdentifierDeclStatement	 
>562	IdentifierDecl	newToken = doc . object ( ) . value ( \"token\" ) . toString ( )
>563	AssignmentExpr	newToken = doc . object ( ) . value ( \"token\" ) . toString ( )
>564	CallExpression	doc . object ( ) . value ( \"token\" ) . toString ( )
>565	ArgumentList	 
>566	Callee	doc . object ( ) . value ( \"token\" ) . toString
>567	MemberAccess	doc . object ( ) . value ( \"token\" ) . toString
>568	Identifier	toString
>569	CallExpression	doc . object ( ) . value ( \"token\" )
>570	ArgumentList	\"token\"
>571	Argument	\"token\"
>572	PrimaryExpression	\"token\"
>573	Callee	doc . object ( ) . value
>574	MemberAccess	doc . object ( ) . value
>575	Identifier	value
>576	CallExpression	doc . object ( )
>577	ArgumentList	 
>578	Callee	doc . object
>579	MemberAccess	doc . object
>580	Identifier	object
>581	Identifier	doc
>582	Identifier	newToken
>583	Identifier	newToken
>584	IdentifierDeclType	QString
>585	IfStatement	if ( err . error != QJsonParseError 
>586	CompoundStatement	 
>587	ReturnStatement	 
>588	ExpressionStatement	 
>589	CallExpression	retryTimer -> start ( )
>590	ArgumentList	 
>591	Callee	retryTimer -> start
>592	PtrMemberAccess	retryTimer -> start
>593	Identifier	start
>594	Identifier	retryTimer
>595	ExpressionStatement	 
>596	ShiftExpression	qDebug ( ) << \"Json parsing failed
>597	ShiftExpression	\"Json parsing failed
>598	CallExpression	err . errorString ( )
>599	ArgumentList	 
>600	Callee	err . errorString
>601	MemberAccess	err . errorString
>602	Identifier	errorString
>603	Identifier	err
>604	PrimaryExpression	\"Json parsing failed
>605	CallExpression	qDebug ( )
>606	ArgumentList	 
>607	Callee	qDebug
>608	Identifier	qDebug
>609	Condition	 
>610	EqualityExpression	err . error != QJsonParseError 
>611	Identifier	QJsonParseError 
>612	MemberAccess	err . error
>613	Identifier	error
>614	Identifier	err
>615	IdentifierDeclStatement	 
>616	IdentifierDecl	doc = QJsonDocument 
>617	AssignmentExpr	doc = QJsonDocument 
>618	CallExpression	QJsonDocument 
>619	ArgumentList	data
>620	Argument	& err
>621	UnaryOp	& err
>622	Identifier	err
>623	UnaryOperator	&
>624	Argument	data
>625	Identifier	data
>626	Callee	QJsonDocument 
>627	Identifier	QJsonDocument 
>628	Identifier	doc
>629	Identifier	doc
>630	IdentifierDeclType	QJsonDocument
>631	IdentifierDeclStatement	 
>632	IdentifierDecl	err
>633	Identifier	err
>634	IdentifierDeclType	QJsonParseError
>635	IdentifierDeclStatement	 
>636	IdentifierDecl	data = reply -> readAll ( )
>637	AssignmentExpr	data = reply -> readAll ( )
>638	CallExpression	reply -> readAll ( )
>639	ArgumentList	 
>640	Callee	reply -> readAll
>641	PtrMemberAccess	reply -> readAll
>642	Identifier	readAll
>643	Identifier	reply
>644	Identifier	data
>645	Identifier	data
>646	IdentifierDeclType	QByteArray
>647	IfStatement	if ( code != 200 )
>648	CompoundStatement	 
>649	ReturnStatement	 
>650	ExpressionStatement	 
>651	CallExpression	retryTimer -> start ( )
>652	ArgumentList	 
>653	Callee	retryTimer -> start
>654	PtrMemberAccess	retryTimer -> start
>655	Identifier	start
>656	Identifier	retryTimer
>657	ExpressionStatement	 
>658	ShiftExpression	qDebug ( ) << \"Get token failed
>659	ShiftExpression	\"Get token failed
>660	Identifier	code
>661	PrimaryExpression	\"Get token failed
>662	CallExpression	qDebug ( )
>663	ArgumentList	 
>664	Callee	qDebug
>665	Identifier	qDebug
>666	Condition	 
>667	EqualityExpression	code != 200
>668	PrimaryExpression	200
>669	Identifier	code
>670	IfStatement	if ( code >= 300 && code <= 310 )
>671	CompoundStatement	 
>672	ReturnStatement	 
>673	ExpressionStatement	 
>674	Statement	 
>675	CompoundStatement	 
>676	ExpressionStatement	 
>677	CallExpression	tokenReply ( reply )
>678	ArgumentList	reply
>679	Argument	reply
>680	Identifier	reply
>681	Callee	tokenReply
>682	Identifier	tokenReply
>683	Statement	 
>684	Statement	 
>685	Statement	 
>686	Statement	 
>687	Statement	 
>688	Statement	 
>689	Statement	 
>690	Statement	 
>691	Statement	 
>692	Statement	 
>693	Statement	 
>694	Statement	 
>695	Statement	 
>696	Statement	 
>697	Statement	 
>698	Statement	 
>699	Statement	 
>700	Statement	 
>701	IdentifierDeclStatement	 
>702	IdentifierDecl	* reply = nam -> get ( req )
>703	AssignmentExpr	* reply = nam -> get ( req )
>704	CallExpression	nam -> get ( req )
>705	ArgumentList	req
>706	Argument	req
>707	Identifier	req
>708	Callee	nam -> get
>709	PtrMemberAccess	nam -> get
>710	Identifier	get
>711	Identifier	nam
>712	Identifier	reply
>713	Identifier	reply
>714	IdentifierDeclType	QNetworkReply *
>715	IdentifierDeclStatement	 
>716	IdentifierDecl	req ( reply -> attribute ( QNetworkRequest 
>717	CallExpression	reply -> attribute ( QNetworkRequest 
>718	ArgumentList	 
>719	Callee	reply -> attribute ( QNetworkRequest 
>720	MemberAccess	reply -> attribute ( QNetworkRequest 
>721	Identifier	toString
>722	CallExpression	reply -> attribute ( QNetworkRequest 
>723	ArgumentList	QNetworkRequest 
>724	Argument	QNetworkRequest 
>725	Identifier	QNetworkRequest 
>726	Callee	reply -> attribute
>727	PtrMemberAccess	reply -> attribute
>728	Identifier	attribute
>729	Identifier	reply
>730	Identifier	req
>731	IdentifierDeclType	QNetworkRequest
>732	ExpressionStatement	 
>733	ShiftExpression	qDebug ( ) << \"Token redirected to\" << reply -> attribute ( QNetworkRequest 
>734	ShiftExpression	\"Token redirected to\" << reply -> attribute ( QNetworkRequest 
>735	CallExpression	reply -> attribute ( QNetworkRequest 
>736	ArgumentList	QNetworkRequest 
>737	Argument	QNetworkRequest 
>738	Identifier	QNetworkRequest 
>739	Callee	reply -> attribute
>740	PtrMemberAccess	reply -> attribute
>741	Identifier	attribute
>742	Identifier	reply
>743	PrimaryExpression	\"Token redirected to\"
>744	CallExpression	qDebug ( )
>745	ArgumentList	 
>746	Callee	qDebug
>747	Identifier	qDebug
>748	Condition	 
>749	AndExpression	code >= 300 && code <= 310
>750	RelationalExpression	code <= 310
>751	PrimaryExpression	310
>752	Identifier	code
>753	RelationalExpression	code >= 300
>754	PrimaryExpression	300
>755	Identifier	code
>756	IdentifierDeclStatement	 
>757	IdentifierDecl	code = reply -> attribute ( QNetworkRequest 
>758	AssignmentExpr	code = reply -> attribute ( QNetworkRequest 
>759	CallExpression	reply -> attribute ( QNetworkRequest 
>760	ArgumentList	 
>761	Callee	reply -> attribute ( QNetworkRequest 
>762	MemberAccess	reply -> attribute ( QNetworkRequest 
>763	Identifier	toInt
>764	CallExpression	reply -> attribute ( QNetworkRequest 
>765	ArgumentList	QNetworkRequest 
>766	Argument	QNetworkRequest 
>767	Identifier	QNetworkRequest 
>768	Callee	reply -> attribute
>769	PtrMemberAccess	reply -> attribute
>770	Identifier	attribute
>771	Identifier	reply
>772	Identifier	code
>773	Identifier	code
>774	IdentifierDeclType	int
>775	IfStatement	if ( reply -> error ( ) != QNetworkReply 
>776	CompoundStatement	 
>777	ReturnStatement	 
>778	ExpressionStatement	 
>779	CallExpression	retryTimer -> start ( )
>780	ArgumentList	 
>781	Callee	retryTimer -> start
>782	PtrMemberAccess	retryTimer -> start
>783	Identifier	start
>784	Identifier	retryTimer
>785	ExpressionStatement	 
>786	ShiftExpression	qDebug ( ) << \"token get error!\"
>787	PrimaryExpression	\"token get error!\"
>788	CallExpression	qDebug ( )
>789	ArgumentList	 
>790	Callee	qDebug
>791	Identifier	qDebug
>792	Condition	 
>793	EqualityExpression	reply -> error ( ) != QNetworkReply 
>794	Identifier	QNetworkReply 
>795	CallExpression	reply -> error ( )
>796	ArgumentList	 
>797	Callee	reply -> error
>798	PtrMemberAccess	reply -> error
>799	Identifier	error
>800	Identifier	reply
>844	FunctionDef	TwitchHandler 
>845	ParameterList	QNetworkReply * reply
>846	Parameter	 
>847	Identifier	reply
>848	ParameterType	QNetworkReply *
>849	ReturnType	void
>850	CompoundStatement	 
>851	ExpressionStatement	 
>852	CallExpression	retryTimer -> start ( )
>853	ArgumentList	 
>854	Callee	retryTimer -> start
>855	PtrMemberAccess	retryTimer -> start
>856	Identifier	start
>857	Identifier	retryTimer
>858	ExpressionStatement	 
>859	ShiftExpression	qDebug ( ) << \"no channel found in m3u8, retrying in 10 seconds\"
>860	PrimaryExpression	\"no channel found in m3u8, retrying in 10 seconds\"
>861	CallExpression	qDebug ( )
>862	ArgumentList	 
>863	Callee	qDebug
>864	Identifier	qDebug
>865	CompoundStatement	 
>866	IfStatement	if ( tline . startsWith ( \"http\" ) )
>867	CompoundStatement	 
>868	ReturnStatement	 
>869	ExpressionStatement	 
>870	CallExpression	newPlaylist ( tline )
>871	ArgumentList	tline
>872	Argument	tline
>873	Identifier	tline
>874	Callee	newPlaylist
>875	Identifier	newPlaylist
>876	Condition	 
>877	CallExpression	tline . startsWith ( \"http\" )
>878	ArgumentList	\"http\"
>879	Argument	\"http\"
>880	PrimaryExpression	\"http\"
>881	Callee	tline . startsWith
>882	MemberAccess	tline . startsWith
>883	Identifier	startsWith
>884	Identifier	tline
>885	IdentifierDeclStatement	 
>886	IdentifierDecl	tline = line . trimmed ( )
>887	AssignmentExpr	tline = line . trimmed ( )
>888	CallExpression	line . trimmed ( )
>889	ArgumentList	 
>890	Callee	line . trimmed
>891	MemberAccess	line . trimmed
>892	Identifier	trimmed
>893	Identifier	line
>894	Identifier	tline
>895	Identifier	tline
>896	IdentifierDeclType	QString
>897	Statement	 
>898	Statement	 
>899	Label	 
>900	Identifier	line
>901	Statement	 
>902	Statement	 
>903	Statement	 
>904	Statement	 
>905	Statement	 
>906	IdentifierDeclStatement	 
>907	IdentifierDecl	lines = m3u8 . split ( '\n' )
>908	AssignmentExpr	lines = m3u8 . split ( '\n' )
>909	CallExpression	m3u8 . split ( '\n' )
>910	ArgumentList	'\n'
>911	Argument	'\n'
>912	PrimaryExpression	'\n'
>913	Callee	m3u8 . split
>914	MemberAccess	m3u8 . split
>915	Identifier	split
>916	Identifier	m3u8
>917	Identifier	lines
>918	Identifier	lines
>919	IdentifierDeclType	QStringList
>920	IfStatement	if ( m3u8 . trimmed ( ) == \"[]\" )
>921	CompoundStatement	 
>922	ReturnStatement	 
>923	ExpressionStatement	 
>924	CallExpression	retryTimer -> start ( )
>925	ArgumentList	 
>926	Callee	retryTimer -> start
>927	PtrMemberAccess	retryTimer -> start
>928	Identifier	start
>929	Identifier	retryTimer
>930	ExpressionStatement	 
>931	ShiftExpression	qDebug ( ) << \"m3u8 is empty, channel likely not live, retrying in 10 seconds\"
>932	PrimaryExpression	\"m3u8 is empty, channel likely not live, retrying in 10 seconds\"
>933	CallExpression	qDebug ( )
>934	ArgumentList	 
>935	Callee	qDebug
>936	Identifier	qDebug
>937	Condition	 
>938	EqualityExpression	m3u8 . trimmed ( ) == \"[]\"
>939	PrimaryExpression	\"[]\"
>940	CallExpression	m3u8 . trimmed ( )
>941	ArgumentList	 
>942	Callee	m3u8 . trimmed
>943	MemberAccess	m3u8 . trimmed
>944	Identifier	trimmed
>945	Identifier	m3u8
>946	IdentifierDeclStatement	 
>947	IdentifierDecl	m3u8 = QString 
>948	AssignmentExpr	m3u8 = QString 
>949	CallExpression	QString 
>950	ArgumentList	reply -> readAll ( )
>951	Argument	reply -> readAll ( )
>952	CallExpression	reply -> readAll ( )
>953	ArgumentList	 
>954	Callee	reply -> readAll
>955	PtrMemberAccess	reply -> readAll
>956	Identifier	readAll
>957	Identifier	reply
>958	Callee	QString 
>959	Identifier	QString 
>960	Identifier	m3u8
>961	Identifier	m3u8
>962	IdentifierDeclType	QString
>963	IfStatement	if ( code != 200 )
>964	CompoundStatement	 
>965	ReturnStatement	 
>966	ExpressionStatement	 
>967	CallExpression	retryTimer -> start ( )
>968	ArgumentList	 
>969	Callee	retryTimer -> start
>970	PtrMemberAccess	retryTimer -> start
>971	Identifier	start
>972	Identifier	retryTimer
>973	ExpressionStatement	 
>974	ShiftExpression	qDebug ( ) << \"Get usher failed
>975	ShiftExpression	\"Get usher failed
>976	Identifier	code
>977	PrimaryExpression	\"Get usher failed
>978	CallExpression	qDebug ( )
>979	ArgumentList	 
>980	Callee	qDebug
>981	Identifier	qDebug
>982	Condition	 
>983	EqualityExpression	code != 200
>984	PrimaryExpression	200
>985	Identifier	code
>986	IfStatement	if ( code >= 300 && code <= 310 )
>987	CompoundStatement	 
>988	ReturnStatement	 
>989	ExpressionStatement	 
>990	Statement	 
>991	CompoundStatement	 
>992	ExpressionStatement	 
>993	CallExpression	usherReply ( reply )
>994	ArgumentList	reply
>995	Argument	reply
>996	Identifier	reply
>997	Callee	usherReply
>998	Identifier	usherReply
>999	Statement	 
>1000	Statement	 
>1001	Statement	 
>1002	Statement	 
>1003	Statement	 
>1004	Statement	 
>1005	Statement	 
>1006	Statement	 
>1007	Statement	 
>1008	Statement	 
>1009	Statement	 
>1010	Statement	 
>1011	Statement	 
>1012	Statement	 
>1013	Statement	 
>1014	Statement	 
>1015	Statement	 
>1016	Statement	 
>1017	IdentifierDeclStatement	 
>1018	IdentifierDecl	* reply = nam -> get ( req )
>1019	AssignmentExpr	* reply = nam -> get ( req )
>1020	CallExpression	nam -> get ( req )
>1021	ArgumentList	req
>1022	Argument	req
>1023	Identifier	req
>1024	Callee	nam -> get
>1025	PtrMemberAccess	nam -> get
>1026	Identifier	get
>1027	Identifier	nam
>1028	Identifier	reply
>1029	Identifier	reply
>1030	IdentifierDeclType	QNetworkReply *
>1031	IdentifierDeclStatement	 
>1032	IdentifierDecl	req ( reply -> attribute ( QNetworkRequest 
>1033	CallExpression	reply -> attribute ( QNetworkRequest 
>1034	ArgumentList	 
>1035	Callee	reply -> attribute ( QNetworkRequest 
>1036	MemberAccess	reply -> attribute ( QNetworkRequest 
>1037	Identifier	toString
>1038	CallExpression	reply -> attribute ( QNetworkRequest 
>1039	ArgumentList	QNetworkRequest 
>1040	Argument	QNetworkRequest 
>1041	Identifier	QNetworkRequest 
>1042	Callee	reply -> attribute
>1043	PtrMemberAccess	reply -> attribute
>1044	Identifier	attribute
>1045	Identifier	reply
>1046	Identifier	req
>1047	IdentifierDeclType	QNetworkRequest
>1048	ExpressionStatement	 
>1049	ShiftExpression	qDebug ( ) << \"Usher redirected to\" << reply -> attribute ( QNetworkRequest 
>1050	ShiftExpression	\"Usher redirected to\" << reply -> attribute ( QNetworkRequest 
>1051	CallExpression	reply -> attribute ( QNetworkRequest 
>1052	ArgumentList	QNetworkRequest 
>1053	Argument	QNetworkRequest 
>1054	Identifier	QNetworkRequest 
>1055	Callee	reply -> attribute
>1056	PtrMemberAccess	reply -> attribute
>1057	Identifier	attribute
>1058	Identifier	reply
>1059	PrimaryExpression	\"Usher redirected to\"
>1060	CallExpression	qDebug ( )
>1061	ArgumentList	 
>1062	Callee	qDebug
>1063	Identifier	qDebug
>1064	Condition	 
>1065	AndExpression	code >= 300 && code <= 310
>1066	RelationalExpression	code <= 310
>1067	PrimaryExpression	310
>1068	Identifier	code
>1069	RelationalExpression	code >= 300
>1070	PrimaryExpression	300
>1071	Identifier	code
>1072	IdentifierDeclStatement	 
>1073	IdentifierDecl	code = reply -> attribute ( QNetworkRequest 
>1074	AssignmentExpr	code = reply -> attribute ( QNetworkRequest 
>1075	CallExpression	reply -> attribute ( QNetworkRequest 
>1076	ArgumentList	 
>1077	Callee	reply -> attribute ( QNetworkRequest 
>1078	MemberAccess	reply -> attribute ( QNetworkRequest 
>1079	Identifier	toInt
>1080	CallExpression	reply -> attribute ( QNetworkRequest 
>1081	ArgumentList	QNetworkRequest 
>1082	Argument	QNetworkRequest 
>1083	Identifier	QNetworkRequest 
>1084	Callee	reply -> attribute
>1085	PtrMemberAccess	reply -> attribute
>1086	Identifier	attribute
>1087	Identifier	reply
>1088	Identifier	code
>1089	Identifier	code
>1090	IdentifierDeclType	int
>1091	IfStatement	if ( reply -> error ( ) != QNetworkReply 
>1092	CompoundStatement	 
>1093	ReturnStatement	 
>1094	ExpressionStatement	 
>1095	CallExpression	retryTimer -> start ( )
>1096	ArgumentList	 
>1097	Callee	retryTimer -> start
>1098	PtrMemberAccess	retryTimer -> start
>1099	Identifier	start
>1100	Identifier	retryTimer
>1101	ExpressionStatement	 
>1102	ShiftExpression	qDebug ( ) << \"usher get error!\"
>1103	PrimaryExpression	\"usher get error!\"
>1104	CallExpression	qDebug ( )
>1105	ArgumentList	 
>1106	Callee	qDebug
>1107	Identifier	qDebug
>1108	Condition	 
>1109	EqualityExpression	reply -> error ( ) != QNetworkReply 
>1110	Identifier	QNetworkReply 
>1111	CallExpression	reply -> error ( )
>1112	ArgumentList	 
>1113	Callee	reply -> error
>1114	PtrMemberAccess	reply -> error
>1115	Identifier	error
>1116	Identifier	reply
>1144	FunctionDef	TwitchHandler 
>1145	ParameterList	const QString & url
>1146	Parameter	 
>1147	Identifier	url
>1148	ParameterType	const QString &
>1149	ReturnType	void
>1150	CompoundStatement	 
>1151	ExpressionStatement	 
>1152	CallExpression	updateM3u ( )
>1153	ArgumentList	 
>1154	Callee	updateM3u
>1155	Identifier	updateM3u
>1156	ExpressionStatement	 
>1157	CallExpression	m3uLoadTimer -> start ( )
>1158	ArgumentList	 
>1159	Callee	m3uLoadTimer -> start
>1160	PtrMemberAccess	m3uLoadTimer -> start
>1161	Identifier	start
>1162	Identifier	m3uLoadTimer
>1163	ExpressionStatement	 
>1164	AssignmentExpr	haveM3u = true
>1165	Identifier	true
>1166	Identifier	haveM3u
>1167	ExpressionStatement	 
>1168	AssignmentExpr	m3uUrl = url
>1169	Identifier	url
>1170	Identifier	m3uUrl
>1179	FunctionDef	TwitchHandler 
>1180	ParameterList	 
>1181	ReturnType	void
>1182	CompoundStatement	 
>1183	ExpressionStatement	 
>1184	Statement	 
>1185	CompoundStatement	 
>1186	ExpressionStatement	 
>1187	CallExpression	m3uReply ( reply )
>1188	ArgumentList	reply
>1189	Argument	reply
>1190	Identifier	reply
>1191	Callee	m3uReply
>1192	Identifier	m3uReply
>1193	Statement	 
>1194	Statement	 
>1195	Statement	 
>1196	Statement	 
>1197	Statement	 
>1198	Statement	 
>1199	Statement	 
>1200	Statement	 
>1201	Statement	 
>1202	Statement	 
>1203	Statement	 
>1204	Statement	 
>1205	Statement	 
>1206	Statement	 
>1207	Statement	 
>1208	Statement	 
>1209	Statement	 
>1210	Statement	 
>1211	IdentifierDeclStatement	 
>1212	IdentifierDecl	* reply = nam -> get ( req )
>1213	AssignmentExpr	* reply = nam -> get ( req )
>1214	CallExpression	nam -> get ( req )
>1215	ArgumentList	req
>1216	Argument	req
>1217	Identifier	req
>1218	Callee	nam -> get
>1219	PtrMemberAccess	nam -> get
>1220	Identifier	get
>1221	Identifier	nam
>1222	Identifier	reply
>1223	Identifier	reply
>1224	IdentifierDeclType	QNetworkReply *
>1225	ExpressionStatement	 
>1226	CallExpression	req . setUrl ( m3uUrl )
>1227	ArgumentList	m3uUrl
>1228	Argument	m3uUrl
>1229	Identifier	m3uUrl
>1230	Callee	req . setUrl
>1231	MemberAccess	req . setUrl
>1232	Identifier	setUrl
>1233	Identifier	req
>1234	IdentifierDeclStatement	 
>1235	IdentifierDecl	req
>1236	Identifier	req
>1237	IdentifierDeclType	QNetworkRequest
>1238	IfStatement	if ( ! haveM3u )
>1239	CompoundStatement	 
>1240	ReturnStatement	 
>1241	ExpressionStatement	 
>1242	ShiftExpression	qDebug ( ) << \"Tried to update m3u without url set!\"
>1243	PrimaryExpression	\"Tried to update m3u without url set!\"
>1244	CallExpression	qDebug ( )
>1245	ArgumentList	 
>1246	Callee	qDebug
>1247	Identifier	qDebug
>1248	Condition	 
>1249	UnaryOp	! haveM3u
>1250	Identifier	haveM3u
>1251	UnaryOperator	!
>1262	FunctionDef	TwitchHandler 
>1263	ParameterList	QNetworkReply * reply
>1264	Parameter	 
>1265	Identifier	reply
>1266	ParameterType	QNetworkReply *
>1267	ReturnType	void
>1268	CompoundStatement	 
>1269	CompoundStatement	 
>1270	ExpressionStatement	 
>1271	CallExpression	downloadPart ( line )
>1272	ArgumentList	line
>1273	Argument	line
>1274	Identifier	line
>1275	Callee	downloadPart
>1276	Identifier	downloadPart
>1277	IfStatement	if ( line . startsWith ( '#' ) || line . isEmpty ( ) )
>1278	ContinueStatement	 
>1279	Condition	 
>1280	OrExpression	line . startsWith ( '#' ) || line . isEmpty ( )
>1281	CallExpression	line . isEmpty ( )
>1282	ArgumentList	 
>1283	Callee	line . isEmpty
>1284	MemberAccess	line . isEmpty
>1285	Identifier	isEmpty
>1286	Identifier	line
>1287	CallExpression	line . startsWith ( '#' )
>1288	ArgumentList	'#'
>1289	Argument	'#'
>1290	PrimaryExpression	'#'
>1291	Callee	line . startsWith
>1292	MemberAccess	line . startsWith
>1293	Identifier	startsWith
>1294	Identifier	line
>1295	Statement	 
>1296	Statement	 
>1297	Label	 
>1298	Identifier	line
>1299	Statement	 
>1300	Statement	 
>1301	Statement	 
>1302	Statement	 
>1303	Statement	 
>1304	IdentifierDeclStatement	 
>1305	IdentifierDecl	lines = pl . split ( '\n' )
>1306	AssignmentExpr	lines = pl . split ( '\n' )
>1307	CallExpression	pl . split ( '\n' )
>1308	ArgumentList	'\n'
>1309	Argument	'\n'
>1310	PrimaryExpression	'\n'
>1311	Callee	pl . split
>1312	MemberAccess	pl . split
>1313	Identifier	split
>1314	Identifier	pl
>1315	Identifier	lines
>1316	Identifier	lines
>1317	IdentifierDeclType	QStringList
>1318	IdentifierDeclStatement	 
>1319	IdentifierDecl	pl = QString 
>1320	AssignmentExpr	pl = QString 
>1321	CallExpression	QString 
>1322	ArgumentList	reply -> readAll ( )
>1323	Argument	reply -> readAll ( )
>1324	CallExpression	reply -> readAll ( )
>1325	ArgumentList	 
>1326	Callee	reply -> readAll
>1327	PtrMemberAccess	reply -> readAll
>1328	Identifier	readAll
>1329	Identifier	reply
>1330	Callee	QString 
>1331	Identifier	QString 
>1332	Identifier	pl
>1333	Identifier	pl
>1334	IdentifierDeclType	QString
>1335	IfStatement	if ( code != 200 )
>1336	CompoundStatement	 
>1337	ReturnStatement	 
>1338	ExpressionStatement	 
>1339	CallExpression	retryTimer -> start ( )
>1340	ArgumentList	 
>1341	Callee	retryTimer -> start
>1342	PtrMemberAccess	retryTimer -> start
>1343	Identifier	start
>1344	Identifier	retryTimer
>1345	ExpressionStatement	 
>1346	CallExpression	m3uLoadTimer -> stop ( )
>1347	ArgumentList	 
>1348	Callee	m3uLoadTimer -> stop
>1349	PtrMemberAccess	m3uLoadTimer -> stop
>1350	Identifier	stop
>1351	Identifier	m3uLoadTimer
>1352	ExpressionStatement	 
>1353	ShiftExpression	qDebug ( ) << \"Get m3u failed
>1354	ShiftExpression	\"Get m3u failed
>1355	Identifier	code
>1356	PrimaryExpression	\"Get m3u failed
>1357	CallExpression	qDebug ( )
>1358	ArgumentList	 
>1359	Callee	qDebug
>1360	Identifier	qDebug
>1361	Condition	 
>1362	EqualityExpression	code != 200
>1363	PrimaryExpression	200
>1364	Identifier	code
>1365	IfStatement	if ( code >= 300 && code <= 310 )
>1366	CompoundStatement	 
>1367	ReturnStatement	 
>1368	ExpressionStatement	 
>1369	Statement	 
>1370	CompoundStatement	 
>1371	ExpressionStatement	 
>1372	CallExpression	m3uReply ( reply )
>1373	ArgumentList	reply
>1374	Argument	reply
>1375	Identifier	reply
>1376	Callee	m3uReply
>1377	Identifier	m3uReply
>1378	Statement	 
>1379	Statement	 
>1380	Statement	 
>1381	Statement	 
>1382	Statement	 
>1383	Statement	 
>1384	Statement	 
>1385	Statement	 
>1386	Statement	 
>1387	Statement	 
>1388	Statement	 
>1389	Statement	 
>1390	Statement	 
>1391	Statement	 
>1392	Statement	 
>1393	Statement	 
>1394	Statement	 
>1395	Statement	 
>1396	IdentifierDeclStatement	 
>1397	IdentifierDecl	* reply = nam -> get ( req )
>1398	AssignmentExpr	* reply = nam -> get ( req )
>1399	CallExpression	nam -> get ( req )
>1400	ArgumentList	req
>1401	Argument	req
>1402	Identifier	req
>1403	Callee	nam -> get
>1404	PtrMemberAccess	nam -> get
>1405	Identifier	get
>1406	Identifier	nam
>1407	Identifier	reply
>1408	Identifier	reply
>1409	IdentifierDeclType	QNetworkReply *
>1410	IdentifierDeclStatement	 
>1411	IdentifierDecl	req ( reply -> attribute ( QNetworkRequest 
>1412	CallExpression	reply -> attribute ( QNetworkRequest 
>1413	ArgumentList	 
>1414	Callee	reply -> attribute ( QNetworkRequest 
>1415	MemberAccess	reply -> attribute ( QNetworkRequest 
>1416	Identifier	toString
>1417	CallExpression	reply -> attribute ( QNetworkRequest 
>1418	ArgumentList	QNetworkRequest 
>1419	Argument	QNetworkRequest 
>1420	Identifier	QNetworkRequest 
>1421	Callee	reply -> attribute
>1422	PtrMemberAccess	reply -> attribute
>1423	Identifier	attribute
>1424	Identifier	reply
>1425	Identifier	req
>1426	IdentifierDeclType	QNetworkRequest
>1427	ExpressionStatement	 
>1428	ShiftExpression	qDebug ( ) << \"m3u redirected to\" << reply -> attribute ( QNetworkRequest 
>1429	ShiftExpression	\"m3u redirected to\" << reply -> attribute ( QNetworkRequest 
>1430	CallExpression	reply -> attribute ( QNetworkRequest 
>1431	ArgumentList	QNetworkRequest 
>1432	Argument	QNetworkRequest 
>1433	Identifier	QNetworkRequest 
>1434	Callee	reply -> attribute
>1435	PtrMemberAccess	reply -> attribute
>1436	Identifier	attribute
>1437	Identifier	reply
>1438	PrimaryExpression	\"m3u redirected to\"
>1439	CallExpression	qDebug ( )
>1440	ArgumentList	 
>1441	Callee	qDebug
>1442	Identifier	qDebug
>1443	Condition	 
>1444	AndExpression	code >= 300 && code <= 310
>1445	RelationalExpression	code <= 310
>1446	PrimaryExpression	310
>1447	Identifier	code
>1448	RelationalExpression	code >= 300
>1449	PrimaryExpression	300
>1450	Identifier	code
>1451	IdentifierDeclStatement	 
>1452	IdentifierDecl	code = reply -> attribute ( QNetworkRequest 
>1453	AssignmentExpr	code = reply -> attribute ( QNetworkRequest 
>1454	CallExpression	reply -> attribute ( QNetworkRequest 
>1455	ArgumentList	 
>1456	Callee	reply -> attribute ( QNetworkRequest 
>1457	MemberAccess	reply -> attribute ( QNetworkRequest 
>1458	Identifier	toInt
>1459	CallExpression	reply -> attribute ( QNetworkRequest 
>1460	ArgumentList	QNetworkRequest 
>1461	Argument	QNetworkRequest 
>1462	Identifier	QNetworkRequest 
>1463	Callee	reply -> attribute
>1464	PtrMemberAccess	reply -> attribute
>1465	Identifier	attribute
>1466	Identifier	reply
>1467	Identifier	code
>1468	Identifier	code
>1469	IdentifierDeclType	int
>1470	IfStatement	if ( reply -> error ( ) != QNetworkReply 
>1471	CompoundStatement	 
>1472	ReturnStatement	 
>1473	ExpressionStatement	 
>1474	CallExpression	retryTimer -> start ( )
>1475	ArgumentList	 
>1476	Callee	retryTimer -> start
>1477	PtrMemberAccess	retryTimer -> start
>1478	Identifier	start
>1479	Identifier	retryTimer
>1480	ExpressionStatement	 
>1481	CallExpression	m3uLoadTimer -> stop ( )
>1482	ArgumentList	 
>1483	Callee	m3uLoadTimer -> stop
>1484	PtrMemberAccess	m3uLoadTimer -> stop
>1485	Identifier	stop
>1486	Identifier	m3uLoadTimer
>1487	ExpressionStatement	 
>1488	ShiftExpression	qDebug ( ) << \"m3u get error!\"
>1489	PrimaryExpression	\"m3u get error!\"
>1490	CallExpression	qDebug ( )
>1491	ArgumentList	 
>1492	Callee	qDebug
>1493	Identifier	qDebug
>1494	Condition	 
>1495	EqualityExpression	reply -> error ( ) != QNetworkReply 
>1496	Identifier	QNetworkReply 
>1497	CallExpression	reply -> error ( )
>1498	ArgumentList	 
>1499	Callee	reply -> error
>1500	PtrMemberAccess	reply -> error
>1501	Identifier	error
>1502	Identifier	reply
>1530	FunctionDef	getCurrentDestDir (const QDir & topDir)
>1531	ParameterList	const QDir & topDir
>1532	Parameter	 
>1533	Identifier	topDir
>1534	ParameterType	const QDir &
>1535	ReturnType	static QDir
>1536	CompoundStatement	 
>1537	ReturnStatement	 
>1538	Identifier	res
>1539	ExpressionStatement	 
>1540	CallExpression	res . cd ( timeStr )
>1541	ArgumentList	timeStr
>1542	Argument	timeStr
>1543	Identifier	timeStr
>1544	Callee	res . cd
>1545	MemberAccess	res . cd
>1546	Identifier	cd
>1547	Identifier	res
>1548	ExpressionStatement	 
>1549	CallExpression	res . mkdir ( timeStr )
>1550	ArgumentList	timeStr
>1551	Argument	timeStr
>1552	Identifier	timeStr
>1553	Callee	res . mkdir
>1554	MemberAccess	res . mkdir
>1555	Identifier	mkdir
>1556	Identifier	res
>1557	IdentifierDeclStatement	 
>1558	IdentifierDecl	timeStr = QString ( \"%1\" ) . arg ( time )
>1559	AssignmentExpr	timeStr = QString ( \"%1\" ) . arg ( time )
>1560	CallExpression	QString ( \"%1\" ) . arg ( time )
>1561	ArgumentList	time
>1562	Argument	time
>1563	Identifier	time
>1564	Callee	QString ( \"%1\" ) . arg
>1565	MemberAccess	QString ( \"%1\" ) . arg
>1566	Identifier	arg
>1567	CallExpression	QString ( \"%1\" )
>1568	ArgumentList	\"%1\"
>1569	Argument	\"%1\"
>1570	PrimaryExpression	\"%1\"
>1571	Callee	QString
>1572	Identifier	QString
>1573	Identifier	timeStr
>1574	Identifier	timeStr
>1575	IdentifierDeclType	QString
>1576	ExpressionStatement	 
>1577	AssignmentExpr	time /= DIR_LIFETIME
>1578	Identifier	DIR_LIFETIME
>1579	Identifier	time
>1580	IdentifierDeclStatement	 
>1581	IdentifierDecl	time = QDateTime 
>1582	AssignmentExpr	time = QDateTime 
>1583	CallExpression	QDateTime 
>1584	ArgumentList	 
>1585	Callee	QDateTime 
>1586	MemberAccess	QDateTime 
>1587	Identifier	toTime_t
>1588	CallExpression	QDateTime 
>1589	ArgumentList	 
>1590	Callee	QDateTime 
>1591	Identifier	QDateTime 
>1592	Identifier	time
>1593	Identifier	time
>1594	IdentifierDeclType	uint
>1595	IdentifierDeclStatement	 
>1596	IdentifierDecl	res = topDir
>1597	AssignmentExpr	res = topDir
>1598	Identifier	topDir
>1599	Identifier	topDir
>1600	Identifier	res
>1601	IdentifierDeclType	QDir
>1614	FunctionDef	TwitchHandler 
>1615	ParameterList	const QString & name
>1616	Parameter	 
>1617	Identifier	name
>1618	ParameterType	const QString &
>1619	ReturnType	void
>1620	CompoundStatement	 
>1621	ExpressionStatement	 
>1622	ShiftExpression	qDebug ( ) << \"Downloading\" << url . toString ( ) << \"to\" << targetFile
>1623	ShiftExpression	\"Downloading\" << url . toString ( ) << \"to\" << targetFile
>1624	ShiftExpression	url . toString ( ) << \"to\" << targetFile
>1625	ShiftExpression	\"to\" << targetFile
>1626	Identifier	targetFile
>1627	PrimaryExpression	\"to\"
>1628	CallExpression	url . toString ( )
>1629	ArgumentList	 
>1630	Callee	url . toString
>1631	MemberAccess	url . toString
>1632	Identifier	toString
>1633	Identifier	url
>1634	PrimaryExpression	\"Downloading\"
>1635	CallExpression	qDebug ( )
>1636	ArgumentList	 
>1637	Callee	qDebug
>1638	Identifier	qDebug
>1639	ExpressionStatement	 
>1640	CallExpression	currentParts . insert ( name )
>1641	ArgumentList	name
>1642	Argument	name
>1643	Identifier	name
>1644	Callee	currentParts . insert
>1645	MemberAccess	currentParts . insert
>1646	Identifier	insert
>1647	Identifier	currentParts
>1648	ExpressionStatement	 
>1649	Statement	 
>1650	CompoundStatement	 
>1651	ExpressionStatement	 
>1652	CallExpression	savePart ( name , targetFile , reply )
>1653	ArgumentList	name
>1654	Argument	reply
>1655	Identifier	reply
>1656	Argument	targetFile
>1657	Identifier	targetFile
>1658	Argument	name
>1659	Identifier	name
>1660	Callee	savePart
>1661	Identifier	savePart
>1662	ExpressionStatement	 
>1663	CallExpression	currentParts . remove ( name )
>1664	ArgumentList	name
>1665	Argument	name
>1666	Identifier	name
>1667	Callee	currentParts . remove
>1668	MemberAccess	currentParts . remove
>1669	Identifier	remove
>1670	Identifier	currentParts
>1671	Statement	 
>1672	Statement	 
>1673	Statement	 
>1674	Statement	 
>1675	Statement	 
>1676	Statement	 
>1677	Statement	 
>1678	Statement	 
>1679	Statement	 
>1680	Statement	 
>1681	Statement	 
>1682	Statement	 
>1683	Statement	 
>1684	Statement	 
>1685	Statement	 
>1686	Statement	 
>1687	Statement	 
>1688	Statement	 
>1689	Statement	 
>1690	Statement	 
>1691	IdentifierDeclStatement	 
>1692	IdentifierDecl	* reply = nam -> get ( req )
>1693	AssignmentExpr	* reply = nam -> get ( req )
>1694	CallExpression	nam -> get ( req )
>1695	ArgumentList	req
>1696	Argument	req
>1697	Identifier	req
>1698	Callee	nam -> get
>1699	PtrMemberAccess	nam -> get
>1700	Identifier	get
>1701	Identifier	nam
>1702	Identifier	reply
>1703	Identifier	reply
>1704	IdentifierDeclType	QNetworkReply *
>1705	ExpressionStatement	 
>1706	CallExpression	req . setUrl ( url )
>1707	ArgumentList	url
>1708	Argument	url
>1709	Identifier	url
>1710	Callee	req . setUrl
>1711	MemberAccess	req . setUrl
>1712	Identifier	setUrl
>1713	Identifier	req
>1714	IdentifierDeclStatement	 
>1715	IdentifierDecl	req
>1716	Identifier	req
>1717	IdentifierDeclType	QNetworkRequest
>1718	IdentifierDeclStatement	 
>1719	IdentifierDecl	targetFile = finfo . absoluteFilePath ( )
>1720	AssignmentExpr	targetFile = finfo . absoluteFilePath ( )
>1721	CallExpression	finfo . absoluteFilePath ( )
>1722	ArgumentList	 
>1723	Callee	finfo . absoluteFilePath
>1724	MemberAccess	finfo . absoluteFilePath
>1725	Identifier	absoluteFilePath
>1726	Identifier	finfo
>1727	Identifier	targetFile
>1728	Identifier	targetFile
>1729	IdentifierDeclType	QString
>1730	IfStatement	if ( currentParts . contains ( name ) || recentlyLoaded . contains ( name ) )
>1731	CompoundStatement	 
>1732	ReturnStatement	 
>1733	Condition	 
>1734	OrExpression	currentParts . contains ( name ) || recentlyLoaded . contains ( name )
>1735	CallExpression	recentlyLoaded . contains ( name )
>1736	ArgumentList	name
>1737	Argument	name
>1738	Identifier	name
>1739	Callee	recentlyLoaded . contains
>1740	MemberAccess	recentlyLoaded . contains
>1741	Identifier	contains
>1742	Identifier	recentlyLoaded
>1743	CallExpression	currentParts . contains ( name )
>1744	ArgumentList	name
>1745	Argument	name
>1746	Identifier	name
>1747	Callee	currentParts . contains
>1748	MemberAccess	currentParts . contains
>1749	Identifier	contains
>1750	Identifier	currentParts
>1751	IdentifierDeclStatement	 
>1752	IdentifierDecl	finfo ( dir , QString ( \"%1-%2\" ) . arg ( QDateTime 
>1753	Expression	dir , QString ( \"%1-%2\" ) . arg ( QDateTime 
>1754	CallExpression	QString ( \"%1-%2\" ) . arg ( QDateTime 
>1755	ArgumentList	name
>1756	Argument	name
>1757	Identifier	name
>1758	Callee	QString ( \"%1-%2\" ) . arg ( QDateTime 
>1759	MemberAccess	QString ( \"%1-%2\" ) . arg ( QDateTime 
>1760	Identifier	arg
>1761	CallExpression	QString ( \"%1-%2\" ) . arg ( QDateTime 
>1762	ArgumentList	QDateTime 
>1763	Argument	QDateTime 
>1764	CallExpression	QDateTime 
>1765	ArgumentList	 
>1766	Callee	QDateTime 
>1767	MemberAccess	QDateTime 
>1768	Identifier	toTime_t
>1769	CallExpression	QDateTime 
>1770	ArgumentList	 
>1771	Callee	QDateTime 
>1772	Identifier	QDateTime 
>1773	Callee	QString ( \"%1-%2\" ) . arg
>1774	MemberAccess	QString ( \"%1-%2\" ) . arg
>1775	Identifier	arg
>1776	CallExpression	QString ( \"%1-%2\" )
>1777	ArgumentList	\"%1-%2\"
>1778	Argument	\"%1-%2\"
>1779	PrimaryExpression	\"%1-%2\"
>1780	Callee	QString
>1781	Identifier	QString
>1782	Identifier	dir
>1783	Identifier	finfo
>1784	IdentifierDeclType	QFileInfo
>1785	ExpressionStatement	 
>1786	AssignmentExpr	dir = getCurrentDestDir ( dir )
>1787	CallExpression	getCurrentDestDir ( dir )
>1788	ArgumentList	dir
>1789	Argument	dir
>1790	Identifier	dir
>1791	Callee	getCurrentDestDir
>1792	Identifier	getCurrentDestDir
>1793	Identifier	dir
>1794	IfStatement	if ( ! dir . cd ( dest ) )
>1795	CompoundStatement	 
>1796	ReturnStatement	 
>1797	ExpressionStatement	 
>1798	ShiftExpression	qDebug ( ) << \"Failed creating destdir\" << dest
>1799	ShiftExpression	\"Failed creating destdir\" << dest
>1800	Identifier	dest
>1801	PrimaryExpression	\"Failed creating destdir\"
>1802	CallExpression	qDebug ( )
>1803	ArgumentList	 
>1804	Callee	qDebug
>1805	Identifier	qDebug
>1806	Condition	 
>1807	UnaryOp	! dir . cd ( dest )
>1808	CallExpression	dir . cd ( dest )
>1809	ArgumentList	dest
>1810	Argument	dest
>1811	Identifier	dest
>1812	Callee	dir . cd
>1813	MemberAccess	dir . cd
>1814	Identifier	cd
>1815	Identifier	dir
>1816	UnaryOperator	!
>1817	ExpressionStatement	 
>1818	CallExpression	dir . mkpath ( dest )
>1819	ArgumentList	dest
>1820	Argument	dest
>1821	Identifier	dest
>1822	Callee	dir . mkpath
>1823	MemberAccess	dir . mkpath
>1824	Identifier	mkpath
>1825	Identifier	dir
>1826	IdentifierDeclStatement	 
>1827	IdentifierDecl	dir
>1828	Identifier	dir
>1829	IdentifierDeclType	QDir
>1830	ExpressionStatement	 
>1831	CallExpression	url . setQuery ( QUrlQuery ( ) )
>1832	ArgumentList	QUrlQuery ( )
>1833	Argument	QUrlQuery ( )
>1834	CallExpression	QUrlQuery ( )
>1835	ArgumentList	 
>1836	Callee	QUrlQuery
>1837	Identifier	QUrlQuery
>1838	Callee	url . setQuery
>1839	MemberAccess	url . setQuery
>1840	Identifier	setQuery
>1841	Identifier	url
>1842	ExpressionStatement	 
>1843	CallExpression	url . setPath ( path )
>1844	ArgumentList	path
>1845	Argument	path
>1846	Identifier	path
>1847	Callee	url . setPath
>1848	MemberAccess	url . setPath
>1849	Identifier	setPath
>1850	Identifier	url
>1851	ExpressionStatement	 
>1852	AssignmentExpr	path = path . left ( path . lastIndexOf ( '/' ) + 1 ) + name
>1853	AdditiveExpression	path . left ( path . lastIndexOf ( '/' ) + 1 ) + name
>1854	Identifier	name
>1855	CallExpression	path . left ( path . lastIndexOf ( '/' ) + 1 )
>1856	ArgumentList	path . lastIndexOf ( '/' ) + 1
>1857	Argument	path . lastIndexOf ( '/' ) + 1
>1858	AdditiveExpression	path . lastIndexOf ( '/' ) + 1
>1859	PrimaryExpression	1
>1860	CallExpression	path . lastIndexOf ( '/' )
>1861	ArgumentList	'/'
>1862	Argument	'/'
>1863	PrimaryExpression	'/'
>1864	Callee	path . lastIndexOf
>1865	MemberAccess	path . lastIndexOf
>1866	Identifier	lastIndexOf
>1867	Identifier	path
>1868	Callee	path . left
>1869	MemberAccess	path . left
>1870	Identifier	left
>1871	Identifier	path
>1872	Identifier	path
>1873	IdentifierDeclStatement	 
>1874	IdentifierDecl	path = url . path ( )
>1875	AssignmentExpr	path = url . path ( )
>1876	CallExpression	url . path ( )
>1877	ArgumentList	 
>1878	Callee	url . path
>1879	MemberAccess	url . path
>1880	Identifier	path
>1881	Identifier	url
>1882	Identifier	path
>1883	Identifier	path
>1884	IdentifierDeclType	QString
>1885	IdentifierDeclStatement	 
>1886	IdentifierDecl	url = m3uUrl
>1887	AssignmentExpr	url = m3uUrl
>1888	Identifier	m3uUrl
>1889	Identifier	m3uUrl
>1890	Identifier	url
>1891	IdentifierDeclType	QUrl
>1923	FunctionDef	TwitchHandler 
>1924	ParameterList	const QString & name , const QString & path , QNetworkReply * reply
>1925	Parameter	 
>1926	Identifier	reply
>1927	ParameterType	QNetworkReply *
>1928	Parameter	 
>1929	Identifier	path
>1930	ParameterType	const QString &
>1931	Parameter	 
>1932	Identifier	name
>1933	ParameterType	const QString &
>1934	ReturnType	void
>1935	CompoundStatement	 
>1936	IfStatement	if ( written == data . length ( ) )
>1937	ElseStatement	else
>1938	CompoundStatement	 
>1939	ExpressionStatement	 
>1940	CallExpression	file . remove ( )
>1941	ArgumentList	 
>1942	Callee	file . remove
>1943	MemberAccess	file . remove
>1944	Identifier	remove
>1945	Identifier	file
>1946	ExpressionStatement	 
>1947	ShiftExpression	qDebug ( ) << \"Error writing full data to file!\"
>1948	PrimaryExpression	\"Error writing full data to file!\"
>1949	CallExpression	qDebug ( )
>1950	ArgumentList	 
>1951	Callee	qDebug
>1952	Identifier	qDebug
>1953	CompoundStatement	 
>1954	ExpressionStatement	 
>1955	CallExpression	recentlyLoaded . insert ( name )
>1956	ArgumentList	name
>1957	Argument	name
>1958	Identifier	name
>1959	Callee	recentlyLoaded . insert
>1960	MemberAccess	recentlyLoaded . insert
>1961	Identifier	insert
>1962	Identifier	recentlyLoaded
>1963	ExpressionStatement	 
>1964	ShiftExpression	qDebug ( ) << \"Wrote\" << path
>1965	ShiftExpression	\"Wrote\" << path
>1966	Identifier	path
>1967	PrimaryExpression	\"Wrote\"
>1968	CallExpression	qDebug ( )
>1969	ArgumentList	 
>1970	Callee	qDebug
>1971	Identifier	qDebug
>1972	Condition	 
>1973	EqualityExpression	written == data . length ( )
>1974	CallExpression	data . length ( )
>1975	ArgumentList	 
>1976	Callee	data . length
>1977	MemberAccess	data . length
>1978	Identifier	length
>1979	Identifier	data
>1980	Identifier	written
>1981	ExpressionStatement	 
>1982	CallExpression	file . close ( )
>1983	ArgumentList	 
>1984	Callee	file . close
>1985	MemberAccess	file . close
>1986	Identifier	close
>1987	Identifier	file
>1988	IdentifierDeclStatement	 
>1989	IdentifierDecl	written = file . write ( data )
>1990	AssignmentExpr	written = file . write ( data )
>1991	CallExpression	file . write ( data )
>1992	ArgumentList	data
>1993	Argument	data
>1994	Identifier	data
>1995	Callee	file . write
>1996	MemberAccess	file . write
>1997	Identifier	write
>1998	Identifier	file
>1999	Identifier	written
>2000	Identifier	written
>2001	IdentifierDeclType	qint64
>2002	IdentifierDeclStatement	 
>2003	IdentifierDecl	data = reply -> readAll ( )
>2004	AssignmentExpr	data = reply -> readAll ( )
>2005	CallExpression	reply -> readAll ( )
>2006	ArgumentList	 
>2007	Callee	reply -> readAll
>2008	PtrMemberAccess	reply -> readAll
>2009	Identifier	readAll
>2010	Identifier	reply
>2011	Identifier	data
>2012	Identifier	data
>2013	IdentifierDeclType	QByteArray
>2014	IfStatement	if ( ! file . open ( QFile 
>2015	CompoundStatement	 
>2016	ReturnStatement	 
>2017	ExpressionStatement	 
>2018	ShiftExpression	qDebug ( ) << \"Failed opening\" << path << \"for writing\"
>2019	ShiftExpression	\"Failed opening\" << path << \"for writing\"
>2020	ShiftExpression	path << \"for writing\"
>2021	PrimaryExpression	\"for writing\"
>2022	Identifier	path
>2023	PrimaryExpression	\"Failed opening\"
>2024	CallExpression	qDebug ( )
>2025	ArgumentList	 
>2026	Callee	qDebug
>2027	Identifier	qDebug
>2028	Condition	 
>2029	UnaryOp	! file . open ( QFile 
>2030	CallExpression	file . open ( QFile 
>2031	ArgumentList	QFile 
>2032	Argument	QFile 
>2033	Identifier	QFile 
>2034	Callee	file . open
>2035	MemberAccess	file . open
>2036	Identifier	open
>2037	Identifier	file
>2038	UnaryOperator	!
>2039	IdentifierDeclStatement	 
>2040	IdentifierDecl	file ( path )
>2041	Identifier	path
>2042	Identifier	file
>2043	IdentifierDeclType	QFile
>2044	IfStatement	if ( code != 200 )
>2045	CompoundStatement	 
>2046	ReturnStatement	 
>2047	ExpressionStatement	 
>2048	ShiftExpression	qDebug ( ) << \"Get save failed
>2049	ShiftExpression	\"Get save failed
>2050	Identifier	code
>2051	PrimaryExpression	\"Get save failed
>2052	CallExpression	qDebug ( )
>2053	ArgumentList	 
>2054	Callee	qDebug
>2055	Identifier	qDebug
>2056	Condition	 
>2057	EqualityExpression	code != 200
>2058	PrimaryExpression	200
>2059	Identifier	code
>2060	IfStatement	if ( code >= 300 && code <= 310 )
>2061	CompoundStatement	 
>2062	ReturnStatement	 
>2063	ExpressionStatement	 
>2064	Statement	 
>2065	CompoundStatement	 
>2066	ExpressionStatement	 
>2067	CallExpression	savePart ( name , path , reply )
>2068	ArgumentList	name
>2069	Argument	reply
>2070	Identifier	reply
>2071	Argument	path
>2072	Identifier	path
>2073	Argument	name
>2074	Identifier	name
>2075	Callee	savePart
>2076	Identifier	savePart
>2077	Statement	 
>2078	Statement	 
>2079	Statement	 
>2080	Statement	 
>2081	Statement	 
>2082	Statement	 
>2083	Statement	 
>2084	Statement	 
>2085	Statement	 
>2086	Statement	 
>2087	Statement	 
>2088	Statement	 
>2089	Statement	 
>2090	Statement	 
>2091	Statement	 
>2092	Statement	 
>2093	Statement	 
>2094	Statement	 
>2095	Statement	 
>2096	Statement	 
>2097	Statement	 
>2098	Statement	 
>2099	IdentifierDeclStatement	 
>2100	IdentifierDecl	* reply = nam -> get ( req )
>2101	AssignmentExpr	* reply = nam -> get ( req )
>2102	CallExpression	nam -> get ( req )
>2103	ArgumentList	req
>2104	Argument	req
>2105	Identifier	req
>2106	Callee	nam -> get
>2107	PtrMemberAccess	nam -> get
>2108	Identifier	get
>2109	Identifier	nam
>2110	Identifier	reply
>2111	Identifier	reply
>2112	IdentifierDeclType	QNetworkReply *
>2113	IdentifierDeclStatement	 
>2114	IdentifierDecl	req ( reply -> attribute ( QNetworkRequest 
>2115	CallExpression	reply -> attribute ( QNetworkRequest 
>2116	ArgumentList	 
>2117	Callee	reply -> attribute ( QNetworkRequest 
>2118	MemberAccess	reply -> attribute ( QNetworkRequest 
>2119	Identifier	toString
>2120	CallExpression	reply -> attribute ( QNetworkRequest 
>2121	ArgumentList	QNetworkRequest 
>2122	Argument	QNetworkRequest 
>2123	Identifier	QNetworkRequest 
>2124	Callee	reply -> attribute
>2125	PtrMemberAccess	reply -> attribute
>2126	Identifier	attribute
>2127	Identifier	reply
>2128	Identifier	req
>2129	IdentifierDeclType	QNetworkRequest
>2130	ExpressionStatement	 
>2131	ShiftExpression	qDebug ( ) << \"save redirected to\" << reply -> attribute ( QNetworkRequest 
>2132	ShiftExpression	\"save redirected to\" << reply -> attribute ( QNetworkRequest 
>2133	CallExpression	reply -> attribute ( QNetworkRequest 
>2134	ArgumentList	QNetworkRequest 
>2135	Argument	QNetworkRequest 
>2136	Identifier	QNetworkRequest 
>2137	Callee	reply -> attribute
>2138	PtrMemberAccess	reply -> attribute
>2139	Identifier	attribute
>2140	Identifier	reply
>2141	PrimaryExpression	\"save redirected to\"
>2142	CallExpression	qDebug ( )
>2143	ArgumentList	 
>2144	Callee	qDebug
>2145	Identifier	qDebug
>2146	Condition	 
>2147	AndExpression	code >= 300 && code <= 310
>2148	RelationalExpression	code <= 310
>2149	PrimaryExpression	310
>2150	Identifier	code
>2151	RelationalExpression	code >= 300
>2152	PrimaryExpression	300
>2153	Identifier	code
>2154	IdentifierDeclStatement	 
>2155	IdentifierDecl	code = reply -> attribute ( QNetworkRequest 
>2156	AssignmentExpr	code = reply -> attribute ( QNetworkRequest 
>2157	CallExpression	reply -> attribute ( QNetworkRequest 
>2158	ArgumentList	 
>2159	Callee	reply -> attribute ( QNetworkRequest 
>2160	MemberAccess	reply -> attribute ( QNetworkRequest 
>2161	Identifier	toInt
>2162	CallExpression	reply -> attribute ( QNetworkRequest 
>2163	ArgumentList	QNetworkRequest 
>2164	Argument	QNetworkRequest 
>2165	Identifier	QNetworkRequest 
>2166	Callee	reply -> attribute
>2167	PtrMemberAccess	reply -> attribute
>2168	Identifier	attribute
>2169	Identifier	reply
>2170	Identifier	code
>2171	Identifier	code
>2172	IdentifierDeclType	int
>2173	IfStatement	if ( reply -> error ( ) != QNetworkReply 
>2174	CompoundStatement	 
>2175	ReturnStatement	 
>2176	ExpressionStatement	 
>2177	ShiftExpression	qDebug ( ) << \"save get error!\"
>2178	PrimaryExpression	\"save get error!\"
>2179	CallExpression	qDebug ( )
>2180	ArgumentList	 
>2181	Callee	qDebug
>2182	Identifier	qDebug
>2183	Condition	 
>2184	EqualityExpression	reply -> error ( ) != QNetworkReply 
>2185	Identifier	QNetworkReply 
>2186	CallExpression	reply -> error ( )
>2187	ArgumentList	 
>2188	Callee	reply -> error
>2189	PtrMemberAccess	reply -> error
>2190	Identifier	error
>2191	Identifier	reply
<3=17,4
<4=14,11,8,5
<5=7,6
<8=10,9
<11=13,12
<14=16,15
<17=204,195,194,193,192,191,190,189,188,187,186,185,177,176,163,158,149,142,129,120,113,109,100,91,87,78,69,52,35,18
<18=19
<19=33,20
<20=31,27,25,21
<21=22
<22=24,23
<25=26
<27=28
<28=30,29
<31=32
<33=34
<35=36
<36=50,37
<37=48,44,42,38
<38=39
<39=41,40
<42=43
<44=45
<45=47,46
<48=49
<50=51
<52=53
<53=67,54
<54=65,61,59,55
<55=56
<56=58,57
<59=60
<61=62
<62=64,63
<65=66
<67=68
<69=70
<70=74,71
<71=72
<72=73
<74=75
<75=77,76
<78=79
<79=83,80
<80=81
<81=82
<83=84
<84=86,85
<87=88
<88=90,89
<91=92
<92=96,93
<93=94
<94=95
<96=97
<97=99,98
<100=101
<101=105,102
<102=103
<103=104
<105=106
<106=108,107
<109=110
<110=112,111
<113=114
<114=116,115
<116=117
<117=119,118
<120=121
<121=125,122
<122=123
<123=124
<125=126
<126=128,127
<129=130
<130=138,131
<131=132
<132=133
<133=137,134
<134=136,135
<138=139
<139=141,140
<142=143
<143=148,147,144
<144=146,145
<149=150
<150=154,151
<151=152
<152=153
<154=155
<155=157,156
<158=159
<159=161,160
<161=162
<163=164
<164=174,165
<165=172,168,166
<166=167
<168=169
<169=171,170
<172=173
<174=175
<177=178
<178=179
<179=181,180
<181=182
<182=184,183
<195=196
<196=200,197
<197=198
<198=199
<200=201
<201=203,202
<204=205
<205=207,206
<229=232,231,230
<232=312,293,284,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,244,243,242,233
<233=234
<234=238,235
<235=237,236
<238=240,239
<240=241
<244=245
<245=246
<246=250,247
<247=248
<248=249
<250=251
<270=271
<271=283,282,272
<272=281,273
<273=277,274
<274=275
<275=276
<277=278
<278=280,279
<284=285
<285=289,286
<286=287
<287=288
<289=290
<290=292,291
<293=294
<294=311,310,295
<295=309,296
<296=300,297
<297=298
<298=299
<300=301
<301=303,302
<303=307,304
<304=305
<305=306
<307=308
<312=313
<313=315,314
<328=334,333,329
<329=330
<330=332,331
<334=775,756,670,647,635,631,615,585,561,537,495,491,472,468,457,446,435,424,413,404,395,384,383,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,358,357,356,349,335
<335=336
<336=345,337
<337=344,338
<338=340,339
<340=341
<341=343,342
<345=347,346
<347=348
<349=350
<350=352,351
<352=353
<353=355,354
<358=359
<359=360
<360=364,361
<361=362
<362=363
<364=365
<384=385
<385=394,386
<386=390,387
<387=388
<388=389
<390=391
<391=393,392
<395=396
<396=400,397
<397=398
<398=399
<400=401
<401=403,402
<404=405
<405=409,406
<406=407
<407=408
<409=410
<410=412,411
<413=414
<414=420,415
<415=418,416
<416=417
<418=419
<420=421
<421=423,422
<424=425
<425=431,426
<426=429,427
<427=428
<429=430
<431=432
<432=434,433
<435=436
<436=442,437
<437=440,438
<438=439
<440=441
<442=443
<443=445,444
<446=447
<447=453,448
<448=451,449
<449=450
<451=452
<453=454
<454=456,455
<457=458
<458=464,459
<459=462,460
<460=461
<462=463
<464=465
<465=467,466
<468=469
<469=471,470
<472=473
<473=490,489,474
<474=488,475
<475=479,476
<476=477
<477=478
<479=480
<480=482,481
<482=486,483
<483=484
<484=485
<486=487
<491=492
<492=494,493
<495=519,506,496
<496=497
<497=499,498
<499=500
<500=502,501
<502=504,503
<504=505
<506=515,511,507
<507=508
<508=510,509
<511=512
<512=514,513
<515=516
<516=518,517
<519=520
<520=529,521
<521=528,522
<522=524,523
<524=525
<525=527,526
<529=536,530
<530=532,531
<532=533
<533=535,534
<537=538
<538=560,559,539
<539=558,540
<540=542,541
<542=543
<543=545,544
<545=549,546
<546=547
<547=548
<549=550
<550=552,551
<552=554,553
<554=555
<555=557,556
<561=562
<562=584,583,563
<563=582,564
<564=566,565
<566=567
<567=569,568
<569=573,570
<570=571
<571=572
<573=574
<574=576,575
<576=578,577
<578=579
<579=581,580
<585=609,586
<586=595,588,587
<588=589
<589=591,590
<591=592
<592=594,593
<595=596
<596=605,597
<597=604,598
<598=600,599
<600=601
<601=603,602
<605=607,606
<607=608
<609=610
<610=612,611
<612=614,613
<615=616
<616=630,629,617
<617=628,618
<618=626,619
<619=624,620
<620=621
<621=623,622
<624=625
<626=627
<631=632
<632=634,633
<635=636
<636=646,645,637
<637=644,638
<638=640,639
<640=641
<641=643,642
<647=666,648
<648=657,650,649
<650=651
<651=653,652
<653=654
<654=656,655
<657=658
<658=662,659
<659=661,660
<662=664,663
<664=665
<666=667
<667=669,668
<670=748,671
<671=732,715,701,700,699,698,697,696,695,694,693,692,691,690,689,688,687,686,685,684,683,675,674,673,672
<675=676
<676=677
<677=681,678
<678=679
<679=680
<681=682
<701=702
<702=714,713,703
<703=712,704
<704=708,705
<705=706
<706=707
<708=709
<709=711,710
<715=716
<716=731,730,717
<717=719,718
<719=720
<720=722,721
<722=726,723
<723=724
<724=725
<726=727
<727=729,728
<732=733
<733=744,734
<734=743,735
<735=739,736
<736=737
<737=738
<739=740
<740=742,741
<744=746,745
<746=747
<748=749
<749=753,750
<750=752,751
<753=755,754
<756=757
<757=774,773,758
<758=772,759
<759=761,760
<761=762
<762=764,763
<764=768,765
<765=766
<766=767
<768=769
<769=771,770
<775=792,776
<776=785,778,777
<778=779
<779=781,780
<781=782
<782=784,783
<785=786
<786=788,787
<788=790,789
<790=791
<792=793
<793=795,794
<795=797,796
<797=798
<798=800,799
<844=850,849,845
<845=846
<846=848,847
<850=1091,1072,986,963,946,920,906,905,904,903,902,901,899,898,897,865,858,851
<851=852
<852=854,853
<854=855
<855=857,856
<858=859
<859=861,860
<861=863,862
<863=864
<865=885,866
<866=876,867
<867=869,868
<869=870
<870=874,871
<871=872
<872=873
<874=875
<876=877
<877=881,878
<878=879
<879=880
<881=882
<882=884,883
<885=886
<886=896,895,887
<887=894,888
<888=890,889
<890=891
<891=893,892
<899=900
<906=907
<907=919,918,908
<908=917,909
<909=913,910
<910=911
<911=912
<913=914
<914=916,915
<920=937,921
<921=930,923,922
<923=924
<924=926,925
<926=927
<927=929,928
<930=931
<931=933,932
<933=935,934
<935=936
<937=938
<938=940,939
<940=942,941
<942=943
<943=945,944
<946=947
<947=962,961,948
<948=960,949
<949=958,950
<950=951
<951=952
<952=954,953
<954=955
<955=957,956
<958=959
<963=982,964
<964=973,966,965
<966=967
<967=969,968
<969=970
<970=972,971
<973=974
<974=978,975
<975=977,976
<978=980,979
<980=981
<982=983
<983=985,984
<986=1064,987
<987=1048,1031,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,1000,999,991,990,989,988
<991=992
<992=993
<993=997,994
<994=995
<995=996
<997=998
<1017=1018
<1018=1030,1029,1019
<1019=1028,1020
<1020=1024,1021
<1021=1022
<1022=1023
<1024=1025
<1025=1027,1026
<1031=1032
<1032=1047,1046,1033
<1033=1035,1034
<1035=1036
<1036=1038,1037
<1038=1042,1039
<1039=1040
<1040=1041
<1042=1043
<1043=1045,1044
<1048=1049
<1049=1060,1050
<1050=1059,1051
<1051=1055,1052
<1052=1053
<1053=1054
<1055=1056
<1056=1058,1057
<1060=1062,1061
<1062=1063
<1064=1065
<1065=1069,1066
<1066=1068,1067
<1069=1071,1070
<1072=1073
<1073=1090,1089,1074
<1074=1088,1075
<1075=1077,1076
<1077=1078
<1078=1080,1079
<1080=1084,1081
<1081=1082
<1082=1083
<1084=1085
<1085=1087,1086
<1091=1108,1092
<1092=1101,1094,1093
<1094=1095
<1095=1097,1096
<1097=1098
<1098=1100,1099
<1101=1102
<1102=1104,1103
<1104=1106,1105
<1106=1107
<1108=1109
<1109=1111,1110
<1111=1113,1112
<1113=1114
<1114=1116,1115
<1144=1150,1149,1145
<1145=1146
<1146=1148,1147
<1150=1167,1163,1156,1151
<1151=1152
<1152=1154,1153
<1154=1155
<1156=1157
<1157=1159,1158
<1159=1160
<1160=1162,1161
<1163=1164
<1164=1166,1165
<1167=1168
<1168=1170,1169
<1179=1182,1181,1180
<1182=1238,1234,1225,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199,1198,1197,1196,1195,1194,1193,1185,1184,1183
<1185=1186
<1186=1187
<1187=1191,1188
<1188=1189
<1189=1190
<1191=1192
<1211=1212
<1212=1224,1223,1213
<1213=1222,1214
<1214=1218,1215
<1215=1216
<1216=1217
<1218=1219
<1219=1221,1220
<1225=1226
<1226=1230,1227
<1227=1228
<1228=1229
<1230=1231
<1231=1233,1232
<1234=1235
<1235=1237,1236
<1238=1248,1239
<1239=1241,1240
<1241=1242
<1242=1244,1243
<1244=1246,1245
<1246=1247
<1248=1249
<1249=1251,1250
<1262=1268,1267,1263
<1263=1264
<1264=1266,1265
<1268=1470,1451,1365,1335,1318,1304,1303,1302,1301,1300,1299,1297,1296,1295,1269
<1269=1277,1270
<1270=1271
<1271=1275,1272
<1272=1273
<1273=1274
<1275=1276
<1277=1279,1278
<1279=1280
<1280=1287,1281
<1281=1283,1282
<1283=1284
<1284=1286,1285
<1287=1291,1288
<1288=1289
<1289=1290
<1291=1292
<1292=1294,1293
<1297=1298
<1304=1305
<1305=1317,1316,1306
<1306=1315,1307
<1307=1311,1308
<1308=1309
<1309=1310
<1311=1312
<1312=1314,1313
<1318=1319
<1319=1334,1333,1320
<1320=1332,1321
<1321=1330,1322
<1322=1323
<1323=1324
<1324=1326,1325
<1326=1327
<1327=1329,1328
<1330=1331
<1335=1361,1336
<1336=1352,1345,1338,1337
<1338=1339
<1339=1341,1340
<1341=1342
<1342=1344,1343
<1345=1346
<1346=1348,1347
<1348=1349
<1349=1351,1350
<1352=1353
<1353=1357,1354
<1354=1356,1355
<1357=1359,1358
<1359=1360
<1361=1362
<1362=1364,1363
<1365=1443,1366
<1366=1427,1410,1396,1395,1394,1393,1392,1391,1390,1389,1388,1387,1386,1385,1384,1383,1382,1381,1380,1379,1378,1370,1369,1368,1367
<1370=1371
<1371=1372
<1372=1376,1373
<1373=1374
<1374=1375
<1376=1377
<1396=1397
<1397=1409,1408,1398
<1398=1407,1399
<1399=1403,1400
<1400=1401
<1401=1402
<1403=1404
<1404=1406,1405
<1410=1411
<1411=1426,1425,1412
<1412=1414,1413
<1414=1415
<1415=1417,1416
<1417=1421,1418
<1418=1419
<1419=1420
<1421=1422
<1422=1424,1423
<1427=1428
<1428=1439,1429
<1429=1438,1430
<1430=1434,1431
<1431=1432
<1432=1433
<1434=1435
<1435=1437,1436
<1439=1441,1440
<1441=1442
<1443=1444
<1444=1448,1445
<1445=1447,1446
<1448=1450,1449
<1451=1452
<1452=1469,1468,1453
<1453=1467,1454
<1454=1456,1455
<1456=1457
<1457=1459,1458
<1459=1463,1460
<1460=1461
<1461=1462
<1463=1464
<1464=1466,1465
<1470=1494,1471
<1471=1487,1480,1473,1472
<1473=1474
<1474=1476,1475
<1476=1477
<1477=1479,1478
<1480=1481
<1481=1483,1482
<1483=1484
<1484=1486,1485
<1487=1488
<1488=1490,1489
<1490=1492,1491
<1492=1493
<1494=1495
<1495=1497,1496
<1497=1499,1498
<1499=1500
<1500=1502,1501
<1530=1536,1535,1531
<1531=1532
<1532=1534,1533
<1536=1595,1580,1576,1557,1548,1539,1537
<1537=1538
<1539=1540
<1540=1544,1541
<1541=1542
<1542=1543
<1544=1545
<1545=1547,1546
<1548=1549
<1549=1553,1550
<1550=1551
<1551=1552
<1553=1554
<1554=1556,1555
<1557=1558
<1558=1575,1574,1559
<1559=1573,1560
<1560=1564,1561
<1561=1562
<1562=1563
<1564=1565
<1565=1567,1566
<1567=1571,1568
<1568=1569
<1569=1570
<1571=1572
<1576=1577
<1577=1579,1578
<1580=1581
<1581=1594,1593,1582
<1582=1592,1583
<1583=1585,1584
<1585=1586
<1586=1588,1587
<1588=1590,1589
<1590=1591
<1595=1596
<1596=1601,1600,1597
<1597=1599,1598
<1614=1620,1619,1615
<1615=1616
<1616=1618,1617
<1620=1885,1873,1851,1842,1830,1826,1817,1794,1785,1751,1730,1718,1714,1705,1691,1690,1689,1688,1687,1686,1685,1684,1683,1682,1681,1680,1679,1678,1677,1676,1675,1674,1673,1672,1671,1650,1649,1648,1639,1621
<1621=1622
<1622=1635,1623
<1623=1634,1624
<1624=1628,1625
<1625=1627,1626
<1628=1630,1629
<1630=1631
<1631=1633,1632
<1635=1637,1636
<1637=1638
<1639=1640
<1640=1644,1641
<1641=1642
<1642=1643
<1644=1645
<1645=1647,1646
<1650=1662,1651
<1651=1652
<1652=1660,1653
<1653=1658,1656,1654
<1654=1655
<1656=1657
<1658=1659
<1660=1661
<1662=1663
<1663=1667,1664
<1664=1665
<1665=1666
<1667=1668
<1668=1670,1669
<1691=1692
<1692=1704,1703,1693
<1693=1702,1694
<1694=1698,1695
<1695=1696
<1696=1697
<1698=1699
<1699=1701,1700
<1705=1706
<1706=1710,1707
<1707=1708
<1708=1709
<1710=1711
<1711=1713,1712
<1714=1715
<1715=1717,1716
<1718=1719
<1719=1729,1728,1720
<1720=1727,1721
<1721=1723,1722
<1723=1724
<1724=1726,1725
<1730=1733,1731
<1731=1732
<1733=1734
<1734=1743,1735
<1735=1739,1736
<1736=1737
<1737=1738
<1739=1740
<1740=1742,1741
<1743=1747,1744
<1744=1745
<1745=1746
<1747=1748
<1748=1750,1749
<1751=1752
<1752=1784,1783,1753
<1753=1782,1754
<1754=1758,1755
<1755=1756
<1756=1757
<1758=1759
<1759=1761,1760
<1761=1773,1762
<1762=1763
<1763=1764
<1764=1766,1765
<1766=1767
<1767=1769,1768
<1769=1771,1770
<1771=1772
<1773=1774
<1774=1776,1775
<1776=1780,1777
<1777=1778
<1778=1779
<1780=1781
<1785=1786
<1786=1793,1787
<1787=1791,1788
<1788=1789
<1789=1790
<1791=1792
<1794=1806,1795
<1795=1797,1796
<1797=1798
<1798=1802,1799
<1799=1801,1800
<1802=1804,1803
<1804=1805
<1806=1807
<1807=1816,1808
<1808=1812,1809
<1809=1810
<1810=1811
<1812=1813
<1813=1815,1814
<1817=1818
<1818=1822,1819
<1819=1820
<1820=1821
<1822=1823
<1823=1825,1824
<1826=1827
<1827=1829,1828
<1830=1831
<1831=1838,1832
<1832=1833
<1833=1834
<1834=1836,1835
<1836=1837
<1838=1839
<1839=1841,1840
<1842=1843
<1843=1847,1844
<1844=1845
<1845=1846
<1847=1848
<1848=1850,1849
<1851=1852
<1852=1872,1853
<1853=1855,1854
<1855=1868,1856
<1856=1857
<1857=1858
<1858=1860,1859
<1860=1864,1861
<1861=1862
<1862=1863
<1864=1865
<1865=1867,1866
<1868=1869
<1869=1871,1870
<1873=1874
<1874=1884,1883,1875
<1875=1882,1876
<1876=1878,1877
<1878=1879
<1879=1881,1880
<1885=1886
<1886=1891,1890,1887
<1887=1889,1888
<1923=1935,1934,1924
<1924=1931,1928,1925
<1925=1927,1926
<1928=1930,1929
<1931=1933,1932
<1935=2173,2154,2060,2044,2039,2014,2002,1988,1981,1936
<1936=1972,1953,1937
<1937=1938
<1938=1946,1939
<1939=1940
<1940=1942,1941
<1942=1943
<1943=1945,1944
<1946=1947
<1947=1949,1948
<1949=1951,1950
<1951=1952
<1953=1963,1954
<1954=1955
<1955=1959,1956
<1956=1957
<1957=1958
<1959=1960
<1960=1962,1961
<1963=1964
<1964=1968,1965
<1965=1967,1966
<1968=1970,1969
<1970=1971
<1972=1973
<1973=1980,1974
<1974=1976,1975
<1976=1977
<1977=1979,1978
<1981=1982
<1982=1984,1983
<1984=1985
<1985=1987,1986
<1988=1989
<1989=2001,2000,1990
<1990=1999,1991
<1991=1995,1992
<1992=1993
<1993=1994
<1995=1996
<1996=1998,1997
<2002=2003
<2003=2013,2012,2004
<2004=2011,2005
<2005=2007,2006
<2007=2008
<2008=2010,2009
<2014=2028,2015
<2015=2017,2016
<2017=2018
<2018=2024,2019
<2019=2023,2020
<2020=2022,2021
<2024=2026,2025
<2026=2027
<2028=2029
<2029=2038,2030
<2030=2034,2031
<2031=2032
<2032=2033
<2034=2035
<2035=2037,2036
<2039=2040
<2040=2043,2042,2041
<2044=2056,2045
<2045=2047,2046
<2047=2048
<2048=2052,2049
<2049=2051,2050
<2052=2054,2053
<2054=2055
<2056=2057
<2057=2059,2058
<2060=2146,2061
<2061=2130,2113,2099,2098,2097,2096,2095,2094,2093,2092,2091,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2080,2079,2078,2077,2065,2064,2063,2062
<2065=2066
<2066=2067
<2067=2075,2068
<2068=2073,2071,2069
<2069=2070
<2071=2072
<2073=2074
<2075=2076
<2099=2100
<2100=2112,2111,2101
<2101=2110,2102
<2102=2106,2103
<2103=2104
<2104=2105
<2106=2107
<2107=2109,2108
<2113=2114
<2114=2129,2128,2115
<2115=2117,2116
<2117=2118
<2118=2120,2119
<2120=2124,2121
<2121=2122
<2122=2123
<2124=2125
<2125=2127,2126
<2130=2131
<2131=2142,2132
<2132=2141,2133
<2133=2137,2134
<2134=2135
<2135=2136
<2137=2138
<2138=2140,2139
<2142=2144,2143
<2144=2145
<2146=2147
<2147=2151,2148
<2148=2150,2149
<2151=2153,2152
<2154=2155
<2155=2172,2171,2156
<2156=2170,2157
<2157=2159,2158
<2159=2160
<2160=2162,2161
<2162=2166,2163
<2163=2164
<2164=2165
<2166=2167
<2167=2169,2168
<2173=2183,2174
<2174=2176,2175
<2176=2177
<2177=2179,2178
<2179=2181,2180
<2181=2182
<2183=2184
<2184=2186,2185
<2186=2188,2187
<2188=2189
<2189=2191,2190
