>11	FunctionDef	IsValidSocket (int socketDescriptor)
>12	ParameterList	int socketDescriptor
>13	Parameter	 
>14	Identifier	socketDescriptor
>15	ParameterType	int
>16	ReturnType	bool
>17	CompoundStatement	 
>18	ReturnStatement	 
>19	RelationalExpression	socketDescriptor >= 0
>20	PrimaryExpression	0
>21	Identifier	socketDescriptor
>26	FunctionDef	GetLastSocketError ()
>27	ParameterList	 
>28	ReturnType	int
>29	CompoundStatement	 
>30	ReturnStatement	 
>31	Identifier	sys_net_errno
>38	FunctionDef	GetServerIP ()
>39	ParameterList	 
>40	ReturnType	unsigned long
>41	CompoundStatement	 
>42	ExpressionStatement	 
>43	MemberAccess	sin_addr . s_addr
>44	Identifier	s_addr
>45	Identifier	sin_addr
>46	Statement	 
>47	Statement	 
>48	Statement	 
>49	Statement	 
>50	Statement	 
>51	Statement	 
>52	Statement	 
>53	Statement	 
>54	Statement	 
>55	Statement	 
>56	Statement	 
>57	Statement	 
>58	Statement	 
>59	Statement	 
>64	FunctionDef	UDPsocket ()
>65	ParameterList	 
>66	ReturnType	int
>67	CompoundStatement	 
>68	ReturnStatement	 
>69	Identifier	s
>70	IfStatement	if ( ! IsValidSocket ( s ) )
>71	CompoundStatement	 
>72	ExpressionStatement	 
>73	CallExpression	I_Error ( \"can't create socket, error %d\" , err )
>74	ArgumentList	\"can't create socket, error %d\"
>75	Argument	err
>76	Identifier	err
>77	Argument	\"can't create socket, error %d\"
>78	PrimaryExpression	\"can't create socket, error %d\"
>79	Callee	I_Error
>80	Identifier	I_Error
>81	IdentifierDeclStatement	 
>82	IdentifierDecl	err = GetLastSocketError ( )
>83	AssignmentExpr	err = GetLastSocketError ( )
>84	CallExpression	GetLastSocketError ( )
>85	ArgumentList	 
>86	Callee	GetLastSocketError
>87	Identifier	GetLastSocketError
>88	Identifier	err
>89	Identifier	err
>90	IdentifierDeclType	int
>91	Condition	 
>92	UnaryOp	! IsValidSocket ( s )
>93	CallExpression	IsValidSocket ( s )
>94	ArgumentList	s
>95	Argument	s
>96	Identifier	s
>97	Callee	IsValidSocket
>98	Identifier	IsValidSocket
>99	UnaryOperator	!
>100	ExpressionStatement	 
>101	AssignmentExpr	s = socket ( AF_INET , SOCK_DGRAM , IPPROTO_UDP )
>102	CallExpression	socket ( AF_INET , SOCK_DGRAM , IPPROTO_UDP )
>103	ArgumentList	AF_INET
>104	Argument	IPPROTO_UDP
>105	Identifier	IPPROTO_UDP
>106	Argument	SOCK_DGRAM
>107	Identifier	SOCK_DGRAM
>108	Argument	AF_INET
>109	Identifier	AF_INET
>110	Callee	socket
>111	Identifier	socket
>112	Identifier	s
>113	IdentifierDeclStatement	 
>114	IdentifierDecl	s
>115	Identifier	s
>116	IdentifierDeclType	int
>128	FunctionDef	BindToLocalPort (int s , int port)
>129	ParameterList	int s , int port
>130	Parameter	 
>131	Identifier	port
>132	ParameterType	int
>133	Parameter	 
>134	Identifier	s
>135	ParameterType	int
>136	ReturnType	void
>137	CompoundStatement	 
>138	ExpressionStatement	 
>139	AssignmentExpr	v = bind ( s , ( sockaddr * ) & address , sizeof ( address ) )
>140	CallExpression	bind ( s , ( sockaddr * ) & address , sizeof ( address ) )
>141	ArgumentList	s
>142	Argument	sizeof ( address )
>143	SizeofExpr	sizeof ( address )
>144	SizeofOperand	address
>145	Sizeof	sizeof
>146	Argument	( sockaddr * ) & address
>147	CastExpression	( sockaddr * ) & address
>148	UnaryOp	& address
>149	Identifier	address
>150	UnaryOperator	&
>151	CastTarget	sockaddr *
>152	Argument	s
>153	Identifier	s
>154	Callee	bind
>155	Identifier	bind
>156	Identifier	v
>157	ExpressionStatement	 
>158	AssignmentExpr	address . sin_port = port
>159	Identifier	port
>160	MemberAccess	address . sin_port
>161	Identifier	sin_port
>162	Identifier	address
>163	ExpressionStatement	 
>164	AssignmentExpr	address . sin_addr . s_addr = INADDR_ANY
>165	Identifier	INADDR_ANY
>166	MemberAccess	address . sin_addr . s_addr
>167	Identifier	s_addr
>168	MemberAccess	address . sin_addr
>169	Identifier	sin_addr
>170	Identifier	address
>171	ExpressionStatement	 
>172	AssignmentExpr	address . sin_family = AF_INET
>173	Identifier	AF_INET
>174	MemberAccess	address . sin_family
>175	Identifier	sin_family
>176	Identifier	address
>177	ExpressionStatement	 
>178	CallExpression	memset ( & address , 0 , sizeof ( address ) )
>179	ArgumentList	& address
>180	Argument	sizeof ( address )
>181	SizeofExpr	sizeof ( address )
>182	SizeofOperand	address
>183	Sizeof	sizeof
>184	Argument	0
>185	PrimaryExpression	0
>186	Argument	& address
>187	UnaryOp	& address
>188	Identifier	address
>189	UnaryOperator	&
>190	Callee	memset
>191	Identifier	memset
>192	IdentifierDeclStatement	 
>193	IdentifierDecl	address
>194	Identifier	address
>195	IdentifierDeclType	struct sockaddr_in
>196	IdentifierDeclStatement	 
>197	IdentifierDecl	v
>198	Identifier	v
>199	IdentifierDeclType	int
>215	FunctionDef	PacketSend ()
>216	ParameterList	 
>217	ReturnType	void
>218	CompoundStatement	 
>219	CompoundStatement	 
>220	ExpressionStatement	 
>221	Statement	 
>222	Statement	 
>223	Statement	 
>224	Statement	 
>225	Statement	 
>226	Statement	 
>227	Statement	 
>228	Statement	 
>229	Statement	 
>230	Statement	 
>231	Statement	 
>232	Statement	 
>233	Statement	 
>234	Statement	 
>235	Statement	 
>236	Statement	 
>237	Statement	 
>238	Statement	 
>239	Statement	 
>240	Statement	 
>241	Statement	 
>242	Statement	 
>243	Statement	 
>244	Statement	 
>245	Statement	 
>246	Statement	 
>247	Statement	 
>248	Statement	 
>249	Statement	 
>250	Statement	 
>251	Statement	 
>252	Statement	 
>253	Statement	 
>254	Statement	 
>255	Statement	 
>256	Statement	 
>257	Statement	 
>258	Statement	 
>259	Statement	 
>260	Statement	 
>261	Statement	 
>262	Statement	 
>263	Statement	 
>264	Statement	 
>265	Statement	 
>266	CompoundStatement	 
>267	ExpressionStatement	 
>268	MemberAccess	g -> netbuffer -> cmds [ c ] . buttons
>269	Identifier	buttons
>270	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>271	Identifier	c
>272	PtrMemberAccess	g -> netbuffer -> cmds
>273	Identifier	cmds
>274	PtrMemberAccess	g -> netbuffer
>275	Identifier	netbuffer
>276	Identifier	g
>277	Statement	 
>278	Statement	 
>279	Statement	 
>280	Statement	 
>281	Statement	 
>282	Statement	 
>283	Statement	 
>284	Statement	 
>285	Statement	 
>286	Statement	 
>287	ExpressionStatement	 
>288	Statement	 
>289	Statement	 
>290	Statement	 
>291	Statement	 
>292	Statement	 
>293	Statement	 
>294	Statement	 
>295	Statement	 
>296	Statement	 
>297	Statement	 
>298	Statement	 
>299	Statement	 
>300	Statement	 
>301	Statement	 
>302	Statement	 
>303	Statement	 
>304	Statement	 
>305	Statement	 
>306	Statement	 
>307	Statement	 
>308	Statement	 
>309	Statement	 
>310	Statement	 
>311	ExpressionStatement	 
>312	Statement	 
>313	Statement	 
>314	Statement	 
>315	Statement	 
>316	Statement	 
>317	Statement	 
>318	Statement	 
>319	Statement	 
>320	Statement	 
>321	Statement	 
>322	Statement	 
>323	Statement	 
>324	Statement	 
>325	Statement	 
>326	Statement	 
>327	Statement	 
>328	Statement	 
>329	Statement	 
>330	Statement	 
>331	Statement	 
>332	Statement	 
>333	Statement	 
>334	Statement	 
>335	ExpressionStatement	 
>336	MemberAccess	g -> netbuffer -> cmds [ c ] . sidemove
>337	Identifier	sidemove
>338	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>339	Identifier	c
>340	PtrMemberAccess	g -> netbuffer -> cmds
>341	Identifier	cmds
>342	PtrMemberAccess	g -> netbuffer
>343	Identifier	netbuffer
>344	Identifier	g
>345	Statement	 
>346	Statement	 
>347	Statement	 
>348	Statement	 
>349	Statement	 
>350	Statement	 
>351	Statement	 
>352	Statement	 
>353	Statement	 
>354	Statement	 
>355	ExpressionStatement	 
>356	MemberAccess	g -> netbuffer -> cmds [ c ] . forwardmove
>357	Identifier	forwardmove
>358	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>359	Identifier	c
>360	PtrMemberAccess	g -> netbuffer -> cmds
>361	Identifier	cmds
>362	PtrMemberAccess	g -> netbuffer
>363	Identifier	netbuffer
>364	Identifier	g
>365	Statement	 
>366	Statement	 
>367	Statement	 
>368	Statement	 
>369	Statement	 
>370	Statement	 
>371	Statement	 
>372	Statement	 
>373	Statement	 
>374	Statement	 
>375	Statement	 
>376	Statement	 
>377	Statement	 
>378	ExpressionStatement	 
>379	PtrMemberAccess	g -> netbuffer -> numtics
>380	Identifier	numtics
>381	PtrMemberAccess	g -> netbuffer
>382	Identifier	netbuffer
>383	Identifier	g
>384	Statement	 
>385	Statement	 
>386	Statement	 
>387	ExpressionStatement	 
>388	AssignmentExpr	c = 0
>389	PrimaryExpression	0
>390	Identifier	c
>391	Statement	 
>392	Statement	 
>393	ExpressionStatement	 
>394	PtrMemberAccess	g -> netbuffer -> numtics
>395	Identifier	numtics
>396	PtrMemberAccess	g -> netbuffer
>397	Identifier	netbuffer
>398	Identifier	g
>399	Statement	 
>400	Statement	 
>401	Statement	 
>402	Statement	 
>403	Statement	 
>404	ExpressionStatement	 
>405	PtrMemberAccess	g -> netbuffer -> starttic
>406	Identifier	starttic
>407	PtrMemberAccess	g -> netbuffer
>408	Identifier	netbuffer
>409	Identifier	g
>410	Statement	 
>411	Statement	 
>412	Statement	 
>413	Statement	 
>414	Statement	 
>415	ExpressionStatement	 
>416	PtrMemberAccess	g -> netbuffer -> retransmitfrom
>417	Identifier	retransmitfrom
>418	PtrMemberAccess	g -> netbuffer
>419	Identifier	netbuffer
>420	Identifier	g
>421	Statement	 
>422	Statement	 
>423	Statement	 
>424	Statement	 
>425	Statement	 
>426	ExpressionStatement	 
>427	PtrMemberAccess	g -> netbuffer -> player
>428	Identifier	player
>429	PtrMemberAccess	g -> netbuffer
>430	Identifier	netbuffer
>431	Identifier	g
>432	Statement	 
>433	Statement	 
>434	Statement	 
>435	Statement	 
>436	Statement	 
>437	ExpressionStatement	 
>438	Statement	 
>439	Statement	 
>440	Statement	 
>441	Statement	 
>442	Statement	 
>443	Statement	 
>444	Statement	 
>445	Statement	 
>446	Statement	 
>447	Statement	 
>448	Statement	 
>449	Statement	 
>450	Statement	 
>451	Statement	 
>452	Statement	 
>453	ExpressionStatement	 
>454	Statement	 
>455	Statement	 
>456	Statement	 
>457	Statement	 
>458	Statement	 
>459	Statement	 
>460	Statement	 
>461	Statement	 
>462	Statement	 
>463	Statement	 
>464	Statement	 
>465	Statement	 
>466	Statement	 
>467	IdentifierDeclStatement	 
>468	IdentifierDecl	sw
>469	Identifier	sw
>470	IdentifierDeclType	doomdata_t
>471	IdentifierDeclStatement	 
>472	IdentifierDecl	c
>473	Identifier	c
>474	IdentifierDeclType	int
>490	FunctionDef	PacketGet ()
>491	ParameterList	 
>492	ReturnType	void
>493	CompoundStatement	 
>494	CompoundStatement	 
>495	ExpressionStatement	 
>496	AssignmentExpr	g -> netbuffer -> cmds [ c ] . buttons = sw . cmds [ c ] . buttons
>497	MemberAccess	sw . cmds [ c ] . buttons
>498	Identifier	buttons
>499	ArrayIndexing	sw . cmds [ c ]
>500	Identifier	c
>501	MemberAccess	sw . cmds
>502	Identifier	cmds
>503	Identifier	sw
>504	MemberAccess	g -> netbuffer -> cmds [ c ] . buttons
>505	Identifier	buttons
>506	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>507	Identifier	c
>508	PtrMemberAccess	g -> netbuffer -> cmds
>509	Identifier	cmds
>510	PtrMemberAccess	g -> netbuffer
>511	Identifier	netbuffer
>512	Identifier	g
>513	Statement	 
>514	ExpressionStatement	 
>515	AssignmentExpr	g -> netbuffer -> cmds [ c ] . consistancy = ntohs ( sw . cmds [ c ] . consistancy )
>516	CallExpression	ntohs ( sw . cmds [ c ] . consistancy )
>517	ArgumentList	sw . cmds [ c ] . consistancy
>518	Argument	sw . cmds [ c ] . consistancy
>519	MemberAccess	sw . cmds [ c ] . consistancy
>520	Identifier	consistancy
>521	ArrayIndexing	sw . cmds [ c ]
>522	Identifier	c
>523	MemberAccess	sw . cmds
>524	Identifier	cmds
>525	Identifier	sw
>526	Callee	ntohs
>527	Identifier	ntohs
>528	MemberAccess	g -> netbuffer -> cmds [ c ] . consistancy
>529	Identifier	consistancy
>530	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>531	Identifier	c
>532	PtrMemberAccess	g -> netbuffer -> cmds
>533	Identifier	cmds
>534	PtrMemberAccess	g -> netbuffer
>535	Identifier	netbuffer
>536	Identifier	g
>537	Statement	 
>538	ExpressionStatement	 
>539	AssignmentExpr	g -> netbuffer -> cmds [ c ] . angleturn = ntohs ( sw . cmds [ c ] . angleturn )
>540	CallExpression	ntohs ( sw . cmds [ c ] . angleturn )
>541	ArgumentList	sw . cmds [ c ] . angleturn
>542	Argument	sw . cmds [ c ] . angleturn
>543	MemberAccess	sw . cmds [ c ] . angleturn
>544	Identifier	angleturn
>545	ArrayIndexing	sw . cmds [ c ]
>546	Identifier	c
>547	MemberAccess	sw . cmds
>548	Identifier	cmds
>549	Identifier	sw
>550	Callee	ntohs
>551	Identifier	ntohs
>552	MemberAccess	g -> netbuffer -> cmds [ c ] . angleturn
>553	Identifier	angleturn
>554	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>555	Identifier	c
>556	PtrMemberAccess	g -> netbuffer -> cmds
>557	Identifier	cmds
>558	PtrMemberAccess	g -> netbuffer
>559	Identifier	netbuffer
>560	Identifier	g
>561	Statement	 
>562	ExpressionStatement	 
>563	AssignmentExpr	g -> netbuffer -> cmds [ c ] . sidemove = sw . cmds [ c ] . sidemove
>564	MemberAccess	sw . cmds [ c ] . sidemove
>565	Identifier	sidemove
>566	ArrayIndexing	sw . cmds [ c ]
>567	Identifier	c
>568	MemberAccess	sw . cmds
>569	Identifier	cmds
>570	Identifier	sw
>571	MemberAccess	g -> netbuffer -> cmds [ c ] . sidemove
>572	Identifier	sidemove
>573	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>574	Identifier	c
>575	PtrMemberAccess	g -> netbuffer -> cmds
>576	Identifier	cmds
>577	PtrMemberAccess	g -> netbuffer
>578	Identifier	netbuffer
>579	Identifier	g
>580	Statement	 
>581	ExpressionStatement	 
>582	AssignmentExpr	g -> netbuffer -> cmds [ c ] . forwardmove = sw . cmds [ c ] . forwardmove
>583	MemberAccess	sw . cmds [ c ] . forwardmove
>584	Identifier	forwardmove
>585	ArrayIndexing	sw . cmds [ c ]
>586	Identifier	c
>587	MemberAccess	sw . cmds
>588	Identifier	cmds
>589	Identifier	sw
>590	MemberAccess	g -> netbuffer -> cmds [ c ] . forwardmove
>591	Identifier	forwardmove
>592	ArrayIndexing	g -> netbuffer -> cmds [ c ]
>593	Identifier	c
>594	PtrMemberAccess	g -> netbuffer -> cmds
>595	Identifier	cmds
>596	PtrMemberAccess	g -> netbuffer
>597	Identifier	netbuffer
>598	Identifier	g
>599	Statement	 
>600	Statement	 
>601	Statement	 
>602	Statement	 
>603	ExpressionStatement	 
>604	PtrMemberAccess	g -> netbuffer -> numtics
>605	Identifier	numtics
>606	PtrMemberAccess	g -> netbuffer
>607	Identifier	netbuffer
>608	Identifier	g
>609	Statement	 
>610	Statement	 
>611	Statement	 
>612	ExpressionStatement	 
>613	AssignmentExpr	c = 0
>614	PrimaryExpression	0
>615	Identifier	c
>616	Statement	 
>617	Statement	 
>618	ExpressionStatement	 
>619	AssignmentExpr	g -> netbuffer -> numtics = sw . numtics
>620	MemberAccess	sw . numtics
>621	Identifier	numtics
>622	Identifier	sw
>623	PtrMemberAccess	g -> netbuffer -> numtics
>624	Identifier	numtics
>625	PtrMemberAccess	g -> netbuffer
>626	Identifier	netbuffer
>627	Identifier	g
>628	Statement	 
>629	ExpressionStatement	 
>630	AssignmentExpr	g -> netbuffer -> starttic = sw . starttic
>631	MemberAccess	sw . starttic
>632	Identifier	starttic
>633	Identifier	sw
>634	PtrMemberAccess	g -> netbuffer -> starttic
>635	Identifier	starttic
>636	PtrMemberAccess	g -> netbuffer
>637	Identifier	netbuffer
>638	Identifier	g
>639	Statement	 
>640	ExpressionStatement	 
>641	AssignmentExpr	g -> netbuffer -> retransmitfrom = sw . retransmitfrom
>642	MemberAccess	sw . retransmitfrom
>643	Identifier	retransmitfrom
>644	Identifier	sw
>645	PtrMemberAccess	g -> netbuffer -> retransmitfrom
>646	Identifier	retransmitfrom
>647	PtrMemberAccess	g -> netbuffer
>648	Identifier	netbuffer
>649	Identifier	g
>650	Statement	 
>651	ExpressionStatement	 
>652	AssignmentExpr	g -> netbuffer -> player = sw . player
>653	MemberAccess	sw . player
>654	Identifier	player
>655	Identifier	sw
>656	PtrMemberAccess	g -> netbuffer -> player
>657	Identifier	player
>658	PtrMemberAccess	g -> netbuffer
>659	Identifier	netbuffer
>660	Identifier	g
>661	Statement	 
>662	ExpressionStatement	 
>663	AssignmentExpr	g -> netbuffer -> checksum = ntohl ( sw . checksum )
>664	CallExpression	ntohl ( sw . checksum )
>665	ArgumentList	sw . checksum
>666	Argument	sw . checksum
>667	MemberAccess	sw . checksum
>668	Identifier	checksum
>669	Identifier	sw
>670	Callee	ntohl
>671	Identifier	ntohl
>672	PtrMemberAccess	g -> netbuffer -> checksum
>673	Identifier	checksum
>674	PtrMemberAccess	g -> netbuffer
>675	Identifier	netbuffer
>676	Identifier	g
>677	Statement	 
>678	ExpressionStatement	 
>679	AssignmentExpr	g -> doomcom . datalength = ( short ) num_recieved
>680	CastExpression	( short ) num_recieved
>681	Identifier	num_recieved
>682	CastTarget	short
>683	MemberAccess	g -> doomcom . datalength
>684	Identifier	datalength
>685	PtrMemberAccess	g -> doomcom
>686	Identifier	doomcom
>687	Identifier	g
>688	Statement	 
>689	ExpressionStatement	 
>690	AssignmentExpr	g -> doomcom . remotenode = i
>691	Identifier	i
>692	MemberAccess	g -> doomcom . remotenode
>693	Identifier	remotenode
>694	PtrMemberAccess	g -> doomcom
>695	Identifier	doomcom
>696	Identifier	g
>697	Statement	 
>698	ExpressionStatement	 
>699	AssignmentExpr	i = source
>700	Identifier	source
>701	Identifier	i
>702	ExpressionStatement	 
>703	CallExpression	DoomLib 
>704	ArgumentList	sw . sourceDest
>705	Argument	& dest
>706	UnaryOp	& dest
>707	Identifier	dest
>708	UnaryOperator	&
>709	Argument	& source
>710	UnaryOp	& source
>711	Identifier	source
>712	UnaryOperator	&
>713	Argument	sw . sourceDest
>714	MemberAccess	sw . sourceDest
>715	Identifier	sourceDest
>716	Identifier	sw
>717	Callee	DoomLib 
>718	Identifier	DoomLib 
>719	IdentifierDeclStatement	 
>720	IdentifierDecl	dest
>721	Identifier	dest
>722	IdentifierDeclType	int
>723	IdentifierDeclStatement	 
>724	IdentifierDecl	source
>725	Identifier	source
>726	IdentifierDeclType	int
>727	IfStatement	if ( c < 0 )
>728	CompoundStatement	 
>729	ReturnStatement	 
>730	ExpressionStatement	 
>731	AssignmentExpr	g -> doomcom . remotenode = - 1
>732	UnaryOp	- 1
>733	PrimaryExpression	1
>734	UnaryOperator	-
>735	MemberAccess	g -> doomcom . remotenode
>736	Identifier	remotenode
>737	PtrMemberAccess	g -> doomcom
>738	Identifier	doomcom
>739	Identifier	g
>740	Statement	 
>741	Condition	 
>742	RelationalExpression	c < 0
>743	PrimaryExpression	0
>744	Identifier	c
>745	ExpressionStatement	 
>746	AssignmentExpr	c = DoomLib 
>747	CallExpression	DoomLib 
>748	ArgumentList	( char * ) & sw
>749	Argument	& num_recieved
>750	UnaryOp	& num_recieved
>751	Identifier	num_recieved
>752	UnaryOperator	&
>753	Argument	( char * ) & sw
>754	CastExpression	( char * ) & sw
>755	UnaryOp	& sw
>756	Identifier	sw
>757	UnaryOperator	&
>758	CastTarget	char *
>759	Callee	DoomLib 
>760	Identifier	DoomLib 
>761	Identifier	c
>762	ExpressionStatement	 
>763	AssignmentExpr	fromlen = sizeof ( fromaddress )
>764	SizeofExpr	sizeof ( fromaddress )
>765	SizeofOperand	fromaddress
>766	Sizeof	sizeof
>767	Identifier	fromlen
>768	IdentifierDeclStatement	 
>769	IdentifierDecl	num_recieved
>770	Identifier	num_recieved
>771	IdentifierDeclType	DWORD
>772	IdentifierDeclStatement	 
>773	IdentifierDecl	sw
>774	Identifier	sw
>775	IdentifierDeclType	doomdata_t
>776	IdentifierDeclStatement	 
>777	IdentifierDecl	fromlen
>778	Identifier	fromlen
>779	IdentifierDeclType	int
>780	IdentifierDeclStatement	 
>781	IdentifierDecl	fromaddress
>782	Identifier	fromaddress
>783	IdentifierDeclType	struct sockaddr_in
>784	IdentifierDeclStatement	 
>785	IdentifierDecl	c
>786	Identifier	c
>787	IdentifierDeclType	int
>788	IdentifierDeclStatement	 
>789	IdentifierDecl	i
>790	Identifier	i
>791	IdentifierDeclType	int
>847	FunctionDef	I_TrySetupNetwork ()
>848	ParameterList	 
>849	ReturnType	static int
>850	CompoundStatement	 
>851	ReturnStatement	 
>852	PrimaryExpression	1
>856	FunctionDef	I_InitNetwork ()
>857	ParameterList	 
>858	ReturnType	void
>859	CompoundStatement	 
>860	CompoundStatement	 
>861	ExpressionStatement	 
>862	AssignmentExpr	g -> doomcom . ticdup = 9
>863	PrimaryExpression	9
>864	MemberAccess	g -> doomcom . ticdup
>865	Identifier	ticdup
>866	PtrMemberAccess	g -> doomcom
>867	Identifier	doomcom
>868	Identifier	g
>869	Statement	 
>870	Statement	 
>871	Statement	 
>872	Statement	 
>873	Statement	 
>874	Statement	 
>875	Statement	 
>876	Statement	 
>877	Statement	 
>878	Statement	 
>879	Statement	 
>880	Statement	 
>881	ExpressionStatement	 
>882	AssignmentExpr	g -> doomcom . ticdup = 1
>883	PrimaryExpression	1
>884	MemberAccess	g -> doomcom . ticdup
>885	Identifier	ticdup
>886	PtrMemberAccess	g -> doomcom
>887	Identifier	doomcom
>888	Identifier	g
>889	Statement	 
>890	Statement	 
>891	Statement	 
>892	Statement	 
>893	Statement	 
>894	Statement	 
>895	Statement	 
>896	Statement	 
>897	Statement	 
>898	Statement	 
>899	Statement	 
>900	Statement	 
>901	ExpressionStatement	 
>902	AdditiveExpression	g -> myargv [ i + 1 ] [ 0 ] - '0'
>903	PrimaryExpression	'0'
>904	ArrayIndexing	g -> myargv [ i + 1 ] [ 0 ]
>905	PrimaryExpression	0
>906	ArrayIndexing	g -> myargv [ i + 1 ]
>907	AdditiveExpression	i + 1
>908	PrimaryExpression	1
>909	Identifier	i
>910	PtrMemberAccess	g -> myargv
>911	Identifier	myargv
>912	Identifier	g
>913	Statement	 
>914	Statement	 
>915	Statement	 
>916	Statement	 
>917	Statement	 
>918	Statement	 
>919	Statement	 
>920	Statement	 
>921	Statement	 
>922	Statement	 
>923	Statement	 
>924	Statement	 
>925	Statement	 
>926	Statement	 
>927	Statement	 
>928	Statement	 
>929	Statement	 
>930	Statement	 
>931	Statement	 
>932	Statement	 
>933	Statement	 
>934	ExpressionStatement	 
>935	AssignmentExpr	i = M_CheckParm ( \"-dup\" )
>936	CallExpression	M_CheckParm ( \"-dup\" )
>937	ArgumentList	\"-dup\"
>938	Argument	\"-dup\"
>939	PrimaryExpression	\"-dup\"
>940	Callee	M_CheckParm
>941	Identifier	M_CheckParm
>942	Identifier	i
>943	ExpressionStatement	 
>944	Statement	 
>945	Statement	 
>946	Statement	 
>947	Statement	 
>948	Statement	 
>949	Statement	 
>950	Statement	 
>951	Statement	 
>952	Statement	 
>953	Statement	 
>954	Statement	 
>955	Statement	 
>956	Statement	 
>957	Statement	 
>958	Statement	 
>959	Statement	 
>960	Statement	 
>961	Statement	 
>962	IdentifierDeclStatement	 
>963	IdentifierDecl	p
>964	Identifier	p
>965	IdentifierDeclType	int
>966	IdentifierDeclStatement	 
>967	IdentifierDecl	i
>968	Identifier	i
>969	IdentifierDeclType	int
>984	FunctionDef	I_ShutdownNetwork ()
>985	ParameterList	 
>986	ReturnType	void
>987	CompoundStatement	 
>988	IfStatement	if ( globalNetworking && gameLocal != NULL )
>989	CompoundStatement	 
>990	ExpressionStatement	 
>991	AssignmentExpr	globalNetworking = false
>992	Identifier	false
>993	Identifier	globalNetworking
>994	ExpressionStatement	 
>995	CallExpression	DoomLib 
>996	ArgumentList	curPlayer
>997	Argument	curPlayer
>998	Identifier	curPlayer
>999	Callee	DoomLib 
>1000	Identifier	DoomLib 
>1001	ForStatement	for ( int player = 0 ; player < gameLocal -> Interface . GetNumPlayers ( ) ; ++ player )
>1002	CompoundStatement	 
>1003	CompoundStatement	 
>1004	ExpressionStatement	 
>1005	Statement	 
>1006	Statement	 
>1007	Statement	 
>1008	Statement	 
>1009	Statement	 
>1010	Statement	 
>1011	Statement	 
>1012	ExpressionStatement	 
>1013	Statement	 
>1014	Statement	 
>1015	Statement	 
>1016	Statement	 
>1017	Statement	 
>1018	Statement	 
>1019	Statement	 
>1020	Statement	 
>1021	Statement	 
>1022	ExpressionStatement	 
>1023	CallExpression	I_Printf ( \"[-] Shut down sendsocket for player %d\n\" , DoomLib 
>1024	ArgumentList	\"[-] Shut down sendsocket for player %d\n\"
>1025	Argument	DoomLib 
>1026	CallExpression	DoomLib 
>1027	ArgumentList	 
>1028	Callee	DoomLib 
>1029	Identifier	DoomLib 
>1030	Argument	\"[-] Shut down sendsocket for player %d\n\"
>1031	PrimaryExpression	\"[-] Shut down sendsocket for player %d\n\"
>1032	Callee	I_Printf
>1033	Identifier	I_Printf
>1034	Statement	 
>1035	Statement	 
>1036	Statement	 
>1037	Statement	 
>1038	Statement	 
>1039	Statement	 
>1040	Statement	 
>1041	Statement	 
>1042	Statement	 
>1043	Statement	 
>1044	CompoundStatement	 
>1045	ExpressionStatement	 
>1046	Statement	 
>1047	Statement	 
>1048	Statement	 
>1049	Statement	 
>1050	Statement	 
>1051	Statement	 
>1052	Statement	 
>1053	ExpressionStatement	 
>1054	Statement	 
>1055	Statement	 
>1056	Statement	 
>1057	Statement	 
>1058	Statement	 
>1059	Statement	 
>1060	Statement	 
>1061	Statement	 
>1062	Statement	 
>1063	ExpressionStatement	 
>1064	CallExpression	I_Printf ( \"[-] Shut down insocket for player %d\n\" , DoomLib 
>1065	ArgumentList	\"[-] Shut down insocket for player %d\n\"
>1066	Argument	DoomLib 
>1067	CallExpression	DoomLib 
>1068	ArgumentList	 
>1069	Callee	DoomLib 
>1070	Identifier	DoomLib 
>1071	Argument	\"[-] Shut down insocket for player %d\n\"
>1072	PrimaryExpression	\"[-] Shut down insocket for player %d\n\"
>1073	Callee	I_Printf
>1074	Identifier	I_Printf
>1075	Statement	 
>1076	Statement	 
>1077	Statement	 
>1078	Statement	 
>1079	Statement	 
>1080	Statement	 
>1081	Statement	 
>1082	Statement	 
>1083	Statement	 
>1084	Statement	 
>1085	ExpressionStatement	 
>1086	CallExpression	DoomLib 
>1087	ArgumentList	player
>1088	Argument	player
>1089	Identifier	player
>1090	Callee	DoomLib 
>1091	Identifier	DoomLib 
>1092	UnaryExpression	 
>1093	Identifier	player
>1094	IncDec	++
>1095	Condition	 
>1096	RelationalExpression	player < gameLocal -> Interface . GetNumPlayers ( )
>1097	CallExpression	gameLocal -> Interface . GetNumPlayers ( )
>1098	ArgumentList	 
>1099	Callee	gameLocal -> Interface . GetNumPlayers
>1100	MemberAccess	gameLocal -> Interface . GetNumPlayers
>1101	Identifier	GetNumPlayers
>1102	PtrMemberAccess	gameLocal -> Interface
>1103	Identifier	Interface
>1104	Identifier	gameLocal
>1105	Identifier	player
>1106	ForInit	 
>1107	IdentifierDeclStatement	int player = 0 ;
>1108	IdentifierDecl	player = 0
>1109	AssignmentExpr	player = 0
>1110	PrimaryExpression	0
>1111	Identifier	player
>1112	Identifier	player
>1113	IdentifierDeclType	int
>1114	IdentifierDeclStatement	 
>1115	IdentifierDecl	curPlayer = DoomLib 
>1116	AssignmentExpr	curPlayer = DoomLib 
>1117	CallExpression	DoomLib 
>1118	ArgumentList	 
>1119	Callee	DoomLib 
>1120	Identifier	DoomLib 
>1121	Identifier	curPlayer
>1122	Identifier	curPlayer
>1123	IdentifierDeclType	int
>1124	Condition	 
>1125	AndExpression	globalNetworking && gameLocal != NULL
>1126	EqualityExpression	gameLocal != NULL
>1127	Identifier	NULL
>1128	Identifier	gameLocal
>1129	Identifier	globalNetworking
>1143	FunctionDef	I_NetCmd ()
>1144	ParameterList	 
>1145	ReturnType	void
>1146	CompoundStatement	 
>1147	CompoundStatement	 
>1148	ExpressionStatement	 
>1149	CallExpression	netsend ( )
>1150	ArgumentList	 
>1151	Callee	netsend
>1152	Identifier	netsend
>1153	Statement	 
>1154	Statement	 
>1155	Statement	 
>1156	Statement	 
>1157	Statement	 
>1158	Statement	 
>1159	Statement	 
>1160	Statement	 
>1161	Statement	 
>1162	Statement	 
>1163	Statement	 
<11=17,16,12
<12=13
<13=15,14
<17=18
<18=19
<19=21,20
<26=29,28,27
<29=30
<30=31
<38=41,40,39
<41=59,58,57,56,55,54,53,52,51,50,49,48,47,46,42
<42=43
<43=45,44
<64=67,66,65
<67=113,100,70,68
<68=69
<70=91,71
<71=81,72
<72=73
<73=79,74
<74=77,75
<75=76
<77=78
<79=80
<81=82
<82=90,89,83
<83=88,84
<84=86,85
<86=87
<91=92
<92=99,93
<93=97,94
<94=95
<95=96
<97=98
<100=101
<101=112,102
<102=110,103
<103=108,106,104
<104=105
<106=107
<108=109
<110=111
<113=114
<114=116,115
<128=137,136,129
<129=133,130
<130=132,131
<133=135,134
<137=196,192,177,171,163,157,138
<138=139
<139=156,140
<140=154,141
<141=152,146,142
<142=143
<143=145,144
<146=147
<147=151,148
<148=150,149
<152=153
<154=155
<157=158
<158=160,159
<160=162,161
<163=164
<164=166,165
<166=168,167
<168=170,169
<171=172
<172=174,173
<174=176,175
<177=178
<178=190,179
<179=186,184,180
<180=181
<181=183,182
<184=185
<186=187
<187=189,188
<190=191
<192=193
<193=195,194
<196=197
<197=199,198
<215=218,217,216
<218=471,467,466,465,464,463,462,461,460,459,458,457,456,455,454,453,452,451,219,266,375,376,377,378,384,385,386,387,391,392,393,399,400,401,402,403,404,410,411,412,413,414,415,421,422,423,424,425,426,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450
<219=265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241,240,239,238,237,236,235,234,233,232,231,230,229,228,227,226,225,224,223,222,221,220
<266=374,373,372,371,370,369,368,367,366,365,355,354,353,352,351,350,349,348,347,346,345,335,334,333,332,331,330,329,328,327,326,267,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325
<267=268
<268=270,269
<270=272,271
<272=274,273
<274=276,275
<335=336
<336=338,337
<338=340,339
<340=342,341
<342=344,343
<355=356
<356=358,357
<358=360,359
<360=362,361
<362=364,363
<378=379
<379=381,380
<381=383,382
<387=388
<388=390,389
<393=394
<394=396,395
<396=398,397
<404=405
<405=407,406
<407=409,408
<415=416
<416=418,417
<418=420,419
<426=427
<427=429,428
<429=431,430
<467=468
<468=470,469
<471=472
<472=474,473
<490=493,492,491
<493=788,784,780,776,772,768,762,745,727,723,719,702,698,697,689,688,678,677,662,661,651,650,640,639,629,628,618,617,616,612,611,610,609,603,602,601,600,494
<494=599,581,580,562,561,538,537,514,513,495
<495=496
<496=504,497
<497=499,498
<499=501,500
<501=503,502
<504=506,505
<506=508,507
<508=510,509
<510=512,511
<514=515
<515=528,516
<516=526,517
<517=518
<518=519
<519=521,520
<521=523,522
<523=525,524
<526=527
<528=530,529
<530=532,531
<532=534,533
<534=536,535
<538=539
<539=552,540
<540=550,541
<541=542
<542=543
<543=545,544
<545=547,546
<547=549,548
<550=551
<552=554,553
<554=556,555
<556=558,557
<558=560,559
<562=563
<563=571,564
<564=566,565
<566=568,567
<568=570,569
<571=573,572
<573=575,574
<575=577,576
<577=579,578
<581=582
<582=590,583
<583=585,584
<585=587,586
<587=589,588
<590=592,591
<592=594,593
<594=596,595
<596=598,597
<603=604
<604=606,605
<606=608,607
<612=613
<613=615,614
<618=619
<619=623,620
<620=622,621
<623=625,624
<625=627,626
<629=630
<630=634,631
<631=633,632
<634=636,635
<636=638,637
<640=641
<641=645,642
<642=644,643
<645=647,646
<647=649,648
<651=652
<652=656,653
<653=655,654
<656=658,657
<658=660,659
<662=663
<663=672,664
<664=670,665
<665=666
<666=667
<667=669,668
<670=671
<672=674,673
<674=676,675
<678=679
<679=683,680
<680=682,681
<683=685,684
<685=687,686
<689=690
<690=692,691
<692=694,693
<694=696,695
<698=699
<699=701,700
<702=703
<703=717,704
<704=713,709,705
<705=706
<706=708,707
<709=710
<710=712,711
<713=714
<714=716,715
<717=718
<719=720
<720=722,721
<723=724
<724=726,725
<727=741,728
<728=740,730,729
<730=731
<731=735,732
<732=734,733
<735=737,736
<737=739,738
<741=742
<742=744,743
<745=746
<746=761,747
<747=759,748
<748=753,749
<749=750
<750=752,751
<753=754
<754=758,755
<755=757,756
<759=760
<762=763
<763=767,764
<764=766,765
<768=769
<769=771,770
<772=773
<773=775,774
<776=777
<777=779,778
<780=781
<781=783,782
<784=785
<785=787,786
<788=789
<789=791,790
<847=850,849,848
<850=851
<851=852
<856=859,858,857
<859=966,962,961,960,959,958,957,956,955,954,953,952,951,950,949,948,947,946,945,944,943,934,933,932,931,930,929,928,927,926,925,924,923,922,921,860
<860=920,919,918,917,916,915,914,913,901,900,899,898,897,896,895,894,893,892,891,890,889,881,880,879,878,877,876,875,874,873,872,871,870,869,861
<861=862
<862=864,863
<864=866,865
<866=868,867
<881=882
<882=884,883
<884=886,885
<886=888,887
<901=902
<902=904,903
<904=906,905
<906=910,907
<907=909,908
<910=912,911
<934=935
<935=942,936
<936=940,937
<937=938
<938=939
<940=941
<962=963
<963=965,964
<966=967
<967=969,968
<984=987,986,985
<987=988
<988=1124,989
<989=1114,1001,994,990
<990=991
<991=993,992
<994=995
<995=999,996
<996=997
<997=998
<999=1000
<1001=1106,1095,1092,1002
<1002=1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1044,1043,1042,1041,1040,1039,1038,1037,1036,1035,1034,1003
<1003=1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004
<1022=1023
<1023=1032,1024
<1024=1030,1025
<1025=1026
<1026=1028,1027
<1028=1029
<1030=1031
<1032=1033
<1044=1063,1062,1061,1060,1059,1058,1057,1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045
<1063=1064
<1064=1073,1065
<1065=1071,1066
<1066=1067
<1067=1069,1068
<1069=1070
<1071=1072
<1073=1074
<1085=1086
<1086=1090,1087
<1087=1088
<1088=1089
<1090=1091
<1092=1094,1093
<1095=1096
<1096=1105,1097
<1097=1099,1098
<1099=1100
<1100=1102,1101
<1102=1104,1103
<1106=1107
<1107=1108
<1108=1113,1112,1109
<1109=1111,1110
<1114=1115
<1115=1123,1122,1116
<1116=1121,1117
<1117=1119,1118
<1119=1120
<1124=1125
<1125=1129,1126
<1126=1128,1127
<1143=1146,1145,1144
<1146=1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1147
<1147=1148
<1148=1149
<1149=1151,1150
<1151=1152
