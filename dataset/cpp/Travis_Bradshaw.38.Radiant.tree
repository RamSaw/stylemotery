>5	FunctionDef	CRadiantApp 
>6	ParameterList	 
>7	CompoundStatement	 
>19	FunctionDef	CRadiantApp 
>20	ParameterList	 
>21	ReturnType	BOOL
>22	CompoundStatement	 
>23	ReturnStatement	 
>24	Identifier	TRUE
>25	ExpressionStatement	 
>26	AssignmentExpr	m_pszHelpFilePath = _tcsdup ( strHelp )
>27	CallExpression	_tcsdup ( strHelp )
>28	ArgumentList	strHelp
>29	Argument	strHelp
>30	Identifier	strHelp
>31	Callee	_tcsdup
>32	Identifier	_tcsdup
>33	Identifier	m_pszHelpFilePath
>34	ExpressionStatement	 
>35	AssignmentExpr	strHelp += \"Q3RManual.chm\"
>36	PrimaryExpression	\"Q3RManual.chm\"
>37	Identifier	strHelp
>38	ExpressionStatement	 
>39	CallExpression	AddSlash ( strHelp )
>40	ArgumentList	strHelp
>41	Argument	strHelp
>42	Identifier	strHelp
>43	Callee	AddSlash
>44	Identifier	AddSlash
>45	IdentifierDeclStatement	 
>46	IdentifierDecl	strHelp = g_strAppPath
>47	AssignmentExpr	strHelp = g_strAppPath
>48	Identifier	g_strAppPath
>49	Identifier	g_strAppPath
>50	Identifier	strHelp
>51	IdentifierDeclType	CString
>52	ExpressionStatement	 
>53	CallExpression	free ( ( void * ) m_pszHelpFilePath )
>54	ArgumentList	( void * ) m_pszHelpFilePath
>55	Argument	( void * ) m_pszHelpFilePath
>56	CastExpression	( void * ) m_pszHelpFilePath
>57	Identifier	m_pszHelpFilePath
>58	CastTarget	void *
>59	Callee	free
>60	Identifier	free
>61	ExpressionStatement	 
>62	CallExpression	pMainFrame -> UpdateWindow ( )
>63	ArgumentList	 
>64	Callee	pMainFrame -> UpdateWindow
>65	PtrMemberAccess	pMainFrame -> UpdateWindow
>66	Identifier	UpdateWindow
>67	Identifier	pMainFrame
>68	ExpressionStatement	 
>69	CallExpression	pMainFrame -> ShowWindow ( m_nCmdShow )
>70	ArgumentList	m_nCmdShow
>71	Argument	m_nCmdShow
>72	Identifier	m_nCmdShow
>73	Callee	pMainFrame -> ShowWindow
>74	PtrMemberAccess	pMainFrame -> ShowWindow
>75	Identifier	ShowWindow
>76	Identifier	pMainFrame
>77	ExpressionStatement	 
>78	CallExpression	ParseCommandLine ( cmdInfo )
>79	ArgumentList	cmdInfo
>80	Argument	cmdInfo
>81	Identifier	cmdInfo
>82	Callee	ParseCommandLine
>83	Identifier	ParseCommandLine
>84	IdentifierDeclStatement	 
>85	IdentifierDecl	cmdInfo
>86	Identifier	cmdInfo
>87	IdentifierDeclType	CCommandLineInfo
>88	ExpressionStatement	 
>89	AssignmentExpr	m_pMainWnd = pMainFrame
>90	Identifier	pMainFrame
>91	Identifier	m_pMainWnd
>92	ExpressionStatement	 
>93	CallExpression	pMainFrame -> LoadAccelTable ( MAKEINTRESOURCE ( IDR_MINIACCEL ) )
>94	ArgumentList	MAKEINTRESOURCE ( IDR_MINIACCEL )
>95	Argument	MAKEINTRESOURCE ( IDR_MINIACCEL )
>96	CallExpression	MAKEINTRESOURCE ( IDR_MINIACCEL )
>97	ArgumentList	IDR_MINIACCEL
>98	Argument	IDR_MINIACCEL
>99	Identifier	IDR_MINIACCEL
>100	Callee	MAKEINTRESOURCE
>101	Identifier	MAKEINTRESOURCE
>102	Callee	pMainFrame -> LoadAccelTable
>103	PtrMemberAccess	pMainFrame -> LoadAccelTable
>104	Identifier	LoadAccelTable
>105	Identifier	pMainFrame
>106	ExpressionStatement	 
>107	CallExpression	DestroyAcceleratorTable ( pMainFrame -> m_hAccelTable )
>108	ArgumentList	pMainFrame -> m_hAccelTable
>109	Argument	pMainFrame -> m_hAccelTable
>110	PtrMemberAccess	pMainFrame -> m_hAccelTable
>111	Identifier	m_hAccelTable
>112	Identifier	pMainFrame
>113	Callee	DestroyAcceleratorTable
>114	Identifier	DestroyAcceleratorTable
>115	IfStatement	if ( pMainFrame -> m_hAccelTable )
>116	Statement	 
>117	Condition	 
>118	PtrMemberAccess	pMainFrame -> m_hAccelTable
>119	Identifier	m_hAccelTable
>120	Identifier	pMainFrame
>121	IfStatement	if ( ! pMainFrame -> LoadFrame ( nMenu ) )
>122	ReturnStatement	 
>123	Identifier	FALSE
>124	Condition	 
>125	UnaryOp	! pMainFrame -> LoadFrame ( nMenu )
>126	CallExpression	pMainFrame -> LoadFrame ( nMenu )
>127	ArgumentList	nMenu
>128	Argument	nMenu
>129	Identifier	nMenu
>130	Callee	pMainFrame -> LoadFrame
>131	PtrMemberAccess	pMainFrame -> LoadFrame
>132	Identifier	LoadFrame
>133	Identifier	pMainFrame
>134	UnaryOperator	!
>135	ExpressionStatement	 
>136	Identifier	CMainFrame
>137	Statement	 
>138	Statement	 
>139	Statement	 
>140	Statement	 
>141	Statement	 
>142	IfStatement	if ( strTemp . Find ( \"builddefs\" ) >= 0 )
>143	ExpressionStatement	 
>144	AssignmentExpr	g_bBuildList = true
>145	Identifier	true
>146	Identifier	g_bBuildList
>147	Condition	 
>148	RelationalExpression	strTemp . Find ( \"builddefs\" ) >= 0
>149	PrimaryExpression	0
>150	CallExpression	strTemp . Find ( \"builddefs\" )
>151	ArgumentList	\"builddefs\"
>152	Argument	\"builddefs\"
>153	PrimaryExpression	\"builddefs\"
>154	Callee	strTemp . Find
>155	MemberAccess	strTemp . Find
>156	Identifier	Find
>157	Identifier	strTemp
>158	ExpressionStatement	 
>159	CallExpression	strTemp . MakeLower ( )
>160	ArgumentList	 
>161	Callee	strTemp . MakeLower
>162	MemberAccess	strTemp . MakeLower
>163	Identifier	MakeLower
>164	Identifier	strTemp
>165	IdentifierDeclStatement	 
>166	IdentifierDecl	strTemp = m_lpCmdLine
>167	AssignmentExpr	strTemp = m_lpCmdLine
>168	Identifier	m_lpCmdLine
>169	Identifier	m_lpCmdLine
>170	Identifier	strTemp
>171	IdentifierDeclType	CString
>172	IfStatement	if ( ! QGL_Init ( strOpenGL , strGLU ) )
>173	CompoundStatement	 
>174	ExpressionStatement	 
>175	CallExpression	g_PrefsDlg . SavePrefs ( )
>176	ArgumentList	 
>177	Callee	g_PrefsDlg . SavePrefs
>178	MemberAccess	g_PrefsDlg . SavePrefs
>179	Identifier	SavePrefs
>180	Identifier	g_PrefsDlg
>181	IfStatement	if ( ! QGL_Init ( strOpenGL , strGLU ) )
>182	CompoundStatement	 
>183	ReturnStatement	 
>184	Identifier	FALSE
>185	ExpressionStatement	 
>186	CallExpression	AfxMessageBox ( \"Failed to load OpenGL libraries. \\"OPENGL32.DLL\\" and \\"OPENGL.DLL\\" were tried\" )
>187	ArgumentList	\"Failed to load OpenGL libraries. \\"OPENGL32.DLL\\" and \\"OPENGL.DLL\\" were tried\"
>188	Argument	\"Failed to load OpenGL libraries. \\"OPENGL32.DLL\\" and \\"OPENGL.DLL\\" were tried\"
>189	PrimaryExpression	\"Failed to load OpenGL libraries. \\"OPENGL32.DLL\\" and \\"OPENGL.DLL\\" were tried\"
>190	Callee	AfxMessageBox
>191	Identifier	AfxMessageBox
>192	Condition	 
>193	UnaryOp	! QGL_Init ( strOpenGL , strGLU )
>194	CallExpression	QGL_Init ( strOpenGL , strGLU )
>195	ArgumentList	strOpenGL
>196	Argument	strGLU
>197	Identifier	strGLU
>198	Argument	strOpenGL
>199	Identifier	strOpenGL
>200	Callee	QGL_Init
>201	Identifier	QGL_Init
>202	UnaryOperator	!
>203	ExpressionStatement	 
>204	AssignmentExpr	strGLU = ( g_PrefsDlg . m_bSGIOpenGL ) ? \"glu.dll\" 
>205	ConditionalExpression	( g_PrefsDlg . m_bSGIOpenGL ) ? \"glu.dll\" 
>206	PrimaryExpression	\"glu32.dll\"
>207	PrimaryExpression	\"glu.dll\"
>208	Condition	g_PrefsDlg . m_bSGIOpenGL
>209	MemberAccess	g_PrefsDlg . m_bSGIOpenGL
>210	Identifier	m_bSGIOpenGL
>211	Identifier	g_PrefsDlg
>212	Identifier	strGLU
>213	ExpressionStatement	 
>214	AssignmentExpr	strOpenGL = ( g_PrefsDlg . m_bSGIOpenGL ) ? \"opengl.dll\" 
>215	ConditionalExpression	( g_PrefsDlg . m_bSGIOpenGL ) ? \"opengl.dll\" 
>216	PrimaryExpression	\"opengl32.dll\"
>217	PrimaryExpression	\"opengl.dll\"
>218	Condition	g_PrefsDlg . m_bSGIOpenGL
>219	MemberAccess	g_PrefsDlg . m_bSGIOpenGL
>220	Identifier	m_bSGIOpenGL
>221	Identifier	g_PrefsDlg
>222	Identifier	strOpenGL
>223	ExpressionStatement	 
>224	AssignmentExpr	g_PrefsDlg . m_bSGIOpenGL ^= 1
>225	PrimaryExpression	1
>226	MemberAccess	g_PrefsDlg . m_bSGIOpenGL
>227	Identifier	m_bSGIOpenGL
>228	Identifier	g_PrefsDlg
>229	Condition	 
>230	UnaryOp	! QGL_Init ( strOpenGL , strGLU )
>231	CallExpression	QGL_Init ( strOpenGL , strGLU )
>232	ArgumentList	strOpenGL
>233	Argument	strGLU
>234	Identifier	strGLU
>235	Argument	strOpenGL
>236	Identifier	strOpenGL
>237	Callee	QGL_Init
>238	Identifier	QGL_Init
>239	UnaryOperator	!
>240	IdentifierDeclStatement	 
>241	IdentifierDecl	strGLU = ( g_PrefsDlg . m_bSGIOpenGL ) ? \"glu.dll\" 
>242	AssignmentExpr	strGLU = ( g_PrefsDlg . m_bSGIOpenGL ) ? \"glu.dll\" 
>243	ConditionalExpression	( g_PrefsDlg . m_bSGIOpenGL ) ? \"glu.dll\" 
>244	PrimaryExpression	\"glu32.dll\"
>245	PrimaryExpression	\"glu.dll\"
>246	Condition	g_PrefsDlg . m_bSGIOpenGL
>247	MemberAccess	g_PrefsDlg . m_bSGIOpenGL
>248	Identifier	m_bSGIOpenGL
>249	Identifier	g_PrefsDlg
>250	Identifier	strGLU
>251	Identifier	strGLU
>252	IdentifierDeclType	CString
>253	IdentifierDeclStatement	 
>254	IdentifierDecl	strOpenGL = ( g_PrefsDlg . m_bSGIOpenGL ) ? \"opengl.dll\" 
>255	AssignmentExpr	strOpenGL = ( g_PrefsDlg . m_bSGIOpenGL ) ? \"opengl.dll\" 
>256	ConditionalExpression	( g_PrefsDlg . m_bSGIOpenGL ) ? \"opengl.dll\" 
>257	PrimaryExpression	\"opengl32.dll\"
>258	PrimaryExpression	\"opengl.dll\"
>259	Condition	g_PrefsDlg . m_bSGIOpenGL
>260	MemberAccess	g_PrefsDlg . m_bSGIOpenGL
>261	Identifier	m_bSGIOpenGL
>262	Identifier	g_PrefsDlg
>263	Identifier	strOpenGL
>264	Identifier	strOpenGL
>265	IdentifierDeclType	CString
>266	IdentifierDeclStatement	 
>267	IdentifierDecl	nMenu = IDR_MENU1
>268	AssignmentExpr	nMenu = IDR_MENU1
>269	Identifier	IDR_MENU1
>270	Identifier	IDR_MENU1
>271	Identifier	nMenu
>272	IdentifierDeclType	int
>273	ExpressionStatement	 
>274	CallExpression	g_PrefsDlg . LoadPrefs ( )
>275	ArgumentList	 
>276	Callee	g_PrefsDlg . LoadPrefs
>277	MemberAccess	g_PrefsDlg . LoadPrefs
>278	Identifier	LoadPrefs
>279	Identifier	g_PrefsDlg
>280	ExpressionStatement	 
>281	CallExpression	LoadStdProfileSettings ( )
>282	ArgumentList	 
>283	Callee	LoadStdProfileSettings
>284	Identifier	LoadStdProfileSettings
>285	IfStatement	if ( Finder . FindFile ( IniPath ) )
>286	ElseStatement	else
>287	CompoundStatement	 
>288	ExpressionStatement	 
>289	AssignmentExpr	g_qeglobals . use_ini = false
>290	Identifier	false
>291	MemberAccess	g_qeglobals . use_ini
>292	Identifier	use_ini
>293	Identifier	g_qeglobals
>294	ExpressionStatement	 
>295	CallExpression	SetRegistryKey ( \"Q3Radiant\" )
>296	ArgumentList	\"Q3Radiant\"
>297	Argument	\"Q3Radiant\"
>298	PrimaryExpression	\"Q3Radiant\"
>299	Callee	SetRegistryKey
>300	Identifier	SetRegistryKey
>301	CompoundStatement	 
>302	ExpressionStatement	 
>303	AssignmentExpr	g_qeglobals . use_ini = true
>304	Identifier	true
>305	MemberAccess	g_qeglobals . use_ini
>306	Identifier	use_ini
>307	Identifier	g_qeglobals
>308	DoStatement	do
>309	Condition	 
>310	PrimaryExpression	1
>311	CompoundStatement	 
>312	ExpressionStatement	 
>313	IncDecOp	i ++
>314	IncDec	++
>315	Identifier	i
>316	IfStatement	if ( RegOpenKeyEx ( HKEY_CURRENT_USER , key , 0 , KEY_ALL_ACCESS , & hkResult ) != ERROR_SUCCESS )
>317	ElseStatement	else
>318	CompoundStatement	 
>319	IfStatement	if ( ! strcmp ( RadiantAux , RadiantPath ) )
>320	CompoundStatement	 
>321	BreakStatement	 
>322	ExpressionStatement	 
>323	CallExpression	strcpy ( g_qeglobals . use_ini_registry , key . GetBuffer ( 0 ) )
>324	ArgumentList	g_qeglobals . use_ini_registry
>325	Argument	key . GetBuffer ( 0 )
>326	CallExpression	key . GetBuffer ( 0 )
>327	ArgumentList	0
>328	Argument	0
>329	PrimaryExpression	0
>330	Callee	key . GetBuffer
>331	MemberAccess	key . GetBuffer
>332	Identifier	GetBuffer
>333	Identifier	key
>334	Argument	g_qeglobals . use_ini_registry
>335	MemberAccess	g_qeglobals . use_ini_registry
>336	Identifier	use_ini_registry
>337	Identifier	g_qeglobals
>338	Callee	strcpy
>339	Identifier	strcpy
>340	Condition	 
>341	UnaryOp	! strcmp ( RadiantAux , RadiantPath )
>342	CallExpression	strcmp ( RadiantAux , RadiantPath )
>343	ArgumentList	RadiantAux
>344	Argument	RadiantPath
>345	Identifier	RadiantPath
>346	Argument	RadiantAux
>347	Identifier	RadiantAux
>348	Callee	strcmp
>349	Identifier	strcmp
>350	UnaryOperator	!
>351	ExpressionStatement	 
>352	CallExpression	RegCloseKey ( hkResult )
>353	ArgumentList	hkResult
>354	Argument	hkResult
>355	Identifier	hkResult
>356	Callee	RegCloseKey
>357	Identifier	RegCloseKey
>358	ExpressionStatement	 
>359	Statement	 
>360	Statement	 
>361	Statement	 
>362	Statement	 
>363	Statement	 
>364	Statement	 
>365	Statement	 
>366	Statement	 
>367	Statement	 
>368	Statement	 
>369	Statement	 
>370	Statement	 
>371	Statement	 
>372	Statement	 
>373	Statement	 
>374	Statement	 
>375	Statement	 
>376	Statement	 
>377	Statement	 
>378	Statement	 
>379	Statement	 
>380	Statement	 
>381	Statement	 
>382	IdentifierDeclStatement	 
>383	IdentifierDecl	size = _MAX_PATH
>384	AssignmentExpr	size = _MAX_PATH
>385	Identifier	_MAX_PATH
>386	Identifier	_MAX_PATH
>387	Identifier	size
>388	IdentifierDeclType	unsigned long
>389	IdentifierDeclStatement	 
>390	IdentifierDecl	RadiantAux [ _MAX_PATH ]
>391	Identifier	_MAX_PATH
>392	Identifier	RadiantAux
>393	IdentifierDeclType	char [ _MAX_PATH ]
>394	CompoundStatement	 
>395	BreakStatement	 
>396	ExpressionStatement	 
>397	CallExpression	RegCloseKey ( hkResult )
>398	ArgumentList	hkResult
>399	Argument	hkResult
>400	Identifier	hkResult
>401	Callee	RegCloseKey
>402	Identifier	RegCloseKey
>403	ExpressionStatement	 
>404	Statement	 
>405	Statement	 
>406	Statement	 
>407	Statement	 
>408	Statement	 
>409	Statement	 
>410	Statement	 
>411	Statement	 
>412	Statement	 
>413	Statement	 
>414	Statement	 
>415	Statement	 
>416	Statement	 
>417	Statement	 
>418	Statement	 
>419	Statement	 
>420	Statement	 
>421	Statement	 
>422	Statement	 
>423	Statement	 
>424	Statement	 
>425	Statement	 
>426	Statement	 
>427	Statement	 
>428	Statement	 
>429	Statement	 
>430	Statement	 
>431	ExpressionStatement	 
>432	CallExpression	RegCreateKeyEx ( HKEY_CURRENT_USER , key , 0 , NULL , REG_OPTION_NON_VOLATILE , KEY_ALL_ACCESS , NULL , & hkResult , & \
>433	ArgumentList	HKEY_CURRENT_USER
>434	Argument	& dwDisp
>435	UnaryOp	& dwDisp
>436	Identifier	dwDisp
>437	UnaryOperator	&
>438	Argument	& hkResult
>439	UnaryOp	& hkResult
>440	Identifier	hkResult
>441	UnaryOperator	&
>442	Argument	NULL
>443	Identifier	NULL
>444	Argument	KEY_ALL_ACCESS
>445	Identifier	KEY_ALL_ACCESS
>446	Argument	REG_OPTION_NON_VOLATILE
>447	Identifier	REG_OPTION_NON_VOLATILE
>448	Argument	NULL
>449	Identifier	NULL
>450	Argument	0
>451	PrimaryExpression	0
>452	Argument	key
>453	Identifier	key
>454	Argument	HKEY_CURRENT_USER
>455	Identifier	HKEY_CURRENT_USER
>456	Callee	RegCreateKeyEx
>457	Identifier	RegCreateKeyEx
>458	ExpressionStatement	 
>459	CallExpression	strcpy ( g_qeglobals . use_ini_registry , key . GetBuffer ( 0 ) )
>460	ArgumentList	g_qeglobals . use_ini_registry
>461	Argument	key . GetBuffer ( 0 )
>462	CallExpression	key . GetBuffer ( 0 )
>463	ArgumentList	0
>464	Argument	0
>465	PrimaryExpression	0
>466	Callee	key . GetBuffer
>467	MemberAccess	key . GetBuffer
>468	Identifier	GetBuffer
>469	Identifier	key
>470	Argument	g_qeglobals . use_ini_registry
>471	MemberAccess	g_qeglobals . use_ini_registry
>472	Identifier	use_ini_registry
>473	Identifier	g_qeglobals
>474	Callee	strcpy
>475	Identifier	strcpy
>476	Condition	 
>477	EqualityExpression	RegOpenKeyEx ( HKEY_CURRENT_USER , key , 0 , KEY_ALL_ACCESS , & hkResult ) != ERROR_SUCCESS
>478	Identifier	ERROR_SUCCESS
>479	CallExpression	RegOpenKeyEx ( HKEY_CURRENT_USER , key , 0 , KEY_ALL_ACCESS , & hkResult )
>480	ArgumentList	HKEY_CURRENT_USER
>481	Argument	& hkResult
>482	UnaryOp	& hkResult
>483	Identifier	hkResult
>484	UnaryOperator	&
>485	Argument	KEY_ALL_ACCESS
>486	Identifier	KEY_ALL_ACCESS
>487	Argument	0
>488	PrimaryExpression	0
>489	Argument	key
>490	Identifier	key
>491	Argument	HKEY_CURRENT_USER
>492	Identifier	HKEY_CURRENT_USER
>493	Callee	RegOpenKeyEx
>494	Identifier	RegOpenKeyEx
>495	ExpressionStatement	 
>496	AssignmentExpr	key = \"Software\\Q3Radiant\\IniPrefs\" + CString ( iBuf )
>497	AdditiveExpression	\"Software\\Q3Radiant\\IniPrefs\" + CString ( iBuf )
>498	CallExpression	CString ( iBuf )
>499	ArgumentList	iBuf
>500	Argument	iBuf
>501	Identifier	iBuf
>502	Callee	CString
>503	Identifier	CString
>504	PrimaryExpression	\"Software\\Q3Radiant\\IniPrefs\"
>505	Identifier	key
>506	ExpressionStatement	 
>507	CallExpression	sprintf ( iBuf , \"%d\" , i )
>508	ArgumentList	iBuf
>509	Argument	i
>510	Identifier	i
>511	Argument	\"%d\"
>512	PrimaryExpression	\"%d\"
>513	Argument	iBuf
>514	Identifier	iBuf
>515	Callee	sprintf
>516	Identifier	sprintf
>517	IdentifierDeclStatement	 
>518	IdentifierDecl	iBuf [ 3 ]
>519	PrimaryExpression	3
>520	Identifier	iBuf
>521	IdentifierDeclType	char [ 3 ]
>522	IdentifierDeclStatement	 
>523	IdentifierDecl	type
>524	Identifier	type
>525	IdentifierDeclType	DWORD
>526	IdentifierDeclStatement	 
>527	IdentifierDecl	dwDisp
>528	Identifier	dwDisp
>529	IdentifierDeclType	DWORD
>530	IdentifierDeclStatement	 
>531	IdentifierDecl	hkResult
>532	Identifier	hkResult
>533	IdentifierDeclType	HKEY
>534	IdentifierDeclStatement	 
>535	IdentifierDecl	key
>536	Identifier	key
>537	IdentifierDeclType	CString
>538	IdentifierDeclStatement	 
>539	IdentifierDecl	i = 0
>540	AssignmentExpr	i = 0
>541	PrimaryExpression	0
>542	Identifier	i
>543	Identifier	i
>544	IdentifierDeclType	int
>545	ExpressionStatement	 
>546	AssignmentExpr	m_pszProfileName = _tcsdup ( _T ( Finder . GetFilePath ( ) ) )
>547	CallExpression	_tcsdup ( _T ( Finder . GetFilePath ( ) ) )
>548	ArgumentList	_T ( Finder . GetFilePath ( ) )
>549	Argument	_T ( Finder . GetFilePath ( ) )
>550	CallExpression	_T ( Finder . GetFilePath ( ) )
>551	ArgumentList	Finder . GetFilePath ( )
>552	Argument	Finder . GetFilePath ( )
>553	CallExpression	Finder . GetFilePath ( )
>554	ArgumentList	 
>555	Callee	Finder . GetFilePath
>556	MemberAccess	Finder . GetFilePath
>557	Identifier	GetFilePath
>558	Identifier	Finder
>559	Callee	_T
>560	Identifier	_T
>561	Callee	_tcsdup
>562	Identifier	_tcsdup
>563	Identifier	m_pszProfileName
>564	ExpressionStatement	 
>565	CallExpression	free ( ( void * ) m_pszProfileName )
>566	ArgumentList	( void * ) m_pszProfileName
>567	Argument	( void * ) m_pszProfileName
>568	CastExpression	( void * ) m_pszProfileName
>569	Identifier	m_pszProfileName
>570	CastTarget	void *
>571	Callee	free
>572	Identifier	free
>573	ExpressionStatement	 
>574	CallExpression	Finder . FindNextFile ( )
>575	ArgumentList	 
>576	Callee	Finder . FindNextFile
>577	MemberAccess	Finder . FindNextFile
>578	Identifier	FindNextFile
>579	Identifier	Finder
>580	Condition	 
>581	CallExpression	Finder . FindFile ( IniPath )
>582	ArgumentList	IniPath
>583	Argument	IniPath
>584	Identifier	IniPath
>585	Callee	Finder . FindFile
>586	MemberAccess	Finder . FindFile
>587	Identifier	FindFile
>588	Identifier	Finder
>589	ExpressionStatement	 
>590	CallExpression	Finder . FindNextFile ( )
>591	ArgumentList	 
>592	Callee	Finder . FindNextFile
>593	MemberAccess	Finder . FindNextFile
>594	Identifier	FindNextFile
>595	Identifier	Finder
>596	IdentifierDeclStatement	 
>597	IdentifierDecl	IniPath = Root + \"\\REGISTRY.INI\"
>598	AssignmentExpr	IniPath = Root + \"\\REGISTRY.INI\"
>599	AdditiveExpression	Root + \"\\REGISTRY.INI\"
>600	PrimaryExpression	\"\\REGISTRY.INI\"
>601	Identifier	Root
>602	Identifier	IniPath
>603	Identifier	IniPath
>604	IdentifierDeclType	CString
>605	IdentifierDeclStatement	 
>606	IdentifierDecl	Root = Finder . GetRoot ( )
>607	AssignmentExpr	Root = Finder . GetRoot ( )
>608	CallExpression	Finder . GetRoot ( )
>609	ArgumentList	 
>610	Callee	Finder . GetRoot
>611	MemberAccess	Finder . GetRoot
>612	Identifier	GetRoot
>613	Identifier	Finder
>614	Identifier	Root
>615	Identifier	Root
>616	IdentifierDeclType	CString
>617	ExpressionStatement	 
>618	CallExpression	Finder . FindNextFile ( )
>619	ArgumentList	 
>620	Callee	Finder . FindNextFile
>621	MemberAccess	Finder . FindNextFile
>622	Identifier	FindNextFile
>623	Identifier	Finder
>624	ExpressionStatement	 
>625	CallExpression	Finder . FindFile ( RadiantPath )
>626	ArgumentList	RadiantPath
>627	Argument	RadiantPath
>628	Identifier	RadiantPath
>629	Callee	Finder . FindFile
>630	MemberAccess	Finder . FindFile
>631	Identifier	FindFile
>632	Identifier	Finder
>633	IdentifierDeclStatement	 
>634	IdentifierDecl	Finder
>635	Identifier	Finder
>636	IdentifierDeclType	CFileFind
>637	ExpressionStatement	 
>638	CallExpression	GetModuleFileName ( NULL , RadiantPath , _MAX_PATH )
>639	ArgumentList	NULL
>640	Argument	_MAX_PATH
>641	Identifier	_MAX_PATH
>642	Argument	RadiantPath
>643	Identifier	RadiantPath
>644	Argument	NULL
>645	Identifier	NULL
>646	Callee	GetModuleFileName
>647	Identifier	GetModuleFileName
>648	IdentifierDeclStatement	 
>649	IdentifierDecl	RadiantPath [ _MAX_PATH ]
>650	Identifier	_MAX_PATH
>651	Identifier	RadiantPath
>652	IdentifierDeclType	char [ _MAX_PATH ]
>653	ExpressionStatement	 
>654	CallExpression	Enable3dControls ( )
>655	ArgumentList	 
>656	Callee	Enable3dControls
>657	Identifier	Enable3dControls
>721	FunctionDef	CRadiantApp 
>722	ParameterList	 
>723	ReturnType	int
>724	CompoundStatement	 
>725	ReturnStatement	 
>726	CallExpression	CWinApp 
>727	ArgumentList	 
>728	Callee	CWinApp 
>729	Identifier	CWinApp 
>730	ExpressionStatement	 
>731	CallExpression	QGL_Shutdown ( )
>732	ArgumentList	 
>733	Callee	QGL_Shutdown
>734	Identifier	QGL_Shutdown
>739	FunctionDef	CRadiantApp 
>740	ParameterList	LONG lCount
>741	Parameter	 
>742	Identifier	lCount
>743	ParameterType	LONG
>744	ReturnType	BOOL
>745	CompoundStatement	 
>746	ReturnStatement	 
>747	CallExpression	CWinApp 
>748	ArgumentList	lCount
>749	Argument	lCount
>750	Identifier	lCount
>751	Callee	CWinApp 
>752	Identifier	CWinApp 
>753	IfStatement	if ( g_pParentWnd )
>754	ExpressionStatement	 
>755	CallExpression	g_pParentWnd -> RoutineProcessing ( )
>756	ArgumentList	 
>757	Callee	g_pParentWnd -> RoutineProcessing
>758	PtrMemberAccess	g_pParentWnd -> RoutineProcessing
>759	Identifier	RoutineProcessing
>760	Identifier	g_pParentWnd
>761	Condition	 
>762	Identifier	g_pParentWnd
>769	FunctionDef	CRadiantApp 
>770	ParameterList	 
>771	ReturnType	void
>772	CompoundStatement	 
>773	ExpressionStatement	 
>774	CallExpression	ShellExecute ( m_pMainWnd -> GetSafeHwnd ( ) , \"open\" , m_pszHelpFilePath , NULL , NULL , SW_SHOW )
>775	ArgumentList	m_pMainWnd -> GetSafeHwnd ( )
>776	Argument	SW_SHOW
>777	Identifier	SW_SHOW
>778	Argument	NULL
>779	Identifier	NULL
>780	Argument	NULL
>781	Identifier	NULL
>782	Argument	m_pszHelpFilePath
>783	Identifier	m_pszHelpFilePath
>784	Argument	\"open\"
>785	PrimaryExpression	\"open\"
>786	Argument	m_pMainWnd -> GetSafeHwnd ( )
>787	CallExpression	m_pMainWnd -> GetSafeHwnd ( )
>788	ArgumentList	 
>789	Callee	m_pMainWnd -> GetSafeHwnd
>790	PtrMemberAccess	m_pMainWnd -> GetSafeHwnd
>791	Identifier	GetSafeHwnd
>792	Identifier	m_pMainWnd
>793	Callee	ShellExecute
>794	Identifier	ShellExecute
<5=7,6
<19=22,21,20
<22=653,648,637,633,624,617,605,596,589,285,280,273,266,253,240,172,165,158,142,141,140,139,138,137,135,121,115,106,92,88,84,77,68,61,52,45,38,34,25,23
<23=24
<25=26
<26=33,27
<27=31,28
<28=29
<29=30
<31=32
<34=35
<35=37,36
<38=39
<39=43,40
<40=41
<41=42
<43=44
<45=46
<46=51,50,47
<47=49,48
<52=53
<53=59,54
<54=55
<55=56
<56=58,57
<59=60
<61=62
<62=64,63
<64=65
<65=67,66
<68=69
<69=73,70
<70=71
<71=72
<73=74
<74=76,75
<77=78
<78=82,79
<79=80
<80=81
<82=83
<84=85
<85=87,86
<88=89
<89=91,90
<92=93
<93=102,94
<94=95
<95=96
<96=100,97
<97=98
<98=99
<100=101
<102=103
<103=105,104
<106=107
<107=113,108
<108=109
<109=110
<110=112,111
<113=114
<115=117,116
<117=118
<118=120,119
<121=124,122
<122=123
<124=125
<125=134,126
<126=130,127
<127=128
<128=129
<130=131
<131=133,132
<135=136
<142=147,143
<143=144
<144=146,145
<147=148
<148=150,149
<150=154,151
<151=152
<152=153
<154=155
<155=157,156
<158=159
<159=161,160
<161=162
<162=164,163
<165=166
<166=171,170,167
<167=169,168
<172=229,173
<173=223,213,203,181,174
<174=175
<175=177,176
<177=178
<178=180,179
<181=192,182
<182=185,183
<183=184
<185=186
<186=190,187
<187=188
<188=189
<190=191
<192=193
<193=202,194
<194=200,195
<195=198,196
<196=197
<198=199
<200=201
<203=204
<204=212,205
<205=208,207,206
<208=209
<209=211,210
<213=214
<214=222,215
<215=218,217,216
<218=219
<219=221,220
<223=224
<224=226,225
<226=228,227
<229=230
<230=239,231
<231=237,232
<232=235,233
<233=234
<235=236
<237=238
<240=241
<241=252,251,242
<242=250,243
<243=246,245,244
<246=247
<247=249,248
<253=254
<254=265,264,255
<255=263,256
<256=259,258,257
<259=260
<260=262,261
<266=267
<267=272,271,268
<268=270,269
<273=274
<274=276,275
<276=277
<277=279,278
<280=281
<281=283,282
<283=284
<285=580,301,286
<286=287
<287=294,288
<288=289
<289=291,290
<291=293,292
<294=295
<295=299,296
<296=297
<297=298
<299=300
<301=573,564,545,538,534,530,526,522,517,308,302
<302=303
<303=305,304
<305=307,306
<308=311,309
<309=310
<311=506,495,316,312
<312=313
<313=315,314
<316=476,394,317
<317=318
<318=389,382,381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,362,361,360,359,358,351,319
<319=340,320
<320=322,321
<322=323
<323=338,324
<324=334,325
<325=326
<326=330,327
<327=328
<328=329
<330=331
<331=333,332
<334=335
<335=337,336
<338=339
<340=341
<341=350,342
<342=348,343
<343=346,344
<344=345
<346=347
<348=349
<351=352
<352=356,353
<353=354
<354=355
<356=357
<382=383
<383=388,387,384
<384=386,385
<389=390
<390=393,392,391
<394=458,431,430,429,428,427,426,425,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,396,395
<396=397
<397=401,398
<398=399
<399=400
<401=402
<431=432
<432=456,433
<433=454,452,450,448,446,444,442,438,434
<434=435
<435=437,436
<438=439
<439=441,440
<442=443
<444=445
<446=447
<448=449
<450=451
<452=453
<454=455
<456=457
<458=459
<459=474,460
<460=470,461
<461=462
<462=466,463
<463=464
<464=465
<466=467
<467=469,468
<470=471
<471=473,472
<474=475
<476=477
<477=479,478
<479=493,480
<480=491,489,487,485,481
<481=482
<482=484,483
<485=486
<487=488
<489=490
<491=492
<493=494
<495=496
<496=505,497
<497=504,498
<498=502,499
<499=500
<500=501
<502=503
<506=507
<507=515,508
<508=513,511,509
<509=510
<511=512
<513=514
<515=516
<517=518
<518=521,520,519
<522=523
<523=525,524
<526=527
<527=529,528
<530=531
<531=533,532
<534=535
<535=537,536
<538=539
<539=544,543,540
<540=542,541
<545=546
<546=563,547
<547=561,548
<548=549
<549=550
<550=559,551
<551=552
<552=553
<553=555,554
<555=556
<556=558,557
<559=560
<561=562
<564=565
<565=571,566
<566=567
<567=568
<568=570,569
<571=572
<573=574
<574=576,575
<576=577
<577=579,578
<580=581
<581=585,582
<582=583
<583=584
<585=586
<586=588,587
<589=590
<590=592,591
<592=593
<593=595,594
<596=597
<597=604,603,598
<598=602,599
<599=601,600
<605=606
<606=616,615,607
<607=614,608
<608=610,609
<610=611
<611=613,612
<617=618
<618=620,619
<620=621
<621=623,622
<624=625
<625=629,626
<626=627
<627=628
<629=630
<630=632,631
<633=634
<634=636,635
<637=638
<638=646,639
<639=644,642,640
<640=641
<642=643
<644=645
<646=647
<648=649
<649=652,651,650
<653=654
<654=656,655
<656=657
<721=724,723,722
<724=730,725
<725=726
<726=728,727
<728=729
<730=731
<731=733,732
<733=734
<739=745,744,740
<740=741
<741=743,742
<745=753,746
<746=747
<747=751,748
<748=749
<749=750
<751=752
<753=761,754
<754=755
<755=757,756
<757=758
<758=760,759
<761=762
<769=772,771,770
<772=773
<773=774
<774=793,775
<775=786,784,782,780,778,776
<776=777
<778=779
<780=781
<782=783
<784=785
<786=787
<787=789,788
<789=790
<790=792,791
<793=794
