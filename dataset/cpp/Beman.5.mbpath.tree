>5	FunctionDef	mbpath_traits 
>6	ParameterList	const mbpath & ph , const internal_string_type & src
>7	Parameter	 
>8	Identifier	src
>9	ParameterType	const internal_string_type &
>10	Parameter	 
>11	Identifier	ph
>12	ParameterType	const mbpath &
>13	ReturnType	mbpath_traits 
>14	CompoundStatement	 
>15	ReturnStatement	 
>16	CallExpression	external_string_type ( work . get ( ) )
>17	ArgumentList	work . get ( )
>18	Argument	work . get ( )
>19	CallExpression	work . get ( )
>20	ArgumentList	 
>21	Callee	work . get
>22	MemberAccess	work . get
>23	Identifier	get
>24	Identifier	work
>25	Callee	external_string_type
>26	Identifier	external_string_type
>27	ExpressionStatement	 
>28	AssignmentExpr	* to_next = '\0'
>29	PrimaryExpression	'\0'
>30	UnaryOp	* to_next
>31	Identifier	to_next
>32	UnaryOperator	*
>33	ExpressionStatement	 
>34	RelationalExpression	fs 
>35	RelationalExpression	mbpath > ( \"user
>36	Expression	\"user
>37	Expression	ph , boost 
>38	CallExpression	boost 
>39	ArgumentList	EINVAL
>40	Argument	boost 
>41	Identifier	boost 
>42	Argument	EINVAL
>43	Identifier	EINVAL
>44	Callee	boost 
>45	Identifier	boost 
>46	Identifier	ph
>47	PrimaryExpression	\"user
>48	Identifier	mbpath
>49	Identifier	fs 
>50	Statement	 
>51	Statement	 
>52	Statement	 
>53	Statement	 
>54	Statement	 
>55	Statement	 
>56	Statement	 
>57	Statement	 
>58	Statement	 
>59	Statement	 
>60	IfStatement	if ( cvt -> out ( state , src . c_str ( ) , src . c_str ( ) + src . size ( ) , from_next , work . get ( ) , work \
>61	Statement	 
>62	Condition	 
>63	EqualityExpression	cvt -> out ( state , src . c_str ( ) , src . c_str ( ) + src . size ( ) , from_next , work . get ( ) , \
>64	Identifier	std 
>65	CallExpression	cvt -> out ( state , src . c_str ( ) , src . c_str ( ) + src . size ( ) , from_next , work . get ( ) , work . get ( ) + \
>66	ArgumentList	state
>67	Argument	to_next
>68	Identifier	to_next
>69	Argument	work . get ( ) + work_size
>70	AdditiveExpression	work . get ( ) + work_size
>71	Identifier	work_size
>72	CallExpression	work . get ( )
>73	ArgumentList	 
>74	Callee	work . get
>75	MemberAccess	work . get
>76	Identifier	get
>77	Identifier	work
>78	Argument	work . get ( )
>79	CallExpression	work . get ( )
>80	ArgumentList	 
>81	Callee	work . get
>82	MemberAccess	work . get
>83	Identifier	get
>84	Identifier	work
>85	Argument	from_next
>86	Identifier	from_next
>87	Argument	src . c_str ( ) + src . size ( )
>88	AdditiveExpression	src . c_str ( ) + src . size ( )
>89	CallExpression	src . size ( )
>90	ArgumentList	 
>91	Callee	src . size
>92	MemberAccess	src . size
>93	Identifier	size
>94	Identifier	src
>95	CallExpression	src . c_str ( )
>96	ArgumentList	 
>97	Callee	src . c_str
>98	MemberAccess	src . c_str
>99	Identifier	c_str
>100	Identifier	src
>101	Argument	src . c_str ( )
>102	CallExpression	src . c_str ( )
>103	ArgumentList	 
>104	Callee	src . c_str
>105	MemberAccess	src . c_str
>106	Identifier	c_str
>107	Identifier	src
>108	Argument	state
>109	Identifier	state
>110	Callee	cvt -> out
>111	PtrMemberAccess	cvt -> out
>112	Identifier	out
>113	Identifier	cvt
>114	IdentifierDeclStatement	 
>115	IdentifierDecl	* to_next
>116	Identifier	to_next
>117	IdentifierDeclType	external_string_type 
>118	IdentifierDeclStatement	 
>119	IdentifierDecl	* from_next
>120	Identifier	from_next
>121	IdentifierDeclType	const internal_string_type 
>122	IdentifierDeclStatement	 
>123	IdentifierDecl	state
>124	Identifier	state
>125	IdentifierDeclType	std 
>126	IdentifierDeclStatement	 
>127	IdentifierDecl	work ( new char [ work_size ] )
>128	Identifier	work_size
>129	Identifier	work
>130	IdentifierDeclType	boost 
>131	IdentifierDeclStatement	 
>132	IdentifierDecl	work_size ( cvt -> max_length ( ) * ( src . size ( ) + 1 ) )
>133	MultiplicativeExpression	cvt -> max_length ( ) * ( src . size ( ) + 1 )
>134	AdditiveExpression	src . size ( ) + 1
>135	PrimaryExpression	1
>136	CallExpression	src . size ( )
>137	ArgumentList	 
>138	Callee	src . size
>139	MemberAccess	src . size
>140	Identifier	size
>141	Identifier	src
>142	CallExpression	cvt -> max_length ( )
>143	ArgumentList	 
>144	Callee	cvt -> max_length
>145	PtrMemberAccess	cvt -> max_length
>146	Identifier	max_length
>147	Identifier	cvt
>148	Identifier	work_size
>149	IdentifierDeclType	std 
>171	FunctionDef	mbpath_traits 
>172	ParameterList	const external_string_type & src
>173	Parameter	 
>174	Identifier	src
>175	ParameterType	const external_string_type &
>176	ReturnType	mbpath_traits 
>177	CompoundStatement	 
>178	ReturnStatement	 
>179	CallExpression	internal_string_type ( work . get ( ) )
>180	ArgumentList	work . get ( )
>181	Argument	work . get ( )
>182	CallExpression	work . get ( )
>183	ArgumentList	 
>184	Callee	work . get
>185	MemberAccess	work . get
>186	Identifier	get
>187	Identifier	work
>188	Callee	internal_string_type
>189	Identifier	internal_string_type
>190	ExpressionStatement	 
>191	PrimaryExpression	'\0'
>192	Statement	 
>193	Statement	 
>194	Statement	 
>195	Statement	 
>196	ExpressionStatement	 
>197	RelationalExpression	fs 
>198	RelationalExpression	mbpath > ( \"user
>199	Expression	\"user
>200	CallExpression	boost 
>201	ArgumentList	EINVAL
>202	Argument	boost 
>203	Identifier	boost 
>204	Argument	EINVAL
>205	Identifier	EINVAL
>206	Callee	boost 
>207	Identifier	boost 
>208	PrimaryExpression	\"user
>209	Identifier	mbpath
>210	Identifier	fs 
>211	Statement	 
>212	Statement	 
>213	Statement	 
>214	Statement	 
>215	Statement	 
>216	Statement	 
>217	Statement	 
>218	Statement	 
>219	Statement	 
>220	Statement	 
>221	IfStatement	if ( cvt -> in ( state , src . c_str ( ) , src . c_str ( ) + src . size ( ) , from_next , work . get ( ) , work \
>222	Statement	 
>223	Condition	 
>224	EqualityExpression	cvt -> in ( state , src . c_str ( ) , src . c_str ( ) + src . size ( ) , from_next , work . get ( ) , \
>225	Identifier	std 
>226	CallExpression	cvt -> in ( state , src . c_str ( ) , src . c_str ( ) + src . size ( ) , from_next , work . get ( ) , work . get ( ) + \
>227	ArgumentList	state
>228	Argument	to_next
>229	Identifier	to_next
>230	Argument	work . get ( ) + work_size
>231	AdditiveExpression	work . get ( ) + work_size
>232	Identifier	work_size
>233	CallExpression	work . get ( )
>234	ArgumentList	 
>235	Callee	work . get
>236	MemberAccess	work . get
>237	Identifier	get
>238	Identifier	work
>239	Argument	work . get ( )
>240	CallExpression	work . get ( )
>241	ArgumentList	 
>242	Callee	work . get
>243	MemberAccess	work . get
>244	Identifier	get
>245	Identifier	work
>246	Argument	from_next
>247	Identifier	from_next
>248	Argument	src . c_str ( ) + src . size ( )
>249	AdditiveExpression	src . c_str ( ) + src . size ( )
>250	CallExpression	src . size ( )
>251	ArgumentList	 
>252	Callee	src . size
>253	MemberAccess	src . size
>254	Identifier	size
>255	Identifier	src
>256	CallExpression	src . c_str ( )
>257	ArgumentList	 
>258	Callee	src . c_str
>259	MemberAccess	src . c_str
>260	Identifier	c_str
>261	Identifier	src
>262	Argument	src . c_str ( )
>263	CallExpression	src . c_str ( )
>264	ArgumentList	 
>265	Callee	src . c_str
>266	MemberAccess	src . c_str
>267	Identifier	c_str
>268	Identifier	src
>269	Argument	state
>270	Identifier	state
>271	Callee	cvt -> in
>272	PtrMemberAccess	cvt -> in
>273	Identifier	in
>274	Identifier	cvt
>275	IdentifierDeclStatement	 
>276	IdentifierDecl	* to_next
>277	Identifier	to_next
>278	IdentifierDeclType	internal_string_type 
>279	IdentifierDeclStatement	 
>280	IdentifierDecl	* from_next
>281	Identifier	from_next
>282	IdentifierDeclType	const external_string_type 
>283	IdentifierDeclStatement	 
>284	IdentifierDecl	state
>285	Identifier	state
>286	IdentifierDeclType	std 
>287	IdentifierDeclStatement	 
>288	IdentifierDecl	work ( new wchar_t [ work_size ] )
>289	Identifier	work_size
>290	Identifier	work
>291	IdentifierDeclType	boost 
>292	IdentifierDeclStatement	 
>293	IdentifierDecl	work_size ( src . size ( ) + 1 )
>294	AdditiveExpression	src . size ( ) + 1
>295	PrimaryExpression	1
>296	CallExpression	src . size ( )
>297	ArgumentList	 
>298	Callee	src . size
>299	MemberAccess	src . size
>300	Identifier	size
>301	Identifier	src
>302	Identifier	work_size
>303	IdentifierDeclType	std 
>323	FunctionDef	mbpath_traits 
>324	ParameterList	const std 
>325	Parameter	 
>326	Identifier	new_loc
>327	ParameterType	const std 
>328	ReturnType	void
>329	CompoundStatement	 
>330	ExpressionStatement	 
>331	Identifier	loc
>332	Statement	 
>333	Statement	 
>334	Statement	 
>335	Statement	 
>336	Statement	 
>337	Statement	 
>338	Statement	 
>339	Statement	 
>340	Statement	 
>341	Statement	 
>342	Statement	 
>343	Statement	 
>344	Statement	 
>345	Statement	 
>346	Statement	 
>347	Statement	 
>348	Statement	 
>349	Statement	 
>350	Statement	 
>351	Statement	 
>352	ExpressionStatement	 
>353	AssignmentExpr	loc = new_loc
>354	Identifier	new_loc
>355	Identifier	loc
<5=14,13,6
<6=10,7
<7=9,8
<10=12,11
<14=131,126,122,118,114,60,59,58,57,56,55,54,53,52,51,50,33,27,15
<15=16
<16=25,17
<17=18
<18=19
<19=21,20
<21=22
<22=24,23
<25=26
<27=28
<28=30,29
<30=32,31
<33=34
<34=49,35
<35=48,36
<36=47,37
<37=46,38
<38=44,39
<39=42,40
<40=41
<42=43
<44=45
<60=62,61
<62=63
<63=65,64
<65=110,66
<66=108,101,87,85,78,69,67
<67=68
<69=70
<70=72,71
<72=74,73
<74=75
<75=77,76
<78=79
<79=81,80
<81=82
<82=84,83
<85=86
<87=88
<88=95,89
<89=91,90
<91=92
<92=94,93
<95=97,96
<97=98
<98=100,99
<101=102
<102=104,103
<104=105
<105=107,106
<108=109
<110=111
<111=113,112
<114=115
<115=117,116
<118=119
<119=121,120
<122=123
<123=125,124
<126=127
<127=130,129,128
<131=132
<132=149,148,133
<133=142,134
<134=136,135
<136=138,137
<138=139
<139=141,140
<142=144,143
<144=145
<145=147,146
<171=177,176,172
<172=173
<173=175,174
<177=292,287,283,279,275,221,220,219,218,217,216,215,214,213,212,211,196,195,194,193,192,190,178
<178=179
<179=188,180
<180=181
<181=182
<182=184,183
<184=185
<185=187,186
<188=189
<190=191
<196=197
<197=210,198
<198=209,199
<199=208,200
<200=206,201
<201=204,202
<202=203
<204=205
<206=207
<221=223,222
<223=224
<224=226,225
<226=271,227
<227=269,262,248,246,239,230,228
<228=229
<230=231
<231=233,232
<233=235,234
<235=236
<236=238,237
<239=240
<240=242,241
<242=243
<243=245,244
<246=247
<248=249
<249=256,250
<250=252,251
<252=253
<253=255,254
<256=258,257
<258=259
<259=261,260
<262=263
<263=265,264
<265=266
<266=268,267
<269=270
<271=272
<272=274,273
<275=276
<276=278,277
<279=280
<280=282,281
<283=284
<284=286,285
<287=288
<288=291,290,289
<292=293
<293=303,302,294
<294=296,295
<296=298,297
<298=299
<299=301,300
<323=329,328,324
<324=325
<325=327,326
<329=352,351,350,349,348,347,346,345,344,343,342,341,340,339,338,337,336,335,334,333,332,330
<330=331
<352=353
<353=355,354
