>3	FunctionDef	Demo 
>4	ParameterList	 
>5	CompoundStatement	 
>6	ExpressionStatement	 
>7	AssignmentExpr	frame = 0
>8	PrimaryExpression	0
>9	Identifier	frame
>10	ExpressionStatement	 
>11	AssignmentExpr	mode = DEMOMODE_NONE
>12	Identifier	DEMOMODE_NONE
>13	Identifier	mode
>14	ExpressionStatement	 
>15	AssignmentExpr	time = 0
>16	PrimaryExpression	0
>17	Identifier	time
>25	FunctionDef	Demo 
>26	ParameterList	bool on
>27	Parameter	 
>28	Identifier	on
>29	ParameterType	bool
>30	ReturnType	void
>31	CompoundStatement	 
>32	IfStatement	if ( on )
>33	ElseStatement	else
>34	CompoundStatement	 
>35	ExpressionStatement	 
>36	AssignmentExpr	mode = DEMOMODE_NONE
>37	Identifier	DEMOMODE_NONE
>38	Identifier	mode
>39	CompoundStatement	 
>40	ExpressionStatement	 
>41	AssignmentExpr	frame = 0
>42	PrimaryExpression	0
>43	Identifier	frame
>44	ExpressionStatement	 
>45	AssignmentExpr	timeDiff = 0
>46	PrimaryExpression	0
>47	Identifier	timeDiff
>48	ExpressionStatement	 
>49	AssignmentExpr	time = 0
>50	PrimaryExpression	0
>51	Identifier	time
>52	ExpressionStatement	 
>53	AssignmentExpr	mode = DEMOMODE_RECORD
>54	Identifier	DEMOMODE_RECORD
>55	Identifier	mode
>56	ExpressionStatement	 
>57	CallExpression	frames . clear ( )
>58	ArgumentList	 
>59	Callee	frames . clear
>60	MemberAccess	frames . clear
>61	Identifier	clear
>62	Identifier	frames
>63	ExpressionStatement	 
>64	CallExpression	togglePlayback ( false )
>65	ArgumentList	false
>66	Argument	false
>67	Identifier	false
>68	Callee	togglePlayback
>69	Identifier	togglePlayback
>70	Condition	 
>71	Identifier	on
>84	FunctionDef	Demo 
>85	ParameterList	bool on
>86	Parameter	 
>87	Identifier	on
>88	ParameterType	bool
>89	ReturnType	void
>90	CompoundStatement	 
>91	IfStatement	if ( on )
>92	ElseStatement	else
>93	CompoundStatement	 
>94	ExpressionStatement	 
>95	AssignmentExpr	mode = DEMOMODE_NONE
>96	Identifier	DEMOMODE_NONE
>97	Identifier	mode
>98	ExpressionStatement	 
>99	AssignmentExpr	core -> updateMouse = true
>100	Identifier	true
>101	PtrMemberAccess	core -> updateMouse
>102	Identifier	updateMouse
>103	Identifier	core
>104	ExpressionStatement	 
>105	AssignmentExpr	core -> frameOutputMode = false
>106	Identifier	false
>107	PtrMemberAccess	core -> frameOutputMode
>108	Identifier	frameOutputMode
>109	Identifier	core
>110	CompoundStatement	 
>111	ExpressionStatement	 
>112	AssignmentExpr	frame = 0
>113	PrimaryExpression	0
>114	Identifier	frame
>115	ExpressionStatement	 
>116	AssignmentExpr	timeDiff = 0
>117	PrimaryExpression	0
>118	Identifier	timeDiff
>119	ExpressionStatement	 
>120	AssignmentExpr	time = 0
>121	PrimaryExpression	0
>122	Identifier	time
>123	ExpressionStatement	 
>124	AssignmentExpr	mode = DEMOMODE_PLAYBACK
>125	Identifier	DEMOMODE_PLAYBACK
>126	Identifier	mode
>127	ExpressionStatement	 
>128	AssignmentExpr	core -> updateMouse = false
>129	Identifier	false
>130	PtrMemberAccess	core -> updateMouse
>131	Identifier	updateMouse
>132	Identifier	core
>133	Condition	 
>134	Identifier	on
>151	FunctionDef	Demo 
>152	ParameterList	 
>153	ReturnType	void
>154	CompoundStatement	 
>155	ExpressionStatement	 
>156	CallExpression	togglePlayback ( true )
>157	ArgumentList	true
>158	Argument	true
>159	Identifier	true
>160	Callee	togglePlayback
>161	Identifier	togglePlayback
>162	ExpressionStatement	 
>163	AssignmentExpr	core -> frameOutputMode = true
>164	Identifier	true
>165	PtrMemberAccess	core -> frameOutputMode
>166	Identifier	frameOutputMode
>167	Identifier	core
>175	FunctionDef	Demo 
>176	ParameterList	const std 
>177	Parameter	 
>178	Identifier	name
>179	ParameterType	const std 
>180	ReturnType	void
>181	CompoundStatement	 
>182	IdentifierDeclStatement	 
>183	IdentifierDecl	filename = \"\" + name + \".demo\"
>184	AssignmentExpr	filename = \"\" + name + \".demo\"
>185	AdditiveExpression	\"\" + name + \".demo\"
>186	AdditiveExpression	name + \".demo\"
>187	PrimaryExpression	\".demo\"
>188	Identifier	name
>189	PrimaryExpression	\"\"
>190	Identifier	filename
>191	Identifier	filename
>192	IdentifierDeclType	std 
>193	ExpressionStatement	 
>194	CallExpression	toggleRecord ( false )
>195	ArgumentList	false
>196	Argument	false
>197	Identifier	false
>198	Callee	toggleRecord
>199	Identifier	toggleRecord
>200	ExpressionStatement	 
>201	CallExpression	togglePlayback ( false )
>202	ArgumentList	false
>203	Argument	false
>204	Identifier	false
>205	Callee	togglePlayback
>206	Identifier	togglePlayback
>213	FunctionDef	Demo 
>214	ParameterList	const std 
>215	Parameter	 
>216	Identifier	name
>217	ParameterType	const std 
>218	ReturnType	void
>219	CompoundStatement	 
>220	IdentifierDeclStatement	 
>221	IdentifierDecl	filename = \"\" + name + \".demo\"
>222	AssignmentExpr	filename = \"\" + name + \".demo\"
>223	AdditiveExpression	\"\" + name + \".demo\"
>224	AdditiveExpression	name + \".demo\"
>225	PrimaryExpression	\".demo\"
>226	Identifier	name
>227	PrimaryExpression	\"\"
>228	Identifier	filename
>229	Identifier	filename
>230	IdentifierDeclType	std 
>231	ExpressionStatement	 
>232	CallExpression	toggleRecord ( false )
>233	ArgumentList	false
>234	Argument	false
>235	Identifier	false
>236	Callee	toggleRecord
>237	Identifier	toggleRecord
>238	ExpressionStatement	 
>239	CallExpression	togglePlayback ( false )
>240	ArgumentList	false
>241	Argument	false
>242	Identifier	false
>243	Callee	togglePlayback
>244	Identifier	togglePlayback
>251	FunctionDef	Demo 
>252	ParameterList	 
>253	ReturnType	void
>254	CompoundStatement	 
>255	ExpressionStatement	 
>256	CallExpression	frames . clear ( )
>257	ArgumentList	 
>258	Callee	frames . clear
>259	MemberAccess	frames . clear
>260	Identifier	clear
>261	Identifier	frames
>266	FunctionDef	Demo 
>267	ParameterList	 
>268	ReturnType	bool
>269	CompoundStatement	 
>270	ReturnStatement	 
>271	AndExpression	core -> getKeyState ( KEY_ESCAPE ) && core -> getShiftState ( )
>272	CallExpression	core -> getShiftState ( )
>273	ArgumentList	 
>274	Callee	core -> getShiftState
>275	PtrMemberAccess	core -> getShiftState
>276	Identifier	getShiftState
>277	Identifier	core
>278	CallExpression	core -> getKeyState ( KEY_ESCAPE )
>279	ArgumentList	KEY_ESCAPE
>280	Argument	KEY_ESCAPE
>281	Identifier	KEY_ESCAPE
>282	Callee	core -> getKeyState
>283	PtrMemberAccess	core -> getKeyState
>284	Identifier	getKeyState
>285	Identifier	core
>294	FunctionDef	Demo 
>295	ParameterList	float dt
>296	Parameter	 
>297	Identifier	dt
>298	ParameterType	float
>299	ReturnType	void
>300	CompoundStatement	 
>301	IfStatement	if ( mode == DEMOMODE_RECORD )
>302	ElseStatement	else
>303	IfStatement	if ( mode == DEMOMODE_PLAYBACK )
>304	CompoundStatement	 
>305	IfStatement	if ( getQuitKey ( ) || ( ! frames . empty ( ) && frame >= frames . size ( ) ) )
>306	CompoundStatement	 
>307	ExpressionStatement	 
>308	CallExpression	dsq -> centerMessage ( dsq -> continuity . stringBank . get ( 2011 ) )
>309	ArgumentList	dsq -> continuity . stringBank . get ( 2011 )
>310	Argument	dsq -> continuity . stringBank . get ( 2011 )
>311	CallExpression	dsq -> continuity . stringBank . get ( 2011 )
>312	ArgumentList	2011
>313	Argument	2011
>314	PrimaryExpression	2011
>315	Callee	dsq -> continuity . stringBank . get
>316	MemberAccess	dsq -> continuity . stringBank . get
>317	Identifier	get
>318	MemberAccess	dsq -> continuity . stringBank
>319	Identifier	stringBank
>320	PtrMemberAccess	dsq -> continuity
>321	Identifier	continuity
>322	Identifier	dsq
>323	Callee	dsq -> centerMessage
>324	PtrMemberAccess	dsq -> centerMessage
>325	Identifier	centerMessage
>326	Identifier	dsq
>327	ExpressionStatement	 
>328	CallExpression	togglePlayback ( false )
>329	ArgumentList	false
>330	Argument	false
>331	Identifier	false
>332	Callee	togglePlayback
>333	Identifier	togglePlayback
>334	Condition	 
>335	OrExpression	getQuitKey ( ) || ( ! frames . empty ( ) && frame >= frames . size ( ) )
>336	AndExpression	! frames . empty ( ) && frame >= frames . size ( )
>337	RelationalExpression	frame >= frames . size ( )
>338	CallExpression	frames . size ( )
>339	ArgumentList	 
>340	Callee	frames . size
>341	MemberAccess	frames . size
>342	Identifier	size
>343	Identifier	frames
>344	Identifier	frame
>345	UnaryOp	! frames . empty ( )
>346	CallExpression	frames . empty ( )
>347	ArgumentList	 
>348	Callee	frames . empty
>349	MemberAccess	frames . empty
>350	Identifier	empty
>351	Identifier	frames
>352	UnaryOperator	!
>353	CallExpression	getQuitKey ( )
>354	ArgumentList	 
>355	Callee	getQuitKey
>356	Identifier	getQuitKey
>357	ExpressionStatement	 
>358	AssignmentExpr	time += dt
>359	Identifier	dt
>360	Identifier	time
>361	WhileStatement	while ( frame < frames . size ( ) )
>362	CompoundStatement	 
>363	IfStatement	if ( f -> t <= time )
>364	ElseStatement	else
>365	CompoundStatement	 
>366	BreakStatement	 
>367	CompoundStatement	 
>368	ExpressionStatement	 
>369	IncDecOp	frame ++
>370	IncDec	++
>371	Identifier	frame
>372	ExpressionStatement	 
>373	AssignmentExpr	core -> mouse = f -> mouse
>374	PtrMemberAccess	f -> mouse
>375	Identifier	mouse
>376	Identifier	f
>377	PtrMemberAccess	core -> mouse
>378	Identifier	mouse
>379	Identifier	core
>380	ExpressionStatement	 
>381	AssignmentExpr	dsq -> game -> avatar -> position = f -> avatarPos
>382	PtrMemberAccess	f -> avatarPos
>383	Identifier	avatarPos
>384	Identifier	f
>385	PtrMemberAccess	dsq -> game -> avatar -> position
>386	Identifier	position
>387	PtrMemberAccess	dsq -> game -> avatar
>388	Identifier	avatar
>389	PtrMemberAccess	dsq -> game
>390	Identifier	game
>391	Identifier	dsq
>392	ExpressionStatement	 
>393	AssignmentExpr	dsq -> game -> avatar -> rotation . z = f -> rot
>394	PtrMemberAccess	f -> rot
>395	Identifier	rot
>396	Identifier	f
>397	MemberAccess	dsq -> game -> avatar -> rotation . z
>398	Identifier	z
>399	PtrMemberAccess	dsq -> game -> avatar -> rotation
>400	Identifier	rotation
>401	PtrMemberAccess	dsq -> game -> avatar
>402	Identifier	avatar
>403	PtrMemberAccess	dsq -> game
>404	Identifier	game
>405	Identifier	dsq
>406	ExpressionStatement	 
>407	AssignmentExpr	dsq -> game -> avatar -> vel2 = f -> vel2
>408	PtrMemberAccess	f -> vel2
>409	Identifier	vel2
>410	Identifier	f
>411	PtrMemberAccess	dsq -> game -> avatar -> vel2
>412	Identifier	vel2
>413	PtrMemberAccess	dsq -> game -> avatar
>414	Identifier	avatar
>415	PtrMemberAccess	dsq -> game
>416	Identifier	game
>417	Identifier	dsq
>418	ExpressionStatement	 
>419	AssignmentExpr	dsq -> game -> avatar -> vel = f -> vel
>420	PtrMemberAccess	f -> vel
>421	Identifier	vel
>422	Identifier	f
>423	PtrMemberAccess	dsq -> game -> avatar -> vel
>424	Identifier	vel
>425	PtrMemberAccess	dsq -> game -> avatar
>426	Identifier	avatar
>427	PtrMemberAccess	dsq -> game
>428	Identifier	game
>429	Identifier	dsq
>430	Condition	 
>431	RelationalExpression	f -> t <= time
>432	Identifier	time
>433	PtrMemberAccess	f -> t
>434	Identifier	t
>435	Identifier	f
>436	IdentifierDeclStatement	 
>437	IdentifierDecl	* f = & frames [ frame ]
>438	AssignmentExpr	* f = & frames [ frame ]
>439	UnaryOp	& frames [ frame ]
>440	ArrayIndexing	frames [ frame ]
>441	Identifier	frame
>442	Identifier	frames
>443	UnaryOperator	&
>444	Identifier	f
>445	Identifier	f
>446	IdentifierDeclType	DemoFrame *
>447	Condition	 
>448	RelationalExpression	frame < frames . size ( )
>449	CallExpression	frames . size ( )
>450	ArgumentList	 
>451	Callee	frames . size
>452	MemberAccess	frames . size
>453	Identifier	size
>454	Identifier	frames
>455	Identifier	frame
>456	Condition	 
>457	EqualityExpression	mode == DEMOMODE_PLAYBACK
>458	Identifier	DEMOMODE_PLAYBACK
>459	Identifier	mode
>460	CompoundStatement	 
>461	IfStatement	if ( getQuitKey ( ) )
>462	CompoundStatement	 
>463	ExpressionStatement	 
>464	CallExpression	dsq -> centerMessage ( dsq -> continuity . stringBank . get ( 2010 ) )
>465	ArgumentList	dsq -> continuity . stringBank . get ( 2010 )
>466	Argument	dsq -> continuity . stringBank . get ( 2010 )
>467	CallExpression	dsq -> continuity . stringBank . get ( 2010 )
>468	ArgumentList	2010
>469	Argument	2010
>470	PrimaryExpression	2010
>471	Callee	dsq -> continuity . stringBank . get
>472	MemberAccess	dsq -> continuity . stringBank . get
>473	Identifier	get
>474	MemberAccess	dsq -> continuity . stringBank
>475	Identifier	stringBank
>476	PtrMemberAccess	dsq -> continuity
>477	Identifier	continuity
>478	Identifier	dsq
>479	Callee	dsq -> centerMessage
>480	PtrMemberAccess	dsq -> centerMessage
>481	Identifier	centerMessage
>482	Identifier	dsq
>483	ExpressionStatement	 
>484	CallExpression	toggleRecord ( false )
>485	ArgumentList	false
>486	Argument	false
>487	Identifier	false
>488	Callee	toggleRecord
>489	Identifier	toggleRecord
>490	Condition	 
>491	CallExpression	getQuitKey ( )
>492	ArgumentList	 
>493	Callee	getQuitKey
>494	Identifier	getQuitKey
>495	ExpressionStatement	 
>496	AssignmentExpr	time += dt
>497	Identifier	dt
>498	Identifier	time
>499	ExpressionStatement	 
>500	CallExpression	frames . push_back ( f )
>501	ArgumentList	f
>502	Argument	f
>503	Identifier	f
>504	Callee	frames . push_back
>505	MemberAccess	frames . push_back
>506	Identifier	push_back
>507	Identifier	frames
>508	ExpressionStatement	 
>509	AssignmentExpr	f . t = time
>510	Identifier	time
>511	MemberAccess	f . t
>512	Identifier	t
>513	Identifier	f
>514	ExpressionStatement	 
>515	AssignmentExpr	f . mouse = core -> mouse
>516	PtrMemberAccess	core -> mouse
>517	Identifier	mouse
>518	Identifier	core
>519	MemberAccess	f . mouse
>520	Identifier	mouse
>521	Identifier	f
>522	ExpressionStatement	 
>523	AssignmentExpr	f . rot = dsq -> game -> avatar -> rotation . z
>524	MemberAccess	dsq -> game -> avatar -> rotation . z
>525	Identifier	z
>526	PtrMemberAccess	dsq -> game -> avatar -> rotation
>527	Identifier	rotation
>528	PtrMemberAccess	dsq -> game -> avatar
>529	Identifier	avatar
>530	PtrMemberAccess	dsq -> game
>531	Identifier	game
>532	Identifier	dsq
>533	MemberAccess	f . rot
>534	Identifier	rot
>535	Identifier	f
>536	ExpressionStatement	 
>537	AssignmentExpr	f . vel2 = dsq -> game -> avatar -> vel2
>538	PtrMemberAccess	dsq -> game -> avatar -> vel2
>539	Identifier	vel2
>540	PtrMemberAccess	dsq -> game -> avatar
>541	Identifier	avatar
>542	PtrMemberAccess	dsq -> game
>543	Identifier	game
>544	Identifier	dsq
>545	MemberAccess	f . vel2
>546	Identifier	vel2
>547	Identifier	f
>548	ExpressionStatement	 
>549	AssignmentExpr	f . vel = dsq -> game -> avatar -> vel
>550	PtrMemberAccess	dsq -> game -> avatar -> vel
>551	Identifier	vel
>552	PtrMemberAccess	dsq -> game -> avatar
>553	Identifier	avatar
>554	PtrMemberAccess	dsq -> game
>555	Identifier	game
>556	Identifier	dsq
>557	MemberAccess	f . vel
>558	Identifier	vel
>559	Identifier	f
>560	ExpressionStatement	 
>561	AssignmentExpr	f . avatarPos = dsq -> game -> avatar -> position
>562	PtrMemberAccess	dsq -> game -> avatar -> position
>563	Identifier	position
>564	PtrMemberAccess	dsq -> game -> avatar
>565	Identifier	avatar
>566	PtrMemberAccess	dsq -> game
>567	Identifier	game
>568	Identifier	dsq
>569	MemberAccess	f . avatarPos
>570	Identifier	avatarPos
>571	Identifier	f
>572	IdentifierDeclStatement	 
>573	IdentifierDecl	f
>574	Identifier	f
>575	IdentifierDeclType	DemoFrame
>576	Condition	 
>577	EqualityExpression	mode == DEMOMODE_RECORD
>578	Identifier	DEMOMODE_RECORD
>579	Identifier	mode
>580	IfStatement	if ( core -> getNestedMains ( ) > 1 )
>581	ReturnStatement	 
>582	Condition	 
>583	RelationalExpression	core -> getNestedMains ( ) > 1
>584	PrimaryExpression	1
>585	CallExpression	core -> getNestedMains ( )
>586	ArgumentList	 
>587	Callee	core -> getNestedMains
>588	PtrMemberAccess	core -> getNestedMains
>589	Identifier	getNestedMains
>590	Identifier	core
<3=5,4
<5=14,10,6
<6=7
<7=9,8
<10=11
<11=13,12
<14=15
<15=17,16
<25=31,30,26
<26=27
<27=29,28
<31=32
<32=70,39,33
<33=34
<34=35
<35=36
<36=38,37
<39=63,56,52,48,44,40
<40=41
<41=43,42
<44=45
<45=47,46
<48=49
<49=51,50
<52=53
<53=55,54
<56=57
<57=59,58
<59=60
<60=62,61
<63=64
<64=68,65
<65=66
<66=67
<68=69
<70=71
<84=90,89,85
<85=86
<86=88,87
<90=91
<91=133,110,92
<92=93
<93=104,98,94
<94=95
<95=97,96
<98=99
<99=101,100
<101=103,102
<104=105
<105=107,106
<107=109,108
<110=127,123,119,115,111
<111=112
<112=114,113
<115=116
<116=118,117
<119=120
<120=122,121
<123=124
<124=126,125
<127=128
<128=130,129
<130=132,131
<133=134
<151=154,153,152
<154=162,155
<155=156
<156=160,157
<157=158
<158=159
<160=161
<162=163
<163=165,164
<165=167,166
<175=181,180,176
<176=177
<177=179,178
<181=200,193,182
<182=183
<183=192,191,184
<184=190,185
<185=189,186
<186=188,187
<193=194
<194=198,195
<195=196
<196=197
<198=199
<200=201
<201=205,202
<202=203
<203=204
<205=206
<213=219,218,214
<214=215
<215=217,216
<219=238,231,220
<220=221
<221=230,229,222
<222=228,223
<223=227,224
<224=226,225
<231=232
<232=236,233
<233=234
<234=235
<236=237
<238=239
<239=243,240
<240=241
<241=242
<243=244
<251=254,253,252
<254=255
<255=256
<256=258,257
<258=259
<259=261,260
<266=269,268,267
<269=270
<270=271
<271=278,272
<272=274,273
<274=275
<275=277,276
<278=282,279
<279=280
<280=281
<282=283
<283=285,284
<294=300,299,295
<295=296
<296=298,297
<300=580,301
<301=576,460,302
<302=303
<303=456,304
<304=361,357,305
<305=334,306
<306=327,307
<307=308
<308=323,309
<309=310
<310=311
<311=315,312
<312=313
<313=314
<315=316
<316=318,317
<318=320,319
<320=322,321
<323=324
<324=326,325
<327=328
<328=332,329
<329=330
<330=331
<332=333
<334=335
<335=353,336
<336=345,337
<337=344,338
<338=340,339
<340=341
<341=343,342
<345=352,346
<346=348,347
<348=349
<349=351,350
<353=355,354
<355=356
<357=358
<358=360,359
<361=447,362
<362=436,363
<363=430,367,364
<364=365
<365=366
<367=418,406,392,380,372,368
<368=369
<369=371,370
<372=373
<373=377,374
<374=376,375
<377=379,378
<380=381
<381=385,382
<382=384,383
<385=387,386
<387=389,388
<389=391,390
<392=393
<393=397,394
<394=396,395
<397=399,398
<399=401,400
<401=403,402
<403=405,404
<406=407
<407=411,408
<408=410,409
<411=413,412
<413=415,414
<415=417,416
<418=419
<419=423,420
<420=422,421
<423=425,424
<425=427,426
<427=429,428
<430=431
<431=433,432
<433=435,434
<436=437
<437=446,445,438
<438=444,439
<439=443,440
<440=442,441
<447=448
<448=455,449
<449=451,450
<451=452
<452=454,453
<456=457
<457=459,458
<460=572,560,548,536,522,514,508,499,495,461
<461=490,462
<462=483,463
<463=464
<464=479,465
<465=466
<466=467
<467=471,468
<468=469
<469=470
<471=472
<472=474,473
<474=476,475
<476=478,477
<479=480
<480=482,481
<483=484
<484=488,485
<485=486
<486=487
<488=489
<490=491
<491=493,492
<493=494
<495=496
<496=498,497
<499=500
<500=504,501
<501=502
<502=503
<504=505
<505=507,506
<508=509
<509=511,510
<511=513,512
<514=515
<515=519,516
<516=518,517
<519=521,520
<522=523
<523=533,524
<524=526,525
<526=528,527
<528=530,529
<530=532,531
<533=535,534
<536=537
<537=545,538
<538=540,539
<540=542,541
<542=544,543
<545=547,546
<548=549
<549=557,550
<550=552,551
<552=554,553
<554=556,555
<557=559,558
<560=561
<561=569,562
<562=564,563
<564=566,565
<566=568,567
<569=571,570
<572=573
<573=575,574
<576=577
<577=579,578
<580=582,581
<582=583
<583=585,584
<585=587,586
<587=588
<588=590,589
