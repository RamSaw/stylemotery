>3	FunctionDef	FX_stack 
>4	ParameterList	FX * effect , int draw_order_id
>5	Parameter	 
>6	Identifier	draw_order_id
>7	ParameterType	int
>8	Parameter	 
>9	Identifier	effect
>10	ParameterType	FX *
>11	ReturnType	void
>12	CompoundStatement	 
>13	ExpressionStatement	 
>14	CallExpression	m_effects . push_back ( make_pair ( effect , draw_order_id ) )
>15	ArgumentList	make_pair ( effect , draw_order_id )
>16	Argument	make_pair ( effect , draw_order_id )
>17	CallExpression	make_pair ( effect , draw_order_id )
>18	ArgumentList	effect
>19	Argument	draw_order_id
>20	Identifier	draw_order_id
>21	Argument	effect
>22	Identifier	effect
>23	Callee	make_pair
>24	Identifier	make_pair
>25	Callee	m_effects . push_back
>26	MemberAccess	m_effects . push_back
>27	Identifier	push_back
>28	Identifier	m_effects
>36	FunctionDef	FX_stack 
>37	ParameterList	 
>38	ReturnType	void
>39	CompoundStatement	 
>40	ForStatement	for ( fx_items_ary_t 
>41	CompoundStatement	 
>42	IfStatement	if ( effect -> finished ( ) )
>43	ElseStatement	else
>44	CompoundStatement	 
>45	ExpressionStatement	 
>46	UnaryExpression	++ it
>47	Identifier	it
>48	IncDec	++
>49	CompoundStatement	 
>50	ExpressionStatement	 
>51	AssignmentExpr	it = m_effects . erase ( it )
>52	CallExpression	m_effects . erase ( it )
>53	ArgumentList	it
>54	Argument	it
>55	Identifier	it
>56	Callee	m_effects . erase
>57	MemberAccess	m_effects . erase
>58	Identifier	erase
>59	Identifier	m_effects
>60	Identifier	it
>61	ExpressionStatement	 
>62	Identifier	effect
>63	Statement	 
>64	Condition	 
>65	CallExpression	effect -> finished ( )
>66	ArgumentList	 
>67	Callee	effect -> finished
>68	PtrMemberAccess	effect -> finished
>69	Identifier	finished
>70	Identifier	effect
>71	ExpressionStatement	 
>72	CallExpression	effect -> update ( )
>73	ArgumentList	 
>74	Callee	effect -> update
>75	PtrMemberAccess	effect -> update
>76	Identifier	update
>77	Identifier	effect
>78	IdentifierDeclStatement	 
>79	IdentifierDecl	* effect = it -> first
>80	AssignmentExpr	* effect = it -> first
>81	PtrMemberAccess	it -> first
>82	Identifier	first
>83	Identifier	it
>84	Identifier	effect
>85	Identifier	effect
>86	IdentifierDeclType	FX *
>87	Condition	 
>88	EqualityExpression	it != m_effects . end ( )
>89	CallExpression	m_effects . end ( )
>90	ArgumentList	 
>91	Callee	m_effects . end
>92	MemberAccess	m_effects . end
>93	Identifier	end
>94	Identifier	m_effects
>95	Identifier	it
>96	ForInit	 
>97	IdentifierDeclStatement	fx_items_ary_t 
>98	IdentifierDecl	it = m_effects . begin ( )
>99	AssignmentExpr	it = m_effects . begin ( )
>100	CallExpression	m_effects . begin ( )
>101	ArgumentList	 
>102	Callee	m_effects . begin
>103	MemberAccess	m_effects . begin
>104	Identifier	begin
>105	Identifier	m_effects
>106	Identifier	it
>107	Identifier	it
>108	IdentifierDeclType	fx_items_ary_t 
>122	FunctionDef	FX_stack 
>123	ParameterList	int id
>124	Parameter	 
>125	Identifier	id
>126	ParameterType	int
>127	ReturnType	void
>128	CompoundStatement	 
>129	ForStatement	for ( fx_items_ary_t 
>130	CompoundStatement	 
>131	ExpressionStatement	 
>132	CallExpression	effect -> draw ( )
>133	ArgumentList	 
>134	Callee	effect -> draw
>135	PtrMemberAccess	effect -> draw
>136	Identifier	draw
>137	Identifier	effect
>138	IdentifierDeclStatement	 
>139	IdentifierDecl	* effect = it -> first
>140	AssignmentExpr	* effect = it -> first
>141	PtrMemberAccess	it -> first
>142	Identifier	first
>143	Identifier	it
>144	Identifier	effect
>145	Identifier	effect
>146	IdentifierDeclType	FX *
>147	IfStatement	if ( fx_draw_id != id )
>148	ContinueStatement	 
>149	Condition	 
>150	EqualityExpression	fx_draw_id != id
>151	Identifier	id
>152	Identifier	fx_draw_id
>153	IdentifierDeclStatement	 
>154	IdentifierDecl	fx_draw_id = it -> second
>155	AssignmentExpr	fx_draw_id = it -> second
>156	PtrMemberAccess	it -> second
>157	Identifier	second
>158	Identifier	it
>159	Identifier	fx_draw_id
>160	Identifier	fx_draw_id
>161	IdentifierDeclType	int
>162	UnaryExpression	 
>163	Identifier	it
>164	IncDec	++
>165	Condition	 
>166	EqualityExpression	it != m_effects . end ( )
>167	CallExpression	m_effects . end ( )
>168	ArgumentList	 
>169	Callee	m_effects . end
>170	MemberAccess	m_effects . end
>171	Identifier	end
>172	Identifier	m_effects
>173	Identifier	it
>174	ForInit	 
>175	IdentifierDeclStatement	fx_items_ary_t 
>176	IdentifierDecl	it = m_effects . begin ( )
>177	AssignmentExpr	it = m_effects . begin ( )
>178	CallExpression	m_effects . begin ( )
>179	ArgumentList	 
>180	Callee	m_effects . begin
>181	MemberAccess	m_effects . begin
>182	Identifier	begin
>183	Identifier	m_effects
>184	Identifier	it
>185	Identifier	it
>186	IdentifierDeclType	fx_items_ary_t 
>200	FunctionDef	FX_stack 
>201	ParameterList	 
>202	ReturnType	void
>203	CompoundStatement	 
>204	ForStatement	for ( fx_items_ary_t 
>205	CompoundStatement	 
>206	ExpressionStatement	 
>207	CallExpression	effect -> draw ( )
>208	ArgumentList	 
>209	Callee	effect -> draw
>210	PtrMemberAccess	effect -> draw
>211	Identifier	draw
>212	Identifier	effect
>213	IdentifierDeclStatement	 
>214	IdentifierDecl	* effect = it -> first
>215	AssignmentExpr	* effect = it -> first
>216	PtrMemberAccess	it -> first
>217	Identifier	first
>218	Identifier	it
>219	Identifier	effect
>220	Identifier	effect
>221	IdentifierDeclType	FX *
>222	UnaryExpression	 
>223	Identifier	it
>224	IncDec	++
>225	Condition	 
>226	EqualityExpression	it != m_effects . end ( )
>227	CallExpression	m_effects . end ( )
>228	ArgumentList	 
>229	Callee	m_effects . end
>230	MemberAccess	m_effects . end
>231	Identifier	end
>232	Identifier	m_effects
>233	Identifier	it
>234	ForInit	 
>235	IdentifierDeclStatement	fx_items_ary_t 
>236	IdentifierDecl	it = m_effects . begin ( )
>237	AssignmentExpr	it = m_effects . begin ( )
>238	CallExpression	m_effects . begin ( )
>239	ArgumentList	 
>240	Callee	m_effects . begin
>241	MemberAccess	m_effects . begin
>242	Identifier	begin
>243	Identifier	m_effects
>244	Identifier	it
>245	Identifier	it
>246	IdentifierDeclType	fx_items_ary_t 
>257	FunctionDef	FX_stack 
>258	ParameterList	 
>259	ReturnType	void
>260	CompoundStatement	 
>261	ExpressionStatement	 
>262	CallExpression	m_effects . clear ( )
>263	ArgumentList	 
>264	Callee	m_effects . clear
>265	MemberAccess	m_effects . clear
>266	Identifier	clear
>267	Identifier	m_effects
>268	ForStatement	for ( fx_items_ary_t 
>269	CompoundStatement	 
>270	ExpressionStatement	 
>271	Identifier	effect
>272	Statement	 
>273	IdentifierDeclStatement	 
>274	IdentifierDecl	* effect = it -> first
>275	AssignmentExpr	* effect = it -> first
>276	PtrMemberAccess	it -> first
>277	Identifier	first
>278	Identifier	it
>279	Identifier	effect
>280	Identifier	effect
>281	IdentifierDeclType	FX *
>282	UnaryExpression	 
>283	Identifier	it
>284	IncDec	++
>285	Condition	 
>286	EqualityExpression	it != m_effects . end ( )
>287	CallExpression	m_effects . end ( )
>288	ArgumentList	 
>289	Callee	m_effects . end
>290	MemberAccess	m_effects . end
>291	Identifier	end
>292	Identifier	m_effects
>293	Identifier	it
>294	ForInit	 
>295	IdentifierDeclStatement	fx_items_ary_t 
>296	IdentifierDecl	it = m_effects . begin ( )
>297	AssignmentExpr	it = m_effects . begin ( )
>298	CallExpression	m_effects . begin ( )
>299	ArgumentList	 
>300	Callee	m_effects . begin
>301	MemberAccess	m_effects . begin
>302	Identifier	begin
>303	Identifier	m_effects
>304	Identifier	it
>305	Identifier	it
>306	IdentifierDeclType	fx_items_ary_t 
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=13
<13=14
<14=25,15
<15=16
<16=17
<17=23,18
<18=21,19
<19=20
<21=22
<23=24
<25=26
<26=28,27
<36=39,38,37
<39=40
<40=96,87,41
<41=78,71,42
<42=64,49,43
<43=44
<44=45
<45=46
<46=48,47
<49=63,61,50
<50=51
<51=60,52
<52=56,53
<53=54
<54=55
<56=57
<57=59,58
<61=62
<64=65
<65=67,66
<67=68
<68=70,69
<71=72
<72=74,73
<74=75
<75=77,76
<78=79
<79=86,85,80
<80=84,81
<81=83,82
<87=88
<88=95,89
<89=91,90
<91=92
<92=94,93
<96=97
<97=98
<98=108,107,99
<99=106,100
<100=102,101
<102=103
<103=105,104
<122=128,127,123
<123=124
<124=126,125
<128=129
<129=174,165,162,130
<130=153,147,138,131
<131=132
<132=134,133
<134=135
<135=137,136
<138=139
<139=146,145,140
<140=144,141
<141=143,142
<147=149,148
<149=150
<150=152,151
<153=154
<154=161,160,155
<155=159,156
<156=158,157
<162=164,163
<165=166
<166=173,167
<167=169,168
<169=170
<170=172,171
<174=175
<175=176
<176=186,185,177
<177=184,178
<178=180,179
<180=181
<181=183,182
<200=203,202,201
<203=204
<204=234,225,222,205
<205=213,206
<206=207
<207=209,208
<209=210
<210=212,211
<213=214
<214=221,220,215
<215=219,216
<216=218,217
<222=224,223
<225=226
<226=233,227
<227=229,228
<229=230
<230=232,231
<234=235
<235=236
<236=246,245,237
<237=244,238
<238=240,239
<240=241
<241=243,242
<257=260,259,258
<260=268,261
<261=262
<262=264,263
<264=265
<265=267,266
<268=294,285,282,269
<269=273,272,270
<270=271
<273=274
<274=281,280,275
<275=279,276
<276=278,277
<282=284,283
<285=286
<286=293,287
<287=289,288
<289=290
<290=292,291
<294=295
<295=296
<296=306,305,297
<297=304,298
<298=300,299
<300=301
<301=303,302
