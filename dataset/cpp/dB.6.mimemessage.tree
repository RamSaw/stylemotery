>3	FunctionDef	CMimeMessage 
>4	ParameterList	 
>5	CompoundStatement	 
>6	ExpressionStatement	 
>7	CallExpression	m_MimeHeader . Add ( \"x-mimeole\" , \"Sent with Vestris BC++ (http
>8	ArgumentList	\"x-mimeole\"
>9	Argument	\"Sent with Vestris BC++ (http
>10	PrimaryExpression	\"Sent with Vestris BC++ (http
>11	Argument	\"x-mimeole\"
>12	PrimaryExpression	\"x-mimeole\"
>13	Callee	m_MimeHeader . Add
>14	MemberAccess	m_MimeHeader . Add
>15	Identifier	Add
>16	Identifier	m_MimeHeader
>17	ExpressionStatement	 
>18	CallExpression	m_MimeHeader . Add ( \"x-mailer\" , \"Vestris BC++\" )
>19	ArgumentList	\"x-mailer\"
>20	Argument	\"Vestris BC++\"
>21	PrimaryExpression	\"Vestris BC++\"
>22	Argument	\"x-mailer\"
>23	PrimaryExpression	\"x-mailer\"
>24	Callee	m_MimeHeader . Add
>25	MemberAccess	m_MimeHeader . Add
>26	Identifier	Add
>27	Identifier	m_MimeHeader
>28	ExpressionStatement	 
>29	CallExpression	m_MimeHeader . Add ( \"x-priority\" , \"3\" )
>30	ArgumentList	\"x-priority\"
>31	Argument	\"3\"
>32	PrimaryExpression	\"3\"
>33	Argument	\"x-priority\"
>34	PrimaryExpression	\"x-priority\"
>35	Callee	m_MimeHeader . Add
>36	MemberAccess	m_MimeHeader . Add
>37	Identifier	Add
>38	Identifier	m_MimeHeader
>39	ExpressionStatement	 
>40	CallExpression	m_MimeHeader . Add ( \"mime-version\" , \"1.0\" )
>41	ArgumentList	\"mime-version\"
>42	Argument	\"1.0\"
>43	PrimaryExpression	\"1.0\"
>44	Argument	\"mime-version\"
>45	PrimaryExpression	\"mime-version\"
>46	Callee	m_MimeHeader . Add
>47	MemberAccess	m_MimeHeader . Add
>48	Identifier	Add
>49	Identifier	m_MimeHeader
>54	FunctionDef	CMimeMessage 
>55	ParameterList	 
>56	CompoundStatement	 
>60	FunctionDef	CMimeMessage 
>61	ParameterList	const CString & ssContentType , const CString & ssFilePath , CString * pssResult
>62	Parameter	 
>63	Identifier	pssResult
>64	ParameterType	CString *
>65	Parameter	 
>66	Identifier	ssFilePath
>67	ParameterType	const CString &
>68	Parameter	 
>69	Identifier	ssContentType
>70	ParameterType	const CString &
>71	ReturnType	bool
>72	CompoundStatement	 
>73	ReturnStatement	 
>74	Identifier	true
>75	ExpressionStatement	 
>76	AssignmentExpr	( * pssResult ) = ssResult
>77	Identifier	ssResult
>78	UnaryOp	* pssResult
>79	Identifier	pssResult
>80	UnaryOperator	*
>81	IfStatement	if ( ssFilePath . GetLength ( ) )
>82	ElseStatement	else
>83	CompoundStatement	 
>84	ExpressionStatement	 
>85	AssignmentExpr	ssResult += \"Content-Transfer-Encoding
>86	PrimaryExpression	\"Content-Transfer-Encoding
>87	Identifier	ssResult
>88	ExpressionStatement	 
>89	AssignmentExpr	ssResult += \"; charset=\\"us-ascii\\"\r\n\"
>90	PrimaryExpression	\"; charset=\\"us-ascii\\"\r\n\"
>91	Identifier	ssResult
>92	IfStatement	if ( ssContentType . GetLength ( ) )
>93	ElseStatement	else
>94	CompoundStatement	 
>95	ExpressionStatement	 
>96	AssignmentExpr	ssResult += \"text/plain\"
>97	PrimaryExpression	\"text/plain\"
>98	Identifier	ssResult
>99	CompoundStatement	 
>100	ExpressionStatement	 
>101	AssignmentExpr	ssResult += ssContentType
>102	Identifier	ssContentType
>103	Identifier	ssResult
>104	Condition	 
>105	CallExpression	ssContentType . GetLength ( )
>106	ArgumentList	 
>107	Callee	ssContentType . GetLength
>108	MemberAccess	ssContentType . GetLength
>109	Identifier	GetLength
>110	Identifier	ssContentType
>111	CompoundStatement	 
>112	ExpressionStatement	 
>113	AssignmentExpr	ssResult += \"\\"\"
>114	PrimaryExpression	\"\\"\"
>115	Identifier	ssResult
>116	ExpressionStatement	 
>117	AssignmentExpr	ssResult += ssShortName
>118	Identifier	ssShortName
>119	Identifier	ssResult
>120	ExpressionStatement	 
>121	AssignmentExpr	ssResult += \"\r\n\tfilename=\\"\"
>122	PrimaryExpression	\"\r\n\tfilename=\\"\"
>123	Identifier	ssResult
>124	ExpressionStatement	 
>125	AssignmentExpr	ssResult += \"\r\nContent-Disposition
>126	PrimaryExpression	\"\r\nContent-Disposition
>127	Identifier	ssResult
>128	ExpressionStatement	 
>129	AssignmentExpr	ssResult += \"\\"\r\nContent-Transfer-Encoding
>130	PrimaryExpression	\"\\"\r\nContent-Transfer-Encoding
>131	Identifier	ssResult
>132	ExpressionStatement	 
>133	AssignmentExpr	ssResult += ssShortName
>134	Identifier	ssShortName
>135	Identifier	ssResult
>136	ExpressionStatement	 
>137	AssignmentExpr	ssResult += \"\r\n\tname=\\"\"
>138	PrimaryExpression	\"\r\n\tname=\\"\"
>139	Identifier	ssResult
>140	ExpressionStatement	 
>141	AssignmentExpr	ssResult += \";\"
>142	PrimaryExpression	\";\"
>143	Identifier	ssResult
>144	IfStatement	if ( ssContentType . GetLength ( ) )
>145	ElseStatement	else
>146	ExpressionStatement	 
>147	AssignmentExpr	ssResult += \"text/plain\"
>148	PrimaryExpression	\"text/plain\"
>149	Identifier	ssResult
>150	ExpressionStatement	 
>151	AssignmentExpr	ssResult += ssContentType
>152	Identifier	ssContentType
>153	Identifier	ssResult
>154	Condition	 
>155	CallExpression	ssContentType . GetLength ( )
>156	ArgumentList	 
>157	Callee	ssContentType . GetLength
>158	MemberAccess	ssContentType . GetLength
>159	Identifier	GetLength
>160	Identifier	ssContentType
>161	IfStatement	if ( nPos != - 1 )
>162	ElseStatement	else
>163	CompoundStatement	 
>164	ExpressionStatement	 
>165	AssignmentExpr	ssShortName = ssFilePath
>166	Identifier	ssFilePath
>167	Identifier	ssShortName
>168	CompoundStatement	 
>169	ExpressionStatement	 
>170	CallExpression	ssFilePath . Mid ( nPos + 1 , ssFilePath . GetLength ( ) , & ssShortName )
>171	ArgumentList	nPos + 1
>172	Argument	& ssShortName
>173	UnaryOp	& ssShortName
>174	Identifier	ssShortName
>175	UnaryOperator	&
>176	Argument	ssFilePath . GetLength ( )
>177	CallExpression	ssFilePath . GetLength ( )
>178	ArgumentList	 
>179	Callee	ssFilePath . GetLength
>180	MemberAccess	ssFilePath . GetLength
>181	Identifier	GetLength
>182	Identifier	ssFilePath
>183	Argument	nPos + 1
>184	AdditiveExpression	nPos + 1
>185	PrimaryExpression	1
>186	Identifier	nPos
>187	Callee	ssFilePath . Mid
>188	MemberAccess	ssFilePath . Mid
>189	Identifier	Mid
>190	Identifier	ssFilePath
>191	Condition	 
>192	EqualityExpression	nPos != - 1
>193	UnaryOp	- 1
>194	PrimaryExpression	1
>195	UnaryOperator	-
>196	Identifier	nPos
>197	ExpressionStatement	 
>198	AssignmentExpr	nPos = ssFilePath . InvPos ( '\\' )
>199	CallExpression	ssFilePath . InvPos ( '\\' )
>200	ArgumentList	'\\'
>201	Argument	'\\'
>202	PrimaryExpression	'\\'
>203	Callee	ssFilePath . InvPos
>204	MemberAccess	ssFilePath . InvPos
>205	Identifier	InvPos
>206	Identifier	ssFilePath
>207	Identifier	nPos
>208	IdentifierDeclStatement	 
>209	IdentifierDecl	ssShortName
>210	Identifier	ssShortName
>211	IdentifierDeclType	CString
>212	Condition	 
>213	CallExpression	ssFilePath . GetLength ( )
>214	ArgumentList	 
>215	Callee	ssFilePath . GetLength
>216	MemberAccess	ssFilePath . GetLength
>217	Identifier	GetLength
>218	Identifier	ssFilePath
>219	IfStatement	if ( ! pssResult )
>220	ReturnStatement	 
>221	Identifier	false
>222	Condition	 
>223	UnaryOp	! pssResult
>224	Identifier	pssResult
>225	UnaryOperator	!
>226	IdentifierDeclStatement	 
>227	IdentifierDecl	ssResult
>228	Identifier	ssResult
>229	IdentifierDeclType	CString
>230	IdentifierDeclStatement	 
>231	IdentifierDecl	nPos
>232	Identifier	nPos
>233	IdentifierDeclType	long
>250	FunctionDef	CMimeMessage 
>251	ParameterList	CString * pssMessage
>252	Parameter	 
>253	Identifier	pssMessage
>254	ParameterType	CString *
>255	ReturnType	bool
>256	CompoundStatement	 
>257	ReturnStatement	 
>258	Identifier	true
>259	ExpressionStatement	 
>260	CallExpression	pssMessage -> Append ( ssDeclareBoundary )
>261	ArgumentList	ssDeclareBoundary
>262	Argument	ssDeclareBoundary
>263	Identifier	ssDeclareBoundary
>264	Callee	pssMessage -> Append
>265	PtrMemberAccess	pssMessage -> Append
>266	Identifier	Append
>267	Identifier	pssMessage
>268	ExpressionStatement	 
>269	CallExpression	CMimeHeader 
>270	ArgumentList	& ssDeclareBoundary
>271	Argument	& ssBoundary
>272	UnaryOp	& ssBoundary
>273	Identifier	ssBoundary
>274	UnaryOperator	&
>275	Argument	btBoundaryTerminate
>276	Identifier	btBoundaryTerminate
>277	Argument	& ssDeclareBoundary
>278	UnaryOp	& ssDeclareBoundary
>279	Identifier	ssDeclareBoundary
>280	UnaryOperator	&
>281	Callee	CMimeHeader 
>282	Identifier	CMimeHeader 
>283	ForStatement	for ( i = 0 ; i < ( int ) m_Attachments . GetSize ( ) ; i ++ )
>284	CompoundStatement	 
>285	IfStatement	if ( ! GetAttachment ( m_Attachments [ i ] , pssMessage , ssBoundary ) )
>286	ReturnStatement	 
>287	Identifier	false
>288	Condition	 
>289	UnaryOp	! GetAttachment ( m_Attachments [ i ] , pssMessage , ssBoundary )
>290	CallExpression	GetAttachment ( m_Attachments [ i ] , pssMessage , ssBoundary )
>291	ArgumentList	m_Attachments [ i ]
>292	Argument	ssBoundary
>293	Identifier	ssBoundary
>294	Argument	pssMessage
>295	Identifier	pssMessage
>296	Argument	m_Attachments [ i ]
>297	ArrayIndexing	m_Attachments [ i ]
>298	Identifier	i
>299	Identifier	m_Attachments
>300	Callee	GetAttachment
>301	Identifier	GetAttachment
>302	UnaryOperator	!
>303	IncDecOp	 
>304	IncDec	++
>305	Identifier	i
>306	Condition	 
>307	RelationalExpression	i < ( int ) m_Attachments . GetSize ( )
>308	CastExpression	( int ) m_Attachments . GetSize ( )
>309	CallExpression	m_Attachments . GetSize ( )
>310	ArgumentList	 
>311	Callee	m_Attachments . GetSize
>312	MemberAccess	m_Attachments . GetSize
>313	Identifier	GetSize
>314	Identifier	m_Attachments
>315	CastTarget	int
>316	Identifier	i
>317	ForInit	 
>318	AssignmentExpr	i = 0
>319	PrimaryExpression	0
>320	Identifier	i
>321	ExpressionStatement	 
>322	CallExpression	pssMessage -> Append ( \"\r\n\r\n\" )
>323	ArgumentList	\"\r\n\r\n\"
>324	Argument	\"\r\n\r\n\"
>325	PrimaryExpression	\"\r\n\r\n\"
>326	Callee	pssMessage -> Append
>327	PtrMemberAccess	pssMessage -> Append
>328	Identifier	Append
>329	Identifier	pssMessage
>330	ExpressionStatement	 
>331	CallExpression	pssMessage -> Append ( m_MimeBody . GetBody ( ) )
>332	ArgumentList	m_MimeBody . GetBody ( )
>333	Argument	m_MimeBody . GetBody ( )
>334	CallExpression	m_MimeBody . GetBody ( )
>335	ArgumentList	 
>336	Callee	m_MimeBody . GetBody
>337	MemberAccess	m_MimeBody . GetBody
>338	Identifier	GetBody
>339	Identifier	m_MimeBody
>340	Callee	pssMessage -> Append
>341	PtrMemberAccess	pssMessage -> Append
>342	Identifier	Append
>343	Identifier	pssMessage
>344	ExpressionStatement	 
>345	CallExpression	pssMessage -> Append ( \"\r\n\" )
>346	ArgumentList	\"\r\n\"
>347	Argument	\"\r\n\"
>348	PrimaryExpression	\"\r\n\"
>349	Callee	pssMessage -> Append
>350	PtrMemberAccess	pssMessage -> Append
>351	Identifier	Append
>352	Identifier	pssMessage
>353	ExpressionStatement	 
>354	CallExpression	m_MimeHeader . Dump ( pssMessage , false )
>355	ArgumentList	pssMessage
>356	Argument	false
>357	Identifier	false
>358	Argument	pssMessage
>359	Identifier	pssMessage
>360	Callee	m_MimeHeader . Dump
>361	MemberAccess	m_MimeHeader . Dump
>362	Identifier	Dump
>363	Identifier	m_MimeHeader
>364	ExpressionStatement	 
>365	CallExpression	pssMessage -> Append ( ssDeclareBoundary )
>366	ArgumentList	ssDeclareBoundary
>367	Argument	ssDeclareBoundary
>368	Identifier	ssDeclareBoundary
>369	Callee	pssMessage -> Append
>370	PtrMemberAccess	pssMessage -> Append
>371	Identifier	Append
>372	Identifier	pssMessage
>373	ExpressionStatement	 
>374	CallExpression	CMimeHeader 
>375	ArgumentList	& ssDeclareBoundary
>376	Argument	& ssBoundary
>377	UnaryOp	& ssBoundary
>378	Identifier	ssBoundary
>379	UnaryOperator	&
>380	Argument	btBoundarySeparate
>381	Identifier	btBoundarySeparate
>382	Argument	& ssDeclareBoundary
>383	UnaryOp	& ssDeclareBoundary
>384	Identifier	ssDeclareBoundary
>385	UnaryOperator	&
>386	Callee	CMimeHeader 
>387	Identifier	CMimeHeader 
>388	ExpressionStatement	 
>389	CallExpression	pssMessage -> Append ( \"\r\nThis is a multi-part message in MIME format.\r\n\r\n\" )
>390	ArgumentList	\"\r\nThis is a multi-part message in MIME format.\r\n\r\n\"
>391	Argument	\"\r\nThis is a multi-part message in MIME format.\r\n\r\n\"
>392	PrimaryExpression	\"\r\nThis is a multi-part message in MIME format.\r\n\r\n\"
>393	Callee	pssMessage -> Append
>394	PtrMemberAccess	pssMessage -> Append
>395	Identifier	Append
>396	Identifier	pssMessage
>397	ExpressionStatement	 
>398	CallExpression	( ( CMimeMessage * ) this ) -> m_MimeHeader . Set ( \"content-type\" , ssSavedContentType )
>399	ArgumentList	\"content-type\"
>400	Argument	ssSavedContentType
>401	Identifier	ssSavedContentType
>402	Argument	\"content-type\"
>403	PrimaryExpression	\"content-type\"
>404	Callee	( ( CMimeMessage * ) this ) -> m_MimeHeader . Set
>405	MemberAccess	( ( CMimeMessage * ) this ) -> m_MimeHeader . Set
>406	Identifier	Set
>407	PtrMemberAccess	( ( CMimeMessage * ) this ) -> m_MimeHeader
>408	Identifier	m_MimeHeader
>409	CastExpression	( CMimeMessage * ) this
>410	Identifier	this
>411	CastTarget	CMimeMessage *
>412	ExpressionStatement	 
>413	CallExpression	GetContentHeader ( ssSavedContentType , \"\" , & ssSavedContentType )
>414	ArgumentList	ssSavedContentType
>415	Argument	& ssSavedContentType
>416	UnaryOp	& ssSavedContentType
>417	Identifier	ssSavedContentType
>418	UnaryOperator	&
>419	Argument	\"\"
>420	PrimaryExpression	\"\"
>421	Argument	ssSavedContentType
>422	Identifier	ssSavedContentType
>423	Callee	GetContentHeader
>424	Identifier	GetContentHeader
>425	ExpressionStatement	 
>426	CallExpression	m_MimeHeader . Dump ( pssMessage )
>427	ArgumentList	pssMessage
>428	Argument	pssMessage
>429	Identifier	pssMessage
>430	Callee	m_MimeHeader . Dump
>431	MemberAccess	m_MimeHeader . Dump
>432	Identifier	Dump
>433	Identifier	m_MimeHeader
>434	ExpressionStatement	 
>435	CallExpression	( ( CMimeMessage * ) this ) -> m_MimeHeader . Set ( \"content-type\" , ssContentType )
>436	ArgumentList	\"content-type\"
>437	Argument	ssContentType
>438	Identifier	ssContentType
>439	Argument	\"content-type\"
>440	PrimaryExpression	\"content-type\"
>441	Callee	( ( CMimeMessage * ) this ) -> m_MimeHeader . Set
>442	MemberAccess	( ( CMimeMessage * ) this ) -> m_MimeHeader . Set
>443	Identifier	Set
>444	PtrMemberAccess	( ( CMimeMessage * ) this ) -> m_MimeHeader
>445	Identifier	m_MimeHeader
>446	CastExpression	( CMimeMessage * ) this
>447	Identifier	this
>448	CastTarget	CMimeMessage *
>449	ExpressionStatement	 
>450	CallExpression	ssContentType . Append ( ssDeclareBoundary )
>451	ArgumentList	ssDeclareBoundary
>452	Argument	ssDeclareBoundary
>453	Identifier	ssDeclareBoundary
>454	Callee	ssContentType . Append
>455	MemberAccess	ssContentType . Append
>456	Identifier	Append
>457	Identifier	ssContentType
>458	ExpressionStatement	 
>459	AssignmentExpr	ssContentType = \"multipart/mixed; \"
>460	PrimaryExpression	\"multipart/mixed; \"
>461	Identifier	ssContentType
>462	ExpressionStatement	 
>463	CallExpression	CMimeHeader 
>464	ArgumentList	& ssDeclareBoundary
>465	Argument	& ssBoundary
>466	UnaryOp	& ssBoundary
>467	Identifier	ssBoundary
>468	UnaryOperator	&
>469	Argument	btBoundaryDeclare
>470	Identifier	btBoundaryDeclare
>471	Argument	& ssDeclareBoundary
>472	UnaryOp	& ssDeclareBoundary
>473	Identifier	ssDeclareBoundary
>474	UnaryOperator	&
>475	Callee	CMimeHeader 
>476	Identifier	CMimeHeader 
>477	ExpressionStatement	 
>478	CallExpression	CMimeHeader 
>479	ArgumentList	& ssBoundary
>480	Argument	& ssBoundary
>481	UnaryOp	& ssBoundary
>482	Identifier	ssBoundary
>483	UnaryOperator	&
>484	Callee	CMimeHeader 
>485	Identifier	CMimeHeader 
>486	ExpressionStatement	 
>487	CallExpression	m_MimeHeader . Get ( \"content-type\" , & ssSavedContentType )
>488	ArgumentList	\"content-type\"
>489	Argument	& ssSavedContentType
>490	UnaryOp	& ssSavedContentType
>491	Identifier	ssSavedContentType
>492	UnaryOperator	&
>493	Argument	\"content-type\"
>494	PrimaryExpression	\"content-type\"
>495	Callee	m_MimeHeader . Get
>496	MemberAccess	m_MimeHeader . Get
>497	Identifier	Get
>498	Identifier	m_MimeHeader
>499	IfStatement	if ( ! pssMessage )
>500	ReturnStatement	 
>501	Identifier	false
>502	Condition	 
>503	UnaryOp	! pssMessage
>504	Identifier	pssMessage
>505	UnaryOperator	!
>506	IdentifierDeclStatement	 
>507	IdentifierDecl	i
>508	Identifier	i
>509	IdentifierDeclType	int
>510	IdentifierDeclStatement	 
>511	IdentifierDecl	ssContentType
>512	Identifier	ssContentType
>513	IdentifierDeclType	CString
>514	IdentifierDeclStatement	 
>515	IdentifierDecl	ssSavedContentType
>516	Identifier	ssSavedContentType
>517	IdentifierDeclType	CString
>518	IdentifierDeclStatement	 
>519	IdentifierDecl	ssDeclareBoundary
>520	Identifier	ssDeclareBoundary
>521	IdentifierDeclType	CString
>522	IdentifierDeclStatement	 
>523	IdentifierDecl	ssBoundary
>524	Identifier	ssBoundary
>525	IdentifierDeclType	CString
>554	FunctionDef	CMimeMessage 
>555	ParameterList	const CString & ssFilenameIn , CString * pssMessage , const CString & ssAttachmentBoundary
>556	Parameter	 
>557	Identifier	ssAttachmentBoundary
>558	ParameterType	const CString &
>559	Parameter	 
>560	Identifier	pssMessage
>561	ParameterType	CString *
>562	Parameter	 
>563	Identifier	ssFilenameIn
>564	ParameterType	const CString &
>565	ReturnType	bool
>566	CompoundStatement	 
>567	ReturnStatement	 
>568	Identifier	true
>569	ExpressionStatement	 
>570	CallExpression	pssMessage -> Append ( \"\r\n\r\n\" )
>571	ArgumentList	\"\r\n\r\n\"
>572	Argument	\"\r\n\r\n\"
>573	PrimaryExpression	\"\r\n\r\n\"
>574	Callee	pssMessage -> Append
>575	PtrMemberAccess	pssMessage -> Append
>576	Identifier	Append
>577	Identifier	pssMessage
>578	ExpressionStatement	 
>579	CallExpression	pssMessage -> Append ( CEncryption 
>580	ArgumentList	CEncryption 
>581	Argument	CEncryption 
>582	CallExpression	CEncryption 
>583	ArgumentList	smbMimeBody . GetBody ( )
>584	Argument	smbMimeBody . GetBody ( )
>585	CallExpression	smbMimeBody . GetBody ( )
>586	ArgumentList	 
>587	Callee	smbMimeBody . GetBody
>588	MemberAccess	smbMimeBody . GetBody
>589	Identifier	GetBody
>590	Identifier	smbMimeBody
>591	Callee	CEncryption 
>592	Identifier	CEncryption 
>593	Callee	pssMessage -> Append
>594	PtrMemberAccess	pssMessage -> Append
>595	Identifier	Append
>596	Identifier	pssMessage
>597	ExpressionStatement	 
>598	CallExpression	pssMessage -> Append ( \"\r\n\r\n\" )
>599	ArgumentList	\"\r\n\r\n\"
>600	Argument	\"\r\n\r\n\"
>601	PrimaryExpression	\"\r\n\r\n\"
>602	Callee	pssMessage -> Append
>603	PtrMemberAccess	pssMessage -> Append
>604	Identifier	Append
>605	Identifier	pssMessage
>606	ExpressionStatement	 
>607	CallExpression	pssMessage -> Append ( ssContentType )
>608	ArgumentList	ssContentType
>609	Argument	ssContentType
>610	Identifier	ssContentType
>611	Callee	pssMessage -> Append
>612	PtrMemberAccess	pssMessage -> Append
>613	Identifier	Append
>614	Identifier	pssMessage
>615	ExpressionStatement	 
>616	CallExpression	pssMessage -> Append ( \"content-type
>617	ArgumentList	\"content-type
>618	Argument	\"content-type
>619	PrimaryExpression	\"content-type
>620	Callee	pssMessage -> Append
>621	PtrMemberAccess	pssMessage -> Append
>622	Identifier	Append
>623	Identifier	pssMessage
>624	ExpressionStatement	 
>625	CallExpression	GetContentHeader ( \"application/octet-stream\" , ssFileAttachmentName , & ssContentType )
>626	ArgumentList	\"application/octet-stream\"
>627	Argument	& ssContentType
>628	UnaryOp	& ssContentType
>629	Identifier	ssContentType
>630	UnaryOperator	&
>631	Argument	ssFileAttachmentName
>632	Identifier	ssFileAttachmentName
>633	Argument	\"application/octet-stream\"
>634	PrimaryExpression	\"application/octet-stream\"
>635	Callee	GetContentHeader
>636	Identifier	GetContentHeader
>637	ExpressionStatement	 
>638	CallExpression	pssMessage -> Append ( ssAttachmentDeclareBoundary )
>639	ArgumentList	ssAttachmentDeclareBoundary
>640	Argument	ssAttachmentDeclareBoundary
>641	Identifier	ssAttachmentDeclareBoundary
>642	Callee	pssMessage -> Append
>643	PtrMemberAccess	pssMessage -> Append
>644	Identifier	Append
>645	Identifier	pssMessage
>646	ExpressionStatement	 
>647	CallExpression	CMimeHeader 
>648	ArgumentList	& ssAttachmentDeclareBoundary
>649	Argument	( CString * ) & ssAttachmentBoundary
>650	CastExpression	( CString * ) & ssAttachmentBoundary
>651	UnaryOp	& ssAttachmentBoundary
>652	Identifier	ssAttachmentBoundary
>653	UnaryOperator	&
>654	CastTarget	CString *
>655	Argument	btBoundarySeparate
>656	Identifier	btBoundarySeparate
>657	Argument	& ssAttachmentDeclareBoundary
>658	UnaryOp	& ssAttachmentDeclareBoundary
>659	Identifier	ssAttachmentDeclareBoundary
>660	UnaryOperator	&
>661	Callee	CMimeHeader 
>662	Identifier	CMimeHeader 
>663	IfStatement	if ( ! smbMimeBody . Load ( ssFilename ) )
>664	ReturnStatement	 
>665	Identifier	false
>666	Condition	 
>667	UnaryOp	! smbMimeBody . Load ( ssFilename )
>668	CallExpression	smbMimeBody . Load ( ssFilename )
>669	ArgumentList	ssFilename
>670	Argument	ssFilename
>671	Identifier	ssFilename
>672	Callee	smbMimeBody . Load
>673	MemberAccess	smbMimeBody . Load
>674	Identifier	Load
>675	Identifier	smbMimeBody
>676	UnaryOperator	!
>677	IfStatement	if ( ! pssMessage )
>678	ReturnStatement	 
>679	Identifier	false
>680	Condition	 
>681	UnaryOp	! pssMessage
>682	Identifier	pssMessage
>683	UnaryOperator	!
>684	IdentifierDeclStatement	 
>685	IdentifierDecl	ssBase64Encoded
>686	Identifier	ssBase64Encoded
>687	IdentifierDeclType	CString
>688	IdentifierDeclStatement	 
>689	IdentifierDecl	ssContentType
>690	Identifier	ssContentType
>691	IdentifierDeclType	CString
>692	IdentifierDeclStatement	 
>693	IdentifierDecl	smbMimeBody
>694	Identifier	smbMimeBody
>695	IdentifierDeclType	CMimeBody
>696	IdentifierDeclStatement	 
>697	IdentifierDecl	ssAttachmentDeclareBoundary
>698	Identifier	ssAttachmentDeclareBoundary
>699	IdentifierDeclType	CString
>700	IfStatement	if ( dPos >= 0 )
>701	ElseStatement	else
>702	CompoundStatement	 
>703	ExpressionStatement	 
>704	AssignmentExpr	ssFileAttachmentName = ssFilename
>705	Identifier	ssFilename
>706	Identifier	ssFileAttachmentName
>707	CompoundStatement	 
>708	ExpressionStatement	 
>709	CallExpression	ssFilename . Delete ( dPos , ssFilename . GetLength ( ) )
>710	ArgumentList	dPos
>711	Argument	ssFilename . GetLength ( )
>712	CallExpression	ssFilename . GetLength ( )
>713	ArgumentList	 
>714	Callee	ssFilename . GetLength
>715	MemberAccess	ssFilename . GetLength
>716	Identifier	GetLength
>717	Identifier	ssFilename
>718	Argument	dPos
>719	Identifier	dPos
>720	Callee	ssFilename . Delete
>721	MemberAccess	ssFilename . Delete
>722	Identifier	Delete
>723	Identifier	ssFilename
>724	ExpressionStatement	 
>725	CallExpression	ssFilename . Mid ( dPos + 1 , ssFilename . GetLength ( ) , & ssFileAttachmentName )
>726	ArgumentList	dPos + 1
>727	Argument	& ssFileAttachmentName
>728	UnaryOp	& ssFileAttachmentName
>729	Identifier	ssFileAttachmentName
>730	UnaryOperator	&
>731	Argument	ssFilename . GetLength ( )
>732	CallExpression	ssFilename . GetLength ( )
>733	ArgumentList	 
>734	Callee	ssFilename . GetLength
>735	MemberAccess	ssFilename . GetLength
>736	Identifier	GetLength
>737	Identifier	ssFilename
>738	Argument	dPos + 1
>739	AdditiveExpression	dPos + 1
>740	PrimaryExpression	1
>741	Identifier	dPos
>742	Callee	ssFilename . Mid
>743	MemberAccess	ssFilename . Mid
>744	Identifier	Mid
>745	Identifier	ssFilename
>746	Condition	 
>747	RelationalExpression	dPos >= 0
>748	PrimaryExpression	0
>749	Identifier	dPos
>750	IdentifierDeclStatement	 
>751	IdentifierDecl	dPos = ssFilename . InvPos ( '#' )
>752	AssignmentExpr	dPos = ssFilename . InvPos ( '#' )
>753	CallExpression	ssFilename . InvPos ( '#' )
>754	ArgumentList	'#'
>755	Argument	'#'
>756	PrimaryExpression	'#'
>757	Callee	ssFilename . InvPos
>758	MemberAccess	ssFilename . InvPos
>759	Identifier	InvPos
>760	Identifier	ssFilename
>761	Identifier	dPos
>762	Identifier	dPos
>763	IdentifierDeclType	int
>764	IdentifierDeclStatement	 
>765	IdentifierDecl	ssFilename ( ssFilenameIn )
>766	Identifier	ssFilenameIn
>767	Identifier	ssFilename
>768	IdentifierDeclType	CString
>769	IdentifierDeclStatement	 
>770	IdentifierDecl	ssFileAttachmentName
>771	Identifier	ssFileAttachmentName
>772	IdentifierDeclType	CString
<3=5,4
<5=39,28,17,6
<6=7
<7=13,8
<8=11,9
<9=10
<11=12
<13=14
<14=16,15
<17=18
<18=24,19
<19=22,20
<20=21
<22=23
<24=25
<25=27,26
<28=29
<29=35,30
<30=33,31
<31=32
<33=34
<35=36
<36=38,37
<39=40
<40=46,41
<41=44,42
<42=43
<44=45
<46=47
<47=49,48
<54=56,55
<60=72,71,61
<61=68,65,62
<62=64,63
<65=67,66
<68=70,69
<72=230,226,219,81,75,73
<73=74
<75=76
<76=78,77
<78=80,79
<81=212,111,82
<82=83
<83=92,88,84
<84=85
<85=87,86
<88=89
<89=91,90
<92=104,99,93
<93=94
<94=95
<95=96
<96=98,97
<99=100
<100=101
<101=103,102
<104=105
<105=107,106
<107=108
<108=110,109
<111=208,197,161,144,140,136,132,128,124,120,116,112
<112=113
<113=115,114
<116=117
<117=119,118
<120=121
<121=123,122
<124=125
<125=127,126
<128=129
<129=131,130
<132=133
<133=135,134
<136=137
<137=139,138
<140=141
<141=143,142
<144=154,150,145
<145=146
<146=147
<147=149,148
<150=151
<151=153,152
<154=155
<155=157,156
<157=158
<158=160,159
<161=191,168,162
<162=163
<163=164
<164=165
<165=167,166
<168=169
<169=170
<170=187,171
<171=183,176,172
<172=173
<173=175,174
<176=177
<177=179,178
<179=180
<180=182,181
<183=184
<184=186,185
<187=188
<188=190,189
<191=192
<192=196,193
<193=195,194
<197=198
<198=207,199
<199=203,200
<200=201
<201=202
<203=204
<204=206,205
<208=209
<209=211,210
<212=213
<213=215,214
<215=216
<216=218,217
<219=222,220
<220=221
<222=223
<223=225,224
<226=227
<227=229,228
<230=231
<231=233,232
<250=256,255,251
<251=252
<252=254,253
<256=522,518,514,510,506,499,486,477,462,458,449,434,425,412,397,388,373,364,353,344,330,321,283,268,259,257
<257=258
<259=260
<260=264,261
<261=262
<262=263
<264=265
<265=267,266
<268=269
<269=281,270
<270=277,275,271
<271=272
<272=274,273
<275=276
<277=278
<278=280,279
<281=282
<283=317,306,303,284
<284=285
<285=288,286
<286=287
<288=289
<289=302,290
<290=300,291
<291=296,294,292
<292=293
<294=295
<296=297
<297=299,298
<300=301
<303=305,304
<306=307
<307=316,308
<308=315,309
<309=311,310
<311=312
<312=314,313
<317=318
<318=320,319
<321=322
<322=326,323
<323=324
<324=325
<326=327
<327=329,328
<330=331
<331=340,332
<332=333
<333=334
<334=336,335
<336=337
<337=339,338
<340=341
<341=343,342
<344=345
<345=349,346
<346=347
<347=348
<349=350
<350=352,351
<353=354
<354=360,355
<355=358,356
<356=357
<358=359
<360=361
<361=363,362
<364=365
<365=369,366
<366=367
<367=368
<369=370
<370=372,371
<373=374
<374=386,375
<375=382,380,376
<376=377
<377=379,378
<380=381
<382=383
<383=385,384
<386=387
<388=389
<389=393,390
<390=391
<391=392
<393=394
<394=396,395
<397=398
<398=404,399
<399=402,400
<400=401
<402=403
<404=405
<405=407,406
<407=409,408
<409=411,410
<412=413
<413=423,414
<414=421,419,415
<415=416
<416=418,417
<419=420
<421=422
<423=424
<425=426
<426=430,427
<427=428
<428=429
<430=431
<431=433,432
<434=435
<435=441,436
<436=439,437
<437=438
<439=440
<441=442
<442=444,443
<444=446,445
<446=448,447
<449=450
<450=454,451
<451=452
<452=453
<454=455
<455=457,456
<458=459
<459=461,460
<462=463
<463=475,464
<464=471,469,465
<465=466
<466=468,467
<469=470
<471=472
<472=474,473
<475=476
<477=478
<478=484,479
<479=480
<480=481
<481=483,482
<484=485
<486=487
<487=495,488
<488=493,489
<489=490
<490=492,491
<493=494
<495=496
<496=498,497
<499=502,500
<500=501
<502=503
<503=505,504
<506=507
<507=509,508
<510=511
<511=513,512
<514=515
<515=517,516
<518=519
<519=521,520
<522=523
<523=525,524
<554=566,565,555
<555=562,559,556
<556=558,557
<559=561,560
<562=564,563
<566=769,764,750,700,696,692,688,684,677,663,646,637,624,615,606,597,578,569,567
<567=568
<569=570
<570=574,571
<571=572
<572=573
<574=575
<575=577,576
<578=579
<579=593,580
<580=581
<581=582
<582=591,583
<583=584
<584=585
<585=587,586
<587=588
<588=590,589
<591=592
<593=594
<594=596,595
<597=598
<598=602,599
<599=600
<600=601
<602=603
<603=605,604
<606=607
<607=611,608
<608=609
<609=610
<611=612
<612=614,613
<615=616
<616=620,617
<617=618
<618=619
<620=621
<621=623,622
<624=625
<625=635,626
<626=633,631,627
<627=628
<628=630,629
<631=632
<633=634
<635=636
<637=638
<638=642,639
<639=640
<640=641
<642=643
<643=645,644
<646=647
<647=661,648
<648=657,655,649
<649=650
<650=654,651
<651=653,652
<655=656
<657=658
<658=660,659
<661=662
<663=666,664
<664=665
<666=667
<667=676,668
<668=672,669
<669=670
<670=671
<672=673
<673=675,674
<677=680,678
<678=679
<680=681
<681=683,682
<684=685
<685=687,686
<688=689
<689=691,690
<692=693
<693=695,694
<696=697
<697=699,698
<700=746,707,701
<701=702
<702=703
<703=704
<704=706,705
<707=724,708
<708=709
<709=720,710
<710=718,711
<711=712
<712=714,713
<714=715
<715=717,716
<718=719
<720=721
<721=723,722
<724=725
<725=742,726
<726=738,731,727
<727=728
<728=730,729
<731=732
<732=734,733
<734=735
<735=737,736
<738=739
<739=741,740
<742=743
<743=745,744
<746=747
<747=749,748
<750=751
<751=763,762,752
<752=761,753
<753=757,754
<754=755
<755=756
<757=758
<758=760,759
<764=765
<765=768,767,766
<769=770
<770=772,771
