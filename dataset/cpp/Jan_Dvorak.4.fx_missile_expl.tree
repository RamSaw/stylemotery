>3	FunctionDef	FX_Missile_Explosion 
>4	ParameterList	const vec2 & pos
>5	Parameter	 
>6	Identifier	pos
>7	ParameterType	const vec2 &
>8	CompoundStatement	 
>9	ExpressionStatement	 
>10	AssignmentExpr	m_running = true
>11	Identifier	true
>12	Identifier	m_running
>13	ExpressionStatement	 
>14	AssignmentExpr	m_duration = 1.0
>15	PrimaryExpression	1.0
>16	Identifier	m_duration
>17	ExpressionStatement	 
>18	AssignmentExpr	m_start_time = g_timer -> now ( )
>19	CallExpression	g_timer -> now ( )
>20	ArgumentList	 
>21	Callee	g_timer -> now
>22	PtrMemberAccess	g_timer -> now
>23	Identifier	now
>24	Identifier	g_timer
>25	Identifier	m_start_time
>26	ExpressionStatement	 
>27	AssignmentExpr	m_bubble_expl = new PE_Bubble_Explosion ( m_pos )
>28	Identifier	m_pos
>29	Identifier	m_bubble_expl
>43	FunctionDef	FX_Missile_Explosion 
>44	ParameterList	 
>45	CompoundStatement	 
>46	ExpressionStatement	 
>47	Identifier	m_bubble_expl
>48	Statement	 
>52	FunctionDef	FX_Missile_Explosion 
>53	ParameterList	 
>54	ReturnType	void
>55	CompoundStatement	 
>56	ExpressionStatement	 
>57	CallExpression	m_bubble_expl -> update ( )
>58	ArgumentList	 
>59	Callee	m_bubble_expl -> update
>60	PtrMemberAccess	m_bubble_expl -> update
>61	Identifier	update
>62	Identifier	m_bubble_expl
>63	IfStatement	if ( g_timer -> now ( ) - m_start_time > m_duration )
>64	CompoundStatement	 
>65	ReturnStatement	 
>66	ExpressionStatement	 
>67	AssignmentExpr	m_running = false
>68	Identifier	false
>69	Identifier	m_running
>70	Condition	 
>71	RelationalExpression	g_timer -> now ( ) - m_start_time > m_duration
>72	Identifier	m_duration
>73	AdditiveExpression	g_timer -> now ( ) - m_start_time
>74	Identifier	m_start_time
>75	CallExpression	g_timer -> now ( )
>76	ArgumentList	 
>77	Callee	g_timer -> now
>78	PtrMemberAccess	g_timer -> now
>79	Identifier	now
>80	Identifier	g_timer
>81	IfStatement	if ( ! m_running )
>82	ReturnStatement	 
>83	Condition	 
>84	UnaryOp	! m_running
>85	Identifier	m_running
>86	UnaryOperator	!
>98	FunctionDef	FX_Missile_Explosion 
>99	ParameterList	 
>100	ReturnType	void
>101	CompoundStatement	 
>102	ExpressionStatement	 
>103	CallExpression	m_bubble_expl -> draw ( )
>104	ArgumentList	 
>105	Callee	m_bubble_expl -> draw
>106	PtrMemberAccess	m_bubble_expl -> draw
>107	Identifier	draw
>108	Identifier	m_bubble_expl
>109	IfStatement	if ( ! m_running )
>110	ReturnStatement	 
>111	Condition	 
>112	UnaryOp	! m_running
>113	Identifier	m_running
>114	UnaryOperator	!
>120	FunctionDef	FX_Missile_Explosion 
>121	ParameterList	 
>122	ReturnType	bool
>123	CompoundStatement	 
>124	ReturnStatement	 
>125	UnaryOp	! m_running
>126	Identifier	m_running
>127	UnaryOperator	!
>132	FunctionDef	FX_Missile_Explosion 
>133	ParameterList	 
>134	ReturnType	bool
>135	CompoundStatement	 
>136	ReturnStatement	 
>137	Identifier	m_running
<3=8,4
<4=5
<5=7,6
<8=26,17,13,9
<9=10
<10=12,11
<13=14
<14=16,15
<17=18
<18=25,19
<19=21,20
<21=22
<22=24,23
<26=27
<27=29,28
<43=45,44
<45=48,46
<46=47
<52=55,54,53
<55=81,63,56
<56=57
<57=59,58
<59=60
<60=62,61
<63=70,64
<64=66,65
<66=67
<67=69,68
<70=71
<71=73,72
<73=75,74
<75=77,76
<77=78
<78=80,79
<81=83,82
<83=84
<84=86,85
<98=101,100,99
<101=109,102
<102=103
<103=105,104
<105=106
<106=108,107
<109=111,110
<111=112
<112=114,113
<120=123,122,121
<123=124
<124=125
<125=127,126
<132=135,134,133
<135=136
<136=137
