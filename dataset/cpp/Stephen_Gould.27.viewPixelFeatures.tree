>3	FunctionDef	usage ()
>4	ParameterList	 
>5	ReturnType	void
>6	CompoundStatement	 
>7	ExpressionStatement	 
>8	ShiftExpression	cerr << \"OPTIONS
>9	ShiftExpression	\"OPTIONS
>10	ShiftExpression	\"  -outImages <ext>  
>11	ShiftExpression	\"  -x                
>12	ShiftExpression	DRWN_STANDARD_OPTIONS_USAGE << endl
>13	Identifier	endl
>14	Identifier	DRWN_STANDARD_OPTIONS_USAGE
>15	PrimaryExpression	\"  -x                
>16	PrimaryExpression	\"  -outImages <ext>  
>17	PrimaryExpression	\"OPTIONS
>18	Identifier	cerr
>19	ExpressionStatement	 
>20	ShiftExpression	cerr << \"USAGE
>21	PrimaryExpression	\"USAGE
>22	Identifier	cerr
>23	ExpressionStatement	 
>24	ShiftExpression	cerr << DRWN_USAGE_HEADER << endl
>25	ShiftExpression	DRWN_USAGE_HEADER << endl
>26	Identifier	endl
>27	Identifier	DRWN_USAGE_HEADER
>28	Identifier	cerr
>32	FunctionDef	main (int argc , char * argv [ ])
>33	ParameterList	int argc , char * argv [ ]
>34	Parameter	 
>35	Identifier	argv
>36	ParameterType	char * [ ]
>37	Parameter	 
>38	Identifier	argc
>39	ParameterType	int
>40	ReturnType	int
>41	CompoundStatement	 
>42	ReturnStatement	 
>43	PrimaryExpression	0
>44	ExpressionStatement	 
>45	CallExpression	drwnCodeProfiler 
>46	ArgumentList	 
>47	Callee	drwnCodeProfiler 
>48	Identifier	drwnCodeProfiler 
>49	ExpressionStatement	 
>50	CallExpression	drwnCodeProfiler 
>51	ArgumentList	drwnCodeProfiler 
>52	Argument	drwnCodeProfiler 
>53	CallExpression	drwnCodeProfiler 
>54	ArgumentList	\"main\"
>55	Argument	\"main\"
>56	PrimaryExpression	\"main\"
>57	Callee	drwnCodeProfiler 
>58	Identifier	drwnCodeProfiler 
>59	Callee	drwnCodeProfiler 
>60	Identifier	drwnCodeProfiler 
>61	IfStatement	if ( bVisualize && ( baseNames . size ( ) == 1 ) )
>62	CompoundStatement	 
>63	ExpressionStatement	 
>64	CallExpression	cv 
>65	ArgumentList	- 1
>66	Argument	- 1
>67	UnaryOp	- 1
>68	PrimaryExpression	1
>69	UnaryOperator	-
>70	Callee	cv 
>71	Identifier	cv 
>72	Condition	 
>73	AndExpression	bVisualize && ( baseNames . size ( ) == 1 )
>74	EqualityExpression	baseNames . size ( ) == 1
>75	PrimaryExpression	1
>76	CallExpression	baseNames . size ( )
>77	ArgumentList	 
>78	Callee	baseNames . size
>79	MemberAccess	baseNames . size
>80	Identifier	size
>81	Identifier	baseNames
>82	Identifier	bVisualize
>83	ForStatement	for ( int i = 0 ; i < ( int ) baseNames . size ( ) ; i ++ )
>84	CompoundStatement	 
>85	IfStatement	if ( outImageExt != NULL )
>86	CompoundStatement	 
>87	ExpressionStatement	 
>88	CallExpression	cv 
>89	ArgumentList	filename . c_str ( )
>90	Argument	canvas
>91	Identifier	canvas
>92	Argument	filename . c_str ( )
>93	CallExpression	filename . c_str ( )
>94	ArgumentList	 
>95	Callee	filename . c_str
>96	MemberAccess	filename . c_str
>97	Identifier	c_str
>98	Identifier	filename
>99	Callee	cv 
>100	Identifier	cv 
>101	IdentifierDeclStatement	 
>102	IdentifierDecl	filename = gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] ) + string ( outImageExt )
>103	AssignmentExpr	filename = gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] ) + string ( outImageExt )
>104	AdditiveExpression	gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] ) + string ( outImageExt )
>105	CallExpression	string ( outImageExt )
>106	ArgumentList	outImageExt
>107	Argument	outImageExt
>108	Identifier	outImageExt
>109	Callee	string
>110	Identifier	string
>111	CallExpression	gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] )
>112	ArgumentList	\"outputDir\"
>113	Argument	baseNames [ i ]
>114	ArrayIndexing	baseNames [ i ]
>115	Identifier	i
>116	Identifier	baseNames
>117	Argument	\"outputDir\"
>118	PrimaryExpression	\"outputDir\"
>119	Callee	gMultiSegConfig . filebase
>120	MemberAccess	gMultiSegConfig . filebase
>121	Identifier	filebase
>122	Identifier	gMultiSegConfig
>123	Identifier	filename
>124	Identifier	filename
>125	IdentifierDeclType	const string
>126	Condition	 
>127	EqualityExpression	outImageExt != NULL
>128	Identifier	NULL
>129	Identifier	outImageExt
>130	IfStatement	if ( bVisualize )
>131	CompoundStatement	 
>132	ExpressionStatement	 
>133	CallExpression	cv 
>134	ArgumentList	100
>135	Argument	100
>136	PrimaryExpression	100
>137	Callee	cv 
>138	Identifier	cv 
>139	ExpressionStatement	 
>140	CallExpression	cv 
>141	ArgumentList	string ( WINDOW_NAME )
>142	Argument	canvas
>143	Identifier	canvas
>144	Argument	string ( WINDOW_NAME )
>145	CallExpression	string ( WINDOW_NAME )
>146	ArgumentList	WINDOW_NAME
>147	Argument	WINDOW_NAME
>148	Identifier	WINDOW_NAME
>149	Callee	string
>150	Identifier	string
>151	Callee	cv 
>152	Identifier	cv 
>153	ExpressionStatement	 
>154	CallExpression	cv 
>155	ArgumentList	string ( WINDOW_NAME )
>156	Argument	string ( WINDOW_NAME )
>157	CallExpression	string ( WINDOW_NAME )
>158	ArgumentList	WINDOW_NAME
>159	Argument	WINDOW_NAME
>160	Identifier	WINDOW_NAME
>161	Callee	string
>162	Identifier	string
>163	Callee	cv 
>164	Identifier	cv 
>165	Condition	 
>166	Identifier	bVisualize
>167	IfStatement	if ( bVisualize || ( outImageExt != NULL ) )
>168	CompoundStatement	 
>169	ExpressionStatement	 
>170	CallExpression	drwnResizeInPlace ( canvas , cv 
>171	ArgumentList	canvas
>172	Argument	cv 
>173	CallExpression	cv 
>174	ArgumentList	640
>175	Argument	480
>176	PrimaryExpression	480
>177	Argument	640
>178	PrimaryExpression	640
>179	Callee	cv 
>180	Identifier	cv 
>181	Argument	canvas
>182	Identifier	canvas
>183	Callee	drwnResizeInPlace
>184	Identifier	drwnResizeInPlace
>185	ExpressionStatement	 
>186	AssignmentExpr	canvas = drwnMultiSegVis 
>187	CallExpression	drwnMultiSegVis 
>188	ArgumentList	instance
>189	Argument	instance
>190	Identifier	instance
>191	Callee	drwnMultiSegVis 
>192	Identifier	drwnMultiSegVis 
>193	Identifier	canvas
>194	Condition	 
>195	OrExpression	bVisualize || ( outImageExt != NULL )
>196	EqualityExpression	outImageExt != NULL
>197	Identifier	NULL
>198	Identifier	outImageExt
>199	Identifier	bVisualize
>200	IdentifierDeclStatement	 
>201	IdentifierDecl	canvas
>202	Identifier	canvas
>203	IdentifierDeclType	cv 
>204	ExpressionStatement	 
>205	CallExpression	instance . appendPixelFeatures ( )
>206	ArgumentList	 
>207	Callee	instance . appendPixelFeatures
>208	MemberAccess	instance . appendPixelFeatures
>209	Identifier	appendPixelFeatures
>210	Identifier	instance
>211	IdentifierDeclStatement	 
>212	IdentifierDecl	instance ( imgFilename . c_str ( ) )
>213	CallExpression	imgFilename . c_str ( )
>214	ArgumentList	 
>215	Callee	imgFilename . c_str
>216	MemberAccess	imgFilename . c_str
>217	Identifier	c_str
>218	Identifier	imgFilename
>219	Identifier	instance
>220	IdentifierDeclType	drwnSegImageInstance
>221	IdentifierDeclStatement	 
>222	IdentifierDecl	imgFilename = gMultiSegConfig . filename ( \"imgDir\" , baseNames [ i ] , \"imgExt\" )
>223	AssignmentExpr	imgFilename = gMultiSegConfig . filename ( \"imgDir\" , baseNames [ i ] , \"imgExt\" )
>224	CallExpression	gMultiSegConfig . filename ( \"imgDir\" , baseNames [ i ] , \"imgExt\" )
>225	ArgumentList	\"imgDir\"
>226	Argument	\"imgExt\"
>227	PrimaryExpression	\"imgExt\"
>228	Argument	baseNames [ i ]
>229	ArrayIndexing	baseNames [ i ]
>230	Identifier	i
>231	Identifier	baseNames
>232	Argument	\"imgDir\"
>233	PrimaryExpression	\"imgDir\"
>234	Callee	gMultiSegConfig . filename
>235	MemberAccess	gMultiSegConfig . filename
>236	Identifier	filename
>237	Identifier	gMultiSegConfig
>238	Identifier	imgFilename
>239	Identifier	imgFilename
>240	IdentifierDeclType	const string
>241	IncDecOp	 
>242	IncDec	++
>243	Identifier	i
>244	Condition	 
>245	RelationalExpression	i < ( int ) baseNames . size ( )
>246	CastExpression	( int ) baseNames . size ( )
>247	CallExpression	baseNames . size ( )
>248	ArgumentList	 
>249	Callee	baseNames . size
>250	MemberAccess	baseNames . size
>251	Identifier	size
>252	Identifier	baseNames
>253	CastTarget	int
>254	Identifier	i
>255	ForInit	 
>256	IdentifierDeclStatement	int i = 0 ;
>257	IdentifierDecl	i = 0
>258	AssignmentExpr	i = 0
>259	PrimaryExpression	0
>260	Identifier	i
>261	Identifier	i
>262	IdentifierDeclType	int
>263	IfStatement	if ( drwnFileExists ( imageList ) )
>264	ElseStatement	else
>265	CompoundStatement	 
>266	ExpressionStatement	 
>267	CallExpression	baseNames . push_back ( string ( imageList ) )
>268	ArgumentList	string ( imageList )
>269	Argument	string ( imageList )
>270	CallExpression	string ( imageList )
>271	ArgumentList	imageList
>272	Argument	imageList
>273	Identifier	imageList
>274	Callee	string
>275	Identifier	string
>276	Callee	baseNames . push_back
>277	MemberAccess	baseNames . push_back
>278	Identifier	push_back
>279	Identifier	baseNames
>280	ExpressionStatement	 
>281	CallExpression	DRWN_LOG_MESSAGE ( \"Processing single image \" << imageList << \"...\" )
>282	ArgumentList	\"Processing single image \" << imageList << \"...\"
>283	Argument	\"Processing single image \" << imageList << \"...\"
>284	ShiftExpression	\"Processing single image \" << imageList << \"...\"
>285	ShiftExpression	imageList << \"...\"
>286	PrimaryExpression	\"...\"
>287	Identifier	imageList
>288	PrimaryExpression	\"Processing single image \"
>289	Callee	DRWN_LOG_MESSAGE
>290	Identifier	DRWN_LOG_MESSAGE
>291	CompoundStatement	 
>292	ExpressionStatement	 
>293	CallExpression	DRWN_LOG_MESSAGE ( \"...read \" << baseNames . size ( ) << \" images\" )
>294	ArgumentList	\"...read \" << baseNames . size ( ) << \" images\"
>295	Argument	\"...read \" << baseNames . size ( ) << \" images\"
>296	ShiftExpression	\"...read \" << baseNames . size ( ) << \" images\"
>297	ShiftExpression	baseNames . size ( ) << \" images\"
>298	PrimaryExpression	\" images\"
>299	CallExpression	baseNames . size ( )
>300	ArgumentList	 
>301	Callee	baseNames . size
>302	MemberAccess	baseNames . size
>303	Identifier	size
>304	Identifier	baseNames
>305	PrimaryExpression	\"...read \"
>306	Callee	DRWN_LOG_MESSAGE
>307	Identifier	DRWN_LOG_MESSAGE
>308	ExpressionStatement	 
>309	AssignmentExpr	baseNames = drwnReadFile ( imageList )
>310	CallExpression	drwnReadFile ( imageList )
>311	ArgumentList	imageList
>312	Argument	imageList
>313	Identifier	imageList
>314	Callee	drwnReadFile
>315	Identifier	drwnReadFile
>316	Identifier	baseNames
>317	ExpressionStatement	 
>318	CallExpression	DRWN_LOG_MESSAGE ( \"Reading image list from \" << imageList << \"...\" )
>319	ArgumentList	\"Reading image list from \" << imageList << \"...\"
>320	Argument	\"Reading image list from \" << imageList << \"...\"
>321	ShiftExpression	\"Reading image list from \" << imageList << \"...\"
>322	ShiftExpression	imageList << \"...\"
>323	PrimaryExpression	\"...\"
>324	Identifier	imageList
>325	PrimaryExpression	\"Reading image list from \"
>326	Callee	DRWN_LOG_MESSAGE
>327	Identifier	DRWN_LOG_MESSAGE
>328	Condition	 
>329	CallExpression	drwnFileExists ( imageList )
>330	ArgumentList	imageList
>331	Argument	imageList
>332	Identifier	imageList
>333	Callee	drwnFileExists
>334	Identifier	drwnFileExists
>335	IdentifierDeclStatement	 
>336	IdentifierDecl	baseNames
>337	Identifier	baseNames
>338	IdentifierDeclType	vector < string >
>339	IdentifierDeclStatement	 
>340	IdentifierDecl	* imageList = DRWN_CMDLINE_ARGV [ 0 ]
>341	AssignmentExpr	* imageList = DRWN_CMDLINE_ARGV [ 0 ]
>342	ArrayIndexing	DRWN_CMDLINE_ARGV [ 0 ]
>343	PrimaryExpression	0
>344	Identifier	DRWN_CMDLINE_ARGV
>345	Identifier	imageList
>346	Identifier	imageList
>347	IdentifierDeclType	const char *
>348	ExpressionStatement	 
>349	CallExpression	drwnCodeProfiler 
>350	ArgumentList	drwnCodeProfiler 
>351	Argument	drwnCodeProfiler 
>352	CallExpression	drwnCodeProfiler 
>353	ArgumentList	\"main\"
>354	Argument	\"main\"
>355	PrimaryExpression	\"main\"
>356	Callee	drwnCodeProfiler 
>357	Identifier	drwnCodeProfiler 
>358	Callee	drwnCodeProfiler 
>359	Identifier	drwnCodeProfiler 
>360	ExpressionStatement	 
>361	AssignmentExpr	drwnSegImageStdPixelFeatures 
>362	PrimaryExpression	0
>363	Identifier	drwnSegImageStdPixelFeatures 
>364	IfStatement	if ( DRWN_CMDLINE_ARGC != 1 )
>365	CompoundStatement	 
>366	ReturnStatement	 
>367	UnaryOp	- 1
>368	PrimaryExpression	1
>369	UnaryOperator	-
>370	ExpressionStatement	 
>371	CallExpression	usage ( )
>372	ArgumentList	 
>373	Callee	usage
>374	Identifier	usage
>375	Condition	 
>376	EqualityExpression	DRWN_CMDLINE_ARGC != 1
>377	PrimaryExpression	1
>378	Identifier	DRWN_CMDLINE_ARGC
>379	ExpressionStatement	 
>380	CallExpression	DRWN_END_CMDLINE_PROCESSING ( usage ( ) )
>381	ArgumentList	usage ( )
>382	Argument	usage ( )
>383	CallExpression	usage ( )
>384	ArgumentList	 
>385	Callee	usage
>386	Identifier	usage
>387	Callee	DRWN_END_CMDLINE_PROCESSING
>388	Identifier	DRWN_END_CMDLINE_PROCESSING
>389	Statement	 
>390	Statement	 
>391	Statement	 
>392	Statement	 
>393	Statement	 
>394	Statement	 
>395	Statement	 
>396	Statement	 
>397	Statement	 
>398	Statement	 
>399	Statement	 
>400	Statement	 
>401	Statement	 
>402	Statement	 
>403	Statement	 
>404	Statement	 
>405	Statement	 
>406	Statement	 
>407	IdentifierDeclStatement	 
>408	IdentifierDecl	bVisualize = false
>409	AssignmentExpr	bVisualize = false
>410	Identifier	false
>411	Identifier	false
>412	Identifier	bVisualize
>413	IdentifierDeclType	bool
>414	IdentifierDeclStatement	 
>415	IdentifierDecl	* outImageExt = NULL
>416	AssignmentExpr	* outImageExt = NULL
>417	Identifier	NULL
>418	Identifier	NULL
>419	Identifier	outImageExt
>420	IdentifierDeclType	const char *
<3=6,5,4
<6=23,19,7
<7=8
<8=18,9
<9=17,10
<10=16,11
<11=15,12
<12=14,13
<19=20
<20=22,21
<23=24
<24=28,25
<25=27,26
<32=41,40,33
<33=37,34
<34=36,35
<37=39,38
<41=414,407,406,405,404,403,402,401,400,399,398,397,396,395,394,393,392,391,390,389,379,364,360,348,339,335,263,83,61,49,44,42
<42=43
<44=45
<45=47,46
<47=48
<49=50
<50=59,51
<51=52
<52=53
<53=57,54
<54=55
<55=56
<57=58
<59=60
<61=72,62
<62=63
<63=64
<64=70,65
<65=66
<66=67
<67=69,68
<70=71
<72=73
<73=82,74
<74=76,75
<76=78,77
<78=79
<79=81,80
<83=255,244,241,84
<84=221,211,204,200,167,130,85
<85=126,86
<86=101,87
<87=88
<88=99,89
<89=92,90
<90=91
<92=93
<93=95,94
<95=96
<96=98,97
<99=100
<101=102
<102=125,124,103
<103=123,104
<104=111,105
<105=109,106
<106=107
<107=108
<109=110
<111=119,112
<112=117,113
<113=114
<114=116,115
<117=118
<119=120
<120=122,121
<126=127
<127=129,128
<130=165,131
<131=153,139,132
<132=133
<133=137,134
<134=135
<135=136
<137=138
<139=140
<140=151,141
<141=144,142
<142=143
<144=145
<145=149,146
<146=147
<147=148
<149=150
<151=152
<153=154
<154=163,155
<155=156
<156=157
<157=161,158
<158=159
<159=160
<161=162
<163=164
<165=166
<167=194,168
<168=185,169
<169=170
<170=183,171
<171=181,172
<172=173
<173=179,174
<174=177,175
<175=176
<177=178
<179=180
<181=182
<183=184
<185=186
<186=193,187
<187=191,188
<188=189
<189=190
<191=192
<194=195
<195=199,196
<196=198,197
<200=201
<201=203,202
<204=205
<205=207,206
<207=208
<208=210,209
<211=212
<212=220,219,213
<213=215,214
<215=216
<216=218,217
<221=222
<222=240,239,223
<223=238,224
<224=234,225
<225=232,228,226
<226=227
<228=229
<229=231,230
<232=233
<234=235
<235=237,236
<241=243,242
<244=245
<245=254,246
<246=253,247
<247=249,248
<249=250
<250=252,251
<255=256
<256=257
<257=262,261,258
<258=260,259
<263=328,291,264
<264=265
<265=280,266
<266=267
<267=276,268
<268=269
<269=270
<270=274,271
<271=272
<272=273
<274=275
<276=277
<277=279,278
<280=281
<281=289,282
<282=283
<283=284
<284=288,285
<285=287,286
<289=290
<291=317,308,292
<292=293
<293=306,294
<294=295
<295=296
<296=305,297
<297=299,298
<299=301,300
<301=302
<302=304,303
<306=307
<308=309
<309=316,310
<310=314,311
<311=312
<312=313
<314=315
<317=318
<318=326,319
<319=320
<320=321
<321=325,322
<322=324,323
<326=327
<328=329
<329=333,330
<330=331
<331=332
<333=334
<335=336
<336=338,337
<339=340
<340=347,346,341
<341=345,342
<342=344,343
<348=349
<349=358,350
<350=351
<351=352
<352=356,353
<353=354
<354=355
<356=357
<358=359
<360=361
<361=363,362
<364=375,365
<365=370,366
<366=367
<367=369,368
<370=371
<371=373,372
<373=374
<375=376
<376=378,377
<379=380
<380=387,381
<381=382
<382=383
<383=385,384
<385=386
<387=388
<407=408
<408=413,412,409
<409=411,410
<414=415
<415=420,419,416
<416=418,417
