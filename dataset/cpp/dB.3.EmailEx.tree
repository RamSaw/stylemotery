>3	FunctionDef	CEmailExchanger 
>4	ParameterList	 
>5	ReturnType	include < String / GStrings . hpp >
>6	CompoundStatement	 
>10	FunctionDef	CEmailExchanger 
>11	ParameterList	 
>12	CompoundStatement	 
>16	FunctionDef	CEmailExchanger 
>17	ParameterList	const CSocket & Socket , const CString & String , CVector < CString > & StatusVector , int ExpectedResult
>18	Parameter	 
>19	Identifier	ExpectedResult
>20	ParameterType	int
>21	Parameter	 
>22	Identifier	StatusVector
>23	ParameterType	CVector < CString > &
>24	Parameter	 
>25	Identifier	String
>26	ParameterType	const CString &
>27	Parameter	 
>28	Identifier	Socket
>29	ParameterType	const CSocket &
>30	ReturnType	bool
>31	CompoundStatement	 
>32	IfStatement	if ( ( ReadLine ( Socket , Line ) != ExpectedResult ) && ( ExpectedResult != - 1 ) )
>33	ElseStatement	else
>34	CompoundStatement	 
>35	ReturnStatement	 
>36	Identifier	true
>37	CompoundStatement	 
>38	ReturnStatement	 
>39	Identifier	false
>40	ExpressionStatement	 
>41	AssignmentExpr	StatusVector += ( Line + \", mail not sent.\" )
>42	AdditiveExpression	Line + \", mail not sent.\"
>43	PrimaryExpression	\", mail not sent.\"
>44	Identifier	Line
>45	Identifier	StatusVector
>46	Condition	 
>47	AndExpression	( ReadLine ( Socket , Line ) != ExpectedResult ) && ( ExpectedResult != - 1 )
>48	EqualityExpression	ExpectedResult != - 1
>49	UnaryOp	- 1
>50	PrimaryExpression	1
>51	UnaryOperator	-
>52	Identifier	ExpectedResult
>53	EqualityExpression	ReadLine ( Socket , Line ) != ExpectedResult
>54	Identifier	ExpectedResult
>55	CallExpression	ReadLine ( Socket , Line )
>56	ArgumentList	Socket
>57	Argument	Line
>58	Identifier	Line
>59	Argument	Socket
>60	Identifier	Socket
>61	Callee	ReadLine
>62	Identifier	ReadLine
>63	IdentifierDeclStatement	 
>64	IdentifierDecl	Line
>65	Identifier	Line
>66	IdentifierDeclType	CString
>67	ExpressionStatement	 
>68	CallExpression	Socket . WriteLine ( String )
>69	ArgumentList	String
>70	Argument	String
>71	Identifier	String
>72	Callee	Socket . WriteLine
>73	MemberAccess	Socket . WriteLine
>74	Identifier	WriteLine
>75	Identifier	Socket
>87	FunctionDef	CEmailExchanger 
>88	ParameterList	const CSocket & Socket , CString & Line
>89	Parameter	 
>90	Identifier	Line
>91	ParameterType	CString &
>92	Parameter	 
>93	Identifier	Socket
>94	ParameterType	const CSocket &
>95	ReturnType	int
>96	CompoundStatement	 
>97	IfStatement	if ( Pos != - 1 )
>98	ElseStatement	else
>99	ReturnStatement	 
>100	UnaryOp	- 1
>101	PrimaryExpression	1
>102	UnaryOperator	-
>103	ReturnStatement	 
>104	CallExpression	Line . GetInt ( 0 , Pos )
>105	ArgumentList	0
>106	Argument	Pos
>107	Identifier	Pos
>108	Argument	0
>109	PrimaryExpression	0
>110	Callee	Line . GetInt
>111	MemberAccess	Line . GetInt
>112	Identifier	GetInt
>113	Identifier	Line
>114	Condition	 
>115	EqualityExpression	Pos != - 1
>116	UnaryOp	- 1
>117	PrimaryExpression	1
>118	UnaryOperator	-
>119	Identifier	Pos
>120	IdentifierDeclStatement	 
>121	IdentifierDecl	Pos = Line . Pos ( ' ' )
>122	AssignmentExpr	Pos = Line . Pos ( ' ' )
>123	CallExpression	Line . Pos ( ' ' )
>124	ArgumentList	' '
>125	Argument	' '
>126	PrimaryExpression	' '
>127	Callee	Line . Pos
>128	MemberAccess	Line . Pos
>129	Identifier	Pos
>130	Identifier	Line
>131	Identifier	Pos
>132	Identifier	Pos
>133	IdentifierDeclType	int
>134	ExpressionStatement	 
>135	CallExpression	Socket . ReadLine ( & Line )
>136	ArgumentList	& Line
>137	Argument	& Line
>138	UnaryOp	& Line
>139	Identifier	Line
>140	UnaryOperator	&
>141	Callee	Socket . ReadLine
>142	MemberAccess	Socket . ReadLine
>143	Identifier	ReadLine
>144	Identifier	Socket
>154	FunctionDef	CEmailExchanger 
>155	ParameterList	const int SCode
>156	Parameter	 
>157	Identifier	SCode
>158	ParameterType	const int
>159	ReturnType	CString
>160	CompoundStatement	 
>161	ReturnStatement	 
>162	PrimaryExpression	\"Unsupported error.\"
>163	SwitchStatement	switch ( SCode )
>164	CompoundStatement	 
>165	ReturnStatement	 
>166	PrimaryExpression	\"Transaction failed.\"
>167	Label	 
>168	ReturnStatement	 
>169	PrimaryExpression	\"Start mail input; end with <CRLF>.<CRLF>.\"
>170	Label	 
>171	ReturnStatement	 
>172	PrimaryExpression	\"Requested action not taken
>173	Label	 
>174	ReturnStatement	 
>175	PrimaryExpression	\"Requested mail action aborted
>176	Label	 
>177	ReturnStatement	 
>178	PrimaryExpression	\"Requested action not taken
>179	Label	 
>180	ReturnStatement	 
>181	PrimaryExpression	\"User not local; please try <forward-path>.\"
>182	Label	 
>183	ReturnStatement	 
>184	PrimaryExpression	\"Requested action aborted
>185	Label	 
>186	ReturnStatement	 
>187	PrimaryExpression	\"Requested action not taken
>188	Label	 
>189	ReturnStatement	 
>190	PrimaryExpression	\"Requested mail action not taken
>191	Label	 
>192	ReturnStatement	 
>193	PrimaryExpression	\"User not local; will forward to <forward-path>.\"
>194	Label	 
>195	ReturnStatement	 
>196	PrimaryExpression	\"Requested mail action okay, completed.\"
>197	Label	 
>198	ReturnStatement	 
>199	PrimaryExpression	\"<domain> Service not available, closing transmission channel.\"
>200	Label	 
>201	ReturnStatement	 
>202	PrimaryExpression	\"<domain> Service closing transmission channel.\"
>203	Label	 
>204	ReturnStatement	 
>205	PrimaryExpression	\"<domain> Service ready.\"
>206	Label	 
>207	ReturnStatement	 
>208	PrimaryExpression	\"Help message.\"
>209	Label	 
>210	ReturnStatement	 
>211	PrimaryExpression	\"System status, or system help reply.\"
>212	Label	 
>213	ReturnStatement	 
>214	PrimaryExpression	\"Command parameter not implemented.\"
>215	Label	 
>216	ReturnStatement	 
>217	PrimaryExpression	\"Bad sequence of commands.\"
>218	Label	 
>219	ReturnStatement	 
>220	PrimaryExpression	\"Command not implemented.\"
>221	Label	 
>222	ReturnStatement	 
>223	PrimaryExpression	\"Syntax error in parameters or arguments.\"
>224	Label	 
>225	ReturnStatement	 
>226	PrimaryExpression	\"Syntax error, command unrecognized.\"
>227	Label	 
>228	Condition	 
>229	Identifier	SCode
>234	FunctionDef	CEmailExchanger 
>235	ParameterList	const CString & MailServer , CMimeMessage & Email
>236	Parameter	 
>237	Identifier	Email
>238	ParameterType	CMimeMessage &
>239	Parameter	 
>240	Identifier	MailServer
>241	ParameterType	const CString &
>242	ReturnType	bool
>243	CompoundStatement	 
>244	ReturnStatement	 
>245	Identifier	true
>246	ExpressionStatement	 
>247	CallExpression	Email . SetStatus ( Status )
>248	ArgumentList	Status
>249	Argument	Status
>250	Identifier	Status
>251	Callee	Email . SetStatus
>252	MemberAccess	Email . SetStatus
>253	Identifier	SetStatus
>254	Identifier	Email
>255	CompoundStatement	 
>256	ExpressionStatement	 
>257	AssignmentExpr	Status += ( To [ j ] + \" - \" + FinalStatus [ j ] )
>258	AdditiveExpression	To [ j ] + \" - \" + FinalStatus [ j ]
>259	AdditiveExpression	\" - \" + FinalStatus [ j ]
>260	ArrayIndexing	FinalStatus [ j ]
>261	Identifier	j
>262	Identifier	FinalStatus
>263	PrimaryExpression	\" - \"
>264	ArrayIndexing	To [ j ]
>265	Identifier	j
>266	Identifier	To
>267	Identifier	Status
>268	IfStatement	if ( j )
>269	ExpressionStatement	 
>270	AssignmentExpr	Status += g_strCrLf
>271	Identifier	g_strCrLf
>272	Identifier	Status
>273	Condition	 
>274	Identifier	j
>275	Statement	 
>276	Statement	 
>277	Statement	 
>278	ExpressionStatement	 
>279	RelationalExpression	j < ( int ) FinalStatus . GetSize ( )
>280	CastExpression	( int ) FinalStatus . GetSize ( )
>281	CallExpression	FinalStatus . GetSize ( )
>282	ArgumentList	 
>283	Callee	FinalStatus . GetSize
>284	MemberAccess	FinalStatus . GetSize
>285	Identifier	GetSize
>286	Identifier	FinalStatus
>287	CastTarget	int
>288	Identifier	j
>289	IdentifierDeclStatement	 
>290	IdentifierDecl	j = 0
>291	AssignmentExpr	j = 0
>292	PrimaryExpression	0
>293	Identifier	j
>294	Identifier	j
>295	IdentifierDeclType	int
>296	Statement	 
>297	Statement	 
>298	Statement	 
>299	IdentifierDeclStatement	 
>300	IdentifierDecl	Status
>301	Identifier	Status
>302	IdentifierDeclType	CString
>303	CompoundStatement	 
>304	ExpressionStatement	 
>305	CallExpression	ClientSocket . WriteLine ( \"QUIT\" )
>306	ArgumentList	\"QUIT\"
>307	Argument	\"QUIT\"
>308	PrimaryExpression	\"QUIT\"
>309	Callee	ClientSocket . WriteLine
>310	MemberAccess	ClientSocket . WriteLine
>311	Identifier	WriteLine
>312	Identifier	ClientSocket
>313	IfStatement	if ( WriteLine ( ClientSocket , \"HELO \" + ClientSocket . GetPeerHostName ( ) , FinalStatus , 250 ) && WriteLine ( \
>314	CompoundStatement	 
>315	IfStatement	if ( WriteLine ( ClientSocket , \".\" , FinalStatus , 250 ) )
>316	CompoundStatement	 
>317	ExpressionStatement	 
>318	AssignmentExpr	FinalStatus += ( \"Successfully sent.\" )
>319	PrimaryExpression	\"Successfully sent.\"
>320	Identifier	FinalStatus
>321	Condition	 
>322	CallExpression	WriteLine ( ClientSocket , \".\" , FinalStatus , 250 )
>323	ArgumentList	ClientSocket
>324	Argument	250
>325	PrimaryExpression	250
>326	Argument	FinalStatus
>327	Identifier	FinalStatus
>328	Argument	\".\"
>329	PrimaryExpression	\".\"
>330	Argument	ClientSocket
>331	Identifier	ClientSocket
>332	Callee	WriteLine
>333	Identifier	WriteLine
>334	ExpressionStatement	 
>335	CallExpression	ClientSocket . Write ( Message )
>336	ArgumentList	Message
>337	Argument	Message
>338	Identifier	Message
>339	Callee	ClientSocket . Write
>340	MemberAccess	ClientSocket . Write
>341	Identifier	Write
>342	Identifier	ClientSocket
>343	ExpressionStatement	 
>344	CallExpression	Email . GetMessage ( & Message )
>345	ArgumentList	& Message
>346	Argument	& Message
>347	UnaryOp	& Message
>348	Identifier	Message
>349	UnaryOperator	&
>350	Callee	Email . GetMessage
>351	MemberAccess	Email . GetMessage
>352	Identifier	GetMessage
>353	Identifier	Email
>354	IdentifierDeclStatement	 
>355	IdentifierDecl	Message
>356	Identifier	Message
>357	IdentifierDeclType	CString
>358	Condition	 
>359	AndExpression	WriteLine ( ClientSocket , \"HELO \" + ClientSocket . GetPeerHostName ( ) , FinalStatus , 250 ) && WriteLine ( \
>360	AndExpression	WriteLine ( ClientSocket , \"MAIL FROM
>361	AndExpression	WriteLine ( ClientSocket , \"RCPT TO
>362	CallExpression	WriteLine ( ClientSocket , \"DATA\" , FinalStatus , 354 )
>363	ArgumentList	ClientSocket
>364	Argument	354
>365	PrimaryExpression	354
>366	Argument	FinalStatus
>367	Identifier	FinalStatus
>368	Argument	\"DATA\"
>369	PrimaryExpression	\"DATA\"
>370	Argument	ClientSocket
>371	Identifier	ClientSocket
>372	Callee	WriteLine
>373	Identifier	WriteLine
>374	CallExpression	WriteLine ( ClientSocket , \"RCPT TO
>375	ArgumentList	ClientSocket
>376	Argument	250
>377	PrimaryExpression	250
>378	Argument	FinalStatus
>379	Identifier	FinalStatus
>380	Argument	\"RCPT TO
>381	AdditiveExpression	\"RCPT TO
>382	CallExpression	EmailAddress . GetMail ( )
>383	ArgumentList	 
>384	Callee	EmailAddress . GetMail
>385	MemberAccess	EmailAddress . GetMail
>386	Identifier	GetMail
>387	Identifier	EmailAddress
>388	PrimaryExpression	\"RCPT TO
>389	Argument	ClientSocket
>390	Identifier	ClientSocket
>391	Callee	WriteLine
>392	Identifier	WriteLine
>393	CallExpression	WriteLine ( ClientSocket , \"MAIL FROM
>394	ArgumentList	ClientSocket
>395	Argument	250
>396	PrimaryExpression	250
>397	Argument	FinalStatus
>398	Identifier	FinalStatus
>399	Argument	\"MAIL FROM
>400	AdditiveExpression	\"MAIL FROM
>401	Identifier	From
>402	PrimaryExpression	\"MAIL FROM
>403	Argument	ClientSocket
>404	Identifier	ClientSocket
>405	Callee	WriteLine
>406	Identifier	WriteLine
>407	CallExpression	WriteLine ( ClientSocket , \"HELO \" + ClientSocket . GetPeerHostName ( ) , FinalStatus , 250 )
>408	ArgumentList	ClientSocket
>409	Argument	250
>410	PrimaryExpression	250
>411	Argument	FinalStatus
>412	Identifier	FinalStatus
>413	Argument	\"HELO \" + ClientSocket . GetPeerHostName ( )
>414	AdditiveExpression	\"HELO \" + ClientSocket . GetPeerHostName ( )
>415	CallExpression	ClientSocket . GetPeerHostName ( )
>416	ArgumentList	 
>417	Callee	ClientSocket . GetPeerHostName
>418	MemberAccess	ClientSocket . GetPeerHostName
>419	Identifier	GetPeerHostName
>420	Identifier	ClientSocket
>421	PrimaryExpression	\"HELO \"
>422	Argument	ClientSocket
>423	Identifier	ClientSocket
>424	Callee	WriteLine
>425	Identifier	WriteLine
>426	IfStatement	if ( ! From . GetLength ( ) )
>427	CompoundStatement	 
>428	ContinueStatement	 
>429	ExpressionStatement	 
>430	AssignmentExpr	FinalStatus += ( \"Missing from address.\" )
>431	PrimaryExpression	\"Missing from address.\"
>432	Identifier	FinalStatus
>433	Condition	 
>434	UnaryOp	! From . GetLength ( )
>435	CallExpression	From . GetLength ( )
>436	ArgumentList	 
>437	Callee	From . GetLength
>438	MemberAccess	From . GetLength
>439	Identifier	GetLength
>440	Identifier	From
>441	UnaryOperator	!
>442	ExpressionStatement	 
>443	CallExpression	Email . GetMimeHeader ( ) . Get ( \"from\" , & From )
>444	ArgumentList	\"from\"
>445	Argument	& From
>446	UnaryOp	& From
>447	Identifier	From
>448	UnaryOperator	&
>449	Argument	\"from\"
>450	PrimaryExpression	\"from\"
>451	Callee	Email . GetMimeHeader ( ) . Get
>452	MemberAccess	Email . GetMimeHeader ( ) . Get
>453	Identifier	Get
>454	CallExpression	Email . GetMimeHeader ( )
>455	ArgumentList	 
>456	Callee	Email . GetMimeHeader
>457	MemberAccess	Email . GetMimeHeader
>458	Identifier	GetMimeHeader
>459	Identifier	Email
>460	IdentifierDeclStatement	 
>461	IdentifierDecl	From
>462	Identifier	From
>463	IdentifierDeclType	CString
>464	IfStatement	if ( ! Line . GetLength ( ) )
>465	CompoundStatement	 
>466	ContinueStatement	 
>467	ExpressionStatement	 
>468	AssignmentExpr	FinalStatus += ( \"Remote server \" + MailServer + \" sent invalid response, mail not sent.\" )
>469	AdditiveExpression	\"Remote server \" + MailServer + \" sent invalid response, mail not sent.\"
>470	AdditiveExpression	MailServer + \" sent invalid response, mail not sent.\"
>471	PrimaryExpression	\" sent invalid response, mail not sent.\"
>472	Identifier	MailServer
>473	PrimaryExpression	\"Remote server \"
>474	Identifier	FinalStatus
>475	Condition	 
>476	UnaryOp	! Line . GetLength ( )
>477	CallExpression	Line . GetLength ( )
>478	ArgumentList	 
>479	Callee	Line . GetLength
>480	MemberAccess	Line . GetLength
>481	Identifier	GetLength
>482	Identifier	Line
>483	UnaryOperator	!
>484	ExpressionStatement	 
>485	CallExpression	ClientSocket . ReadLine ( & Line )
>486	ArgumentList	& Line
>487	Argument	& Line
>488	UnaryOp	& Line
>489	Identifier	Line
>490	UnaryOperator	&
>491	Callee	ClientSocket . ReadLine
>492	MemberAccess	ClientSocket . ReadLine
>493	Identifier	ReadLine
>494	Identifier	ClientSocket
>495	IdentifierDeclStatement	 
>496	IdentifierDecl	Line
>497	Identifier	Line
>498	IdentifierDeclType	CString
>499	IfStatement	if ( ! ClientSocket . Connect ( ) )
>500	CompoundStatement	 
>501	ContinueStatement	 
>502	ExpressionStatement	 
>503	AssignmentExpr	FinalStatus += ( \"Unable to connect to mail server \" + MailServer + \", mail not sent.\" )
>504	AdditiveExpression	\"Unable to connect to mail server \" + MailServer + \", mail not sent.\"
>505	AdditiveExpression	MailServer + \", mail not sent.\"
>506	PrimaryExpression	\", mail not sent.\"
>507	Identifier	MailServer
>508	PrimaryExpression	\"Unable to connect to mail server \"
>509	Identifier	FinalStatus
>510	Condition	 
>511	UnaryOp	! ClientSocket . Connect ( )
>512	CallExpression	ClientSocket . Connect ( )
>513	ArgumentList	 
>514	Callee	ClientSocket . Connect
>515	MemberAccess	ClientSocket . Connect
>516	Identifier	Connect
>517	Identifier	ClientSocket
>518	UnaryOperator	!
>519	IfStatement	if ( ! ClientSocket . Open ( ) )
>520	CompoundStatement	 
>521	ContinueStatement	 
>522	ExpressionStatement	 
>523	AssignmentExpr	FinalStatus += ( \"Unable to open socket with mail server \" + MailServer + \", mail not sent.\" )
>524	AdditiveExpression	\"Unable to open socket with mail server \" + MailServer + \", mail not sent.\"
>525	AdditiveExpression	MailServer + \", mail not sent.\"
>526	PrimaryExpression	\", mail not sent.\"
>527	Identifier	MailServer
>528	PrimaryExpression	\"Unable to open socket with mail server \"
>529	Identifier	FinalStatus
>530	Condition	 
>531	UnaryOp	! ClientSocket . Open ( )
>532	CallExpression	ClientSocket . Open ( )
>533	ArgumentList	 
>534	Callee	ClientSocket . Open
>535	MemberAccess	ClientSocket . Open
>536	Identifier	Open
>537	Identifier	ClientSocket
>538	UnaryOperator	!
>539	IdentifierDeclStatement	 
>540	IdentifierDecl	ClientSocket ( 25 , MailServer )
>541	Expression	25 , MailServer
>542	Identifier	MailServer
>543	PrimaryExpression	25
>544	Identifier	ClientSocket
>545	IdentifierDeclType	CSocket
>546	IfStatement	if ( ! EmailAddress . GetValid ( ) )
>547	CompoundStatement	 
>548	ContinueStatement	 
>549	ExpressionStatement	 
>550	AssignmentExpr	FinalStatus += ( \"Invalid email address \" + To [ i ] + \", mail not sent.\" )
>551	AdditiveExpression	\"Invalid email address \" + To [ i ] + \", mail not sent.\"
>552	AdditiveExpression	To [ i ] + \", mail not sent.\"
>553	PrimaryExpression	\", mail not sent.\"
>554	ArrayIndexing	To [ i ]
>555	Identifier	i
>556	Identifier	To
>557	PrimaryExpression	\"Invalid email address \"
>558	Identifier	FinalStatus
>559	Condition	 
>560	UnaryOp	! EmailAddress . GetValid ( )
>561	CallExpression	EmailAddress . GetValid ( )
>562	ArgumentList	 
>563	Callee	EmailAddress . GetValid
>564	MemberAccess	EmailAddress . GetValid
>565	Identifier	GetValid
>566	Identifier	EmailAddress
>567	UnaryOperator	!
>568	IdentifierDeclStatement	 
>569	IdentifierDecl	EmailAddress ( To [ i ] )
>570	ArrayIndexing	To [ i ]
>571	Identifier	i
>572	Identifier	To
>573	Identifier	EmailAddress
>574	IdentifierDeclType	CEmailAddress
>575	Statement	 
>576	Statement	 
>577	Statement	 
>578	ExpressionStatement	 
>579	RelationalExpression	i < ( int ) To . GetSize ( )
>580	CastExpression	( int ) To . GetSize ( )
>581	CallExpression	To . GetSize ( )
>582	ArgumentList	 
>583	Callee	To . GetSize
>584	MemberAccess	To . GetSize
>585	Identifier	GetSize
>586	Identifier	To
>587	CastTarget	int
>588	Identifier	i
>589	IdentifierDeclStatement	 
>590	IdentifierDecl	i = 0
>591	AssignmentExpr	i = 0
>592	PrimaryExpression	0
>593	Identifier	i
>594	Identifier	i
>595	IdentifierDeclType	int
>596	Statement	 
>597	Statement	 
>598	Statement	 
>599	IdentifierDeclStatement	 
>600	IdentifierDecl	FinalStatus
>601	Identifier	FinalStatus
>602	IdentifierDeclType	CVector < CString >
>603	IfStatement	if ( ! To . GetSize ( ) )
>604	CompoundStatement	 
>605	ReturnStatement	 
>606	Identifier	false
>607	ExpressionStatement	 
>608	CallExpression	Email . SetStatus ( \"No recepients specified.\" )
>609	ArgumentList	\"No recepients specified.\"
>610	Argument	\"No recepients specified.\"
>611	PrimaryExpression	\"No recepients specified.\"
>612	Callee	Email . SetStatus
>613	MemberAccess	Email . SetStatus
>614	Identifier	SetStatus
>615	Identifier	Email
>616	Condition	 
>617	UnaryOp	! To . GetSize ( )
>618	CallExpression	To . GetSize ( )
>619	ArgumentList	 
>620	Callee	To . GetSize
>621	MemberAccess	To . GetSize
>622	Identifier	GetSize
>623	Identifier	To
>624	UnaryOperator	!
>625	ExpressionStatement	 
>626	CallExpression	CString 
>627	ArgumentList	ToString
>628	Argument	& To
>629	UnaryOp	& To
>630	Identifier	To
>631	UnaryOperator	&
>632	Argument	';'
>633	PrimaryExpression	';'
>634	Argument	ToString
>635	Identifier	ToString
>636	Callee	CString 
>637	Identifier	CString 
>638	IdentifierDeclStatement	 
>639	IdentifierDecl	To
>640	Identifier	To
>641	IdentifierDeclType	CVector < CString >
>642	ExpressionStatement	 
>643	CallExpression	ToString . Replace ( ',' , ';' )
>644	ArgumentList	','
>645	Argument	';'
>646	PrimaryExpression	';'
>647	Argument	','
>648	PrimaryExpression	','
>649	Callee	ToString . Replace
>650	MemberAccess	ToString . Replace
>651	Identifier	Replace
>652	Identifier	ToString
>653	ExpressionStatement	 
>654	CallExpression	Email . GetMimeHeader ( ) . Get ( \"to\" , & ToString )
>655	ArgumentList	\"to\"
>656	Argument	& ToString
>657	UnaryOp	& ToString
>658	Identifier	ToString
>659	UnaryOperator	&
>660	Argument	\"to\"
>661	PrimaryExpression	\"to\"
>662	Callee	Email . GetMimeHeader ( ) . Get
>663	MemberAccess	Email . GetMimeHeader ( ) . Get
>664	Identifier	Get
>665	CallExpression	Email . GetMimeHeader ( )
>666	ArgumentList	 
>667	Callee	Email . GetMimeHeader
>668	MemberAccess	Email . GetMimeHeader
>669	Identifier	GetMimeHeader
>670	Identifier	Email
>671	IdentifierDeclStatement	 
>672	IdentifierDecl	ToString
>673	Identifier	ToString
>674	IdentifierDeclType	CString
<3=6,5,4
<10=12,11
<16=31,30,17
<17=27,24,21,18
<18=20,19
<21=23,22
<24=26,25
<27=29,28
<31=67,63,32
<32=46,37,33
<33=34
<34=35
<35=36
<37=40,38
<38=39
<40=41
<41=45,42
<42=44,43
<46=47
<47=53,48
<48=52,49
<49=51,50
<53=55,54
<55=61,56
<56=59,57
<57=58
<59=60
<61=62
<63=64
<64=66,65
<67=68
<68=72,69
<69=70
<70=71
<72=73
<73=75,74
<87=96,95,88
<88=92,89
<89=91,90
<92=94,93
<96=134,120,97
<97=114,103,98
<98=99
<99=100
<100=102,101
<103=104
<104=110,105
<105=108,106
<106=107
<108=109
<110=111
<111=113,112
<114=115
<115=119,116
<116=118,117
<120=121
<121=133,132,122
<122=131,123
<123=127,124
<124=125
<125=126
<127=128
<128=130,129
<134=135
<135=141,136
<136=137
<137=138
<138=140,139
<141=142
<142=144,143
<154=160,159,155
<155=156
<156=158,157
<160=163,161
<161=162
<163=228,164
<164=227,225,224,222,221,219,218,216,215,213,212,210,209,207,206,204,203,201,200,198,197,195,194,192,191,189,188,186,185,183,182,180,179,177,176,174,173,171,170,168,167,165
<165=166
<168=169
<171=172
<174=175
<177=178
<180=181
<183=184
<186=187
<189=190
<192=193
<195=196
<198=199
<201=202
<204=205
<207=208
<210=211
<213=214
<216=217
<219=220
<222=223
<225=226
<228=229
<234=243,242,235
<235=239,236
<236=238,237
<239=241,240
<243=671,653,642,638,625,603,599,598,597,596,589,578,577,576,575,303,299,298,297,296,289,278,277,276,275,255,246,244
<244=245
<246=247
<247=251,248
<248=249
<249=250
<251=252
<252=254,253
<255=268,256
<256=257
<257=267,258
<258=264,259
<259=263,260
<260=262,261
<264=266,265
<268=273,269
<269=270
<270=272,271
<273=274
<278=279
<279=288,280
<280=287,281
<281=283,282
<283=284
<284=286,285
<289=290
<290=295,294,291
<291=293,292
<299=300
<300=302,301
<303=568,546,539,519,499,495,484,464,460,442,426,313,304
<304=305
<305=309,306
<306=307
<307=308
<309=310
<310=312,311
<313=358,314
<314=354,343,334,315
<315=321,316
<316=317
<317=318
<318=320,319
<321=322
<322=332,323
<323=330,328,326,324
<324=325
<326=327
<328=329
<330=331
<332=333
<334=335
<335=339,336
<336=337
<337=338
<339=340
<340=342,341
<343=344
<344=350,345
<345=346
<346=347
<347=349,348
<350=351
<351=353,352
<354=355
<355=357,356
<358=359
<359=407,360
<360=393,361
<361=374,362
<362=372,363
<363=370,368,366,364
<364=365
<366=367
<368=369
<370=371
<372=373
<374=391,375
<375=389,380,378,376
<376=377
<378=379
<380=381
<381=388,382
<382=384,383
<384=385
<385=387,386
<389=390
<391=392
<393=405,394
<394=403,399,397,395
<395=396
<397=398
<399=400
<400=402,401
<403=404
<405=406
<407=424,408
<408=422,413,411,409
<409=410
<411=412
<413=414
<414=421,415
<415=417,416
<417=418
<418=420,419
<422=423
<424=425
<426=433,427
<427=429,428
<429=430
<430=432,431
<433=434
<434=441,435
<435=437,436
<437=438
<438=440,439
<442=443
<443=451,444
<444=449,445
<445=446
<446=448,447
<449=450
<451=452
<452=454,453
<454=456,455
<456=457
<457=459,458
<460=461
<461=463,462
<464=475,465
<465=467,466
<467=468
<468=474,469
<469=473,470
<470=472,471
<475=476
<476=483,477
<477=479,478
<479=480
<480=482,481
<484=485
<485=491,486
<486=487
<487=488
<488=490,489
<491=492
<492=494,493
<495=496
<496=498,497
<499=510,500
<500=502,501
<502=503
<503=509,504
<504=508,505
<505=507,506
<510=511
<511=518,512
<512=514,513
<514=515
<515=517,516
<519=530,520
<520=522,521
<522=523
<523=529,524
<524=528,525
<525=527,526
<530=531
<531=538,532
<532=534,533
<534=535
<535=537,536
<539=540
<540=545,544,541
<541=543,542
<546=559,547
<547=549,548
<549=550
<550=558,551
<551=557,552
<552=554,553
<554=556,555
<559=560
<560=567,561
<561=563,562
<563=564
<564=566,565
<568=569
<569=574,573,570
<570=572,571
<578=579
<579=588,580
<580=587,581
<581=583,582
<583=584
<584=586,585
<589=590
<590=595,594,591
<591=593,592
<599=600
<600=602,601
<603=616,604
<604=607,605
<605=606
<607=608
<608=612,609
<609=610
<610=611
<612=613
<613=615,614
<616=617
<617=624,618
<618=620,619
<620=621
<621=623,622
<625=626
<626=636,627
<627=634,632,628
<628=629
<629=631,630
<632=633
<634=635
<636=637
<638=639
<639=641,640
<642=643
<643=649,644
<644=647,645
<645=646
<647=648
<649=650
<650=652,651
<653=654
<654=662,655
<655=660,656
<656=657
<657=659,658
<660=661
<662=663
<663=665,664
<665=667,666
<667=668
<668=670,669
<671=672
<672=674,673
