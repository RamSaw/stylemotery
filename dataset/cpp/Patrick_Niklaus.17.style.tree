>3	FunctionDef	Style 
>4	ParameterList	GeoObject * obj , const shared_ptr < StyleTemplate > & templ
>5	Parameter	 
>6	Identifier	templ
>7	ParameterType	const shared_ptr < StyleTemplate > &
>8	Parameter	 
>9	Identifier	obj
>10	ParameterType	GeoObject *
>11	ReturnType	void
>12	CompoundStatement	 
>13	ExpressionStatement	 
>14	CallExpression	OVERMERGE_IMPL ( z_index )
>15	ArgumentList	z_index
>16	Argument	z_index
>17	Identifier	z_index
>18	Callee	OVERMERGE_IMPL
>19	Identifier	OVERMERGE_IMPL
>20	ExpressionStatement	 
>21	CallExpression	OVERMERGE_IMPL ( casing_dashes )
>22	ArgumentList	casing_dashes
>23	Argument	casing_dashes
>24	Identifier	casing_dashes
>25	Callee	OVERMERGE_IMPL
>26	Identifier	OVERMERGE_IMPL
>27	ExpressionStatement	 
>28	CallExpression	OVERMERGE_IMPL ( dashes )
>29	ArgumentList	dashes
>30	Argument	dashes
>31	Identifier	dashes
>32	Callee	OVERMERGE_IMPL
>33	Identifier	OVERMERGE_IMPL
>34	ExpressionStatement	 
>35	CallExpression	OVERMERGE_IMPL ( shield_shape )
>36	ArgumentList	shield_shape
>37	Argument	shield_shape
>38	Identifier	shield_shape
>39	Callee	OVERMERGE_IMPL
>40	Identifier	OVERMERGE_IMPL
>41	ExpressionStatement	 
>42	CallExpression	OVERMERGE_IMPL ( shield_image )
>43	ArgumentList	shield_image
>44	Argument	shield_image
>45	Identifier	shield_image
>46	Callee	OVERMERGE_IMPL
>47	Identifier	OVERMERGE_IMPL
>48	ExpressionStatement	 
>49	CallExpression	OVERMERGE_IMPL ( shield_text )
>50	ArgumentList	shield_text
>51	Argument	shield_text
>52	Identifier	shield_text
>53	Callee	OVERMERGE_IMPL
>54	Identifier	OVERMERGE_IMPL
>55	ExpressionStatement	 
>56	CallExpression	OVERMERGE_IMPL ( shield_casing_width )
>57	ArgumentList	shield_casing_width
>58	Argument	shield_casing_width
>59	Identifier	shield_casing_width
>60	Callee	OVERMERGE_IMPL
>61	Identifier	OVERMERGE_IMPL
>62	ExpressionStatement	 
>63	CallExpression	OVERMERGE_IMPL ( shield_casing_color )
>64	ArgumentList	shield_casing_color
>65	Argument	shield_casing_color
>66	Identifier	shield_casing_color
>67	Callee	OVERMERGE_IMPL
>68	Identifier	OVERMERGE_IMPL
>69	ExpressionStatement	 
>70	CallExpression	OVERMERGE_IMPL ( shield_frame_width )
>71	ArgumentList	shield_frame_width
>72	Argument	shield_frame_width
>73	Identifier	shield_frame_width
>74	Callee	OVERMERGE_IMPL
>75	Identifier	OVERMERGE_IMPL
>76	ExpressionStatement	 
>77	CallExpression	OVERMERGE_IMPL ( shield_frame_color )
>78	ArgumentList	shield_frame_color
>79	Argument	shield_frame_color
>80	Identifier	shield_frame_color
>81	Callee	OVERMERGE_IMPL
>82	Identifier	OVERMERGE_IMPL
>83	ExpressionStatement	 
>84	CallExpression	OVERMERGE_IMPL ( shield_opacity )
>85	ArgumentList	shield_opacity
>86	Argument	shield_opacity
>87	Identifier	shield_opacity
>88	Callee	OVERMERGE_IMPL
>89	Identifier	OVERMERGE_IMPL
>90	ExpressionStatement	 
>91	CallExpression	OVERMERGE_IMPL ( shield_color )
>92	ArgumentList	shield_color
>93	Argument	shield_color
>94	Identifier	shield_color
>95	Callee	OVERMERGE_IMPL
>96	Identifier	OVERMERGE_IMPL
>97	ExpressionStatement	 
>98	CallExpression	OVERMERGE_IMPL ( icon_opacity )
>99	ArgumentList	icon_opacity
>100	Argument	icon_opacity
>101	Identifier	icon_opacity
>102	Callee	OVERMERGE_IMPL
>103	Identifier	OVERMERGE_IMPL
>104	ExpressionStatement	 
>105	CallExpression	OVERMERGE_IMPL ( icon_height )
>106	ArgumentList	icon_height
>107	Argument	icon_height
>108	Identifier	icon_height
>109	Callee	OVERMERGE_IMPL
>110	Identifier	OVERMERGE_IMPL
>111	ExpressionStatement	 
>112	CallExpression	OVERMERGE_IMPL ( icon_width )
>113	ArgumentList	icon_width
>114	Argument	icon_width
>115	Identifier	icon_width
>116	Callee	OVERMERGE_IMPL
>117	Identifier	OVERMERGE_IMPL
>118	ExpressionStatement	 
>119	CallExpression	OVERMERGE_IMPL ( icon_image )
>120	ArgumentList	icon_image
>121	Argument	icon_image
>122	Identifier	icon_image
>123	Callee	OVERMERGE_IMPL
>124	Identifier	OVERMERGE_IMPL
>125	ExpressionStatement	 
>126	CallExpression	OVERMERGE_IMPL ( casing_linejoin )
>127	ArgumentList	casing_linejoin
>128	Argument	casing_linejoin
>129	Identifier	casing_linejoin
>130	Callee	OVERMERGE_IMPL
>131	Identifier	OVERMERGE_IMPL
>132	ExpressionStatement	 
>133	CallExpression	OVERMERGE_IMPL ( casing_linecap )
>134	ArgumentList	casing_linecap
>135	Argument	casing_linecap
>136	Identifier	casing_linecap
>137	Callee	OVERMERGE_IMPL
>138	Identifier	OVERMERGE_IMPL
>139	ExpressionStatement	 
>140	CallExpression	OVERMERGE_IMPL ( linejoin )
>141	ArgumentList	linejoin
>142	Argument	linejoin
>143	Identifier	linejoin
>144	Callee	OVERMERGE_IMPL
>145	Identifier	OVERMERGE_IMPL
>146	ExpressionStatement	 
>147	CallExpression	OVERMERGE_IMPL ( linecap )
>148	ArgumentList	linecap
>149	Argument	linecap
>150	Identifier	linecap
>151	Callee	OVERMERGE_IMPL
>152	Identifier	OVERMERGE_IMPL
>153	ExpressionStatement	 
>154	CallExpression	OVERMERGE_IMPL ( text_halo_radius )
>155	ArgumentList	text_halo_radius
>156	Argument	text_halo_radius
>157	Identifier	text_halo_radius
>158	Callee	OVERMERGE_IMPL
>159	Identifier	OVERMERGE_IMPL
>160	ExpressionStatement	 
>161	CallExpression	OVERMERGE_IMPL ( text_halo_color )
>162	ArgumentList	text_halo_color
>163	Argument	text_halo_color
>164	Identifier	text_halo_color
>165	Callee	OVERMERGE_IMPL
>166	Identifier	OVERMERGE_IMPL
>167	ExpressionStatement	 
>168	CallExpression	OVERMERGE_IMPL ( font_style )
>169	ArgumentList	font_style
>170	Argument	font_style
>171	Identifier	font_style
>172	Callee	OVERMERGE_IMPL
>173	Identifier	OVERMERGE_IMPL
>174	ExpressionStatement	 
>175	CallExpression	OVERMERGE_IMPL ( font_weight )
>176	ArgumentList	font_weight
>177	Argument	font_weight
>178	Identifier	font_weight
>179	Callee	OVERMERGE_IMPL
>180	Identifier	OVERMERGE_IMPL
>181	ExpressionStatement	 
>182	CallExpression	OVERMERGE_IMPL ( font_family )
>183	ArgumentList	font_family
>184	Argument	font_family
>185	Identifier	font_family
>186	Callee	OVERMERGE_IMPL
>187	Identifier	OVERMERGE_IMPL
>188	ExpressionStatement	 
>189	CallExpression	OVERMERGE_IMPL ( font_size )
>190	ArgumentList	font_size
>191	Argument	font_size
>192	Identifier	font_size
>193	Callee	OVERMERGE_IMPL
>194	Identifier	OVERMERGE_IMPL
>195	ExpressionStatement	 
>196	CallExpression	OVERMERGE_IMPL ( text_offset )
>197	ArgumentList	text_offset
>198	Argument	text_offset
>199	Identifier	text_offset
>200	Callee	OVERMERGE_IMPL
>201	Identifier	OVERMERGE_IMPL
>202	ExpressionStatement	 
>203	CallExpression	OVERMERGE_IMPL ( text_color )
>204	ArgumentList	text_color
>205	Argument	text_color
>206	Identifier	text_color
>207	Callee	OVERMERGE_IMPL
>208	Identifier	OVERMERGE_IMPL
>209	ExpressionStatement	 
>210	CallExpression	OVERMERGE_IMPL ( text_position )
>211	ArgumentList	text_position
>212	Argument	text_position
>213	Identifier	text_position
>214	Callee	OVERMERGE_IMPL
>215	Identifier	OVERMERGE_IMPL
>216	ExpressionStatement	 
>217	CallExpression	OVERMERGE_IMPL ( text )
>218	ArgumentList	text
>219	Argument	text
>220	Identifier	text
>221	Callee	OVERMERGE_IMPL
>222	Identifier	OVERMERGE_IMPL
>223	ExpressionStatement	 
>224	CallExpression	OVERMERGE_IMPL ( casing_color )
>225	ArgumentList	casing_color
>226	Argument	casing_color
>227	Identifier	casing_color
>228	Callee	OVERMERGE_IMPL
>229	Identifier	OVERMERGE_IMPL
>230	ExpressionStatement	 
>231	CallExpression	OVERMERGE_IMPL ( casing_width )
>232	ArgumentList	casing_width
>233	Argument	casing_width
>234	Identifier	casing_width
>235	Callee	OVERMERGE_IMPL
>236	Identifier	OVERMERGE_IMPL
>237	ExpressionStatement	 
>238	CallExpression	OVERMERGE_IMPL ( width )
>239	ArgumentList	width
>240	Argument	width
>241	Identifier	width
>242	Callee	OVERMERGE_IMPL
>243	Identifier	OVERMERGE_IMPL
>244	ExpressionStatement	 
>245	CallExpression	OVERMERGE_IMPL ( fill_image )
>246	ArgumentList	fill_image
>247	Argument	fill_image
>248	Identifier	fill_image
>249	Callee	OVERMERGE_IMPL
>250	Identifier	OVERMERGE_IMPL
>251	ExpressionStatement	 
>252	CallExpression	OVERMERGE_IMPL ( image )
>253	ArgumentList	image
>254	Argument	image
>255	Identifier	image
>256	Callee	OVERMERGE_IMPL
>257	Identifier	OVERMERGE_IMPL
>258	ExpressionStatement	 
>259	CallExpression	OVERMERGE_IMPL ( fill_color )
>260	ArgumentList	fill_color
>261	Argument	fill_color
>262	Identifier	fill_color
>263	Callee	OVERMERGE_IMPL
>264	Identifier	OVERMERGE_IMPL
>265	ExpressionStatement	 
>266	CallExpression	OVERMERGE_IMPL ( color )
>267	ArgumentList	color
>268	Argument	color
>269	Identifier	color
>270	Callee	OVERMERGE_IMPL
>271	Identifier	OVERMERGE_IMPL
>314	FunctionDef	Style 
>315	ParameterList	GeoObject * associatedObject , shared_ptr < const Stylesheet > stylesheet
>316	Parameter	 
>317	Identifier	stylesheet
>318	ParameterType	shared_ptr < const Stylesheet >
>319	Parameter	 
>320	Identifier	associatedObject
>321	ParameterType	GeoObject *
>322	ReturnType	void
>323	CompoundStatement	 
>324	IfStatement	if ( entry != associatedObject -> getTags ( ) . end ( ) )
>325	CompoundStatement	 
>326	IfStatement	if ( ! strstream . bad ( ) )
>327	CompoundStatement	 
>328	ExpressionStatement	 
>329	AssignmentExpr	this -> z_index += layer * 100
>330	MultiplicativeExpression	layer * 100
>331	PrimaryExpression	100
>332	Identifier	layer
>333	PtrMemberAccess	this -> z_index
>334	Identifier	z_index
>335	Identifier	this
>336	Condition	 
>337	UnaryOp	! strstream . bad ( )
>338	CallExpression	strstream . bad ( )
>339	ArgumentList	 
>340	Callee	strstream . bad
>341	MemberAccess	strstream . bad
>342	Identifier	bad
>343	Identifier	strstream
>344	UnaryOperator	!
>345	ExpressionStatement	 
>346	ShiftExpression	strstream >> layer
>347	Identifier	layer
>348	Identifier	strstream
>349	IdentifierDeclStatement	 
>350	IdentifierDecl	layer
>351	Identifier	layer
>352	IdentifierDeclType	int
>353	IdentifierDeclStatement	 
>354	IdentifierDecl	strstream ( entry -> second . str ( ) )
>355	CallExpression	entry -> second . str ( )
>356	ArgumentList	 
>357	Callee	entry -> second . str
>358	MemberAccess	entry -> second . str
>359	Identifier	str
>360	PtrMemberAccess	entry -> second
>361	Identifier	second
>362	Identifier	entry
>363	Identifier	strstream
>364	IdentifierDeclType	std 
>365	Condition	 
>366	EqualityExpression	entry != associatedObject -> getTags ( ) . end ( )
>367	CallExpression	associatedObject -> getTags ( ) . end ( )
>368	ArgumentList	 
>369	Callee	associatedObject -> getTags ( ) . end
>370	MemberAccess	associatedObject -> getTags ( ) . end
>371	Identifier	end
>372	CallExpression	associatedObject -> getTags ( )
>373	ArgumentList	 
>374	Callee	associatedObject -> getTags
>375	PtrMemberAccess	associatedObject -> getTags
>376	Identifier	getTags
>377	Identifier	associatedObject
>378	Identifier	entry
>379	ExpressionStatement	 
>380	AssignmentExpr	entry = associatedObject -> getTags ( ) . find ( precached_layer )
>381	CallExpression	associatedObject -> getTags ( ) . find ( precached_layer )
>382	ArgumentList	precached_layer
>383	Argument	precached_layer
>384	Identifier	precached_layer
>385	Callee	associatedObject -> getTags ( ) . find
>386	MemberAccess	associatedObject -> getTags ( ) . find
>387	Identifier	find
>388	CallExpression	associatedObject -> getTags ( )
>389	ArgumentList	 
>390	Callee	associatedObject -> getTags
>391	PtrMemberAccess	associatedObject -> getTags
>392	Identifier	getTags
>393	Identifier	associatedObject
>394	Identifier	entry
>395	Statement	 
>396	IfStatement	if ( this -> shield_text . str ( ) . size ( ) )
>397	CompoundStatement	 
>398	IfStatement	if ( entry != associatedObject -> getTags ( ) . end ( ) )
>399	ElseStatement	else
>400	CompoundStatement	 
>401	ExpressionStatement	 
>402	AssignmentExpr	this -> shield_text = \"\"
>403	PrimaryExpression	\"\"
>404	PtrMemberAccess	this -> shield_text
>405	Identifier	shield_text
>406	Identifier	this
>407	CompoundStatement	 
>408	ExpressionStatement	 
>409	AssignmentExpr	this -> shield_text = entry -> second . str ( )
>410	CallExpression	entry -> second . str ( )
>411	ArgumentList	 
>412	Callee	entry -> second . str
>413	MemberAccess	entry -> second . str
>414	Identifier	str
>415	PtrMemberAccess	entry -> second
>416	Identifier	second
>417	Identifier	entry
>418	PtrMemberAccess	this -> shield_text
>419	Identifier	shield_text
>420	Identifier	this
>421	Condition	 
>422	EqualityExpression	entry != associatedObject -> getTags ( ) . end ( )
>423	CallExpression	associatedObject -> getTags ( ) . end ( )
>424	ArgumentList	 
>425	Callee	associatedObject -> getTags ( ) . end
>426	MemberAccess	associatedObject -> getTags ( ) . end
>427	Identifier	end
>428	CallExpression	associatedObject -> getTags ( )
>429	ArgumentList	 
>430	Callee	associatedObject -> getTags
>431	PtrMemberAccess	associatedObject -> getTags
>432	Identifier	getTags
>433	Identifier	associatedObject
>434	Identifier	entry
>435	ExpressionStatement	 
>436	Statement	 
>437	Statement	 
>438	Statement	 
>439	Statement	 
>440	Statement	 
>441	Statement	 
>442	Statement	 
>443	Statement	 
>444	Statement	 
>445	Statement	 
>446	Statement	 
>447	Statement	 
>448	Statement	 
>449	Statement	 
>450	Statement	 
>451	Statement	 
>452	Statement	 
>453	Statement	 
>454	Statement	 
>455	Statement	 
>456	Statement	 
>457	Statement	 
>458	Statement	 
>459	Statement	 
>460	Statement	 
>461	Statement	 
>462	Statement	 
>463	Statement	 
>464	Condition	 
>465	CallExpression	this -> shield_text . str ( ) . size ( )
>466	ArgumentList	 
>467	Callee	this -> shield_text . str ( ) . size
>468	MemberAccess	this -> shield_text . str ( ) . size
>469	Identifier	size
>470	CallExpression	this -> shield_text . str ( )
>471	ArgumentList	 
>472	Callee	this -> shield_text . str
>473	MemberAccess	this -> shield_text . str
>474	Identifier	str
>475	PtrMemberAccess	this -> shield_text
>476	Identifier	shield_text
>477	Identifier	this
>478	IfStatement	if ( this -> text . str ( ) . size ( ) )
>479	CompoundStatement	 
>480	IfStatement	if ( entry != associatedObject -> getTags ( ) . end ( ) )
>481	ElseStatement	else
>482	CompoundStatement	 
>483	ExpressionStatement	 
>484	AssignmentExpr	this -> text = \"\"
>485	PrimaryExpression	\"\"
>486	PtrMemberAccess	this -> text
>487	Identifier	text
>488	Identifier	this
>489	CompoundStatement	 
>490	ExpressionStatement	 
>491	AssignmentExpr	this -> text = entry -> second . str ( )
>492	CallExpression	entry -> second . str ( )
>493	ArgumentList	 
>494	Callee	entry -> second . str
>495	MemberAccess	entry -> second . str
>496	Identifier	str
>497	PtrMemberAccess	entry -> second
>498	Identifier	second
>499	Identifier	entry
>500	PtrMemberAccess	this -> text
>501	Identifier	text
>502	Identifier	this
>503	Condition	 
>504	EqualityExpression	entry != associatedObject -> getTags ( ) . end ( )
>505	CallExpression	associatedObject -> getTags ( ) . end ( )
>506	ArgumentList	 
>507	Callee	associatedObject -> getTags ( ) . end
>508	MemberAccess	associatedObject -> getTags ( ) . end
>509	Identifier	end
>510	CallExpression	associatedObject -> getTags ( )
>511	ArgumentList	 
>512	Callee	associatedObject -> getTags
>513	PtrMemberAccess	associatedObject -> getTags
>514	Identifier	getTags
>515	Identifier	associatedObject
>516	Identifier	entry
>517	ExpressionStatement	 
>518	Statement	 
>519	Statement	 
>520	Statement	 
>521	Statement	 
>522	Statement	 
>523	Statement	 
>524	Statement	 
>525	Statement	 
>526	Statement	 
>527	Statement	 
>528	Statement	 
>529	Statement	 
>530	Statement	 
>531	Statement	 
>532	Statement	 
>533	Statement	 
>534	Statement	 
>535	Statement	 
>536	Statement	 
>537	Statement	 
>538	Statement	 
>539	Statement	 
>540	Statement	 
>541	Statement	 
>542	Statement	 
>543	Statement	 
>544	Statement	 
>545	Statement	 
>546	Condition	 
>547	CallExpression	this -> text . str ( ) . size ( )
>548	ArgumentList	 
>549	Callee	this -> text . str ( ) . size
>550	MemberAccess	this -> text . str ( ) . size
>551	Identifier	size
>552	CallExpression	this -> text . str ( )
>553	ArgumentList	 
>554	Callee	this -> text . str
>555	MemberAccess	this -> text . str
>556	Identifier	str
>557	PtrMemberAccess	this -> text
>558	Identifier	text
>559	Identifier	this
>560	IfStatement	if ( ! associatedObject )
>561	ReturnStatement	 
>562	Condition	 
>563	UnaryOp	! associatedObject
>564	Identifier	associatedObject
>565	UnaryOperator	!
>566	IfStatement	if ( this -> casing_dashes . size ( ) )
>567	CompoundStatement	 
>568	IfStatement	if ( zero || negative )
>569	ExpressionStatement	 
>570	CallExpression	this -> casing_dashes . clear ( )
>571	ArgumentList	 
>572	Callee	this -> casing_dashes . clear
>573	MemberAccess	this -> casing_dashes . clear
>574	Identifier	clear
>575	PtrMemberAccess	this -> casing_dashes
>576	Identifier	casing_dashes
>577	Identifier	this
>578	Condition	 
>579	OrExpression	zero || negative
>580	Identifier	negative
>581	Identifier	zero
>582	CompoundStatement	 
>583	IfStatement	if ( d > 0.0 )
>584	ElseStatement	else
>585	IfStatement	if ( d < 0.0 )
>586	CompoundStatement	 
>587	BreakStatement	 
>588	ExpressionStatement	 
>589	AssignmentExpr	negative = true
>590	Identifier	true
>591	Identifier	negative
>592	Condition	 
>593	RelationalExpression	d < 0.0
>594	PrimaryExpression	0.0
>595	Identifier	d
>596	CompoundStatement	 
>597	ExpressionStatement	 
>598	AssignmentExpr	zero = false
>599	Identifier	false
>600	Identifier	zero
>601	Condition	 
>602	RelationalExpression	d > 0.0
>603	PrimaryExpression	0.0
>604	Identifier	d
>605	Statement	 
>606	Statement	 
>607	Statement	 
>608	Statement	 
>609	Label	 
>610	Identifier	d
>611	Statement	 
>612	Statement	 
>613	Statement	 
>614	IdentifierDeclStatement	 
>615	IdentifierDecl	negative = false
>616	AssignmentExpr	negative = false
>617	Identifier	false
>618	Identifier	false
>619	Identifier	negative
>620	IdentifierDeclType	bool
>621	IdentifierDeclStatement	 
>622	IdentifierDecl	zero = true
>623	AssignmentExpr	zero = true
>624	Identifier	true
>625	Identifier	true
>626	Identifier	zero
>627	IdentifierDeclType	bool
>628	Condition	 
>629	CallExpression	this -> casing_dashes . size ( )
>630	ArgumentList	 
>631	Callee	this -> casing_dashes . size
>632	MemberAccess	this -> casing_dashes . size
>633	Identifier	size
>634	PtrMemberAccess	this -> casing_dashes
>635	Identifier	casing_dashes
>636	Identifier	this
>637	IfStatement	if ( this -> dashes . size ( ) )
>638	CompoundStatement	 
>639	IfStatement	if ( zero || negative )
>640	ExpressionStatement	 
>641	CallExpression	this -> dashes . clear ( )
>642	ArgumentList	 
>643	Callee	this -> dashes . clear
>644	MemberAccess	this -> dashes . clear
>645	Identifier	clear
>646	PtrMemberAccess	this -> dashes
>647	Identifier	dashes
>648	Identifier	this
>649	Condition	 
>650	OrExpression	zero || negative
>651	Identifier	negative
>652	Identifier	zero
>653	CompoundStatement	 
>654	IfStatement	if ( d > 0.0 )
>655	ElseStatement	else
>656	IfStatement	if ( d < 0.0 )
>657	CompoundStatement	 
>658	BreakStatement	 
>659	ExpressionStatement	 
>660	AssignmentExpr	negative = true
>661	Identifier	true
>662	Identifier	negative
>663	Condition	 
>664	RelationalExpression	d < 0.0
>665	PrimaryExpression	0.0
>666	Identifier	d
>667	CompoundStatement	 
>668	ExpressionStatement	 
>669	AssignmentExpr	zero = false
>670	Identifier	false
>671	Identifier	zero
>672	Condition	 
>673	RelationalExpression	d > 0.0
>674	PrimaryExpression	0.0
>675	Identifier	d
>676	Statement	 
>677	Statement	 
>678	Statement	 
>679	Statement	 
>680	Label	 
>681	Identifier	d
>682	Statement	 
>683	Statement	 
>684	Statement	 
>685	IdentifierDeclStatement	 
>686	IdentifierDecl	negative = false
>687	AssignmentExpr	negative = false
>688	Identifier	false
>689	Identifier	false
>690	Identifier	negative
>691	IdentifierDeclType	bool
>692	IdentifierDeclStatement	 
>693	IdentifierDecl	zero = true
>694	AssignmentExpr	zero = true
>695	Identifier	true
>696	Identifier	true
>697	Identifier	zero
>698	IdentifierDeclType	bool
>699	Condition	 
>700	CallExpression	this -> dashes . size ( )
>701	ArgumentList	 
>702	Callee	this -> dashes . size
>703	MemberAccess	this -> dashes . size
>704	Identifier	size
>705	PtrMemberAccess	this -> dashes
>706	Identifier	dashes
>707	Identifier	this
>708	IfStatement	if ( this -> fill_image . str ( ) . size ( ) )
>709	CompoundStatement	 
>710	IfStatement	if ( ! boost 
>711	CompoundStatement	 
>712	ExpressionStatement	 
>713	AssignmentExpr	this -> fill_image = \"\"
>714	PrimaryExpression	\"\"
>715	PtrMemberAccess	this -> fill_image
>716	Identifier	fill_image
>717	Identifier	this
>718	Condition	 
>719	UnaryOp	! boost 
>720	CallExpression	boost 
>721	ArgumentList	this -> fill_image . str ( )
>722	Argument	this -> fill_image . str ( )
>723	CallExpression	this -> fill_image . str ( )
>724	ArgumentList	 
>725	Callee	this -> fill_image . str
>726	MemberAccess	this -> fill_image . str
>727	Identifier	str
>728	PtrMemberAccess	this -> fill_image
>729	Identifier	fill_image
>730	Identifier	this
>731	Callee	boost 
>732	Identifier	boost 
>733	UnaryOperator	!
>734	ExpressionStatement	 
>735	AssignmentExpr	this -> fill_image = ( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>736	CallExpression	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>737	ArgumentList	 
>738	Callee	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>739	MemberAccess	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>740	Identifier	string
>741	MultiplicativeExpression	stylesheet -> getPath ( ) . parent_path ( ) / boost 
>742	CallExpression	boost 
>743	ArgumentList	this -> fill_image . str ( )
>744	Argument	this -> fill_image . str ( )
>745	CallExpression	this -> fill_image . str ( )
>746	ArgumentList	 
>747	Callee	this -> fill_image . str
>748	MemberAccess	this -> fill_image . str
>749	Identifier	str
>750	PtrMemberAccess	this -> fill_image
>751	Identifier	fill_image
>752	Identifier	this
>753	Callee	boost 
>754	Identifier	boost 
>755	CallExpression	stylesheet -> getPath ( ) . parent_path ( )
>756	ArgumentList	 
>757	Callee	stylesheet -> getPath ( ) . parent_path
>758	MemberAccess	stylesheet -> getPath ( ) . parent_path
>759	Identifier	parent_path
>760	CallExpression	stylesheet -> getPath ( )
>761	ArgumentList	 
>762	Callee	stylesheet -> getPath
>763	PtrMemberAccess	stylesheet -> getPath
>764	Identifier	getPath
>765	Identifier	stylesheet
>766	PtrMemberAccess	this -> fill_image
>767	Identifier	fill_image
>768	Identifier	this
>769	Condition	 
>770	CallExpression	this -> fill_image . str ( ) . size ( )
>771	ArgumentList	 
>772	Callee	this -> fill_image . str ( ) . size
>773	MemberAccess	this -> fill_image . str ( ) . size
>774	Identifier	size
>775	CallExpression	this -> fill_image . str ( )
>776	ArgumentList	 
>777	Callee	this -> fill_image . str
>778	MemberAccess	this -> fill_image . str
>779	Identifier	str
>780	PtrMemberAccess	this -> fill_image
>781	Identifier	fill_image
>782	Identifier	this
>783	IfStatement	if ( this -> image . str ( ) . size ( ) )
>784	CompoundStatement	 
>785	IfStatement	if ( ! boost 
>786	CompoundStatement	 
>787	ExpressionStatement	 
>788	AssignmentExpr	this -> image = \"\"
>789	PrimaryExpression	\"\"
>790	PtrMemberAccess	this -> image
>791	Identifier	image
>792	Identifier	this
>793	Condition	 
>794	UnaryOp	! boost 
>795	CallExpression	boost 
>796	ArgumentList	this -> image . str ( )
>797	Argument	this -> image . str ( )
>798	CallExpression	this -> image . str ( )
>799	ArgumentList	 
>800	Callee	this -> image . str
>801	MemberAccess	this -> image . str
>802	Identifier	str
>803	PtrMemberAccess	this -> image
>804	Identifier	image
>805	Identifier	this
>806	Callee	boost 
>807	Identifier	boost 
>808	UnaryOperator	!
>809	ExpressionStatement	 
>810	AssignmentExpr	this -> image = ( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>811	CallExpression	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>812	ArgumentList	 
>813	Callee	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>814	MemberAccess	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>815	Identifier	string
>816	MultiplicativeExpression	stylesheet -> getPath ( ) . parent_path ( ) / boost 
>817	CallExpression	boost 
>818	ArgumentList	this -> image . str ( )
>819	Argument	this -> image . str ( )
>820	CallExpression	this -> image . str ( )
>821	ArgumentList	 
>822	Callee	this -> image . str
>823	MemberAccess	this -> image . str
>824	Identifier	str
>825	PtrMemberAccess	this -> image
>826	Identifier	image
>827	Identifier	this
>828	Callee	boost 
>829	Identifier	boost 
>830	CallExpression	stylesheet -> getPath ( ) . parent_path ( )
>831	ArgumentList	 
>832	Callee	stylesheet -> getPath ( ) . parent_path
>833	MemberAccess	stylesheet -> getPath ( ) . parent_path
>834	Identifier	parent_path
>835	CallExpression	stylesheet -> getPath ( )
>836	ArgumentList	 
>837	Callee	stylesheet -> getPath
>838	PtrMemberAccess	stylesheet -> getPath
>839	Identifier	getPath
>840	Identifier	stylesheet
>841	PtrMemberAccess	this -> image
>842	Identifier	image
>843	Identifier	this
>844	Condition	 
>845	CallExpression	this -> image . str ( ) . size ( )
>846	ArgumentList	 
>847	Callee	this -> image . str ( ) . size
>848	MemberAccess	this -> image . str ( ) . size
>849	Identifier	size
>850	CallExpression	this -> image . str ( )
>851	ArgumentList	 
>852	Callee	this -> image . str
>853	MemberAccess	this -> image . str
>854	Identifier	str
>855	PtrMemberAccess	this -> image
>856	Identifier	image
>857	Identifier	this
>858	IfStatement	if ( this -> shield_image . str ( ) . size ( ) )
>859	CompoundStatement	 
>860	IfStatement	if ( ! boost 
>861	CompoundStatement	 
>862	ExpressionStatement	 
>863	AssignmentExpr	this -> shield_image = \"\"
>864	PrimaryExpression	\"\"
>865	PtrMemberAccess	this -> shield_image
>866	Identifier	shield_image
>867	Identifier	this
>868	Condition	 
>869	UnaryOp	! boost 
>870	CallExpression	boost 
>871	ArgumentList	this -> shield_image . str ( )
>872	Argument	this -> shield_image . str ( )
>873	CallExpression	this -> shield_image . str ( )
>874	ArgumentList	 
>875	Callee	this -> shield_image . str
>876	MemberAccess	this -> shield_image . str
>877	Identifier	str
>878	PtrMemberAccess	this -> shield_image
>879	Identifier	shield_image
>880	Identifier	this
>881	Callee	boost 
>882	Identifier	boost 
>883	UnaryOperator	!
>884	ExpressionStatement	 
>885	AssignmentExpr	this -> shield_image = ( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>886	CallExpression	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>887	ArgumentList	 
>888	Callee	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>889	MemberAccess	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>890	Identifier	string
>891	MultiplicativeExpression	stylesheet -> getPath ( ) . parent_path ( ) / boost 
>892	CallExpression	boost 
>893	ArgumentList	this -> shield_image . str ( )
>894	Argument	this -> shield_image . str ( )
>895	CallExpression	this -> shield_image . str ( )
>896	ArgumentList	 
>897	Callee	this -> shield_image . str
>898	MemberAccess	this -> shield_image . str
>899	Identifier	str
>900	PtrMemberAccess	this -> shield_image
>901	Identifier	shield_image
>902	Identifier	this
>903	Callee	boost 
>904	Identifier	boost 
>905	CallExpression	stylesheet -> getPath ( ) . parent_path ( )
>906	ArgumentList	 
>907	Callee	stylesheet -> getPath ( ) . parent_path
>908	MemberAccess	stylesheet -> getPath ( ) . parent_path
>909	Identifier	parent_path
>910	CallExpression	stylesheet -> getPath ( )
>911	ArgumentList	 
>912	Callee	stylesheet -> getPath
>913	PtrMemberAccess	stylesheet -> getPath
>914	Identifier	getPath
>915	Identifier	stylesheet
>916	PtrMemberAccess	this -> shield_image
>917	Identifier	shield_image
>918	Identifier	this
>919	Condition	 
>920	CallExpression	this -> shield_image . str ( ) . size ( )
>921	ArgumentList	 
>922	Callee	this -> shield_image . str ( ) . size
>923	MemberAccess	this -> shield_image . str ( ) . size
>924	Identifier	size
>925	CallExpression	this -> shield_image . str ( )
>926	ArgumentList	 
>927	Callee	this -> shield_image . str
>928	MemberAccess	this -> shield_image . str
>929	Identifier	str
>930	PtrMemberAccess	this -> shield_image
>931	Identifier	shield_image
>932	Identifier	this
>933	IfStatement	if ( this -> icon_image . str ( ) . size ( ) )
>934	CompoundStatement	 
>935	IfStatement	if ( ! boost 
>936	CompoundStatement	 
>937	ExpressionStatement	 
>938	AssignmentExpr	this -> icon_image = \"\"
>939	PrimaryExpression	\"\"
>940	PtrMemberAccess	this -> icon_image
>941	Identifier	icon_image
>942	Identifier	this
>943	Condition	 
>944	UnaryOp	! boost 
>945	CallExpression	boost 
>946	ArgumentList	this -> icon_image . str ( )
>947	Argument	this -> icon_image . str ( )
>948	CallExpression	this -> icon_image . str ( )
>949	ArgumentList	 
>950	Callee	this -> icon_image . str
>951	MemberAccess	this -> icon_image . str
>952	Identifier	str
>953	PtrMemberAccess	this -> icon_image
>954	Identifier	icon_image
>955	Identifier	this
>956	Callee	boost 
>957	Identifier	boost 
>958	UnaryOperator	!
>959	ExpressionStatement	 
>960	AssignmentExpr	this -> icon_image = ( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>961	CallExpression	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>962	ArgumentList	 
>963	Callee	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>964	MemberAccess	( stylesheet -> getPath ( ) . parent_path ( ) / boost 
>965	Identifier	string
>966	MultiplicativeExpression	stylesheet -> getPath ( ) . parent_path ( ) / boost 
>967	CallExpression	boost 
>968	ArgumentList	this -> icon_image . str ( )
>969	Argument	this -> icon_image . str ( )
>970	CallExpression	this -> icon_image . str ( )
>971	ArgumentList	 
>972	Callee	this -> icon_image . str
>973	MemberAccess	this -> icon_image . str
>974	Identifier	str
>975	PtrMemberAccess	this -> icon_image
>976	Identifier	icon_image
>977	Identifier	this
>978	Callee	boost 
>979	Identifier	boost 
>980	CallExpression	stylesheet -> getPath ( ) . parent_path ( )
>981	ArgumentList	 
>982	Callee	stylesheet -> getPath ( ) . parent_path
>983	MemberAccess	stylesheet -> getPath ( ) . parent_path
>984	Identifier	parent_path
>985	CallExpression	stylesheet -> getPath ( )
>986	ArgumentList	 
>987	Callee	stylesheet -> getPath
>988	PtrMemberAccess	stylesheet -> getPath
>989	Identifier	getPath
>990	Identifier	stylesheet
>991	PtrMemberAccess	this -> icon_image
>992	Identifier	icon_image
>993	Identifier	this
>994	Condition	 
>995	CallExpression	this -> icon_image . str ( ) . size ( )
>996	ArgumentList	 
>997	Callee	this -> icon_image . str ( ) . size
>998	MemberAccess	this -> icon_image . str ( ) . size
>999	Identifier	size
>1000	CallExpression	this -> icon_image . str ( )
>1001	ArgumentList	 
>1002	Callee	this -> icon_image . str
>1003	MemberAccess	this -> icon_image . str
>1004	Identifier	str
>1005	PtrMemberAccess	this -> icon_image
>1006	Identifier	icon_image
>1007	Identifier	this
>1065	FunctionDef	Style 
>1066	ParameterList	 
>1067	CompoundStatement	 
>1068	ExpressionStatement	 
>1069	AssignmentExpr	z_index = 0
>1070	PrimaryExpression	0
>1071	Identifier	z_index
>1072	IdentifierDeclStatement	 
>1073	IdentifierDecl	shield_shape = Style 
>1074	AssignmentExpr	shield_shape = Style 
>1075	Identifier	Style 
>1076	Identifier	Style 
>1077	Identifier	shield_shape
>1078	IdentifierDeclType	ShieldShape
>1079	IdentifierDeclStatement	 
>1080	IdentifierDecl	shield_casing_width = 0.0f
>1081	AssignmentExpr	shield_casing_width = 0.0f
>1082	PrimaryExpression	0.0f
>1083	Identifier	shield_casing_width
>1084	Identifier	shield_casing_width
>1085	IdentifierDeclType	float
>1086	IdentifierDeclStatement	 
>1087	IdentifierDecl	shield_casing_color = Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1088	AssignmentExpr	shield_casing_color = Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1089	CallExpression	Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1090	ArgumentList	1.0f
>1091	Argument	0.0f
>1092	PrimaryExpression	0.0f
>1093	Argument	1.0f
>1094	PrimaryExpression	1.0f
>1095	Argument	1.0f
>1096	PrimaryExpression	1.0f
>1097	Argument	1.0f
>1098	PrimaryExpression	1.0f
>1099	Callee	Color
>1100	Identifier	Color
>1101	Identifier	shield_casing_color
>1102	Identifier	shield_casing_color
>1103	IdentifierDeclType	Color
>1104	IdentifierDeclStatement	 
>1105	IdentifierDecl	shield_frame_width = 0.0f
>1106	AssignmentExpr	shield_frame_width = 0.0f
>1107	PrimaryExpression	0.0f
>1108	Identifier	shield_frame_width
>1109	Identifier	shield_frame_width
>1110	IdentifierDeclType	float
>1111	IdentifierDeclStatement	 
>1112	IdentifierDecl	shield_frame_color = Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1113	AssignmentExpr	shield_frame_color = Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1114	CallExpression	Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1115	ArgumentList	1.0f
>1116	Argument	0.0f
>1117	PrimaryExpression	0.0f
>1118	Argument	1.0f
>1119	PrimaryExpression	1.0f
>1120	Argument	1.0f
>1121	PrimaryExpression	1.0f
>1122	Argument	1.0f
>1123	PrimaryExpression	1.0f
>1124	Callee	Color
>1125	Identifier	Color
>1126	Identifier	shield_frame_color
>1127	Identifier	shield_frame_color
>1128	IdentifierDeclType	Color
>1129	IdentifierDeclStatement	 
>1130	IdentifierDecl	shield_opacity = 0.0f
>1131	AssignmentExpr	shield_opacity = 0.0f
>1132	PrimaryExpression	0.0f
>1133	Identifier	shield_opacity
>1134	Identifier	shield_opacity
>1135	IdentifierDeclType	float
>1136	ExpressionStatement	 
>1137	AssignmentExpr	shield_color = Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1138	CallExpression	Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1139	ArgumentList	1.0f
>1140	Argument	0.0f
>1141	PrimaryExpression	0.0f
>1142	Argument	1.0f
>1143	PrimaryExpression	1.0f
>1144	Argument	1.0f
>1145	PrimaryExpression	1.0f
>1146	Argument	1.0f
>1147	PrimaryExpression	1.0f
>1148	Callee	Color
>1149	Identifier	Color
>1150	Identifier	shield_color
>1151	ExpressionStatement	 
>1152	AssignmentExpr	icon_opacity = 1.0
>1153	PrimaryExpression	1.0
>1154	Identifier	icon_opacity
>1155	ExpressionStatement	 
>1156	AssignmentExpr	icon_height = - 1.0
>1157	UnaryOp	- 1.0
>1158	PrimaryExpression	1.0
>1159	UnaryOperator	-
>1160	Identifier	icon_height
>1161	ExpressionStatement	 
>1162	AssignmentExpr	icon_width = - 1.0
>1163	UnaryOp	- 1.0
>1164	PrimaryExpression	1.0
>1165	UnaryOperator	-
>1166	Identifier	icon_width
>1167	ExpressionStatement	 
>1168	AssignmentExpr	casing_linejoin = Style 
>1169	Identifier	Style 
>1170	Identifier	casing_linejoin
>1171	ExpressionStatement	 
>1172	AssignmentExpr	casing_linecap = Style 
>1173	Identifier	Style 
>1174	Identifier	casing_linecap
>1175	ExpressionStatement	 
>1176	AssignmentExpr	linejoin = Style 
>1177	Identifier	Style 
>1178	Identifier	linejoin
>1179	ExpressionStatement	 
>1180	AssignmentExpr	linecap = Style 
>1181	Identifier	Style 
>1182	Identifier	linecap
>1183	ExpressionStatement	 
>1184	AssignmentExpr	text_halo_radius = 0.0
>1185	PrimaryExpression	0.0
>1186	Identifier	text_halo_radius
>1187	ExpressionStatement	 
>1188	AssignmentExpr	text_halo_color = Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1189	CallExpression	Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1190	ArgumentList	1.0f
>1191	Argument	0.0f
>1192	PrimaryExpression	0.0f
>1193	Argument	1.0f
>1194	PrimaryExpression	1.0f
>1195	Argument	1.0f
>1196	PrimaryExpression	1.0f
>1197	Argument	1.0f
>1198	PrimaryExpression	1.0f
>1199	Callee	Color
>1200	Identifier	Color
>1201	Identifier	text_halo_color
>1202	ExpressionStatement	 
>1203	AssignmentExpr	font_style = Style 
>1204	Identifier	Style 
>1205	Identifier	font_style
>1206	ExpressionStatement	 
>1207	AssignmentExpr	font_weight = Style 
>1208	Identifier	Style 
>1209	Identifier	font_weight
>1210	ExpressionStatement	 
>1211	AssignmentExpr	font_family = DEFAULT_FONT
>1212	Identifier	DEFAULT_FONT
>1213	Identifier	font_family
>1214	ExpressionStatement	 
>1215	AssignmentExpr	font_size = 0.0
>1216	PrimaryExpression	0.0
>1217	Identifier	font_size
>1218	ExpressionStatement	 
>1219	AssignmentExpr	text_offset = 0.0
>1220	PrimaryExpression	0.0
>1221	Identifier	text_offset
>1222	ExpressionStatement	 
>1223	AssignmentExpr	text_color = Color ( 0.0f , 0.0f , 0.0f , 1.0f )
>1224	CallExpression	Color ( 0.0f , 0.0f , 0.0f , 1.0f )
>1225	ArgumentList	0.0f
>1226	Argument	1.0f
>1227	PrimaryExpression	1.0f
>1228	Argument	0.0f
>1229	PrimaryExpression	0.0f
>1230	Argument	0.0f
>1231	PrimaryExpression	0.0f
>1232	Argument	0.0f
>1233	PrimaryExpression	0.0f
>1234	Callee	Color
>1235	Identifier	Color
>1236	Identifier	text_color
>1237	ExpressionStatement	 
>1238	AssignmentExpr	text_position = Style 
>1239	Identifier	Style 
>1240	Identifier	text_position
>1241	ExpressionStatement	 
>1242	AssignmentExpr	casing_color = Color ( 1.0f , 1.0f , 1.0f , 1.0f )
>1243	CallExpression	Color ( 1.0f , 1.0f , 1.0f , 1.0f )
>1244	ArgumentList	1.0f
>1245	Argument	1.0f
>1246	PrimaryExpression	1.0f
>1247	Argument	1.0f
>1248	PrimaryExpression	1.0f
>1249	Argument	1.0f
>1250	PrimaryExpression	1.0f
>1251	Argument	1.0f
>1252	PrimaryExpression	1.0f
>1253	Callee	Color
>1254	Identifier	Color
>1255	Identifier	casing_color
>1256	ExpressionStatement	 
>1257	AssignmentExpr	casing_width = 0.0
>1258	PrimaryExpression	0.0
>1259	Identifier	casing_width
>1260	ExpressionStatement	 
>1261	AssignmentExpr	width = 0.0
>1262	PrimaryExpression	0.0
>1263	Identifier	width
>1264	ExpressionStatement	 
>1265	AssignmentExpr	fill_color = Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1266	CallExpression	Color ( 1.0f , 1.0f , 1.0f , 0.0f )
>1267	ArgumentList	1.0f
>1268	Argument	0.0f
>1269	PrimaryExpression	0.0f
>1270	Argument	1.0f
>1271	PrimaryExpression	1.0f
>1272	Argument	1.0f
>1273	PrimaryExpression	1.0f
>1274	Argument	1.0f
>1275	PrimaryExpression	1.0f
>1276	Callee	Color
>1277	Identifier	Color
>1278	Identifier	fill_color
>1279	ExpressionStatement	 
>1280	AssignmentExpr	color = Color ( 0.0f , 0.0f , 0.0f , 1.0f )
>1281	CallExpression	Color ( 0.0f , 0.0f , 0.0f , 1.0f )
>1282	ArgumentList	0.0f
>1283	Argument	1.0f
>1284	PrimaryExpression	1.0f
>1285	Argument	0.0f
>1286	PrimaryExpression	0.0f
>1287	Argument	0.0f
>1288	PrimaryExpression	0.0f
>1289	Argument	0.0f
>1290	PrimaryExpression	0.0f
>1291	Callee	Color
>1292	Identifier	Color
>1293	Identifier	color
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=265,258,251,244,237,230,223,216,209,202,195,188,181,174,167,160,153,146,139,132,125,118,111,104,97,90,83,76,69,62,55,48,41,34,27,20,13
<13=14
<14=18,15
<15=16
<16=17
<18=19
<20=21
<21=25,22
<22=23
<23=24
<25=26
<27=28
<28=32,29
<29=30
<30=31
<32=33
<34=35
<35=39,36
<36=37
<37=38
<39=40
<41=42
<42=46,43
<43=44
<44=45
<46=47
<48=49
<49=53,50
<50=51
<51=52
<53=54
<55=56
<56=60,57
<57=58
<58=59
<60=61
<62=63
<63=67,64
<64=65
<65=66
<67=68
<69=70
<70=74,71
<71=72
<72=73
<74=75
<76=77
<77=81,78
<78=79
<79=80
<81=82
<83=84
<84=88,85
<85=86
<86=87
<88=89
<90=91
<91=95,92
<92=93
<93=94
<95=96
<97=98
<98=102,99
<99=100
<100=101
<102=103
<104=105
<105=109,106
<106=107
<107=108
<109=110
<111=112
<112=116,113
<113=114
<114=115
<116=117
<118=119
<119=123,120
<120=121
<121=122
<123=124
<125=126
<126=130,127
<127=128
<128=129
<130=131
<132=133
<133=137,134
<134=135
<135=136
<137=138
<139=140
<140=144,141
<141=142
<142=143
<144=145
<146=147
<147=151,148
<148=149
<149=150
<151=152
<153=154
<154=158,155
<155=156
<156=157
<158=159
<160=161
<161=165,162
<162=163
<163=164
<165=166
<167=168
<168=172,169
<169=170
<170=171
<172=173
<174=175
<175=179,176
<176=177
<177=178
<179=180
<181=182
<182=186,183
<183=184
<184=185
<186=187
<188=189
<189=193,190
<190=191
<191=192
<193=194
<195=196
<196=200,197
<197=198
<198=199
<200=201
<202=203
<203=207,204
<204=205
<205=206
<207=208
<209=210
<210=214,211
<211=212
<212=213
<214=215
<216=217
<217=221,218
<218=219
<219=220
<221=222
<223=224
<224=228,225
<225=226
<226=227
<228=229
<230=231
<231=235,232
<232=233
<233=234
<235=236
<237=238
<238=242,239
<239=240
<240=241
<242=243
<244=245
<245=249,246
<246=247
<247=248
<249=250
<251=252
<252=256,253
<253=254
<254=255
<256=257
<258=259
<259=263,260
<260=261
<261=262
<263=264
<265=266
<266=270,267
<267=268
<268=269
<270=271
<314=323,322,315
<315=319,316
<316=318,317
<319=321,320
<323=933,858,783,708,637,566,560,478,396,395,379,324
<324=365,325
<325=353,349,345,326
<326=336,327
<327=328
<328=329
<329=333,330
<330=332,331
<333=335,334
<336=337
<337=344,338
<338=340,339
<340=341
<341=343,342
<345=346
<346=348,347
<349=350
<350=352,351
<353=354
<354=364,363,355
<355=357,356
<357=358
<358=360,359
<360=362,361
<365=366
<366=378,367
<367=369,368
<369=370
<370=372,371
<372=374,373
<374=375
<375=377,376
<379=380
<380=394,381
<381=385,382
<382=383
<383=384
<385=386
<386=388,387
<388=390,389
<390=391
<391=393,392
<396=464,397
<397=463,462,461,460,459,458,457,456,455,454,453,452,451,450,449,448,447,446,445,444,443,442,441,440,439,438,437,436,435,398
<398=421,407,399
<399=400
<400=401
<401=402
<402=404,403
<404=406,405
<407=408
<408=409
<409=418,410
<410=412,411
<412=413
<413=415,414
<415=417,416
<418=420,419
<421=422
<422=434,423
<423=425,424
<425=426
<426=428,427
<428=430,429
<430=431
<431=433,432
<464=465
<465=467,466
<467=468
<468=470,469
<470=472,471
<472=473
<473=475,474
<475=477,476
<478=546,479
<479=545,544,543,542,541,540,539,538,537,536,535,534,533,532,531,530,529,528,527,526,525,524,523,522,521,520,519,518,517,480
<480=503,489,481
<481=482
<482=483
<483=484
<484=486,485
<486=488,487
<489=490
<490=491
<491=500,492
<492=494,493
<494=495
<495=497,496
<497=499,498
<500=502,501
<503=504
<504=516,505
<505=507,506
<507=508
<508=510,509
<510=512,511
<512=513
<513=515,514
<546=547
<547=549,548
<549=550
<550=552,551
<552=554,553
<554=555
<555=557,556
<557=559,558
<560=562,561
<562=563
<563=565,564
<566=628,567
<567=621,614,613,612,611,609,608,607,606,605,582,568
<568=578,569
<569=570
<570=572,571
<572=573
<573=575,574
<575=577,576
<578=579
<579=581,580
<582=583
<583=601,596,584
<584=585
<585=592,586
<586=588,587
<588=589
<589=591,590
<592=593
<593=595,594
<596=597
<597=598
<598=600,599
<601=602
<602=604,603
<609=610
<614=615
<615=620,619,616
<616=618,617
<621=622
<622=627,626,623
<623=625,624
<628=629
<629=631,630
<631=632
<632=634,633
<634=636,635
<637=699,638
<638=692,685,684,683,682,680,679,678,677,676,653,639
<639=649,640
<640=641
<641=643,642
<643=644
<644=646,645
<646=648,647
<649=650
<650=652,651
<653=654
<654=672,667,655
<655=656
<656=663,657
<657=659,658
<659=660
<660=662,661
<663=664
<664=666,665
<667=668
<668=669
<669=671,670
<672=673
<673=675,674
<680=681
<685=686
<686=691,690,687
<687=689,688
<692=693
<693=698,697,694
<694=696,695
<699=700
<700=702,701
<702=703
<703=705,704
<705=707,706
<708=769,709
<709=734,710
<710=718,711
<711=712
<712=713
<713=715,714
<715=717,716
<718=719
<719=733,720
<720=731,721
<721=722
<722=723
<723=725,724
<725=726
<726=728,727
<728=730,729
<731=732
<734=735
<735=766,736
<736=738,737
<738=739
<739=741,740
<741=755,742
<742=753,743
<743=744
<744=745
<745=747,746
<747=748
<748=750,749
<750=752,751
<753=754
<755=757,756
<757=758
<758=760,759
<760=762,761
<762=763
<763=765,764
<766=768,767
<769=770
<770=772,771
<772=773
<773=775,774
<775=777,776
<777=778
<778=780,779
<780=782,781
<783=844,784
<784=809,785
<785=793,786
<786=787
<787=788
<788=790,789
<790=792,791
<793=794
<794=808,795
<795=806,796
<796=797
<797=798
<798=800,799
<800=801
<801=803,802
<803=805,804
<806=807
<809=810
<810=841,811
<811=813,812
<813=814
<814=816,815
<816=830,817
<817=828,818
<818=819
<819=820
<820=822,821
<822=823
<823=825,824
<825=827,826
<828=829
<830=832,831
<832=833
<833=835,834
<835=837,836
<837=838
<838=840,839
<841=843,842
<844=845
<845=847,846
<847=848
<848=850,849
<850=852,851
<852=853
<853=855,854
<855=857,856
<858=919,859
<859=884,860
<860=868,861
<861=862
<862=863
<863=865,864
<865=867,866
<868=869
<869=883,870
<870=881,871
<871=872
<872=873
<873=875,874
<875=876
<876=878,877
<878=880,879
<881=882
<884=885
<885=916,886
<886=888,887
<888=889
<889=891,890
<891=905,892
<892=903,893
<893=894
<894=895
<895=897,896
<897=898
<898=900,899
<900=902,901
<903=904
<905=907,906
<907=908
<908=910,909
<910=912,911
<912=913
<913=915,914
<916=918,917
<919=920
<920=922,921
<922=923
<923=925,924
<925=927,926
<927=928
<928=930,929
<930=932,931
<933=994,934
<934=959,935
<935=943,936
<936=937
<937=938
<938=940,939
<940=942,941
<943=944
<944=958,945
<945=956,946
<946=947
<947=948
<948=950,949
<950=951
<951=953,952
<953=955,954
<956=957
<959=960
<960=991,961
<961=963,962
<963=964
<964=966,965
<966=980,967
<967=978,968
<968=969
<969=970
<970=972,971
<972=973
<973=975,974
<975=977,976
<978=979
<980=982,981
<982=983
<983=985,984
<985=987,986
<987=988
<988=990,989
<991=993,992
<994=995
<995=997,996
<997=998
<998=1000,999
<1000=1002,1001
<1002=1003
<1003=1005,1004
<1005=1007,1006
<1065=1067,1066
<1067=1279,1264,1260,1256,1241,1237,1222,1218,1214,1210,1206,1202,1187,1183,1179,1175,1171,1167,1161,1155,1151,1136,1129,1111,1104,1086,1079,1072,1068
<1068=1069
<1069=1071,1070
<1072=1073
<1073=1078,1077,1074
<1074=1076,1075
<1079=1080
<1080=1085,1084,1081
<1081=1083,1082
<1086=1087
<1087=1103,1102,1088
<1088=1101,1089
<1089=1099,1090
<1090=1097,1095,1093,1091
<1091=1092
<1093=1094
<1095=1096
<1097=1098
<1099=1100
<1104=1105
<1105=1110,1109,1106
<1106=1108,1107
<1111=1112
<1112=1128,1127,1113
<1113=1126,1114
<1114=1124,1115
<1115=1122,1120,1118,1116
<1116=1117
<1118=1119
<1120=1121
<1122=1123
<1124=1125
<1129=1130
<1130=1135,1134,1131
<1131=1133,1132
<1136=1137
<1137=1150,1138
<1138=1148,1139
<1139=1146,1144,1142,1140
<1140=1141
<1142=1143
<1144=1145
<1146=1147
<1148=1149
<1151=1152
<1152=1154,1153
<1155=1156
<1156=1160,1157
<1157=1159,1158
<1161=1162
<1162=1166,1163
<1163=1165,1164
<1167=1168
<1168=1170,1169
<1171=1172
<1172=1174,1173
<1175=1176
<1176=1178,1177
<1179=1180
<1180=1182,1181
<1183=1184
<1184=1186,1185
<1187=1188
<1188=1201,1189
<1189=1199,1190
<1190=1197,1195,1193,1191
<1191=1192
<1193=1194
<1195=1196
<1197=1198
<1199=1200
<1202=1203
<1203=1205,1204
<1206=1207
<1207=1209,1208
<1210=1211
<1211=1213,1212
<1214=1215
<1215=1217,1216
<1218=1219
<1219=1221,1220
<1222=1223
<1223=1236,1224
<1224=1234,1225
<1225=1232,1230,1228,1226
<1226=1227
<1228=1229
<1230=1231
<1232=1233
<1234=1235
<1237=1238
<1238=1240,1239
<1241=1242
<1242=1255,1243
<1243=1253,1244
<1244=1251,1249,1247,1245
<1245=1246
<1247=1248
<1249=1250
<1251=1252
<1253=1254
<1256=1257
<1257=1259,1258
<1260=1261
<1261=1263,1262
<1264=1265
<1265=1278,1266
<1266=1276,1267
<1267=1274,1272,1270,1268
<1268=1269
<1270=1271
<1272=1273
<1274=1275
<1276=1277
<1279=1280
<1280=1293,1281
<1281=1291,1282
<1282=1289,1287,1285,1283
<1283=1284
<1285=1286
<1287=1288
<1289=1290
<1291=1292
