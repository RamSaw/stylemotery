>3	FunctionDef	drwnOptionsEditor 
>4	ParameterList	wxWindow * parent , drwnProperties * properties
>5	Parameter	 
>6	Identifier	properties
>7	ParameterType	drwnProperties *
>8	Parameter	 
>9	Identifier	parent
>10	ParameterType	wxWindow *
>11	CompoundStatement	 
>12	ExpressionStatement	 
>13	CallExpression	mainSizer -> SetSizeHints ( this )
>14	ArgumentList	this
>15	Argument	this
>16	Identifier	this
>17	Callee	mainSizer -> SetSizeHints
>18	PtrMemberAccess	mainSizer -> SetSizeHints
>19	Identifier	SetSizeHints
>20	Identifier	mainSizer
>21	ExpressionStatement	 
>22	CallExpression	SetSizer ( mainSizer )
>23	ArgumentList	mainSizer
>24	Argument	mainSizer
>25	Identifier	mainSizer
>26	Callee	SetSizer
>27	Identifier	SetSizer
>28	ExpressionStatement	 
>29	CallExpression	mainSizer -> Add ( buttons , 0 , wxALIGN_CENTER )
>30	ArgumentList	buttons
>31	Argument	wxALIGN_CENTER
>32	Identifier	wxALIGN_CENTER
>33	Argument	0
>34	PrimaryExpression	0
>35	Argument	buttons
>36	Identifier	buttons
>37	Callee	mainSizer -> Add
>38	PtrMemberAccess	mainSizer -> Add
>39	Identifier	Add
>40	Identifier	mainSizer
>41	ExpressionStatement	 
>42	CallExpression	buttons -> Add ( new wxButton ( this , wxID_CANCEL , \"Cancel\" ) , wxSizerFlags ( 0 ) . Align ( ) . Border ( wxALL , \
>43	ArgumentList	this , wxID_CANCEL , \"Cancel\"
>44	Argument	wxSizerFlags ( 0 ) . Align ( ) . Border ( wxALL , 10 )
>45	CallExpression	wxSizerFlags ( 0 ) . Align ( ) . Border ( wxALL , 10 )
>46	ArgumentList	wxALL
>47	Argument	10
>48	PrimaryExpression	10
>49	Argument	wxALL
>50	Identifier	wxALL
>51	Callee	wxSizerFlags ( 0 ) . Align ( ) . Border
>52	MemberAccess	wxSizerFlags ( 0 ) . Align ( ) . Border
>53	Identifier	Border
>54	CallExpression	wxSizerFlags ( 0 ) . Align ( )
>55	ArgumentList	 
>56	Callee	wxSizerFlags ( 0 ) . Align
>57	MemberAccess	wxSizerFlags ( 0 ) . Align
>58	Identifier	Align
>59	CallExpression	wxSizerFlags ( 0 )
>60	ArgumentList	0
>61	Argument	0
>62	PrimaryExpression	0
>63	Callee	wxSizerFlags
>64	Identifier	wxSizerFlags
>65	Argument	this , wxID_CANCEL , \"Cancel\"
>66	Expression	this , wxID_CANCEL , \"Cancel\"
>67	Expression	wxID_CANCEL , \"Cancel\"
>68	PrimaryExpression	\"Cancel\"
>69	Identifier	wxID_CANCEL
>70	Identifier	this
>71	Callee	buttons -> Add
>72	PtrMemberAccess	buttons -> Add
>73	Identifier	Add
>74	Identifier	buttons
>75	ExpressionStatement	 
>76	CallExpression	buttons -> Add ( new wxButton ( this , wxID_OK , \"OK\" ) , wxSizerFlags ( 0 ) . Align ( ) . Border ( wxALL , 10 ) )
>77	ArgumentList	this , wxID_OK , \"OK\"
>78	Argument	wxSizerFlags ( 0 ) . Align ( ) . Border ( wxALL , 10 )
>79	CallExpression	wxSizerFlags ( 0 ) . Align ( ) . Border ( wxALL , 10 )
>80	ArgumentList	wxALL
>81	Argument	10
>82	PrimaryExpression	10
>83	Argument	wxALL
>84	Identifier	wxALL
>85	Callee	wxSizerFlags ( 0 ) . Align ( ) . Border
>86	MemberAccess	wxSizerFlags ( 0 ) . Align ( ) . Border
>87	Identifier	Border
>88	CallExpression	wxSizerFlags ( 0 ) . Align ( )
>89	ArgumentList	 
>90	Callee	wxSizerFlags ( 0 ) . Align
>91	MemberAccess	wxSizerFlags ( 0 ) . Align
>92	Identifier	Align
>93	CallExpression	wxSizerFlags ( 0 )
>94	ArgumentList	0
>95	Argument	0
>96	PrimaryExpression	0
>97	Callee	wxSizerFlags
>98	Identifier	wxSizerFlags
>99	Argument	this , wxID_OK , \"OK\"
>100	Expression	this , wxID_OK , \"OK\"
>101	Expression	wxID_OK , \"OK\"
>102	PrimaryExpression	\"OK\"
>103	Identifier	wxID_OK
>104	Identifier	this
>105	Callee	buttons -> Add
>106	PtrMemberAccess	buttons -> Add
>107	Identifier	Add
>108	Identifier	buttons
>109	IdentifierDeclStatement	 
>110	IdentifierDecl	* buttons = new wxBoxSizer ( wxHORIZONTAL )
>111	AssignmentExpr	* buttons = new wxBoxSizer ( wxHORIZONTAL )
>112	Identifier	wxHORIZONTAL
>113	Identifier	wxHORIZONTAL
>114	Identifier	buttons
>115	IdentifierDeclType	wxBoxSizer *
>116	ExpressionStatement	 
>117	CallExpression	mainSizer -> Add ( _grid , 1 , wxEXPAND | wxALL , 10 )
>118	ArgumentList	_grid
>119	Argument	10
>120	PrimaryExpression	10
>121	Argument	wxEXPAND | wxALL
>122	InclusiveOrExpression	wxEXPAND | wxALL
>123	Identifier	wxALL
>124	Identifier	wxEXPAND
>125	Argument	1
>126	PrimaryExpression	1
>127	Argument	_grid
>128	Identifier	_grid
>129	Callee	mainSizer -> Add
>130	PtrMemberAccess	mainSizer -> Add
>131	Identifier	Add
>132	Identifier	mainSizer
>133	ExpressionStatement	 
>134	CallExpression	_grid -> AutoSize ( )
>135	ArgumentList	 
>136	Callee	_grid -> AutoSize
>137	PtrMemberAccess	_grid -> AutoSize
>138	Identifier	AutoSize
>139	Identifier	_grid
>140	ForStatement	for ( unsigned i = 0 ; i < _properties -> numProperties ( ) ; i ++ )
>141	CompoundStatement	 
>142	SwitchStatement	switch ( _properties -> getPropertyType ( i ) )
>143	CompoundStatement	 
>144	BreakStatement	 
>145	Label	 
>146	Identifier	default
>147	BreakStatement	 
>148	ExpressionStatement	 
>149	CallExpression	_grid -> SetReadOnly ( i , 0 )
>150	ArgumentList	i
>151	Argument	0
>152	PrimaryExpression	0
>153	Argument	i
>154	Identifier	i
>155	Callee	_grid -> SetReadOnly
>156	PtrMemberAccess	_grid -> SetReadOnly
>157	Identifier	SetReadOnly
>158	Identifier	_grid
>159	Label	 
>160	Identifier	DRWN_MATRIX_PROPERTY
>161	BreakStatement	 
>162	ExpressionStatement	 
>163	CallExpression	_grid -> SetReadOnly ( i , 0 )
>164	ArgumentList	i
>165	Argument	0
>166	PrimaryExpression	0
>167	Argument	i
>168	Identifier	i
>169	Callee	_grid -> SetReadOnly
>170	PtrMemberAccess	_grid -> SetReadOnly
>171	Identifier	SetReadOnly
>172	Identifier	_grid
>173	Label	 
>174	Identifier	DRWN_VECTOR_PROPERTY
>175	BreakStatement	 
>176	CompoundStatement	 
>177	ExpressionStatement	 
>178	CallExpression	_grid -> SetCellEditor ( i , 0 , new wxGridCellChoiceEditor ( choiceArray ) )
>179	ArgumentList	i
>180	Argument	choiceArray
>181	Identifier	choiceArray
>182	Argument	0
>183	PrimaryExpression	0
>184	Argument	i
>185	Identifier	i
>186	Callee	_grid -> SetCellEditor
>187	PtrMemberAccess	_grid -> SetCellEditor
>188	Identifier	SetCellEditor
>189	Identifier	_grid
>190	ForStatement	for ( unsigned k = 0 ; k < choices -> size ( ) ; k ++ )
>191	CompoundStatement	 
>192	ExpressionStatement	 
>193	CallExpression	choiceArray . Add ( wxString ( choices -> at ( k ) ) )
>194	ArgumentList	wxString ( choices -> at ( k ) )
>195	Argument	wxString ( choices -> at ( k ) )
>196	CallExpression	wxString ( choices -> at ( k ) )
>197	ArgumentList	choices -> at ( k )
>198	Argument	choices -> at ( k )
>199	CallExpression	choices -> at ( k )
>200	ArgumentList	k
>201	Argument	k
>202	Identifier	k
>203	Callee	choices -> at
>204	PtrMemberAccess	choices -> at
>205	Identifier	at
>206	Identifier	choices
>207	Callee	wxString
>208	Identifier	wxString
>209	Callee	choiceArray . Add
>210	MemberAccess	choiceArray . Add
>211	Identifier	Add
>212	Identifier	choiceArray
>213	IncDecOp	 
>214	IncDec	++
>215	Identifier	k
>216	Condition	 
>217	RelationalExpression	k < choices -> size ( )
>218	CallExpression	choices -> size ( )
>219	ArgumentList	 
>220	Callee	choices -> size
>221	PtrMemberAccess	choices -> size
>222	Identifier	size
>223	Identifier	choices
>224	Identifier	k
>225	ForInit	 
>226	IdentifierDeclStatement	unsigned k = 0 ;
>227	IdentifierDecl	k = 0
>228	AssignmentExpr	k = 0
>229	PrimaryExpression	0
>230	Identifier	k
>231	Identifier	k
>232	IdentifierDeclType	unsigned
>233	IdentifierDeclStatement	 
>234	IdentifierDecl	choiceArray
>235	Identifier	choiceArray
>236	IdentifierDeclType	wxArrayString
>237	IdentifierDeclStatement	 
>238	IdentifierDecl	* choices = ( ( drwnSelectionProperty * ) _properties -> getProperty ( i ) ) -> getChoices ( )
>239	AssignmentExpr	* choices = ( ( drwnSelectionProperty * ) _properties -> getProperty ( i ) ) -> getChoices ( )
>240	CallExpression	( ( drwnSelectionProperty * ) _properties -> getProperty ( i ) ) -> getChoices ( )
>241	ArgumentList	 
>242	Callee	( ( drwnSelectionProperty * ) _properties -> getProperty ( i ) ) -> getChoices
>243	PtrMemberAccess	( ( drwnSelectionProperty * ) _properties -> getProperty ( i ) ) -> getChoices
>244	Identifier	getChoices
>245	CastExpression	( drwnSelectionProperty * ) _properties -> getProperty ( i )
>246	CallExpression	_properties -> getProperty ( i )
>247	ArgumentList	i
>248	Argument	i
>249	Identifier	i
>250	Callee	_properties -> getProperty
>251	PtrMemberAccess	_properties -> getProperty
>252	Identifier	getProperty
>253	Identifier	_properties
>254	CastTarget	drwnSelectionProperty *
>255	Identifier	choices
>256	Identifier	choices
>257	IdentifierDeclType	const vector < string > *
>258	Label	 
>259	Identifier	DRWN_SELECTION_PROPERTY
>260	BreakStatement	 
>261	Label	 
>262	Identifier	DRWN_BOOLEAN_PROPERTY
>263	Condition	 
>264	CallExpression	_properties -> getPropertyType ( i )
>265	ArgumentList	i
>266	Argument	i
>267	Identifier	i
>268	Callee	_properties -> getPropertyType
>269	PtrMemberAccess	_properties -> getPropertyType
>270	Identifier	getPropertyType
>271	Identifier	_properties
>272	IfStatement	if ( _properties -> isReadOnly ( i ) )
>273	CompoundStatement	 
>274	ExpressionStatement	 
>275	CallExpression	_grid -> SetCellTextColour ( i , 0 , * wxRED )
>276	ArgumentList	i
>277	Argument	* wxRED
>278	UnaryOp	* wxRED
>279	Identifier	wxRED
>280	UnaryOperator	*
>281	Argument	0
>282	PrimaryExpression	0
>283	Argument	i
>284	Identifier	i
>285	Callee	_grid -> SetCellTextColour
>286	PtrMemberAccess	_grid -> SetCellTextColour
>287	Identifier	SetCellTextColour
>288	Identifier	_grid
>289	ExpressionStatement	 
>290	CallExpression	_grid -> SetReadOnly ( i , 0 )
>291	ArgumentList	i
>292	Argument	0
>293	PrimaryExpression	0
>294	Argument	i
>295	Identifier	i
>296	Callee	_grid -> SetReadOnly
>297	PtrMemberAccess	_grid -> SetReadOnly
>298	Identifier	SetReadOnly
>299	Identifier	_grid
>300	Condition	 
>301	CallExpression	_properties -> isReadOnly ( i )
>302	ArgumentList	i
>303	Argument	i
>304	Identifier	i
>305	Callee	_properties -> isReadOnly
>306	PtrMemberAccess	_properties -> isReadOnly
>307	Identifier	isReadOnly
>308	Identifier	_properties
>309	ExpressionStatement	 
>310	CallExpression	_grid -> SetCellBackgroundColour ( i , 0 , * wxWHITE )
>311	ArgumentList	i
>312	Argument	* wxWHITE
>313	UnaryOp	* wxWHITE
>314	Identifier	wxWHITE
>315	UnaryOperator	*
>316	Argument	0
>317	PrimaryExpression	0
>318	Argument	i
>319	Identifier	i
>320	Callee	_grid -> SetCellBackgroundColour
>321	PtrMemberAccess	_grid -> SetCellBackgroundColour
>322	Identifier	SetCellBackgroundColour
>323	Identifier	_grid
>324	ExpressionStatement	 
>325	CallExpression	_grid -> SetCellValue ( i , 0 , _properties -> getPropertyAsString ( i ) . c_str ( ) )
>326	ArgumentList	i
>327	Argument	_properties -> getPropertyAsString ( i ) . c_str ( )
>328	CallExpression	_properties -> getPropertyAsString ( i ) . c_str ( )
>329	ArgumentList	 
>330	Callee	_properties -> getPropertyAsString ( i ) . c_str
>331	MemberAccess	_properties -> getPropertyAsString ( i ) . c_str
>332	Identifier	c_str
>333	CallExpression	_properties -> getPropertyAsString ( i )
>334	ArgumentList	i
>335	Argument	i
>336	Identifier	i
>337	Callee	_properties -> getPropertyAsString
>338	PtrMemberAccess	_properties -> getPropertyAsString
>339	Identifier	getPropertyAsString
>340	Identifier	_properties
>341	Argument	0
>342	PrimaryExpression	0
>343	Argument	i
>344	Identifier	i
>345	Callee	_grid -> SetCellValue
>346	PtrMemberAccess	_grid -> SetCellValue
>347	Identifier	SetCellValue
>348	Identifier	_grid
>349	ExpressionStatement	 
>350	CallExpression	_grid -> SetRowLabelValue ( i , _properties -> getPropertyName ( i ) . c_str ( ) )
>351	ArgumentList	i
>352	Argument	_properties -> getPropertyName ( i ) . c_str ( )
>353	CallExpression	_properties -> getPropertyName ( i ) . c_str ( )
>354	ArgumentList	 
>355	Callee	_properties -> getPropertyName ( i ) . c_str
>356	MemberAccess	_properties -> getPropertyName ( i ) . c_str
>357	Identifier	c_str
>358	CallExpression	_properties -> getPropertyName ( i )
>359	ArgumentList	i
>360	Argument	i
>361	Identifier	i
>362	Callee	_properties -> getPropertyName
>363	PtrMemberAccess	_properties -> getPropertyName
>364	Identifier	getPropertyName
>365	Identifier	_properties
>366	Argument	i
>367	Identifier	i
>368	Callee	_grid -> SetRowLabelValue
>369	PtrMemberAccess	_grid -> SetRowLabelValue
>370	Identifier	SetRowLabelValue
>371	Identifier	_grid
>372	IncDecOp	 
>373	IncDec	++
>374	Identifier	i
>375	Condition	 
>376	RelationalExpression	i < _properties -> numProperties ( )
>377	CallExpression	_properties -> numProperties ( )
>378	ArgumentList	 
>379	Callee	_properties -> numProperties
>380	PtrMemberAccess	_properties -> numProperties
>381	Identifier	numProperties
>382	Identifier	_properties
>383	Identifier	i
>384	ForInit	 
>385	IdentifierDeclStatement	unsigned i = 0 ;
>386	IdentifierDecl	i = 0
>387	AssignmentExpr	i = 0
>388	PrimaryExpression	0
>389	Identifier	i
>390	Identifier	i
>391	IdentifierDeclType	unsigned
>392	ExpressionStatement	 
>393	CallExpression	_grid -> SetColLabelValue ( 0 , \"Value\" )
>394	ArgumentList	0
>395	Argument	\"Value\"
>396	PrimaryExpression	\"Value\"
>397	Argument	0
>398	PrimaryExpression	0
>399	Callee	_grid -> SetColLabelValue
>400	PtrMemberAccess	_grid -> SetColLabelValue
>401	Identifier	SetColLabelValue
>402	Identifier	_grid
>403	ExpressionStatement	 
>404	CallExpression	_grid -> CreateGrid ( _properties -> numProperties ( ) , 1 )
>405	ArgumentList	_properties -> numProperties ( )
>406	Argument	1
>407	PrimaryExpression	1
>408	Argument	_properties -> numProperties ( )
>409	CallExpression	_properties -> numProperties ( )
>410	ArgumentList	 
>411	Callee	_properties -> numProperties
>412	PtrMemberAccess	_properties -> numProperties
>413	Identifier	numProperties
>414	Identifier	_properties
>415	Callee	_grid -> CreateGrid
>416	PtrMemberAccess	_grid -> CreateGrid
>417	Identifier	CreateGrid
>418	Identifier	_grid
>419	ExpressionStatement	 
>420	AssignmentExpr	_grid = new wxGrid ( this , wxID_ANY , wxDefaultPosition , wxDefaultSize , wxEXPAND | wxWANTS_CHARS )
>421	Expression	this , wxID_ANY , wxDefaultPosition , wxDefaultSize , wxEXPAND | wxWANTS_CHARS
>422	Expression	wxID_ANY , wxDefaultPosition , wxDefaultSize , wxEXPAND | wxWANTS_CHARS
>423	Expression	wxDefaultPosition , wxDefaultSize , wxEXPAND | wxWANTS_CHARS
>424	Expression	wxDefaultSize , wxEXPAND | wxWANTS_CHARS
>425	InclusiveOrExpression	wxEXPAND | wxWANTS_CHARS
>426	Identifier	wxWANTS_CHARS
>427	Identifier	wxEXPAND
>428	Identifier	wxDefaultSize
>429	Identifier	wxDefaultPosition
>430	Identifier	wxID_ANY
>431	Identifier	this
>432	Identifier	_grid
>433	ExpressionStatement	 
>434	CallExpression	mainSizer -> SetMinSize ( wxSize ( 120 , 160 ) )
>435	ArgumentList	wxSize ( 120 , 160 )
>436	Argument	wxSize ( 120 , 160 )
>437	CallExpression	wxSize ( 120 , 160 )
>438	ArgumentList	120
>439	Argument	160
>440	PrimaryExpression	160
>441	Argument	120
>442	PrimaryExpression	120
>443	Callee	wxSize
>444	Identifier	wxSize
>445	Callee	mainSizer -> SetMinSize
>446	PtrMemberAccess	mainSizer -> SetMinSize
>447	Identifier	SetMinSize
>448	Identifier	mainSizer
>449	IdentifierDeclStatement	 
>450	IdentifierDecl	* mainSizer = new wxBoxSizer ( wxVERTICAL )
>451	AssignmentExpr	* mainSizer = new wxBoxSizer ( wxVERTICAL )
>452	Identifier	wxVERTICAL
>453	Identifier	wxVERTICAL
>454	Identifier	mainSizer
>455	IdentifierDeclType	wxBoxSizer *
>505	FunctionDef	drwnOptionsEditor 
>506	ParameterList	 
>507	CompoundStatement	 
>511	FunctionDef	drwnOptionsEditor 
>512	ParameterList	wxSizeEvent & event
>513	Parameter	 
>514	Identifier	event
>515	ParameterType	wxSizeEvent &
>516	ReturnType	void
>517	CompoundStatement	 
>518	ExpressionStatement	 
>519	CallExpression	event . Skip ( )
>520	ArgumentList	 
>521	Callee	event . Skip
>522	MemberAccess	event . Skip
>523	Identifier	Skip
>524	Identifier	event
>525	ExpressionStatement	 
>526	CallExpression	GetClientSize ( & width , & height )
>527	ArgumentList	& width
>528	Argument	& height
>529	UnaryOp	& height
>530	Identifier	height
>531	UnaryOperator	&
>532	Argument	& width
>533	UnaryOp	& width
>534	Identifier	width
>535	UnaryOperator	&
>536	Callee	GetClientSize
>537	Identifier	GetClientSize
>538	IdentifierDeclStatement	 
>539	IdentifierDecl	height
>540	Identifier	height
>541	IdentifierDeclType	int
>542	IdentifierDecl	width
>543	Identifier	width
>544	IdentifierDeclType	int
>553	FunctionDef	drwnOptionsEditor 
>554	ParameterList	wxCommandEvent & event
>555	Parameter	 
>556	Identifier	event
>557	ParameterType	wxCommandEvent &
>558	ReturnType	void
>559	CompoundStatement	 
>560	ExpressionStatement	 
>561	CallExpression	event . Skip ( )
>562	ArgumentList	 
>563	Callee	event . Skip
>564	MemberAccess	event . Skip
>565	Identifier	Skip
>566	Identifier	event
>567	ForStatement	for ( unsigned i = 0 ; i < _properties -> numProperties ( ) ; i ++ )
>568	CompoundStatement	 
>569	SwitchStatement	switch ( _properties -> getPropertyType ( i ) )
>570	CompoundStatement	 
>571	BreakStatement	 
>572	Label	 
>573	Identifier	default
>574	BreakStatement	 
>575	ExpressionStatement	 
>576	CallExpression	_properties -> setProperty ( i , string ( _grid -> GetCellValue ( i , 0 ) ) )
>577	ArgumentList	i
>578	Argument	string ( _grid -> GetCellValue ( i , 0 ) )
>579	CallExpression	string ( _grid -> GetCellValue ( i , 0 ) )
>580	ArgumentList	_grid -> GetCellValue ( i , 0 )
>581	Argument	_grid -> GetCellValue ( i , 0 )
>582	CallExpression	_grid -> GetCellValue ( i , 0 )
>583	ArgumentList	i
>584	Argument	0
>585	PrimaryExpression	0
>586	Argument	i
>587	Identifier	i
>588	Callee	_grid -> GetCellValue
>589	PtrMemberAccess	_grid -> GetCellValue
>590	Identifier	GetCellValue
>591	Identifier	_grid
>592	Callee	string
>593	Identifier	string
>594	Argument	i
>595	Identifier	i
>596	Callee	_properties -> setProperty
>597	PtrMemberAccess	_properties -> setProperty
>598	Identifier	setProperty
>599	Identifier	_properties
>600	Label	 
>601	Identifier	DRWN_SELECTION_PROPERTY
>602	Label	 
>603	Identifier	DRWN_DIRECTORY_PROPERTY
>604	Label	 
>605	Identifier	DRWN_FILENAME_PROPERTY
>606	Label	 
>607	Identifier	DRWN_STRING_PROPERTY
>608	Label	 
>609	Identifier	DRWN_DOUBLE_PROPERTY
>610	Label	 
>611	Identifier	DRWN_INTEGER_PROPERTY
>612	Label	 
>613	Identifier	DRWN_BOOLEAN_PROPERTY
>614	Condition	 
>615	CallExpression	_properties -> getPropertyType ( i )
>616	ArgumentList	i
>617	Argument	i
>618	Identifier	i
>619	Callee	_properties -> getPropertyType
>620	PtrMemberAccess	_properties -> getPropertyType
>621	Identifier	getPropertyType
>622	Identifier	_properties
>623	IfStatement	if ( _properties -> isReadOnly ( i ) )
>624	ContinueStatement	 
>625	Condition	 
>626	CallExpression	_properties -> isReadOnly ( i )
>627	ArgumentList	i
>628	Argument	i
>629	Identifier	i
>630	Callee	_properties -> isReadOnly
>631	PtrMemberAccess	_properties -> isReadOnly
>632	Identifier	isReadOnly
>633	Identifier	_properties
>634	IncDecOp	 
>635	IncDec	++
>636	Identifier	i
>637	Condition	 
>638	RelationalExpression	i < _properties -> numProperties ( )
>639	CallExpression	_properties -> numProperties ( )
>640	ArgumentList	 
>641	Callee	_properties -> numProperties
>642	PtrMemberAccess	_properties -> numProperties
>643	Identifier	numProperties
>644	Identifier	_properties
>645	Identifier	i
>646	ForInit	 
>647	IdentifierDeclStatement	unsigned i = 0 ;
>648	IdentifierDecl	i = 0
>649	AssignmentExpr	i = 0
>650	PrimaryExpression	0
>651	Identifier	i
>652	Identifier	i
>653	IdentifierDeclType	unsigned
>654	ExpressionStatement	 
>655	CallExpression	_copy . copyBack ( _properties )
>656	ArgumentList	_properties
>657	Argument	_properties
>658	Identifier	_properties
>659	Callee	_copy . copyBack
>660	MemberAccess	_copy . copyBack
>661	Identifier	copyBack
>662	Identifier	_copy
>663	ExpressionStatement	 
>664	CallExpression	DRWN_ASSERT ( _properties != NULL )
>665	ArgumentList	_properties != NULL
>666	Argument	_properties != NULL
>667	EqualityExpression	_properties != NULL
>668	Identifier	NULL
>669	Identifier	_properties
>670	Callee	DRWN_ASSERT
>671	Identifier	DRWN_ASSERT
>688	FunctionDef	drwnOptionsEditor 
>689	ParameterList	wxGridEvent & event
>690	Parameter	 
>691	Identifier	event
>692	ParameterType	wxGridEvent &
>693	ReturnType	void
>694	CompoundStatement	 
>695	ExpressionStatement	 
>696	CallExpression	event . Skip ( )
>697	ArgumentList	 
>698	Callee	event . Skip
>699	MemberAccess	event . Skip
>700	Identifier	Skip
>701	Identifier	event
>702	IfStatement	if ( _copy . getPropertyType ( indx ) == DRWN_MATRIX_PROPERTY )
>703	ElseStatement	else
>704	IfStatement	if ( _copy . getPropertyType ( indx ) == DRWN_VECTOR_PROPERTY )
>705	ElseStatement	else
>706	IfStatement	if ( _copy . getPropertyType ( indx ) == DRWN_FILENAME_PROPERTY )
>707	ElseStatement	else
>708	IfStatement	if ( _copy . getPropertyType ( indx ) == DRWN_DIRECTORY_PROPERTY )
>709	CompoundStatement	 
>710	IfStatement	if ( dlg . ShowModal ( ) == wxID_OK )
>711	CompoundStatement	 
>712	ExpressionStatement	 
>713	CallExpression	_grid -> SetCellValue ( indx , 0 , dlg . GetPath ( ) )
>714	ArgumentList	indx
>715	Argument	dlg . GetPath ( )
>716	CallExpression	dlg . GetPath ( )
>717	ArgumentList	 
>718	Callee	dlg . GetPath
>719	MemberAccess	dlg . GetPath
>720	Identifier	GetPath
>721	Identifier	dlg
>722	Argument	0
>723	PrimaryExpression	0
>724	Argument	indx
>725	Identifier	indx
>726	Callee	_grid -> SetCellValue
>727	PtrMemberAccess	_grid -> SetCellValue
>728	Identifier	SetCellValue
>729	Identifier	_grid
>730	Condition	 
>731	EqualityExpression	dlg . ShowModal ( ) == wxID_OK
>732	Identifier	wxID_OK
>733	CallExpression	dlg . ShowModal ( )
>734	ArgumentList	 
>735	Callee	dlg . ShowModal
>736	MemberAccess	dlg . ShowModal
>737	Identifier	ShowModal
>738	Identifier	dlg
>739	IdentifierDeclStatement	 
>740	IdentifierDecl	dlg ( this , string ( \"Choose a directory for \" ) + _copy . getPropertyName ( indx ) , _grid -> GetCellValue ( indx , \
>741	Expression	this , string ( \"Choose a directory for \" ) + _copy . getPropertyName ( indx ) , _grid -> GetCellValue ( indx , \
>742	Expression	string ( \"Choose a directory for \" ) + _copy . getPropertyName ( indx ) , _grid -> GetCellValue ( indx , 0 ) , wxDD_\
>743	Expression	_grid -> GetCellValue ( indx , 0 ) , wxDD_DEFAULT_STYLE | wxDD_DIR_MUST_EXIST
>744	InclusiveOrExpression	wxDD_DEFAULT_STYLE | wxDD_DIR_MUST_EXIST
>745	Identifier	wxDD_DIR_MUST_EXIST
>746	Identifier	wxDD_DEFAULT_STYLE
>747	CallExpression	_grid -> GetCellValue ( indx , 0 )
>748	ArgumentList	indx
>749	Argument	0
>750	PrimaryExpression	0
>751	Argument	indx
>752	Identifier	indx
>753	Callee	_grid -> GetCellValue
>754	PtrMemberAccess	_grid -> GetCellValue
>755	Identifier	GetCellValue
>756	Identifier	_grid
>757	AdditiveExpression	string ( \"Choose a directory for \" ) + _copy . getPropertyName ( indx )
>758	CallExpression	_copy . getPropertyName ( indx )
>759	ArgumentList	indx
>760	Argument	indx
>761	Identifier	indx
>762	Callee	_copy . getPropertyName
>763	MemberAccess	_copy . getPropertyName
>764	Identifier	getPropertyName
>765	Identifier	_copy
>766	CallExpression	string ( \"Choose a directory for \" )
>767	ArgumentList	\"Choose a directory for \"
>768	Argument	\"Choose a directory for \"
>769	PrimaryExpression	\"Choose a directory for \"
>770	Callee	string
>771	Identifier	string
>772	Identifier	this
>773	Identifier	dlg
>774	IdentifierDeclType	wxDirDialog
>775	Condition	 
>776	EqualityExpression	_copy . getPropertyType ( indx ) == DRWN_DIRECTORY_PROPERTY
>777	Identifier	DRWN_DIRECTORY_PROPERTY
>778	CallExpression	_copy . getPropertyType ( indx )
>779	ArgumentList	indx
>780	Argument	indx
>781	Identifier	indx
>782	Callee	_copy . getPropertyType
>783	MemberAccess	_copy . getPropertyType
>784	Identifier	getPropertyType
>785	Identifier	_copy
>786	CompoundStatement	 
>787	IfStatement	if ( dlg . ShowModal ( ) == wxID_OK )
>788	CompoundStatement	 
>789	ExpressionStatement	 
>790	CallExpression	_grid -> SetCellValue ( indx , 0 , dlg . GetPath ( ) )
>791	ArgumentList	indx
>792	Argument	dlg . GetPath ( )
>793	CallExpression	dlg . GetPath ( )
>794	ArgumentList	 
>795	Callee	dlg . GetPath
>796	MemberAccess	dlg . GetPath
>797	Identifier	GetPath
>798	Identifier	dlg
>799	Argument	0
>800	PrimaryExpression	0
>801	Argument	indx
>802	Identifier	indx
>803	Callee	_grid -> SetCellValue
>804	PtrMemberAccess	_grid -> SetCellValue
>805	Identifier	SetCellValue
>806	Identifier	_grid
>807	Condition	 
>808	EqualityExpression	dlg . ShowModal ( ) == wxID_OK
>809	Identifier	wxID_OK
>810	CallExpression	dlg . ShowModal ( )
>811	ArgumentList	 
>812	Callee	dlg . ShowModal
>813	MemberAccess	dlg . ShowModal
>814	Identifier	ShowModal
>815	Identifier	dlg
>816	IdentifierDeclStatement	 
>817	IdentifierDecl	dlg ( this , string ( \"Choose a file for \" ) + _copy . getPropertyName ( indx ) , \"\" , _grid -> GetCellValue ( indx , \
>818	Expression	this , string ( \"Choose a file for \" ) + _copy . getPropertyName ( indx ) , \"\" , _grid -> GetCellValue ( indx , \
>819	Expression	string ( \"Choose a file for \" ) + _copy . getPropertyName ( indx ) , \"\" , _grid -> GetCellValue ( indx , 0 ) , \"*\
>820	Expression	\"\" , _grid -> GetCellValue ( indx , 0 ) , \"*.*\" , wxFD_OPEN
>821	Expression	_grid -> GetCellValue ( indx , 0 ) , \"*.*\" , wxFD_OPEN
>822	Expression	\"*.*\" , wxFD_OPEN
>823	Identifier	wxFD_OPEN
>824	PrimaryExpression	\"*.*\"
>825	CallExpression	_grid -> GetCellValue ( indx , 0 )
>826	ArgumentList	indx
>827	Argument	0
>828	PrimaryExpression	0
>829	Argument	indx
>830	Identifier	indx
>831	Callee	_grid -> GetCellValue
>832	PtrMemberAccess	_grid -> GetCellValue
>833	Identifier	GetCellValue
>834	Identifier	_grid
>835	PrimaryExpression	\"\"
>836	AdditiveExpression	string ( \"Choose a file for \" ) + _copy . getPropertyName ( indx )
>837	CallExpression	_copy . getPropertyName ( indx )
>838	ArgumentList	indx
>839	Argument	indx
>840	Identifier	indx
>841	Callee	_copy . getPropertyName
>842	MemberAccess	_copy . getPropertyName
>843	Identifier	getPropertyName
>844	Identifier	_copy
>845	CallExpression	string ( \"Choose a file for \" )
>846	ArgumentList	\"Choose a file for \"
>847	Argument	\"Choose a file for \"
>848	PrimaryExpression	\"Choose a file for \"
>849	Callee	string
>850	Identifier	string
>851	Identifier	this
>852	Identifier	dlg
>853	IdentifierDeclType	wxFileDialog
>854	Condition	 
>855	EqualityExpression	_copy . getPropertyType ( indx ) == DRWN_FILENAME_PROPERTY
>856	Identifier	DRWN_FILENAME_PROPERTY
>857	CallExpression	_copy . getPropertyType ( indx )
>858	ArgumentList	indx
>859	Argument	indx
>860	Identifier	indx
>861	Callee	_copy . getPropertyType
>862	MemberAccess	_copy . getPropertyType
>863	Identifier	getPropertyType
>864	Identifier	_copy
>865	CompoundStatement	 
>866	IfStatement	if ( ( dlg . ShowModal ( ) == wxID_OK ) && ! bReadOnly )
>867	CompoundStatement	 
>868	ExpressionStatement	 
>869	CallExpression	_grid -> SetCellValue ( indx , 0 , _copy . getPropertyAsString ( indx ) )
>870	ArgumentList	indx
>871	Argument	_copy . getPropertyAsString ( indx )
>872	CallExpression	_copy . getPropertyAsString ( indx )
>873	ArgumentList	indx
>874	Argument	indx
>875	Identifier	indx
>876	Callee	_copy . getPropertyAsString
>877	MemberAccess	_copy . getPropertyAsString
>878	Identifier	getPropertyAsString
>879	Identifier	_copy
>880	Argument	0
>881	PrimaryExpression	0
>882	Argument	indx
>883	Identifier	indx
>884	Callee	_grid -> SetCellValue
>885	PtrMemberAccess	_grid -> SetCellValue
>886	Identifier	SetCellValue
>887	Identifier	_grid
>888	ExpressionStatement	 
>889	CallExpression	_copy . setProperty ( indx , v )
>890	ArgumentList	indx
>891	Argument	v
>892	Identifier	v
>893	Argument	indx
>894	Identifier	indx
>895	Callee	_copy . setProperty
>896	MemberAccess	_copy . setProperty
>897	Identifier	setProperty
>898	Identifier	_copy
>899	IdentifierDeclStatement	 
>900	IdentifierDecl	v = dlg . getCol ( )
>901	AssignmentExpr	v = dlg . getCol ( )
>902	CallExpression	dlg . getCol ( )
>903	ArgumentList	 
>904	Callee	dlg . getCol
>905	MemberAccess	dlg . getCol
>906	Identifier	getCol
>907	Identifier	dlg
>908	Identifier	v
>909	Identifier	v
>910	IdentifierDeclType	Eigen 
>911	Condition	 
>912	AndExpression	( dlg . ShowModal ( ) == wxID_OK ) && ! bReadOnly
>913	UnaryOp	! bReadOnly
>914	Identifier	bReadOnly
>915	UnaryOperator	!
>916	EqualityExpression	dlg . ShowModal ( ) == wxID_OK
>917	Identifier	wxID_OK
>918	CallExpression	dlg . ShowModal ( )
>919	ArgumentList	 
>920	Callee	dlg . ShowModal
>921	MemberAccess	dlg . ShowModal
>922	Identifier	ShowModal
>923	Identifier	dlg
>924	IdentifierDeclStatement	 
>925	IdentifierDecl	dlg ( this , & _copy . getVectorProperty ( indx ) , bReadOnly )
>926	Expression	this , & _copy . getVectorProperty ( indx ) , bReadOnly
>927	Expression	& _copy . getVectorProperty ( indx ) , bReadOnly
>928	Identifier	bReadOnly
>929	UnaryOp	& _copy . getVectorProperty ( indx )
>930	CallExpression	_copy . getVectorProperty ( indx )
>931	ArgumentList	indx
>932	Argument	indx
>933	Identifier	indx
>934	Callee	_copy . getVectorProperty
>935	MemberAccess	_copy . getVectorProperty
>936	Identifier	getVectorProperty
>937	Identifier	_copy
>938	UnaryOperator	&
>939	Identifier	this
>940	Identifier	dlg
>941	IdentifierDeclType	drwnMatrixEditor
>942	Condition	 
>943	EqualityExpression	_copy . getPropertyType ( indx ) == DRWN_VECTOR_PROPERTY
>944	Identifier	DRWN_VECTOR_PROPERTY
>945	CallExpression	_copy . getPropertyType ( indx )
>946	ArgumentList	indx
>947	Argument	indx
>948	Identifier	indx
>949	Callee	_copy . getPropertyType
>950	MemberAccess	_copy . getPropertyType
>951	Identifier	getPropertyType
>952	Identifier	_copy
>953	CompoundStatement	 
>954	IfStatement	if ( ( dlg . ShowModal ( ) == wxID_OK ) && ! bReadOnly )
>955	CompoundStatement	 
>956	ExpressionStatement	 
>957	CallExpression	_grid -> SetCellValue ( indx , 0 , _copy . getPropertyAsString ( indx ) )
>958	ArgumentList	indx
>959	Argument	_copy . getPropertyAsString ( indx )
>960	CallExpression	_copy . getPropertyAsString ( indx )
>961	ArgumentList	indx
>962	Argument	indx
>963	Identifier	indx
>964	Callee	_copy . getPropertyAsString
>965	MemberAccess	_copy . getPropertyAsString
>966	Identifier	getPropertyAsString
>967	Identifier	_copy
>968	Argument	0
>969	PrimaryExpression	0
>970	Argument	indx
>971	Identifier	indx
>972	Callee	_grid -> SetCellValue
>973	PtrMemberAccess	_grid -> SetCellValue
>974	Identifier	SetCellValue
>975	Identifier	_grid
>976	ExpressionStatement	 
>977	CallExpression	_copy . setProperty ( indx , m )
>978	ArgumentList	indx
>979	Argument	m
>980	Identifier	m
>981	Argument	indx
>982	Identifier	indx
>983	Callee	_copy . setProperty
>984	MemberAccess	_copy . setProperty
>985	Identifier	setProperty
>986	Identifier	_copy
>987	IdentifierDeclStatement	 
>988	IdentifierDecl	m = dlg . getMatrix ( )
>989	AssignmentExpr	m = dlg . getMatrix ( )
>990	CallExpression	dlg . getMatrix ( )
>991	ArgumentList	 
>992	Callee	dlg . getMatrix
>993	MemberAccess	dlg . getMatrix
>994	Identifier	getMatrix
>995	Identifier	dlg
>996	Identifier	m
>997	Identifier	m
>998	IdentifierDeclType	Eigen 
>999	Condition	 
>1000	AndExpression	( dlg . ShowModal ( ) == wxID_OK ) && ! bReadOnly
>1001	UnaryOp	! bReadOnly
>1002	Identifier	bReadOnly
>1003	UnaryOperator	!
>1004	EqualityExpression	dlg . ShowModal ( ) == wxID_OK
>1005	Identifier	wxID_OK
>1006	CallExpression	dlg . ShowModal ( )
>1007	ArgumentList	 
>1008	Callee	dlg . ShowModal
>1009	MemberAccess	dlg . ShowModal
>1010	Identifier	ShowModal
>1011	Identifier	dlg
>1012	IdentifierDeclStatement	 
>1013	IdentifierDecl	dlg ( this , & _copy . getMatrixProperty ( indx ) , bReadOnly )
>1014	Expression	this , & _copy . getMatrixProperty ( indx ) , bReadOnly
>1015	Expression	& _copy . getMatrixProperty ( indx ) , bReadOnly
>1016	Identifier	bReadOnly
>1017	UnaryOp	& _copy . getMatrixProperty ( indx )
>1018	CallExpression	_copy . getMatrixProperty ( indx )
>1019	ArgumentList	indx
>1020	Argument	indx
>1021	Identifier	indx
>1022	Callee	_copy . getMatrixProperty
>1023	MemberAccess	_copy . getMatrixProperty
>1024	Identifier	getMatrixProperty
>1025	Identifier	_copy
>1026	UnaryOperator	&
>1027	Identifier	this
>1028	Identifier	dlg
>1029	IdentifierDeclType	drwnMatrixEditor
>1030	Condition	 
>1031	EqualityExpression	_copy . getPropertyType ( indx ) == DRWN_MATRIX_PROPERTY
>1032	Identifier	DRWN_MATRIX_PROPERTY
>1033	CallExpression	_copy . getPropertyType ( indx )
>1034	ArgumentList	indx
>1035	Argument	indx
>1036	Identifier	indx
>1037	Callee	_copy . getPropertyType
>1038	MemberAccess	_copy . getPropertyType
>1039	Identifier	getPropertyType
>1040	Identifier	_copy
>1041	IdentifierDeclStatement	 
>1042	IdentifierDecl	bReadOnly = _copy . isReadOnly ( indx )
>1043	AssignmentExpr	bReadOnly = _copy . isReadOnly ( indx )
>1044	CallExpression	_copy . isReadOnly ( indx )
>1045	ArgumentList	indx
>1046	Argument	indx
>1047	Identifier	indx
>1048	Callee	_copy . isReadOnly
>1049	MemberAccess	_copy . isReadOnly
>1050	Identifier	isReadOnly
>1051	Identifier	_copy
>1052	Identifier	bReadOnly
>1053	Identifier	bReadOnly
>1054	IdentifierDeclType	bool
>1055	ExpressionStatement	 
>1056	CallExpression	DRWN_ASSERT ( indx < _copy . numProperties ( ) )
>1057	ArgumentList	indx < _copy . numProperties ( )
>1058	Argument	indx < _copy . numProperties ( )
>1059	RelationalExpression	indx < _copy . numProperties ( )
>1060	CallExpression	_copy . numProperties ( )
>1061	ArgumentList	 
>1062	Callee	_copy . numProperties
>1063	MemberAccess	_copy . numProperties
>1064	Identifier	numProperties
>1065	Identifier	_copy
>1066	Identifier	indx
>1067	Callee	DRWN_ASSERT
>1068	Identifier	DRWN_ASSERT
>1069	IdentifierDeclStatement	 
>1070	IdentifierDecl	indx = ( unsigned ) event . GetRow ( )
>1071	AssignmentExpr	indx = ( unsigned ) event . GetRow ( )
>1072	CastExpression	( unsigned ) event . GetRow ( )
>1073	CallExpression	event . GetRow ( )
>1074	ArgumentList	 
>1075	Callee	event . GetRow
>1076	MemberAccess	event . GetRow
>1077	Identifier	GetRow
>1078	Identifier	event
>1079	CastTarget	unsigned
>1080	Identifier	indx
>1081	Identifier	indx
>1082	IdentifierDeclType	unsigned
<3=11,4
<4=8,5
<5=7,6
<8=10,9
<11=449,433,419,403,392,140,133,116,109,75,41,28,21,12
<12=13
<13=17,14
<14=15
<15=16
<17=18
<18=20,19
<21=22
<22=26,23
<23=24
<24=25
<26=27
<28=29
<29=37,30
<30=35,33,31
<31=32
<33=34
<35=36
<37=38
<38=40,39
<41=42
<42=71,43
<43=65,44
<44=45
<45=51,46
<46=49,47
<47=48
<49=50
<51=52
<52=54,53
<54=56,55
<56=57
<57=59,58
<59=63,60
<60=61
<61=62
<63=64
<65=66
<66=70,67
<67=69,68
<71=72
<72=74,73
<75=76
<76=105,77
<77=99,78
<78=79
<79=85,80
<80=83,81
<81=82
<83=84
<85=86
<86=88,87
<88=90,89
<90=91
<91=93,92
<93=97,94
<94=95
<95=96
<97=98
<99=100
<100=104,101
<101=103,102
<105=106
<106=108,107
<109=110
<110=115,114,111
<111=113,112
<116=117
<117=129,118
<118=127,125,121,119
<119=120
<121=122
<122=124,123
<125=126
<127=128
<129=130
<130=132,131
<133=134
<134=136,135
<136=137
<137=139,138
<140=384,375,372,141
<141=349,324,309,272,142
<142=263,143
<143=261,260,258,176,175,173,162,161,159,148,147,145,144
<145=146
<148=149
<149=155,150
<150=153,151
<151=152
<153=154
<155=156
<156=158,157
<159=160
<162=163
<163=169,164
<164=167,165
<165=166
<167=168
<169=170
<170=172,171
<173=174
<176=237,233,190,177
<177=178
<178=186,179
<179=184,182,180
<180=181
<182=183
<184=185
<186=187
<187=189,188
<190=225,216,213,191
<191=192
<192=193
<193=209,194
<194=195
<195=196
<196=207,197
<197=198
<198=199
<199=203,200
<200=201
<201=202
<203=204
<204=206,205
<207=208
<209=210
<210=212,211
<213=215,214
<216=217
<217=224,218
<218=220,219
<220=221
<221=223,222
<225=226
<226=227
<227=232,231,228
<228=230,229
<233=234
<234=236,235
<237=238
<238=257,256,239
<239=255,240
<240=242,241
<242=243
<243=245,244
<245=254,246
<246=250,247
<247=248
<248=249
<250=251
<251=253,252
<258=259
<261=262
<263=264
<264=268,265
<265=266
<266=267
<268=269
<269=271,270
<272=300,273
<273=289,274
<274=275
<275=285,276
<276=283,281,277
<277=278
<278=280,279
<281=282
<283=284
<285=286
<286=288,287
<289=290
<290=296,291
<291=294,292
<292=293
<294=295
<296=297
<297=299,298
<300=301
<301=305,302
<302=303
<303=304
<305=306
<306=308,307
<309=310
<310=320,311
<311=318,316,312
<312=313
<313=315,314
<316=317
<318=319
<320=321
<321=323,322
<324=325
<325=345,326
<326=343,341,327
<327=328
<328=330,329
<330=331
<331=333,332
<333=337,334
<334=335
<335=336
<337=338
<338=340,339
<341=342
<343=344
<345=346
<346=348,347
<349=350
<350=368,351
<351=366,352
<352=353
<353=355,354
<355=356
<356=358,357
<358=362,359
<359=360
<360=361
<362=363
<363=365,364
<366=367
<368=369
<369=371,370
<372=374,373
<375=376
<376=383,377
<377=379,378
<379=380
<380=382,381
<384=385
<385=386
<386=391,390,387
<387=389,388
<392=393
<393=399,394
<394=397,395
<395=396
<397=398
<399=400
<400=402,401
<403=404
<404=415,405
<405=408,406
<406=407
<408=409
<409=411,410
<411=412
<412=414,413
<415=416
<416=418,417
<419=420
<420=432,421
<421=431,422
<422=430,423
<423=429,424
<424=428,425
<425=427,426
<433=434
<434=445,435
<435=436
<436=437
<437=443,438
<438=441,439
<439=440
<441=442
<443=444
<445=446
<446=448,447
<449=450
<450=455,454,451
<451=453,452
<505=507,506
<511=517,516,512
<512=513
<513=515,514
<517=538,525,518
<518=519
<519=521,520
<521=522
<522=524,523
<525=526
<526=536,527
<527=532,528
<528=529
<529=531,530
<532=533
<533=535,534
<536=537
<538=542,539
<539=541,540
<542=544,543
<553=559,558,554
<554=555
<555=557,556
<559=663,654,567,560
<560=561
<561=563,562
<563=564
<564=566,565
<567=646,637,634,568
<568=623,569
<569=614,570
<570=612,610,608,606,604,602,600,575,574,572,571
<572=573
<575=576
<576=596,577
<577=594,578
<578=579
<579=592,580
<580=581
<581=582
<582=588,583
<583=586,584
<584=585
<586=587
<588=589
<589=591,590
<592=593
<594=595
<596=597
<597=599,598
<600=601
<602=603
<604=605
<606=607
<608=609
<610=611
<612=613
<614=615
<615=619,616
<616=617
<617=618
<619=620
<620=622,621
<623=625,624
<625=626
<626=630,627
<627=628
<628=629
<630=631
<631=633,632
<634=636,635
<637=638
<638=645,639
<639=641,640
<641=642
<642=644,643
<646=647
<647=648
<648=653,652,649
<649=651,650
<654=655
<655=659,656
<656=657
<657=658
<659=660
<660=662,661
<663=664
<664=670,665
<665=666
<666=667
<667=669,668
<670=671
<688=694,693,689
<689=690
<690=692,691
<694=1069,1055,1041,702,695
<695=696
<696=698,697
<698=699
<699=701,700
<702=1030,953,703
<703=704
<704=942,865,705
<705=706
<706=854,786,707
<707=708
<708=775,709
<709=739,710
<710=730,711
<711=712
<712=713
<713=726,714
<714=724,722,715
<715=716
<716=718,717
<718=719
<719=721,720
<722=723
<724=725
<726=727
<727=729,728
<730=731
<731=733,732
<733=735,734
<735=736
<736=738,737
<739=740
<740=774,773,741
<741=772,742
<742=757,743
<743=747,744
<744=746,745
<747=753,748
<748=751,749
<749=750
<751=752
<753=754
<754=756,755
<757=766,758
<758=762,759
<759=760
<760=761
<762=763
<763=765,764
<766=770,767
<767=768
<768=769
<770=771
<775=776
<776=778,777
<778=782,779
<779=780
<780=781
<782=783
<783=785,784
<786=816,787
<787=807,788
<788=789
<789=790
<790=803,791
<791=801,799,792
<792=793
<793=795,794
<795=796
<796=798,797
<799=800
<801=802
<803=804
<804=806,805
<807=808
<808=810,809
<810=812,811
<812=813
<813=815,814
<816=817
<817=853,852,818
<818=851,819
<819=836,820
<820=835,821
<821=825,822
<822=824,823
<825=831,826
<826=829,827
<827=828
<829=830
<831=832
<832=834,833
<836=845,837
<837=841,838
<838=839
<839=840
<841=842
<842=844,843
<845=849,846
<846=847
<847=848
<849=850
<854=855
<855=857,856
<857=861,858
<858=859
<859=860
<861=862
<862=864,863
<865=924,866
<866=911,867
<867=899,888,868
<868=869
<869=884,870
<870=882,880,871
<871=872
<872=876,873
<873=874
<874=875
<876=877
<877=879,878
<880=881
<882=883
<884=885
<885=887,886
<888=889
<889=895,890
<890=893,891
<891=892
<893=894
<895=896
<896=898,897
<899=900
<900=910,909,901
<901=908,902
<902=904,903
<904=905
<905=907,906
<911=912
<912=916,913
<913=915,914
<916=918,917
<918=920,919
<920=921
<921=923,922
<924=925
<925=941,940,926
<926=939,927
<927=929,928
<929=938,930
<930=934,931
<931=932
<932=933
<934=935
<935=937,936
<942=943
<943=945,944
<945=949,946
<946=947
<947=948
<949=950
<950=952,951
<953=1012,954
<954=999,955
<955=987,976,956
<956=957
<957=972,958
<958=970,968,959
<959=960
<960=964,961
<961=962
<962=963
<964=965
<965=967,966
<968=969
<970=971
<972=973
<973=975,974
<976=977
<977=983,978
<978=981,979
<979=980
<981=982
<983=984
<984=986,985
<987=988
<988=998,997,989
<989=996,990
<990=992,991
<992=993
<993=995,994
<999=1000
<1000=1004,1001
<1001=1003,1002
<1004=1006,1005
<1006=1008,1007
<1008=1009
<1009=1011,1010
<1012=1013
<1013=1029,1028,1014
<1014=1027,1015
<1015=1017,1016
<1017=1026,1018
<1018=1022,1019
<1019=1020
<1020=1021
<1022=1023
<1023=1025,1024
<1030=1031
<1031=1033,1032
<1033=1037,1034
<1034=1035
<1035=1036
<1037=1038
<1038=1040,1039
<1041=1042
<1042=1054,1053,1043
<1043=1052,1044
<1044=1048,1045
<1045=1046
<1046=1047
<1048=1049
<1049=1051,1050
<1055=1056
<1056=1067,1057
<1057=1058
<1058=1059
<1059=1066,1060
<1060=1062,1061
<1062=1063
<1063=1065,1064
<1067=1068
<1069=1070
<1070=1082,1081,1071
<1071=1080,1072
<1072=1079,1073
<1073=1075,1074
<1075=1076
<1076=1078,1077
