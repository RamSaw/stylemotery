>5	FunctionDef	PBoat 
>6	ParameterList	vec2 pos , float scale
>7	Parameter	 
>8	Identifier	scale
>9	ParameterType	float
>10	Parameter	 
>11	Identifier	pos
>12	ParameterType	vec2
>13	CompoundStatement	 
>14	ExpressionStatement	 
>15	AssignmentExpr	m_model = & g_resources . mesh_pboat
>16	UnaryOp	& g_resources . mesh_pboat
>17	MemberAccess	g_resources . mesh_pboat
>18	Identifier	mesh_pboat
>19	Identifier	g_resources
>20	UnaryOperator	&
>21	Identifier	m_model
>31	FunctionDef	PBoat 
>32	ParameterList	 
>33	ReturnType	void
>34	CompoundStatement	 
>35	ExpressionStatement	 
>36	CallExpression	glPopMatrix ( )
>37	ArgumentList	 
>38	Callee	glPopMatrix
>39	Identifier	glPopMatrix
>40	ForStatement	for ( int i = 0 ; i < 10 ; ++ i )
>41	CompoundStatement	 
>42	ExpressionStatement	 
>43	CallExpression	glTranslatef ( 0.0 , - 0.3 , 0.0 )
>44	ArgumentList	0.0
>45	Argument	0.0
>46	PrimaryExpression	0.0
>47	Argument	- 0.3
>48	UnaryOp	- 0.3
>49	PrimaryExpression	0.3
>50	UnaryOperator	-
>51	Argument	0.0
>52	PrimaryExpression	0.0
>53	Callee	glTranslatef
>54	Identifier	glTranslatef
>55	ExpressionStatement	 
>56	CallExpression	missile_model -> draw ( )
>57	ArgumentList	 
>58	Callee	missile_model -> draw
>59	PtrMemberAccess	missile_model -> draw
>60	Identifier	draw
>61	Identifier	missile_model
>62	IfStatement	if ( i == m_missiles )
>63	ExpressionStatement	 
>64	CallExpression	glColor4f ( 1.0 , 1.0 , 1.0 , 0.25 )
>65	ArgumentList	1.0
>66	Argument	0.25
>67	PrimaryExpression	0.25
>68	Argument	1.0
>69	PrimaryExpression	1.0
>70	Argument	1.0
>71	PrimaryExpression	1.0
>72	Argument	1.0
>73	PrimaryExpression	1.0
>74	Callee	glColor4f
>75	Identifier	glColor4f
>76	Condition	 
>77	EqualityExpression	i == m_missiles
>78	Identifier	m_missiles
>79	Identifier	i
>80	UnaryExpression	 
>81	Identifier	i
>82	IncDec	++
>83	Condition	 
>84	RelationalExpression	i < 10
>85	PrimaryExpression	10
>86	Identifier	i
>87	ForInit	 
>88	IdentifierDeclStatement	int i = 0 ;
>89	IdentifierDecl	i = 0
>90	AssignmentExpr	i = 0
>91	PrimaryExpression	0
>92	Identifier	i
>93	Identifier	i
>94	IdentifierDeclType	int
>95	ExpressionStatement	 
>96	CallExpression	glColor4f ( 0 , 0 , 0 , 1.0 )
>97	ArgumentList	0
>98	Argument	1.0
>99	PrimaryExpression	1.0
>100	Argument	0
>101	PrimaryExpression	0
>102	Argument	0
>103	PrimaryExpression	0
>104	Argument	0
>105	PrimaryExpression	0
>106	Callee	glColor4f
>107	Identifier	glColor4f
>108	ExpressionStatement	 
>109	CallExpression	glRotatef ( 90 , 0 , 0 , 1.0 )
>110	ArgumentList	90
>111	Argument	1.0
>112	PrimaryExpression	1.0
>113	Argument	0
>114	PrimaryExpression	0
>115	Argument	0
>116	PrimaryExpression	0
>117	Argument	90
>118	PrimaryExpression	90
>119	Callee	glRotatef
>120	Identifier	glRotatef
>121	ExpressionStatement	 
>122	CallExpression	glScalef ( Missile 
>123	ArgumentList	Missile 
>124	Argument	1.0
>125	PrimaryExpression	1.0
>126	Argument	Missile 
>127	Identifier	Missile 
>128	Argument	Missile 
>129	Identifier	Missile 
>130	Callee	glScalef
>131	Identifier	glScalef
>132	ExpressionStatement	 
>133	CallExpression	glTranslatef ( m_pos [ 0 ] - 0.05 , m_pos [ 1 ] - 0.06 , 0.0 )
>134	ArgumentList	m_pos [ 0 ] - 0.05
>135	Argument	0.0
>136	PrimaryExpression	0.0
>137	Argument	m_pos [ 1 ] - 0.06
>138	AdditiveExpression	m_pos [ 1 ] - 0.06
>139	PrimaryExpression	0.06
>140	ArrayIndexing	m_pos [ 1 ]
>141	PrimaryExpression	1
>142	Identifier	m_pos
>143	Argument	m_pos [ 0 ] - 0.05
>144	AdditiveExpression	m_pos [ 0 ] - 0.05
>145	PrimaryExpression	0.05
>146	ArrayIndexing	m_pos [ 0 ]
>147	PrimaryExpression	0
>148	Identifier	m_pos
>149	Callee	glTranslatef
>150	Identifier	glTranslatef
>151	IdentifierDeclStatement	 
>152	IdentifierDecl	* missile_model = g_resources . mesh_missile
>153	AssignmentExpr	* missile_model = g_resources . mesh_missile
>154	MemberAccess	g_resources . mesh_missile
>155	Identifier	mesh_missile
>156	Identifier	g_resources
>157	Identifier	missile_model
>158	Identifier	missile_model
>159	IdentifierDeclType	StaticMesh *
>160	ExpressionStatement	 
>161	CallExpression	glPushMatrix ( )
>162	ArgumentList	 
>163	Callee	glPushMatrix
>164	Identifier	glPushMatrix
>165	ExpressionStatement	 
>166	CallExpression	glPopMatrix ( )
>167	ArgumentList	 
>168	Callee	glPopMatrix
>169	Identifier	glPopMatrix
>170	ExpressionStatement	 
>171	CallExpression	( * m_model ) -> draw ( )
>172	ArgumentList	 
>173	Callee	( * m_model ) -> draw
>174	PtrMemberAccess	( * m_model ) -> draw
>175	Identifier	draw
>176	UnaryOp	* m_model
>177	Identifier	m_model
>178	UnaryOperator	*
>179	ExpressionStatement	 
>180	CallExpression	glColor4f ( 0 , 0 , 0 , 1.0 )
>181	ArgumentList	0
>182	Argument	1.0
>183	PrimaryExpression	1.0
>184	Argument	0
>185	PrimaryExpression	0
>186	Argument	0
>187	PrimaryExpression	0
>188	Argument	0
>189	PrimaryExpression	0
>190	Callee	glColor4f
>191	Identifier	glColor4f
>192	ExpressionStatement	 
>193	CallExpression	glDisable ( GL_TEXTURE_2D )
>194	ArgumentList	GL_TEXTURE_2D
>195	Argument	GL_TEXTURE_2D
>196	Identifier	GL_TEXTURE_2D
>197	Callee	glDisable
>198	Identifier	glDisable
>199	ExpressionStatement	 
>200	CallExpression	glRotatef ( rot , 0 , 0 , 1 )
>201	ArgumentList	rot
>202	Argument	1
>203	PrimaryExpression	1
>204	Argument	0
>205	PrimaryExpression	0
>206	Argument	0
>207	PrimaryExpression	0
>208	Argument	rot
>209	Identifier	rot
>210	Callee	glRotatef
>211	Identifier	glRotatef
>212	ExpressionStatement	 
>213	CallExpression	glScalef ( m_scale , m_scale , 1.0 )
>214	ArgumentList	m_scale
>215	Argument	1.0
>216	PrimaryExpression	1.0
>217	Argument	m_scale
>218	Identifier	m_scale
>219	Argument	m_scale
>220	Identifier	m_scale
>221	Callee	glScalef
>222	Identifier	glScalef
>223	ExpressionStatement	 
>224	CallExpression	glTranslatef ( m_pos [ 0 ] , m_pos [ 1 ] + m_shift , 0.0 )
>225	ArgumentList	m_pos [ 0 ]
>226	Argument	0.0
>227	PrimaryExpression	0.0
>228	Argument	m_pos [ 1 ] + m_shift
>229	AdditiveExpression	m_pos [ 1 ] + m_shift
>230	Identifier	m_shift
>231	ArrayIndexing	m_pos [ 1 ]
>232	PrimaryExpression	1
>233	Identifier	m_pos
>234	Argument	m_pos [ 0 ]
>235	ArrayIndexing	m_pos [ 0 ]
>236	PrimaryExpression	0
>237	Identifier	m_pos
>238	Callee	glTranslatef
>239	Identifier	glTranslatef
>240	IdentifierDeclStatement	 
>241	IdentifierDecl	rot = Sea 
>242	AssignmentExpr	rot = Sea 
>243	MultiplicativeExpression	Sea 
>244	MultiplicativeExpression	0.9 * 333
>245	PrimaryExpression	333
>246	PrimaryExpression	0.9
>247	CallExpression	Sea 
>248	ArgumentList	m_pos [ 0 ] + 0.05
>249	Argument	m_pos [ 0 ] + 0.05
>250	AdditiveExpression	m_pos [ 0 ] + 0.05
>251	PrimaryExpression	0.05
>252	ArrayIndexing	m_pos [ 0 ]
>253	PrimaryExpression	0
>254	Identifier	m_pos
>255	Callee	Sea 
>256	Identifier	Sea 
>257	Identifier	rot
>258	Identifier	rot
>259	IdentifierDeclType	float
>260	ExpressionStatement	 
>261	AssignmentExpr	m_shift = Sea 
>262	MultiplicativeExpression	Sea 
>263	PrimaryExpression	0.90
>264	CallExpression	Sea 
>265	ArgumentList	m_pos [ 0 ] + 0.00
>266	Argument	m_pos [ 0 ] + 0.00
>267	AdditiveExpression	m_pos [ 0 ] + 0.00
>268	PrimaryExpression	0.00
>269	ArrayIndexing	m_pos [ 0 ]
>270	PrimaryExpression	0
>271	Identifier	m_pos
>272	Callee	Sea 
>273	Identifier	Sea 
>274	Identifier	m_shift
>275	ExpressionStatement	 
>276	CallExpression	glPushMatrix ( )
>277	ArgumentList	 
>278	Callee	glPushMatrix
>279	Identifier	glPushMatrix
>298	FunctionDef	PBoat 
>299	ParameterList	 
>300	ReturnType	vec2
>301	CompoundStatement	 
>302	ReturnStatement	 
>303	CallExpression	vec2 ( m_pos [ 0 ] , m_pos [ 1 ] + m_shift )
>304	ArgumentList	m_pos [ 0 ]
>305	Argument	m_pos [ 1 ] + m_shift
>306	AdditiveExpression	m_pos [ 1 ] + m_shift
>307	Identifier	m_shift
>308	ArrayIndexing	m_pos [ 1 ]
>309	PrimaryExpression	1
>310	Identifier	m_pos
>311	Argument	m_pos [ 0 ]
>312	ArrayIndexing	m_pos [ 0 ]
>313	PrimaryExpression	0
>314	Identifier	m_pos
>315	Callee	vec2
>316	Identifier	vec2
>324	FunctionDef	PBoat 
>325	ParameterList	 
>326	ReturnType	int
>327	CompoundStatement	 
>328	ReturnStatement	 
>329	Identifier	m_missiles
>334	FunctionDef	PBoat 
>335	ParameterList	vec2 dest , float radius
>336	Parameter	 
>337	Identifier	radius
>338	ParameterType	float
>339	Parameter	 
>340	Identifier	dest
>341	ParameterType	vec2
>342	ReturnType	Missile *
>343	CompoundStatement	 
>344	ReturnStatement	 
>345	Expression	src , dest , radius
>346	Expression	dest , radius
>347	Identifier	radius
>348	Identifier	dest
>349	Identifier	src
>350	IdentifierDeclStatement	 
>351	IdentifierDecl	src = m_pos + vec2 ( 0.0 , m_shift + 0.02 )
>352	AssignmentExpr	src = m_pos + vec2 ( 0.0 , m_shift + 0.02 )
>353	AdditiveExpression	m_pos + vec2 ( 0.0 , m_shift + 0.02 )
>354	CallExpression	vec2 ( 0.0 , m_shift + 0.02 )
>355	ArgumentList	0.0
>356	Argument	m_shift + 0.02
>357	AdditiveExpression	m_shift + 0.02
>358	PrimaryExpression	0.02
>359	Identifier	m_shift
>360	Argument	0.0
>361	PrimaryExpression	0.0
>362	Callee	vec2
>363	Identifier	vec2
>364	Identifier	m_pos
>365	Identifier	src
>366	Identifier	src
>367	IdentifierDeclType	vec2
>368	ExpressionStatement	 
>369	UnaryExpression	-- m_missiles
>370	Identifier	m_missiles
>371	IncDec	--
>381	FunctionDef	PBoat 
>382	ParameterList	 
>383	ReturnType	void
>384	CompoundStatement	 
>385	ExpressionStatement	 
>386	AssignmentExpr	m_missiles = pboat_missiles
>387	Identifier	pboat_missiles
>388	Identifier	m_missiles
<5=13,6
<6=10,7
<7=9,8
<10=12,11
<13=14
<14=15
<15=21,16
<16=20,17
<17=19,18
<31=34,33,32
<34=275,260,240,223,212,199,192,179,170,165,160,151,132,121,108,95,40,35
<35=36
<36=38,37
<38=39
<40=87,83,80,41
<41=62,55,42
<42=43
<43=53,44
<44=51,47,45
<45=46
<47=48
<48=50,49
<51=52
<53=54
<55=56
<56=58,57
<58=59
<59=61,60
<62=76,63
<63=64
<64=74,65
<65=72,70,68,66
<66=67
<68=69
<70=71
<72=73
<74=75
<76=77
<77=79,78
<80=82,81
<83=84
<84=86,85
<87=88
<88=89
<89=94,93,90
<90=92,91
<95=96
<96=106,97
<97=104,102,100,98
<98=99
<100=101
<102=103
<104=105
<106=107
<108=109
<109=119,110
<110=117,115,113,111
<111=112
<113=114
<115=116
<117=118
<119=120
<121=122
<122=130,123
<123=128,126,124
<124=125
<126=127
<128=129
<130=131
<132=133
<133=149,134
<134=143,137,135
<135=136
<137=138
<138=140,139
<140=142,141
<143=144
<144=146,145
<146=148,147
<149=150
<151=152
<152=159,158,153
<153=157,154
<154=156,155
<160=161
<161=163,162
<163=164
<165=166
<166=168,167
<168=169
<170=171
<171=173,172
<173=174
<174=176,175
<176=178,177
<179=180
<180=190,181
<181=188,186,184,182
<182=183
<184=185
<186=187
<188=189
<190=191
<192=193
<193=197,194
<194=195
<195=196
<197=198
<199=200
<200=210,201
<201=208,206,204,202
<202=203
<204=205
<206=207
<208=209
<210=211
<212=213
<213=221,214
<214=219,217,215
<215=216
<217=218
<219=220
<221=222
<223=224
<224=238,225
<225=234,228,226
<226=227
<228=229
<229=231,230
<231=233,232
<234=235
<235=237,236
<238=239
<240=241
<241=259,258,242
<242=257,243
<243=247,244
<244=246,245
<247=255,248
<248=249
<249=250
<250=252,251
<252=254,253
<255=256
<260=261
<261=274,262
<262=264,263
<264=272,265
<265=266
<266=267
<267=269,268
<269=271,270
<272=273
<275=276
<276=278,277
<278=279
<298=301,300,299
<301=302
<302=303
<303=315,304
<304=311,305
<305=306
<306=308,307
<308=310,309
<311=312
<312=314,313
<315=316
<324=327,326,325
<327=328
<328=329
<334=343,342,335
<335=339,336
<336=338,337
<339=341,340
<343=368,350,344
<344=345
<345=349,346
<346=348,347
<350=351
<351=367,366,352
<352=365,353
<353=364,354
<354=362,355
<355=360,356
<356=357
<357=359,358
<360=361
<362=363
<368=369
<369=371,370
<381=384,383,382
<384=385
<385=386
<386=388,387
