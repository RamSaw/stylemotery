>3	FunctionDef	mini (int a , int b)
>4	ParameterList	int a , int b
>5	Parameter	 
>6	Identifier	b
>7	ParameterType	int
>8	Parameter	 
>9	Identifier	a
>10	ParameterType	int
>11	ReturnType	int
>12	CompoundStatement	 
>13	ReturnStatement	 
>14	ConditionalExpression	a < b ? a 
>15	Identifier	b
>16	Identifier	a
>17	Condition	a < b
>18	RelationalExpression	a < b
>19	Identifier	b
>20	Identifier	a
>26	FunctionDef	mini (int a , int b , int c)
>27	ParameterList	int a , int b , int c
>28	Parameter	 
>29	Identifier	c
>30	ParameterType	int
>31	Parameter	 
>32	Identifier	b
>33	ParameterType	int
>34	Parameter	 
>35	Identifier	a
>36	ParameterType	int
>37	ReturnType	int
>38	CompoundStatement	 
>39	ReturnStatement	 
>40	CallExpression	mini ( mini ( a , b ) , c )
>41	ArgumentList	mini ( a , b )
>42	Argument	c
>43	Identifier	c
>44	Argument	mini ( a , b )
>45	CallExpression	mini ( a , b )
>46	ArgumentList	a
>47	Argument	b
>48	Identifier	b
>49	Argument	a
>50	Identifier	a
>51	Callee	mini
>52	Identifier	mini
>53	Callee	mini
>54	Identifier	mini
>62	FunctionDef	get_num (int k)
>63	ParameterList	int k
>64	Parameter	 
>65	Identifier	k
>66	ParameterType	int
>67	ReturnType	int
>68	CompoundStatement	 
>69	ReturnStatement	 
>70	Identifier	res
>71	ForStatement	for ( ; cnt < k ; ++ cnt )
>72	CompoundStatement	 
>73	ExpressionStatement	 
>74	CallExpression	q7 . push ( 7 * res )
>75	ArgumentList	7 * res
>76	Argument	7 * res
>77	MultiplicativeExpression	7 * res
>78	Identifier	res
>79	PrimaryExpression	7
>80	Callee	q7 . push
>81	MemberAccess	q7 . push
>82	Identifier	push
>83	Identifier	q7
>84	IfStatement	if ( res == v7 )
>85	ElseStatement	else
>86	CompoundStatement	 
>87	ExpressionStatement	 
>88	CallExpression	q5 . push ( 5 * res )
>89	ArgumentList	5 * res
>90	Argument	5 * res
>91	MultiplicativeExpression	5 * res
>92	Identifier	res
>93	PrimaryExpression	5
>94	Callee	q5 . push
>95	MemberAccess	q5 . push
>96	Identifier	push
>97	Identifier	q5
>98	IfStatement	if ( res == v5 )
>99	ElseStatement	else
>100	CompoundStatement	 
>101	IfStatement	if ( res == v3 )
>102	CompoundStatement	 
>103	ExpressionStatement	 
>104	CallExpression	q3 . push ( 3 * res )
>105	ArgumentList	3 * res
>106	Argument	3 * res
>107	MultiplicativeExpression	3 * res
>108	Identifier	res
>109	PrimaryExpression	3
>110	Callee	q3 . push
>111	MemberAccess	q3 . push
>112	Identifier	push
>113	Identifier	q3
>114	ExpressionStatement	 
>115	CallExpression	q3 . pop ( )
>116	ArgumentList	 
>117	Callee	q3 . pop
>118	MemberAccess	q3 . pop
>119	Identifier	pop
>120	Identifier	q3
>121	Condition	 
>122	EqualityExpression	res == v3
>123	Identifier	v3
>124	Identifier	res
>125	CompoundStatement	 
>126	ExpressionStatement	 
>127	CallExpression	q5 . pop ( )
>128	ArgumentList	 
>129	Callee	q5 . pop
>130	MemberAccess	q5 . pop
>131	Identifier	pop
>132	Identifier	q5
>133	Condition	 
>134	EqualityExpression	res == v5
>135	Identifier	v5
>136	Identifier	res
>137	CompoundStatement	 
>138	ExpressionStatement	 
>139	CallExpression	q7 . pop ( )
>140	ArgumentList	 
>141	Callee	q7 . pop
>142	MemberAccess	q7 . pop
>143	Identifier	pop
>144	Identifier	q7
>145	Condition	 
>146	EqualityExpression	res == v7
>147	Identifier	v7
>148	Identifier	res
>149	ExpressionStatement	 
>150	AssignmentExpr	res = mini ( v3 , v5 , v7 )
>151	CallExpression	mini ( v3 , v5 , v7 )
>152	ArgumentList	v3
>153	Argument	v7
>154	Identifier	v7
>155	Argument	v5
>156	Identifier	v5
>157	Argument	v3
>158	Identifier	v3
>159	Callee	mini
>160	Identifier	mini
>161	Identifier	res
>162	IdentifierDeclStatement	 
>163	IdentifierDecl	v7 = q7 . front ( )
>164	AssignmentExpr	v7 = q7 . front ( )
>165	CallExpression	q7 . front ( )
>166	ArgumentList	 
>167	Callee	q7 . front
>168	MemberAccess	q7 . front
>169	Identifier	front
>170	Identifier	q7
>171	Identifier	v7
>172	Identifier	v7
>173	IdentifierDeclType	int
>174	IdentifierDeclStatement	 
>175	IdentifierDecl	v5 = q5 . front ( )
>176	AssignmentExpr	v5 = q5 . front ( )
>177	CallExpression	q5 . front ( )
>178	ArgumentList	 
>179	Callee	q5 . front
>180	MemberAccess	q5 . front
>181	Identifier	front
>182	Identifier	q5
>183	Identifier	v5
>184	Identifier	v5
>185	IdentifierDeclType	int
>186	IdentifierDeclStatement	 
>187	IdentifierDecl	v3 = q3 . front ( )
>188	AssignmentExpr	v3 = q3 . front ( )
>189	CallExpression	q3 . front ( )
>190	ArgumentList	 
>191	Callee	q3 . front
>192	MemberAccess	q3 . front
>193	Identifier	front
>194	Identifier	q3
>195	Identifier	v3
>196	Identifier	v3
>197	IdentifierDeclType	int
>198	UnaryExpression	 
>199	Identifier	cnt
>200	IncDec	++
>201	Condition	 
>202	RelationalExpression	cnt < k
>203	Identifier	k
>204	Identifier	cnt
>205	ExpressionStatement	 
>206	CallExpression	q7 . push ( 7 )
>207	ArgumentList	7
>208	Argument	7
>209	PrimaryExpression	7
>210	Callee	q7 . push
>211	MemberAccess	q7 . push
>212	Identifier	push
>213	Identifier	q7
>214	ExpressionStatement	 
>215	CallExpression	q5 . push ( 5 )
>216	ArgumentList	5
>217	Argument	5
>218	PrimaryExpression	5
>219	Callee	q5 . push
>220	MemberAccess	q5 . push
>221	Identifier	push
>222	Identifier	q5
>223	ExpressionStatement	 
>224	CallExpression	q3 . push ( 3 )
>225	ArgumentList	3
>226	Argument	3
>227	PrimaryExpression	3
>228	Callee	q3 . push
>229	MemberAccess	q3 . push
>230	Identifier	push
>231	Identifier	q3
>232	IdentifierDeclStatement	 
>233	IdentifierDecl	q7
>234	Identifier	q7
>235	IdentifierDeclType	queue < int >
>236	IdentifierDecl	q5
>237	Identifier	q5
>238	IdentifierDeclType	queue < int >
>239	IdentifierDecl	q3
>240	Identifier	q3
>241	IdentifierDeclType	queue < int >
>242	IdentifierDeclStatement	 
>243	IdentifierDecl	cnt = 1
>244	AssignmentExpr	cnt = 1
>245	PrimaryExpression	1
>246	Identifier	cnt
>247	Identifier	cnt
>248	IdentifierDeclType	int
>249	IdentifierDecl	res = 1
>250	AssignmentExpr	res = 1
>251	PrimaryExpression	1
>252	Identifier	res
>253	Identifier	res
>254	IdentifierDeclType	int
>255	IfStatement	if ( k <= 0 )
>256	ReturnStatement	 
>257	PrimaryExpression	0
>258	Condition	 
>259	RelationalExpression	k <= 0
>260	PrimaryExpression	0
>261	Identifier	k
>278	FunctionDef	main ()
>279	ParameterList	 
>280	ReturnType	int
>281	CompoundStatement	 
>282	ReturnStatement	 
>283	PrimaryExpression	0
>284	ForStatement	for ( int i = 1 ; i < 20 ; ++ i )
>285	ExpressionStatement	 
>286	ShiftExpression	cout << get_num ( i ) << endl
>287	ShiftExpression	get_num ( i ) << endl
>288	Identifier	endl
>289	CallExpression	get_num ( i )
>290	ArgumentList	i
>291	Argument	i
>292	Identifier	i
>293	Callee	get_num
>294	Identifier	get_num
>295	Identifier	cout
>296	UnaryExpression	 
>297	Identifier	i
>298	IncDec	++
>299	Condition	 
>300	RelationalExpression	i < 20
>301	PrimaryExpression	20
>302	Identifier	i
>303	ForInit	 
>304	IdentifierDeclStatement	int i = 1 ;
>305	IdentifierDecl	i = 1
>306	AssignmentExpr	i = 1
>307	PrimaryExpression	1
>308	Identifier	i
>309	Identifier	i
>310	IdentifierDeclType	int
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=13
<13=14
<14=17,16,15
<17=18
<18=20,19
<26=38,37,27
<27=34,31,28
<28=30,29
<31=33,32
<34=36,35
<38=39
<39=40
<40=53,41
<41=44,42
<42=43
<44=45
<45=51,46
<46=49,47
<47=48
<49=50
<51=52
<53=54
<62=68,67,63
<63=64
<64=66,65
<68=255,242,232,223,214,205,71,69
<69=70
<71=201,198,72
<72=186,174,162,149,84,73
<73=74
<74=80,75
<75=76
<76=77
<77=79,78
<80=81
<81=83,82
<84=145,137,85
<85=86
<86=98,87
<87=88
<88=94,89
<89=90
<90=91
<91=93,92
<94=95
<95=97,96
<98=133,125,99
<99=100
<100=101
<101=121,102
<102=114,103
<103=104
<104=110,105
<105=106
<106=107
<107=109,108
<110=111
<111=113,112
<114=115
<115=117,116
<117=118
<118=120,119
<121=122
<122=124,123
<125=126
<126=127
<127=129,128
<129=130
<130=132,131
<133=134
<134=136,135
<137=138
<138=139
<139=141,140
<141=142
<142=144,143
<145=146
<146=148,147
<149=150
<150=161,151
<151=159,152
<152=157,155,153
<153=154
<155=156
<157=158
<159=160
<162=163
<163=173,172,164
<164=171,165
<165=167,166
<167=168
<168=170,169
<174=175
<175=185,184,176
<176=183,177
<177=179,178
<179=180
<180=182,181
<186=187
<187=197,196,188
<188=195,189
<189=191,190
<191=192
<192=194,193
<198=200,199
<201=202
<202=204,203
<205=206
<206=210,207
<207=208
<208=209
<210=211
<211=213,212
<214=215
<215=219,216
<216=217
<217=218
<219=220
<220=222,221
<223=224
<224=228,225
<225=226
<226=227
<228=229
<229=231,230
<232=239,236,233
<233=235,234
<236=238,237
<239=241,240
<242=249,243
<243=248,247,244
<244=246,245
<249=254,253,250
<250=252,251
<255=258,256
<256=257
<258=259
<259=261,260
<278=281,280,279
<281=284,282
<282=283
<284=303,299,296,285
<285=286
<286=295,287
<287=289,288
<289=293,290
<290=291
<291=292
<293=294
<296=298,297
<299=300
<300=302,301
<303=304
<304=305
<305=310,309,306
<306=308,307
