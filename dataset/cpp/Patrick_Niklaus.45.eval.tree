>3	FunctionDef	parseEval (string 
>4	ParameterList	string 
>5	Parameter	 
>6	Identifier	logger
>7	ParameterType	const shared_ptr < ParserLogger > &
>8	Parameter	 
>9	Identifier	end
>10	ParameterType	string 
>11	Parameter	 
>12	Identifier	begin
>13	ParameterType	string 
>14	ReturnType	shared_ptr < STNode >
>15	CompoundStatement	 
>16	ReturnStatement	 
>17	Identifier	root
>18	ExpressionStatement	 
>19	Statement	 
>20	Statement	 
>21	Statement	 
>22	Statement	 
>23	Statement	 
>24	Statement	 
>25	IfStatement	if ( ! result || iterBegin != iterEnd )
>26	Statement	 
>27	Condition	 
>28	OrExpression	! result || iterBegin != iterEnd
>29	EqualityExpression	iterBegin != iterEnd
>30	Identifier	iterEnd
>31	Identifier	iterBegin
>32	UnaryOp	! result
>33	Identifier	result
>34	UnaryOperator	!
>35	BlockStarter	 
>36	CompoundStatement	 
>37	ExpressionStatement	result = false
>38	AssignmentExpr	result = false
>39	Identifier	false
>40	Identifier	result
>41	BlockStarter	 
>42	CompoundStatement	 
>43	ExpressionStatement	result = qi 
>44	AssignmentExpr	result = qi 
>45	CallExpression	qi 
>46	ArgumentList	iterBegin
>47	Argument	root
>48	Identifier	root
>49	Argument	chs 
>50	Identifier	chs 
>51	Argument	qi 
>52	ShiftExpression	qi 
>53	ShiftExpression	'(' >> ( ( '\\"' > eval_ > '\\"' ) | eval_ ) >> ')'
>54	ShiftExpression	( ( '\\"' > eval_ > '\\"' ) | eval_ ) >> ')'
>55	PrimaryExpression	')'
>56	InclusiveOrExpression	( '\\"' > eval_ > '\\"' ) | eval_
>57	Identifier	eval_
>58	RelationalExpression	'\\"' > eval_ > '\\"'
>59	RelationalExpression	eval_ > '\\"'
>60	PrimaryExpression	'\\"'
>61	Identifier	eval_
>62	PrimaryExpression	'\\"'
>63	PrimaryExpression	'('
>64	CallExpression	qi 
>65	ArgumentList	\"eval\"
>66	Argument	\"eval\"
>67	PrimaryExpression	\"eval\"
>68	Callee	qi 
>69	Identifier	qi 
>70	Argument	iterEnd
>71	Identifier	iterEnd
>72	Argument	iterBegin
>73	Identifier	iterBegin
>74	Callee	qi 
>75	Identifier	qi 
>76	Identifier	result
>77	IdentifierDeclStatement	 
>78	IdentifierDecl	result = false
>79	AssignmentExpr	result = false
>80	Identifier	false
>81	Identifier	false
>82	Identifier	result
>83	IdentifierDeclType	bool
>84	IdentifierDeclStatement	 
>85	IdentifierDecl	iterEnd
>86	Identifier	iterEnd
>87	IdentifierDeclType	GrammarIterator
>88	IdentifierDeclStatement	 
>89	IdentifierDecl	iterBegin ( begin , end )
>90	Expression	begin , end
>91	Identifier	end
>92	Identifier	begin
>93	Identifier	iterBegin
>94	IdentifierDeclType	GrammarIterator
>95	IdentifierDeclStatement	 
>96	IdentifierDecl	root
>97	Identifier	root
>98	IdentifierDeclType	shared_ptr < STNode >
>99	IdentifierDeclStatement	 
>100	IdentifierDecl	eval_
>101	Identifier	eval_
>102	IdentifierDeclType	EvalGrammer
<3=15,14,4
<4=11,8,5
<5=7,6
<8=10,9
<11=13,12
<15=99,95,88,84,77,41,35,25,24,23,22,21,20,19,18,16
<16=17
<25=27,26
<27=28
<28=32,29
<29=31,30
<32=34,33
<35=36
<36=37
<37=38
<38=40,39
<41=42
<42=43
<43=44
<44=76,45
<45=74,46
<46=72,70,51,49,47
<47=48
<49=50
<51=52
<52=64,53
<53=63,54
<54=56,55
<56=58,57
<58=62,59
<59=61,60
<64=68,65
<65=66
<66=67
<68=69
<70=71
<72=73
<74=75
<77=78
<78=83,82,79
<79=81,80
<84=85
<85=87,86
<88=89
<89=94,93,90
<90=92,91
<95=96
<96=98,97
<99=100
<100=102,101
