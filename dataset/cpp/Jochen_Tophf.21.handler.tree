>7	FunctionDef	JSHandler 
>8	ParameterList	v8 
>9	Parameter	 
>10	Identifier	target
>11	ParameterType	v8 
>12	ReturnType	void
>13	CompoundStatement	 
>14	ExpressionStatement	 
>15	AssignmentExpr	symbol_tagged_nodes_only = NODE_PSYMBOL ( \"tagged_nodes_only\" )
>16	CallExpression	NODE_PSYMBOL ( \"tagged_nodes_only\" )
>17	ArgumentList	\"tagged_nodes_only\"
>18	Argument	\"tagged_nodes_only\"
>19	PrimaryExpression	\"tagged_nodes_only\"
>20	Callee	NODE_PSYMBOL
>21	Identifier	NODE_PSYMBOL
>22	Identifier	symbol_tagged_nodes_only
>23	ExpressionStatement	 
>24	CallExpression	target -> Set ( symbol_Handler , constructor -> GetFunction ( ) )
>25	ArgumentList	symbol_Handler
>26	Argument	constructor -> GetFunction ( )
>27	CallExpression	constructor -> GetFunction ( )
>28	ArgumentList	 
>29	Callee	constructor -> GetFunction
>30	PtrMemberAccess	constructor -> GetFunction
>31	Identifier	GetFunction
>32	Identifier	constructor
>33	Argument	symbol_Handler
>34	Identifier	symbol_Handler
>35	Callee	target -> Set
>36	PtrMemberAccess	target -> Set
>37	Identifier	Set
>38	Identifier	target
>39	ExpressionStatement	 
>40	CallExpression	node 
>41	ArgumentList	constructor
>42	Argument	options
>43	Identifier	options
>44	Argument	\"options\"
>45	PrimaryExpression	\"options\"
>46	Argument	constructor
>47	Identifier	constructor
>48	Callee	node 
>49	Identifier	node 
>50	ExpressionStatement	 
>51	CallExpression	node 
>52	ArgumentList	constructor
>53	Argument	on
>54	Identifier	on
>55	Argument	\"on\"
>56	PrimaryExpression	\"on\"
>57	Argument	constructor
>58	Identifier	constructor
>59	Callee	node 
>60	Identifier	node 
>61	ExpressionStatement	 
>62	CallExpression	constructor -> SetClassName ( symbol_Handler )
>63	ArgumentList	symbol_Handler
>64	Argument	symbol_Handler
>65	Identifier	symbol_Handler
>66	Callee	constructor -> SetClassName
>67	PtrMemberAccess	constructor -> SetClassName
>68	Identifier	SetClassName
>69	Identifier	constructor
>70	ExpressionStatement	 
>71	CallExpression	constructor -> InstanceTemplate ( ) -> SetInternalFieldCount ( 1 )
>72	ArgumentList	1
>73	Argument	1
>74	PrimaryExpression	1
>75	Callee	constructor -> InstanceTemplate ( ) -> SetInternalFieldCount
>76	PtrMemberAccess	constructor -> InstanceTemplate ( ) -> SetInternalFieldCount
>77	Identifier	SetInternalFieldCount
>78	CallExpression	constructor -> InstanceTemplate ( )
>79	ArgumentList	 
>80	Callee	constructor -> InstanceTemplate
>81	PtrMemberAccess	constructor -> InstanceTemplate
>82	Identifier	InstanceTemplate
>83	Identifier	constructor
>84	ExpressionStatement	 
>85	CallExpression	New ( v8 
>86	ArgumentList	v8 
>87	Argument	v8 
>88	CallExpression	v8 
>89	ArgumentList	JSHandler 
>90	Argument	JSHandler 
>91	Identifier	JSHandler 
>92	Callee	v8 
>93	Identifier	v8 
>94	Callee	New
>95	Identifier	New
>96	Statement	 
>97	Statement	 
>98	Statement	 
>99	Statement	 
>100	Statement	 
>101	Statement	 
>102	Statement	 
>103	Statement	 
>104	Statement	 
>105	Statement	 
>106	Statement	 
>107	IdentifierDeclStatement	 
>108	IdentifierDecl	scope
>109	Identifier	scope
>110	IdentifierDeclType	v8 
>127	FunctionDef	JSHandler 
>128	ParameterList	 
>129	CompoundStatement	 
>133	FunctionDef	JSHandler 
>134	ParameterList	 
>135	CompoundStatement	 
>136	ExpressionStatement	 
>137	CallExpression	done_cb . Dispose ( )
>138	ArgumentList	 
>139	Callee	done_cb . Dispose
>140	MemberAccess	done_cb . Dispose
>141	Identifier	Dispose
>142	Identifier	done_cb
>143	ExpressionStatement	 
>144	CallExpression	after_changesets_cb . Dispose ( )
>145	ArgumentList	 
>146	Callee	after_changesets_cb . Dispose
>147	MemberAccess	after_changesets_cb . Dispose
>148	Identifier	Dispose
>149	Identifier	after_changesets_cb
>150	ExpressionStatement	 
>151	CallExpression	changeset_cb . Dispose ( )
>152	ArgumentList	 
>153	Callee	changeset_cb . Dispose
>154	MemberAccess	changeset_cb . Dispose
>155	Identifier	Dispose
>156	Identifier	changeset_cb
>157	ExpressionStatement	 
>158	CallExpression	before_changesets_cb . Dispose ( )
>159	ArgumentList	 
>160	Callee	before_changesets_cb . Dispose
>161	MemberAccess	before_changesets_cb . Dispose
>162	Identifier	Dispose
>163	Identifier	before_changesets_cb
>164	ExpressionStatement	 
>165	CallExpression	area_cb . Dispose ( )
>166	ArgumentList	 
>167	Callee	area_cb . Dispose
>168	MemberAccess	area_cb . Dispose
>169	Identifier	Dispose
>170	Identifier	area_cb
>171	ExpressionStatement	 
>172	CallExpression	after_relations_cb . Dispose ( )
>173	ArgumentList	 
>174	Callee	after_relations_cb . Dispose
>175	MemberAccess	after_relations_cb . Dispose
>176	Identifier	Dispose
>177	Identifier	after_relations_cb
>178	ExpressionStatement	 
>179	CallExpression	relation_cb . Dispose ( )
>180	ArgumentList	 
>181	Callee	relation_cb . Dispose
>182	MemberAccess	relation_cb . Dispose
>183	Identifier	Dispose
>184	Identifier	relation_cb
>185	ExpressionStatement	 
>186	CallExpression	before_relations_cb . Dispose ( )
>187	ArgumentList	 
>188	Callee	before_relations_cb . Dispose
>189	MemberAccess	before_relations_cb . Dispose
>190	Identifier	Dispose
>191	Identifier	before_relations_cb
>192	ExpressionStatement	 
>193	CallExpression	after_ways_cb . Dispose ( )
>194	ArgumentList	 
>195	Callee	after_ways_cb . Dispose
>196	MemberAccess	after_ways_cb . Dispose
>197	Identifier	Dispose
>198	Identifier	after_ways_cb
>199	ExpressionStatement	 
>200	CallExpression	way_cb . Dispose ( )
>201	ArgumentList	 
>202	Callee	way_cb . Dispose
>203	MemberAccess	way_cb . Dispose
>204	Identifier	Dispose
>205	Identifier	way_cb
>206	ExpressionStatement	 
>207	CallExpression	before_ways_cb . Dispose ( )
>208	ArgumentList	 
>209	Callee	before_ways_cb . Dispose
>210	MemberAccess	before_ways_cb . Dispose
>211	Identifier	Dispose
>212	Identifier	before_ways_cb
>213	ExpressionStatement	 
>214	CallExpression	after_nodes_cb . Dispose ( )
>215	ArgumentList	 
>216	Callee	after_nodes_cb . Dispose
>217	MemberAccess	after_nodes_cb . Dispose
>218	Identifier	Dispose
>219	Identifier	after_nodes_cb
>220	ExpressionStatement	 
>221	CallExpression	node_cb . Dispose ( )
>222	ArgumentList	 
>223	Callee	node_cb . Dispose
>224	MemberAccess	node_cb . Dispose
>225	Identifier	Dispose
>226	Identifier	node_cb
>227	ExpressionStatement	 
>228	CallExpression	before_nodes_cb . Dispose ( )
>229	ArgumentList	 
>230	Callee	before_nodes_cb . Dispose
>231	MemberAccess	before_nodes_cb . Dispose
>232	Identifier	Dispose
>233	Identifier	before_nodes_cb
>234	ExpressionStatement	 
>235	CallExpression	init_cb . Dispose ( )
>236	ArgumentList	 
>237	Callee	init_cb . Dispose
>238	MemberAccess	init_cb . Dispose
>239	Identifier	Dispose
>240	Identifier	init_cb
>259	FunctionDef	JSHandler 
>260	ParameterList	const v8 
>261	Parameter	 
>262	Identifier	args
>263	ParameterType	const v8 
>264	ReturnType	v8 
>265	CompoundStatement	 
>266	ReturnStatement	 
>267	CallExpression	scope . Close ( v8 
>268	ArgumentList	v8 
>269	Argument	v8 
>270	CallExpression	v8 
>271	ArgumentList	 
>272	Callee	v8 
>273	Identifier	v8 
>274	Callee	scope . Close
>275	MemberAccess	scope . Close
>276	Identifier	Close
>277	Identifier	scope
>278	IfStatement	if ( args [ 0 ] -> IsExternal ( ) )
>279	ElseStatement	else
>280	CompoundStatement	 
>281	ReturnStatement	 
>282	CallExpression	args . This ( )
>283	ArgumentList	 
>284	Callee	args . This
>285	MemberAccess	args . This
>286	Identifier	This
>287	Identifier	args
>288	ExpressionStatement	 
>289	CallExpression	jshandler -> Wrap ( args . This ( ) )
>290	ArgumentList	args . This ( )
>291	Argument	args . This ( )
>292	CallExpression	args . This ( )
>293	ArgumentList	 
>294	Callee	args . This
>295	MemberAccess	args . This
>296	Identifier	This
>297	Identifier	args
>298	Callee	jshandler -> Wrap
>299	PtrMemberAccess	jshandler -> Wrap
>300	Identifier	Wrap
>301	Identifier	jshandler
>302	IdentifierDeclStatement	 
>303	IdentifierDecl	* jshandler = new JSHandler ( )
>304	AssignmentExpr	* jshandler = new JSHandler ( )
>305	UnaryExpression	new JSHandler ( )
>306	Identifier	jshandler
>307	Identifier	jshandler
>308	IdentifierDeclType	JSHandler *
>309	CompoundStatement	 
>310	ReturnStatement	 
>311	CallExpression	args . This ( )
>312	ArgumentList	 
>313	Callee	args . This
>314	MemberAccess	args . This
>315	Identifier	This
>316	Identifier	args
>317	ExpressionStatement	 
>318	CallExpression	b -> Wrap ( args . This ( ) )
>319	ArgumentList	args . This ( )
>320	Argument	args . This ( )
>321	CallExpression	args . This ( )
>322	ArgumentList	 
>323	Callee	args . This
>324	MemberAccess	args . This
>325	Identifier	This
>326	Identifier	args
>327	Callee	b -> Wrap
>328	PtrMemberAccess	b -> Wrap
>329	Identifier	Wrap
>330	Identifier	b
>331	ExpressionStatement	 
>332	Identifier	ptr
>333	Statement	 
>334	Statement	 
>335	Statement	 
>336	Statement	 
>337	Statement	 
>338	Statement	 
>339	Statement	 
>340	Statement	 
>341	Statement	 
>342	IdentifierDeclStatement	 
>343	IdentifierDecl	* ptr = ext -> Value ( )
>344	AssignmentExpr	* ptr = ext -> Value ( )
>345	CallExpression	ext -> Value ( )
>346	ArgumentList	 
>347	Callee	ext -> Value
>348	PtrMemberAccess	ext -> Value
>349	Identifier	Value
>350	Identifier	ext
>351	Identifier	ptr
>352	Identifier	ptr
>353	IdentifierDeclType	void *
>354	ExpressionStatement	 
>355	CallExpression	Cast ( args [ 0 ] )
>356	ArgumentList	args [ 0 ]
>357	Argument	args [ 0 ]
>358	ArrayIndexing	args [ 0 ]
>359	PrimaryExpression	0
>360	Identifier	args
>361	Callee	Cast
>362	Identifier	Cast
>363	Statement	 
>364	Statement	 
>365	Statement	 
>366	Statement	 
>367	Statement	 
>368	Statement	 
>369	Statement	 
>370	Statement	 
>371	Statement	 
>372	Statement	 
>373	Statement	 
>374	Statement	 
>375	Statement	 
>376	Statement	 
>377	Statement	 
>378	Statement	 
>379	Statement	 
>380	Statement	 
>381	Statement	 
>382	Condition	 
>383	CallExpression	args [ 0 ] -> IsExternal ( )
>384	ArgumentList	 
>385	Callee	args [ 0 ] -> IsExternal
>386	PtrMemberAccess	args [ 0 ] -> IsExternal
>387	Identifier	IsExternal
>388	ArrayIndexing	args [ 0 ]
>389	PrimaryExpression	0
>390	Identifier	args
>391	IfStatement	if ( ! args . IsConstructCall ( ) )
>392	CompoundStatement	 
>393	ReturnStatement	 
>394	CallExpression	ThrowException ( v8 
>395	ArgumentList	v8 
>396	Argument	v8 
>397	CallExpression	v8 
>398	ArgumentList	v8 
>399	Argument	v8 
>400	CallExpression	v8 
>401	ArgumentList	\"Cannot call constructor as function, you need to use 'new' keyword\"
>402	Argument	\"Cannot call constructor as function, you need to use 'new' keyword\"
>403	PrimaryExpression	\"Cannot call constructor as function, you need to use 'new' keyword\"
>404	Callee	v8 
>405	Identifier	v8 
>406	Callee	v8 
>407	Identifier	v8 
>408	Callee	ThrowException
>409	Identifier	ThrowException
>410	Condition	 
>411	UnaryOp	! args . IsConstructCall ( )
>412	CallExpression	args . IsConstructCall ( )
>413	ArgumentList	 
>414	Callee	args . IsConstructCall
>415	MemberAccess	args . IsConstructCall
>416	Identifier	IsConstructCall
>417	Identifier	args
>418	UnaryOperator	!
>419	IdentifierDeclStatement	 
>420	IdentifierDecl	scope
>421	Identifier	scope
>422	IdentifierDeclType	v8 
>444	FunctionDef	JSHandler 
>445	ParameterList	const v8 
>446	Parameter	 
>447	Identifier	args
>448	ParameterType	const v8 
>449	ReturnType	v8 
>450	CompoundStatement	 
>451	ReturnStatement	 
>452	CallExpression	scope . Close ( v8 
>453	ArgumentList	v8 
>454	Argument	v8 
>455	CallExpression	v8 
>456	ArgumentList	 
>457	Callee	v8 
>458	Identifier	v8 
>459	Callee	scope . Close
>460	MemberAccess	scope . Close
>461	Identifier	Close
>462	Identifier	scope
>463	IfStatement	if ( tagged_nodes_only -> IsBoolean ( ) )
>464	CompoundStatement	 
>465	ExpressionStatement	 
>466	AssignmentExpr	unwrap < JSHandler > ( args . This ( ) ) . node_callback_for_tagged_only = tagged_nodes_only -> BooleanValue ( )
>467	CallExpression	tagged_nodes_only -> BooleanValue ( )
>468	ArgumentList	 
>469	Callee	tagged_nodes_only -> BooleanValue
>470	PtrMemberAccess	tagged_nodes_only -> BooleanValue
>471	Identifier	BooleanValue
>472	Identifier	tagged_nodes_only
>473	RelationalExpression	unwrap < JSHandler > ( args . This ( ) ) . node_callback_for_tagged_only
>474	RelationalExpression	JSHandler > ( args . This ( ) ) . node_callback_for_tagged_only
>475	MemberAccess	( args . This ( ) ) . node_callback_for_tagged_only
>476	Identifier	node_callback_for_tagged_only
>477	CallExpression	args . This ( )
>478	ArgumentList	 
>479	Callee	args . This
>480	MemberAccess	args . This
>481	Identifier	This
>482	Identifier	args
>483	Identifier	JSHandler
>484	Identifier	unwrap
>485	Condition	 
>486	CallExpression	tagged_nodes_only -> IsBoolean ( )
>487	ArgumentList	 
>488	Callee	tagged_nodes_only -> IsBoolean
>489	PtrMemberAccess	tagged_nodes_only -> IsBoolean
>490	Identifier	IsBoolean
>491	Identifier	tagged_nodes_only
>492	IdentifierDeclStatement	 
>493	IdentifierDecl	tagged_nodes_only = args [ 0 ] -> ToObject ( ) -> Get ( symbol_tagged_nodes_only )
>494	AssignmentExpr	tagged_nodes_only = args [ 0 ] -> ToObject ( ) -> Get ( symbol_tagged_nodes_only )
>495	CallExpression	args [ 0 ] -> ToObject ( ) -> Get ( symbol_tagged_nodes_only )
>496	ArgumentList	symbol_tagged_nodes_only
>497	Argument	symbol_tagged_nodes_only
>498	Identifier	symbol_tagged_nodes_only
>499	Callee	args [ 0 ] -> ToObject ( ) -> Get
>500	PtrMemberAccess	args [ 0 ] -> ToObject ( ) -> Get
>501	Identifier	Get
>502	CallExpression	args [ 0 ] -> ToObject ( )
>503	ArgumentList	 
>504	Callee	args [ 0 ] -> ToObject
>505	PtrMemberAccess	args [ 0 ] -> ToObject
>506	Identifier	ToObject
>507	ArrayIndexing	args [ 0 ]
>508	PrimaryExpression	0
>509	Identifier	args
>510	Identifier	tagged_nodes_only
>511	Identifier	tagged_nodes_only
>512	IdentifierDeclType	v8 
>513	IfStatement	if ( args . Length ( ) != 1 || ! args [ 0 ] -> IsObject ( ) )
>514	CompoundStatement	 
>515	ReturnStatement	 
>516	CallExpression	ThrowException ( v8 
>517	ArgumentList	v8 
>518	Argument	v8 
>519	CallExpression	v8 
>520	ArgumentList	v8 
>521	Argument	v8 
>522	CallExpression	v8 
>523	ArgumentList	\"please provide a single object as parameter\"
>524	Argument	\"please provide a single object as parameter\"
>525	PrimaryExpression	\"please provide a single object as parameter\"
>526	Callee	v8 
>527	Identifier	v8 
>528	Callee	v8 
>529	Identifier	v8 
>530	Callee	ThrowException
>531	Identifier	ThrowException
>532	Condition	 
>533	OrExpression	args . Length ( ) != 1 || ! args [ 0 ] -> IsObject ( )
>534	UnaryOp	! args [ 0 ] -> IsObject ( )
>535	CallExpression	args [ 0 ] -> IsObject ( )
>536	ArgumentList	 
>537	Callee	args [ 0 ] -> IsObject
>538	PtrMemberAccess	args [ 0 ] -> IsObject
>539	Identifier	IsObject
>540	ArrayIndexing	args [ 0 ]
>541	PrimaryExpression	0
>542	Identifier	args
>543	UnaryOperator	!
>544	EqualityExpression	args . Length ( ) != 1
>545	PrimaryExpression	1
>546	CallExpression	args . Length ( )
>547	ArgumentList	 
>548	Callee	args . Length
>549	MemberAccess	args . Length
>550	Identifier	Length
>551	Identifier	args
>552	IdentifierDeclStatement	 
>553	IdentifierDecl	scope
>554	Identifier	scope
>555	IdentifierDeclType	v8 
>556	ExpressionStatement	 
>557	CallExpression	INSTANCE_CHECK ( JSHandler , \"handler\" , \"options\" )
>558	ArgumentList	JSHandler
>559	Argument	\"options\"
>560	PrimaryExpression	\"options\"
>561	Argument	\"handler\"
>562	PrimaryExpression	\"handler\"
>563	Argument	JSHandler
>564	Identifier	JSHandler
>565	Callee	INSTANCE_CHECK
>566	Identifier	INSTANCE_CHECK
>594	FunctionDef	JSHandler 
>595	ParameterList	const v8 
>596	Parameter	 
>597	Identifier	args
>598	ParameterType	const v8 
>599	ReturnType	v8 
>600	CompoundStatement	 
>601	ReturnStatement	 
>602	CallExpression	scope . Close ( v8 
>603	ArgumentList	v8 
>604	Argument	v8 
>605	CallExpression	v8 
>606	ArgumentList	 
>607	Callee	v8 
>608	Identifier	v8 
>609	Callee	scope . Close
>610	MemberAccess	scope . Close
>611	Identifier	Close
>612	Identifier	scope
>613	IfStatement	if ( callback_name == \"node\" )
>614	ElseStatement	else
>615	IfStatement	if ( callback_name == \"way\" )
>616	ElseStatement	else
>617	IfStatement	if ( callback_name == \"relation\" )
>618	ElseStatement	else
>619	IfStatement	if ( callback_name == \"area\" )
>620	ElseStatement	else
>621	IfStatement	if ( callback_name == \"changeset\" )
>622	ElseStatement	else
>623	IfStatement	if ( callback_name == \"init\" )
>624	ElseStatement	else
>625	IfStatement	if ( callback_name == \"before_nodes\" )
>626	ElseStatement	else
>627	IfStatement	if ( callback_name == \"after_nodes\" )
>628	ElseStatement	else
>629	IfStatement	if ( callback_name == \"before_ways\" )
>630	ElseStatement	else
>631	IfStatement	if ( callback_name == \"after_ways\" )
>632	ElseStatement	else
>633	IfStatement	if ( callback_name == \"before_relations\" )
>634	ElseStatement	else
>635	IfStatement	if ( callback_name == \"after_relations\" )
>636	ElseStatement	else
>637	IfStatement	if ( callback_name == \"before_changesets\" )
>638	ElseStatement	else
>639	IfStatement	if ( callback_name == \"after_changesets\" )
>640	ElseStatement	else
>641	IfStatement	if ( callback_name == \"done\" )
>642	ElseStatement	else
>643	CompoundStatement	 
>644	ReturnStatement	 
>645	CallExpression	ThrowException ( v8 
>646	ArgumentList	v8 
>647	Argument	v8 
>648	CallExpression	v8 
>649	ArgumentList	v8 
>650	Argument	v8 
>651	CallExpression	v8 
>652	ArgumentList	\"unknown callback name as first argument\"
>653	Argument	\"unknown callback name as first argument\"
>654	PrimaryExpression	\"unknown callback name as first argument\"
>655	Callee	v8 
>656	Identifier	v8 
>657	Callee	v8 
>658	Identifier	v8 
>659	Callee	ThrowException
>660	Identifier	ThrowException
>661	CompoundStatement	 
>662	ExpressionStatement	 
>663	CallExpression	New ( callback )
>664	ArgumentList	callback
>665	Argument	callback
>666	Identifier	callback
>667	Callee	New
>668	Identifier	New
>669	Statement	 
>670	Statement	 
>671	Statement	 
>672	Statement	 
>673	Statement	 
>674	Statement	 
>675	Statement	 
>676	Statement	 
>677	Statement	 
>678	Statement	 
>679	Statement	 
>680	Statement	 
>681	Statement	 
>682	ExpressionStatement	 
>683	CallExpression	handler . done_cb . Dispose ( )
>684	ArgumentList	 
>685	Callee	handler . done_cb . Dispose
>686	MemberAccess	handler . done_cb . Dispose
>687	Identifier	Dispose
>688	MemberAccess	handler . done_cb
>689	Identifier	done_cb
>690	Identifier	handler
>691	Condition	 
>692	EqualityExpression	callback_name == \"done\"
>693	PrimaryExpression	\"done\"
>694	Identifier	callback_name
>695	CompoundStatement	 
>696	ExpressionStatement	 
>697	CallExpression	New ( callback )
>698	ArgumentList	callback
>699	Argument	callback
>700	Identifier	callback
>701	Callee	New
>702	Identifier	New
>703	Statement	 
>704	Statement	 
>705	Statement	 
>706	Statement	 
>707	Statement	 
>708	Statement	 
>709	Statement	 
>710	Statement	 
>711	Statement	 
>712	Statement	 
>713	Statement	 
>714	Statement	 
>715	Statement	 
>716	ExpressionStatement	 
>717	CallExpression	handler . after_changesets_cb . Dispose ( )
>718	ArgumentList	 
>719	Callee	handler . after_changesets_cb . Dispose
>720	MemberAccess	handler . after_changesets_cb . Dispose
>721	Identifier	Dispose
>722	MemberAccess	handler . after_changesets_cb
>723	Identifier	after_changesets_cb
>724	Identifier	handler
>725	Condition	 
>726	EqualityExpression	callback_name == \"after_changesets\"
>727	PrimaryExpression	\"after_changesets\"
>728	Identifier	callback_name
>729	CompoundStatement	 
>730	ExpressionStatement	 
>731	CallExpression	New ( callback )
>732	ArgumentList	callback
>733	Argument	callback
>734	Identifier	callback
>735	Callee	New
>736	Identifier	New
>737	Statement	 
>738	Statement	 
>739	Statement	 
>740	Statement	 
>741	Statement	 
>742	Statement	 
>743	Statement	 
>744	Statement	 
>745	Statement	 
>746	Statement	 
>747	Statement	 
>748	Statement	 
>749	Statement	 
>750	ExpressionStatement	 
>751	CallExpression	handler . before_changesets_cb . Dispose ( )
>752	ArgumentList	 
>753	Callee	handler . before_changesets_cb . Dispose
>754	MemberAccess	handler . before_changesets_cb . Dispose
>755	Identifier	Dispose
>756	MemberAccess	handler . before_changesets_cb
>757	Identifier	before_changesets_cb
>758	Identifier	handler
>759	Condition	 
>760	EqualityExpression	callback_name == \"before_changesets\"
>761	PrimaryExpression	\"before_changesets\"
>762	Identifier	callback_name
>763	CompoundStatement	 
>764	ExpressionStatement	 
>765	CallExpression	New ( callback )
>766	ArgumentList	callback
>767	Argument	callback
>768	Identifier	callback
>769	Callee	New
>770	Identifier	New
>771	Statement	 
>772	Statement	 
>773	Statement	 
>774	Statement	 
>775	Statement	 
>776	Statement	 
>777	Statement	 
>778	Statement	 
>779	Statement	 
>780	Statement	 
>781	Statement	 
>782	Statement	 
>783	Statement	 
>784	ExpressionStatement	 
>785	CallExpression	handler . after_relations_cb . Dispose ( )
>786	ArgumentList	 
>787	Callee	handler . after_relations_cb . Dispose
>788	MemberAccess	handler . after_relations_cb . Dispose
>789	Identifier	Dispose
>790	MemberAccess	handler . after_relations_cb
>791	Identifier	after_relations_cb
>792	Identifier	handler
>793	Condition	 
>794	EqualityExpression	callback_name == \"after_relations\"
>795	PrimaryExpression	\"after_relations\"
>796	Identifier	callback_name
>797	CompoundStatement	 
>798	ExpressionStatement	 
>799	CallExpression	New ( callback )
>800	ArgumentList	callback
>801	Argument	callback
>802	Identifier	callback
>803	Callee	New
>804	Identifier	New
>805	Statement	 
>806	Statement	 
>807	Statement	 
>808	Statement	 
>809	Statement	 
>810	Statement	 
>811	Statement	 
>812	Statement	 
>813	Statement	 
>814	Statement	 
>815	Statement	 
>816	Statement	 
>817	Statement	 
>818	ExpressionStatement	 
>819	CallExpression	handler . before_relations_cb . Dispose ( )
>820	ArgumentList	 
>821	Callee	handler . before_relations_cb . Dispose
>822	MemberAccess	handler . before_relations_cb . Dispose
>823	Identifier	Dispose
>824	MemberAccess	handler . before_relations_cb
>825	Identifier	before_relations_cb
>826	Identifier	handler
>827	Condition	 
>828	EqualityExpression	callback_name == \"before_relations\"
>829	PrimaryExpression	\"before_relations\"
>830	Identifier	callback_name
>831	CompoundStatement	 
>832	ExpressionStatement	 
>833	CallExpression	New ( callback )
>834	ArgumentList	callback
>835	Argument	callback
>836	Identifier	callback
>837	Callee	New
>838	Identifier	New
>839	Statement	 
>840	Statement	 
>841	Statement	 
>842	Statement	 
>843	Statement	 
>844	Statement	 
>845	Statement	 
>846	Statement	 
>847	Statement	 
>848	Statement	 
>849	Statement	 
>850	Statement	 
>851	Statement	 
>852	ExpressionStatement	 
>853	CallExpression	handler . after_ways_cb . Dispose ( )
>854	ArgumentList	 
>855	Callee	handler . after_ways_cb . Dispose
>856	MemberAccess	handler . after_ways_cb . Dispose
>857	Identifier	Dispose
>858	MemberAccess	handler . after_ways_cb
>859	Identifier	after_ways_cb
>860	Identifier	handler
>861	Condition	 
>862	EqualityExpression	callback_name == \"after_ways\"
>863	PrimaryExpression	\"after_ways\"
>864	Identifier	callback_name
>865	CompoundStatement	 
>866	ExpressionStatement	 
>867	CallExpression	New ( callback )
>868	ArgumentList	callback
>869	Argument	callback
>870	Identifier	callback
>871	Callee	New
>872	Identifier	New
>873	Statement	 
>874	Statement	 
>875	Statement	 
>876	Statement	 
>877	Statement	 
>878	Statement	 
>879	Statement	 
>880	Statement	 
>881	Statement	 
>882	Statement	 
>883	Statement	 
>884	Statement	 
>885	Statement	 
>886	ExpressionStatement	 
>887	CallExpression	handler . before_ways_cb . Dispose ( )
>888	ArgumentList	 
>889	Callee	handler . before_ways_cb . Dispose
>890	MemberAccess	handler . before_ways_cb . Dispose
>891	Identifier	Dispose
>892	MemberAccess	handler . before_ways_cb
>893	Identifier	before_ways_cb
>894	Identifier	handler
>895	Condition	 
>896	EqualityExpression	callback_name == \"before_ways\"
>897	PrimaryExpression	\"before_ways\"
>898	Identifier	callback_name
>899	CompoundStatement	 
>900	ExpressionStatement	 
>901	CallExpression	New ( callback )
>902	ArgumentList	callback
>903	Argument	callback
>904	Identifier	callback
>905	Callee	New
>906	Identifier	New
>907	Statement	 
>908	Statement	 
>909	Statement	 
>910	Statement	 
>911	Statement	 
>912	Statement	 
>913	Statement	 
>914	Statement	 
>915	Statement	 
>916	Statement	 
>917	Statement	 
>918	Statement	 
>919	Statement	 
>920	ExpressionStatement	 
>921	CallExpression	handler . after_nodes_cb . Dispose ( )
>922	ArgumentList	 
>923	Callee	handler . after_nodes_cb . Dispose
>924	MemberAccess	handler . after_nodes_cb . Dispose
>925	Identifier	Dispose
>926	MemberAccess	handler . after_nodes_cb
>927	Identifier	after_nodes_cb
>928	Identifier	handler
>929	Condition	 
>930	EqualityExpression	callback_name == \"after_nodes\"
>931	PrimaryExpression	\"after_nodes\"
>932	Identifier	callback_name
>933	CompoundStatement	 
>934	ExpressionStatement	 
>935	CallExpression	New ( callback )
>936	ArgumentList	callback
>937	Argument	callback
>938	Identifier	callback
>939	Callee	New
>940	Identifier	New
>941	Statement	 
>942	Statement	 
>943	Statement	 
>944	Statement	 
>945	Statement	 
>946	Statement	 
>947	Statement	 
>948	Statement	 
>949	Statement	 
>950	Statement	 
>951	Statement	 
>952	Statement	 
>953	Statement	 
>954	ExpressionStatement	 
>955	CallExpression	handler . before_nodes_cb . Dispose ( )
>956	ArgumentList	 
>957	Callee	handler . before_nodes_cb . Dispose
>958	MemberAccess	handler . before_nodes_cb . Dispose
>959	Identifier	Dispose
>960	MemberAccess	handler . before_nodes_cb
>961	Identifier	before_nodes_cb
>962	Identifier	handler
>963	Condition	 
>964	EqualityExpression	callback_name == \"before_nodes\"
>965	PrimaryExpression	\"before_nodes\"
>966	Identifier	callback_name
>967	CompoundStatement	 
>968	ExpressionStatement	 
>969	CallExpression	New ( callback )
>970	ArgumentList	callback
>971	Argument	callback
>972	Identifier	callback
>973	Callee	New
>974	Identifier	New
>975	Statement	 
>976	Statement	 
>977	Statement	 
>978	Statement	 
>979	Statement	 
>980	Statement	 
>981	Statement	 
>982	Statement	 
>983	Statement	 
>984	Statement	 
>985	Statement	 
>986	Statement	 
>987	Statement	 
>988	ExpressionStatement	 
>989	CallExpression	handler . init_cb . Dispose ( )
>990	ArgumentList	 
>991	Callee	handler . init_cb . Dispose
>992	MemberAccess	handler . init_cb . Dispose
>993	Identifier	Dispose
>994	MemberAccess	handler . init_cb
>995	Identifier	init_cb
>996	Identifier	handler
>997	Condition	 
>998	EqualityExpression	callback_name == \"init\"
>999	PrimaryExpression	\"init\"
>1000	Identifier	callback_name
>1001	CompoundStatement	 
>1002	ExpressionStatement	 
>1003	CallExpression	New ( callback )
>1004	ArgumentList	callback
>1005	Argument	callback
>1006	Identifier	callback
>1007	Callee	New
>1008	Identifier	New
>1009	Statement	 
>1010	Statement	 
>1011	Statement	 
>1012	Statement	 
>1013	Statement	 
>1014	Statement	 
>1015	Statement	 
>1016	Statement	 
>1017	Statement	 
>1018	Statement	 
>1019	Statement	 
>1020	Statement	 
>1021	Statement	 
>1022	ExpressionStatement	 
>1023	CallExpression	handler . changeset_cb . Dispose ( )
>1024	ArgumentList	 
>1025	Callee	handler . changeset_cb . Dispose
>1026	MemberAccess	handler . changeset_cb . Dispose
>1027	Identifier	Dispose
>1028	MemberAccess	handler . changeset_cb
>1029	Identifier	changeset_cb
>1030	Identifier	handler
>1031	Condition	 
>1032	EqualityExpression	callback_name == \"changeset\"
>1033	PrimaryExpression	\"changeset\"
>1034	Identifier	callback_name
>1035	CompoundStatement	 
>1036	ExpressionStatement	 
>1037	CallExpression	New ( callback )
>1038	ArgumentList	callback
>1039	Argument	callback
>1040	Identifier	callback
>1041	Callee	New
>1042	Identifier	New
>1043	Statement	 
>1044	Statement	 
>1045	Statement	 
>1046	Statement	 
>1047	Statement	 
>1048	Statement	 
>1049	Statement	 
>1050	Statement	 
>1051	Statement	 
>1052	Statement	 
>1053	Statement	 
>1054	Statement	 
>1055	Statement	 
>1056	ExpressionStatement	 
>1057	CallExpression	handler . area_cb . Dispose ( )
>1058	ArgumentList	 
>1059	Callee	handler . area_cb . Dispose
>1060	MemberAccess	handler . area_cb . Dispose
>1061	Identifier	Dispose
>1062	MemberAccess	handler . area_cb
>1063	Identifier	area_cb
>1064	Identifier	handler
>1065	Condition	 
>1066	EqualityExpression	callback_name == \"area\"
>1067	PrimaryExpression	\"area\"
>1068	Identifier	callback_name
>1069	CompoundStatement	 
>1070	ExpressionStatement	 
>1071	CallExpression	New ( callback )
>1072	ArgumentList	callback
>1073	Argument	callback
>1074	Identifier	callback
>1075	Callee	New
>1076	Identifier	New
>1077	Statement	 
>1078	Statement	 
>1079	Statement	 
>1080	Statement	 
>1081	Statement	 
>1082	Statement	 
>1083	Statement	 
>1084	Statement	 
>1085	Statement	 
>1086	Statement	 
>1087	Statement	 
>1088	Statement	 
>1089	Statement	 
>1090	ExpressionStatement	 
>1091	CallExpression	handler . relation_cb . Dispose ( )
>1092	ArgumentList	 
>1093	Callee	handler . relation_cb . Dispose
>1094	MemberAccess	handler . relation_cb . Dispose
>1095	Identifier	Dispose
>1096	MemberAccess	handler . relation_cb
>1097	Identifier	relation_cb
>1098	Identifier	handler
>1099	Condition	 
>1100	EqualityExpression	callback_name == \"relation\"
>1101	PrimaryExpression	\"relation\"
>1102	Identifier	callback_name
>1103	CompoundStatement	 
>1104	ExpressionStatement	 
>1105	CallExpression	New ( callback )
>1106	ArgumentList	callback
>1107	Argument	callback
>1108	Identifier	callback
>1109	Callee	New
>1110	Identifier	New
>1111	Statement	 
>1112	Statement	 
>1113	Statement	 
>1114	Statement	 
>1115	Statement	 
>1116	Statement	 
>1117	Statement	 
>1118	Statement	 
>1119	Statement	 
>1120	Statement	 
>1121	Statement	 
>1122	Statement	 
>1123	Statement	 
>1124	ExpressionStatement	 
>1125	CallExpression	handler . way_cb . Dispose ( )
>1126	ArgumentList	 
>1127	Callee	handler . way_cb . Dispose
>1128	MemberAccess	handler . way_cb . Dispose
>1129	Identifier	Dispose
>1130	MemberAccess	handler . way_cb
>1131	Identifier	way_cb
>1132	Identifier	handler
>1133	Condition	 
>1134	EqualityExpression	callback_name == \"way\"
>1135	PrimaryExpression	\"way\"
>1136	Identifier	callback_name
>1137	CompoundStatement	 
>1138	ExpressionStatement	 
>1139	CallExpression	New ( callback )
>1140	ArgumentList	callback
>1141	Argument	callback
>1142	Identifier	callback
>1143	Callee	New
>1144	Identifier	New
>1145	Statement	 
>1146	Statement	 
>1147	Statement	 
>1148	Statement	 
>1149	Statement	 
>1150	Statement	 
>1151	Statement	 
>1152	Statement	 
>1153	Statement	 
>1154	Statement	 
>1155	Statement	 
>1156	Statement	 
>1157	Statement	 
>1158	ExpressionStatement	 
>1159	CallExpression	handler . node_cb . Dispose ( )
>1160	ArgumentList	 
>1161	Callee	handler . node_cb . Dispose
>1162	MemberAccess	handler . node_cb . Dispose
>1163	Identifier	Dispose
>1164	MemberAccess	handler . node_cb
>1165	Identifier	node_cb
>1166	Identifier	handler
>1167	Condition	 
>1168	EqualityExpression	callback_name == \"node\"
>1169	PrimaryExpression	\"node\"
>1170	Identifier	callback_name
>1171	IdentifierDeclStatement	 
>1172	IdentifierDecl	& handler = unwrap < JSHandler > ( args . This ( ) )
>1173	AssignmentExpr	& handler = unwrap < JSHandler > ( args . This ( ) )
>1174	RelationalExpression	unwrap < JSHandler > ( args . This ( ) )
>1175	RelationalExpression	JSHandler > ( args . This ( ) )
>1176	CallExpression	args . This ( )
>1177	ArgumentList	 
>1178	Callee	args . This
>1179	MemberAccess	args . This
>1180	Identifier	This
>1181	Identifier	args
>1182	Identifier	JSHandler
>1183	Identifier	unwrap
>1184	Identifier	handler
>1185	Identifier	handler
>1186	IdentifierDeclType	JSHandler &
>1187	IfStatement	if ( callback -> IsNull ( ) || callback -> IsUndefined ( ) )
>1188	CompoundStatement	 
>1189	ReturnStatement	 
>1190	CallExpression	ThrowException ( v8 
>1191	ArgumentList	v8 
>1192	Argument	v8 
>1193	CallExpression	v8 
>1194	ArgumentList	v8 
>1195	Argument	v8 
>1196	CallExpression	v8 
>1197	ArgumentList	\"please provide a valid callback function for second arg\"
>1198	Argument	\"please provide a valid callback function for second arg\"
>1199	PrimaryExpression	\"please provide a valid callback function for second arg\"
>1200	Callee	v8 
>1201	Identifier	v8 
>1202	Callee	v8 
>1203	Identifier	v8 
>1204	Callee	ThrowException
>1205	Identifier	ThrowException
>1206	Condition	 
>1207	OrExpression	callback -> IsNull ( ) || callback -> IsUndefined ( )
>1208	CallExpression	callback -> IsUndefined ( )
>1209	ArgumentList	 
>1210	Callee	callback -> IsUndefined
>1211	PtrMemberAccess	callback -> IsUndefined
>1212	Identifier	IsUndefined
>1213	Identifier	callback
>1214	CallExpression	callback -> IsNull ( )
>1215	ArgumentList	 
>1216	Callee	callback -> IsNull
>1217	PtrMemberAccess	callback -> IsNull
>1218	Identifier	IsNull
>1219	Identifier	callback
>1220	ExpressionStatement	 
>1221	CallExpression	Cast ( args [ 1 ] )
>1222	ArgumentList	args [ 1 ]
>1223	Argument	args [ 1 ]
>1224	ArrayIndexing	args [ 1 ]
>1225	PrimaryExpression	1
>1226	Identifier	args
>1227	Callee	Cast
>1228	Identifier	Cast
>1229	Statement	 
>1230	Statement	 
>1231	Statement	 
>1232	Statement	 
>1233	Statement	 
>1234	Statement	 
>1235	Statement	 
>1236	Statement	 
>1237	Statement	 
>1238	Statement	 
>1239	Statement	 
>1240	Statement	 
>1241	Statement	 
>1242	Statement	 
>1243	Statement	 
>1244	Statement	 
>1245	Statement	 
>1246	Statement	 
>1247	Statement	 
>1248	IdentifierDeclStatement	 
>1249	IdentifierDecl	callback_name = * callback_name_string
>1250	AssignmentExpr	callback_name = * callback_name_string
>1251	UnaryOp	* callback_name_string
>1252	Identifier	callback_name_string
>1253	UnaryOperator	*
>1254	Identifier	callback_name
>1255	Identifier	callback_name
>1256	IdentifierDeclType	std 
>1257	ExpressionStatement	 
>1258	CompoundStatement	 
>1259	Statement	 
>1260	Statement	 
>1261	Statement	 
>1262	Statement	 
>1263	Statement	 
>1264	Statement	 
>1265	Statement	 
>1266	Statement	 
>1267	Statement	 
>1268	Statement	 
>1269	IfStatement	if ( args . Length ( ) != 2 || ! args [ 0 ] -> IsString ( ) || ! args [ 1 ] -> IsFunction ( ) )
>1270	CompoundStatement	 
>1271	ReturnStatement	 
>1272	CallExpression	ThrowException ( v8 
>1273	ArgumentList	v8 
>1274	Argument	v8 
>1275	CallExpression	v8 
>1276	ArgumentList	v8 
>1277	Argument	v8 
>1278	CallExpression	v8 
>1279	ArgumentList	\"please provide an event name and callback function\"
>1280	Argument	\"please provide an event name and callback function\"
>1281	PrimaryExpression	\"please provide an event name and callback function\"
>1282	Callee	v8 
>1283	Identifier	v8 
>1284	Callee	v8 
>1285	Identifier	v8 
>1286	Callee	ThrowException
>1287	Identifier	ThrowException
>1288	Condition	 
>1289	OrExpression	args . Length ( ) != 2 || ! args [ 0 ] -> IsString ( ) || ! args [ 1 ] -> IsFunction ( )
>1290	OrExpression	! args [ 0 ] -> IsString ( ) || ! args [ 1 ] -> IsFunction ( )
>1291	UnaryOp	! args [ 1 ] -> IsFunction ( )
>1292	CallExpression	args [ 1 ] -> IsFunction ( )
>1293	ArgumentList	 
>1294	Callee	args [ 1 ] -> IsFunction
>1295	PtrMemberAccess	args [ 1 ] -> IsFunction
>1296	Identifier	IsFunction
>1297	ArrayIndexing	args [ 1 ]
>1298	PrimaryExpression	1
>1299	Identifier	args
>1300	UnaryOperator	!
>1301	UnaryOp	! args [ 0 ] -> IsString ( )
>1302	CallExpression	args [ 0 ] -> IsString ( )
>1303	ArgumentList	 
>1304	Callee	args [ 0 ] -> IsString
>1305	PtrMemberAccess	args [ 0 ] -> IsString
>1306	Identifier	IsString
>1307	ArrayIndexing	args [ 0 ]
>1308	PrimaryExpression	0
>1309	Identifier	args
>1310	UnaryOperator	!
>1311	EqualityExpression	args . Length ( ) != 2
>1312	PrimaryExpression	2
>1313	CallExpression	args . Length ( )
>1314	ArgumentList	 
>1315	Callee	args . Length
>1316	MemberAccess	args . Length
>1317	Identifier	Length
>1318	Identifier	args
>1319	IdentifierDeclStatement	 
>1320	IdentifierDecl	scope
>1321	Identifier	scope
>1322	IdentifierDeclType	v8 
>1323	ExpressionStatement	 
>1324	CallExpression	INSTANCE_CHECK ( JSHandler , \"handler\" , \"on\" )
>1325	ArgumentList	JSHandler
>1326	Argument	\"on\"
>1327	PrimaryExpression	\"on\"
>1328	Argument	\"handler\"
>1329	PrimaryExpression	\"handler\"
>1330	Argument	JSHandler
>1331	Identifier	JSHandler
>1332	Callee	INSTANCE_CHECK
>1333	Identifier	INSTANCE_CHECK
>1376	FunctionDef	call_callback_with_entity (const v8 
>1377	ParameterList	const v8 
>1378	Parameter	 
>1379	Identifier	entity
>1380	ParameterType	const osmium 
>1381	Parameter	 
>1382	Identifier	function
>1383	ParameterType	const v8 
>1384	ReturnType	void
>1385	CompoundStatement	 
>1386	ExpressionStatement	 
>1387	CallExpression	function -> Call ( v8 
>1388	ArgumentList	v8 
>1389	Argument	argv
>1390	Identifier	argv
>1391	Argument	1
>1392	PrimaryExpression	1
>1393	Argument	v8 
>1394	CallExpression	v8 
>1395	ArgumentList	 
>1396	Callee	v8 
>1397	PtrMemberAccess	v8 
>1398	Identifier	Global
>1399	CallExpression	v8 
>1400	ArgumentList	 
>1401	Callee	v8 
>1402	Identifier	v8 
>1403	Callee	function -> Call
>1404	PtrMemberAccess	function -> Call
>1405	Identifier	Call
>1406	Identifier	function
>1407	IdentifierDeclStatement	 
>1408	IdentifierDecl	argv [ 1 ] = { new_external < TWrapped > ( entity ) }
>1409	AssignmentExpr	argv [ 1 ] = { new_external < TWrapped > ( entity ) }
>1410	InitializerList	new_external < TWrapped > ( entity )
>1411	RelationalExpression	new_external < TWrapped > ( entity )
>1412	RelationalExpression	TWrapped > ( entity )
>1413	Identifier	entity
>1414	Identifier	TWrapped
>1415	Identifier	new_external
>1416	Identifier	argv
>1417	PrimaryExpression	1
>1418	Identifier	argv
>1419	IdentifierDeclType	v8 
>1420	IdentifierDeclStatement	 
>1421	IdentifierDecl	scope
>1422	Identifier	scope
>1423	IdentifierDeclType	v8 
>1424	IfStatement	if ( function . IsEmpty ( ) )
>1425	CompoundStatement	 
>1426	ReturnStatement	 
>1427	Condition	 
>1428	CallExpression	function . IsEmpty ( )
>1429	ArgumentList	 
>1430	Callee	function . IsEmpty
>1431	MemberAccess	function . IsEmpty
>1432	Identifier	IsEmpty
>1433	Identifier	function
>1447	FunctionDef	call_callback (const v8 
>1448	ParameterList	const v8 
>1449	Parameter	 
>1450	Identifier	function
>1451	ParameterType	const v8 
>1452	ReturnType	void
>1453	CompoundStatement	 
>1454	ExpressionStatement	 
>1455	CallExpression	function -> Call ( v8 
>1456	ArgumentList	v8 
>1457	Argument	nullptr
>1458	Identifier	nullptr
>1459	Argument	0
>1460	PrimaryExpression	0
>1461	Argument	v8 
>1462	CallExpression	v8 
>1463	ArgumentList	 
>1464	Callee	v8 
>1465	PtrMemberAccess	v8 
>1466	Identifier	Global
>1467	CallExpression	v8 
>1468	ArgumentList	 
>1469	Callee	v8 
>1470	Identifier	v8 
>1471	Callee	function -> Call
>1472	PtrMemberAccess	function -> Call
>1473	Identifier	Call
>1474	Identifier	function
>1475	IfStatement	if ( function . IsEmpty ( ) )
>1476	CompoundStatement	 
>1477	ReturnStatement	 
>1478	Condition	 
>1479	CallExpression	function . IsEmpty ( )
>1480	ArgumentList	 
>1481	Callee	function . IsEmpty
>1482	MemberAccess	function . IsEmpty
>1483	Identifier	IsEmpty
>1484	Identifier	function
>1494	FunctionDef	JSHandler 
>1495	ParameterList	const osmium 
>1496	Parameter	 
>1497	Identifier	entity
>1498	ParameterType	const osmium 
>1499	ReturnType	void
>1500	CompoundStatement	 
>1501	SwitchStatement	switch ( entity . type ( ) )
>1502	CompoundStatement	 
>1503	BreakStatement	 
>1504	Label	 
>1505	Identifier	default
>1506	BreakStatement	 
>1507	IfStatement	if ( ! changeset_cb . IsEmpty ( ) )
>1508	CompoundStatement	 
>1509	ExpressionStatement	 
>1510	RelationalExpression	call_callback_with_entity < OSMChangesetWrap > ( changeset_cb , entity )
>1511	RelationalExpression	OSMChangesetWrap > ( changeset_cb , entity )
>1512	Expression	changeset_cb , entity
>1513	Identifier	entity
>1514	Identifier	changeset_cb
>1515	Identifier	OSMChangesetWrap
>1516	Identifier	call_callback_with_entity
>1517	Condition	 
>1518	UnaryOp	! changeset_cb . IsEmpty ( )
>1519	CallExpression	changeset_cb . IsEmpty ( )
>1520	ArgumentList	 
>1521	Callee	changeset_cb . IsEmpty
>1522	MemberAccess	changeset_cb . IsEmpty
>1523	Identifier	IsEmpty
>1524	Identifier	changeset_cb
>1525	UnaryOperator	!
>1526	Label	 
>1527	Identifier	osmium 
>1528	BreakStatement	 
>1529	IfStatement	if ( ! area_cb . IsEmpty ( ) )
>1530	CompoundStatement	 
>1531	ExpressionStatement	 
>1532	RelationalExpression	call_callback_with_entity < OSMAreaWrap > ( area_cb , entity )
>1533	RelationalExpression	OSMAreaWrap > ( area_cb , entity )
>1534	Expression	area_cb , entity
>1535	Identifier	entity
>1536	Identifier	area_cb
>1537	Identifier	OSMAreaWrap
>1538	Identifier	call_callback_with_entity
>1539	Condition	 
>1540	UnaryOp	! area_cb . IsEmpty ( )
>1541	CallExpression	area_cb . IsEmpty ( )
>1542	ArgumentList	 
>1543	Callee	area_cb . IsEmpty
>1544	MemberAccess	area_cb . IsEmpty
>1545	Identifier	IsEmpty
>1546	Identifier	area_cb
>1547	UnaryOperator	!
>1548	Label	 
>1549	Identifier	osmium 
>1550	BreakStatement	 
>1551	IfStatement	if ( ! relation_cb . IsEmpty ( ) )
>1552	CompoundStatement	 
>1553	ExpressionStatement	 
>1554	RelationalExpression	call_callback_with_entity < OSMRelationWrap > ( relation_cb , entity )
>1555	RelationalExpression	OSMRelationWrap > ( relation_cb , entity )
>1556	Expression	relation_cb , entity
>1557	Identifier	entity
>1558	Identifier	relation_cb
>1559	Identifier	OSMRelationWrap
>1560	Identifier	call_callback_with_entity
>1561	Condition	 
>1562	UnaryOp	! relation_cb . IsEmpty ( )
>1563	CallExpression	relation_cb . IsEmpty ( )
>1564	ArgumentList	 
>1565	Callee	relation_cb . IsEmpty
>1566	MemberAccess	relation_cb . IsEmpty
>1567	Identifier	IsEmpty
>1568	Identifier	relation_cb
>1569	UnaryOperator	!
>1570	Label	 
>1571	Identifier	osmium 
>1572	BreakStatement	 
>1573	IfStatement	if ( ! way_cb . IsEmpty ( ) )
>1574	CompoundStatement	 
>1575	ExpressionStatement	 
>1576	RelationalExpression	call_callback_with_entity < OSMWayWrap > ( way_cb , entity )
>1577	RelationalExpression	OSMWayWrap > ( way_cb , entity )
>1578	Expression	way_cb , entity
>1579	Identifier	entity
>1580	Identifier	way_cb
>1581	Identifier	OSMWayWrap
>1582	Identifier	call_callback_with_entity
>1583	Condition	 
>1584	UnaryOp	! way_cb . IsEmpty ( )
>1585	CallExpression	way_cb . IsEmpty ( )
>1586	ArgumentList	 
>1587	Callee	way_cb . IsEmpty
>1588	MemberAccess	way_cb . IsEmpty
>1589	Identifier	IsEmpty
>1590	Identifier	way_cb
>1591	UnaryOperator	!
>1592	Label	 
>1593	Identifier	osmium 
>1594	BreakStatement	 
>1595	CompoundStatement	 
>1596	ExpressionStatement	 
>1597	RelationalExpression	call_callback_with_entity < OSMNodeWrap > ( node_cb , entity )
>1598	RelationalExpression	OSMNodeWrap > ( node_cb , entity )
>1599	Expression	node_cb , entity
>1600	Identifier	entity
>1601	Identifier	node_cb
>1602	Identifier	OSMNodeWrap
>1603	Identifier	call_callback_with_entity
>1604	Statement	 
>1605	Statement	 
>1606	Statement	 
>1607	Statement	 
>1608	Statement	 
>1609	Statement	 
>1610	Statement	 
>1611	Statement	 
>1612	Statement	 
>1613	Statement	 
>1614	Statement	 
>1615	Statement	 
>1616	Statement	 
>1617	Statement	 
>1618	Statement	 
>1619	Statement	 
>1620	Statement	 
>1621	Statement	 
>1622	Statement	 
>1623	Statement	 
>1624	Statement	 
>1625	Statement	 
>1626	Statement	 
>1627	Statement	 
>1628	Statement	 
>1629	Statement	 
>1630	Statement	 
>1631	Statement	 
>1632	Statement	 
>1633	Statement	 
>1634	Statement	 
>1635	Statement	 
>1636	Statement	 
>1637	Statement	 
>1638	Statement	 
>1639	Label	 
>1640	Identifier	osmium 
>1641	Condition	 
>1642	CallExpression	entity . type ( )
>1643	ArgumentList	 
>1644	Callee	entity . type
>1645	MemberAccess	entity . type
>1646	Identifier	type
>1647	Identifier	entity
>1661	FunctionDef	JSHandler 
>1662	ParameterList	 
>1663	ReturnType	void
>1664	CompoundStatement	 
>1665	ExpressionStatement	 
>1666	CallExpression	call_callback ( init_cb )
>1667	ArgumentList	init_cb
>1668	Argument	init_cb
>1669	Identifier	init_cb
>1670	Callee	call_callback
>1671	Identifier	call_callback
>1676	FunctionDef	JSHandler 
>1677	ParameterList	 
>1678	ReturnType	void
>1679	CompoundStatement	 
>1680	ExpressionStatement	 
>1681	CallExpression	call_callback ( before_nodes_cb )
>1682	ArgumentList	before_nodes_cb
>1683	Argument	before_nodes_cb
>1684	Identifier	before_nodes_cb
>1685	Callee	call_callback
>1686	Identifier	call_callback
>1691	FunctionDef	JSHandler 
>1692	ParameterList	 
>1693	ReturnType	void
>1694	CompoundStatement	 
>1695	ExpressionStatement	 
>1696	CallExpression	call_callback ( after_nodes_cb )
>1697	ArgumentList	after_nodes_cb
>1698	Argument	after_nodes_cb
>1699	Identifier	after_nodes_cb
>1700	Callee	call_callback
>1701	Identifier	call_callback
>1706	FunctionDef	JSHandler 
>1707	ParameterList	 
>1708	ReturnType	void
>1709	CompoundStatement	 
>1710	ExpressionStatement	 
>1711	CallExpression	call_callback ( before_ways_cb )
>1712	ArgumentList	before_ways_cb
>1713	Argument	before_ways_cb
>1714	Identifier	before_ways_cb
>1715	Callee	call_callback
>1716	Identifier	call_callback
>1721	FunctionDef	JSHandler 
>1722	ParameterList	 
>1723	ReturnType	void
>1724	CompoundStatement	 
>1725	ExpressionStatement	 
>1726	CallExpression	call_callback ( after_ways_cb )
>1727	ArgumentList	after_ways_cb
>1728	Argument	after_ways_cb
>1729	Identifier	after_ways_cb
>1730	Callee	call_callback
>1731	Identifier	call_callback
>1736	FunctionDef	JSHandler 
>1737	ParameterList	 
>1738	ReturnType	void
>1739	CompoundStatement	 
>1740	ExpressionStatement	 
>1741	CallExpression	call_callback ( before_relations_cb )
>1742	ArgumentList	before_relations_cb
>1743	Argument	before_relations_cb
>1744	Identifier	before_relations_cb
>1745	Callee	call_callback
>1746	Identifier	call_callback
>1751	FunctionDef	JSHandler 
>1752	ParameterList	 
>1753	ReturnType	void
>1754	CompoundStatement	 
>1755	ExpressionStatement	 
>1756	CallExpression	call_callback ( after_relations_cb )
>1757	ArgumentList	after_relations_cb
>1758	Argument	after_relations_cb
>1759	Identifier	after_relations_cb
>1760	Callee	call_callback
>1761	Identifier	call_callback
>1766	FunctionDef	JSHandler 
>1767	ParameterList	 
>1768	ReturnType	void
>1769	CompoundStatement	 
>1770	ExpressionStatement	 
>1771	CallExpression	call_callback ( before_changesets_cb )
>1772	ArgumentList	before_changesets_cb
>1773	Argument	before_changesets_cb
>1774	Identifier	before_changesets_cb
>1775	Callee	call_callback
>1776	Identifier	call_callback
>1781	FunctionDef	JSHandler 
>1782	ParameterList	 
>1783	ReturnType	void
>1784	CompoundStatement	 
>1785	ExpressionStatement	 
>1786	CallExpression	call_callback ( after_changesets_cb )
>1787	ArgumentList	after_changesets_cb
>1788	Argument	after_changesets_cb
>1789	Identifier	after_changesets_cb
>1790	Callee	call_callback
>1791	Identifier	call_callback
>1796	FunctionDef	JSHandler 
>1797	ParameterList	 
>1798	ReturnType	void
>1799	CompoundStatement	 
>1800	ExpressionStatement	 
>1801	CallExpression	call_callback ( done_cb )
>1802	ArgumentList	done_cb
>1803	Argument	done_cb
>1804	Identifier	done_cb
>1805	Callee	call_callback
>1806	Identifier	call_callback
<7=13,12,8
<8=9
<9=11,10
<13=107,106,105,104,103,102,101,100,99,98,97,96,84,70,61,50,39,23,14
<14=15
<15=22,16
<16=20,17
<17=18
<18=19
<20=21
<23=24
<24=35,25
<25=33,26
<26=27
<27=29,28
<29=30
<30=32,31
<33=34
<35=36
<36=38,37
<39=40
<40=48,41
<41=46,44,42
<42=43
<44=45
<46=47
<48=49
<50=51
<51=59,52
<52=57,55,53
<53=54
<55=56
<57=58
<59=60
<61=62
<62=66,63
<63=64
<64=65
<66=67
<67=69,68
<70=71
<71=75,72
<72=73
<73=74
<75=76
<76=78,77
<78=80,79
<80=81
<81=83,82
<84=85
<85=94,86
<86=87
<87=88
<88=92,89
<89=90
<90=91
<92=93
<94=95
<107=108
<108=110,109
<127=129,128
<133=135,134
<135=234,227,220,213,206,199,192,185,178,171,164,157,150,143,136
<136=137
<137=139,138
<139=140
<140=142,141
<143=144
<144=146,145
<146=147
<147=149,148
<150=151
<151=153,152
<153=154
<154=156,155
<157=158
<158=160,159
<160=161
<161=163,162
<164=165
<165=167,166
<167=168
<168=170,169
<171=172
<172=174,173
<174=175
<175=177,176
<178=179
<179=181,180
<181=182
<182=184,183
<185=186
<186=188,187
<188=189
<189=191,190
<192=193
<193=195,194
<195=196
<196=198,197
<199=200
<200=202,201
<202=203
<203=205,204
<206=207
<207=209,208
<209=210
<210=212,211
<213=214
<214=216,215
<216=217
<217=219,218
<220=221
<221=223,222
<223=224
<224=226,225
<227=228
<228=230,229
<230=231
<231=233,232
<234=235
<235=237,236
<237=238
<238=240,239
<259=265,264,260
<260=261
<261=263,262
<265=419,391,278,266
<266=267
<267=274,268
<268=269
<269=270
<270=272,271
<272=273
<274=275
<275=277,276
<278=382,309,279
<279=280
<280=302,288,281
<281=282
<282=284,283
<284=285
<285=287,286
<288=289
<289=298,290
<290=291
<291=292
<292=294,293
<294=295
<295=297,296
<298=299
<299=301,300
<302=303
<303=308,307,304
<304=306,305
<309=381,380,379,378,377,376,375,374,373,372,371,370,369,368,367,366,365,364,363,354,342,341,340,339,338,337,336,335,334,333,331,317,310
<310=311
<311=313,312
<313=314
<314=316,315
<317=318
<318=327,319
<319=320
<320=321
<321=323,322
<323=324
<324=326,325
<327=328
<328=330,329
<331=332
<342=343
<343=353,352,344
<344=351,345
<345=347,346
<347=348
<348=350,349
<354=355
<355=361,356
<356=357
<357=358
<358=360,359
<361=362
<382=383
<383=385,384
<385=386
<386=388,387
<388=390,389
<391=410,392
<392=393
<393=394
<394=408,395
<395=396
<396=397
<397=406,398
<398=399
<399=400
<400=404,401
<401=402
<402=403
<404=405
<406=407
<408=409
<410=411
<411=418,412
<412=414,413
<414=415
<415=417,416
<419=420
<420=422,421
<444=450,449,445
<445=446
<446=448,447
<450=556,552,513,492,463,451
<451=452
<452=459,453
<453=454
<454=455
<455=457,456
<457=458
<459=460
<460=462,461
<463=485,464
<464=465
<465=466
<466=473,467
<467=469,468
<469=470
<470=472,471
<473=484,474
<474=483,475
<475=477,476
<477=479,478
<479=480
<480=482,481
<485=486
<486=488,487
<488=489
<489=491,490
<492=493
<493=512,511,494
<494=510,495
<495=499,496
<496=497
<497=498
<499=500
<500=502,501
<502=504,503
<504=505
<505=507,506
<507=509,508
<513=532,514
<514=515
<515=516
<516=530,517
<517=518
<518=519
<519=528,520
<520=521
<521=522
<522=526,523
<523=524
<524=525
<526=527
<528=529
<530=531
<532=533
<533=544,534
<534=543,535
<535=537,536
<537=538
<538=540,539
<540=542,541
<544=546,545
<546=548,547
<548=549
<549=551,550
<552=553
<553=555,554
<556=557
<557=565,558
<558=563,561,559
<559=560
<561=562
<563=564
<565=566
<594=600,599,595
<595=596
<596=598,597
<600=1323,1319,1269,1268,1267,1266,1265,1264,1263,1258,1257,1248,1247,1246,1245,1244,1243,1242,1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1231,1230,1229,1220,1187,1171,613,601
<601=602
<602=609,603
<603=604
<604=605
<605=607,606
<607=608
<609=610
<610=612,611
<613=1167,1137,614
<614=615
<615=1133,1103,616
<616=617
<617=1099,1069,618
<618=619
<619=1065,1035,620
<620=621
<621=1031,1001,622
<622=623
<623=997,967,624
<624=625
<625=963,933,626
<626=627
<627=929,899,628
<628=629
<629=895,865,630
<630=631
<631=861,831,632
<632=633
<633=827,797,634
<634=635
<635=793,763,636
<636=637
<637=759,729,638
<638=639
<639=725,695,640
<640=641
<641=691,661,642
<642=643
<643=644
<644=645
<645=659,646
<646=647
<647=648
<648=657,649
<649=650
<650=651
<651=655,652
<652=653
<653=654
<655=656
<657=658
<659=660
<661=682,681,680,679,678,677,676,675,674,673,672,671,670,669,662
<662=663
<663=667,664
<664=665
<665=666
<667=668
<682=683
<683=685,684
<685=686
<686=688,687
<688=690,689
<691=692
<692=694,693
<695=716,715,714,713,712,711,710,709,708,707,706,705,704,703,696
<696=697
<697=701,698
<698=699
<699=700
<701=702
<716=717
<717=719,718
<719=720
<720=722,721
<722=724,723
<725=726
<726=728,727
<729=750,749,748,747,746,745,744,743,742,741,740,739,738,737,730
<730=731
<731=735,732
<732=733
<733=734
<735=736
<750=751
<751=753,752
<753=754
<754=756,755
<756=758,757
<759=760
<760=762,761
<763=784,783,782,781,780,779,778,777,776,775,774,773,772,771,764
<764=765
<765=769,766
<766=767
<767=768
<769=770
<784=785
<785=787,786
<787=788
<788=790,789
<790=792,791
<793=794
<794=796,795
<797=818,817,816,815,814,813,812,811,810,809,808,807,806,805,798
<798=799
<799=803,800
<800=801
<801=802
<803=804
<818=819
<819=821,820
<821=822
<822=824,823
<824=826,825
<827=828
<828=830,829
<831=852,851,850,849,848,847,846,845,844,843,842,841,840,839,832
<832=833
<833=837,834
<834=835
<835=836
<837=838
<852=853
<853=855,854
<855=856
<856=858,857
<858=860,859
<861=862
<862=864,863
<865=886,885,884,883,882,881,880,879,878,877,876,875,874,873,866
<866=867
<867=871,868
<868=869
<869=870
<871=872
<886=887
<887=889,888
<889=890
<890=892,891
<892=894,893
<895=896
<896=898,897
<899=920,919,918,917,916,915,914,913,912,911,910,909,908,907,900
<900=901
<901=905,902
<902=903
<903=904
<905=906
<920=921
<921=923,922
<923=924
<924=926,925
<926=928,927
<929=930
<930=932,931
<933=954,953,952,951,950,949,948,947,946,945,944,943,942,941,934
<934=935
<935=939,936
<936=937
<937=938
<939=940
<954=955
<955=957,956
<957=958
<958=960,959
<960=962,961
<963=964
<964=966,965
<967=988,987,986,985,984,983,982,981,980,979,978,977,976,975,968
<968=969
<969=973,970
<970=971
<971=972
<973=974
<988=989
<989=991,990
<991=992
<992=994,993
<994=996,995
<997=998
<998=1000,999
<1001=1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1012,1011,1010,1009,1002
<1002=1003
<1003=1007,1004
<1004=1005
<1005=1006
<1007=1008
<1022=1023
<1023=1025,1024
<1025=1026
<1026=1028,1027
<1028=1030,1029
<1031=1032
<1032=1034,1033
<1035=1056,1055,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,1044,1043,1036
<1036=1037
<1037=1041,1038
<1038=1039
<1039=1040
<1041=1042
<1056=1057
<1057=1059,1058
<1059=1060
<1060=1062,1061
<1062=1064,1063
<1065=1066
<1066=1068,1067
<1069=1090,1089,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1070
<1070=1071
<1071=1075,1072
<1072=1073
<1073=1074
<1075=1076
<1090=1091
<1091=1093,1092
<1093=1094
<1094=1096,1095
<1096=1098,1097
<1099=1100
<1100=1102,1101
<1103=1124,1123,1122,1121,1120,1119,1118,1117,1116,1115,1114,1113,1112,1111,1104
<1104=1105
<1105=1109,1106
<1106=1107
<1107=1108
<1109=1110
<1124=1125
<1125=1127,1126
<1127=1128
<1128=1130,1129
<1130=1132,1131
<1133=1134
<1134=1136,1135
<1137=1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1148,1147,1146,1145,1138
<1138=1139
<1139=1143,1140
<1140=1141
<1141=1142
<1143=1144
<1158=1159
<1159=1161,1160
<1161=1162
<1162=1164,1163
<1164=1166,1165
<1167=1168
<1168=1170,1169
<1171=1172
<1172=1186,1185,1173
<1173=1184,1174
<1174=1183,1175
<1175=1182,1176
<1176=1178,1177
<1178=1179
<1179=1181,1180
<1187=1206,1188
<1188=1189
<1189=1190
<1190=1204,1191
<1191=1192
<1192=1193
<1193=1202,1194
<1194=1195
<1195=1196
<1196=1200,1197
<1197=1198
<1198=1199
<1200=1201
<1202=1203
<1204=1205
<1206=1207
<1207=1214,1208
<1208=1210,1209
<1210=1211
<1211=1213,1212
<1214=1216,1215
<1216=1217
<1217=1219,1218
<1220=1221
<1221=1227,1222
<1222=1223
<1223=1224
<1224=1226,1225
<1227=1228
<1248=1249
<1249=1256,1255,1250
<1250=1254,1251
<1251=1253,1252
<1258=1262,1261,1260,1259
<1269=1288,1270
<1270=1271
<1271=1272
<1272=1286,1273
<1273=1274
<1274=1275
<1275=1284,1276
<1276=1277
<1277=1278
<1278=1282,1279
<1279=1280
<1280=1281
<1282=1283
<1284=1285
<1286=1287
<1288=1289
<1289=1311,1290
<1290=1301,1291
<1291=1300,1292
<1292=1294,1293
<1294=1295
<1295=1297,1296
<1297=1299,1298
<1301=1310,1302
<1302=1304,1303
<1304=1305
<1305=1307,1306
<1307=1309,1308
<1311=1313,1312
<1313=1315,1314
<1315=1316
<1316=1318,1317
<1319=1320
<1320=1322,1321
<1323=1324
<1324=1332,1325
<1325=1330,1328,1326
<1326=1327
<1328=1329
<1330=1331
<1332=1333
<1376=1385,1384,1377
<1377=1381,1378
<1378=1380,1379
<1381=1383,1382
<1385=1424,1420,1407,1386
<1386=1387
<1387=1403,1388
<1388=1393,1391,1389
<1389=1390
<1391=1392
<1393=1394
<1394=1396,1395
<1396=1397
<1397=1399,1398
<1399=1401,1400
<1401=1402
<1403=1404
<1404=1406,1405
<1407=1408
<1408=1419,1418,1417,1409
<1409=1416,1410
<1410=1411
<1411=1415,1412
<1412=1414,1413
<1420=1421
<1421=1423,1422
<1424=1427,1425
<1425=1426
<1427=1428
<1428=1430,1429
<1430=1431
<1431=1433,1432
<1447=1453,1452,1448
<1448=1449
<1449=1451,1450
<1453=1475,1454
<1454=1455
<1455=1471,1456
<1456=1461,1459,1457
<1457=1458
<1459=1460
<1461=1462
<1462=1464,1463
<1464=1465
<1465=1467,1466
<1467=1469,1468
<1469=1470
<1471=1472
<1472=1474,1473
<1475=1478,1476
<1476=1477
<1478=1479
<1479=1481,1480
<1481=1482
<1482=1484,1483
<1494=1500,1499,1495
<1495=1496
<1496=1498,1497
<1500=1501
<1501=1641,1502
<1502=1639,1638,1503,1504,1506,1507,1526,1528,1529,1548,1550,1551,1570,1572,1573,1592,1594,1595,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637
<1504=1505
<1507=1517,1508
<1508=1509
<1509=1510
<1510=1516,1511
<1511=1515,1512
<1512=1514,1513
<1517=1518
<1518=1525,1519
<1519=1521,1520
<1521=1522
<1522=1524,1523
<1526=1527
<1529=1539,1530
<1530=1531
<1531=1532
<1532=1538,1533
<1533=1537,1534
<1534=1536,1535
<1539=1540
<1540=1547,1541
<1541=1543,1542
<1543=1544
<1544=1546,1545
<1548=1549
<1551=1561,1552
<1552=1553
<1553=1554
<1554=1560,1555
<1555=1559,1556
<1556=1558,1557
<1561=1562
<1562=1569,1563
<1563=1565,1564
<1565=1566
<1566=1568,1567
<1570=1571
<1573=1583,1574
<1574=1575
<1575=1576
<1576=1582,1577
<1577=1581,1578
<1578=1580,1579
<1583=1584
<1584=1591,1585
<1585=1587,1586
<1587=1588
<1588=1590,1589
<1592=1593
<1595=1596
<1596=1597
<1597=1603,1598
<1598=1602,1599
<1599=1601,1600
<1639=1640
<1641=1642
<1642=1644,1643
<1644=1645
<1645=1647,1646
<1661=1664,1663,1662
<1664=1665
<1665=1666
<1666=1670,1667
<1667=1668
<1668=1669
<1670=1671
<1676=1679,1678,1677
<1679=1680
<1680=1681
<1681=1685,1682
<1682=1683
<1683=1684
<1685=1686
<1691=1694,1693,1692
<1694=1695
<1695=1696
<1696=1700,1697
<1697=1698
<1698=1699
<1700=1701
<1706=1709,1708,1707
<1709=1710
<1710=1711
<1711=1715,1712
<1712=1713
<1713=1714
<1715=1716
<1721=1724,1723,1722
<1724=1725
<1725=1726
<1726=1730,1727
<1727=1728
<1728=1729
<1730=1731
<1736=1739,1738,1737
<1739=1740
<1740=1741
<1741=1745,1742
<1742=1743
<1743=1744
<1745=1746
<1751=1754,1753,1752
<1754=1755
<1755=1756
<1756=1760,1757
<1757=1758
<1758=1759
<1760=1761
<1766=1769,1768,1767
<1769=1770
<1770=1771
<1771=1775,1772
<1772=1773
<1773=1774
<1775=1776
<1781=1784,1783,1782
<1784=1785
<1785=1786
<1786=1790,1787
<1787=1788
<1788=1789
<1790=1791
<1796=1799,1798,1797
<1799=1800
<1800=1801
<1801=1805,1802
<1802=1803
<1803=1804
<1805=1806
