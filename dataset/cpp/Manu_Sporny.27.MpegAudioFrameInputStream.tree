>3	FunctionDef	MpegAudioFrameInputStream 
>4	ParameterList	InputStream * is , bool cleanup
>5	Parameter	 
>6	Identifier	cleanup
>7	ParameterType	bool
>8	Parameter	 
>9	Identifier	is
>10	ParameterType	InputStream *
>11	CompoundStatement	 
>12	ExpressionStatement	 
>13	AssignmentExpr	mCleanupInputStream = true
>14	Identifier	true
>15	Identifier	mCleanupInputStream
>16	ExpressionStatement	 
>17	AssignmentExpr	mInputStream = mis
>18	Identifier	mis
>19	Identifier	mInputStream
>20	IdentifierDeclStatement	 
>21	IdentifierDecl	* mis = new MutatorInputStream ( is , cleanup , new Id3v2TagWriter ( NULL ) , true )
>22	AssignmentExpr	* mis = new MutatorInputStream ( is , cleanup , new Id3v2TagWriter ( NULL ) , true )
>23	Expression	is , cleanup , new Id3v2TagWriter ( NULL ) , true
>24	Expression	cleanup , new Id3v2TagWriter ( NULL ) , true
>25	Expression	new Id3v2TagWriter ( NULL ) , true
>26	Identifier	true
>27	Identifier	NULL
>28	Identifier	cleanup
>29	Identifier	is
>30	Identifier	mis
>31	Identifier	mis
>32	IdentifierDeclType	MutatorInputStream *
>43	FunctionDef	MpegAudioFrameInputStream 
>44	ParameterList	 
>45	CompoundStatement	 
>49	FunctionDef	MpegAudioFrameInputStream 
>50	ParameterList	char * b , int length
>51	Parameter	 
>52	Identifier	length
>53	ParameterType	int
>54	Parameter	 
>55	Identifier	b
>56	ParameterType	char *
>57	ReturnType	int
>58	CompoundStatement	 
>59	ReturnStatement	 
>60	Identifier	rval
>61	IfStatement	if ( ! eos && length > 0 )
>62	CompoundStatement	 
>63	IfStatement	if ( rval > 0 )
>64	CompoundStatement	 
>65	ExpressionStatement	 
>66	AssignmentExpr	mFrameBytesLeft -= rval
>67	Identifier	rval
>68	Identifier	mFrameBytesLeft
>69	Condition	 
>70	RelationalExpression	rval > 0
>71	PrimaryExpression	0
>72	Identifier	rval
>73	ExpressionStatement	 
>74	AssignmentExpr	rval = mInputBuffer . get ( b , readSize )
>75	CallExpression	mInputBuffer . get ( b , readSize )
>76	ArgumentList	b
>77	Argument	readSize
>78	Identifier	readSize
>79	Argument	b
>80	Identifier	b
>81	Callee	mInputBuffer . get
>82	MemberAccess	mInputBuffer . get
>83	Identifier	get
>84	Identifier	mInputBuffer
>85	Identifier	rval
>86	IdentifierDeclStatement	 
>87	IdentifierDecl	readSize = ( length < mFrameBytesLeft ? length 
>88	AssignmentExpr	readSize = ( length < mFrameBytesLeft ? length 
>89	ConditionalExpression	length < mFrameBytesLeft ? length 
>90	Identifier	mFrameBytesLeft
>91	Identifier	length
>92	Condition	length < mFrameBytesLeft
>93	RelationalExpression	length < mFrameBytesLeft
>94	Identifier	mFrameBytesLeft
>95	Identifier	length
>96	Identifier	readSize
>97	Identifier	readSize
>98	IdentifierDeclType	int
>99	Condition	 
>100	AndExpression	! eos && length > 0
>101	RelationalExpression	length > 0
>102	PrimaryExpression	0
>103	Identifier	length
>104	UnaryOp	! eos
>105	Identifier	eos
>106	UnaryOperator	!
>107	WhileStatement	while ( rval != - 1 && ! eos && mFrameBytesLeft == 0 )
>108	CompoundStatement	 
>109	IfStatement	if ( rval != - 1 )
>110	CompoundStatement	 
>111	IfStatement	if ( mFrameParser . getLastOffset ( ) == 0 )
>112	ElseStatement	else
>113	IfStatement	if ( needed == 0 )
>114	ElseStatement	else
>115	IfStatement	if ( rval == 0 && ! mInputBuffer . isFull ( ) )
>116	CompoundStatement	 
>117	ExpressionStatement	 
>118	AssignmentExpr	eos = true
>119	Identifier	true
>120	Identifier	eos
>121	Condition	 
>122	AndExpression	rval == 0 && ! mInputBuffer . isFull ( )
>123	UnaryOp	! mInputBuffer . isFull ( )
>124	CallExpression	mInputBuffer . isFull ( )
>125	ArgumentList	 
>126	Callee	mInputBuffer . isFull
>127	MemberAccess	mInputBuffer . isFull
>128	Identifier	isFull
>129	Identifier	mInputBuffer
>130	UnaryOperator	!
>131	EqualityExpression	rval == 0
>132	PrimaryExpression	0
>133	Identifier	rval
>134	CompoundStatement	 
>135	ExpressionStatement	 
>136	AssignmentExpr	eos = true
>137	Identifier	true
>138	Identifier	eos
>139	ExpressionStatement	 
>140	AssignmentExpr	rval = 0
>141	PrimaryExpression	0
>142	Identifier	rval
>143	Condition	 
>144	EqualityExpression	needed == 0
>145	PrimaryExpression	0
>146	Identifier	needed
>147	CompoundStatement	 
>148	ExpressionStatement	 
>149	AssignmentExpr	mFrameBytesLeft = header -> getFrameLength ( )
>150	CallExpression	header -> getFrameLength ( )
>151	ArgumentList	 
>152	Callee	header -> getFrameLength
>153	PtrMemberAccess	header -> getFrameLength
>154	Identifier	getFrameLength
>155	Identifier	header
>156	Identifier	mFrameBytesLeft
>157	IdentifierDeclStatement	 
>158	IdentifierDecl	* header = mFrameParser . getLastHeader ( )
>159	AssignmentExpr	* header = mFrameParser . getLastHeader ( )
>160	CallExpression	mFrameParser . getLastHeader ( )
>161	ArgumentList	 
>162	Callee	mFrameParser . getLastHeader
>163	MemberAccess	mFrameParser . getLastHeader
>164	Identifier	getLastHeader
>165	Identifier	mFrameParser
>166	Identifier	header
>167	Identifier	header
>168	IdentifierDeclType	AudioFrameHeader *
>169	ExpressionStatement	 
>170	UnaryExpression	++ mFrameCount
>171	Identifier	mFrameCount
>172	IncDec	++
>173	Condition	 
>174	EqualityExpression	mFrameParser . getLastOffset ( ) == 0
>175	PrimaryExpression	0
>176	CallExpression	mFrameParser . getLastOffset ( )
>177	ArgumentList	 
>178	Callee	mFrameParser . getLastOffset
>179	MemberAccess	mFrameParser . getLastOffset
>180	Identifier	getLastOffset
>181	Identifier	mFrameParser
>182	IdentifierDeclStatement	 
>183	IdentifierDecl	needed = mFrameParser . findFrame ( mInputBuffer . data ( ) , mInputBuffer . length ( ) )
>184	AssignmentExpr	needed = mFrameParser . findFrame ( mInputBuffer . data ( ) , mInputBuffer . length ( ) )
>185	CallExpression	mFrameParser . findFrame ( mInputBuffer . data ( ) , mInputBuffer . length ( ) )
>186	ArgumentList	mInputBuffer . data ( )
>187	Argument	mInputBuffer . length ( )
>188	CallExpression	mInputBuffer . length ( )
>189	ArgumentList	 
>190	Callee	mInputBuffer . length
>191	MemberAccess	mInputBuffer . length
>192	Identifier	length
>193	Identifier	mInputBuffer
>194	Argument	mInputBuffer . data ( )
>195	CallExpression	mInputBuffer . data ( )
>196	ArgumentList	 
>197	Callee	mInputBuffer . data
>198	MemberAccess	mInputBuffer . data
>199	Identifier	data
>200	Identifier	mInputBuffer
>201	Callee	mFrameParser . findFrame
>202	MemberAccess	mFrameParser . findFrame
>203	Identifier	findFrame
>204	Identifier	mFrameParser
>205	Identifier	needed
>206	Identifier	needed
>207	IdentifierDeclType	int
>208	Condition	 
>209	EqualityExpression	rval != - 1
>210	UnaryOp	- 1
>211	PrimaryExpression	1
>212	UnaryOperator	-
>213	Identifier	rval
>214	ExpressionStatement	 
>215	AssignmentExpr	rval = mInputBuffer . fill ( mInputStream )
>216	CallExpression	mInputBuffer . fill ( mInputStream )
>217	ArgumentList	mInputStream
>218	Argument	mInputStream
>219	Identifier	mInputStream
>220	Callee	mInputBuffer . fill
>221	MemberAccess	mInputBuffer . fill
>222	Identifier	fill
>223	Identifier	mInputBuffer
>224	Identifier	rval
>225	Condition	 
>226	AndExpression	rval != - 1 && ! eos && mFrameBytesLeft == 0
>227	AndExpression	! eos && mFrameBytesLeft == 0
>228	EqualityExpression	mFrameBytesLeft == 0
>229	PrimaryExpression	0
>230	Identifier	mFrameBytesLeft
>231	UnaryOp	! eos
>232	Identifier	eos
>233	UnaryOperator	!
>234	EqualityExpression	rval != - 1
>235	UnaryOp	- 1
>236	PrimaryExpression	1
>237	UnaryOperator	-
>238	Identifier	rval
>239	IdentifierDeclStatement	 
>240	IdentifierDecl	eos = false
>241	AssignmentExpr	eos = false
>242	Identifier	false
>243	Identifier	false
>244	Identifier	eos
>245	IdentifierDeclType	bool
>246	IfStatement	if ( mFrameBytesLeft > 0 && length > mFrameBytesLeft )
>247	CompoundStatement	 
>248	ExpressionStatement	 
>249	AssignmentExpr	rval = mInputBuffer . fill ( mInputStream )
>250	CallExpression	mInputBuffer . fill ( mInputStream )
>251	ArgumentList	mInputStream
>252	Argument	mInputStream
>253	Identifier	mInputStream
>254	Callee	mInputBuffer . fill
>255	MemberAccess	mInputBuffer . fill
>256	Identifier	fill
>257	Identifier	mInputBuffer
>258	Identifier	rval
>259	Condition	 
>260	AndExpression	mFrameBytesLeft > 0 && length > mFrameBytesLeft
>261	RelationalExpression	length > mFrameBytesLeft
>262	Identifier	mFrameBytesLeft
>263	Identifier	length
>264	RelationalExpression	mFrameBytesLeft > 0
>265	PrimaryExpression	0
>266	Identifier	mFrameBytesLeft
>267	IdentifierDeclStatement	 
>268	IdentifierDecl	rval = 0
>269	AssignmentExpr	rval = 0
>270	PrimaryExpression	0
>271	Identifier	rval
>272	Identifier	rval
>273	IdentifierDeclType	int
>300	FunctionDef	MpegAudioFrameInputStream 
>301	ParameterList	ByteBuffer * b , int maxSize , int & frameLength
>302	Parameter	 
>303	Identifier	frameLength
>304	ParameterType	int &
>305	Parameter	 
>306	Identifier	maxSize
>307	ParameterType	int
>308	Parameter	 
>309	Identifier	b
>310	ParameterType	ByteBuffer *
>311	ReturnType	int
>312	CompoundStatement	 
>313	ReturnStatement	 
>314	Identifier	rval
>315	IfStatement	if ( rval != - 1 && mFrameBytesLeft > 0 )
>316	CompoundStatement	 
>317	IfStatement	if ( frameLength > maxSize )
>318	ElseStatement	else
>319	CompoundStatement	 
>320	WhileStatement	while ( rval > 0 && mFrameBytesLeft > 0 )
>321	CompoundStatement	 
>322	ExpressionStatement	 
>323	AssignmentExpr	rval = b -> put ( this , mFrameBytesLeft )
>324	CallExpression	b -> put ( this , mFrameBytesLeft )
>325	ArgumentList	this
>326	Argument	mFrameBytesLeft
>327	Identifier	mFrameBytesLeft
>328	Argument	this
>329	Identifier	this
>330	Callee	b -> put
>331	PtrMemberAccess	b -> put
>332	Identifier	put
>333	Identifier	b
>334	Identifier	rval
>335	Condition	 
>336	AndExpression	rval > 0 && mFrameBytesLeft > 0
>337	RelationalExpression	mFrameBytesLeft > 0
>338	PrimaryExpression	0
>339	Identifier	mFrameBytesLeft
>340	RelationalExpression	rval > 0
>341	PrimaryExpression	0
>342	Identifier	rval
>343	ExpressionStatement	 
>344	CallExpression	b -> allocateSpace ( mFrameBytesLeft , true )
>345	ArgumentList	mFrameBytesLeft
>346	Argument	true
>347	Identifier	true
>348	Argument	mFrameBytesLeft
>349	Identifier	mFrameBytesLeft
>350	Callee	b -> allocateSpace
>351	PtrMemberAccess	b -> allocateSpace
>352	Identifier	allocateSpace
>353	Identifier	b
>354	ExpressionStatement	 
>355	AssignmentExpr	rval = 1
>356	PrimaryExpression	1
>357	Identifier	rval
>358	CompoundStatement	 
>359	ExpressionStatement	 
>360	AssignmentExpr	rval = - 1
>361	UnaryOp	- 1
>362	PrimaryExpression	1
>363	UnaryOperator	-
>364	Identifier	rval
>365	ExpressionStatement	 
>366	CallExpression	Exception 
>367	ArgumentList	e
>368	Argument	e
>369	Identifier	e
>370	Callee	Exception 
>371	Identifier	Exception 
>372	IdentifierDeclStatement	 
>373	IdentifierDecl	e = new Exception ( \"Mpeg audio frame is too large.\" , \"bitmunk.data.MpegAudioFrameTooLarge\" )
>374	AssignmentExpr	e = new Exception ( \"Mpeg audio frame is too large.\" , \"bitmunk.data.MpegAudioFrameTooLarge\" )
>375	Expression	\"Mpeg audio frame is too large.\" , \"bitmunk.data.MpegAudioFrameTooLarge\"
>376	PrimaryExpression	\"bitmunk.data.MpegAudioFrameTooLarge\"
>377	PrimaryExpression	\"Mpeg audio frame is too large.\"
>378	Identifier	e
>379	Identifier	e
>380	IdentifierDeclType	ExceptionRef
>381	Condition	 
>382	RelationalExpression	frameLength > maxSize
>383	Identifier	maxSize
>384	Identifier	frameLength
>385	ExpressionStatement	 
>386	AssignmentExpr	frameLength = mFrameBytesLeft
>387	Identifier	mFrameBytesLeft
>388	Identifier	frameLength
>389	Condition	 
>390	AndExpression	rval != - 1 && mFrameBytesLeft > 0
>391	RelationalExpression	mFrameBytesLeft > 0
>392	PrimaryExpression	0
>393	Identifier	mFrameBytesLeft
>394	EqualityExpression	rval != - 1
>395	UnaryOp	- 1
>396	PrimaryExpression	1
>397	UnaryOperator	-
>398	Identifier	rval
>399	IdentifierDeclStatement	 
>400	IdentifierDecl	rval = read ( NULL , 0 )
>401	AssignmentExpr	rval = read ( NULL , 0 )
>402	CallExpression	read ( NULL , 0 )
>403	ArgumentList	NULL
>404	Argument	0
>405	PrimaryExpression	0
>406	Argument	NULL
>407	Identifier	NULL
>408	Callee	read
>409	Identifier	read
>410	Identifier	rval
>411	Identifier	rval
>412	IdentifierDeclType	int
>428	FunctionDef	MpegAudioFrameInputStream 
>429	ParameterList	 
>430	ReturnType	AudioFrameHeader *
>431	CompoundStatement	 
>432	ReturnStatement	 
>433	CallExpression	mFrameParser . getLastHeader ( )
>434	ArgumentList	 
>435	Callee	mFrameParser . getLastHeader
>436	MemberAccess	mFrameParser . getLastHeader
>437	Identifier	getLastHeader
>438	Identifier	mFrameParser
>444	FunctionDef	MpegAudioFrameInputStream 
>445	ParameterList	 
>446	ReturnType	int
>447	CompoundStatement	 
>448	ReturnStatement	 
>449	Identifier	mFrameCount
<3=11,4
<4=8,5
<5=7,6
<8=10,9
<11=20,16,12
<12=13
<13=15,14
<16=17
<17=19,18
<20=21
<21=32,31,22
<22=30,23
<23=29,24
<24=28,25
<25=27,26
<43=45,44
<49=58,57,50
<50=54,51
<51=53,52
<54=56,55
<58=267,246,239,107,61,59
<59=60
<61=99,62
<62=86,73,63
<63=69,64
<64=65
<65=66
<66=68,67
<69=70
<70=72,71
<73=74
<74=85,75
<75=81,76
<76=79,77
<77=78
<79=80
<81=82
<82=84,83
<86=87
<87=98,97,88
<88=96,89
<89=92,91,90
<92=93
<93=95,94
<99=100
<100=104,101
<101=103,102
<104=106,105
<107=225,108
<108=214,109
<109=208,110
<110=182,111
<111=173,147,112
<112=113
<113=143,134,114
<114=115
<115=121,116
<116=117
<117=118
<118=120,119
<121=122
<122=131,123
<123=130,124
<124=126,125
<126=127
<127=129,128
<131=133,132
<134=139,135
<135=136
<136=138,137
<139=140
<140=142,141
<143=144
<144=146,145
<147=169,157,148
<148=149
<149=156,150
<150=152,151
<152=153
<153=155,154
<157=158
<158=168,167,159
<159=166,160
<160=162,161
<162=163
<163=165,164
<169=170
<170=172,171
<173=174
<174=176,175
<176=178,177
<178=179
<179=181,180
<182=183
<183=207,206,184
<184=205,185
<185=201,186
<186=194,187
<187=188
<188=190,189
<190=191
<191=193,192
<194=195
<195=197,196
<197=198
<198=200,199
<201=202
<202=204,203
<208=209
<209=213,210
<210=212,211
<214=215
<215=224,216
<216=220,217
<217=218
<218=219
<220=221
<221=223,222
<225=226
<226=234,227
<227=231,228
<228=230,229
<231=233,232
<234=238,235
<235=237,236
<239=240
<240=245,244,241
<241=243,242
<246=259,247
<247=248
<248=249
<249=258,250
<250=254,251
<251=252
<252=253
<254=255
<255=257,256
<259=260
<260=264,261
<261=263,262
<264=266,265
<267=268
<268=273,272,269
<269=271,270
<300=312,311,301
<301=308,305,302
<302=304,303
<305=307,306
<308=310,309
<312=399,315,313
<313=314
<315=389,316
<316=385,317
<317=381,358,318
<318=319
<319=354,343,320
<320=335,321
<321=322
<322=323
<323=334,324
<324=330,325
<325=328,326
<326=327
<328=329
<330=331
<331=333,332
<335=336
<336=340,337
<337=339,338
<340=342,341
<343=344
<344=350,345
<345=348,346
<346=347
<348=349
<350=351
<351=353,352
<354=355
<355=357,356
<358=372,365,359
<359=360
<360=364,361
<361=363,362
<365=366
<366=370,367
<367=368
<368=369
<370=371
<372=373
<373=380,379,374
<374=378,375
<375=377,376
<381=382
<382=384,383
<385=386
<386=388,387
<389=390
<390=394,391
<391=393,392
<394=398,395
<395=397,396
<399=400
<400=412,411,401
<401=410,402
<402=408,403
<403=406,404
<404=405
<406=407
<408=409
<428=431,430,429
<431=432
<432=433
<433=435,434
<435=436
<436=438,437
<444=447,446,445
<447=448
<448=449
