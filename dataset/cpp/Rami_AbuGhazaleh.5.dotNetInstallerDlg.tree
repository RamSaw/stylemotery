>3	FunctionDef	CdotNetInstallerDlg 
>4	ParameterList	CWnd * pParent
>5	Parameter	 
>6	Identifier	pParent
>7	ParameterType	CWnd *
>8	ReturnType	include < Version / Version . h >
>9	CompoundStatement	 
>10	ExpressionStatement	 
>11	AssignmentExpr	m_hIcon = AfxGetApp ( ) -> LoadIcon ( IDR_MAINFRAME )
>12	CallExpression	AfxGetApp ( ) -> LoadIcon ( IDR_MAINFRAME )
>13	ArgumentList	IDR_MAINFRAME
>14	Argument	IDR_MAINFRAME
>15	Identifier	IDR_MAINFRAME
>16	Callee	AfxGetApp ( ) -> LoadIcon
>17	PtrMemberAccess	AfxGetApp ( ) -> LoadIcon
>18	Identifier	LoadIcon
>19	CallExpression	AfxGetApp ( )
>20	ArgumentList	 
>21	Callee	AfxGetApp
>22	Identifier	AfxGetApp
>23	Identifier	m_hIcon
>33	FunctionDef	CdotNetInstallerDlg 
>34	ParameterList	CDataExchange * pDX
>35	Parameter	 
>36	Identifier	pDX
>37	ParameterType	CDataExchange *
>38	ReturnType	void
>39	CompoundStatement	 
>40	ExpressionStatement	 
>41	CallExpression	DDX_Control ( pDX , IDC_INFO_LINK , m_InfoLink )
>42	ArgumentList	pDX
>43	Argument	m_InfoLink
>44	Identifier	m_InfoLink
>45	Argument	IDC_INFO_LINK
>46	Identifier	IDC_INFO_LINK
>47	Argument	pDX
>48	Identifier	pDX
>49	Callee	DDX_Control
>50	Identifier	DDX_Control
>51	ExpressionStatement	 
>52	CallExpression	DDX_Control ( pDX , IDC_OPERATING_SYSTEM , m_lblOperatingSystem )
>53	ArgumentList	pDX
>54	Argument	m_lblOperatingSystem
>55	Identifier	m_lblOperatingSystem
>56	Argument	IDC_OPERATING_SYSTEM
>57	Identifier	IDC_OPERATING_SYSTEM
>58	Argument	pDX
>59	Identifier	pDX
>60	Callee	DDX_Control
>61	Identifier	DDX_Control
>62	ExpressionStatement	 
>63	CallExpression	DDX_Control ( pDX , IDC_PICTUREBOX , m_PictureBox )
>64	ArgumentList	pDX
>65	Argument	m_PictureBox
>66	Identifier	m_PictureBox
>67	Argument	IDC_PICTUREBOX
>68	Identifier	IDC_PICTUREBOX
>69	Argument	pDX
>70	Identifier	pDX
>71	Callee	DDX_Control
>72	Identifier	DDX_Control
>73	ExpressionStatement	 
>74	CallExpression	DDX_Control ( pDX , IDC_COMPONENTS_LIST , m_ListBoxComponents )
>75	ArgumentList	pDX
>76	Argument	m_ListBoxComponents
>77	Identifier	m_ListBoxComponents
>78	Argument	IDC_COMPONENTS_LIST
>79	Identifier	IDC_COMPONENTS_LIST
>80	Argument	pDX
>81	Identifier	pDX
>82	Callee	DDX_Control
>83	Identifier	DDX_Control
>84	ExpressionStatement	 
>85	CallExpression	DDX_Control ( pDX , IDC_MESSAGE , m_lblMessage )
>86	ArgumentList	pDX
>87	Argument	m_lblMessage
>88	Identifier	m_lblMessage
>89	Argument	IDC_MESSAGE
>90	Identifier	IDC_MESSAGE
>91	Argument	pDX
>92	Identifier	pDX
>93	Callee	DDX_Control
>94	Identifier	DDX_Control
>95	ExpressionStatement	 
>96	CallExpression	DDX_Control ( pDX , IDCANCEL , m_btnCancel )
>97	ArgumentList	pDX
>98	Argument	m_btnCancel
>99	Identifier	m_btnCancel
>100	Argument	IDCANCEL
>101	Identifier	IDCANCEL
>102	Argument	pDX
>103	Identifier	pDX
>104	Callee	DDX_Control
>105	Identifier	DDX_Control
>106	ExpressionStatement	 
>107	CallExpression	DDX_Control ( pDX , IDC_INSTALL , m_btnInstall )
>108	ArgumentList	pDX
>109	Argument	m_btnInstall
>110	Identifier	m_btnInstall
>111	Argument	IDC_INSTALL
>112	Identifier	IDC_INSTALL
>113	Argument	pDX
>114	Identifier	pDX
>115	Callee	DDX_Control
>116	Identifier	DDX_Control
>117	ExpressionStatement	 
>118	CallExpression	DDX_Control ( pDX , IDC_SKIP , m_btnSkip )
>119	ArgumentList	pDX
>120	Argument	m_btnSkip
>121	Identifier	m_btnSkip
>122	Argument	IDC_SKIP
>123	Identifier	IDC_SKIP
>124	Argument	pDX
>125	Identifier	pDX
>126	Callee	DDX_Control
>127	Identifier	DDX_Control
>128	ExpressionStatement	 
>129	CallExpression	CDialog 
>130	ArgumentList	pDX
>131	Argument	pDX
>132	Identifier	pDX
>133	Callee	CDialog 
>134	Identifier	CDialog 
>155	FunctionDef	CdotNetInstallerDlg 
>156	ParameterList	 
>157	ReturnType	bool
>158	CompoundStatement	 
>159	ReturnStatement	 
>160	EqualityExpression	IDOK == this -> DoModal ( )
>161	CallExpression	this -> DoModal ( )
>162	ArgumentList	 
>163	Callee	this -> DoModal
>164	PtrMemberAccess	this -> DoModal
>165	Identifier	DoModal
>166	Identifier	this
>167	Identifier	IDOK
>175	FunctionDef	CdotNetInstallerDlg 
>176	ParameterList	 
>177	ReturnType	BOOL
>178	CompoundStatement	 
>179	ReturnStatement	 
>180	Identifier	FALSE
>181	CompoundStatement	 
>182	ExpressionStatement	 
>183	CallExpression	Stop ( )
>184	ArgumentList	 
>185	Callee	Stop
>186	Identifier	Stop
>187	ExpressionStatement	 
>188	CallExpression	RecordError ( )
>189	ArgumentList	 
>190	Callee	RecordError
>191	Identifier	RecordError
>192	ExpressionStatement	 
>193	CallExpression	DniMessageBox 
>194	ArgumentList	TEXT ( \"Failed to initialize UI\" )
>195	Argument	MB_OK | MB_ICONSTOP
>196	InclusiveOrExpression	MB_OK | MB_ICONSTOP
>197	Identifier	MB_ICONSTOP
>198	Identifier	MB_OK
>199	Argument	TEXT ( \"Failed to initialize UI\" )
>200	CallExpression	TEXT ( \"Failed to initialize UI\" )
>201	ArgumentList	\"Failed to initialize UI\"
>202	Argument	\"Failed to initialize UI\"
>203	PrimaryExpression	\"Failed to initialize UI\"
>204	Callee	TEXT
>205	Identifier	TEXT
>206	Callee	DniMessageBox 
>207	Identifier	DniMessageBox 
>208	ExpressionStatement	 
>209	Statement	 
>210	Statement	 
>211	Statement	 
>212	Statement	 
>213	Statement	 
>214	Statement	 
>215	Statement	 
>216	Statement	 
>217	Statement	 
>218	Statement	 
>219	Statement	 
>220	BlockStarter	 
>221	CompoundStatement	 
>222	ExpressionStatement	Stop ( )
>223	CallExpression	Stop ( )
>224	ArgumentList	 
>225	Callee	Stop
>226	Identifier	Stop
>227	ExpressionStatement	RecordError ( )
>228	CallExpression	RecordError ( )
>229	ArgumentList	 
>230	Callee	RecordError
>231	Identifier	RecordError
>232	ExpressionStatement	DniMessageBox 
>233	CallExpression	DniMessageBox 
>234	ArgumentList	DVLib 
>235	Argument	MB_OK | MB_ICONSTOP
>236	InclusiveOrExpression	MB_OK | MB_ICONSTOP
>237	Identifier	MB_ICONSTOP
>238	Identifier	MB_OK
>239	Argument	DVLib 
>240	CallExpression	DVLib 
>241	ArgumentList	 
>242	Callee	DVLib 
>243	MemberAccess	DVLib 
>244	Identifier	c_str
>245	CallExpression	DVLib 
>246	ArgumentList	ex . what ( )
>247	Argument	ex . what ( )
>248	CallExpression	ex . what ( )
>249	ArgumentList	 
>250	Callee	ex . what
>251	MemberAccess	ex . what
>252	Identifier	what
>253	Identifier	ex
>254	Callee	DVLib 
>255	Identifier	DVLib 
>256	Callee	DniMessageBox 
>257	Identifier	DniMessageBox 
>258	ExpressionStatement	 
>259	Statement	)
>260	Statement	)
>261	Statement	)
>262	Statement	(
>263	Statement	what
>264	Statement	.
>265	Statement	ex
>266	Statement	(
>267	Statement	string2wstring
>268	Statement	 
>269	Statement	DVLib
>270	Statement	<<
>271	Statement	\"*** Failed to initialize UI
>272	Statement	L
>273	Statement	(
>274	Statement	LOG
>275	Identifier	ex
>276	BlockStarter	 
>277	CompoundStatement	 
>278	ExpressionStatement	Start ( )
>279	CallExpression	Start ( )
>280	ArgumentList	 
>281	Callee	Start
>282	Identifier	Start
>283	ExpressionStatement	AddUserControls ( )
>284	CallExpression	AddUserControls ( )
>285	ArgumentList	 
>286	Callee	AddUserControls
>287	Identifier	AddUserControls
>288	ExpressionStatement	AddElevatedControls ( )
>289	CallExpression	AddElevatedControls ( )
>290	ArgumentList	 
>291	Callee	AddElevatedControls
>292	Identifier	AddElevatedControls
>293	CompoundStatement	 
>294	ExpressionStatement	 
>295	Statement	)
>296	Statement	)
>297	Statement	\"CUSTOM\"
>298	Statement	L
>299	Statement	,
>300	Statement	\"RES_BANNER\"
>301	Statement	L
>302	Statement	,
>303	Statement	m_hInstance
>304	Statement	->
>305	Statement	)
>306	Statement	(
>307	Statement	AfxGetApp
>308	Statement	(
>309	Statement	LoadBitmapFromResource
>310	Statement	 
>311	Statement	DVLib
>312	Statement	(
>313	Statement	SetBitmap
>314	Statement	.
>315	Statement	m_PictureBox
>316	Statement	)
>317	Statement	)
>318	Statement	\"CUSTOM\"
>319	Statement	L
>320	Statement	,
>321	Statement	\"RES_BANNER\"
>322	Statement	L
>323	Statement	,
>324	Statement	m_hInstance
>325	Statement	->
>326	Statement	)
>327	Statement	(
>328	Statement	AfxGetApp
>329	Statement	(
>330	Statement	ResourceExists
>331	Statement	 
>332	Statement	DVLib
>333	Statement	(
>334	IfStatement	if ( ! p_configuration -> dialog_bitmap . empty ( ) && DVLib 
>335	ElseStatement	else
>336	Statement	if
>337	CompoundStatement	 
>338	ExpressionStatement	m_PictureBox . SetBitmap ( DVLib 
>339	CallExpression	m_PictureBox . SetBitmap ( DVLib 
>340	ArgumentList	DVLib 
>341	Argument	DVLib 
>342	CallExpression	DVLib 
>343	ArgumentList	p_configuration -> dialog_bitmap
>344	Argument	p_configuration -> dialog_bitmap
>345	PtrMemberAccess	p_configuration -> dialog_bitmap
>346	Identifier	dialog_bitmap
>347	Identifier	p_configuration
>348	Callee	DVLib 
>349	Identifier	DVLib 
>350	Callee	m_PictureBox . SetBitmap
>351	MemberAccess	m_PictureBox . SetBitmap
>352	Identifier	SetBitmap
>353	Identifier	m_PictureBox
>354	Condition	! p_configuration -> dialog_bitmap . empty ( ) && DVLib 
>355	AndExpression	! p_configuration -> dialog_bitmap . empty ( ) && DVLib 
>356	CallExpression	DVLib 
>357	ArgumentList	p_configuration -> dialog_bitmap
>358	Argument	p_configuration -> dialog_bitmap
>359	PtrMemberAccess	p_configuration -> dialog_bitmap
>360	Identifier	dialog_bitmap
>361	Identifier	p_configuration
>362	Callee	DVLib 
>363	Identifier	DVLib 
>364	UnaryOp	! p_configuration -> dialog_bitmap . empty ( )
>365	CallExpression	p_configuration -> dialog_bitmap . empty ( )
>366	ArgumentList	 
>367	Callee	p_configuration -> dialog_bitmap . empty
>368	MemberAccess	p_configuration -> dialog_bitmap . empty
>369	Identifier	empty
>370	PtrMemberAccess	p_configuration -> dialog_bitmap
>371	Identifier	dialog_bitmap
>372	Identifier	p_configuration
>373	UnaryOperator	!
>374	IfStatement	if ( p_configuration -> dialog_otherinfo_caption . empty ( ) )
>375	ExpressionStatement	m_InfoLink . ShowWindow ( SW_HIDE )
>376	CallExpression	m_InfoLink . ShowWindow ( SW_HIDE )
>377	ArgumentList	SW_HIDE
>378	Argument	SW_HIDE
>379	Identifier	SW_HIDE
>380	Callee	m_InfoLink . ShowWindow
>381	MemberAccess	m_InfoLink . ShowWindow
>382	Identifier	ShowWindow
>383	Identifier	m_InfoLink
>384	Condition	p_configuration -> dialog_otherinfo_caption . empty ( )
>385	CallExpression	p_configuration -> dialog_otherinfo_caption . empty ( )
>386	ArgumentList	 
>387	Callee	p_configuration -> dialog_otherinfo_caption . empty
>388	MemberAccess	p_configuration -> dialog_otherinfo_caption . empty
>389	Identifier	empty
>390	PtrMemberAccess	p_configuration -> dialog_otherinfo_caption
>391	Identifier	dialog_otherinfo_caption
>392	Identifier	p_configuration
>393	ExpressionStatement	m_InfoLink . SetHyperlink ( p_configuration -> dialog_otherinfo_link )
>394	CallExpression	m_InfoLink . SetHyperlink ( p_configuration -> dialog_otherinfo_link )
>395	ArgumentList	p_configuration -> dialog_otherinfo_link
>396	Argument	p_configuration -> dialog_otherinfo_link
>397	PtrMemberAccess	p_configuration -> dialog_otherinfo_link
>398	Identifier	dialog_otherinfo_link
>399	Identifier	p_configuration
>400	Callee	m_InfoLink . SetHyperlink
>401	MemberAccess	m_InfoLink . SetHyperlink
>402	Identifier	SetHyperlink
>403	Identifier	m_InfoLink
>404	ExpressionStatement	m_InfoLink . SetCaption ( p_configuration -> dialog_otherinfo_caption )
>405	CallExpression	m_InfoLink . SetCaption ( p_configuration -> dialog_otherinfo_caption )
>406	ArgumentList	p_configuration -> dialog_otherinfo_caption
>407	Argument	p_configuration -> dialog_otherinfo_caption
>408	PtrMemberAccess	p_configuration -> dialog_otherinfo_caption
>409	Identifier	dialog_otherinfo_caption
>410	Identifier	p_configuration
>411	Callee	m_InfoLink . SetCaption
>412	MemberAccess	m_InfoLink . SetCaption
>413	Identifier	SetCaption
>414	Identifier	m_InfoLink
>415	SwitchStatement	switch ( DialogButton 
>416	CompoundStatement	 
>417	ExpressionStatement	THROW_EX ( \"Unsupported dialog_default_button
>418	CallExpression	THROW_EX ( \"Unsupported dialog_default_button
>419	ArgumentList	\"Unsupported dialog_default_button
>420	Argument	\"Unsupported dialog_default_button
>421	ShiftExpression	\"Unsupported dialog_default_button
>422	CallExpression	p_configuration -> dialog_default_button . GetValue ( )
>423	ArgumentList	 
>424	Callee	p_configuration -> dialog_default_button . GetValue
>425	MemberAccess	p_configuration -> dialog_default_button . GetValue
>426	Identifier	GetValue
>427	PtrMemberAccess	p_configuration -> dialog_default_button
>428	Identifier	dialog_default_button
>429	Identifier	p_configuration
>430	PrimaryExpression	\"Unsupported dialog_default_button
>431	Callee	THROW_EX
>432	Identifier	THROW_EX
>433	Label	default 
>434	Identifier	default
>435	BreakStatement	break ;
>436	ExpressionStatement	SetDefaultButton ( IDC_SKIP )
>437	CallExpression	SetDefaultButton ( IDC_SKIP )
>438	ArgumentList	IDC_SKIP
>439	Argument	IDC_SKIP
>440	Identifier	IDC_SKIP
>441	Callee	SetDefaultButton
>442	Identifier	SetDefaultButton
>443	Label	case DialogButton 
>444	Identifier	DialogButton 
>445	BreakStatement	break ;
>446	ExpressionStatement	SetDefaultButton ( IDC_INSTALL )
>447	CallExpression	SetDefaultButton ( IDC_INSTALL )
>448	ArgumentList	IDC_INSTALL
>449	Argument	IDC_INSTALL
>450	Identifier	IDC_INSTALL
>451	Callee	SetDefaultButton
>452	Identifier	SetDefaultButton
>453	Label	case DialogButton 
>454	Identifier	DialogButton 
>455	BreakStatement	break ;
>456	ExpressionStatement	SetDefaultButton ( IDCANCEL )
>457	CallExpression	SetDefaultButton ( IDCANCEL )
>458	ArgumentList	IDCANCEL
>459	Argument	IDCANCEL
>460	Identifier	IDCANCEL
>461	Callee	SetDefaultButton
>462	Identifier	SetDefaultButton
>463	Label	case DialogButton 
>464	Identifier	DialogButton 
>465	Condition	DialogButton 
>466	CallExpression	DialogButton 
>467	ArgumentList	p_configuration -> dialog_default_button . GetValue ( )
>468	Argument	p_configuration -> dialog_default_button . GetValue ( )
>469	CallExpression	p_configuration -> dialog_default_button . GetValue ( )
>470	ArgumentList	 
>471	Callee	p_configuration -> dialog_default_button . GetValue
>472	MemberAccess	p_configuration -> dialog_default_button . GetValue
>473	Identifier	GetValue
>474	PtrMemberAccess	p_configuration -> dialog_default_button
>475	Identifier	dialog_default_button
>476	Identifier	p_configuration
>477	Callee	DialogButton 
>478	Identifier	DialogButton 
>479	IfStatement	if ( ! InstallUILevelSetting 
>480	CompoundStatement	 
>481	ExpressionStatement	MoveWindow ( m_btnSkip , p_configuration -> dialog_skip_button_position )
>482	CallExpression	MoveWindow ( m_btnSkip , p_configuration -> dialog_skip_button_position )
>483	ArgumentList	m_btnSkip
>484	Argument	p_configuration -> dialog_skip_button_position
>485	PtrMemberAccess	p_configuration -> dialog_skip_button_position
>486	Identifier	dialog_skip_button_position
>487	Identifier	p_configuration
>488	Argument	m_btnSkip
>489	Identifier	m_btnSkip
>490	Callee	MoveWindow
>491	Identifier	MoveWindow
>492	ExpressionStatement	MoveWindow ( m_btnCancel , p_configuration -> dialog_cancel_button_position )
>493	CallExpression	MoveWindow ( m_btnCancel , p_configuration -> dialog_cancel_button_position )
>494	ArgumentList	m_btnCancel
>495	Argument	p_configuration -> dialog_cancel_button_position
>496	PtrMemberAccess	p_configuration -> dialog_cancel_button_position
>497	Identifier	dialog_cancel_button_position
>498	Identifier	p_configuration
>499	Argument	m_btnCancel
>500	Identifier	m_btnCancel
>501	Callee	MoveWindow
>502	Identifier	MoveWindow
>503	ExpressionStatement	MoveWindow ( m_btnInstall , p_configuration -> dialog_install_button_position )
>504	CallExpression	MoveWindow ( m_btnInstall , p_configuration -> dialog_install_button_position )
>505	ArgumentList	m_btnInstall
>506	Argument	p_configuration -> dialog_install_button_position
>507	PtrMemberAccess	p_configuration -> dialog_install_button_position
>508	Identifier	dialog_install_button_position
>509	Identifier	p_configuration
>510	Argument	m_btnInstall
>511	Identifier	m_btnInstall
>512	Callee	MoveWindow
>513	Identifier	MoveWindow
>514	ExpressionStatement	MoveWindow ( m_lblOperatingSystem , p_configuration -> dialog_osinfo_position )
>515	CallExpression	MoveWindow ( m_lblOperatingSystem , p_configuration -> dialog_osinfo_position )
>516	ArgumentList	m_lblOperatingSystem
>517	Argument	p_configuration -> dialog_osinfo_position
>518	PtrMemberAccess	p_configuration -> dialog_osinfo_position
>519	Identifier	dialog_osinfo_position
>520	Identifier	p_configuration
>521	Argument	m_lblOperatingSystem
>522	Identifier	m_lblOperatingSystem
>523	Callee	MoveWindow
>524	Identifier	MoveWindow
>525	ExpressionStatement	MoveWindow ( m_InfoLink , p_configuration -> dialog_otherinfo_link_position )
>526	CallExpression	MoveWindow ( m_InfoLink , p_configuration -> dialog_otherinfo_link_position )
>527	ArgumentList	m_InfoLink
>528	Argument	p_configuration -> dialog_otherinfo_link_position
>529	PtrMemberAccess	p_configuration -> dialog_otherinfo_link_position
>530	Identifier	dialog_otherinfo_link_position
>531	Identifier	p_configuration
>532	Argument	m_InfoLink
>533	Identifier	m_InfoLink
>534	Callee	MoveWindow
>535	Identifier	MoveWindow
>536	ExpressionStatement	MoveWindow ( m_PictureBox , p_configuration -> dialog_bitmap_position )
>537	CallExpression	MoveWindow ( m_PictureBox , p_configuration -> dialog_bitmap_position )
>538	ArgumentList	m_PictureBox
>539	Argument	p_configuration -> dialog_bitmap_position
>540	PtrMemberAccess	p_configuration -> dialog_bitmap_position
>541	Identifier	dialog_bitmap_position
>542	Identifier	p_configuration
>543	Argument	m_PictureBox
>544	Identifier	m_PictureBox
>545	Callee	MoveWindow
>546	Identifier	MoveWindow
>547	ExpressionStatement	MoveWindow ( m_lblMessage , p_configuration -> dialog_message_position )
>548	CallExpression	MoveWindow ( m_lblMessage , p_configuration -> dialog_message_position )
>549	ArgumentList	m_lblMessage
>550	Argument	p_configuration -> dialog_message_position
>551	PtrMemberAccess	p_configuration -> dialog_message_position
>552	Identifier	dialog_message_position
>553	Identifier	p_configuration
>554	Argument	m_lblMessage
>555	Identifier	m_lblMessage
>556	Callee	MoveWindow
>557	Identifier	MoveWindow
>558	ExpressionStatement	MoveWindow ( m_ListBoxComponents , p_configuration -> dialog_components_list_position )
>559	CallExpression	MoveWindow ( m_ListBoxComponents , p_configuration -> dialog_components_list_position )
>560	ArgumentList	m_ListBoxComponents
>561	Argument	p_configuration -> dialog_components_list_position
>562	PtrMemberAccess	p_configuration -> dialog_components_list_position
>563	Identifier	dialog_components_list_position
>564	Identifier	p_configuration
>565	Argument	m_ListBoxComponents
>566	Identifier	m_ListBoxComponents
>567	Callee	MoveWindow
>568	Identifier	MoveWindow
>569	ExpressionStatement	MoveWindow ( * this , p_configuration -> dialog_position )
>570	CallExpression	MoveWindow ( * this , p_configuration -> dialog_position )
>571	ArgumentList	* this
>572	Argument	p_configuration -> dialog_position
>573	PtrMemberAccess	p_configuration -> dialog_position
>574	Identifier	dialog_position
>575	Identifier	p_configuration
>576	Argument	* this
>577	UnaryOp	* this
>578	Identifier	this
>579	UnaryOperator	*
>580	Callee	MoveWindow
>581	Identifier	MoveWindow
>582	Condition	! InstallUILevelSetting 
>583	UnaryOp	! InstallUILevelSetting 
>584	CallExpression	InstallUILevelSetting 
>585	ArgumentList	 
>586	Callee	InstallUILevelSetting 
>587	PtrMemberAccess	InstallUILevelSetting 
>588	Identifier	IsSilent
>589	Identifier	InstallUILevelSetting 
>590	UnaryOperator	!
>591	SwitchStatement	switch ( InstallerSession 
>592	CompoundStatement	 
>593	BreakStatement	break ;
>594	ExpressionStatement	m_lblMessage . SetWindowText ( p_configuration -> dialog_message_uninstall . GetValue ( ) . c_str ( ) )
>595	CallExpression	m_lblMessage . SetWindowText ( p_configuration -> dialog_message_uninstall . GetValue ( ) . c_str ( ) )
>596	ArgumentList	p_configuration -> dialog_message_uninstall . GetValue ( ) . c_str ( )
>597	Argument	p_configuration -> dialog_message_uninstall . GetValue ( ) . c_str ( )
>598	CallExpression	p_configuration -> dialog_message_uninstall . GetValue ( ) . c_str ( )
>599	ArgumentList	 
>600	Callee	p_configuration -> dialog_message_uninstall . GetValue ( ) . c_str
>601	MemberAccess	p_configuration -> dialog_message_uninstall . GetValue ( ) . c_str
>602	Identifier	c_str
>603	CallExpression	p_configuration -> dialog_message_uninstall . GetValue ( )
>604	ArgumentList	 
>605	Callee	p_configuration -> dialog_message_uninstall . GetValue
>606	MemberAccess	p_configuration -> dialog_message_uninstall . GetValue
>607	Identifier	GetValue
>608	PtrMemberAccess	p_configuration -> dialog_message_uninstall
>609	Identifier	dialog_message_uninstall
>610	Identifier	p_configuration
>611	Callee	m_lblMessage . SetWindowText
>612	MemberAccess	m_lblMessage . SetWindowText
>613	Identifier	SetWindowText
>614	Identifier	m_lblMessage
>615	ExpressionStatement	m_btnInstall . SetWindowText ( p_configuration -> uninstall_caption . GetValue ( ) . c_str ( ) )
>616	CallExpression	m_btnInstall . SetWindowText ( p_configuration -> uninstall_caption . GetValue ( ) . c_str ( ) )
>617	ArgumentList	p_configuration -> uninstall_caption . GetValue ( ) . c_str ( )
>618	Argument	p_configuration -> uninstall_caption . GetValue ( ) . c_str ( )
>619	CallExpression	p_configuration -> uninstall_caption . GetValue ( ) . c_str ( )
>620	ArgumentList	 
>621	Callee	p_configuration -> uninstall_caption . GetValue ( ) . c_str
>622	MemberAccess	p_configuration -> uninstall_caption . GetValue ( ) . c_str
>623	Identifier	c_str
>624	CallExpression	p_configuration -> uninstall_caption . GetValue ( )
>625	ArgumentList	 
>626	Callee	p_configuration -> uninstall_caption . GetValue
>627	MemberAccess	p_configuration -> uninstall_caption . GetValue
>628	Identifier	GetValue
>629	PtrMemberAccess	p_configuration -> uninstall_caption
>630	Identifier	uninstall_caption
>631	Identifier	p_configuration
>632	Callee	m_btnInstall . SetWindowText
>633	MemberAccess	m_btnInstall . SetWindowText
>634	Identifier	SetWindowText
>635	Identifier	m_btnInstall
>636	Label	case SequenceUninstall 
>637	Identifier	SequenceUninstall
>638	BreakStatement	break ;
>639	ExpressionStatement	m_lblMessage . SetWindowText ( p_configuration -> dialog_message . GetValue ( ) . c_str ( ) )
>640	CallExpression	m_lblMessage . SetWindowText ( p_configuration -> dialog_message . GetValue ( ) . c_str ( ) )
>641	ArgumentList	p_configuration -> dialog_message . GetValue ( ) . c_str ( )
>642	Argument	p_configuration -> dialog_message . GetValue ( ) . c_str ( )
>643	CallExpression	p_configuration -> dialog_message . GetValue ( ) . c_str ( )
>644	ArgumentList	 
>645	Callee	p_configuration -> dialog_message . GetValue ( ) . c_str
>646	MemberAccess	p_configuration -> dialog_message . GetValue ( ) . c_str
>647	Identifier	c_str
>648	CallExpression	p_configuration -> dialog_message . GetValue ( )
>649	ArgumentList	 
>650	Callee	p_configuration -> dialog_message . GetValue
>651	MemberAccess	p_configuration -> dialog_message . GetValue
>652	Identifier	GetValue
>653	PtrMemberAccess	p_configuration -> dialog_message
>654	Identifier	dialog_message
>655	Identifier	p_configuration
>656	Callee	m_lblMessage . SetWindowText
>657	MemberAccess	m_lblMessage . SetWindowText
>658	Identifier	SetWindowText
>659	Identifier	m_lblMessage
>660	ExpressionStatement	m_btnInstall . SetWindowText ( p_configuration -> install_caption . GetValue ( ) . c_str ( ) )
>661	CallExpression	m_btnInstall . SetWindowText ( p_configuration -> install_caption . GetValue ( ) . c_str ( ) )
>662	ArgumentList	p_configuration -> install_caption . GetValue ( ) . c_str ( )
>663	Argument	p_configuration -> install_caption . GetValue ( ) . c_str ( )
>664	CallExpression	p_configuration -> install_caption . GetValue ( ) . c_str ( )
>665	ArgumentList	 
>666	Callee	p_configuration -> install_caption . GetValue ( ) . c_str
>667	MemberAccess	p_configuration -> install_caption . GetValue ( ) . c_str
>668	Identifier	c_str
>669	CallExpression	p_configuration -> install_caption . GetValue ( )
>670	ArgumentList	 
>671	Callee	p_configuration -> install_caption . GetValue
>672	MemberAccess	p_configuration -> install_caption . GetValue
>673	Identifier	GetValue
>674	PtrMemberAccess	p_configuration -> install_caption
>675	Identifier	install_caption
>676	Identifier	p_configuration
>677	Callee	m_btnInstall . SetWindowText
>678	MemberAccess	m_btnInstall . SetWindowText
>679	Identifier	SetWindowText
>680	Identifier	m_btnInstall
>681	Label	case SequenceInstall 
>682	Identifier	SequenceInstall
>683	Condition	InstallerSession 
>684	PtrMemberAccess	InstallerSession 
>685	Identifier	sequence
>686	Identifier	InstallerSession 
>687	ExpressionStatement	m_btnSkip . SetWindowText ( p_configuration -> skip_caption . GetValue ( ) . c_str ( ) )
>688	CallExpression	m_btnSkip . SetWindowText ( p_configuration -> skip_caption . GetValue ( ) . c_str ( ) )
>689	ArgumentList	p_configuration -> skip_caption . GetValue ( ) . c_str ( )
>690	Argument	p_configuration -> skip_caption . GetValue ( ) . c_str ( )
>691	CallExpression	p_configuration -> skip_caption . GetValue ( ) . c_str ( )
>692	ArgumentList	 
>693	Callee	p_configuration -> skip_caption . GetValue ( ) . c_str
>694	MemberAccess	p_configuration -> skip_caption . GetValue ( ) . c_str
>695	Identifier	c_str
>696	CallExpression	p_configuration -> skip_caption . GetValue ( )
>697	ArgumentList	 
>698	Callee	p_configuration -> skip_caption . GetValue
>699	MemberAccess	p_configuration -> skip_caption . GetValue
>700	Identifier	GetValue
>701	PtrMemberAccess	p_configuration -> skip_caption
>702	Identifier	skip_caption
>703	Identifier	p_configuration
>704	Callee	m_btnSkip . SetWindowText
>705	MemberAccess	m_btnSkip . SetWindowText
>706	Identifier	SetWindowText
>707	Identifier	m_btnSkip
>708	ExpressionStatement	m_btnCancel . SetWindowText ( p_configuration -> cancel_caption . GetValue ( ) . c_str ( ) )
>709	CallExpression	m_btnCancel . SetWindowText ( p_configuration -> cancel_caption . GetValue ( ) . c_str ( ) )
>710	ArgumentList	p_configuration -> cancel_caption . GetValue ( ) . c_str ( )
>711	Argument	p_configuration -> cancel_caption . GetValue ( ) . c_str ( )
>712	CallExpression	p_configuration -> cancel_caption . GetValue ( ) . c_str ( )
>713	ArgumentList	 
>714	Callee	p_configuration -> cancel_caption . GetValue ( ) . c_str
>715	MemberAccess	p_configuration -> cancel_caption . GetValue ( ) . c_str
>716	Identifier	c_str
>717	CallExpression	p_configuration -> cancel_caption . GetValue ( )
>718	ArgumentList	 
>719	Callee	p_configuration -> cancel_caption . GetValue
>720	MemberAccess	p_configuration -> cancel_caption . GetValue
>721	Identifier	GetValue
>722	PtrMemberAccess	p_configuration -> cancel_caption
>723	Identifier	cancel_caption
>724	Identifier	p_configuration
>725	Callee	m_btnCancel . SetWindowText
>726	MemberAccess	m_btnCancel . SetWindowText
>727	Identifier	SetWindowText
>728	Identifier	m_btnCancel
>729	ExpressionStatement	AfxGetApp ( ) -> m_pszAppName = _tcsdup ( p_configuration -> dialog_caption . GetValue ( ) . c_str ( ) )
>730	AssignmentExpr	AfxGetApp ( ) -> m_pszAppName = _tcsdup ( p_configuration -> dialog_caption . GetValue ( ) . c_str ( ) )
>731	CallExpression	_tcsdup ( p_configuration -> dialog_caption . GetValue ( ) . c_str ( ) )
>732	ArgumentList	p_configuration -> dialog_caption . GetValue ( ) . c_str ( )
>733	Argument	p_configuration -> dialog_caption . GetValue ( ) . c_str ( )
>734	CallExpression	p_configuration -> dialog_caption . GetValue ( ) . c_str ( )
>735	ArgumentList	 
>736	Callee	p_configuration -> dialog_caption . GetValue ( ) . c_str
>737	MemberAccess	p_configuration -> dialog_caption . GetValue ( ) . c_str
>738	Identifier	c_str
>739	CallExpression	p_configuration -> dialog_caption . GetValue ( )
>740	ArgumentList	 
>741	Callee	p_configuration -> dialog_caption . GetValue
>742	MemberAccess	p_configuration -> dialog_caption . GetValue
>743	Identifier	GetValue
>744	PtrMemberAccess	p_configuration -> dialog_caption
>745	Identifier	dialog_caption
>746	Identifier	p_configuration
>747	Callee	_tcsdup
>748	Identifier	_tcsdup
>749	PtrMemberAccess	AfxGetApp ( ) -> m_pszAppName
>750	Identifier	m_pszAppName
>751	CallExpression	AfxGetApp ( )
>752	ArgumentList	 
>753	Callee	AfxGetApp
>754	Identifier	AfxGetApp
>755	ExpressionStatement	SetWindowText ( p_configuration -> dialog_caption . GetValue ( ) . c_str ( ) )
>756	CallExpression	SetWindowText ( p_configuration -> dialog_caption . GetValue ( ) . c_str ( ) )
>757	ArgumentList	p_configuration -> dialog_caption . GetValue ( ) . c_str ( )
>758	Argument	p_configuration -> dialog_caption . GetValue ( ) . c_str ( )
>759	CallExpression	p_configuration -> dialog_caption . GetValue ( ) . c_str ( )
>760	ArgumentList	 
>761	Callee	p_configuration -> dialog_caption . GetValue ( ) . c_str
>762	MemberAccess	p_configuration -> dialog_caption . GetValue ( ) . c_str
>763	Identifier	c_str
>764	CallExpression	p_configuration -> dialog_caption . GetValue ( )
>765	ArgumentList	 
>766	Callee	p_configuration -> dialog_caption . GetValue
>767	MemberAccess	p_configuration -> dialog_caption . GetValue
>768	Identifier	GetValue
>769	PtrMemberAccess	p_configuration -> dialog_caption
>770	Identifier	dialog_caption
>771	Identifier	p_configuration
>772	Callee	SetWindowText
>773	Identifier	SetWindowText
>774	ExpressionStatement	 
>775	Statement	)
>776	Statement	\"Invalid configuration\"
>777	Statement	L
>778	Statement	,
>779	Statement	NULL
>780	Statement	!=
>781	Statement	p_configuration
>782	Statement	(
>783	Statement	CHECK_BOOL
>784	ExpressionStatement	get ( m_configuration )
>785	CallExpression	get ( m_configuration )
>786	ArgumentList	m_configuration
>787	Argument	m_configuration
>788	Identifier	m_configuration
>789	Callee	get
>790	Identifier	get
>791	Statement	>
>792	Statement	*
>793	Statement	InstallConfiguration
>794	Statement	<
>795	Statement	reinterpret_cast
>796	Statement	=
>797	Statement	p_configuration
>798	Statement	*
>799	Statement	InstallConfiguration
>800	ExpressionStatement	LoadComponents ( )
>801	CallExpression	LoadComponents ( )
>802	ArgumentList	 
>803	Callee	LoadComponents
>804	Identifier	LoadComponents
>805	IfStatement	if ( ! m_additional_config )
>806	CompoundStatement	 
>807	ExpressionStatement	m_btnSkip . ShowWindow ( SW_HIDE )
>808	CallExpression	m_btnSkip . ShowWindow ( SW_HIDE )
>809	ArgumentList	SW_HIDE
>810	Argument	SW_HIDE
>811	Identifier	SW_HIDE
>812	Callee	m_btnSkip . ShowWindow
>813	MemberAccess	m_btnSkip . ShowWindow
>814	Identifier	ShowWindow
>815	Identifier	m_btnSkip
>816	Condition	! m_additional_config
>817	UnaryOp	! m_additional_config
>818	Identifier	m_additional_config
>819	UnaryOperator	!
>820	ExpressionStatement	 
>821	Statement	)
>822	Statement	)
>823	Statement	(
>824	Statement	c_str
>825	Statement	.
>826	Statement	)
>827	Statement	\")\"
>828	Statement	L
>829	Statement	+
>830	Statement	)
>831	Statement	)
>832	Statement	(
>833	Statement	GetProcessorArchitecture
>834	Statement	 
>835	Statement	DVLib
>836	Statement	(
>837	Statement	pa2wstring
>838	Statement	 
>839	Statement	DVLib
>840	Statement	+
>841	Statement	\" (\"
>842	Statement	L
>843	Statement	+
>844	Statement	)
>845	Statement	(
>846	Statement	GetOperatingSystemVersionString
>847	Statement	 
>848	Statement	DVLib
>849	Statement	(
>850	Statement	(
>851	Statement	SetWindowText
>852	Statement	.
>853	Statement	m_lblOperatingSystem
>854	ExpressionStatement	SetIcon ( m_hIcon , FALSE )
>855	CallExpression	SetIcon ( m_hIcon , FALSE )
>856	ArgumentList	m_hIcon
>857	Argument	FALSE
>858	Identifier	FALSE
>859	Argument	m_hIcon
>860	Identifier	m_hIcon
>861	Callee	SetIcon
>862	Identifier	SetIcon
>863	ExpressionStatement	SetIcon ( m_hIcon , TRUE )
>864	CallExpression	SetIcon ( m_hIcon , TRUE )
>865	ArgumentList	m_hIcon
>866	Argument	TRUE
>867	Identifier	TRUE
>868	Argument	m_hIcon
>869	Identifier	m_hIcon
>870	Callee	SetIcon
>871	Identifier	SetIcon
>872	ExpressionStatement	m_ListBoxComponents . SetExecuteCallback ( this )
>873	CallExpression	m_ListBoxComponents . SetExecuteCallback ( this )
>874	ArgumentList	this
>875	Argument	this
>876	Identifier	this
>877	Callee	m_ListBoxComponents . SetExecuteCallback
>878	MemberAccess	m_ListBoxComponents . SetExecuteCallback
>879	Identifier	SetExecuteCallback
>880	Identifier	m_ListBoxComponents
>881	ExpressionStatement	CDialog 
>882	CallExpression	CDialog 
>883	ArgumentList	 
>884	Callee	CDialog 
>885	Identifier	CDialog 
>967	FunctionDef	CdotNetInstallerDlg 
>968	ParameterList	 
>969	ReturnType	void
>970	CompoundStatement	 
>971	IfStatement	if ( IsIconic ( ) )
>972	ElseStatement	else
>973	CompoundStatement	 
>974	ExpressionStatement	 
>975	CallExpression	CDialog 
>976	ArgumentList	 
>977	Callee	CDialog 
>978	Identifier	CDialog 
>979	CompoundStatement	 
>980	ExpressionStatement	 
>981	CallExpression	dc . DrawIcon ( x , y , m_hIcon )
>982	ArgumentList	x
>983	Argument	m_hIcon
>984	Identifier	m_hIcon
>985	Argument	y
>986	Identifier	y
>987	Argument	x
>988	Identifier	x
>989	Callee	dc . DrawIcon
>990	MemberAccess	dc . DrawIcon
>991	Identifier	DrawIcon
>992	Identifier	dc
>993	IdentifierDeclStatement	 
>994	IdentifierDecl	y = ( rect . Height ( ) - cyIcon + 1 ) / 2
>995	AssignmentExpr	y = ( rect . Height ( ) - cyIcon + 1 ) / 2
>996	MultiplicativeExpression	( rect . Height ( ) - cyIcon + 1 ) / 2
>997	PrimaryExpression	2
>998	AdditiveExpression	rect . Height ( ) - cyIcon + 1
>999	AdditiveExpression	cyIcon + 1
>1000	PrimaryExpression	1
>1001	Identifier	cyIcon
>1002	CallExpression	rect . Height ( )
>1003	ArgumentList	 
>1004	Callee	rect . Height
>1005	MemberAccess	rect . Height
>1006	Identifier	Height
>1007	Identifier	rect
>1008	Identifier	y
>1009	Identifier	y
>1010	IdentifierDeclType	int
>1011	IdentifierDeclStatement	 
>1012	IdentifierDecl	x = ( rect . Width ( ) - cxIcon + 1 ) / 2
>1013	AssignmentExpr	x = ( rect . Width ( ) - cxIcon + 1 ) / 2
>1014	MultiplicativeExpression	( rect . Width ( ) - cxIcon + 1 ) / 2
>1015	PrimaryExpression	2
>1016	AdditiveExpression	rect . Width ( ) - cxIcon + 1
>1017	AdditiveExpression	cxIcon + 1
>1018	PrimaryExpression	1
>1019	Identifier	cxIcon
>1020	CallExpression	rect . Width ( )
>1021	ArgumentList	 
>1022	Callee	rect . Width
>1023	MemberAccess	rect . Width
>1024	Identifier	Width
>1025	Identifier	rect
>1026	Identifier	x
>1027	Identifier	x
>1028	IdentifierDeclType	int
>1029	ExpressionStatement	 
>1030	CallExpression	GetClientRect ( & rect )
>1031	ArgumentList	& rect
>1032	Argument	& rect
>1033	UnaryOp	& rect
>1034	Identifier	rect
>1035	UnaryOperator	&
>1036	Callee	GetClientRect
>1037	Identifier	GetClientRect
>1038	IdentifierDeclStatement	 
>1039	IdentifierDecl	rect
>1040	Identifier	rect
>1041	IdentifierDeclType	CRect
>1042	IdentifierDeclStatement	 
>1043	IdentifierDecl	cyIcon = GetSystemMetrics ( SM_CYICON )
>1044	AssignmentExpr	cyIcon = GetSystemMetrics ( SM_CYICON )
>1045	CallExpression	GetSystemMetrics ( SM_CYICON )
>1046	ArgumentList	SM_CYICON
>1047	Argument	SM_CYICON
>1048	Identifier	SM_CYICON
>1049	Callee	GetSystemMetrics
>1050	Identifier	GetSystemMetrics
>1051	Identifier	cyIcon
>1052	Identifier	cyIcon
>1053	IdentifierDeclType	int
>1054	IdentifierDeclStatement	 
>1055	IdentifierDecl	cxIcon = GetSystemMetrics ( SM_CXICON )
>1056	AssignmentExpr	cxIcon = GetSystemMetrics ( SM_CXICON )
>1057	CallExpression	GetSystemMetrics ( SM_CXICON )
>1058	ArgumentList	SM_CXICON
>1059	Argument	SM_CXICON
>1060	Identifier	SM_CXICON
>1061	Callee	GetSystemMetrics
>1062	Identifier	GetSystemMetrics
>1063	Identifier	cxIcon
>1064	Identifier	cxIcon
>1065	IdentifierDeclType	int
>1066	ExpressionStatement	 
>1067	CallExpression	SendMessage ( WM_ICONERASEBKGND , reinterpret_cast < WPARAM > ( dc . GetSafeHdc ( ) ) , 0 )
>1068	ArgumentList	WM_ICONERASEBKGND
>1069	Argument	0
>1070	PrimaryExpression	0
>1071	Argument	reinterpret_cast < WPARAM > ( dc . GetSafeHdc ( ) )
>1072	RelationalExpression	reinterpret_cast < WPARAM > ( dc . GetSafeHdc ( ) )
>1073	RelationalExpression	WPARAM > ( dc . GetSafeHdc ( ) )
>1074	CallExpression	dc . GetSafeHdc ( )
>1075	ArgumentList	 
>1076	Callee	dc . GetSafeHdc
>1077	MemberAccess	dc . GetSafeHdc
>1078	Identifier	GetSafeHdc
>1079	Identifier	dc
>1080	Identifier	WPARAM
>1081	Identifier	reinterpret_cast
>1082	Argument	WM_ICONERASEBKGND
>1083	Identifier	WM_ICONERASEBKGND
>1084	Callee	SendMessage
>1085	Identifier	SendMessage
>1086	IdentifierDeclStatement	 
>1087	IdentifierDecl	dc ( this )
>1088	Identifier	this
>1089	Identifier	dc
>1090	IdentifierDeclType	CPaintDC
>1091	Condition	 
>1092	CallExpression	IsIconic ( )
>1093	ArgumentList	 
>1094	Callee	IsIconic
>1095	Identifier	IsIconic
>1117	FunctionDef	CdotNetInstallerDlg 
>1118	ParameterList	 
>1119	ReturnType	HCURSOR
>1120	CompoundStatement	 
>1121	ReturnStatement	 
>1122	RelationalExpression	static_cast < HCURSOR > ( m_hIcon )
>1123	RelationalExpression	HCURSOR > ( m_hIcon )
>1124	Identifier	m_hIcon
>1125	Identifier	HCURSOR
>1126	Identifier	static_cast
>1133	FunctionDef	CdotNetInstallerDlg 
>1134	ParameterList	 
>1135	ReturnType	void
>1136	CompoundStatement	 
>1137	ForStatement	for ( int i = 0 ; i < m_ListBoxComponents . GetCount ( ) ; i ++ )
>1138	CompoundStatement	 
>1139	ExpressionStatement	 
>1140	AssignmentExpr	pComponent -> checked = ( m_ListBoxComponents . GetCheck ( i ) == 1 )
>1141	EqualityExpression	m_ListBoxComponents . GetCheck ( i ) == 1
>1142	PrimaryExpression	1
>1143	CallExpression	m_ListBoxComponents . GetCheck ( i )
>1144	ArgumentList	i
>1145	Argument	i
>1146	Identifier	i
>1147	Callee	m_ListBoxComponents . GetCheck
>1148	MemberAccess	m_ListBoxComponents . GetCheck
>1149	Identifier	GetCheck
>1150	Identifier	m_ListBoxComponents
>1151	PtrMemberAccess	pComponent -> checked
>1152	Identifier	checked
>1153	Identifier	pComponent
>1154	IdentifierDeclStatement	 
>1155	IdentifierDecl	* pComponent = ( Component * ) m_ListBoxComponents . GetItemDataPtr ( i )
>1156	AssignmentExpr	* pComponent = ( Component * ) m_ListBoxComponents . GetItemDataPtr ( i )
>1157	CastExpression	( Component * ) m_ListBoxComponents . GetItemDataPtr ( i )
>1158	CallExpression	m_ListBoxComponents . GetItemDataPtr ( i )
>1159	ArgumentList	i
>1160	Argument	i
>1161	Identifier	i
>1162	Callee	m_ListBoxComponents . GetItemDataPtr
>1163	MemberAccess	m_ListBoxComponents . GetItemDataPtr
>1164	Identifier	GetItemDataPtr
>1165	Identifier	m_ListBoxComponents
>1166	CastTarget	Component *
>1167	Identifier	pComponent
>1168	Identifier	pComponent
>1169	IdentifierDeclType	Component *
>1170	IncDecOp	 
>1171	IncDec	++
>1172	Identifier	i
>1173	Condition	 
>1174	RelationalExpression	i < m_ListBoxComponents . GetCount ( )
>1175	CallExpression	m_ListBoxComponents . GetCount ( )
>1176	ArgumentList	 
>1177	Callee	m_ListBoxComponents . GetCount
>1178	MemberAccess	m_ListBoxComponents . GetCount
>1179	Identifier	GetCount
>1180	Identifier	m_ListBoxComponents
>1181	Identifier	i
>1182	ForInit	 
>1183	IdentifierDeclStatement	int i = 0 ;
>1184	IdentifierDecl	i = 0
>1185	AssignmentExpr	i = 0
>1186	PrimaryExpression	0
>1187	Identifier	i
>1188	Identifier	i
>1189	IdentifierDeclType	int
>1201	FunctionDef	CdotNetInstallerDlg 
>1202	ParameterList	 
>1203	ReturnType	void
>1204	CompoundStatement	 
>1205	ExpressionStatement	 
>1206	Statement	 
>1207	Statement	 
>1208	Statement	 
>1209	Statement	 
>1210	Statement	 
>1211	Statement	 
>1212	Statement	 
>1213	Statement	 
>1214	Statement	 
>1215	ExpressionStatement	 
>1216	Statement	 
>1217	Statement	 
>1218	Statement	 
>1219	Statement	 
>1220	Statement	 
>1221	Statement	 
>1222	Statement	 
>1223	Statement	 
>1224	Statement	 
>1225	ExpressionStatement	 
>1226	CallExpression	get ( m_configuration )
>1227	ArgumentList	m_configuration
>1228	Argument	m_configuration
>1229	Identifier	m_configuration
>1230	Callee	get
>1231	Identifier	get
>1232	Statement	 
>1233	Statement	 
>1234	Statement	 
>1235	Statement	 
>1236	Statement	 
>1237	Statement	 
>1238	Statement	 
>1239	Statement	 
>1240	Statement	 
>1241	ExpressionStatement	 
>1242	CallExpression	SetControlValues ( )
>1243	ArgumentList	 
>1244	Callee	SetControlValues
>1245	Identifier	SetControlValues
>1250	FunctionDef	CdotNetInstallerDlg 
>1251	ParameterList	 
>1252	ReturnType	void
>1253	CompoundStatement	 
>1254	CompoundStatement	 
>1255	ExpressionStatement	 
>1256	CallExpression	RecordError ( )
>1257	ArgumentList	 
>1258	Callee	RecordError
>1259	Identifier	RecordError
>1260	ExpressionStatement	 
>1261	CallExpression	DniMessageBox 
>1262	ArgumentList	TEXT ( \"Failed to install one or more components\" )
>1263	Argument	MB_OK | MB_ICONSTOP
>1264	InclusiveOrExpression	MB_OK | MB_ICONSTOP
>1265	Identifier	MB_ICONSTOP
>1266	Identifier	MB_OK
>1267	Argument	TEXT ( \"Failed to install one or more components\" )
>1268	CallExpression	TEXT ( \"Failed to install one or more components\" )
>1269	ArgumentList	\"Failed to install one or more components\"
>1270	Argument	\"Failed to install one or more components\"
>1271	PrimaryExpression	\"Failed to install one or more components\"
>1272	Callee	TEXT
>1273	Identifier	TEXT
>1274	Callee	DniMessageBox 
>1275	Identifier	DniMessageBox 
>1276	ExpressionStatement	 
>1277	Statement	 
>1278	Statement	 
>1279	Statement	 
>1280	Statement	 
>1281	Statement	 
>1282	Statement	 
>1283	Statement	 
>1284	Statement	 
>1285	Statement	 
>1286	Statement	 
>1287	Statement	 
>1288	BlockStarter	 
>1289	CompoundStatement	 
>1290	ExpressionStatement	RecordError ( )
>1291	CallExpression	RecordError ( )
>1292	ArgumentList	 
>1293	Callee	RecordError
>1294	Identifier	RecordError
>1295	ExpressionStatement	DniMessageBox 
>1296	CallExpression	DniMessageBox 
>1297	ArgumentList	DVLib 
>1298	Argument	MB_OK | MB_ICONSTOP
>1299	InclusiveOrExpression	MB_OK | MB_ICONSTOP
>1300	Identifier	MB_ICONSTOP
>1301	Identifier	MB_OK
>1302	Argument	DVLib 
>1303	CallExpression	DVLib 
>1304	ArgumentList	 
>1305	Callee	DVLib 
>1306	MemberAccess	DVLib 
>1307	Identifier	c_str
>1308	CallExpression	DVLib 
>1309	ArgumentList	ex . what ( )
>1310	Argument	ex . what ( )
>1311	CallExpression	ex . what ( )
>1312	ArgumentList	 
>1313	Callee	ex . what
>1314	MemberAccess	ex . what
>1315	Identifier	what
>1316	Identifier	ex
>1317	Callee	DVLib 
>1318	Identifier	DVLib 
>1319	Callee	DniMessageBox 
>1320	Identifier	DniMessageBox 
>1321	ExpressionStatement	 
>1322	Statement	)
>1323	Statement	)
>1324	Statement	)
>1325	Statement	(
>1326	Statement	what
>1327	Statement	.
>1328	Statement	ex
>1329	Statement	(
>1330	Statement	string2wstring
>1331	Statement	 
>1332	Statement	DVLib
>1333	Statement	<<
>1334	Statement	\"*** Failed to install one or more components
>1335	Statement	L
>1336	Statement	(
>1337	Statement	LOG
>1338	Identifier	ex
>1339	BlockStarter	 
>1340	CompoundStatement	 
>1341	ExpressionStatement	InstallerUI 
>1342	CallExpression	InstallerUI 
>1343	ArgumentList	rc
>1344	Argument	rc
>1345	Identifier	rc
>1346	Callee	InstallerUI 
>1347	Identifier	InstallerUI 
>1348	IdentifierDeclStatement	int rc = components . Exec ( this ) ;
>1349	IdentifierDecl	rc = components . Exec ( this )
>1350	AssignmentExpr	rc = components . Exec ( this )
>1351	CallExpression	components . Exec ( this )
>1352	ArgumentList	this
>1353	Argument	this
>1354	Identifier	this
>1355	Callee	components . Exec
>1356	MemberAccess	components . Exec
>1357	Identifier	Exec
>1358	Identifier	components
>1359	Identifier	rc
>1360	Identifier	rc
>1361	IdentifierDeclType	int
>1362	IdentifierDeclStatement	Components components = p_configuration -> GetSupportedComponents ( InstallerSession 
>1363	IdentifierDecl	components = p_configuration -> GetSupportedComponents ( InstallerSession 
>1364	AssignmentExpr	components = p_configuration -> GetSupportedComponents ( InstallerSession 
>1365	CallExpression	p_configuration -> GetSupportedComponents ( InstallerSession 
>1366	ArgumentList	InstallerSession 
>1367	Argument	InstallerSession 
>1368	PtrMemberAccess	InstallerSession 
>1369	Identifier	sequence
>1370	Identifier	InstallerSession 
>1371	Argument	InstallerSession 
>1372	PtrMemberAccess	InstallerSession 
>1373	Identifier	lcidtype
>1374	Identifier	InstallerSession 
>1375	Callee	p_configuration -> GetSupportedComponents
>1376	PtrMemberAccess	p_configuration -> GetSupportedComponents
>1377	Identifier	GetSupportedComponents
>1378	Identifier	p_configuration
>1379	Identifier	components
>1380	Identifier	components
>1381	IdentifierDeclType	Components
>1382	ExpressionStatement	InstallerSession 
>1383	CallExpression	InstallerSession 
>1384	ArgumentList	 
>1385	Callee	InstallerSession 
>1386	PtrMemberAccess	InstallerSession 
>1387	Identifier	DisableRunOnReboot
>1388	Identifier	InstallerSession 
>1389	ExpressionStatement	 
>1390	Statement	)
>1391	Statement	\"Invalid configuration\"
>1392	Statement	L
>1393	Statement	,
>1394	Statement	NULL
>1395	Statement	!=
>1396	Statement	p_configuration
>1397	Statement	(
>1398	Statement	CHECK_BOOL
>1399	ExpressionStatement	get ( m_configuration )
>1400	CallExpression	get ( m_configuration )
>1401	ArgumentList	m_configuration
>1402	Argument	m_configuration
>1403	Identifier	m_configuration
>1404	Callee	get
>1405	Identifier	get
>1406	Statement	>
>1407	Statement	*
>1408	Statement	InstallConfiguration
>1409	Statement	<
>1410	Statement	reinterpret_cast
>1411	Statement	=
>1412	Statement	p_configuration
>1413	Statement	*
>1414	Statement	InstallConfiguration
>1415	IfStatement	if ( RestartElevated ( ) )
>1416	CompoundStatement	 
>1417	ReturnStatement	return ;
>1418	ExpressionStatement	OnCancel ( )
>1419	CallExpression	OnCancel ( )
>1420	ArgumentList	 
>1421	Callee	OnCancel
>1422	Identifier	OnCancel
>1423	Condition	RestartElevated ( )
>1424	CallExpression	RestartElevated ( )
>1425	ArgumentList	 
>1426	Callee	RestartElevated
>1427	Identifier	RestartElevated
>1428	ExpressionStatement	SelectComponents ( )
>1429	CallExpression	SelectComponents ( )
>1430	ArgumentList	 
>1431	Callee	SelectComponents
>1432	Identifier	SelectComponents
>1433	ExpressionStatement	ClearError ( )
>1434	CallExpression	ClearError ( )
>1435	ArgumentList	 
>1436	Callee	ClearError
>1437	Identifier	ClearError
>1438	ExpressionStatement	m_btnSkip . EnableWindow ( FALSE )
>1439	CallExpression	m_btnSkip . EnableWindow ( FALSE )
>1440	ArgumentList	FALSE
>1441	Argument	FALSE
>1442	Identifier	FALSE
>1443	Callee	m_btnSkip . EnableWindow
>1444	MemberAccess	m_btnSkip . EnableWindow
>1445	Identifier	EnableWindow
>1446	Identifier	m_btnSkip
>1447	IdentifierDeclStatement	auto_any < CWnd * , close_enable > btn_skip ( & m_btnSkip ) ;
>1448	IdentifierDecl	btn_skip ( & m_btnSkip )
>1449	UnaryOp	& m_btnSkip
>1450	Identifier	m_btnSkip
>1451	UnaryOperator	&
>1452	Identifier	btn_skip
>1453	IdentifierDeclType	auto_any < CWnd * , close_enable >
>1454	ExpressionStatement	m_btnCancel . EnableWindow ( FALSE )
>1455	CallExpression	m_btnCancel . EnableWindow ( FALSE )
>1456	ArgumentList	FALSE
>1457	Argument	FALSE
>1458	Identifier	FALSE
>1459	Callee	m_btnCancel . EnableWindow
>1460	MemberAccess	m_btnCancel . EnableWindow
>1461	Identifier	EnableWindow
>1462	Identifier	m_btnCancel
>1463	IdentifierDeclStatement	auto_any < CWnd * , close_enable > btn_cancel ( & m_btnCancel ) ;
>1464	IdentifierDecl	btn_cancel ( & m_btnCancel )
>1465	UnaryOp	& m_btnCancel
>1466	Identifier	m_btnCancel
>1467	UnaryOperator	&
>1468	Identifier	btn_cancel
>1469	IdentifierDeclType	auto_any < CWnd * , close_enable >
>1470	ExpressionStatement	m_btnInstall . EnableWindow ( FALSE )
>1471	CallExpression	m_btnInstall . EnableWindow ( FALSE )
>1472	ArgumentList	FALSE
>1473	Argument	FALSE
>1474	Identifier	FALSE
>1475	Callee	m_btnInstall . EnableWindow
>1476	MemberAccess	m_btnInstall . EnableWindow
>1477	Identifier	EnableWindow
>1478	Identifier	m_btnInstall
>1479	IdentifierDeclStatement	auto_any < CWnd * , close_enable > btn_install ( & m_btnInstall ) ;
>1480	IdentifierDecl	btn_install ( & m_btnInstall )
>1481	UnaryOp	& m_btnInstall
>1482	Identifier	m_btnInstall
>1483	UnaryOperator	&
>1484	Identifier	btn_install
>1485	IdentifierDeclType	auto_any < CWnd * , close_enable >
>1516	FunctionDef	CdotNetInstallerDlg 
>1517	ParameterList	bool autoSetChecked
>1518	Parameter	 
>1519	Identifier	autoSetChecked
>1520	ParameterType	bool
>1521	ReturnType	ComponentsStatus
>1522	CompoundStatement	 
>1523	ReturnStatement	 
>1524	Identifier	rc
>1525	ExpressionStatement	 
>1526	CallExpression	m_ListBoxComponents . Load ( pConfiguration )
>1527	ArgumentList	pConfiguration
>1528	Argument	pConfiguration
>1529	Identifier	pConfiguration
>1530	Callee	m_ListBoxComponents . Load
>1531	MemberAccess	m_ListBoxComponents . Load
>1532	Identifier	Load
>1533	Identifier	m_ListBoxComponents
>1534	ExpressionStatement	 
>1535	Statement	 
>1536	Statement	 
>1537	Statement	 
>1538	Statement	 
>1539	Statement	 
>1540	Statement	 
>1541	Statement	 
>1542	Statement	 
>1543	Statement	 
>1544	ExpressionStatement	 
>1545	CallExpression	get ( m_configuration )
>1546	ArgumentList	m_configuration
>1547	Argument	m_configuration
>1548	Identifier	m_configuration
>1549	Callee	get
>1550	Identifier	get
>1551	Statement	 
>1552	Statement	 
>1553	Statement	 
>1554	Statement	 
>1555	Statement	 
>1556	Statement	 
>1557	Statement	 
>1558	Statement	 
>1559	Statement	 
>1560	IdentifierDeclStatement	 
>1561	IdentifierDecl	rc = InstallerUI 
>1562	AssignmentExpr	rc = InstallerUI 
>1563	CallExpression	InstallerUI 
>1564	ArgumentList	autoSetChecked
>1565	Argument	autoSetChecked
>1566	Identifier	autoSetChecked
>1567	Callee	InstallerUI 
>1568	Identifier	InstallerUI 
>1569	Identifier	rc
>1570	Identifier	rc
>1571	IdentifierDeclType	ComponentsStatus
>1581	FunctionDef	CdotNetInstallerDlg 
>1582	ParameterList	const ComponentPtr & component
>1583	Parameter	 
>1584	Identifier	component
>1585	ParameterType	const ComponentPtr &
>1586	ReturnType	void
>1587	CompoundStatement	 
>1588	ExpressionStatement	 
>1589	CallExpression	m_ListBoxComponents . AddComponent ( component )
>1590	ArgumentList	component
>1591	Argument	component
>1592	Identifier	component
>1593	Callee	m_ListBoxComponents . AddComponent
>1594	MemberAccess	m_ListBoxComponents . AddComponent
>1595	Identifier	AddComponent
>1596	Identifier	m_ListBoxComponents
>1602	FunctionDef	CdotNetInstallerDlg 
>1603	ParameterList	 
>1604	ReturnType	void
>1605	CompoundStatement	 
>1606	ExpressionStatement	 
>1607	CallExpression	OnOK ( )
>1608	ArgumentList	 
>1609	Callee	OnOK
>1610	Identifier	OnOK
>1614	FunctionDef	CdotNetInstallerDlg 
>1615	ParameterList	 
>1616	ReturnType	void
>1617	CompoundStatement	 
>1618	ExpressionStatement	 
>1619	CallExpression	InstallerUI 
>1620	ArgumentList	 
>1621	Callee	InstallerUI 
>1622	Identifier	InstallerUI 
>1623	ExpressionStatement	 
>1624	CallExpression	m_custom_controls . clear ( )
>1625	ArgumentList	 
>1626	Callee	m_custom_controls . clear
>1627	MemberAccess	m_custom_controls . clear
>1628	Identifier	clear
>1629	Identifier	m_custom_controls
>1630	CompoundStatement	 
>1631	ExpressionStatement	 
>1632	Identifier	font
>1633	Statement	 
>1634	Statement	 
>1635	Statement	 
>1636	Statement	 
>1637	Statement	 
>1638	Statement	 
>1639	Statement	 
>1640	Statement	 
>1641	Statement	 
>1642	Statement	 
>1643	CompoundStatement	 
>1644	ExpressionStatement	 
>1645	Identifier	control
>1646	Statement	 
>1647	ExpressionStatement	 
>1648	CallExpression	control -> DestroyWindow ( )
>1649	ArgumentList	 
>1650	Callee	control -> DestroyWindow
>1651	PtrMemberAccess	control -> DestroyWindow
>1652	Identifier	DestroyWindow
>1653	Identifier	control
>1654	Statement	 
>1655	Statement	 
>1656	Statement	 
>1657	Statement	 
>1658	Statement	 
>1659	Statement	 
>1660	Statement	 
>1661	Statement	 
>1662	Statement	 
>1663	ExpressionStatement	 
>1664	CallExpression	CDialog 
>1665	ArgumentList	 
>1666	Callee	CDialog 
>1667	Identifier	CDialog 
>1668	ExpressionStatement	 
>1669	CallExpression	CSplashWnd 
>1670	ArgumentList	 
>1671	Callee	CSplashWnd 
>1672	Identifier	CSplashWnd 
>1673	ExpressionStatement	 
>1674	CallExpression	reset ( m_pComponentDlg )
>1675	ArgumentList	m_pComponentDlg
>1676	Argument	m_pComponentDlg
>1677	Identifier	m_pComponentDlg
>1678	Callee	reset
>1679	Identifier	reset
>1686	FunctionDef	CdotNetInstallerDlg 
>1687	ParameterList	 
>1688	ReturnType	void
>1689	CompoundStatement	 
>1690	ExpressionStatement	 
>1691	CallExpression	OnCancel ( )
>1692	ArgumentList	 
>1693	Callee	OnCancel
>1694	Identifier	OnCancel
>1695	ExpressionStatement	 
>1696	CallExpression	RecordError ( - 2 )
>1697	ArgumentList	- 2
>1698	Argument	- 2
>1699	UnaryOp	- 2
>1700	PrimaryExpression	2
>1701	UnaryOperator	-
>1702	Callee	RecordError
>1703	Identifier	RecordError
>1707	FunctionDef	CdotNetInstallerDlg 
>1708	ParameterList	const std 
>1709	Parameter	 
>1710	Identifier	display_progress
>1711	ParameterType	bool
>1712	Parameter	 
>1713	Identifier	id
>1714	ParameterType	const std 
>1715	ReturnType	void
>1716	CompoundStatement	 
>1717	ExpressionStatement	 
>1718	CallExpression	p_extractcab -> EndExec ( )
>1719	ArgumentList	 
>1720	Callee	p_extractcab -> EndExec
>1721	PtrMemberAccess	p_extractcab -> EndExec
>1722	Identifier	EndExec
>1723	Identifier	p_extractcab
>1724	IfStatement	if ( display_progress && InstallUILevelSetting 
>1725	ExpressionStatement	 
>1726	CallExpression	dlg . DoModal ( )
>1727	ArgumentList	 
>1728	Callee	dlg . DoModal
>1729	MemberAccess	dlg . DoModal
>1730	Identifier	DoModal
>1731	Identifier	dlg
>1732	Condition	 
>1733	AndExpression	display_progress && InstallUILevelSetting 
>1734	CallExpression	InstallUILevelSetting 
>1735	ArgumentList	 
>1736	Callee	InstallUILevelSetting 
>1737	PtrMemberAccess	InstallUILevelSetting 
>1738	Identifier	IsAnyUI
>1739	Identifier	InstallUILevelSetting 
>1740	Identifier	display_progress
>1741	ExpressionStatement	 
>1742	CallExpression	p_extractcab -> BeginExec ( )
>1743	ArgumentList	 
>1744	Callee	p_extractcab -> BeginExec
>1745	PtrMemberAccess	p_extractcab -> BeginExec
>1746	Identifier	BeginExec
>1747	Identifier	p_extractcab
>1748	ExpressionStatement	 
>1749	AssignmentExpr	p_extractcab -> cab_cancelled_message = p_configuration -> cab_cancelled_message
>1750	PtrMemberAccess	p_configuration -> cab_cancelled_message
>1751	Identifier	cab_cancelled_message
>1752	Identifier	p_configuration
>1753	PtrMemberAccess	p_extractcab -> cab_cancelled_message
>1754	Identifier	cab_cancelled_message
>1755	Identifier	p_extractcab
>1756	ExpressionStatement	 
>1757	AssignmentExpr	p_extractcab -> cab_path = p_configuration -> cab_path
>1758	PtrMemberAccess	p_configuration -> cab_path
>1759	Identifier	cab_path
>1760	Identifier	p_configuration
>1761	PtrMemberAccess	p_extractcab -> cab_path
>1762	Identifier	cab_path
>1763	Identifier	p_extractcab
>1764	ExpressionStatement	 
>1765	CallExpression	get ( m_configuration )
>1766	ArgumentList	m_configuration
>1767	Argument	m_configuration
>1768	Identifier	m_configuration
>1769	Callee	get
>1770	Identifier	get
>1771	Statement	 
>1772	Statement	 
>1773	Statement	 
>1774	Statement	 
>1775	Statement	 
>1776	Statement	 
>1777	Statement	 
>1778	Statement	 
>1779	Statement	 
>1780	IfStatement	if ( display_progress && InstallUILevelSetting 
>1781	ExpressionStatement	 
>1782	CallExpression	dlg . LoadComponent ( m_configuration , p_extractcab )
>1783	ArgumentList	m_configuration
>1784	Argument	p_extractcab
>1785	Identifier	p_extractcab
>1786	Argument	m_configuration
>1787	Identifier	m_configuration
>1788	Callee	dlg . LoadComponent
>1789	MemberAccess	dlg . LoadComponent
>1790	Identifier	LoadComponent
>1791	Identifier	dlg
>1792	Condition	 
>1793	AndExpression	display_progress && InstallUILevelSetting 
>1794	CallExpression	InstallUILevelSetting 
>1795	ArgumentList	 
>1796	Callee	InstallUILevelSetting 
>1797	PtrMemberAccess	InstallUILevelSetting 
>1798	Identifier	IsAnyUI
>1799	Identifier	InstallUILevelSetting 
>1800	Identifier	display_progress
>1801	ExpressionStatement	 
>1802	Statement	 
>1803	Statement	 
>1804	Statement	 
>1805	Statement	 
>1806	Statement	 
>1807	Statement	 
>1808	Statement	 
>1809	Statement	 
>1810	Statement	 
>1811	Statement	 
>1812	Statement	 
>1813	Statement	 
>1814	Statement	 
>1815	Statement	 
>1816	Statement	 
>1817	Statement	 
>1818	Statement	 
>1819	Statement	 
>1820	Statement	 
>1821	Statement	 
>1822	Statement	 
>1823	Statement	 
>1824	Statement	 
>1825	Statement	 
>1826	Statement	 
>1827	Statement	 
>1828	IfStatement	if ( cab_count == 0 )
>1829	CompoundStatement	 
>1830	ReturnStatement	 
>1831	ExpressionStatement	 
>1832	Statement	 
>1833	Statement	 
>1834	Statement	 
>1835	Statement	 
>1836	Statement	 
>1837	Statement	 
>1838	Statement	 
>1839	Statement	 
>1840	Statement	 
>1841	Statement	 
>1842	Statement	 
>1843	Statement	 
>1844	Statement	 
>1845	Statement	 
>1846	Statement	 
>1847	Statement	 
>1848	Statement	 
>1849	Statement	 
>1850	Statement	 
>1851	Statement	 
>1852	Statement	 
>1853	Condition	 
>1854	EqualityExpression	cab_count == 0
>1855	PrimaryExpression	0
>1856	Identifier	cab_count
>1857	IdentifierDeclStatement	 
>1858	IdentifierDecl	cab_count = p_extractcab -> GetCabCount ( )
>1859	AssignmentExpr	cab_count = p_extractcab -> GetCabCount ( )
>1860	CallExpression	p_extractcab -> GetCabCount ( )
>1861	ArgumentList	 
>1862	Callee	p_extractcab -> GetCabCount
>1863	PtrMemberAccess	p_extractcab -> GetCabCount
>1864	Identifier	GetCabCount
>1865	Identifier	p_extractcab
>1866	Identifier	cab_count
>1867	Identifier	cab_count
>1868	IdentifierDeclType	int
>1869	IdentifierDeclStatement	 
>1870	IdentifierDecl	p_extractcab ( new ExtractCabProcessor ( AfxGetApp ( ) -> m_hInstance , id , & dlg ) )
>1871	Expression	AfxGetApp ( ) -> m_hInstance , id , & dlg
>1872	Expression	id , & dlg
>1873	UnaryOp	& dlg
>1874	Identifier	dlg
>1875	UnaryOperator	&
>1876	Identifier	id
>1877	PtrMemberAccess	AfxGetApp ( ) -> m_hInstance
>1878	Identifier	m_hInstance
>1879	CallExpression	AfxGetApp ( )
>1880	ArgumentList	 
>1881	Callee	AfxGetApp
>1882	Identifier	AfxGetApp
>1883	Identifier	p_extractcab
>1884	IdentifierDeclType	ExtractCabProcessorPtr
>1885	IdentifierDeclStatement	 
>1886	IdentifierDecl	dlg
>1887	Identifier	dlg
>1888	IdentifierDeclType	ExtractCabDlg
>1910	FunctionDef	CdotNetInstallerDlg 
>1911	ParameterList	CWnd & dlg , const WidgetPosition & pos
>1912	Parameter	 
>1913	Identifier	pos
>1914	ParameterType	const WidgetPosition &
>1915	Parameter	 
>1916	Identifier	dlg
>1917	ParameterType	CWnd &
>1918	ReturnType	bool
>1919	CompoundStatement	 
>1920	ReturnStatement	 
>1921	Identifier	true
>1922	ExpressionStatement	 
>1923	CallExpression	dlg . SetWindowPlacement ( & wpc )
>1924	ArgumentList	& wpc
>1925	Argument	& wpc
>1926	UnaryOp	& wpc
>1927	Identifier	wpc
>1928	UnaryOperator	&
>1929	Callee	dlg . SetWindowPlacement
>1930	MemberAccess	dlg . SetWindowPlacement
>1931	Identifier	SetWindowPlacement
>1932	Identifier	dlg
>1933	ExpressionStatement	 
>1934	AssignmentExpr	wpc . rcNormalPosition = current . ToRect ( )
>1935	CallExpression	current . ToRect ( )
>1936	ArgumentList	 
>1937	Callee	current . ToRect
>1938	MemberAccess	current . ToRect
>1939	Identifier	ToRect
>1940	Identifier	current
>1941	MemberAccess	wpc . rcNormalPosition
>1942	Identifier	rcNormalPosition
>1943	Identifier	wpc
>1944	IfStatement	if ( pos . Height ( ) != 0 )
>1945	ExpressionStatement	 
>1946	CallExpression	current . Height ( pos . Height ( ) )
>1947	ArgumentList	pos . Height ( )
>1948	Argument	pos . Height ( )
>1949	CallExpression	pos . Height ( )
>1950	ArgumentList	 
>1951	Callee	pos . Height
>1952	MemberAccess	pos . Height
>1953	Identifier	Height
>1954	Identifier	pos
>1955	Callee	current . Height
>1956	MemberAccess	current . Height
>1957	Identifier	Height
>1958	Identifier	current
>1959	Condition	 
>1960	EqualityExpression	pos . Height ( ) != 0
>1961	PrimaryExpression	0
>1962	CallExpression	pos . Height ( )
>1963	ArgumentList	 
>1964	Callee	pos . Height
>1965	MemberAccess	pos . Height
>1966	Identifier	Height
>1967	Identifier	pos
>1968	IfStatement	if ( pos . Top ( ) != 0 )
>1969	ExpressionStatement	 
>1970	CallExpression	current . Top ( pos . Top ( ) )
>1971	ArgumentList	pos . Top ( )
>1972	Argument	pos . Top ( )
>1973	CallExpression	pos . Top ( )
>1974	ArgumentList	 
>1975	Callee	pos . Top
>1976	MemberAccess	pos . Top
>1977	Identifier	Top
>1978	Identifier	pos
>1979	Callee	current . Top
>1980	MemberAccess	current . Top
>1981	Identifier	Top
>1982	Identifier	current
>1983	Condition	 
>1984	EqualityExpression	pos . Top ( ) != 0
>1985	PrimaryExpression	0
>1986	CallExpression	pos . Top ( )
>1987	ArgumentList	 
>1988	Callee	pos . Top
>1989	MemberAccess	pos . Top
>1990	Identifier	Top
>1991	Identifier	pos
>1992	IfStatement	if ( pos . Width ( ) != 0 )
>1993	ExpressionStatement	 
>1994	CallExpression	current . Width ( pos . Width ( ) )
>1995	ArgumentList	pos . Width ( )
>1996	Argument	pos . Width ( )
>1997	CallExpression	pos . Width ( )
>1998	ArgumentList	 
>1999	Callee	pos . Width
>2000	MemberAccess	pos . Width
>2001	Identifier	Width
>2002	Identifier	pos
>2003	Callee	current . Width
>2004	MemberAccess	current . Width
>2005	Identifier	Width
>2006	Identifier	current
>2007	Condition	 
>2008	EqualityExpression	pos . Width ( ) != 0
>2009	PrimaryExpression	0
>2010	CallExpression	pos . Width ( )
>2011	ArgumentList	 
>2012	Callee	pos . Width
>2013	MemberAccess	pos . Width
>2014	Identifier	Width
>2015	Identifier	pos
>2016	IfStatement	if ( pos . Left ( ) != 0 )
>2017	ExpressionStatement	 
>2018	CallExpression	current . Left ( pos . Left ( ) )
>2019	ArgumentList	pos . Left ( )
>2020	Argument	pos . Left ( )
>2021	CallExpression	pos . Left ( )
>2022	ArgumentList	 
>2023	Callee	pos . Left
>2024	MemberAccess	pos . Left
>2025	Identifier	Left
>2026	Identifier	pos
>2027	Callee	current . Left
>2028	MemberAccess	current . Left
>2029	Identifier	Left
>2030	Identifier	current
>2031	Condition	 
>2032	EqualityExpression	pos . Left ( ) != 0
>2033	PrimaryExpression	0
>2034	CallExpression	pos . Left ( )
>2035	ArgumentList	 
>2036	Callee	pos . Left
>2037	MemberAccess	pos . Left
>2038	Identifier	Left
>2039	Identifier	pos
>2040	ExpressionStatement	 
>2041	CallExpression	current . FromRect ( wpc . rcNormalPosition )
>2042	ArgumentList	wpc . rcNormalPosition
>2043	Argument	wpc . rcNormalPosition
>2044	MemberAccess	wpc . rcNormalPosition
>2045	Identifier	rcNormalPosition
>2046	Identifier	wpc
>2047	Callee	current . FromRect
>2048	MemberAccess	current . FromRect
>2049	Identifier	FromRect
>2050	Identifier	current
>2051	IdentifierDeclStatement	 
>2052	IdentifierDecl	current
>2053	Identifier	current
>2054	IdentifierDeclType	WidgetPosition
>2055	ExpressionStatement	 
>2056	CallExpression	dlg . GetWindowPlacement ( & wpc )
>2057	ArgumentList	& wpc
>2058	Argument	& wpc
>2059	UnaryOp	& wpc
>2060	Identifier	wpc
>2061	UnaryOperator	&
>2062	Callee	dlg . GetWindowPlacement
>2063	MemberAccess	dlg . GetWindowPlacement
>2064	Identifier	GetWindowPlacement
>2065	Identifier	dlg
>2066	IdentifierDeclStatement	 
>2067	IdentifierDecl	wpc
>2068	Identifier	wpc
>2069	IdentifierDeclType	WINDOWPLACEMENT
>2070	IfStatement	if ( ! pos . IsSet ( ) )
>2071	ReturnStatement	 
>2072	Identifier	false
>2073	Condition	 
>2074	UnaryOp	! pos . IsSet ( )
>2075	CallExpression	pos . IsSet ( )
>2076	ArgumentList	 
>2077	Callee	pos . IsSet
>2078	MemberAccess	pos . IsSet
>2079	Identifier	IsSet
>2080	Identifier	pos
>2081	UnaryOperator	!
>2099	FunctionDef	CdotNetInstallerDlg 
>2100	ParameterList	const DownloadDialogPtr & p_Configuration
>2101	Parameter	 
>2102	Identifier	p_Configuration
>2103	ParameterType	const DownloadDialogPtr &
>2104	ReturnType	bool
>2105	CompoundStatement	 
>2106	ReturnStatement	 
>2107	CallExpression	downloaddlg . IsDownloadCompleted ( )
>2108	ArgumentList	 
>2109	Callee	downloaddlg . IsDownloadCompleted
>2110	MemberAccess	downloaddlg . IsDownloadCompleted
>2111	Identifier	IsDownloadCompleted
>2112	Identifier	downloaddlg
>2113	ExpressionStatement	 
>2114	CallExpression	downloaddlg . DoModal ( )
>2115	ArgumentList	 
>2116	Callee	downloaddlg . DoModal
>2117	MemberAccess	downloaddlg . DoModal
>2118	Identifier	DoModal
>2119	Identifier	downloaddlg
>2120	IdentifierDeclStatement	 
>2121	IdentifierDecl	downloaddlg ( p_Configuration , this )
>2122	Expression	p_Configuration , this
>2123	Identifier	this
>2124	Identifier	p_Configuration
>2125	Identifier	downloaddlg
>2126	IdentifierDeclType	CDownloadDialog
>2127	IfStatement	if ( ! p_Configuration -> IsRequired ( ) )
>2128	CompoundStatement	 
>2129	ReturnStatement	 
>2130	Identifier	true
>2131	ExpressionStatement	 
>2132	Statement	 
>2133	Statement	 
>2134	Statement	 
>2135	Statement	 
>2136	Statement	 
>2137	Statement	 
>2138	Statement	 
>2139	Statement	 
>2140	Statement	 
>2141	Statement	 
>2142	Statement	 
>2143	Statement	 
>2144	Condition	 
>2145	UnaryOp	! p_Configuration -> IsRequired ( )
>2146	CallExpression	p_Configuration -> IsRequired ( )
>2147	ArgumentList	 
>2148	Callee	p_Configuration -> IsRequired
>2149	PtrMemberAccess	p_Configuration -> IsRequired
>2150	Identifier	IsRequired
>2151	Identifier	p_Configuration
>2152	UnaryOperator	!
>2162	FunctionDef	CdotNetInstallerDlg 
>2163	ParameterList	const ComponentPtr & component
>2164	Parameter	 
>2165	Identifier	component
>2166	ParameterType	const ComponentPtr &
>2167	ReturnType	bool
>2168	CompoundStatement	 
>2169	ReturnStatement	 
>2170	Identifier	rc
>2171	ExpressionStatement	 
>2172	CallExpression	m_pComponentDlg -> LoadComponent ( m_configuration , component )
>2173	ArgumentList	m_configuration
>2174	Argument	component
>2175	Identifier	component
>2176	Argument	m_configuration
>2177	Identifier	m_configuration
>2178	Callee	m_pComponentDlg -> LoadComponent
>2179	PtrMemberAccess	m_pComponentDlg -> LoadComponent
>2180	Identifier	LoadComponent
>2181	Identifier	m_pComponentDlg
>2182	ExpressionStatement	 
>2183	CallExpression	reset ( m_pComponentDlg , new InstallComponentDlg ( this ) )
>2184	ArgumentList	m_pComponentDlg
>2185	Argument	this
>2186	Identifier	this
>2187	Argument	m_pComponentDlg
>2188	Identifier	m_pComponentDlg
>2189	Callee	reset
>2190	Identifier	reset
>2191	IdentifierDeclStatement	 
>2192	IdentifierDecl	rc = InstallerUI 
>2193	AssignmentExpr	rc = InstallerUI 
>2194	CallExpression	InstallerUI 
>2195	ArgumentList	component
>2196	Argument	component
>2197	Identifier	component
>2198	Callee	InstallerUI 
>2199	Identifier	InstallerUI 
>2200	Identifier	rc
>2201	Identifier	rc
>2202	IdentifierDeclType	bool
>2212	FunctionDef	CdotNetInstallerDlg 
>2213	ParameterList	const ComponentPtr & component
>2214	Parameter	 
>2215	Identifier	component
>2216	ParameterType	const ComponentPtr &
>2217	ReturnType	bool
>2218	CompoundStatement	 
>2219	ReturnStatement	 
>2220	Identifier	true
>2221	IfStatement	if ( InstallUILevelSetting 
>2222	CompoundStatement	 
>2223	IfStatement	if ( p_configuration -> show_progress_dialog && component -> show_progress_dialog )
>2224	CompoundStatement	 
>2225	ExpressionStatement	 
>2226	Statement	 
>2227	Statement	 
>2228	Statement	 
>2229	Statement	 
>2230	Statement	 
>2231	Statement	 
>2232	Statement	 
>2233	Statement	 
>2234	Statement	 
>2235	Statement	 
>2236	Statement	 
>2237	Statement	 
>2238	Statement	 
>2239	Statement	 
>2240	Statement	 
>2241	Statement	 
>2242	Statement	 
>2243	Statement	 
>2244	Statement	 
>2245	Statement	 
>2246	Statement	 
>2247	ExpressionStatement	 
>2248	CallExpression	m_pComponentDlg -> DoModal ( )
>2249	ArgumentList	 
>2250	Callee	m_pComponentDlg -> DoModal
>2251	PtrMemberAccess	m_pComponentDlg -> DoModal
>2252	Identifier	DoModal
>2253	Identifier	m_pComponentDlg
>2254	Condition	 
>2255	AndExpression	p_configuration -> show_progress_dialog && component -> show_progress_dialog
>2256	PtrMemberAccess	component -> show_progress_dialog
>2257	Identifier	show_progress_dialog
>2258	Identifier	component
>2259	PtrMemberAccess	p_configuration -> show_progress_dialog
>2260	Identifier	show_progress_dialog
>2261	Identifier	p_configuration
>2262	ExpressionStatement	 
>2263	Statement	 
>2264	Statement	 
>2265	Statement	 
>2266	Statement	 
>2267	Statement	 
>2268	Statement	 
>2269	Statement	 
>2270	Statement	 
>2271	Statement	 
>2272	ExpressionStatement	 
>2273	CallExpression	get ( m_configuration )
>2274	ArgumentList	m_configuration
>2275	Argument	m_configuration
>2276	Identifier	m_configuration
>2277	Callee	get
>2278	Identifier	get
>2279	Statement	 
>2280	Statement	 
>2281	Statement	 
>2282	Statement	 
>2283	Statement	 
>2284	Statement	 
>2285	Statement	 
>2286	Statement	 
>2287	Statement	 
>2288	Condition	 
>2289	CallExpression	InstallUILevelSetting 
>2290	ArgumentList	 
>2291	Callee	InstallUILevelSetting 
>2292	PtrMemberAccess	InstallUILevelSetting 
>2293	Identifier	IsAnyUI
>2294	Identifier	InstallUILevelSetting 
>2310	FunctionDef	CdotNetInstallerDlg 
>2311	ParameterList	const ComponentPtr & component
>2312	Parameter	 
>2313	Identifier	component
>2314	ParameterType	const ComponentPtr &
>2315	ReturnType	bool
>2316	CompoundStatement	 
>2317	ReturnStatement	 
>2318	CallExpression	InstallerUI 
>2319	ArgumentList	component
>2320	Argument	component
>2321	Identifier	component
>2322	Callee	InstallerUI 
>2323	Identifier	InstallerUI 
>2329	FunctionDef	CdotNetInstallerDlg 
>2330	ParameterList	const ComponentPtr & component , std 
>2331	Parameter	 
>2332	Identifier	ex
>2333	ParameterType	std 
>2334	Parameter	 
>2335	Identifier	component
>2336	ParameterType	const ComponentPtr &
>2337	ReturnType	bool
>2338	CompoundStatement	 
>2339	ReturnStatement	 
>2340	CallExpression	InstallerUI 
>2341	ArgumentList	component
>2342	Argument	ex
>2343	Identifier	ex
>2344	Argument	component
>2345	Identifier	component
>2346	Callee	InstallerUI 
>2347	Identifier	InstallerUI 
>2354	FunctionDef	CdotNetInstallerDlg 
>2355	ParameterList	const ControlLabel & label
>2356	Parameter	 
>2357	Identifier	label
>2358	ParameterType	const ControlLabel &
>2359	ReturnType	void
>2360	CompoundStatement	 
>2361	ExpressionStatement	 
>2362	CallExpression	m_custom_controls . push_back ( p_static )
>2363	ArgumentList	p_static
>2364	Argument	p_static
>2365	Identifier	p_static
>2366	Callee	m_custom_controls . push_back
>2367	MemberAccess	m_custom_controls . push_back
>2368	Identifier	push_back
>2369	Identifier	m_custom_controls
>2370	ExpressionStatement	 
>2371	CallExpression	p_static -> SetFont ( CreateFont ( label ) )
>2372	ArgumentList	CreateFont ( label )
>2373	Argument	CreateFont ( label )
>2374	CallExpression	CreateFont ( label )
>2375	ArgumentList	label
>2376	Argument	label
>2377	Identifier	label
>2378	Callee	CreateFont
>2379	Identifier	CreateFont
>2380	Callee	p_static -> SetFont
>2381	PtrMemberAccess	p_static -> SetFont
>2382	Identifier	SetFont
>2383	Identifier	p_static
>2384	ExpressionStatement	 
>2385	CallExpression	p_static -> EnableWindow ( label . IsEnabled ( ) )
>2386	ArgumentList	label . IsEnabled ( )
>2387	Argument	label . IsEnabled ( )
>2388	CallExpression	label . IsEnabled ( )
>2389	ArgumentList	 
>2390	Callee	label . IsEnabled
>2391	MemberAccess	label . IsEnabled
>2392	Identifier	IsEnabled
>2393	Identifier	label
>2394	Callee	p_static -> EnableWindow
>2395	PtrMemberAccess	p_static -> EnableWindow
>2396	Identifier	EnableWindow
>2397	Identifier	p_static
>2398	ExpressionStatement	 
>2399	CallExpression	p_static -> Create ( label . text . GetValue ( ) . c_str ( ) , WS_CHILD | WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX , \
>2400	ArgumentList	label . text . GetValue ( ) . c_str ( )
>2401	Argument	this
>2402	Identifier	this
>2403	Argument	label . position . ToRect ( )
>2404	CallExpression	label . position . ToRect ( )
>2405	ArgumentList	 
>2406	Callee	label . position . ToRect
>2407	MemberAccess	label . position . ToRect
>2408	Identifier	ToRect
>2409	MemberAccess	label . position
>2410	Identifier	position
>2411	Identifier	label
>2412	Argument	WS_CHILD | WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX
>2413	InclusiveOrExpression	WS_CHILD | WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX
>2414	InclusiveOrExpression	WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX
>2415	InclusiveOrExpression	WS_TABSTOP | SS_NOPREFIX
>2416	Identifier	SS_NOPREFIX
>2417	Identifier	WS_TABSTOP
>2418	Identifier	WS_VISIBLE
>2419	Identifier	WS_CHILD
>2420	Argument	label . text . GetValue ( ) . c_str ( )
>2421	CallExpression	label . text . GetValue ( ) . c_str ( )
>2422	ArgumentList	 
>2423	Callee	label . text . GetValue ( ) . c_str
>2424	MemberAccess	label . text . GetValue ( ) . c_str
>2425	Identifier	c_str
>2426	CallExpression	label . text . GetValue ( )
>2427	ArgumentList	 
>2428	Callee	label . text . GetValue
>2429	MemberAccess	label . text . GetValue
>2430	Identifier	GetValue
>2431	MemberAccess	label . text
>2432	Identifier	text
>2433	Identifier	label
>2434	Callee	p_static -> Create
>2435	PtrMemberAccess	p_static -> Create
>2436	Identifier	Create
>2437	Identifier	p_static
>2438	IdentifierDeclStatement	 
>2439	IdentifierDecl	* p_static = new CStatic ( )
>2440	AssignmentExpr	* p_static = new CStatic ( )
>2441	UnaryExpression	new CStatic ( )
>2442	Identifier	p_static
>2443	Identifier	p_static
>2444	IdentifierDeclType	CStatic *
>2463	FunctionDef	CdotNetInstallerDlg 
>2464	ParameterList	const ControlText & text
>2465	Parameter	 
>2466	Identifier	text
>2467	ParameterType	const ControlText &
>2468	ReturnType	CFont *
>2469	CompoundStatement	 
>2470	ReturnStatement	 
>2471	Identifier	p_font
>2472	ExpressionStatement	 
>2473	CallExpression	m_custom_fonts . push_back ( p_font )
>2474	ArgumentList	p_font
>2475	Argument	p_font
>2476	Identifier	p_font
>2477	Callee	m_custom_fonts . push_back
>2478	MemberAccess	m_custom_fonts . push_back
>2479	Identifier	push_back
>2480	Identifier	m_custom_fonts
>2481	ExpressionStatement	 
>2482	CallExpression	p_font -> CreateFont ( nFontHeight , 0 , 0 , 0 , FW_NORMAL , FALSE , FALSE , FALSE , DEFAULT_CHARSET , OUT_DEFAULT_\
>2483	ArgumentList	nFontHeight
>2484	Argument	text . font_name . GetValue ( ) . c_str ( )
>2485	CallExpression	text . font_name . GetValue ( ) . c_str ( )
>2486	ArgumentList	 
>2487	Callee	text . font_name . GetValue ( ) . c_str
>2488	MemberAccess	text . font_name . GetValue ( ) . c_str
>2489	Identifier	c_str
>2490	CallExpression	text . font_name . GetValue ( )
>2491	ArgumentList	 
>2492	Callee	text . font_name . GetValue
>2493	MemberAccess	text . font_name . GetValue
>2494	Identifier	GetValue
>2495	MemberAccess	text . font_name
>2496	Identifier	font_name
>2497	Identifier	text
>2498	Argument	DEFAULT_PITCH | FF_DONTCARE
>2499	InclusiveOrExpression	DEFAULT_PITCH | FF_DONTCARE
>2500	Identifier	FF_DONTCARE
>2501	Identifier	DEFAULT_PITCH
>2502	Argument	DEFAULT_QUALITY
>2503	Identifier	DEFAULT_QUALITY
>2504	Argument	CLIP_DEFAULT_PRECIS
>2505	Identifier	CLIP_DEFAULT_PRECIS
>2506	Argument	OUT_DEFAULT_PRECIS
>2507	Identifier	OUT_DEFAULT_PRECIS
>2508	Argument	DEFAULT_CHARSET
>2509	Identifier	DEFAULT_CHARSET
>2510	Argument	FALSE
>2511	Identifier	FALSE
>2512	Argument	FALSE
>2513	Identifier	FALSE
>2514	Argument	FALSE
>2515	Identifier	FALSE
>2516	Argument	FW_NORMAL
>2517	Identifier	FW_NORMAL
>2518	Argument	0
>2519	PrimaryExpression	0
>2520	Argument	0
>2521	PrimaryExpression	0
>2522	Argument	0
>2523	PrimaryExpression	0
>2524	Argument	nFontHeight
>2525	Identifier	nFontHeight
>2526	Callee	p_font -> CreateFont
>2527	PtrMemberAccess	p_font -> CreateFont
>2528	Identifier	CreateFont
>2529	Identifier	p_font
>2530	IdentifierDeclStatement	 
>2531	IdentifierDecl	nFontHeight = MulDiv ( text . font_size , GetDeviceCaps ( GetDC ( ) -> GetSafeHdc ( ) , LOGPIXELSY ) , 72 )
>2532	AssignmentExpr	nFontHeight = MulDiv ( text . font_size , GetDeviceCaps ( GetDC ( ) -> GetSafeHdc ( ) , LOGPIXELSY ) , \
>2533	CallExpression	MulDiv ( text . font_size , GetDeviceCaps ( GetDC ( ) -> GetSafeHdc ( ) , LOGPIXELSY ) , 72 )
>2534	ArgumentList	text . font_size
>2535	Argument	72
>2536	PrimaryExpression	72
>2537	Argument	GetDeviceCaps ( GetDC ( ) -> GetSafeHdc ( ) , LOGPIXELSY )
>2538	CallExpression	GetDeviceCaps ( GetDC ( ) -> GetSafeHdc ( ) , LOGPIXELSY )
>2539	ArgumentList	GetDC ( ) -> GetSafeHdc ( )
>2540	Argument	LOGPIXELSY
>2541	Identifier	LOGPIXELSY
>2542	Argument	GetDC ( ) -> GetSafeHdc ( )
>2543	CallExpression	GetDC ( ) -> GetSafeHdc ( )
>2544	ArgumentList	 
>2545	Callee	GetDC ( ) -> GetSafeHdc
>2546	PtrMemberAccess	GetDC ( ) -> GetSafeHdc
>2547	Identifier	GetSafeHdc
>2548	CallExpression	GetDC ( )
>2549	ArgumentList	 
>2550	Callee	GetDC
>2551	Identifier	GetDC
>2552	Callee	GetDeviceCaps
>2553	Identifier	GetDeviceCaps
>2554	Argument	text . font_size
>2555	MemberAccess	text . font_size
>2556	Identifier	font_size
>2557	Identifier	text
>2558	Callee	MulDiv
>2559	Identifier	MulDiv
>2560	Identifier	nFontHeight
>2561	Identifier	nFontHeight
>2562	IdentifierDeclType	int
>2563	ExpressionStatement	 
>2564	Identifier	CFont
>2565	Statement	 
>2566	Statement	 
>2567	Statement	 
>2568	Statement	 
>2569	Statement	 
>2595	FunctionDef	CdotNetInstallerDlg 
>2596	ParameterList	const ControlCheckBox & checkbox
>2597	Parameter	 
>2598	Identifier	checkbox
>2599	ParameterType	const ControlCheckBox &
>2600	ReturnType	void
>2601	CompoundStatement	 
>2602	ExpressionStatement	 
>2603	CallExpression	m_custom_controls . push_back ( p_checkbox )
>2604	ArgumentList	p_checkbox
>2605	Argument	p_checkbox
>2606	Identifier	p_checkbox
>2607	Callee	m_custom_controls . push_back
>2608	MemberAccess	m_custom_controls . push_back
>2609	Identifier	push_back
>2610	Identifier	m_custom_controls
>2611	ExpressionStatement	 
>2612	Statement	 
>2613	Statement	 
>2614	Statement	 
>2615	Statement	 
>2616	Statement	 
>2617	Statement	 
>2618	Statement	 
>2619	Statement	 
>2620	Statement	 
>2621	Statement	 
>2622	Statement	 
>2623	Statement	 
>2624	Statement	 
>2625	Statement	 
>2626	Statement	 
>2627	Statement	 
>2628	Statement	 
>2629	Statement	 
>2630	Statement	 
>2631	Statement	 
>2632	Statement	 
>2633	Statement	 
>2634	Statement	 
>2635	ExpressionStatement	 
>2636	CallExpression	p_checkbox -> SetCheck ( checkbox . checked )
>2637	ArgumentList	checkbox . checked
>2638	Argument	checkbox . checked
>2639	MemberAccess	checkbox . checked
>2640	Identifier	checked
>2641	Identifier	checkbox
>2642	Callee	p_checkbox -> SetCheck
>2643	PtrMemberAccess	p_checkbox -> SetCheck
>2644	Identifier	SetCheck
>2645	Identifier	p_checkbox
>2646	ExpressionStatement	 
>2647	CallExpression	p_checkbox -> SetFont ( CreateFont ( checkbox ) )
>2648	ArgumentList	CreateFont ( checkbox )
>2649	Argument	CreateFont ( checkbox )
>2650	CallExpression	CreateFont ( checkbox )
>2651	ArgumentList	checkbox
>2652	Argument	checkbox
>2653	Identifier	checkbox
>2654	Callee	CreateFont
>2655	Identifier	CreateFont
>2656	Callee	p_checkbox -> SetFont
>2657	PtrMemberAccess	p_checkbox -> SetFont
>2658	Identifier	SetFont
>2659	Identifier	p_checkbox
>2660	ExpressionStatement	 
>2661	CallExpression	p_checkbox -> EnableWindow ( checkbox . IsEnabled ( ) )
>2662	ArgumentList	checkbox . IsEnabled ( )
>2663	Argument	checkbox . IsEnabled ( )
>2664	CallExpression	checkbox . IsEnabled ( )
>2665	ArgumentList	 
>2666	Callee	checkbox . IsEnabled
>2667	MemberAccess	checkbox . IsEnabled
>2668	Identifier	IsEnabled
>2669	Identifier	checkbox
>2670	Callee	p_checkbox -> EnableWindow
>2671	PtrMemberAccess	p_checkbox -> EnableWindow
>2672	Identifier	EnableWindow
>2673	Identifier	p_checkbox
>2674	ExpressionStatement	 
>2675	CallExpression	p_checkbox -> Create ( checkbox . text . GetValue ( ) . c_str ( ) , WS_CHILD | WS_VISIBLE | WS_TABSTOP | BS_AUTOCHECKBOX , \
>2676	ArgumentList	checkbox . text . GetValue ( ) . c_str ( )
>2677	Argument	0
>2678	PrimaryExpression	0
>2679	Argument	this
>2680	Identifier	this
>2681	Argument	checkbox . position . ToRect ( )
>2682	CallExpression	checkbox . position . ToRect ( )
>2683	ArgumentList	 
>2684	Callee	checkbox . position . ToRect
>2685	MemberAccess	checkbox . position . ToRect
>2686	Identifier	ToRect
>2687	MemberAccess	checkbox . position
>2688	Identifier	position
>2689	Identifier	checkbox
>2690	Argument	WS_CHILD | WS_VISIBLE | WS_TABSTOP | BS_AUTOCHECKBOX
>2691	InclusiveOrExpression	WS_CHILD | WS_VISIBLE | WS_TABSTOP | BS_AUTOCHECKBOX
>2692	InclusiveOrExpression	WS_VISIBLE | WS_TABSTOP | BS_AUTOCHECKBOX
>2693	InclusiveOrExpression	WS_TABSTOP | BS_AUTOCHECKBOX
>2694	Identifier	BS_AUTOCHECKBOX
>2695	Identifier	WS_TABSTOP
>2696	Identifier	WS_VISIBLE
>2697	Identifier	WS_CHILD
>2698	Argument	checkbox . text . GetValue ( ) . c_str ( )
>2699	CallExpression	checkbox . text . GetValue ( ) . c_str ( )
>2700	ArgumentList	 
>2701	Callee	checkbox . text . GetValue ( ) . c_str
>2702	MemberAccess	checkbox . text . GetValue ( ) . c_str
>2703	Identifier	c_str
>2704	CallExpression	checkbox . text . GetValue ( )
>2705	ArgumentList	 
>2706	Callee	checkbox . text . GetValue
>2707	MemberAccess	checkbox . text . GetValue
>2708	Identifier	GetValue
>2709	MemberAccess	checkbox . text
>2710	Identifier	text
>2711	Identifier	checkbox
>2712	Callee	p_checkbox -> Create
>2713	PtrMemberAccess	p_checkbox -> Create
>2714	Identifier	Create
>2715	Identifier	p_checkbox
>2716	IdentifierDeclStatement	 
>2717	IdentifierDecl	* p_checkbox = new ControlValueCheckBox ( checkbox )
>2718	AssignmentExpr	* p_checkbox = new ControlValueCheckBox ( checkbox )
>2719	Identifier	checkbox
>2720	Identifier	checkbox
>2721	Identifier	p_checkbox
>2722	IdentifierDeclType	ControlValueCheckBox *
>2742	FunctionDef	CdotNetInstallerDlg 
>2743	ParameterList	const ControlEdit & edit
>2744	Parameter	 
>2745	Identifier	edit
>2746	ParameterType	const ControlEdit &
>2747	ReturnType	void
>2748	CompoundStatement	 
>2749	ExpressionStatement	 
>2750	CallExpression	m_custom_controls . push_back ( p_edit )
>2751	ArgumentList	p_edit
>2752	Argument	p_edit
>2753	Identifier	p_edit
>2754	Callee	m_custom_controls . push_back
>2755	MemberAccess	m_custom_controls . push_back
>2756	Identifier	push_back
>2757	Identifier	m_custom_controls
>2758	ExpressionStatement	 
>2759	Statement	 
>2760	Statement	 
>2761	Statement	 
>2762	Statement	 
>2763	Statement	 
>2764	Statement	 
>2765	Statement	 
>2766	Statement	 
>2767	Statement	 
>2768	Statement	 
>2769	Statement	 
>2770	Statement	 
>2771	Statement	 
>2772	Statement	 
>2773	Statement	 
>2774	Statement	 
>2775	Statement	 
>2776	Statement	 
>2777	Statement	 
>2778	Statement	 
>2779	Statement	 
>2780	Statement	 
>2781	Statement	 
>2782	ExpressionStatement	 
>2783	CallExpression	p_edit -> SetFont ( CreateFont ( edit ) )
>2784	ArgumentList	CreateFont ( edit )
>2785	Argument	CreateFont ( edit )
>2786	CallExpression	CreateFont ( edit )
>2787	ArgumentList	edit
>2788	Argument	edit
>2789	Identifier	edit
>2790	Callee	CreateFont
>2791	Identifier	CreateFont
>2792	Callee	p_edit -> SetFont
>2793	PtrMemberAccess	p_edit -> SetFont
>2794	Identifier	SetFont
>2795	Identifier	p_edit
>2796	ExpressionStatement	 
>2797	CallExpression	p_edit -> EnableWindow ( edit . IsEnabled ( ) )
>2798	ArgumentList	edit . IsEnabled ( )
>2799	Argument	edit . IsEnabled ( )
>2800	CallExpression	edit . IsEnabled ( )
>2801	ArgumentList	 
>2802	Callee	edit . IsEnabled
>2803	MemberAccess	edit . IsEnabled
>2804	Identifier	IsEnabled
>2805	Identifier	edit
>2806	Callee	p_edit -> EnableWindow
>2807	PtrMemberAccess	p_edit -> EnableWindow
>2808	Identifier	EnableWindow
>2809	Identifier	p_edit
>2810	ExpressionStatement	 
>2811	CallExpression	p_edit -> SetWindowText ( edit . text . GetValue ( ) . c_str ( ) )
>2812	ArgumentList	edit . text . GetValue ( ) . c_str ( )
>2813	Argument	edit . text . GetValue ( ) . c_str ( )
>2814	CallExpression	edit . text . GetValue ( ) . c_str ( )
>2815	ArgumentList	 
>2816	Callee	edit . text . GetValue ( ) . c_str
>2817	MemberAccess	edit . text . GetValue ( ) . c_str
>2818	Identifier	c_str
>2819	CallExpression	edit . text . GetValue ( )
>2820	ArgumentList	 
>2821	Callee	edit . text . GetValue
>2822	MemberAccess	edit . text . GetValue
>2823	Identifier	GetValue
>2824	MemberAccess	edit . text
>2825	Identifier	text
>2826	Identifier	edit
>2827	Callee	p_edit -> SetWindowText
>2828	PtrMemberAccess	p_edit -> SetWindowText
>2829	Identifier	SetWindowText
>2830	Identifier	p_edit
>2831	ExpressionStatement	 
>2832	CallExpression	p_edit -> Create ( WS_CHILD | WS_VISIBLE | WS_TABSTOP | WS_BORDER , edit . position . ToRect ( ) , this , 0 )
>2833	ArgumentList	WS_CHILD | WS_VISIBLE | WS_TABSTOP | WS_BORDER
>2834	Argument	0
>2835	PrimaryExpression	0
>2836	Argument	this
>2837	Identifier	this
>2838	Argument	edit . position . ToRect ( )
>2839	CallExpression	edit . position . ToRect ( )
>2840	ArgumentList	 
>2841	Callee	edit . position . ToRect
>2842	MemberAccess	edit . position . ToRect
>2843	Identifier	ToRect
>2844	MemberAccess	edit . position
>2845	Identifier	position
>2846	Identifier	edit
>2847	Argument	WS_CHILD | WS_VISIBLE | WS_TABSTOP | WS_BORDER
>2848	InclusiveOrExpression	WS_CHILD | WS_VISIBLE | WS_TABSTOP | WS_BORDER
>2849	InclusiveOrExpression	WS_VISIBLE | WS_TABSTOP | WS_BORDER
>2850	InclusiveOrExpression	WS_TABSTOP | WS_BORDER
>2851	Identifier	WS_BORDER
>2852	Identifier	WS_TABSTOP
>2853	Identifier	WS_VISIBLE
>2854	Identifier	WS_CHILD
>2855	Callee	p_edit -> Create
>2856	PtrMemberAccess	p_edit -> Create
>2857	Identifier	Create
>2858	Identifier	p_edit
>2859	IdentifierDeclStatement	 
>2860	IdentifierDecl	* p_edit = new ControlValueEdit ( edit )
>2861	AssignmentExpr	* p_edit = new ControlValueEdit ( edit )
>2862	Identifier	edit
>2863	Identifier	edit
>2864	Identifier	p_edit
>2865	IdentifierDeclType	ControlValueEdit *
>2884	FunctionDef	CdotNetInstallerDlg 
>2885	ParameterList	const ControlBrowse & browse
>2886	Parameter	 
>2887	Identifier	browse
>2888	ParameterType	const ControlBrowse &
>2889	ReturnType	void
>2890	CompoundStatement	 
>2891	ExpressionStatement	 
>2892	CallExpression	m_custom_controls . push_back ( p_browse )
>2893	ArgumentList	p_browse
>2894	Argument	p_browse
>2895	Identifier	p_browse
>2896	Callee	m_custom_controls . push_back
>2897	MemberAccess	m_custom_controls . push_back
>2898	Identifier	push_back
>2899	Identifier	m_custom_controls
>2900	ExpressionStatement	 
>2901	Statement	 
>2902	Statement	 
>2903	Statement	 
>2904	Statement	 
>2905	Statement	 
>2906	Statement	 
>2907	Statement	 
>2908	Statement	 
>2909	Statement	 
>2910	Statement	 
>2911	Statement	 
>2912	Statement	 
>2913	Statement	 
>2914	Statement	 
>2915	Statement	 
>2916	Statement	 
>2917	Statement	 
>2918	Statement	 
>2919	Statement	 
>2920	Statement	 
>2921	Statement	 
>2922	Statement	 
>2923	Statement	 
>2924	ExpressionStatement	 
>2925	CallExpression	p_browse -> EnableWindow ( browse . IsEnabled ( ) )
>2926	ArgumentList	browse . IsEnabled ( )
>2927	Argument	browse . IsEnabled ( )
>2928	CallExpression	browse . IsEnabled ( )
>2929	ArgumentList	 
>2930	Callee	browse . IsEnabled
>2931	MemberAccess	browse . IsEnabled
>2932	Identifier	IsEnabled
>2933	Identifier	browse
>2934	Callee	p_browse -> EnableWindow
>2935	PtrMemberAccess	p_browse -> EnableWindow
>2936	Identifier	EnableWindow
>2937	Identifier	p_browse
>2938	ExpressionStatement	 
>2939	CallExpression	p_browse -> SetOpenSave ( TRUE )
>2940	ArgumentList	TRUE
>2941	Argument	TRUE
>2942	Identifier	TRUE
>2943	Callee	p_browse -> SetOpenSave
>2944	PtrMemberAccess	p_browse -> SetOpenSave
>2945	Identifier	SetOpenSave
>2946	Identifier	p_browse
>2947	ExpressionStatement	 
>2948	CallExpression	p_browse -> SetFont ( CreateFont ( browse ) )
>2949	ArgumentList	CreateFont ( browse )
>2950	Argument	CreateFont ( browse )
>2951	CallExpression	CreateFont ( browse )
>2952	ArgumentList	browse
>2953	Argument	browse
>2954	Identifier	browse
>2955	Callee	CreateFont
>2956	Identifier	CreateFont
>2957	Callee	p_browse -> SetFont
>2958	PtrMemberAccess	p_browse -> SetFont
>2959	Identifier	SetFont
>2960	Identifier	p_browse
>2961	ExpressionStatement	 
>2962	CallExpression	p_browse -> SetPathName ( browse . path . GetValue ( ) . c_str ( ) )
>2963	ArgumentList	browse . path . GetValue ( ) . c_str ( )
>2964	Argument	browse . path . GetValue ( ) . c_str ( )
>2965	CallExpression	browse . path . GetValue ( ) . c_str ( )
>2966	ArgumentList	 
>2967	Callee	browse . path . GetValue ( ) . c_str
>2968	MemberAccess	browse . path . GetValue ( ) . c_str
>2969	Identifier	c_str
>2970	CallExpression	browse . path . GetValue ( )
>2971	ArgumentList	 
>2972	Callee	browse . path . GetValue
>2973	MemberAccess	browse . path . GetValue
>2974	Identifier	GetValue
>2975	MemberAccess	browse . path
>2976	Identifier	path
>2977	Identifier	browse
>2978	Callee	p_browse -> SetPathName
>2979	PtrMemberAccess	p_browse -> SetPathName
>2980	Identifier	SetPathName
>2981	Identifier	p_browse
>2982	ExpressionStatement	 
>2983	CallExpression	p_browse -> SetWindowTextW ( browse . text . GetValue ( ) . c_str ( ) )
>2984	ArgumentList	browse . text . GetValue ( ) . c_str ( )
>2985	Argument	browse . text . GetValue ( ) . c_str ( )
>2986	CallExpression	browse . text . GetValue ( ) . c_str ( )
>2987	ArgumentList	 
>2988	Callee	browse . text . GetValue ( ) . c_str
>2989	MemberAccess	browse . text . GetValue ( ) . c_str
>2990	Identifier	c_str
>2991	CallExpression	browse . text . GetValue ( )
>2992	ArgumentList	 
>2993	Callee	browse . text . GetValue
>2994	MemberAccess	browse . text . GetValue
>2995	Identifier	GetValue
>2996	MemberAccess	browse . text
>2997	Identifier	text
>2998	Identifier	browse
>2999	Callee	p_browse -> SetWindowTextW
>3000	PtrMemberAccess	p_browse -> SetWindowTextW
>3001	Identifier	SetWindowTextW
>3002	Identifier	p_browse
>3003	ExpressionStatement	 
>3004	CallExpression	p_browse -> SetDefExt ( NULL )
>3005	ArgumentList	NULL
>3006	Argument	NULL
>3007	Identifier	NULL
>3008	Callee	p_browse -> SetDefExt
>3009	PtrMemberAccess	p_browse -> SetDefExt
>3010	Identifier	SetDefExt
>3011	Identifier	p_browse
>3012	ExpressionStatement	 
>3013	CallExpression	p_browse -> SetFileFlags ( dwFileFlags )
>3014	ArgumentList	dwFileFlags
>3015	Argument	dwFileFlags
>3016	Identifier	dwFileFlags
>3017	Callee	p_browse -> SetFileFlags
>3018	PtrMemberAccess	p_browse -> SetFileFlags
>3019	Identifier	SetFileFlags
>3020	Identifier	p_browse
>3021	IfStatement	if ( browse . hide_readonly )
>3022	ExpressionStatement	 
>3023	AssignmentExpr	dwFileFlags |= OFN_HIDEREADONLY
>3024	Identifier	OFN_HIDEREADONLY
>3025	Identifier	dwFileFlags
>3026	Condition	 
>3027	MemberAccess	browse . hide_readonly
>3028	Identifier	hide_readonly
>3029	Identifier	browse
>3030	IfStatement	if ( browse . must_exist )
>3031	ExpressionStatement	 
>3032	AssignmentExpr	dwFileFlags |= OFN_FILEMUSTEXIST
>3033	Identifier	OFN_FILEMUSTEXIST
>3034	Identifier	dwFileFlags
>3035	Condition	 
>3036	MemberAccess	browse . must_exist
>3037	Identifier	must_exist
>3038	Identifier	browse
>3039	IdentifierDeclStatement	 
>3040	IdentifierDecl	dwFileFlags = 0
>3041	AssignmentExpr	dwFileFlags = 0
>3042	PrimaryExpression	0
>3043	Identifier	dwFileFlags
>3044	Identifier	dwFileFlags
>3045	IdentifierDeclType	DWORD
>3046	IfStatement	if ( ! browse . filter . empty ( ) )
>3047	ExpressionStatement	 
>3048	CallExpression	p_browse -> SetFilter ( browse . filter . GetValue ( ) . c_str ( ) )
>3049	ArgumentList	browse . filter . GetValue ( ) . c_str ( )
>3050	Argument	browse . filter . GetValue ( ) . c_str ( )
>3051	CallExpression	browse . filter . GetValue ( ) . c_str ( )
>3052	ArgumentList	 
>3053	Callee	browse . filter . GetValue ( ) . c_str
>3054	MemberAccess	browse . filter . GetValue ( ) . c_str
>3055	Identifier	c_str
>3056	CallExpression	browse . filter . GetValue ( )
>3057	ArgumentList	 
>3058	Callee	browse . filter . GetValue
>3059	MemberAccess	browse . filter . GetValue
>3060	Identifier	GetValue
>3061	MemberAccess	browse . filter
>3062	Identifier	filter
>3063	Identifier	browse
>3064	Callee	p_browse -> SetFilter
>3065	PtrMemberAccess	p_browse -> SetFilter
>3066	Identifier	SetFilter
>3067	Identifier	p_browse
>3068	Condition	 
>3069	UnaryOp	! browse . filter . empty ( )
>3070	CallExpression	browse . filter . empty ( )
>3071	ArgumentList	 
>3072	Callee	browse . filter . empty
>3073	MemberAccess	browse . filter . empty
>3074	Identifier	empty
>3075	MemberAccess	browse . filter
>3076	Identifier	filter
>3077	Identifier	browse
>3078	UnaryOperator	!
>3079	ExpressionStatement	 
>3080	CallExpression	p_browse -> SetButtonStyle ( dwStyle )
>3081	ArgumentList	dwStyle
>3082	Argument	dwStyle
>3083	Identifier	dwStyle
>3084	Callee	p_browse -> SetButtonStyle
>3085	PtrMemberAccess	p_browse -> SetButtonStyle
>3086	Identifier	SetButtonStyle
>3087	Identifier	p_browse
>3088	IfStatement	if ( browse . folders_only )
>3089	ExpressionStatement	 
>3090	AssignmentExpr	dwStyle |= BC_CTL_FOLDERSONLY
>3091	Identifier	BC_CTL_FOLDERSONLY
>3092	Identifier	dwStyle
>3093	Condition	 
>3094	MemberAccess	browse . folders_only
>3095	Identifier	folders_only
>3096	Identifier	browse
>3097	IfStatement	if ( browse . allow_edit )
>3098	ExpressionStatement	 
>3099	AssignmentExpr	dwStyle |= BC_CTL_ALLOWEDIT
>3100	Identifier	BC_CTL_ALLOWEDIT
>3101	Identifier	dwStyle
>3102	Condition	 
>3103	MemberAccess	browse . allow_edit
>3104	Identifier	allow_edit
>3105	Identifier	browse
>3106	IfStatement	if ( browse . button_text . empty ( ) )
>3107	ElseStatement	else
>3108	CompoundStatement	 
>3109	ExpressionStatement	 
>3110	CallExpression	p_browse -> SetButtonText ( browse . button_text . GetValue ( ) . c_str ( ) )
>3111	ArgumentList	browse . button_text . GetValue ( ) . c_str ( )
>3112	Argument	browse . button_text . GetValue ( ) . c_str ( )
>3113	CallExpression	browse . button_text . GetValue ( ) . c_str ( )
>3114	ArgumentList	 
>3115	Callee	browse . button_text . GetValue ( ) . c_str
>3116	MemberAccess	browse . button_text . GetValue ( ) . c_str
>3117	Identifier	c_str
>3118	CallExpression	browse . button_text . GetValue ( )
>3119	ArgumentList	 
>3120	Callee	browse . button_text . GetValue
>3121	MemberAccess	browse . button_text . GetValue
>3122	Identifier	GetValue
>3123	MemberAccess	browse . button_text
>3124	Identifier	button_text
>3125	Identifier	browse
>3126	Callee	p_browse -> SetButtonText
>3127	PtrMemberAccess	p_browse -> SetButtonText
>3128	Identifier	SetButtonText
>3129	Identifier	p_browse
>3130	ExpressionStatement	 
>3131	AssignmentExpr	dwStyle &= ~BC_BTN_ICON
>3132	Identifier	~BC_BTN_ICON
>3133	Identifier	dwStyle
>3134	CompoundStatement	 
>3135	ExpressionStatement	 
>3136	AssignmentExpr	dwStyle |= BC_ICO_EXPLORER
>3137	Identifier	BC_ICO_EXPLORER
>3138	Identifier	dwStyle
>3139	ExpressionStatement	 
>3140	AssignmentExpr	dwStyle &= ~BC_ICO_FOLDER
>3141	Identifier	~BC_ICO_FOLDER
>3142	Identifier	dwStyle
>3143	ExpressionStatement	 
>3144	AssignmentExpr	dwStyle &= ~BC_ICO_ARROWFOLDER
>3145	Identifier	~BC_ICO_ARROWFOLDER
>3146	Identifier	dwStyle
>3147	ExpressionStatement	 
>3148	AssignmentExpr	dwStyle |= BC_BTN_ICON
>3149	Identifier	BC_BTN_ICON
>3150	Identifier	dwStyle
>3151	Condition	 
>3152	CallExpression	browse . button_text . empty ( )
>3153	ArgumentList	 
>3154	Callee	browse . button_text . empty
>3155	MemberAccess	browse . button_text . empty
>3156	Identifier	empty
>3157	MemberAccess	browse . button_text
>3158	Identifier	button_text
>3159	Identifier	browse
>3160	IdentifierDeclStatement	 
>3161	IdentifierDecl	dwStyle = p_browse -> GetButtonStyle ( )
>3162	AssignmentExpr	dwStyle = p_browse -> GetButtonStyle ( )
>3163	CallExpression	p_browse -> GetButtonStyle ( )
>3164	ArgumentList	 
>3165	Callee	p_browse -> GetButtonStyle
>3166	PtrMemberAccess	p_browse -> GetButtonStyle
>3167	Identifier	GetButtonStyle
>3168	Identifier	p_browse
>3169	Identifier	dwStyle
>3170	Identifier	dwStyle
>3171	IdentifierDeclType	DWORD
>3172	ExpressionStatement	 
>3173	CallExpression	p_browse -> Create ( browse . position . ToRect ( ) , this , 0 )
>3174	ArgumentList	browse . position . ToRect ( )
>3175	Argument	0
>3176	PrimaryExpression	0
>3177	Argument	this
>3178	Identifier	this
>3179	Argument	browse . position . ToRect ( )
>3180	CallExpression	browse . position . ToRect ( )
>3181	ArgumentList	 
>3182	Callee	browse . position . ToRect
>3183	MemberAccess	browse . position . ToRect
>3184	Identifier	ToRect
>3185	MemberAccess	browse . position
>3186	Identifier	position
>3187	Identifier	browse
>3188	Callee	p_browse -> Create
>3189	PtrMemberAccess	p_browse -> Create
>3190	Identifier	Create
>3191	Identifier	p_browse
>3192	IdentifierDeclStatement	 
>3193	IdentifierDecl	* p_browse = new ControlValueBrowse ( browse )
>3194	AssignmentExpr	* p_browse = new ControlValueBrowse ( browse )
>3195	Identifier	browse
>3196	Identifier	browse
>3197	Identifier	p_browse
>3198	IdentifierDeclType	ControlValueBrowse *
>3243	FunctionDef	CdotNetInstallerDlg 
>3244	ParameterList	const ControlLicense & license
>3245	Parameter	 
>3246	Identifier	license
>3247	ParameterType	const ControlLicense &
>3248	ReturnType	void
>3249	CompoundStatement	 
>3250	ExpressionStatement	 
>3251	CallExpression	m_custom_controls . push_back ( p_link )
>3252	ArgumentList	p_link
>3253	Argument	p_link
>3254	Identifier	p_link
>3255	Callee	m_custom_controls . push_back
>3256	MemberAccess	m_custom_controls . push_back
>3257	Identifier	push_back
>3258	Identifier	m_custom_controls
>3259	ExpressionStatement	 
>3260	CallExpression	p_link -> SetFont ( CreateFont ( license ) )
>3261	ArgumentList	CreateFont ( license )
>3262	Argument	CreateFont ( license )
>3263	CallExpression	CreateFont ( license )
>3264	ArgumentList	license
>3265	Argument	license
>3266	Identifier	license
>3267	Callee	CreateFont
>3268	Identifier	CreateFont
>3269	Callee	p_link -> SetFont
>3270	PtrMemberAccess	p_link -> SetFont
>3271	Identifier	SetFont
>3272	Identifier	p_link
>3273	ExpressionStatement	 
>3274	CallExpression	p_link -> SetHyperlink ( license . license_file )
>3275	ArgumentList	license . license_file
>3276	Argument	license . license_file
>3277	MemberAccess	license . license_file
>3278	Identifier	license_file
>3279	Identifier	license
>3280	Callee	p_link -> SetHyperlink
>3281	PtrMemberAccess	p_link -> SetHyperlink
>3282	Identifier	SetHyperlink
>3283	Identifier	p_link
>3284	ExpressionStatement	 
>3285	CallExpression	p_link -> Create ( license . text . GetValue ( ) . c_str ( ) , WS_CHILD | WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX , \
>3286	ArgumentList	license . text . GetValue ( ) . c_str ( )
>3287	Argument	0
>3288	PrimaryExpression	0
>3289	Argument	this
>3290	Identifier	this
>3291	Argument	link_rect
>3292	Identifier	link_rect
>3293	Argument	WS_CHILD | WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX
>3294	InclusiveOrExpression	WS_CHILD | WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX
>3295	InclusiveOrExpression	WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX
>3296	InclusiveOrExpression	WS_TABSTOP | SS_NOPREFIX
>3297	Identifier	SS_NOPREFIX
>3298	Identifier	WS_TABSTOP
>3299	Identifier	WS_VISIBLE
>3300	Identifier	WS_CHILD
>3301	Argument	license . text . GetValue ( ) . c_str ( )
>3302	CallExpression	license . text . GetValue ( ) . c_str ( )
>3303	ArgumentList	 
>3304	Callee	license . text . GetValue ( ) . c_str
>3305	MemberAccess	license . text . GetValue ( ) . c_str
>3306	Identifier	c_str
>3307	CallExpression	license . text . GetValue ( )
>3308	ArgumentList	 
>3309	Callee	license . text . GetValue
>3310	MemberAccess	license . text . GetValue
>3311	Identifier	GetValue
>3312	MemberAccess	license . text
>3313	Identifier	text
>3314	Identifier	license
>3315	Callee	p_link -> Create
>3316	PtrMemberAccess	p_link -> Create
>3317	Identifier	Create
>3318	Identifier	p_link
>3319	ExpressionStatement	 
>3320	AssignmentExpr	link_rect . left += 20
>3321	PrimaryExpression	20
>3322	MemberAccess	link_rect . left
>3323	Identifier	left
>3324	Identifier	link_rect
>3325	IdentifierDeclStatement	 
>3326	IdentifierDecl	link_rect = license . position . ToRect ( )
>3327	AssignmentExpr	link_rect = license . position . ToRect ( )
>3328	CallExpression	license . position . ToRect ( )
>3329	ArgumentList	 
>3330	Callee	license . position . ToRect
>3331	MemberAccess	license . position . ToRect
>3332	Identifier	ToRect
>3333	MemberAccess	license . position
>3334	Identifier	position
>3335	Identifier	license
>3336	Identifier	link_rect
>3337	Identifier	link_rect
>3338	IdentifierDeclType	CRect
>3339	IdentifierDeclStatement	 
>3340	IdentifierDecl	* p_link = new CHyperlinkStatic ( )
>3341	AssignmentExpr	* p_link = new CHyperlinkStatic ( )
>3342	UnaryExpression	new CHyperlinkStatic ( )
>3343	Identifier	p_link
>3344	Identifier	p_link
>3345	IdentifierDeclType	CHyperlinkStatic *
>3346	ExpressionStatement	 
>3347	CallExpression	m_custom_controls . push_back ( p_checkbox )
>3348	ArgumentList	p_checkbox
>3349	Argument	p_checkbox
>3350	Identifier	p_checkbox
>3351	Callee	m_custom_controls . push_back
>3352	MemberAccess	m_custom_controls . push_back
>3353	Identifier	push_back
>3354	Identifier	m_custom_controls
>3355	ExpressionStatement	 
>3356	Statement	 
>3357	Statement	 
>3358	Statement	 
>3359	Statement	 
>3360	Statement	 
>3361	Statement	 
>3362	Statement	 
>3363	Statement	 
>3364	Statement	 
>3365	Statement	 
>3366	Statement	 
>3367	Statement	 
>3368	Statement	 
>3369	Statement	 
>3370	Statement	 
>3371	Statement	 
>3372	Statement	 
>3373	Statement	 
>3374	Statement	 
>3375	Statement	 
>3376	Statement	 
>3377	Statement	 
>3378	Statement	 
>3379	ExpressionStatement	 
>3380	CallExpression	p_checkbox -> SetCheck ( license . accepted )
>3381	ArgumentList	license . accepted
>3382	Argument	license . accepted
>3383	MemberAccess	license . accepted
>3384	Identifier	accepted
>3385	Identifier	license
>3386	Callee	p_checkbox -> SetCheck
>3387	PtrMemberAccess	p_checkbox -> SetCheck
>3388	Identifier	SetCheck
>3389	Identifier	p_checkbox
>3390	ExpressionStatement	 
>3391	CallExpression	p_checkbox -> SetFont ( CreateFont ( license ) )
>3392	ArgumentList	CreateFont ( license )
>3393	Argument	CreateFont ( license )
>3394	CallExpression	CreateFont ( license )
>3395	ArgumentList	license
>3396	Argument	license
>3397	Identifier	license
>3398	Callee	CreateFont
>3399	Identifier	CreateFont
>3400	Callee	p_checkbox -> SetFont
>3401	PtrMemberAccess	p_checkbox -> SetFont
>3402	Identifier	SetFont
>3403	Identifier	p_checkbox
>3404	ExpressionStatement	 
>3405	Statement	 
>3406	Statement	 
>3407	Statement	 
>3408	Statement	 
>3409	Statement	 
>3410	Statement	 
>3411	Statement	 
>3412	Statement	 
>3413	Statement	 
>3414	Statement	 
>3415	Statement	 
>3416	Statement	 
>3417	Statement	 
>3418	Statement	 
>3419	Statement	 
>3420	Statement	 
>3421	Statement	 
>3422	Statement	 
>3423	Statement	 
>3424	Statement	 
>3425	Statement	 
>3426	ExpressionStatement	 
>3427	AssignmentExpr	checkbox_rect . right = checkbox_rect . left + 20
>3428	AdditiveExpression	checkbox_rect . left + 20
>3429	PrimaryExpression	20
>3430	MemberAccess	checkbox_rect . left
>3431	Identifier	left
>3432	Identifier	checkbox_rect
>3433	MemberAccess	checkbox_rect . right
>3434	Identifier	right
>3435	Identifier	checkbox_rect
>3436	IdentifierDeclStatement	 
>3437	IdentifierDecl	checkbox_rect = license . position . ToRect ( )
>3438	AssignmentExpr	checkbox_rect = license . position . ToRect ( )
>3439	CallExpression	license . position . ToRect ( )
>3440	ArgumentList	 
>3441	Callee	license . position . ToRect
>3442	MemberAccess	license . position . ToRect
>3443	Identifier	ToRect
>3444	MemberAccess	license . position
>3445	Identifier	position
>3446	Identifier	license
>3447	Identifier	checkbox_rect
>3448	Identifier	checkbox_rect
>3449	IdentifierDeclType	CRect
>3450	IdentifierDeclStatement	 
>3451	IdentifierDecl	* p_checkbox = new ControlValueLicense ( license )
>3452	AssignmentExpr	* p_checkbox = new ControlValueLicense ( license )
>3453	Identifier	license
>3454	Identifier	license
>3455	Identifier	p_checkbox
>3456	IdentifierDeclType	ControlValueLicense *
>3482	FunctionDef	CdotNetInstallerDlg 
>3483	ParameterList	const ControlHyperlink & hyperlink
>3484	Parameter	 
>3485	Identifier	hyperlink
>3486	ParameterType	const ControlHyperlink &
>3487	ReturnType	void
>3488	CompoundStatement	 
>3489	ExpressionStatement	 
>3490	CallExpression	m_custom_controls . push_back ( p_link )
>3491	ArgumentList	p_link
>3492	Argument	p_link
>3493	Identifier	p_link
>3494	Callee	m_custom_controls . push_back
>3495	MemberAccess	m_custom_controls . push_back
>3496	Identifier	push_back
>3497	Identifier	m_custom_controls
>3498	ExpressionStatement	 
>3499	CallExpression	p_link -> SetFont ( CreateFont ( hyperlink ) )
>3500	ArgumentList	CreateFont ( hyperlink )
>3501	Argument	CreateFont ( hyperlink )
>3502	CallExpression	CreateFont ( hyperlink )
>3503	ArgumentList	hyperlink
>3504	Argument	hyperlink
>3505	Identifier	hyperlink
>3506	Callee	CreateFont
>3507	Identifier	CreateFont
>3508	Callee	p_link -> SetFont
>3509	PtrMemberAccess	p_link -> SetFont
>3510	Identifier	SetFont
>3511	Identifier	p_link
>3512	ExpressionStatement	 
>3513	CallExpression	p_link -> SetHyperlink ( hyperlink . uri )
>3514	ArgumentList	hyperlink . uri
>3515	Argument	hyperlink . uri
>3516	MemberAccess	hyperlink . uri
>3517	Identifier	uri
>3518	Identifier	hyperlink
>3519	Callee	p_link -> SetHyperlink
>3520	PtrMemberAccess	p_link -> SetHyperlink
>3521	Identifier	SetHyperlink
>3522	Identifier	p_link
>3523	ExpressionStatement	 
>3524	CallExpression	p_link -> Create ( hyperlink . text . GetValue ( ) . c_str ( ) , WS_CHILD | WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX , \
>3525	ArgumentList	hyperlink . text . GetValue ( ) . c_str ( )
>3526	Argument	0
>3527	PrimaryExpression	0
>3528	Argument	this
>3529	Identifier	this
>3530	Argument	hyperlink . position . ToRect ( )
>3531	CallExpression	hyperlink . position . ToRect ( )
>3532	ArgumentList	 
>3533	Callee	hyperlink . position . ToRect
>3534	MemberAccess	hyperlink . position . ToRect
>3535	Identifier	ToRect
>3536	MemberAccess	hyperlink . position
>3537	Identifier	position
>3538	Identifier	hyperlink
>3539	Argument	WS_CHILD | WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX
>3540	InclusiveOrExpression	WS_CHILD | WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX
>3541	InclusiveOrExpression	WS_VISIBLE | WS_TABSTOP | SS_NOPREFIX
>3542	InclusiveOrExpression	WS_TABSTOP | SS_NOPREFIX
>3543	Identifier	SS_NOPREFIX
>3544	Identifier	WS_TABSTOP
>3545	Identifier	WS_VISIBLE
>3546	Identifier	WS_CHILD
>3547	Argument	hyperlink . text . GetValue ( ) . c_str ( )
>3548	CallExpression	hyperlink . text . GetValue ( ) . c_str ( )
>3549	ArgumentList	 
>3550	Callee	hyperlink . text . GetValue ( ) . c_str
>3551	MemberAccess	hyperlink . text . GetValue ( ) . c_str
>3552	Identifier	c_str
>3553	CallExpression	hyperlink . text . GetValue ( )
>3554	ArgumentList	 
>3555	Callee	hyperlink . text . GetValue
>3556	MemberAccess	hyperlink . text . GetValue
>3557	Identifier	GetValue
>3558	MemberAccess	hyperlink . text
>3559	Identifier	text
>3560	Identifier	hyperlink
>3561	Callee	p_link -> Create
>3562	PtrMemberAccess	p_link -> Create
>3563	Identifier	Create
>3564	Identifier	p_link
>3565	IdentifierDeclStatement	 
>3566	IdentifierDecl	* p_link = new CHyperlinkStatic ( )
>3567	AssignmentExpr	* p_link = new CHyperlinkStatic ( )
>3568	UnaryExpression	new CHyperlinkStatic ( )
>3569	Identifier	p_link
>3570	Identifier	p_link
>3571	IdentifierDeclType	CHyperlinkStatic *
>3590	FunctionDef	CdotNetInstallerDlg 
>3591	ParameterList	const ControlImage & image
>3592	Parameter	 
>3593	Identifier	image
>3594	ParameterType	const ControlImage &
>3595	ReturnType	void
>3596	CompoundStatement	 
>3597	ExpressionStatement	 
>3598	CallExpression	m_custom_controls . push_back ( p_image )
>3599	ArgumentList	p_image
>3600	Argument	p_image
>3601	Identifier	p_image
>3602	Callee	m_custom_controls . push_back
>3603	MemberAccess	m_custom_controls . push_back
>3604	Identifier	push_back
>3605	Identifier	m_custom_controls
>3606	ExpressionStatement	 
>3607	CallExpression	p_image -> EnableWindow ( image . IsEnabled ( ) )
>3608	ArgumentList	image . IsEnabled ( )
>3609	Argument	image . IsEnabled ( )
>3610	CallExpression	image . IsEnabled ( )
>3611	ArgumentList	 
>3612	Callee	image . IsEnabled
>3613	MemberAccess	image . IsEnabled
>3614	Identifier	IsEnabled
>3615	Identifier	image
>3616	Callee	p_image -> EnableWindow
>3617	PtrMemberAccess	p_image -> EnableWindow
>3618	Identifier	EnableWindow
>3619	Identifier	p_image
>3620	ExpressionStatement	 
>3621	Statement	 
>3622	Statement	 
>3623	Statement	 
>3624	Statement	 
>3625	Statement	 
>3626	Statement	 
>3627	Statement	 
>3628	Statement	 
>3629	Statement	 
>3630	Statement	 
>3631	Statement	 
>3632	Statement	 
>3633	Statement	 
>3634	Statement	 
>3635	Statement	 
>3636	Statement	 
>3637	Statement	 
>3638	Statement	 
>3639	Statement	 
>3640	Statement	 
>3641	Statement	 
>3642	Statement	 
>3643	Statement	 
>3644	Statement	 
>3645	Statement	 
>3646	Statement	 
>3647	ExpressionStatement	 
>3648	CallExpression	p_image -> Create ( NULL , dwStyle , image . position . ToRect ( ) , this )
>3649	ArgumentList	NULL
>3650	Argument	this
>3651	Identifier	this
>3652	Argument	image . position . ToRect ( )
>3653	CallExpression	image . position . ToRect ( )
>3654	ArgumentList	 
>3655	Callee	image . position . ToRect
>3656	MemberAccess	image . position . ToRect
>3657	Identifier	ToRect
>3658	MemberAccess	image . position
>3659	Identifier	position
>3660	Identifier	image
>3661	Argument	dwStyle
>3662	Identifier	dwStyle
>3663	Argument	NULL
>3664	Identifier	NULL
>3665	Callee	p_image -> Create
>3666	PtrMemberAccess	p_image -> Create
>3667	Identifier	Create
>3668	Identifier	p_image
>3669	IfStatement	if ( image . center )
>3670	ExpressionStatement	 
>3671	AssignmentExpr	dwStyle |= SS_CENTERIMAGE
>3672	Identifier	SS_CENTERIMAGE
>3673	Identifier	dwStyle
>3674	Condition	 
>3675	MemberAccess	image . center
>3676	Identifier	center
>3677	Identifier	image
>3678	IdentifierDeclStatement	 
>3679	IdentifierDecl	dwStyle = WS_CHILD | WS_VISIBLE | SS_BITMAP
>3680	AssignmentExpr	dwStyle = WS_CHILD | WS_VISIBLE | SS_BITMAP
>3681	InclusiveOrExpression	WS_CHILD | WS_VISIBLE | SS_BITMAP
>3682	InclusiveOrExpression	WS_VISIBLE | SS_BITMAP
>3683	Identifier	SS_BITMAP
>3684	Identifier	WS_VISIBLE
>3685	Identifier	WS_CHILD
>3686	Identifier	dwStyle
>3687	Identifier	dwStyle
>3688	IdentifierDeclType	DWORD
>3689	IdentifierDeclStatement	 
>3690	IdentifierDecl	* p_image = new CStatic ( )
>3691	AssignmentExpr	* p_image = new CStatic ( )
>3692	UnaryExpression	new CStatic ( )
>3693	Identifier	p_image
>3694	Identifier	p_image
>3695	IdentifierDeclType	CStatic *
>3713	FunctionDef	CdotNetInstallerDlg 
>3714	ParameterList	 
>3715	ReturnType	void
>3716	CompoundStatement	 
>3717	ForStatement	for ( iter = m_custom_control_values . begin ( ) ; iter != m_custom_control_values . end ( ) ; ++ iter )
>3718	CompoundStatement	 
>3719	IfStatement	if ( iter -> second -> IsVisible ( ) )
>3720	ElseStatement	else
>3721	CompoundStatement	 
>3722	ExpressionStatement	 
>3723	Statement	 
>3724	Statement	 
>3725	Statement	 
>3726	Statement	 
>3727	Statement	 
>3728	Statement	 
>3729	Statement	 
>3730	Statement	 
>3731	Statement	 
>3732	Statement	 
>3733	Statement	 
>3734	Statement	 
>3735	CompoundStatement	 
>3736	IfStatement	if ( iter -> second -> IsEnabled ( ) )
>3737	ElseStatement	else
>3738	CompoundStatement	 
>3739	ExpressionStatement	 
>3740	Statement	 
>3741	Statement	 
>3742	Statement	 
>3743	Statement	 
>3744	Statement	 
>3745	Statement	 
>3746	Statement	 
>3747	Statement	 
>3748	Statement	 
>3749	Statement	 
>3750	Statement	 
>3751	Statement	 
>3752	CompoundStatement	 
>3753	ExpressionStatement	 
>3754	AssignmentExpr	InstallerSession 
>3755	CallExpression	iter -> second -> GetValue ( )
>3756	ArgumentList	 
>3757	Callee	iter -> second -> GetValue
>3758	PtrMemberAccess	iter -> second -> GetValue
>3759	Identifier	GetValue
>3760	PtrMemberAccess	iter -> second
>3761	Identifier	second
>3762	Identifier	iter
>3763	ArrayIndexing	InstallerSession 
>3764	PtrMemberAccess	iter -> first
>3765	Identifier	first
>3766	Identifier	iter
>3767	PtrMemberAccess	InstallerSession 
>3768	Identifier	AdditionalControlArgs
>3769	Identifier	InstallerSession 
>3770	ExpressionStatement	 
>3771	Statement	 
>3772	Statement	 
>3773	Statement	 
>3774	Statement	 
>3775	Statement	 
>3776	Statement	 
>3777	Statement	 
>3778	Statement	 
>3779	Statement	 
>3780	Statement	 
>3781	Statement	 
>3782	Statement	 
>3783	Statement	 
>3784	Statement	 
>3785	Statement	 
>3786	Statement	 
>3787	Statement	 
>3788	Statement	 
>3789	Statement	 
>3790	Statement	 
>3791	Condition	 
>3792	CallExpression	iter -> second -> IsEnabled ( )
>3793	ArgumentList	 
>3794	Callee	iter -> second -> IsEnabled
>3795	PtrMemberAccess	iter -> second -> IsEnabled
>3796	Identifier	IsEnabled
>3797	PtrMemberAccess	iter -> second
>3798	Identifier	second
>3799	Identifier	iter
>3800	Condition	 
>3801	CallExpression	iter -> second -> IsVisible ( )
>3802	ArgumentList	 
>3803	Callee	iter -> second -> IsVisible
>3804	PtrMemberAccess	iter -> second -> IsVisible
>3805	Identifier	IsVisible
>3806	PtrMemberAccess	iter -> second
>3807	Identifier	second
>3808	Identifier	iter
>3809	UnaryExpression	 
>3810	Identifier	iter
>3811	IncDec	++
>3812	Condition	 
>3813	EqualityExpression	iter != m_custom_control_values . end ( )
>3814	CallExpression	m_custom_control_values . end ( )
>3815	ArgumentList	 
>3816	Callee	m_custom_control_values . end
>3817	MemberAccess	m_custom_control_values . end
>3818	Identifier	end
>3819	Identifier	m_custom_control_values
>3820	Identifier	iter
>3821	ForInit	 
>3822	AssignmentExpr	iter = m_custom_control_values . begin ( )
>3823	CallExpression	m_custom_control_values . begin ( )
>3824	ArgumentList	 
>3825	Callee	m_custom_control_values . begin
>3826	MemberAccess	m_custom_control_values . begin
>3827	Identifier	begin
>3828	Identifier	m_custom_control_values
>3829	Identifier	iter
>3830	IdentifierDeclStatement	 
>3831	IdentifierDecl	iter
>3832	Identifier	iter
>3833	IdentifierDeclType	std 
>3855	FunctionDef	CdotNetInstallerDlg 
>3856	ParameterList	const DWORD id
>3857	Parameter	 
>3858	Identifier	id
>3859	ParameterType	const DWORD
>3860	ReturnType	DWORD
>3861	CompoundStatement	 
>3862	ReturnStatement	 
>3863	Identifier	prev_id
>3864	ExpressionStatement	 
>3865	CallExpression	SendDlgItemMessage ( id , BM_SETSTYLE , BS_DEFPUSHBUTTON , ( LPARAM ) TRUE )
>3866	ArgumentList	id
>3867	Argument	( LPARAM ) TRUE
>3868	CastExpression	( LPARAM ) TRUE
>3869	Identifier	TRUE
>3870	CastTarget	LPARAM
>3871	Argument	BS_DEFPUSHBUTTON
>3872	Identifier	BS_DEFPUSHBUTTON
>3873	Argument	BM_SETSTYLE
>3874	Identifier	BM_SETSTYLE
>3875	Argument	id
>3876	Identifier	id
>3877	Callee	SendDlgItemMessage
>3878	Identifier	SendDlgItemMessage
>3879	ExpressionStatement	 
>3880	CallExpression	SendDlgItemMessage ( id , WM_SETFOCUS )
>3881	ArgumentList	id
>3882	Argument	WM_SETFOCUS
>3883	Identifier	WM_SETFOCUS
>3884	Argument	id
>3885	Identifier	id
>3886	Callee	SendDlgItemMessage
>3887	Identifier	SendDlgItemMessage
>3888	ExpressionStatement	 
>3889	CallExpression	SetDefID ( id )
>3890	ArgumentList	id
>3891	Argument	id
>3892	Identifier	id
>3893	Callee	SetDefID
>3894	Identifier	SetDefID
>3895	ExpressionStatement	 
>3896	CallExpression	SendDlgItemMessage ( prev_id , BM_SETSTYLE , BS_PUSHBUTTON , ( LPARAM ) TRUE )
>3897	ArgumentList	prev_id
>3898	Argument	( LPARAM ) TRUE
>3899	CastExpression	( LPARAM ) TRUE
>3900	Identifier	TRUE
>3901	CastTarget	LPARAM
>3902	Argument	BS_PUSHBUTTON
>3903	Identifier	BS_PUSHBUTTON
>3904	Argument	BM_SETSTYLE
>3905	Identifier	BM_SETSTYLE
>3906	Argument	prev_id
>3907	Identifier	prev_id
>3908	Callee	SendDlgItemMessage
>3909	Identifier	SendDlgItemMessage
>3910	ExpressionStatement	 
>3911	CallExpression	SendDlgItemMessage ( prev_id , WM_KILLFOCUS )
>3912	ArgumentList	prev_id
>3913	Argument	WM_KILLFOCUS
>3914	Identifier	WM_KILLFOCUS
>3915	Argument	prev_id
>3916	Identifier	prev_id
>3917	Callee	SendDlgItemMessage
>3918	Identifier	SendDlgItemMessage
>3919	IdentifierDeclStatement	 
>3920	IdentifierDecl	prev_id = GetDefID ( )
>3921	AssignmentExpr	prev_id = GetDefID ( )
>3922	CallExpression	GetDefID ( )
>3923	ArgumentList	 
>3924	Callee	GetDefID
>3925	Identifier	GetDefID
>3926	Identifier	prev_id
>3927	Identifier	prev_id
>3928	IdentifierDeclType	DWORD
>3941	FunctionDef	CdotNetInstallerDlg 
>3942	ParameterList	 
>3943	ReturnType	void
>3944	CompoundStatement	 
>3945	ExpressionStatement	 
>3946	CallExpression	m_ListBoxComponents . ResetContent ( )
>3947	ArgumentList	 
>3948	Callee	m_ListBoxComponents . ResetContent
>3949	MemberAccess	m_ListBoxComponents . ResetContent
>3950	Identifier	ResetContent
>3951	Identifier	m_ListBoxComponents
>3956	FunctionDef	CdotNetInstallerDlg 
>3957	ParameterList	 
>3958	ReturnType	HINSTANCE
>3959	CompoundStatement	 
>3960	ReturnStatement	 
>3961	PtrMemberAccess	AfxGetApp ( ) -> m_hInstance
>3962	Identifier	m_hInstance
>3963	CallExpression	AfxGetApp ( )
>3964	ArgumentList	 
>3965	Callee	AfxGetApp
>3966	Identifier	AfxGetApp
>3973	FunctionDef	CdotNetInstallerDlg 
>3974	ParameterList	 
>3975	ReturnType	HWND
>3976	CompoundStatement	 
>3977	ReturnStatement	 
>3978	CallExpression	GetSafeHwnd ( )
>3979	ArgumentList	 
>3980	Callee	GetSafeHwnd
>3981	Identifier	GetSafeHwnd
>3986	FunctionDef	CdotNetInstallerDlg 
>3987	ParameterList	 
>3988	ReturnType	void
>3989	CompoundStatement	 
>3990	ExpressionStatement	 
>3991	CallExpression	OnOK ( )
>3992	ArgumentList	 
>3993	Callee	OnOK
>3994	Identifier	OnOK
>3998	FunctionDef	CdotNetInstallerDlg 
>3999	ParameterList	 
>4000	ReturnType	void
>4001	CompoundStatement	 
>4002	ExpressionStatement	 
>4003	CallExpression	OnBnClickedInstall ( )
>4004	ArgumentList	 
>4005	Callee	OnBnClickedInstall
>4006	Identifier	OnBnClickedInstall
>4007	ExpressionStatement	 
>4008	CallExpression	m_InfoLink . EnableWindow ( FALSE )
>4009	ArgumentList	FALSE
>4010	Argument	FALSE
>4011	Identifier	FALSE
>4012	Callee	m_InfoLink . EnableWindow
>4013	MemberAccess	m_InfoLink . EnableWindow
>4014	Identifier	EnableWindow
>4015	Identifier	m_InfoLink
>4016	ExpressionStatement	 
>4017	CallExpression	m_btnCancel . EnableWindow ( FALSE )
>4018	ArgumentList	FALSE
>4019	Argument	FALSE
>4020	Identifier	FALSE
>4021	Callee	m_btnCancel . EnableWindow
>4022	MemberAccess	m_btnCancel . EnableWindow
>4023	Identifier	EnableWindow
>4024	Identifier	m_btnCancel
>4025	ExpressionStatement	 
>4026	CallExpression	m_btnInstall . EnableWindow ( FALSE )
>4027	ArgumentList	FALSE
>4028	Argument	FALSE
>4029	Identifier	FALSE
>4030	Callee	m_btnInstall . EnableWindow
>4031	MemberAccess	m_btnInstall . EnableWindow
>4032	Identifier	EnableWindow
>4033	Identifier	m_btnInstall
>4034	IfStatement	if ( ! InstallUILevelSetting 
>4035	CompoundStatement	 
>4036	ExpressionStatement	 
>4037	CallExpression	UpdateWindow ( )
>4038	ArgumentList	 
>4039	Callee	UpdateWindow
>4040	Identifier	UpdateWindow
>4041	ExpressionStatement	 
>4042	CallExpression	ShowWindow ( SW_SHOW )
>4043	ArgumentList	SW_SHOW
>4044	Argument	SW_SHOW
>4045	Identifier	SW_SHOW
>4046	Callee	ShowWindow
>4047	Identifier	ShowWindow
>4048	Condition	 
>4049	UnaryOp	! InstallUILevelSetting 
>4050	CallExpression	InstallUILevelSetting 
>4051	ArgumentList	 
>4052	Callee	InstallUILevelSetting 
>4053	PtrMemberAccess	InstallUILevelSetting 
>4054	Identifier	IsSilent
>4055	Identifier	InstallUILevelSetting 
>4056	UnaryOperator	!
>4068	FunctionDef	CdotNetInstallerDlg 
>4069	ParameterList	bool required
>4070	Parameter	 
>4071	Identifier	required
>4072	ParameterType	bool
>4073	ReturnType	void
>4074	CompoundStatement	 
>4075	ExpressionStatement	 
>4076	CallExpression	m_btnInstall . SendMessage ( BCM_SETSHIELD , 0 , required ? TRUE 
>4077	ArgumentList	BCM_SETSHIELD
>4078	Argument	required ? TRUE 
>4079	ConditionalExpression	required ? TRUE 
>4080	Identifier	FALSE
>4081	Identifier	TRUE
>4082	Condition	required
>4083	Identifier	required
>4084	Argument	0
>4085	PrimaryExpression	0
>4086	Argument	BCM_SETSHIELD
>4087	Identifier	BCM_SETSHIELD
>4088	Callee	m_btnInstall . SendMessage
>4089	MemberAccess	m_btnInstall . SendMessage
>4090	Identifier	SendMessage
>4091	Identifier	m_btnInstall
<3=9,8,4
<4=5
<5=7,6
<9=10
<10=11
<11=23,12
<12=16,13
<13=14
<14=15
<16=17
<17=19,18
<19=21,20
<21=22
<33=39,38,34
<34=35
<35=37,36
<39=128,117,106,95,84,73,62,51,40
<40=41
<41=49,42
<42=47,45,43
<43=44
<45=46
<47=48
<49=50
<51=52
<52=60,53
<53=58,56,54
<54=55
<56=57
<58=59
<60=61
<62=63
<63=71,64
<64=69,67,65
<65=66
<67=68
<69=70
<71=72
<73=74
<74=82,75
<75=80,78,76
<76=77
<78=79
<80=81
<82=83
<84=85
<85=93,86
<86=91,89,87
<87=88
<89=90
<91=92
<93=94
<95=96
<96=104,97
<97=102,100,98
<98=99
<100=101
<102=103
<104=105
<106=107
<107=115,108
<108=113,111,109
<109=110
<111=112
<113=114
<115=116
<117=118
<118=126,119
<119=124,122,120
<120=121
<122=123
<124=125
<126=127
<128=129
<129=133,130
<130=131
<131=132
<133=134
<155=158,157,156
<158=159
<159=160
<160=167,161
<161=163,162
<163=164
<164=166,165
<175=178,177,176
<178=276,220,219,218,217,216,215,214,181,179
<179=180
<181=213,212,211,210,209,208,192,187,182
<182=183
<183=185,184
<185=186
<187=188
<188=190,189
<190=191
<192=193
<193=206,194
<194=199,195
<195=196
<196=198,197
<199=200
<200=204,201
<201=202
<202=203
<204=205
<206=207
<220=275,221
<221=274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,232,227,222
<222=223
<223=225,224
<225=226
<227=228
<228=230,229
<230=231
<232=233
<233=256,234
<234=239,235
<235=236
<236=238,237
<239=240
<240=242,241
<242=243
<243=245,244
<245=254,246
<246=247
<247=248
<248=250,249
<250=251
<251=253,252
<254=255
<256=257
<276=277
<277=881,872,863,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,836,835,834,833,832,831,830,829,828,827,826,825,824,823,822,821,820,805,800,799,798,797,278,283,288,293,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,374,393,404,415,479,591,687,708,729,755,774,775,776,777,778,779,780,781,782,783,784,791,792,793,794,795,796
<278=279
<279=281,280
<281=282
<283=284
<284=286,285
<286=287
<288=289
<289=291,290
<291=292
<293=315,314,313,312,311,310,309,308,307,306,305,304,303,302,301,300,299,298,297,296,295,294
<334=354,337,335
<335=336
<337=338
<338=339
<339=350,340
<340=341
<341=342
<342=348,343
<343=344
<344=345
<345=347,346
<348=349
<350=351
<351=353,352
<354=355
<355=364,356
<356=362,357
<357=358
<358=359
<359=361,360
<362=363
<364=373,365
<365=367,366
<367=368
<368=370,369
<370=372,371
<374=384,375
<375=376
<376=380,377
<377=378
<378=379
<380=381
<381=383,382
<384=385
<385=387,386
<387=388
<388=390,389
<390=392,391
<393=394
<394=400,395
<395=396
<396=397
<397=399,398
<400=401
<401=403,402
<404=405
<405=411,406
<406=407
<407=408
<408=410,409
<411=412
<412=414,413
<415=465,416
<416=463,456,455,453,446,445,443,436,435,433,417
<417=418
<418=431,419
<419=420
<420=421
<421=430,422
<422=424,423
<424=425
<425=427,426
<427=429,428
<431=432
<433=434
<436=437
<437=441,438
<438=439
<439=440
<441=442
<443=444
<446=447
<447=451,448
<448=449
<449=450
<451=452
<453=454
<456=457
<457=461,458
<458=459
<459=460
<461=462
<463=464
<465=466
<466=477,467
<467=468
<468=469
<469=471,470
<471=472
<472=474,473
<474=476,475
<477=478
<479=582,480
<480=569,558,547,536,525,514,503,492,481
<481=482
<482=490,483
<483=488,484
<484=485
<485=487,486
<488=489
<490=491
<492=493
<493=501,494
<494=499,495
<495=496
<496=498,497
<499=500
<501=502
<503=504
<504=512,505
<505=510,506
<506=507
<507=509,508
<510=511
<512=513
<514=515
<515=523,516
<516=521,517
<517=518
<518=520,519
<521=522
<523=524
<525=526
<526=534,527
<527=532,528
<528=529
<529=531,530
<532=533
<534=535
<536=537
<537=545,538
<538=543,539
<539=540
<540=542,541
<543=544
<545=546
<547=548
<548=556,549
<549=554,550
<550=551
<551=553,552
<554=555
<556=557
<558=559
<559=567,560
<560=565,561
<561=562
<562=564,563
<565=566
<567=568
<569=570
<570=580,571
<571=576,572
<572=573
<573=575,574
<576=577
<577=579,578
<580=581
<582=583
<583=590,584
<584=586,585
<586=587
<587=589,588
<591=683,592
<592=681,660,639,638,636,615,594,593
<594=595
<595=611,596
<596=597
<597=598
<598=600,599
<600=601
<601=603,602
<603=605,604
<605=606
<606=608,607
<608=610,609
<611=612
<612=614,613
<615=616
<616=632,617
<617=618
<618=619
<619=621,620
<621=622
<622=624,623
<624=626,625
<626=627
<627=629,628
<629=631,630
<632=633
<633=635,634
<636=637
<639=640
<640=656,641
<641=642
<642=643
<643=645,644
<645=646
<646=648,647
<648=650,649
<650=651
<651=653,652
<653=655,654
<656=657
<657=659,658
<660=661
<661=677,662
<662=663
<663=664
<664=666,665
<666=667
<667=669,668
<669=671,670
<671=672
<672=674,673
<674=676,675
<677=678
<678=680,679
<681=682
<683=684
<684=686,685
<687=688
<688=704,689
<689=690
<690=691
<691=693,692
<693=694
<694=696,695
<696=698,697
<698=699
<699=701,700
<701=703,702
<704=705
<705=707,706
<708=709
<709=725,710
<710=711
<711=712
<712=714,713
<714=715
<715=717,716
<717=719,718
<719=720
<720=722,721
<722=724,723
<725=726
<726=728,727
<729=730
<730=749,731
<731=747,732
<732=733
<733=734
<734=736,735
<736=737
<737=739,738
<739=741,740
<741=742
<742=744,743
<744=746,745
<747=748
<749=751,750
<751=753,752
<753=754
<755=756
<756=772,757
<757=758
<758=759
<759=761,760
<761=762
<762=764,763
<764=766,765
<766=767
<767=769,768
<769=771,770
<772=773
<784=785
<785=789,786
<786=787
<787=788
<789=790
<800=801
<801=803,802
<803=804
<805=816,806
<806=807
<807=808
<808=812,809
<809=810
<810=811
<812=813
<813=815,814
<816=817
<817=819,818
<854=855
<855=861,856
<856=859,857
<857=858
<859=860
<861=862
<863=864
<864=870,865
<865=868,866
<866=867
<868=869
<870=871
<872=873
<873=877,874
<874=875
<875=876
<877=878
<878=880,879
<881=882
<882=884,883
<884=885
<967=970,969,968
<970=971
<971=1091,979,972
<972=973
<973=974
<974=975
<975=977,976
<977=978
<979=1086,1066,1054,1042,1038,1029,1011,993,980
<980=981
<981=989,982
<982=987,985,983
<983=984
<985=986
<987=988
<989=990
<990=992,991
<993=994
<994=1010,1009,995
<995=1008,996
<996=998,997
<998=1002,999
<999=1001,1000
<1002=1004,1003
<1004=1005
<1005=1007,1006
<1011=1012
<1012=1028,1027,1013
<1013=1026,1014
<1014=1016,1015
<1016=1020,1017
<1017=1019,1018
<1020=1022,1021
<1022=1023
<1023=1025,1024
<1029=1030
<1030=1036,1031
<1031=1032
<1032=1033
<1033=1035,1034
<1036=1037
<1038=1039
<1039=1041,1040
<1042=1043
<1043=1053,1052,1044
<1044=1051,1045
<1045=1049,1046
<1046=1047
<1047=1048
<1049=1050
<1054=1055
<1055=1065,1064,1056
<1056=1063,1057
<1057=1061,1058
<1058=1059
<1059=1060
<1061=1062
<1066=1067
<1067=1084,1068
<1068=1082,1071,1069
<1069=1070
<1071=1072
<1072=1081,1073
<1073=1080,1074
<1074=1076,1075
<1076=1077
<1077=1079,1078
<1082=1083
<1084=1085
<1086=1087
<1087=1090,1089,1088
<1091=1092
<1092=1094,1093
<1094=1095
<1117=1120,1119,1118
<1120=1121
<1121=1122
<1122=1126,1123
<1123=1125,1124
<1133=1136,1135,1134
<1136=1137
<1137=1182,1173,1170,1138
<1138=1154,1139
<1139=1140
<1140=1151,1141
<1141=1143,1142
<1143=1147,1144
<1144=1145
<1145=1146
<1147=1148
<1148=1150,1149
<1151=1153,1152
<1154=1155
<1155=1169,1168,1156
<1156=1167,1157
<1157=1166,1158
<1158=1162,1159
<1159=1160
<1160=1161
<1162=1163
<1163=1165,1164
<1170=1172,1171
<1173=1174
<1174=1181,1175
<1175=1177,1176
<1177=1178
<1178=1180,1179
<1182=1183
<1183=1184
<1184=1189,1188,1185
<1185=1187,1186
<1201=1204,1203,1202
<1204=1241,1240,1239,1238,1237,1236,1235,1234,1233,1232,1225,1224,1223,1222,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205
<1225=1226
<1226=1230,1227
<1227=1228
<1228=1229
<1230=1231
<1241=1242
<1242=1244,1243
<1244=1245
<1250=1253,1252,1251
<1253=1339,1288,1287,1286,1285,1284,1283,1282,1254
<1254=1281,1280,1279,1278,1277,1276,1260,1255
<1255=1256
<1256=1258,1257
<1258=1259
<1260=1261
<1261=1274,1262
<1262=1267,1263
<1263=1264
<1264=1266,1265
<1267=1268
<1268=1272,1269
<1269=1270
<1270=1271
<1272=1273
<1274=1275
<1288=1338,1289
<1289=1337,1336,1335,1334,1333,1332,1331,1330,1329,1328,1327,1326,1325,1324,1323,1322,1321,1295,1290
<1290=1291
<1291=1293,1292
<1293=1294
<1295=1296
<1296=1319,1297
<1297=1302,1298
<1298=1299
<1299=1301,1300
<1302=1303
<1303=1305,1304
<1305=1306
<1306=1308,1307
<1308=1317,1309
<1309=1310
<1310=1311
<1311=1313,1312
<1313=1314
<1314=1316,1315
<1317=1318
<1319=1320
<1339=1340
<1340=1479,1470,1463,1454,1447,1438,1433,1428,1415,1414,1413,1412,1411,1410,1409,1408,1407,1406,1399,1398,1397,1396,1395,1394,1393,1392,1391,1390,1389,1382,1362,1348,1341
<1341=1342
<1342=1346,1343
<1343=1344
<1344=1345
<1346=1347
<1348=1349
<1349=1361,1360,1350
<1350=1359,1351
<1351=1355,1352
<1352=1353
<1353=1354
<1355=1356
<1356=1358,1357
<1362=1363
<1363=1381,1380,1364
<1364=1379,1365
<1365=1375,1366
<1366=1371,1367
<1367=1368
<1368=1370,1369
<1371=1372
<1372=1374,1373
<1375=1376
<1376=1378,1377
<1382=1383
<1383=1385,1384
<1385=1386
<1386=1388,1387
<1399=1400
<1400=1404,1401
<1401=1402
<1402=1403
<1404=1405
<1415=1423,1416
<1416=1418,1417
<1418=1419
<1419=1421,1420
<1421=1422
<1423=1424
<1424=1426,1425
<1426=1427
<1428=1429
<1429=1431,1430
<1431=1432
<1433=1434
<1434=1436,1435
<1436=1437
<1438=1439
<1439=1443,1440
<1440=1441
<1441=1442
<1443=1444
<1444=1446,1445
<1447=1448
<1448=1453,1452,1449
<1449=1451,1450
<1454=1455
<1455=1459,1456
<1456=1457
<1457=1458
<1459=1460
<1460=1462,1461
<1463=1464
<1464=1469,1468,1465
<1465=1467,1466
<1470=1471
<1471=1475,1472
<1472=1473
<1473=1474
<1475=1476
<1476=1478,1477
<1479=1480
<1480=1485,1484,1481
<1481=1483,1482
<1516=1522,1521,1517
<1517=1518
<1518=1520,1519
<1522=1560,1559,1558,1557,1556,1555,1554,1553,1552,1551,1544,1543,1542,1541,1540,1539,1538,1537,1536,1535,1534,1525,1523
<1523=1524
<1525=1526
<1526=1530,1527
<1527=1528
<1528=1529
<1530=1531
<1531=1533,1532
<1544=1545
<1545=1549,1546
<1546=1547
<1547=1548
<1549=1550
<1560=1561
<1561=1571,1570,1562
<1562=1569,1563
<1563=1567,1564
<1564=1565
<1565=1566
<1567=1568
<1581=1587,1586,1582
<1582=1583
<1583=1585,1584
<1587=1588
<1588=1589
<1589=1593,1590
<1590=1591
<1591=1592
<1593=1594
<1594=1596,1595
<1602=1605,1604,1603
<1605=1606
<1606=1607
<1607=1609,1608
<1609=1610
<1614=1617,1616,1615
<1617=1673,1668,1663,1662,1661,1660,1659,1658,1657,1656,1655,1654,1643,1642,1641,1640,1639,1638,1637,1636,1635,1634,1630,1623,1618
<1618=1619
<1619=1621,1620
<1621=1622
<1623=1624
<1624=1626,1625
<1626=1627
<1627=1629,1628
<1630=1633,1631
<1631=1632
<1643=1647,1646,1644
<1644=1645
<1647=1648
<1648=1650,1649
<1650=1651
<1651=1653,1652
<1663=1664
<1664=1666,1665
<1666=1667
<1668=1669
<1669=1671,1670
<1671=1672
<1673=1674
<1674=1678,1675
<1675=1676
<1676=1677
<1678=1679
<1686=1689,1688,1687
<1689=1695,1690
<1690=1691
<1691=1693,1692
<1693=1694
<1695=1696
<1696=1702,1697
<1697=1698
<1698=1699
<1699=1701,1700
<1702=1703
<1707=1716,1715,1708
<1708=1712,1709
<1709=1711,1710
<1712=1714,1713
<1716=1885,1869,1857,1828,1827,1826,1825,1824,1823,1822,1821,1820,1819,1818,1817,1816,1815,1814,1813,1812,1811,1810,1809,1808,1807,1806,1805,1804,1803,1802,1801,1780,1779,1778,1777,1776,1775,1774,1773,1772,1771,1764,1756,1748,1741,1724,1717
<1717=1718
<1718=1720,1719
<1720=1721
<1721=1723,1722
<1724=1732,1725
<1725=1726
<1726=1728,1727
<1728=1729
<1729=1731,1730
<1732=1733
<1733=1740,1734
<1734=1736,1735
<1736=1737
<1737=1739,1738
<1741=1742
<1742=1744,1743
<1744=1745
<1745=1747,1746
<1748=1749
<1749=1753,1750
<1750=1752,1751
<1753=1755,1754
<1756=1757
<1757=1761,1758
<1758=1760,1759
<1761=1763,1762
<1764=1765
<1765=1769,1766
<1766=1767
<1767=1768
<1769=1770
<1780=1792,1781
<1781=1782
<1782=1788,1783
<1783=1786,1784
<1784=1785
<1786=1787
<1788=1789
<1789=1791,1790
<1792=1793
<1793=1800,1794
<1794=1796,1795
<1796=1797
<1797=1799,1798
<1828=1853,1829
<1829=1852,1851,1850,1849,1848,1847,1846,1845,1844,1843,1842,1841,1840,1839,1838,1837,1836,1835,1834,1833,1832,1831,1830
<1853=1854
<1854=1856,1855
<1857=1858
<1858=1868,1867,1859
<1859=1866,1860
<1860=1862,1861
<1862=1863
<1863=1865,1864
<1869=1870
<1870=1884,1883,1871
<1871=1877,1872
<1872=1876,1873
<1873=1875,1874
<1877=1879,1878
<1879=1881,1880
<1881=1882
<1885=1886
<1886=1888,1887
<1910=1919,1918,1911
<1911=1915,1912
<1912=1914,1913
<1915=1917,1916
<1919=2070,2066,2055,2051,2040,2016,1992,1968,1944,1933,1922,1920
<1920=1921
<1922=1923
<1923=1929,1924
<1924=1925
<1925=1926
<1926=1928,1927
<1929=1930
<1930=1932,1931
<1933=1934
<1934=1941,1935
<1935=1937,1936
<1937=1938
<1938=1940,1939
<1941=1943,1942
<1944=1959,1945
<1945=1946
<1946=1955,1947
<1947=1948
<1948=1949
<1949=1951,1950
<1951=1952
<1952=1954,1953
<1955=1956
<1956=1958,1957
<1959=1960
<1960=1962,1961
<1962=1964,1963
<1964=1965
<1965=1967,1966
<1968=1983,1969
<1969=1970
<1970=1979,1971
<1971=1972
<1972=1973
<1973=1975,1974
<1975=1976
<1976=1978,1977
<1979=1980
<1980=1982,1981
<1983=1984
<1984=1986,1985
<1986=1988,1987
<1988=1989
<1989=1991,1990
<1992=2007,1993
<1993=1994
<1994=2003,1995
<1995=1996
<1996=1997
<1997=1999,1998
<1999=2000
<2000=2002,2001
<2003=2004
<2004=2006,2005
<2007=2008
<2008=2010,2009
<2010=2012,2011
<2012=2013
<2013=2015,2014
<2016=2031,2017
<2017=2018
<2018=2027,2019
<2019=2020
<2020=2021
<2021=2023,2022
<2023=2024
<2024=2026,2025
<2027=2028
<2028=2030,2029
<2031=2032
<2032=2034,2033
<2034=2036,2035
<2036=2037
<2037=2039,2038
<2040=2041
<2041=2047,2042
<2042=2043
<2043=2044
<2044=2046,2045
<2047=2048
<2048=2050,2049
<2051=2052
<2052=2054,2053
<2055=2056
<2056=2062,2057
<2057=2058
<2058=2059
<2059=2061,2060
<2062=2063
<2063=2065,2064
<2066=2067
<2067=2069,2068
<2070=2073,2071
<2071=2072
<2073=2074
<2074=2081,2075
<2075=2077,2076
<2077=2078
<2078=2080,2079
<2099=2105,2104,2100
<2100=2101
<2101=2103,2102
<2105=2127,2120,2113,2106
<2106=2107
<2107=2109,2108
<2109=2110
<2110=2112,2111
<2113=2114
<2114=2116,2115
<2116=2117
<2117=2119,2118
<2120=2121
<2121=2126,2125,2122
<2122=2124,2123
<2127=2144,2128
<2128=2143,2142,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2129
<2129=2130
<2144=2145
<2145=2152,2146
<2146=2148,2147
<2148=2149
<2149=2151,2150
<2162=2168,2167,2163
<2163=2164
<2164=2166,2165
<2168=2191,2182,2171,2169
<2169=2170
<2171=2172
<2172=2178,2173
<2173=2176,2174
<2174=2175
<2176=2177
<2178=2179
<2179=2181,2180
<2182=2183
<2183=2189,2184
<2184=2187,2185
<2185=2186
<2187=2188
<2189=2190
<2191=2192
<2192=2202,2201,2193
<2193=2200,2194
<2194=2198,2195
<2195=2196
<2196=2197
<2198=2199
<2212=2218,2217,2213
<2213=2214
<2214=2216,2215
<2218=2221,2219
<2219=2220
<2221=2288,2222
<2222=2287,2286,2285,2284,2283,2282,2281,2280,2279,2272,2271,2270,2269,2268,2267,2266,2265,2264,2263,2262,2223
<2223=2254,2224
<2224=2247,2246,2245,2244,2243,2242,2241,2240,2239,2238,2237,2236,2235,2234,2233,2232,2231,2230,2229,2228,2227,2226,2225
<2247=2248
<2248=2250,2249
<2250=2251
<2251=2253,2252
<2254=2255
<2255=2259,2256
<2256=2258,2257
<2259=2261,2260
<2272=2273
<2273=2277,2274
<2274=2275
<2275=2276
<2277=2278
<2288=2289
<2289=2291,2290
<2291=2292
<2292=2294,2293
<2310=2316,2315,2311
<2311=2312
<2312=2314,2313
<2316=2317
<2317=2318
<2318=2322,2319
<2319=2320
<2320=2321
<2322=2323
<2329=2338,2337,2330
<2330=2334,2331
<2331=2333,2332
<2334=2336,2335
<2338=2339
<2339=2340
<2340=2346,2341
<2341=2344,2342
<2342=2343
<2344=2345
<2346=2347
<2354=2360,2359,2355
<2355=2356
<2356=2358,2357
<2360=2438,2398,2384,2370,2361
<2361=2362
<2362=2366,2363
<2363=2364
<2364=2365
<2366=2367
<2367=2369,2368
<2370=2371
<2371=2380,2372
<2372=2373
<2373=2374
<2374=2378,2375
<2375=2376
<2376=2377
<2378=2379
<2380=2381
<2381=2383,2382
<2384=2385
<2385=2394,2386
<2386=2387
<2387=2388
<2388=2390,2389
<2390=2391
<2391=2393,2392
<2394=2395
<2395=2397,2396
<2398=2399
<2399=2434,2400
<2400=2420,2412,2403,2401
<2401=2402
<2403=2404
<2404=2406,2405
<2406=2407
<2407=2409,2408
<2409=2411,2410
<2412=2413
<2413=2419,2414
<2414=2418,2415
<2415=2417,2416
<2420=2421
<2421=2423,2422
<2423=2424
<2424=2426,2425
<2426=2428,2427
<2428=2429
<2429=2431,2430
<2431=2433,2432
<2434=2435
<2435=2437,2436
<2438=2439
<2439=2444,2443,2440
<2440=2442,2441
<2463=2469,2468,2464
<2464=2465
<2465=2467,2466
<2469=2569,2568,2567,2566,2565,2563,2530,2481,2472,2470
<2470=2471
<2472=2473
<2473=2477,2474
<2474=2475
<2475=2476
<2477=2478
<2478=2480,2479
<2481=2482
<2482=2526,2483
<2483=2524,2522,2520,2518,2516,2514,2512,2510,2508,2506,2504,2502,2498,2484
<2484=2485
<2485=2487,2486
<2487=2488
<2488=2490,2489
<2490=2492,2491
<2492=2493
<2493=2495,2494
<2495=2497,2496
<2498=2499
<2499=2501,2500
<2502=2503
<2504=2505
<2506=2507
<2508=2509
<2510=2511
<2512=2513
<2514=2515
<2516=2517
<2518=2519
<2520=2521
<2522=2523
<2524=2525
<2526=2527
<2527=2529,2528
<2530=2531
<2531=2562,2561,2532
<2532=2560,2533
<2533=2558,2534
<2534=2554,2537,2535
<2535=2536
<2537=2538
<2538=2552,2539
<2539=2542,2540
<2540=2541
<2542=2543
<2543=2545,2544
<2545=2546
<2546=2548,2547
<2548=2550,2549
<2550=2551
<2552=2553
<2554=2555
<2555=2557,2556
<2558=2559
<2563=2564
<2595=2601,2600,2596
<2596=2597
<2597=2599,2598
<2601=2716,2674,2660,2646,2635,2634,2633,2632,2631,2630,2629,2628,2627,2626,2625,2624,2623,2622,2621,2620,2619,2618,2617,2616,2615,2614,2613,2612,2611,2602
<2602=2603
<2603=2607,2604
<2604=2605
<2605=2606
<2607=2608
<2608=2610,2609
<2635=2636
<2636=2642,2637
<2637=2638
<2638=2639
<2639=2641,2640
<2642=2643
<2643=2645,2644
<2646=2647
<2647=2656,2648
<2648=2649
<2649=2650
<2650=2654,2651
<2651=2652
<2652=2653
<2654=2655
<2656=2657
<2657=2659,2658
<2660=2661
<2661=2670,2662
<2662=2663
<2663=2664
<2664=2666,2665
<2666=2667
<2667=2669,2668
<2670=2671
<2671=2673,2672
<2674=2675
<2675=2712,2676
<2676=2698,2690,2681,2679,2677
<2677=2678
<2679=2680
<2681=2682
<2682=2684,2683
<2684=2685
<2685=2687,2686
<2687=2689,2688
<2690=2691
<2691=2697,2692
<2692=2696,2693
<2693=2695,2694
<2698=2699
<2699=2701,2700
<2701=2702
<2702=2704,2703
<2704=2706,2705
<2706=2707
<2707=2709,2708
<2709=2711,2710
<2712=2713
<2713=2715,2714
<2716=2717
<2717=2722,2721,2718
<2718=2720,2719
<2742=2748,2747,2743
<2743=2744
<2744=2746,2745
<2748=2859,2831,2810,2796,2782,2781,2780,2779,2778,2777,2776,2775,2774,2773,2772,2771,2770,2769,2768,2767,2766,2765,2764,2763,2762,2761,2760,2759,2758,2749
<2749=2750
<2750=2754,2751
<2751=2752
<2752=2753
<2754=2755
<2755=2757,2756
<2782=2783
<2783=2792,2784
<2784=2785
<2785=2786
<2786=2790,2787
<2787=2788
<2788=2789
<2790=2791
<2792=2793
<2793=2795,2794
<2796=2797
<2797=2806,2798
<2798=2799
<2799=2800
<2800=2802,2801
<2802=2803
<2803=2805,2804
<2806=2807
<2807=2809,2808
<2810=2811
<2811=2827,2812
<2812=2813
<2813=2814
<2814=2816,2815
<2816=2817
<2817=2819,2818
<2819=2821,2820
<2821=2822
<2822=2824,2823
<2824=2826,2825
<2827=2828
<2828=2830,2829
<2831=2832
<2832=2855,2833
<2833=2847,2838,2836,2834
<2834=2835
<2836=2837
<2838=2839
<2839=2841,2840
<2841=2842
<2842=2844,2843
<2844=2846,2845
<2847=2848
<2848=2854,2849
<2849=2853,2850
<2850=2852,2851
<2855=2856
<2856=2858,2857
<2859=2860
<2860=2865,2864,2861
<2861=2863,2862
<2884=2890,2889,2885
<2885=2886
<2886=2888,2887
<2890=3192,3172,3160,3106,3097,3088,3079,3046,3039,3030,3021,3012,3003,2982,2961,2947,2938,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2914,2913,2912,2911,2910,2909,2908,2907,2906,2905,2904,2903,2902,2901,2900,2891
<2891=2892
<2892=2896,2893
<2893=2894
<2894=2895
<2896=2897
<2897=2899,2898
<2924=2925
<2925=2934,2926
<2926=2927
<2927=2928
<2928=2930,2929
<2930=2931
<2931=2933,2932
<2934=2935
<2935=2937,2936
<2938=2939
<2939=2943,2940
<2940=2941
<2941=2942
<2943=2944
<2944=2946,2945
<2947=2948
<2948=2957,2949
<2949=2950
<2950=2951
<2951=2955,2952
<2952=2953
<2953=2954
<2955=2956
<2957=2958
<2958=2960,2959
<2961=2962
<2962=2978,2963
<2963=2964
<2964=2965
<2965=2967,2966
<2967=2968
<2968=2970,2969
<2970=2972,2971
<2972=2973
<2973=2975,2974
<2975=2977,2976
<2978=2979
<2979=2981,2980
<2982=2983
<2983=2999,2984
<2984=2985
<2985=2986
<2986=2988,2987
<2988=2989
<2989=2991,2990
<2991=2993,2992
<2993=2994
<2994=2996,2995
<2996=2998,2997
<2999=3000
<3000=3002,3001
<3003=3004
<3004=3008,3005
<3005=3006
<3006=3007
<3008=3009
<3009=3011,3010
<3012=3013
<3013=3017,3014
<3014=3015
<3015=3016
<3017=3018
<3018=3020,3019
<3021=3026,3022
<3022=3023
<3023=3025,3024
<3026=3027
<3027=3029,3028
<3030=3035,3031
<3031=3032
<3032=3034,3033
<3035=3036
<3036=3038,3037
<3039=3040
<3040=3045,3044,3041
<3041=3043,3042
<3046=3068,3047
<3047=3048
<3048=3064,3049
<3049=3050
<3050=3051
<3051=3053,3052
<3053=3054
<3054=3056,3055
<3056=3058,3057
<3058=3059
<3059=3061,3060
<3061=3063,3062
<3064=3065
<3065=3067,3066
<3068=3069
<3069=3078,3070
<3070=3072,3071
<3072=3073
<3073=3075,3074
<3075=3077,3076
<3079=3080
<3080=3084,3081
<3081=3082
<3082=3083
<3084=3085
<3085=3087,3086
<3088=3093,3089
<3089=3090
<3090=3092,3091
<3093=3094
<3094=3096,3095
<3097=3102,3098
<3098=3099
<3099=3101,3100
<3102=3103
<3103=3105,3104
<3106=3151,3134,3107
<3107=3108
<3108=3130,3109
<3109=3110
<3110=3126,3111
<3111=3112
<3112=3113
<3113=3115,3114
<3115=3116
<3116=3118,3117
<3118=3120,3119
<3120=3121
<3121=3123,3122
<3123=3125,3124
<3126=3127
<3127=3129,3128
<3130=3131
<3131=3133,3132
<3134=3147,3143,3139,3135
<3135=3136
<3136=3138,3137
<3139=3140
<3140=3142,3141
<3143=3144
<3144=3146,3145
<3147=3148
<3148=3150,3149
<3151=3152
<3152=3154,3153
<3154=3155
<3155=3157,3156
<3157=3159,3158
<3160=3161
<3161=3171,3170,3162
<3162=3169,3163
<3163=3165,3164
<3165=3166
<3166=3168,3167
<3172=3173
<3173=3188,3174
<3174=3179,3177,3175
<3175=3176
<3177=3178
<3179=3180
<3180=3182,3181
<3182=3183
<3183=3185,3184
<3185=3187,3186
<3188=3189
<3189=3191,3190
<3192=3193
<3193=3198,3197,3194
<3194=3196,3195
<3243=3249,3248,3244
<3244=3245
<3245=3247,3246
<3249=3450,3436,3426,3425,3424,3423,3422,3421,3420,3250,3259,3273,3284,3319,3325,3339,3346,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,3375,3376,3377,3378,3379,3390,3404,3405,3406,3407,3408,3409,3410,3411,3412,3413,3414,3415,3416,3417,3418,3419
<3250=3251
<3251=3255,3252
<3252=3253
<3253=3254
<3255=3256
<3256=3258,3257
<3259=3260
<3260=3269,3261
<3261=3262
<3262=3263
<3263=3267,3264
<3264=3265
<3265=3266
<3267=3268
<3269=3270
<3270=3272,3271
<3273=3274
<3274=3280,3275
<3275=3276
<3276=3277
<3277=3279,3278
<3280=3281
<3281=3283,3282
<3284=3285
<3285=3315,3286
<3286=3301,3293,3291,3289,3287
<3287=3288
<3289=3290
<3291=3292
<3293=3294
<3294=3300,3295
<3295=3299,3296
<3296=3298,3297
<3301=3302
<3302=3304,3303
<3304=3305
<3305=3307,3306
<3307=3309,3308
<3309=3310
<3310=3312,3311
<3312=3314,3313
<3315=3316
<3316=3318,3317
<3319=3320
<3320=3322,3321
<3322=3324,3323
<3325=3326
<3326=3338,3337,3327
<3327=3336,3328
<3328=3330,3329
<3330=3331
<3331=3333,3332
<3333=3335,3334
<3339=3340
<3340=3345,3344,3341
<3341=3343,3342
<3346=3347
<3347=3351,3348
<3348=3349
<3349=3350
<3351=3352
<3352=3354,3353
<3379=3380
<3380=3386,3381
<3381=3382
<3382=3383
<3383=3385,3384
<3386=3387
<3387=3389,3388
<3390=3391
<3391=3400,3392
<3392=3393
<3393=3394
<3394=3398,3395
<3395=3396
<3396=3397
<3398=3399
<3400=3401
<3401=3403,3402
<3426=3427
<3427=3433,3428
<3428=3430,3429
<3430=3432,3431
<3433=3435,3434
<3436=3437
<3437=3449,3448,3438
<3438=3447,3439
<3439=3441,3440
<3441=3442
<3442=3444,3443
<3444=3446,3445
<3450=3451
<3451=3456,3455,3452
<3452=3454,3453
<3482=3488,3487,3483
<3483=3484
<3484=3486,3485
<3488=3565,3523,3512,3498,3489
<3489=3490
<3490=3494,3491
<3491=3492
<3492=3493
<3494=3495
<3495=3497,3496
<3498=3499
<3499=3508,3500
<3500=3501
<3501=3502
<3502=3506,3503
<3503=3504
<3504=3505
<3506=3507
<3508=3509
<3509=3511,3510
<3512=3513
<3513=3519,3514
<3514=3515
<3515=3516
<3516=3518,3517
<3519=3520
<3520=3522,3521
<3523=3524
<3524=3561,3525
<3525=3547,3539,3530,3528,3526
<3526=3527
<3528=3529
<3530=3531
<3531=3533,3532
<3533=3534
<3534=3536,3535
<3536=3538,3537
<3539=3540
<3540=3546,3541
<3541=3545,3542
<3542=3544,3543
<3547=3548
<3548=3550,3549
<3550=3551
<3551=3553,3552
<3553=3555,3554
<3555=3556
<3556=3558,3557
<3558=3560,3559
<3561=3562
<3562=3564,3563
<3565=3566
<3566=3571,3570,3567
<3567=3569,3568
<3590=3596,3595,3591
<3591=3592
<3592=3594,3593
<3596=3689,3678,3669,3647,3646,3645,3644,3643,3642,3641,3640,3639,3638,3637,3636,3635,3634,3633,3632,3631,3630,3629,3628,3627,3626,3625,3624,3623,3622,3621,3620,3606,3597
<3597=3598
<3598=3602,3599
<3599=3600
<3600=3601
<3602=3603
<3603=3605,3604
<3606=3607
<3607=3616,3608
<3608=3609
<3609=3610
<3610=3612,3611
<3612=3613
<3613=3615,3614
<3616=3617
<3617=3619,3618
<3647=3648
<3648=3665,3649
<3649=3663,3661,3652,3650
<3650=3651
<3652=3653
<3653=3655,3654
<3655=3656
<3656=3658,3657
<3658=3660,3659
<3661=3662
<3663=3664
<3665=3666
<3666=3668,3667
<3669=3674,3670
<3670=3671
<3671=3673,3672
<3674=3675
<3675=3677,3676
<3678=3679
<3679=3688,3687,3680
<3680=3686,3681
<3681=3685,3682
<3682=3684,3683
<3689=3690
<3690=3695,3694,3691
<3691=3693,3692
<3713=3716,3715,3714
<3716=3830,3717
<3717=3821,3812,3809,3718
<3718=3719
<3719=3800,3735,3720
<3720=3721
<3721=3734,3733,3732,3731,3730,3729,3728,3727,3726,3725,3724,3723,3722
<3735=3736
<3736=3791,3752,3737
<3737=3738
<3738=3751,3750,3749,3748,3747,3746,3745,3744,3743,3742,3741,3740,3739
<3752=3790,3789,3788,3787,3786,3785,3784,3783,3782,3781,3780,3779,3778,3777,3776,3775,3774,3773,3772,3771,3770,3753
<3753=3754
<3754=3763,3755
<3755=3757,3756
<3757=3758
<3758=3760,3759
<3760=3762,3761
<3763=3767,3764
<3764=3766,3765
<3767=3769,3768
<3791=3792
<3792=3794,3793
<3794=3795
<3795=3797,3796
<3797=3799,3798
<3800=3801
<3801=3803,3802
<3803=3804
<3804=3806,3805
<3806=3808,3807
<3809=3811,3810
<3812=3813
<3813=3820,3814
<3814=3816,3815
<3816=3817
<3817=3819,3818
<3821=3822
<3822=3829,3823
<3823=3825,3824
<3825=3826
<3826=3828,3827
<3830=3831
<3831=3833,3832
<3855=3861,3860,3856
<3856=3857
<3857=3859,3858
<3861=3919,3910,3895,3888,3879,3864,3862
<3862=3863
<3864=3865
<3865=3877,3866
<3866=3875,3873,3871,3867
<3867=3868
<3868=3870,3869
<3871=3872
<3873=3874
<3875=3876
<3877=3878
<3879=3880
<3880=3886,3881
<3881=3884,3882
<3882=3883
<3884=3885
<3886=3887
<3888=3889
<3889=3893,3890
<3890=3891
<3891=3892
<3893=3894
<3895=3896
<3896=3908,3897
<3897=3906,3904,3902,3898
<3898=3899
<3899=3901,3900
<3902=3903
<3904=3905
<3906=3907
<3908=3909
<3910=3911
<3911=3917,3912
<3912=3915,3913
<3913=3914
<3915=3916
<3917=3918
<3919=3920
<3920=3928,3927,3921
<3921=3926,3922
<3922=3924,3923
<3924=3925
<3941=3944,3943,3942
<3944=3945
<3945=3946
<3946=3948,3947
<3948=3949
<3949=3951,3950
<3956=3959,3958,3957
<3959=3960
<3960=3961
<3961=3963,3962
<3963=3965,3964
<3965=3966
<3973=3976,3975,3974
<3976=3977
<3977=3978
<3978=3980,3979
<3980=3981
<3986=3989,3988,3987
<3989=3990
<3990=3991
<3991=3993,3992
<3993=3994
<3998=4001,4000,3999
<4001=4034,4025,4016,4007,4002
<4002=4003
<4003=4005,4004
<4005=4006
<4007=4008
<4008=4012,4009
<4009=4010
<4010=4011
<4012=4013
<4013=4015,4014
<4016=4017
<4017=4021,4018
<4018=4019
<4019=4020
<4021=4022
<4022=4024,4023
<4025=4026
<4026=4030,4027
<4027=4028
<4028=4029
<4030=4031
<4031=4033,4032
<4034=4048,4035
<4035=4041,4036
<4036=4037
<4037=4039,4038
<4039=4040
<4041=4042
<4042=4046,4043
<4043=4044
<4044=4045
<4046=4047
<4048=4049
<4049=4056,4050
<4050=4052,4051
<4052=4053
<4053=4055,4054
<4068=4074,4073,4069
<4069=4070
<4070=4072,4071
<4074=4075
<4075=4076
<4076=4088,4077
<4077=4086,4084,4078
<4078=4079
<4079=4082,4081,4080
<4082=4083
<4084=4085
<4086=4087
<4088=4089
<4089=4091,4090
