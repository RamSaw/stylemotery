>47	FunctionDef	Shader 
>48	ParameterList	 
>49	ReturnType	void
>50	CompoundStatement	 
>51	IfStatement	if ( _useShaders )
>52	ElseStatement	else
>53	ExpressionStatement	 
>54	CallExpression	debugLog ( \"Shader support not enabled.\" )
>55	ArgumentList	\"Shader support not enabled.\"
>56	Argument	\"Shader support not enabled.\"
>57	PrimaryExpression	\"Shader support not enabled.\"
>58	Callee	debugLog
>59	Identifier	debugLog
>60	ExpressionStatement	 
>61	CallExpression	debugLog ( \"Shader support enabled.\" )
>62	ArgumentList	\"Shader support enabled.\"
>63	Argument	\"Shader support enabled.\"
>64	PrimaryExpression	\"Shader support enabled.\"
>65	Callee	debugLog
>66	Identifier	debugLog
>67	Condition	 
>68	Identifier	_useShaders
>69	Label	 
>70	Identifier	end
>71	ExpressionStatement	 
>72	AssignmentExpr	_useShaders = true
>73	Identifier	true
>74	Identifier	_useShaders
>75	IfStatement	if ( strstr ( ext , \"GL_ARB_shader_objects\" ) == NULL )
>76	ElseStatement	else
>77	CompoundStatement	 
>78	IfStatement	if ( ! glCreateProgramObjectARB || ! glDeleteObjectARB || ! glUseProgramObjectARB || ! glCreateShaderObjectARB || ! \
>79	CompoundStatement	 
>80	GotoStatement	 
>81	Identifier	end
>82	ExpressionStatement	 
>83	CallExpression	debugLog ( \"One or more GL_ARB_shader_objects functions were not found\" )
>84	ArgumentList	\"One or more GL_ARB_shader_objects functions were not found\"
>85	Argument	\"One or more GL_ARB_shader_objects functions were not found\"
>86	PrimaryExpression	\"One or more GL_ARB_shader_objects functions were not found\"
>87	Callee	debugLog
>88	Identifier	debugLog
>89	ExpressionStatement	 
>90	AssignmentExpr	glCreateProgramObjectARB = 0
>91	PrimaryExpression	0
>92	Identifier	glCreateProgramObjectARB
>93	Condition	 
>94	OrExpression	! glCreateProgramObjectARB || ! glDeleteObjectARB || ! glUseProgramObjectARB || ! glCreateShaderObjectARB || ! \
>95	OrExpression	! glDeleteObjectARB || ! glUseProgramObjectARB || ! glCreateShaderObjectARB || ! glCreateShaderObjectARB || ! \
>96	OrExpression	! glUseProgramObjectARB || ! glCreateShaderObjectARB || ! glCreateShaderObjectARB || ! glCompileShaderARB || ! \
>97	OrExpression	! glCreateShaderObjectARB || ! glCreateShaderObjectARB || ! glCompileShaderARB || ! glGetObjectParameterivARB || ! \
>98	OrExpression	! glCreateShaderObjectARB || ! glCompileShaderARB || ! glGetObjectParameterivARB || ! glAttachObjectARB || ! \
>99	OrExpression	! glCompileShaderARB || ! glGetObjectParameterivARB || ! glAttachObjectARB || ! glGetInfoLogARB || ! \
>100	OrExpression	! glGetObjectParameterivARB || ! glAttachObjectARB || ! glGetInfoLogARB || ! glLinkProgramARB || ! glGetUniformLocationARB || ! \
>101	OrExpression	! glAttachObjectARB || ! glGetInfoLogARB || ! glLinkProgramARB || ! glGetUniformLocationARB || ! glGetActiveUniformARB || ! \
>102	OrExpression	! glGetInfoLogARB || ! glLinkProgramARB || ! glGetUniformLocationARB || ! glGetActiveUniformARB || ! \
>103	OrExpression	! glLinkProgramARB || ! glGetUniformLocationARB || ! glGetActiveUniformARB || ! glUniform1fvARB || ! \
>104	OrExpression	! glGetUniformLocationARB || ! glGetActiveUniformARB || ! glUniform1fvARB || ! glUniform2fvARB || ! \
>105	OrExpression	! glGetActiveUniformARB || ! glUniform1fvARB || ! glUniform2fvARB || ! glUniform3fvARB || ! glUniform4fvARB || ! \
>106	OrExpression	! glUniform1fvARB || ! glUniform2fvARB || ! glUniform3fvARB || ! glUniform4fvARB || ! glUniform1ivARB || ! \
>107	OrExpression	! glUniform2fvARB || ! glUniform3fvARB || ! glUniform4fvARB || ! glUniform1ivARB || ! glUniform2ivARB || ! \
>108	OrExpression	! glUniform3fvARB || ! glUniform4fvARB || ! glUniform1ivARB || ! glUniform2ivARB || ! glUniform3ivARB || ! \
>109	OrExpression	! glUniform4fvARB || ! glUniform1ivARB || ! glUniform2ivARB || ! glUniform3ivARB || ! glUniform4ivARB
>110	OrExpression	! glUniform1ivARB || ! glUniform2ivARB || ! glUniform3ivARB || ! glUniform4ivARB
>111	OrExpression	! glUniform2ivARB || ! glUniform3ivARB || ! glUniform4ivARB
>112	OrExpression	! glUniform3ivARB || ! glUniform4ivARB
>113	UnaryOp	! glUniform4ivARB
>114	Identifier	glUniform4ivARB
>115	UnaryOperator	!
>116	UnaryOp	! glUniform3ivARB
>117	Identifier	glUniform3ivARB
>118	UnaryOperator	!
>119	UnaryOp	! glUniform2ivARB
>120	Identifier	glUniform2ivARB
>121	UnaryOperator	!
>122	UnaryOp	! glUniform1ivARB
>123	Identifier	glUniform1ivARB
>124	UnaryOperator	!
>125	UnaryOp	! glUniform4fvARB
>126	Identifier	glUniform4fvARB
>127	UnaryOperator	!
>128	UnaryOp	! glUniform3fvARB
>129	Identifier	glUniform3fvARB
>130	UnaryOperator	!
>131	UnaryOp	! glUniform2fvARB
>132	Identifier	glUniform2fvARB
>133	UnaryOperator	!
>134	UnaryOp	! glUniform1fvARB
>135	Identifier	glUniform1fvARB
>136	UnaryOperator	!
>137	UnaryOp	! glGetActiveUniformARB
>138	Identifier	glGetActiveUniformARB
>139	UnaryOperator	!
>140	UnaryOp	! glGetUniformLocationARB
>141	Identifier	glGetUniformLocationARB
>142	UnaryOperator	!
>143	UnaryOp	! glLinkProgramARB
>144	Identifier	glLinkProgramARB
>145	UnaryOperator	!
>146	UnaryOp	! glGetInfoLogARB
>147	Identifier	glGetInfoLogARB
>148	UnaryOperator	!
>149	UnaryOp	! glAttachObjectARB
>150	Identifier	glAttachObjectARB
>151	UnaryOperator	!
>152	UnaryOp	! glGetObjectParameterivARB
>153	Identifier	glGetObjectParameterivARB
>154	UnaryOperator	!
>155	UnaryOp	! glCompileShaderARB
>156	Identifier	glCompileShaderARB
>157	UnaryOperator	!
>158	UnaryOp	! glCreateShaderObjectARB
>159	Identifier	glCreateShaderObjectARB
>160	UnaryOperator	!
>161	UnaryOp	! glCreateShaderObjectARB
>162	Identifier	glCreateShaderObjectARB
>163	UnaryOperator	!
>164	UnaryOp	! glUseProgramObjectARB
>165	Identifier	glUseProgramObjectARB
>166	UnaryOperator	!
>167	UnaryOp	! glDeleteObjectARB
>168	Identifier	glDeleteObjectARB
>169	UnaryOperator	!
>170	UnaryOp	! glCreateProgramObjectARB
>171	Identifier	glCreateProgramObjectARB
>172	UnaryOperator	!
>173	ExpressionStatement	 
>174	AssignmentExpr	glUniform4ivARB = ( PFNGLUNIFORM4IVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform4ivARB\" )
>175	CastExpression	( PFNGLUNIFORM4IVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform4ivARB\" )
>176	CallExpression	SDL_GL_GetProcAddress ( \"glUniform4ivARB\" )
>177	ArgumentList	\"glUniform4ivARB\"
>178	Argument	\"glUniform4ivARB\"
>179	PrimaryExpression	\"glUniform4ivARB\"
>180	Callee	SDL_GL_GetProcAddress
>181	Identifier	SDL_GL_GetProcAddress
>182	CastTarget	PFNGLUNIFORM4IVARBPROC
>183	Identifier	glUniform4ivARB
>184	ExpressionStatement	 
>185	AssignmentExpr	glUniform3ivARB = ( PFNGLUNIFORM3IVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform3ivARB\" )
>186	CastExpression	( PFNGLUNIFORM3IVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform3ivARB\" )
>187	CallExpression	SDL_GL_GetProcAddress ( \"glUniform3ivARB\" )
>188	ArgumentList	\"glUniform3ivARB\"
>189	Argument	\"glUniform3ivARB\"
>190	PrimaryExpression	\"glUniform3ivARB\"
>191	Callee	SDL_GL_GetProcAddress
>192	Identifier	SDL_GL_GetProcAddress
>193	CastTarget	PFNGLUNIFORM3IVARBPROC
>194	Identifier	glUniform3ivARB
>195	ExpressionStatement	 
>196	AssignmentExpr	glUniform2ivARB = ( PFNGLUNIFORM2IVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform2ivARB\" )
>197	CastExpression	( PFNGLUNIFORM2IVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform2ivARB\" )
>198	CallExpression	SDL_GL_GetProcAddress ( \"glUniform2ivARB\" )
>199	ArgumentList	\"glUniform2ivARB\"
>200	Argument	\"glUniform2ivARB\"
>201	PrimaryExpression	\"glUniform2ivARB\"
>202	Callee	SDL_GL_GetProcAddress
>203	Identifier	SDL_GL_GetProcAddress
>204	CastTarget	PFNGLUNIFORM2IVARBPROC
>205	Identifier	glUniform2ivARB
>206	ExpressionStatement	 
>207	AssignmentExpr	glUniform1ivARB = ( PFNGLUNIFORM1IVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform1ivARB\" )
>208	CastExpression	( PFNGLUNIFORM1IVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform1ivARB\" )
>209	CallExpression	SDL_GL_GetProcAddress ( \"glUniform1ivARB\" )
>210	ArgumentList	\"glUniform1ivARB\"
>211	Argument	\"glUniform1ivARB\"
>212	PrimaryExpression	\"glUniform1ivARB\"
>213	Callee	SDL_GL_GetProcAddress
>214	Identifier	SDL_GL_GetProcAddress
>215	CastTarget	PFNGLUNIFORM1IVARBPROC
>216	Identifier	glUniform1ivARB
>217	ExpressionStatement	 
>218	AssignmentExpr	glUniform4fvARB = ( PFNGLUNIFORM4FVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform4fvARB\" )
>219	CastExpression	( PFNGLUNIFORM4FVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform4fvARB\" )
>220	CallExpression	SDL_GL_GetProcAddress ( \"glUniform4fvARB\" )
>221	ArgumentList	\"glUniform4fvARB\"
>222	Argument	\"glUniform4fvARB\"
>223	PrimaryExpression	\"glUniform4fvARB\"
>224	Callee	SDL_GL_GetProcAddress
>225	Identifier	SDL_GL_GetProcAddress
>226	CastTarget	PFNGLUNIFORM4FVARBPROC
>227	Identifier	glUniform4fvARB
>228	ExpressionStatement	 
>229	AssignmentExpr	glUniform3fvARB = ( PFNGLUNIFORM3FVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform3fvARB\" )
>230	CastExpression	( PFNGLUNIFORM3FVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform3fvARB\" )
>231	CallExpression	SDL_GL_GetProcAddress ( \"glUniform3fvARB\" )
>232	ArgumentList	\"glUniform3fvARB\"
>233	Argument	\"glUniform3fvARB\"
>234	PrimaryExpression	\"glUniform3fvARB\"
>235	Callee	SDL_GL_GetProcAddress
>236	Identifier	SDL_GL_GetProcAddress
>237	CastTarget	PFNGLUNIFORM3FVARBPROC
>238	Identifier	glUniform3fvARB
>239	ExpressionStatement	 
>240	AssignmentExpr	glUniform2fvARB = ( PFNGLUNIFORM2FVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform2fvARB\" )
>241	CastExpression	( PFNGLUNIFORM2FVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform2fvARB\" )
>242	CallExpression	SDL_GL_GetProcAddress ( \"glUniform2fvARB\" )
>243	ArgumentList	\"glUniform2fvARB\"
>244	Argument	\"glUniform2fvARB\"
>245	PrimaryExpression	\"glUniform2fvARB\"
>246	Callee	SDL_GL_GetProcAddress
>247	Identifier	SDL_GL_GetProcAddress
>248	CastTarget	PFNGLUNIFORM2FVARBPROC
>249	Identifier	glUniform2fvARB
>250	ExpressionStatement	 
>251	AssignmentExpr	glUniform1fvARB = ( PFNGLUNIFORM1FVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform1fvARB\" )
>252	CastExpression	( PFNGLUNIFORM1FVARBPROC ) SDL_GL_GetProcAddress ( \"glUniform1fvARB\" )
>253	CallExpression	SDL_GL_GetProcAddress ( \"glUniform1fvARB\" )
>254	ArgumentList	\"glUniform1fvARB\"
>255	Argument	\"glUniform1fvARB\"
>256	PrimaryExpression	\"glUniform1fvARB\"
>257	Callee	SDL_GL_GetProcAddress
>258	Identifier	SDL_GL_GetProcAddress
>259	CastTarget	PFNGLUNIFORM1FVARBPROC
>260	Identifier	glUniform1fvARB
>261	ExpressionStatement	 
>262	AssignmentExpr	glGetActiveUniformARB = ( PFNGLGETACTIVEUNIFORMARBPROC ) SDL_GL_GetProcAddress ( \"glGetActiveUniformARB\" )
>263	CastExpression	( PFNGLGETACTIVEUNIFORMARBPROC ) SDL_GL_GetProcAddress ( \"glGetActiveUniformARB\" )
>264	CallExpression	SDL_GL_GetProcAddress ( \"glGetActiveUniformARB\" )
>265	ArgumentList	\"glGetActiveUniformARB\"
>266	Argument	\"glGetActiveUniformARB\"
>267	PrimaryExpression	\"glGetActiveUniformARB\"
>268	Callee	SDL_GL_GetProcAddress
>269	Identifier	SDL_GL_GetProcAddress
>270	CastTarget	PFNGLGETACTIVEUNIFORMARBPROC
>271	Identifier	glGetActiveUniformARB
>272	ExpressionStatement	 
>273	AssignmentExpr	glGetUniformLocationARB = ( PFNGLGETUNIFORMLOCATIONARBPROC ) SDL_GL_GetProcAddress ( \"glGetUniformLocationARB\" )
>274	CastExpression	( PFNGLGETUNIFORMLOCATIONARBPROC ) SDL_GL_GetProcAddress ( \"glGetUniformLocationARB\" )
>275	CallExpression	SDL_GL_GetProcAddress ( \"glGetUniformLocationARB\" )
>276	ArgumentList	\"glGetUniformLocationARB\"
>277	Argument	\"glGetUniformLocationARB\"
>278	PrimaryExpression	\"glGetUniformLocationARB\"
>279	Callee	SDL_GL_GetProcAddress
>280	Identifier	SDL_GL_GetProcAddress
>281	CastTarget	PFNGLGETUNIFORMLOCATIONARBPROC
>282	Identifier	glGetUniformLocationARB
>283	ExpressionStatement	 
>284	AssignmentExpr	glLinkProgramARB = ( PFNGLLINKPROGRAMARBPROC ) SDL_GL_GetProcAddress ( \"glLinkProgramARB\" )
>285	CastExpression	( PFNGLLINKPROGRAMARBPROC ) SDL_GL_GetProcAddress ( \"glLinkProgramARB\" )
>286	CallExpression	SDL_GL_GetProcAddress ( \"glLinkProgramARB\" )
>287	ArgumentList	\"glLinkProgramARB\"
>288	Argument	\"glLinkProgramARB\"
>289	PrimaryExpression	\"glLinkProgramARB\"
>290	Callee	SDL_GL_GetProcAddress
>291	Identifier	SDL_GL_GetProcAddress
>292	CastTarget	PFNGLLINKPROGRAMARBPROC
>293	Identifier	glLinkProgramARB
>294	ExpressionStatement	 
>295	AssignmentExpr	glGetInfoLogARB = ( PFNGLGETINFOLOGARBPROC ) SDL_GL_GetProcAddress ( \"glGetInfoLogARB\" )
>296	CastExpression	( PFNGLGETINFOLOGARBPROC ) SDL_GL_GetProcAddress ( \"glGetInfoLogARB\" )
>297	CallExpression	SDL_GL_GetProcAddress ( \"glGetInfoLogARB\" )
>298	ArgumentList	\"glGetInfoLogARB\"
>299	Argument	\"glGetInfoLogARB\"
>300	PrimaryExpression	\"glGetInfoLogARB\"
>301	Callee	SDL_GL_GetProcAddress
>302	Identifier	SDL_GL_GetProcAddress
>303	CastTarget	PFNGLGETINFOLOGARBPROC
>304	Identifier	glGetInfoLogARB
>305	ExpressionStatement	 
>306	AssignmentExpr	glAttachObjectARB = ( PFNGLATTACHOBJECTARBPROC ) SDL_GL_GetProcAddress ( \"glAttachObjectARB\" )
>307	CastExpression	( PFNGLATTACHOBJECTARBPROC ) SDL_GL_GetProcAddress ( \"glAttachObjectARB\" )
>308	CallExpression	SDL_GL_GetProcAddress ( \"glAttachObjectARB\" )
>309	ArgumentList	\"glAttachObjectARB\"
>310	Argument	\"glAttachObjectARB\"
>311	PrimaryExpression	\"glAttachObjectARB\"
>312	Callee	SDL_GL_GetProcAddress
>313	Identifier	SDL_GL_GetProcAddress
>314	CastTarget	PFNGLATTACHOBJECTARBPROC
>315	Identifier	glAttachObjectARB
>316	ExpressionStatement	 
>317	AssignmentExpr	glGetObjectParameterivARB = ( PFNGLGETOBJECTPARAMETERIVARBPROC ) SDL_GL_GetProcAddress ( \"glGetObjectParameterivARB\" )
>318	CastExpression	( PFNGLGETOBJECTPARAMETERIVARBPROC ) SDL_GL_GetProcAddress ( \"glGetObjectParameterivARB\" )
>319	CallExpression	SDL_GL_GetProcAddress ( \"glGetObjectParameterivARB\" )
>320	ArgumentList	\"glGetObjectParameterivARB\"
>321	Argument	\"glGetObjectParameterivARB\"
>322	PrimaryExpression	\"glGetObjectParameterivARB\"
>323	Callee	SDL_GL_GetProcAddress
>324	Identifier	SDL_GL_GetProcAddress
>325	CastTarget	PFNGLGETOBJECTPARAMETERIVARBPROC
>326	Identifier	glGetObjectParameterivARB
>327	ExpressionStatement	 
>328	AssignmentExpr	glCompileShaderARB = ( PFNGLCOMPILESHADERARBPROC ) SDL_GL_GetProcAddress ( \"glCompileShaderARB\" )
>329	CastExpression	( PFNGLCOMPILESHADERARBPROC ) SDL_GL_GetProcAddress ( \"glCompileShaderARB\" )
>330	CallExpression	SDL_GL_GetProcAddress ( \"glCompileShaderARB\" )
>331	ArgumentList	\"glCompileShaderARB\"
>332	Argument	\"glCompileShaderARB\"
>333	PrimaryExpression	\"glCompileShaderARB\"
>334	Callee	SDL_GL_GetProcAddress
>335	Identifier	SDL_GL_GetProcAddress
>336	CastTarget	PFNGLCOMPILESHADERARBPROC
>337	Identifier	glCompileShaderARB
>338	ExpressionStatement	 
>339	AssignmentExpr	glShaderSourceARB = ( PFNGLSHADERSOURCEARBPROC ) SDL_GL_GetProcAddress ( \"glShaderSourceARB\" )
>340	CastExpression	( PFNGLSHADERSOURCEARBPROC ) SDL_GL_GetProcAddress ( \"glShaderSourceARB\" )
>341	CallExpression	SDL_GL_GetProcAddress ( \"glShaderSourceARB\" )
>342	ArgumentList	\"glShaderSourceARB\"
>343	Argument	\"glShaderSourceARB\"
>344	PrimaryExpression	\"glShaderSourceARB\"
>345	Callee	SDL_GL_GetProcAddress
>346	Identifier	SDL_GL_GetProcAddress
>347	CastTarget	PFNGLSHADERSOURCEARBPROC
>348	Identifier	glShaderSourceARB
>349	ExpressionStatement	 
>350	AssignmentExpr	glCreateShaderObjectARB = ( PFNGLCREATESHADEROBJECTARBPROC ) SDL_GL_GetProcAddress ( \"glCreateShaderObjectARB\" )
>351	CastExpression	( PFNGLCREATESHADEROBJECTARBPROC ) SDL_GL_GetProcAddress ( \"glCreateShaderObjectARB\" )
>352	CallExpression	SDL_GL_GetProcAddress ( \"glCreateShaderObjectARB\" )
>353	ArgumentList	\"glCreateShaderObjectARB\"
>354	Argument	\"glCreateShaderObjectARB\"
>355	PrimaryExpression	\"glCreateShaderObjectARB\"
>356	Callee	SDL_GL_GetProcAddress
>357	Identifier	SDL_GL_GetProcAddress
>358	CastTarget	PFNGLCREATESHADEROBJECTARBPROC
>359	Identifier	glCreateShaderObjectARB
>360	ExpressionStatement	 
>361	AssignmentExpr	glUseProgramObjectARB = ( PFNGLUSEPROGRAMOBJECTARBPROC ) SDL_GL_GetProcAddress ( \"glUseProgramObjectARB\" )
>362	CastExpression	( PFNGLUSEPROGRAMOBJECTARBPROC ) SDL_GL_GetProcAddress ( \"glUseProgramObjectARB\" )
>363	CallExpression	SDL_GL_GetProcAddress ( \"glUseProgramObjectARB\" )
>364	ArgumentList	\"glUseProgramObjectARB\"
>365	Argument	\"glUseProgramObjectARB\"
>366	PrimaryExpression	\"glUseProgramObjectARB\"
>367	Callee	SDL_GL_GetProcAddress
>368	Identifier	SDL_GL_GetProcAddress
>369	CastTarget	PFNGLUSEPROGRAMOBJECTARBPROC
>370	Identifier	glUseProgramObjectARB
>371	ExpressionStatement	 
>372	AssignmentExpr	glDeleteObjectARB = ( PFNGLDELETEOBJECTARBPROC ) SDL_GL_GetProcAddress ( \"glDeleteObjectARB\" )
>373	CastExpression	( PFNGLDELETEOBJECTARBPROC ) SDL_GL_GetProcAddress ( \"glDeleteObjectARB\" )
>374	CallExpression	SDL_GL_GetProcAddress ( \"glDeleteObjectARB\" )
>375	ArgumentList	\"glDeleteObjectARB\"
>376	Argument	\"glDeleteObjectARB\"
>377	PrimaryExpression	\"glDeleteObjectARB\"
>378	Callee	SDL_GL_GetProcAddress
>379	Identifier	SDL_GL_GetProcAddress
>380	CastTarget	PFNGLDELETEOBJECTARBPROC
>381	Identifier	glDeleteObjectARB
>382	ExpressionStatement	 
>383	AssignmentExpr	glCreateProgramObjectARB = ( PFNGLCREATEPROGRAMOBJECTARBPROC ) SDL_GL_GetProcAddress ( \"glCreateProgramObjectARB\" )
>384	CastExpression	( PFNGLCREATEPROGRAMOBJECTARBPROC ) SDL_GL_GetProcAddress ( \"glCreateProgramObjectARB\" )
>385	CallExpression	SDL_GL_GetProcAddress ( \"glCreateProgramObjectARB\" )
>386	ArgumentList	\"glCreateProgramObjectARB\"
>387	Argument	\"glCreateProgramObjectARB\"
>388	PrimaryExpression	\"glCreateProgramObjectARB\"
>389	Callee	SDL_GL_GetProcAddress
>390	Identifier	SDL_GL_GetProcAddress
>391	CastTarget	PFNGLCREATEPROGRAMOBJECTARBPROC
>392	Identifier	glCreateProgramObjectARB
>393	CompoundStatement	 
>394	GotoStatement	 
>395	Identifier	end
>396	ExpressionStatement	 
>397	CallExpression	debugLog ( \"GL_ARB_shader_objects extension was not found\" )
>398	ArgumentList	\"GL_ARB_shader_objects extension was not found\"
>399	Argument	\"GL_ARB_shader_objects extension was not found\"
>400	PrimaryExpression	\"GL_ARB_shader_objects extension was not found\"
>401	Callee	debugLog
>402	Identifier	debugLog
>403	Condition	 
>404	EqualityExpression	strstr ( ext , \"GL_ARB_shader_objects\" ) == NULL
>405	Identifier	NULL
>406	CallExpression	strstr ( ext , \"GL_ARB_shader_objects\" )
>407	ArgumentList	ext
>408	Argument	\"GL_ARB_shader_objects\"
>409	PrimaryExpression	\"GL_ARB_shader_objects\"
>410	Argument	ext
>411	Identifier	ext
>412	Callee	strstr
>413	Identifier	strstr
>414	IfStatement	if ( strstr ( ext , \"GL_ARB_shading_language_100\" ) == NULL )
>415	CompoundStatement	 
>416	GotoStatement	 
>417	Identifier	end
>418	ExpressionStatement	 
>419	CallExpression	debugLog ( \"GL_ARB_shading_language_100 extension was not found\" )
>420	ArgumentList	\"GL_ARB_shading_language_100 extension was not found\"
>421	Argument	\"GL_ARB_shading_language_100 extension was not found\"
>422	PrimaryExpression	\"GL_ARB_shading_language_100 extension was not found\"
>423	Callee	debugLog
>424	Identifier	debugLog
>425	Condition	 
>426	EqualityExpression	strstr ( ext , \"GL_ARB_shading_language_100\" ) == NULL
>427	Identifier	NULL
>428	CallExpression	strstr ( ext , \"GL_ARB_shading_language_100\" )
>429	ArgumentList	ext
>430	Argument	\"GL_ARB_shading_language_100\"
>431	PrimaryExpression	\"GL_ARB_shading_language_100\"
>432	Argument	ext
>433	Identifier	ext
>434	Callee	strstr
>435	Identifier	strstr
>436	IdentifierDeclStatement	 
>437	IdentifierDecl	* ext = ( char * ) glGetString ( GL_EXTENSIONS )
>438	AssignmentExpr	* ext = ( char * ) glGetString ( GL_EXTENSIONS )
>439	CastExpression	( char * ) glGetString ( GL_EXTENSIONS )
>440	CallExpression	glGetString ( GL_EXTENSIONS )
>441	ArgumentList	GL_EXTENSIONS
>442	Argument	GL_EXTENSIONS
>443	Identifier	GL_EXTENSIONS
>444	Callee	glGetString
>445	Identifier	glGetString
>446	CastTarget	char *
>447	Identifier	ext
>448	Identifier	ext
>449	IdentifierDeclType	char *
>450	ExpressionStatement	 
>451	CallExpression	debugLog ( \"Initializing shaders...\" )
>452	ArgumentList	\"Initializing shaders...\"
>453	Argument	\"Initializing shaders...\"
>454	PrimaryExpression	\"Initializing shaders...\"
>455	Callee	debugLog
>456	Identifier	debugLog
>457	ExpressionStatement	 
>458	AssignmentExpr	_wasInited = true
>459	Identifier	true
>460	Identifier	_wasInited
>461	IfStatement	if ( _wasInited )
>462	ReturnStatement	 
>463	Condition	 
>464	Identifier	_wasInited
>497	FunctionDef	Shader 
>498	ParameterList	 
>499	CompoundStatement	 
>500	ExpressionStatement	 
>501	AssignmentExpr	g_programObj = 0
>502	PrimaryExpression	0
>503	Identifier	g_programObj
>504	ExpressionStatement	 
>505	AssignmentExpr	uniformsDirty = false
>506	Identifier	false
>507	Identifier	uniformsDirty
>508	ExpressionStatement	 
>509	AssignmentExpr	numUniforms = - 1
>510	UnaryOp	- 1
>511	PrimaryExpression	1
>512	UnaryOperator	-
>513	Identifier	numUniforms
>521	FunctionDef	Shader 
>522	ParameterList	 
>523	CompoundStatement	 
>524	ExpressionStatement	 
>525	CallExpression	unload ( )
>526	ArgumentList	 
>527	Callee	unload
>528	Identifier	unload
>532	FunctionDef	Shader 
>533	ParameterList	 
>534	ReturnType	void
>535	CompoundStatement	 
>536	IfStatement	if ( g_programObj )
>537	CompoundStatement	 
>538	ExpressionStatement	 
>539	AssignmentExpr	g_programObj = 0
>540	PrimaryExpression	0
>541	Identifier	g_programObj
>542	ExpressionStatement	 
>543	CallExpression	glDeleteObjectARB ( g_programObj )
>544	ArgumentList	g_programObj
>545	Argument	g_programObj
>546	Identifier	g_programObj
>547	Callee	glDeleteObjectARB
>548	Identifier	glDeleteObjectARB
>549	Condition	 
>550	Identifier	g_programObj
>551	IfStatement	if ( ! _useShaders )
>552	ReturnStatement	 
>553	Condition	 
>554	UnaryOp	! _useShaders
>555	Identifier	_useShaders
>556	UnaryOperator	!
>562	FunctionDef	Shader 
>563	ParameterList	 
>564	ReturnType	bool
>565	CompoundStatement	 
>566	ReturnStatement	 
>567	EqualityExpression	g_programObj != 0
>568	PrimaryExpression	0
>569	Identifier	g_programObj
>574	FunctionDef	Shader 
>575	ParameterList	 
>576	ReturnType	void
>577	CompoundStatement	 
>578	IfStatement	if ( vertFile . size ( ) || fragFile . size ( ) )
>579	ElseStatement	else
>580	ExpressionStatement	 
>581	CallExpression	loadSrc ( vertSrc . c_str ( ) , fragSrc . c_str ( ) )
>582	ArgumentList	vertSrc . c_str ( )
>583	Argument	fragSrc . c_str ( )
>584	CallExpression	fragSrc . c_str ( )
>585	ArgumentList	 
>586	Callee	fragSrc . c_str
>587	MemberAccess	fragSrc . c_str
>588	Identifier	c_str
>589	Identifier	fragSrc
>590	Argument	vertSrc . c_str ( )
>591	CallExpression	vertSrc . c_str ( )
>592	ArgumentList	 
>593	Callee	vertSrc . c_str
>594	MemberAccess	vertSrc . c_str
>595	Identifier	c_str
>596	Identifier	vertSrc
>597	Callee	loadSrc
>598	Identifier	loadSrc
>599	ExpressionStatement	 
>600	CallExpression	load ( vertFile , fragFile )
>601	ArgumentList	vertFile
>602	Argument	fragFile
>603	Identifier	fragFile
>604	Argument	vertFile
>605	Identifier	vertFile
>606	Callee	load
>607	Identifier	load
>608	Condition	 
>609	OrExpression	vertFile . size ( ) || fragFile . size ( )
>610	CallExpression	fragFile . size ( )
>611	ArgumentList	 
>612	Callee	fragFile . size
>613	MemberAccess	fragFile . size
>614	Identifier	size
>615	Identifier	fragFile
>616	CallExpression	vertFile . size ( )
>617	ArgumentList	 
>618	Callee	vertFile . size
>619	MemberAccess	vertFile . size
>620	Identifier	size
>621	Identifier	vertFile
>633	FunctionDef	Shader 
>634	ParameterList	 
>635	ReturnType	void
>636	CompoundStatement	 
>637	ExpressionStatement	 
>638	CallExpression	_flushUniforms ( )
>639	ArgumentList	 
>640	Callee	_flushUniforms
>641	Identifier	_flushUniforms
>642	ExpressionStatement	 
>643	CallExpression	glUseProgramObjectARB ( g_programObj )
>644	ArgumentList	g_programObj
>645	Argument	g_programObj
>646	Identifier	g_programObj
>647	Callee	glUseProgramObjectARB
>648	Identifier	glUseProgramObjectARB
>649	IfStatement	if ( ! _useShaders )
>650	ReturnStatement	 
>651	Condition	 
>652	UnaryOp	! _useShaders
>653	Identifier	_useShaders
>654	UnaryOperator	!
>660	FunctionDef	Shader 
>661	ParameterList	 
>662	ReturnType	void
>663	CompoundStatement	 
>664	ExpressionStatement	 
>665	CallExpression	glUseProgramObjectARB ( 0 )
>666	ArgumentList	0
>667	Argument	0
>668	PrimaryExpression	0
>669	Callee	glUseProgramObjectARB
>670	Identifier	glUseProgramObjectARB
>671	IfStatement	if ( ! _useShaders )
>672	ReturnStatement	 
>673	Condition	 
>674	UnaryOp	! _useShaders
>675	Identifier	_useShaders
>676	UnaryOperator	!
>681	FunctionDef	Shader 
>682	ParameterList	int type , const char * src , char * errbuf , size_t errbufsize
>683	Parameter	 
>684	Identifier	errbufsize
>685	ParameterType	size_t
>686	Parameter	 
>687	Identifier	errbuf
>688	ParameterType	char *
>689	Parameter	 
>690	Identifier	src
>691	ParameterType	const char *
>692	Parameter	 
>693	Identifier	type
>694	ParameterType	int
>695	ReturnType	unsigned int
>696	CompoundStatement	 
>697	ReturnStatement	 
>698	PrimaryExpression	0
>699	ReturnStatement	 
>700	Identifier	handle
>701	IfStatement	if ( err != GL_NO_ERROR )
>702	CompoundStatement	 
>703	ExpressionStatement	 
>704	CallExpression	errorLog ( os . str ( ) )
>705	ArgumentList	os . str ( )
>706	Argument	os . str ( )
>707	CallExpression	os . str ( )
>708	ArgumentList	 
>709	Callee	os . str
>710	MemberAccess	os . str
>711	Identifier	str
>712	Identifier	os
>713	Callee	errorLog
>714	Identifier	errorLog
>715	ExpressionStatement	 
>716	ShiftExpression	os << \"Shader
>717	ShiftExpression	\"Shader
>718	Identifier	err
>719	PrimaryExpression	\"Shader
>720	Identifier	os
>721	IdentifierDeclStatement	 
>722	IdentifierDecl	os
>723	Identifier	os
>724	IdentifierDeclType	std 
>725	Condition	 
>726	EqualityExpression	err != GL_NO_ERROR
>727	Identifier	GL_NO_ERROR
>728	Identifier	err
>729	IdentifierDeclStatement	 
>730	IdentifierDecl	err = glGetError ( )
>731	AssignmentExpr	err = glGetError ( )
>732	CallExpression	glGetError ( )
>733	ArgumentList	 
>734	Callee	glGetError
>735	Identifier	glGetError
>736	Identifier	err
>737	Identifier	err
>738	IdentifierDeclType	GLint
>739	IfStatement	if ( ! compiled )
>740	CompoundStatement	 
>741	ExpressionStatement	 
>742	AssignmentExpr	handle = 0
>743	PrimaryExpression	0
>744	Identifier	handle
>745	ExpressionStatement	 
>746	CallExpression	glDeleteObjectARB ( handle )
>747	ArgumentList	handle
>748	Argument	handle
>749	Identifier	handle
>750	Callee	glDeleteObjectARB
>751	Identifier	glDeleteObjectARB
>752	Condition	 
>753	UnaryOp	! compiled
>754	Identifier	compiled
>755	UnaryOperator	!
>756	ExpressionStatement	 
>757	CallExpression	glGetInfoLogARB ( handle , errbufsize , NULL , errbuf )
>758	ArgumentList	handle
>759	Argument	errbuf
>760	Identifier	errbuf
>761	Argument	NULL
>762	Identifier	NULL
>763	Argument	errbufsize
>764	Identifier	errbufsize
>765	Argument	handle
>766	Identifier	handle
>767	Callee	glGetInfoLogARB
>768	Identifier	glGetInfoLogARB
>769	ExpressionStatement	 
>770	CallExpression	glGetObjectParameterivARB ( handle , GL_OBJECT_COMPILE_STATUS_ARB , & compiled )
>771	ArgumentList	handle
>772	Argument	& compiled
>773	UnaryOp	& compiled
>774	Identifier	compiled
>775	UnaryOperator	&
>776	Argument	GL_OBJECT_COMPILE_STATUS_ARB
>777	Identifier	GL_OBJECT_COMPILE_STATUS_ARB
>778	Argument	handle
>779	Identifier	handle
>780	Callee	glGetObjectParameterivARB
>781	Identifier	glGetObjectParameterivARB
>782	ExpressionStatement	 
>783	CallExpression	glCompileShaderARB ( handle )
>784	ArgumentList	handle
>785	Argument	handle
>786	Identifier	handle
>787	Callee	glCompileShaderARB
>788	Identifier	glCompileShaderARB
>789	ExpressionStatement	 
>790	CallExpression	glShaderSourceARB ( handle , 1 , & src , NULL )
>791	ArgumentList	handle
>792	Argument	NULL
>793	Identifier	NULL
>794	Argument	& src
>795	UnaryOp	& src
>796	Identifier	src
>797	UnaryOperator	&
>798	Argument	1
>799	PrimaryExpression	1
>800	Argument	handle
>801	Identifier	handle
>802	Callee	glShaderSourceARB
>803	Identifier	glShaderSourceARB
>804	IfStatement	if ( ! handle )
>805	CompoundStatement	 
>806	ReturnStatement	 
>807	PrimaryExpression	0
>808	ExpressionStatement	 
>809	CallExpression	debugLog ( os . str ( ) )
>810	ArgumentList	os . str ( )
>811	Argument	os . str ( )
>812	CallExpression	os . str ( )
>813	ArgumentList	 
>814	Callee	os . str
>815	MemberAccess	os . str
>816	Identifier	str
>817	Identifier	os
>818	Callee	debugLog
>819	Identifier	debugLog
>820	ExpressionStatement	 
>821	ShiftExpression	os << \"Failed to create shader object of type \" << type
>822	ShiftExpression	\"Failed to create shader object of type \" << type
>823	Identifier	type
>824	PrimaryExpression	\"Failed to create shader object of type \"
>825	Identifier	os
>826	IdentifierDeclStatement	 
>827	IdentifierDecl	os
>828	Identifier	os
>829	IdentifierDeclType	std 
>830	Condition	 
>831	UnaryOp	! handle
>832	Identifier	handle
>833	UnaryOperator	!
>834	IdentifierDeclStatement	 
>835	IdentifierDecl	handle = glCreateShaderObjectARB ( type )
>836	AssignmentExpr	handle = glCreateShaderObjectARB ( type )
>837	CallExpression	glCreateShaderObjectARB ( type )
>838	ArgumentList	type
>839	Argument	type
>840	Identifier	type
>841	Callee	glCreateShaderObjectARB
>842	Identifier	glCreateShaderObjectARB
>843	Identifier	handle
>844	Identifier	handle
>845	IdentifierDeclType	GLhandleARB
>846	IdentifierDeclStatement	 
>847	IdentifierDecl	compiled = 0
>848	AssignmentExpr	compiled = 0
>849	PrimaryExpression	0
>850	Identifier	compiled
>851	Identifier	compiled
>852	IdentifierDeclType	GLint
>872	FunctionDef	Shader 
>873	ParameterList	const std 
>874	Parameter	 
>875	Identifier	fragFile
>876	ParameterType	const std 
>877	Parameter	 
>878	Identifier	file
>879	ParameterType	const std 
>880	ReturnType	void
>881	CompoundStatement	 
>882	ExpressionStatement	 
>883	Identifier	fragCode
>884	Statement	 
>885	Statement	 
>886	Statement	 
>887	ExpressionStatement	 
>888	Identifier	vertCode
>889	Statement	 
>890	Statement	 
>891	Statement	 
>892	ExpressionStatement	 
>893	CallExpression	loadSrc ( vertCode , fragCode )
>894	ArgumentList	vertCode
>895	Argument	fragCode
>896	Identifier	fragCode
>897	Argument	vertCode
>898	Identifier	vertCode
>899	Callee	loadSrc
>900	Identifier	loadSrc
>901	IdentifierDeclStatement	 
>902	IdentifierDecl	* fragCode = fragFile . length ( ) ? readFile ( fragFile ) 
>903	AssignmentExpr	* fragCode = fragFile . length ( ) ? readFile ( fragFile ) 
>904	ConditionalExpression	fragFile . length ( ) ? readFile ( fragFile ) 
>905	Identifier	NULL
>906	CallExpression	readFile ( fragFile )
>907	ArgumentList	fragFile
>908	Argument	fragFile
>909	Identifier	fragFile
>910	Callee	readFile
>911	Identifier	readFile
>912	Condition	fragFile . length ( )
>913	CallExpression	fragFile . length ( )
>914	ArgumentList	 
>915	Callee	fragFile . length
>916	MemberAccess	fragFile . length
>917	Identifier	length
>918	Identifier	fragFile
>919	Identifier	fragCode
>920	Identifier	fragCode
>921	IdentifierDeclType	char *
>922	IdentifierDeclStatement	 
>923	IdentifierDecl	* vertCode = file . length ( ) ? readFile ( file ) 
>924	AssignmentExpr	* vertCode = file . length ( ) ? readFile ( file ) 
>925	ConditionalExpression	file . length ( ) ? readFile ( file ) 
>926	Identifier	NULL
>927	CallExpression	readFile ( file )
>928	ArgumentList	file
>929	Argument	file
>930	Identifier	file
>931	Callee	readFile
>932	Identifier	readFile
>933	Condition	file . length ( )
>934	CallExpression	file . length ( )
>935	ArgumentList	 
>936	Callee	file . length
>937	MemberAccess	file . length
>938	Identifier	length
>939	Identifier	file
>940	Identifier	vertCode
>941	Identifier	vertCode
>942	IdentifierDeclType	char *
>943	ExpressionStatement	 
>944	AssignmentExpr	this -> fragFile = fragFile
>945	Identifier	fragFile
>946	PtrMemberAccess	this -> fragFile
>947	Identifier	fragFile
>948	Identifier	this
>949	ExpressionStatement	 
>950	AssignmentExpr	this -> vertFile = file
>951	Identifier	file
>952	PtrMemberAccess	this -> vertFile
>953	Identifier	vertFile
>954	Identifier	this
>955	ExpressionStatement	 
>956	CallExpression	debugLog ( \"Shader
>957	ArgumentList	\"Shader
>958	Argument	\"Shader
>959	AdditiveExpression	\"Shader
>960	AdditiveExpression	file + \", \" + fragFile + \")\"
>961	AdditiveExpression	\", \" + fragFile + \")\"
>962	AdditiveExpression	fragFile + \")\"
>963	PrimaryExpression	\")\"
>964	Identifier	fragFile
>965	PrimaryExpression	\", \"
>966	Identifier	file
>967	PrimaryExpression	\"Shader
>968	Callee	debugLog
>969	Identifier	debugLog
>970	IfStatement	if ( ! _useShaders )
>971	ReturnStatement	 
>972	Condition	 
>973	UnaryOp	! _useShaders
>974	Identifier	_useShaders
>975	UnaryOperator	!
>976	ExpressionStatement	 
>977	CallExpression	staticInit ( )
>978	ArgumentList	 
>979	Callee	staticInit
>980	Identifier	staticInit
>997	FunctionDef	Shader 
>998	ParameterList	const char * vertCode , const char * fragCode
>999	Parameter	 
>1000	Identifier	fragCode
>1001	ParameterType	const char *
>1002	Parameter	 
>1003	Identifier	vertCode
>1004	ParameterType	const char *
>1005	ReturnType	void
>1006	CompoundStatement	 
>1007	ExpressionStatement	 
>1008	CallExpression	_queryUniforms ( )
>1009	ArgumentList	 
>1010	Callee	_queryUniforms
>1011	Identifier	_queryUniforms
>1012	ExpressionStatement	 
>1013	AssignmentExpr	fragSrc = fragCode ? fragCode 
>1014	ConditionalExpression	fragCode ? fragCode 
>1015	PrimaryExpression	\"\"
>1016	Identifier	fragCode
>1017	Condition	fragCode
>1018	Identifier	fragCode
>1019	Identifier	fragSrc
>1020	ExpressionStatement	 
>1021	AssignmentExpr	vertSrc = vertCode ? vertCode 
>1022	ConditionalExpression	vertCode ? vertCode 
>1023	PrimaryExpression	\"\"
>1024	Identifier	vertCode
>1025	Condition	vertCode
>1026	Identifier	vertCode
>1027	Identifier	vertSrc
>1028	IfStatement	if ( ! bLinked )
>1029	CompoundStatement	 
>1030	ReturnStatement	 
>1031	ExpressionStatement	 
>1032	CallExpression	unload ( )
>1033	ArgumentList	 
>1034	Callee	unload
>1035	Identifier	unload
>1036	ExpressionStatement	 
>1037	CallExpression	errorLog ( os . str ( ) )
>1038	ArgumentList	os . str ( )
>1039	Argument	os . str ( )
>1040	CallExpression	os . str ( )
>1041	ArgumentList	 
>1042	Callee	os . str
>1043	MemberAccess	os . str
>1044	Identifier	str
>1045	Identifier	os
>1046	Callee	errorLog
>1047	Identifier	errorLog
>1048	ExpressionStatement	 
>1049	ShiftExpression	os << \"Shader Linking Error
>1050	ShiftExpression	\"Shader Linking Error
>1051	Identifier	str
>1052	PrimaryExpression	\"Shader Linking Error
>1053	Identifier	os
>1054	IdentifierDeclStatement	 
>1055	IdentifierDecl	os
>1056	Identifier	os
>1057	IdentifierDeclType	std 
>1058	ExpressionStatement	 
>1059	CallExpression	glGetInfoLogARB ( g_programObj , sizeof ( str ) , NULL , str )
>1060	ArgumentList	g_programObj
>1061	Argument	str
>1062	Identifier	str
>1063	Argument	NULL
>1064	Identifier	NULL
>1065	Argument	sizeof ( str )
>1066	SizeofExpr	sizeof ( str )
>1067	SizeofOperand	str
>1068	Sizeof	sizeof
>1069	Argument	g_programObj
>1070	Identifier	g_programObj
>1071	Callee	glGetInfoLogARB
>1072	Identifier	glGetInfoLogARB
>1073	Condition	 
>1074	UnaryOp	! bLinked
>1075	Identifier	bLinked
>1076	UnaryOperator	!
>1077	ExpressionStatement	 
>1078	CallExpression	glGetObjectParameterivARB ( g_programObj , GL_OBJECT_LINK_STATUS_ARB , & bLinked )
>1079	ArgumentList	g_programObj
>1080	Argument	& bLinked
>1081	UnaryOp	& bLinked
>1082	Identifier	bLinked
>1083	UnaryOperator	&
>1084	Argument	GL_OBJECT_LINK_STATUS_ARB
>1085	Identifier	GL_OBJECT_LINK_STATUS_ARB
>1086	Argument	g_programObj
>1087	Identifier	g_programObj
>1088	Callee	glGetObjectParameterivARB
>1089	Identifier	glGetObjectParameterivARB
>1090	IdentifierDeclStatement	 
>1091	IdentifierDecl	bLinked
>1092	Identifier	bLinked
>1093	IdentifierDeclType	GLint
>1094	IfStatement	if ( fragmentShader )
>1095	ExpressionStatement	 
>1096	CallExpression	glDeleteObjectARB ( fragmentShader )
>1097	ArgumentList	fragmentShader
>1098	Argument	fragmentShader
>1099	Identifier	fragmentShader
>1100	Callee	glDeleteObjectARB
>1101	Identifier	glDeleteObjectARB
>1102	Condition	 
>1103	Identifier	fragmentShader
>1104	IfStatement	if ( vertexShader )
>1105	ExpressionStatement	 
>1106	CallExpression	glDeleteObjectARB ( vertexShader )
>1107	ArgumentList	vertexShader
>1108	Argument	vertexShader
>1109	Identifier	vertexShader
>1110	Callee	glDeleteObjectARB
>1111	Identifier	glDeleteObjectARB
>1112	Condition	 
>1113	Identifier	vertexShader
>1114	ExpressionStatement	 
>1115	CallExpression	glLinkProgramARB ( g_programObj )
>1116	ArgumentList	g_programObj
>1117	Argument	g_programObj
>1118	Identifier	g_programObj
>1119	Callee	glLinkProgramARB
>1120	Identifier	glLinkProgramARB
>1121	IfStatement	if ( fragmentShader )
>1122	ExpressionStatement	 
>1123	CallExpression	glAttachObjectARB ( g_programObj , fragmentShader )
>1124	ArgumentList	g_programObj
>1125	Argument	fragmentShader
>1126	Identifier	fragmentShader
>1127	Argument	g_programObj
>1128	Identifier	g_programObj
>1129	Callee	glAttachObjectARB
>1130	Identifier	glAttachObjectARB
>1131	Condition	 
>1132	Identifier	fragmentShader
>1133	IfStatement	if ( vertexShader )
>1134	ExpressionStatement	 
>1135	CallExpression	glAttachObjectARB ( g_programObj , vertexShader )
>1136	ArgumentList	g_programObj
>1137	Argument	vertexShader
>1138	Identifier	vertexShader
>1139	Argument	g_programObj
>1140	Identifier	g_programObj
>1141	Callee	glAttachObjectARB
>1142	Identifier	glAttachObjectARB
>1143	Condition	 
>1144	Identifier	vertexShader
>1145	IfStatement	if ( ! ( g_programObj && ( vertexShader || fragmentShader ) ) )
>1146	CompoundStatement	 
>1147	ReturnStatement	 
>1148	ExpressionStatement	 
>1149	CallExpression	unload ( )
>1150	ArgumentList	 
>1151	Callee	unload
>1152	Identifier	unload
>1153	ExpressionStatement	 
>1154	CallExpression	errorLog ( \"programObj / vertexShader / fragmentShader problem\" )
>1155	ArgumentList	\"programObj / vertexShader / fragmentShader problem\"
>1156	Argument	\"programObj / vertexShader / fragmentShader problem\"
>1157	PrimaryExpression	\"programObj / vertexShader / fragmentShader problem\"
>1158	Callee	errorLog
>1159	Identifier	errorLog
>1160	Condition	 
>1161	UnaryOp	! ( g_programObj && ( vertexShader || fragmentShader ) )
>1162	AndExpression	g_programObj && ( vertexShader || fragmentShader )
>1163	OrExpression	vertexShader || fragmentShader
>1164	Identifier	fragmentShader
>1165	Identifier	vertexShader
>1166	Identifier	g_programObj
>1167	UnaryOperator	!
>1168	ExpressionStatement	 
>1169	AssignmentExpr	g_programObj = glCreateProgramObjectARB ( )
>1170	CallExpression	glCreateProgramObjectARB ( )
>1171	ArgumentList	 
>1172	Callee	glCreateProgramObjectARB
>1173	Identifier	glCreateProgramObjectARB
>1174	Identifier	g_programObj
>1175	IfStatement	if ( fragCode && * fragCode && ! ( fragmentShader = _compileShader ( GL_FRAGMENT_SHADER_ARB , fragCode , str , sizeof ( \
>1176	CompoundStatement	 
>1177	ReturnStatement	 
>1178	ExpressionStatement	 
>1179	CallExpression	errorLog ( os . str ( ) )
>1180	ArgumentList	os . str ( )
>1181	Argument	os . str ( )
>1182	CallExpression	os . str ( )
>1183	ArgumentList	 
>1184	Callee	os . str
>1185	MemberAccess	os . str
>1186	Identifier	str
>1187	Identifier	os
>1188	Callee	errorLog
>1189	Identifier	errorLog
>1190	ExpressionStatement	 
>1191	ShiftExpression	os << \"Fragment Shader Compile Error [\" << fragFile << \"]
>1192	ShiftExpression	\"Fragment Shader Compile Error [\" << fragFile << \"]
>1193	ShiftExpression	fragFile << \"]
>1194	ShiftExpression	\"]
>1195	Identifier	str
>1196	PrimaryExpression	\"]
>1197	Identifier	fragFile
>1198	PrimaryExpression	\"Fragment Shader Compile Error [\"
>1199	Identifier	os
>1200	IdentifierDeclStatement	 
>1201	IdentifierDecl	os
>1202	Identifier	os
>1203	IdentifierDeclType	std 
>1204	Condition	 
>1205	AndExpression	fragCode && * fragCode && ! ( fragmentShader = _compileShader ( GL_FRAGMENT_SHADER_ARB , fragCode , \
>1206	AndExpression	* fragCode && ! ( fragmentShader = _compileShader ( GL_FRAGMENT_SHADER_ARB , fragCode , str , sizeof ( \
>1207	UnaryOp	! ( fragmentShader = _compileShader ( GL_FRAGMENT_SHADER_ARB , fragCode , str , sizeof ( str ) ) )
>1208	AssignmentExpr	fragmentShader = _compileShader ( GL_FRAGMENT_SHADER_ARB , fragCode , str , sizeof ( str ) )
>1209	CallExpression	_compileShader ( GL_FRAGMENT_SHADER_ARB , fragCode , str , sizeof ( str ) )
>1210	ArgumentList	GL_FRAGMENT_SHADER_ARB
>1211	Argument	sizeof ( str )
>1212	SizeofExpr	sizeof ( str )
>1213	SizeofOperand	str
>1214	Sizeof	sizeof
>1215	Argument	str
>1216	Identifier	str
>1217	Argument	fragCode
>1218	Identifier	fragCode
>1219	Argument	GL_FRAGMENT_SHADER_ARB
>1220	Identifier	GL_FRAGMENT_SHADER_ARB
>1221	Callee	_compileShader
>1222	Identifier	_compileShader
>1223	Identifier	fragmentShader
>1224	UnaryOperator	!
>1225	UnaryOp	* fragCode
>1226	Identifier	fragCode
>1227	UnaryOperator	*
>1228	Identifier	fragCode
>1229	IfStatement	if ( vertCode && * vertCode && ! ( vertexShader = _compileShader ( GL_VERTEX_SHADER_ARB , vertCode , str , sizeof ( \
>1230	CompoundStatement	 
>1231	ReturnStatement	 
>1232	ExpressionStatement	 
>1233	CallExpression	errorLog ( os . str ( ) )
>1234	ArgumentList	os . str ( )
>1235	Argument	os . str ( )
>1236	CallExpression	os . str ( )
>1237	ArgumentList	 
>1238	Callee	os . str
>1239	MemberAccess	os . str
>1240	Identifier	str
>1241	Identifier	os
>1242	Callee	errorLog
>1243	Identifier	errorLog
>1244	ExpressionStatement	 
>1245	ShiftExpression	os << \"Vertex Shader Compile Error [\" << vertFile << \"]
>1246	ShiftExpression	\"Vertex Shader Compile Error [\" << vertFile << \"]
>1247	ShiftExpression	vertFile << \"]
>1248	ShiftExpression	\"]
>1249	Identifier	str
>1250	PrimaryExpression	\"]
>1251	Identifier	vertFile
>1252	PrimaryExpression	\"Vertex Shader Compile Error [\"
>1253	Identifier	os
>1254	IdentifierDeclStatement	 
>1255	IdentifierDecl	os
>1256	Identifier	os
>1257	IdentifierDeclType	std 
>1258	Condition	 
>1259	AndExpression	vertCode && * vertCode && ! ( vertexShader = _compileShader ( GL_VERTEX_SHADER_ARB , vertCode , str , \
>1260	AndExpression	* vertCode && ! ( vertexShader = _compileShader ( GL_VERTEX_SHADER_ARB , vertCode , str , sizeof ( str ) ) )
>1261	UnaryOp	! ( vertexShader = _compileShader ( GL_VERTEX_SHADER_ARB , vertCode , str , sizeof ( str ) ) )
>1262	AssignmentExpr	vertexShader = _compileShader ( GL_VERTEX_SHADER_ARB , vertCode , str , sizeof ( str ) )
>1263	CallExpression	_compileShader ( GL_VERTEX_SHADER_ARB , vertCode , str , sizeof ( str ) )
>1264	ArgumentList	GL_VERTEX_SHADER_ARB
>1265	Argument	sizeof ( str )
>1266	SizeofExpr	sizeof ( str )
>1267	SizeofOperand	str
>1268	Sizeof	sizeof
>1269	Argument	str
>1270	Identifier	str
>1271	Argument	vertCode
>1272	Identifier	vertCode
>1273	Argument	GL_VERTEX_SHADER_ARB
>1274	Identifier	GL_VERTEX_SHADER_ARB
>1275	Callee	_compileShader
>1276	Identifier	_compileShader
>1277	Identifier	vertexShader
>1278	UnaryOperator	!
>1279	UnaryOp	* vertCode
>1280	Identifier	vertCode
>1281	UnaryOperator	*
>1282	Identifier	vertCode
>1283	IdentifierDeclStatement	 
>1284	IdentifierDecl	fragmentShader = 0
>1285	AssignmentExpr	fragmentShader = 0
>1286	PrimaryExpression	0
>1287	Identifier	fragmentShader
>1288	Identifier	fragmentShader
>1289	IdentifierDeclType	GLhandleARB
>1290	IdentifierDeclStatement	 
>1291	IdentifierDecl	vertexShader = 0
>1292	AssignmentExpr	vertexShader = 0
>1293	PrimaryExpression	0
>1294	Identifier	vertexShader
>1295	Identifier	vertexShader
>1296	IdentifierDeclType	GLhandleARB
>1297	IdentifierDeclStatement	 
>1298	IdentifierDecl	str [ 4096 ]
>1299	PrimaryExpression	4096
>1300	Identifier	str
>1301	IdentifierDeclType	char [ 4096 ]
>1302	IfStatement	if ( ! _useShaders )
>1303	ReturnStatement	 
>1304	Condition	 
>1305	UnaryOp	! _useShaders
>1306	Identifier	_useShaders
>1307	UnaryOperator	!
>1308	ExpressionStatement	 
>1309	CallExpression	unload ( )
>1310	ArgumentList	 
>1311	Callee	unload
>1312	Identifier	unload
>1313	ExpressionStatement	 
>1314	CallExpression	staticInit ( )
>1315	ArgumentList	 
>1316	Callee	staticInit
>1317	Identifier	staticInit
>1342	FunctionDef	Shader 
>1343	ParameterList	Uniform * u
>1344	Parameter	 
>1345	Identifier	u
>1346	ParameterType	Uniform *
>1347	ReturnType	void
>1348	CompoundStatement	 
>1349	ExpressionStatement	 
>1350	AssignmentExpr	u -> dirty = false
>1351	Identifier	false
>1352	PtrMemberAccess	u -> dirty
>1353	Identifier	dirty
>1354	Identifier	u
>1355	SwitchStatement	switch ( u -> type )
>1356	CompoundStatement	 
>1357	BreakStatement	 
>1358	ExpressionStatement	 
>1359	CallExpression	glUniform4ivARB ( u -> location , 1 , u -> data . i )
>1360	ArgumentList	u -> location
>1361	Argument	u -> data . i
>1362	MemberAccess	u -> data . i
>1363	Identifier	i
>1364	PtrMemberAccess	u -> data
>1365	Identifier	data
>1366	Identifier	u
>1367	Argument	1
>1368	PrimaryExpression	1
>1369	Argument	u -> location
>1370	PtrMemberAccess	u -> location
>1371	Identifier	location
>1372	Identifier	u
>1373	Callee	glUniform4ivARB
>1374	Identifier	glUniform4ivARB
>1375	Label	 
>1376	Identifier	GL_INT_VEC4_ARB
>1377	BreakStatement	 
>1378	ExpressionStatement	 
>1379	CallExpression	glUniform3ivARB ( u -> location , 1 , u -> data . i )
>1380	ArgumentList	u -> location
>1381	Argument	u -> data . i
>1382	MemberAccess	u -> data . i
>1383	Identifier	i
>1384	PtrMemberAccess	u -> data
>1385	Identifier	data
>1386	Identifier	u
>1387	Argument	1
>1388	PrimaryExpression	1
>1389	Argument	u -> location
>1390	PtrMemberAccess	u -> location
>1391	Identifier	location
>1392	Identifier	u
>1393	Callee	glUniform3ivARB
>1394	Identifier	glUniform3ivARB
>1395	Label	 
>1396	Identifier	GL_INT_VEC3_ARB
>1397	BreakStatement	 
>1398	ExpressionStatement	 
>1399	CallExpression	glUniform2ivARB ( u -> location , 1 , u -> data . i )
>1400	ArgumentList	u -> location
>1401	Argument	u -> data . i
>1402	MemberAccess	u -> data . i
>1403	Identifier	i
>1404	PtrMemberAccess	u -> data
>1405	Identifier	data
>1406	Identifier	u
>1407	Argument	1
>1408	PrimaryExpression	1
>1409	Argument	u -> location
>1410	PtrMemberAccess	u -> location
>1411	Identifier	location
>1412	Identifier	u
>1413	Callee	glUniform2ivARB
>1414	Identifier	glUniform2ivARB
>1415	Label	 
>1416	Identifier	GL_INT_VEC2_ARB
>1417	BreakStatement	 
>1418	ExpressionStatement	 
>1419	CallExpression	glUniform1ivARB ( u -> location , 1 , u -> data . i )
>1420	ArgumentList	u -> location
>1421	Argument	u -> data . i
>1422	MemberAccess	u -> data . i
>1423	Identifier	i
>1424	PtrMemberAccess	u -> data
>1425	Identifier	data
>1426	Identifier	u
>1427	Argument	1
>1428	PrimaryExpression	1
>1429	Argument	u -> location
>1430	PtrMemberAccess	u -> location
>1431	Identifier	location
>1432	Identifier	u
>1433	Callee	glUniform1ivARB
>1434	Identifier	glUniform1ivARB
>1435	Label	 
>1436	Identifier	GL_INT
>1437	BreakStatement	 
>1438	ExpressionStatement	 
>1439	CallExpression	glUniform4fvARB ( u -> location , 1 , u -> data . f )
>1440	ArgumentList	u -> location
>1441	Argument	u -> data . f
>1442	MemberAccess	u -> data . f
>1443	Identifier	f
>1444	PtrMemberAccess	u -> data
>1445	Identifier	data
>1446	Identifier	u
>1447	Argument	1
>1448	PrimaryExpression	1
>1449	Argument	u -> location
>1450	PtrMemberAccess	u -> location
>1451	Identifier	location
>1452	Identifier	u
>1453	Callee	glUniform4fvARB
>1454	Identifier	glUniform4fvARB
>1455	Label	 
>1456	Identifier	GL_FLOAT_VEC4_ARB
>1457	BreakStatement	 
>1458	ExpressionStatement	 
>1459	CallExpression	glUniform3fvARB ( u -> location , 1 , u -> data . f )
>1460	ArgumentList	u -> location
>1461	Argument	u -> data . f
>1462	MemberAccess	u -> data . f
>1463	Identifier	f
>1464	PtrMemberAccess	u -> data
>1465	Identifier	data
>1466	Identifier	u
>1467	Argument	1
>1468	PrimaryExpression	1
>1469	Argument	u -> location
>1470	PtrMemberAccess	u -> location
>1471	Identifier	location
>1472	Identifier	u
>1473	Callee	glUniform3fvARB
>1474	Identifier	glUniform3fvARB
>1475	Label	 
>1476	Identifier	GL_FLOAT_VEC3_ARB
>1477	BreakStatement	 
>1478	ExpressionStatement	 
>1479	CallExpression	glUniform2fvARB ( u -> location , 1 , u -> data . f )
>1480	ArgumentList	u -> location
>1481	Argument	u -> data . f
>1482	MemberAccess	u -> data . f
>1483	Identifier	f
>1484	PtrMemberAccess	u -> data
>1485	Identifier	data
>1486	Identifier	u
>1487	Argument	1
>1488	PrimaryExpression	1
>1489	Argument	u -> location
>1490	PtrMemberAccess	u -> location
>1491	Identifier	location
>1492	Identifier	u
>1493	Callee	glUniform2fvARB
>1494	Identifier	glUniform2fvARB
>1495	Label	 
>1496	Identifier	GL_FLOAT_VEC2_ARB
>1497	BreakStatement	 
>1498	ExpressionStatement	 
>1499	CallExpression	glUniform1fvARB ( u -> location , 1 , u -> data . f )
>1500	ArgumentList	u -> location
>1501	Argument	u -> data . f
>1502	MemberAccess	u -> data . f
>1503	Identifier	f
>1504	PtrMemberAccess	u -> data
>1505	Identifier	data
>1506	Identifier	u
>1507	Argument	1
>1508	PrimaryExpression	1
>1509	Argument	u -> location
>1510	PtrMemberAccess	u -> location
>1511	Identifier	location
>1512	Identifier	u
>1513	Callee	glUniform1fvARB
>1514	Identifier	glUniform1fvARB
>1515	Label	 
>1516	Identifier	GL_FLOAT
>1517	Condition	 
>1518	PtrMemberAccess	u -> type
>1519	Identifier	type
>1520	Identifier	u
>1533	FunctionDef	Shader 
>1534	ParameterList	 
>1535	ReturnType	void
>1536	CompoundStatement	 
>1537	ForStatement	for ( size_t i = 0 ; i < uniforms . size ( ) ; ++ i )
>1538	CompoundStatement	 
>1539	IfStatement	if ( u . dirty )
>1540	ExpressionStatement	 
>1541	CallExpression	_setUniform ( & u )
>1542	ArgumentList	& u
>1543	Argument	& u
>1544	UnaryOp	& u
>1545	Identifier	u
>1546	UnaryOperator	&
>1547	Callee	_setUniform
>1548	Identifier	_setUniform
>1549	Condition	 
>1550	MemberAccess	u . dirty
>1551	Identifier	dirty
>1552	Identifier	u
>1553	IdentifierDeclStatement	 
>1554	IdentifierDecl	& u = uniforms [ i ]
>1555	AssignmentExpr	& u = uniforms [ i ]
>1556	ArrayIndexing	uniforms [ i ]
>1557	Identifier	i
>1558	Identifier	uniforms
>1559	Identifier	u
>1560	Identifier	u
>1561	IdentifierDeclType	Uniform &
>1562	UnaryExpression	 
>1563	Identifier	i
>1564	IncDec	++
>1565	Condition	 
>1566	RelationalExpression	i < uniforms . size ( )
>1567	CallExpression	uniforms . size ( )
>1568	ArgumentList	 
>1569	Callee	uniforms . size
>1570	MemberAccess	uniforms . size
>1571	Identifier	size
>1572	Identifier	uniforms
>1573	Identifier	i
>1574	ForInit	 
>1575	IdentifierDeclStatement	size_t i = 0 ;
>1576	IdentifierDecl	i = 0
>1577	AssignmentExpr	i = 0
>1578	PrimaryExpression	0
>1579	Identifier	i
>1580	Identifier	i
>1581	IdentifierDeclType	size_t
>1582	ExpressionStatement	 
>1583	AssignmentExpr	uniformsDirty = false
>1584	Identifier	false
>1585	Identifier	uniformsDirty
>1586	IfStatement	if ( ! uniformsDirty )
>1587	ReturnStatement	 
>1588	Condition	 
>1589	UnaryOp	! uniformsDirty
>1590	Identifier	uniformsDirty
>1591	UnaryOperator	!
>1605	FunctionDef	Shader 
>1606	ParameterList	const Uniform & a , const char * bname
>1607	Parameter	 
>1608	Identifier	bname
>1609	ParameterType	const char *
>1610	Parameter	 
>1611	Identifier	a
>1612	ParameterType	const Uniform &
>1613	ReturnType	bool
>1614	CompoundStatement	 
>1615	ReturnStatement	 
>1616	RelationalExpression	strcmp ( a . name , bname ) < 0
>1617	PrimaryExpression	0
>1618	CallExpression	strcmp ( a . name , bname )
>1619	ArgumentList	a . name
>1620	Argument	bname
>1621	Identifier	bname
>1622	Argument	a . name
>1623	MemberAccess	a . name
>1624	Identifier	name
>1625	Identifier	a
>1626	Callee	strcmp
>1627	Identifier	strcmp
>1635	FunctionDef	operator < (const Uniform & b)
>1636	ParameterList	const Uniform & b
>1637	Parameter	 
>1638	Identifier	b
>1639	ParameterType	const Uniform &
>1640	CompoundStatement	 
>1641	ReturnStatement	 
>1642	CallExpression	Shader 
>1643	ArgumentList	* this
>1644	Argument	& b . name [ 0 ]
>1645	UnaryOp	& b . name [ 0 ]
>1646	ArrayIndexing	b . name [ 0 ]
>1647	PrimaryExpression	0
>1648	MemberAccess	b . name
>1649	Identifier	name
>1650	Identifier	b
>1651	UnaryOperator	&
>1652	Argument	* this
>1653	UnaryOp	* this
>1654	Identifier	this
>1655	UnaryOperator	*
>1656	Callee	Shader 
>1657	Identifier	Shader 
>1668	FunctionDef	Shader 
>1669	ParameterList	 
>1670	ReturnType	void
>1671	CompoundStatement	 
>1672	ExpressionStatement	 
>1673	AssignmentExpr	uniformsDirty = true
>1674	Identifier	true
>1675	Identifier	uniformsDirty
>1676	ExpressionStatement	 
>1677	CallExpression	std 
>1678	ArgumentList	uniforms . begin ( )
>1679	Argument	uniforms . end ( )
>1680	CallExpression	uniforms . end ( )
>1681	ArgumentList	 
>1682	Callee	uniforms . end
>1683	MemberAccess	uniforms . end
>1684	Identifier	end
>1685	Identifier	uniforms
>1686	Argument	uniforms . begin ( )
>1687	CallExpression	uniforms . begin ( )
>1688	ArgumentList	 
>1689	Callee	uniforms . begin
>1690	MemberAccess	uniforms . begin
>1691	Identifier	begin
>1692	Identifier	uniforms
>1693	Callee	std 
>1694	Identifier	std 
>1695	ExpressionStatement	 
>1696	CallExpression	uniforms . resize ( total )
>1697	ArgumentList	total
>1698	Argument	total
>1699	Identifier	total
>1700	Callee	uniforms . resize
>1701	MemberAccess	uniforms . resize
>1702	Identifier	resize
>1703	Identifier	uniforms
>1704	ForStatement	for ( unsigned int i = 0 ; i < numUniforms ; ++ i )
>1705	CompoundStatement	 
>1706	ExpressionStatement	 
>1707	UnaryExpression	++ total
>1708	Identifier	total
>1709	IncDec	++
>1710	IfStatement	if ( add )
>1711	ElseStatement	else
>1712	ExpressionStatement	 
>1713	AssignmentExpr	uniforms [ total ] = u
>1714	Identifier	u
>1715	ArrayIndexing	uniforms [ total ]
>1716	Identifier	total
>1717	Identifier	uniforms
>1718	ExpressionStatement	 
>1719	CallExpression	uniforms . push_back ( u )
>1720	ArgumentList	u
>1721	Argument	u
>1722	Identifier	u
>1723	Callee	uniforms . push_back
>1724	MemberAccess	uniforms . push_back
>1725	Identifier	push_back
>1726	Identifier	uniforms
>1727	Condition	 
>1728	Identifier	add
>1729	ExpressionStatement	 
>1730	AssignmentExpr	u . type = type
>1731	Identifier	type
>1732	MemberAccess	u . type
>1733	Identifier	type
>1734	Identifier	u
>1735	ExpressionStatement	 
>1736	AssignmentExpr	u . dirty = true
>1737	Identifier	true
>1738	MemberAccess	u . dirty
>1739	Identifier	dirty
>1740	Identifier	u
>1741	IfStatement	if ( add || type != u . type )
>1742	ExpressionStatement	 
>1743	CallExpression	memset ( & u . data , 0 , sizeof ( u . data ) )
>1744	ArgumentList	& u . data
>1745	Argument	sizeof ( u . data )
>1746	SizeofExpr	sizeof ( u . data )
>1747	MemberAccess	u . data
>1748	Identifier	data
>1749	Identifier	u
>1750	Sizeof	sizeof
>1751	Argument	0
>1752	PrimaryExpression	0
>1753	Argument	& u . data
>1754	UnaryOp	& u . data
>1755	MemberAccess	u . data
>1756	Identifier	data
>1757	Identifier	u
>1758	UnaryOperator	&
>1759	Callee	memset
>1760	Identifier	memset
>1761	Condition	 
>1762	OrExpression	add || type != u . type
>1763	EqualityExpression	type != u . type
>1764	MemberAccess	u . type
>1765	Identifier	type
>1766	Identifier	u
>1767	Identifier	type
>1768	Identifier	add
>1769	IdentifierDeclStatement	 
>1770	IdentifierDecl	add = total >= uniforms . size ( )
>1771	AssignmentExpr	add = total >= uniforms . size ( )
>1772	RelationalExpression	total >= uniforms . size ( )
>1773	CallExpression	uniforms . size ( )
>1774	ArgumentList	 
>1775	Callee	uniforms . size
>1776	MemberAccess	uniforms . size
>1777	Identifier	size
>1778	Identifier	uniforms
>1779	Identifier	total
>1780	Identifier	add
>1781	Identifier	add
>1782	IdentifierDeclType	bool
>1783	IfStatement	if ( u . location == - 1 )
>1784	ContinueStatement	 
>1785	Condition	 
>1786	EqualityExpression	u . location == - 1
>1787	UnaryOp	- 1
>1788	PrimaryExpression	1
>1789	UnaryOperator	-
>1790	MemberAccess	u . location
>1791	Identifier	location
>1792	Identifier	u
>1793	ExpressionStatement	 
>1794	AssignmentExpr	u . location = glGetUniformLocationARB ( g_programObj , u . name )
>1795	CallExpression	glGetUniformLocationARB ( g_programObj , u . name )
>1796	ArgumentList	g_programObj
>1797	Argument	u . name
>1798	MemberAccess	u . name
>1799	Identifier	name
>1800	Identifier	u
>1801	Argument	g_programObj
>1802	Identifier	g_programObj
>1803	Callee	glGetUniformLocationARB
>1804	Identifier	glGetUniformLocationARB
>1805	MemberAccess	u . location
>1806	Identifier	location
>1807	Identifier	u
>1808	IfStatement	if ( ! type || ! size )
>1809	ContinueStatement	 
>1810	Condition	 
>1811	OrExpression	! type || ! size
>1812	UnaryOp	! size
>1813	Identifier	size
>1814	UnaryOperator	!
>1815	UnaryOp	! type
>1816	Identifier	type
>1817	UnaryOperator	!
>1818	ExpressionStatement	 
>1819	CallExpression	glGetActiveUniformARB ( g_programObj , i , sizeof ( u . name ) , NULL , & size , & type , & u . name [ 0 ] )
>1820	ArgumentList	g_programObj
>1821	Argument	& u . name [ 0 ]
>1822	UnaryOp	& u . name [ 0 ]
>1823	ArrayIndexing	u . name [ 0 ]
>1824	PrimaryExpression	0
>1825	MemberAccess	u . name
>1826	Identifier	name
>1827	Identifier	u
>1828	UnaryOperator	&
>1829	Argument	& type
>1830	UnaryOp	& type
>1831	Identifier	type
>1832	UnaryOperator	&
>1833	Argument	& size
>1834	UnaryOp	& size
>1835	Identifier	size
>1836	UnaryOperator	&
>1837	Argument	NULL
>1838	Identifier	NULL
>1839	Argument	sizeof ( u . name )
>1840	SizeofExpr	sizeof ( u . name )
>1841	MemberAccess	u . name
>1842	Identifier	name
>1843	Identifier	u
>1844	Sizeof	sizeof
>1845	Argument	i
>1846	Identifier	i
>1847	Argument	g_programObj
>1848	Identifier	g_programObj
>1849	Callee	glGetActiveUniformARB
>1850	Identifier	glGetActiveUniformARB
>1851	IdentifierDeclStatement	 
>1852	IdentifierDecl	type = 0
>1853	AssignmentExpr	type = 0
>1854	PrimaryExpression	0
>1855	Identifier	type
>1856	Identifier	type
>1857	IdentifierDeclType	GLenum
>1858	IdentifierDeclStatement	 
>1859	IdentifierDecl	size = 0
>1860	AssignmentExpr	size = 0
>1861	PrimaryExpression	0
>1862	Identifier	size
>1863	Identifier	size
>1864	IdentifierDeclType	GLint
>1865	IdentifierDeclStatement	 
>1866	IdentifierDecl	u
>1867	Identifier	u
>1868	IdentifierDeclType	Uniform
>1869	UnaryExpression	 
>1870	Identifier	i
>1871	IncDec	++
>1872	Condition	 
>1873	RelationalExpression	i < numUniforms
>1874	Identifier	numUniforms
>1875	Identifier	i
>1876	ForInit	 
>1877	IdentifierDeclStatement	unsigned int i = 0 ;
>1878	IdentifierDecl	i = 0
>1879	AssignmentExpr	i = 0
>1880	PrimaryExpression	0
>1881	Identifier	i
>1882	Identifier	i
>1883	IdentifierDeclType	unsigned int
>1884	IdentifierDeclStatement	 
>1885	IdentifierDecl	total = 0
>1886	AssignmentExpr	total = 0
>1887	PrimaryExpression	0
>1888	Identifier	total
>1889	Identifier	total
>1890	IdentifierDeclType	size_t
>1891	ExpressionStatement	 
>1892	CallExpression	uniforms . reserve ( numUniforms )
>1893	ArgumentList	numUniforms
>1894	Argument	numUniforms
>1895	Identifier	numUniforms
>1896	Callee	uniforms . reserve
>1897	MemberAccess	uniforms . reserve
>1898	Identifier	reserve
>1899	Identifier	uniforms
>1900	IfStatement	if ( numUniforms <= 0 )
>1901	CompoundStatement	 
>1902	ReturnStatement	 
>1903	ExpressionStatement	 
>1904	CallExpression	uniforms . clear ( )
>1905	ArgumentList	 
>1906	Callee	uniforms . clear
>1907	MemberAccess	uniforms . clear
>1908	Identifier	clear
>1909	Identifier	uniforms
>1910	Condition	 
>1911	RelationalExpression	numUniforms <= 0
>1912	PrimaryExpression	0
>1913	Identifier	numUniforms
>1914	ExpressionStatement	 
>1915	CallExpression	glGetObjectParameterivARB ( g_programObj , GL_OBJECT_ACTIVE_UNIFORMS_ARB , & numUniforms )
>1916	ArgumentList	g_programObj
>1917	Argument	& numUniforms
>1918	UnaryOp	& numUniforms
>1919	Identifier	numUniforms
>1920	UnaryOperator	&
>1921	Argument	GL_OBJECT_ACTIVE_UNIFORMS_ARB
>1922	Identifier	GL_OBJECT_ACTIVE_UNIFORMS_ARB
>1923	Argument	g_programObj
>1924	Identifier	g_programObj
>1925	Callee	glGetObjectParameterivARB
>1926	Identifier	glGetObjectParameterivARB
>1961	FunctionDef	Shader 
>1962	ParameterList	const char * name
>1963	Parameter	 
>1964	Identifier	name
>1965	ParameterType	const char *
>1966	ReturnType	int
>1967	CompoundStatement	 
>1968	ReturnStatement	 
>1969	CallExpression	int ( it - uniforms . begin ( ) )
>1970	ArgumentList	it - uniforms . begin ( )
>1971	Argument	it - uniforms . begin ( )
>1972	AdditiveExpression	it - uniforms . begin ( )
>1973	CallExpression	uniforms . begin ( )
>1974	ArgumentList	 
>1975	Callee	uniforms . begin
>1976	MemberAccess	uniforms . begin
>1977	Identifier	begin
>1978	Identifier	uniforms
>1979	Identifier	it
>1980	Callee	int
>1981	Identifier	int
>1982	IfStatement	if ( it != uniforms . end ( ) && strcmp ( it -> name , name ) )
>1983	ReturnStatement	 
>1984	UnaryOp	- 1
>1985	PrimaryExpression	1
>1986	UnaryOperator	-
>1987	Condition	 
>1988	AndExpression	it != uniforms . end ( ) && strcmp ( it -> name , name )
>1989	CallExpression	strcmp ( it -> name , name )
>1990	ArgumentList	it -> name
>1991	Argument	name
>1992	Identifier	name
>1993	Argument	it -> name
>1994	PtrMemberAccess	it -> name
>1995	Identifier	name
>1996	Identifier	it
>1997	Callee	strcmp
>1998	Identifier	strcmp
>1999	EqualityExpression	it != uniforms . end ( )
>2000	CallExpression	uniforms . end ( )
>2001	ArgumentList	 
>2002	Callee	uniforms . end
>2003	MemberAccess	uniforms . end
>2004	Identifier	end
>2005	Identifier	uniforms
>2006	Identifier	it
>2007	IdentifierDeclStatement	 
>2008	IdentifierDecl	it = stdx_fg 
>2009	AssignmentExpr	it = stdx_fg 
>2010	CallExpression	stdx_fg 
>2011	ArgumentList	uniforms . begin ( )
>2012	Argument	_sortUniform
>2013	Identifier	_sortUniform
>2014	Argument	name
>2015	Identifier	name
>2016	Argument	uniforms . end ( )
>2017	CallExpression	uniforms . end ( )
>2018	ArgumentList	 
>2019	Callee	uniforms . end
>2020	MemberAccess	uniforms . end
>2021	Identifier	end
>2022	Identifier	uniforms
>2023	Argument	uniforms . begin ( )
>2024	CallExpression	uniforms . begin ( )
>2025	ArgumentList	 
>2026	Callee	uniforms . begin
>2027	MemberAccess	uniforms . begin
>2028	Identifier	begin
>2029	Identifier	uniforms
>2030	Callee	stdx_fg 
>2031	Identifier	stdx_fg 
>2032	Identifier	it
>2033	Identifier	it
>2034	IdentifierDeclType	UniformVec 
>2049	FunctionDef	Shader 
>2050	ParameterList	const char * name , int x , int y , int z , int w
>2051	Parameter	 
>2052	Identifier	w
>2053	ParameterType	int
>2054	Parameter	 
>2055	Identifier	z
>2056	ParameterType	int
>2057	Parameter	 
>2058	Identifier	y
>2059	ParameterType	int
>2060	Parameter	 
>2061	Identifier	x
>2062	ParameterType	int
>2063	Parameter	 
>2064	Identifier	name
>2065	ParameterType	const char *
>2066	ReturnType	void
>2067	CompoundStatement	 
>2068	ExpressionStatement	 
>2069	AssignmentExpr	uniformsDirty = true
>2070	Identifier	true
>2071	Identifier	uniformsDirty
>2072	ExpressionStatement	 
>2073	AssignmentExpr	u . dirty = true
>2074	Identifier	true
>2075	MemberAccess	u . dirty
>2076	Identifier	dirty
>2077	Identifier	u
>2078	ExpressionStatement	 
>2079	AssignmentExpr	u . data . i [ 3 ] = w
>2080	Identifier	w
>2081	ArrayIndexing	u . data . i [ 3 ]
>2082	PrimaryExpression	3
>2083	MemberAccess	u . data . i
>2084	Identifier	i
>2085	MemberAccess	u . data
>2086	Identifier	data
>2087	Identifier	u
>2088	ExpressionStatement	 
>2089	AssignmentExpr	u . data . i [ 2 ] = z
>2090	Identifier	z
>2091	ArrayIndexing	u . data . i [ 2 ]
>2092	PrimaryExpression	2
>2093	MemberAccess	u . data . i
>2094	Identifier	i
>2095	MemberAccess	u . data
>2096	Identifier	data
>2097	Identifier	u
>2098	ExpressionStatement	 
>2099	AssignmentExpr	u . data . i [ 1 ] = y
>2100	Identifier	y
>2101	ArrayIndexing	u . data . i [ 1 ]
>2102	PrimaryExpression	1
>2103	MemberAccess	u . data . i
>2104	Identifier	i
>2105	MemberAccess	u . data
>2106	Identifier	data
>2107	Identifier	u
>2108	ExpressionStatement	 
>2109	AssignmentExpr	u . data . i [ 0 ] = x
>2110	Identifier	x
>2111	ArrayIndexing	u . data . i [ 0 ]
>2112	PrimaryExpression	0
>2113	MemberAccess	u . data . i
>2114	Identifier	i
>2115	MemberAccess	u . data
>2116	Identifier	data
>2117	Identifier	u
>2118	IdentifierDeclStatement	 
>2119	IdentifierDecl	& u = uniforms [ idx ]
>2120	AssignmentExpr	& u = uniforms [ idx ]
>2121	ArrayIndexing	uniforms [ idx ]
>2122	Identifier	idx
>2123	Identifier	uniforms
>2124	Identifier	u
>2125	Identifier	u
>2126	IdentifierDeclType	Uniform &
>2127	ReturnStatement	 
>2128	Statement	 
>2129	Statement	 
>2130	Statement	 
>2131	Statement	 
>2132	Statement	 
>2133	Statement	 
>2134	Statement	 
>2135	Statement	 
>2136	Statement	 
>2137	Statement	 
>2138	Statement	 
>2139	Statement	 
>2140	Statement	 
>2141	IdentifierDeclStatement	 
>2142	IdentifierDecl	idx = _getUniformIndex ( name )
>2143	AssignmentExpr	idx = _getUniformIndex ( name )
>2144	CallExpression	_getUniformIndex ( name )
>2145	ArgumentList	name
>2146	Argument	name
>2147	Identifier	name
>2148	Callee	_getUniformIndex
>2149	Identifier	_getUniformIndex
>2150	Identifier	idx
>2151	Identifier	idx
>2152	IdentifierDeclType	int
>2153	IfStatement	if ( ! g_programObj || numUniforms <= 0 )
>2154	ReturnStatement	 
>2155	Condition	 
>2156	OrExpression	! g_programObj || numUniforms <= 0
>2157	RelationalExpression	numUniforms <= 0
>2158	PrimaryExpression	0
>2159	Identifier	numUniforms
>2160	UnaryOp	! g_programObj
>2161	Identifier	g_programObj
>2162	UnaryOperator	!
>2187	FunctionDef	Shader 
>2188	ParameterList	const char * name , float x , float y , float z , float w
>2189	Parameter	 
>2190	Identifier	w
>2191	ParameterType	float
>2192	Parameter	 
>2193	Identifier	z
>2194	ParameterType	float
>2195	Parameter	 
>2196	Identifier	y
>2197	ParameterType	float
>2198	Parameter	 
>2199	Identifier	x
>2200	ParameterType	float
>2201	Parameter	 
>2202	Identifier	name
>2203	ParameterType	const char *
>2204	ReturnType	void
>2205	CompoundStatement	 
>2206	ExpressionStatement	 
>2207	AssignmentExpr	uniformsDirty = true
>2208	Identifier	true
>2209	Identifier	uniformsDirty
>2210	ExpressionStatement	 
>2211	AssignmentExpr	u . dirty = true
>2212	Identifier	true
>2213	MemberAccess	u . dirty
>2214	Identifier	dirty
>2215	Identifier	u
>2216	ExpressionStatement	 
>2217	AssignmentExpr	u . data . f [ 3 ] = w
>2218	Identifier	w
>2219	ArrayIndexing	u . data . f [ 3 ]
>2220	PrimaryExpression	3
>2221	MemberAccess	u . data . f
>2222	Identifier	f
>2223	MemberAccess	u . data
>2224	Identifier	data
>2225	Identifier	u
>2226	ExpressionStatement	 
>2227	AssignmentExpr	u . data . f [ 2 ] = z
>2228	Identifier	z
>2229	ArrayIndexing	u . data . f [ 2 ]
>2230	PrimaryExpression	2
>2231	MemberAccess	u . data . f
>2232	Identifier	f
>2233	MemberAccess	u . data
>2234	Identifier	data
>2235	Identifier	u
>2236	ExpressionStatement	 
>2237	AssignmentExpr	u . data . f [ 1 ] = y
>2238	Identifier	y
>2239	ArrayIndexing	u . data . f [ 1 ]
>2240	PrimaryExpression	1
>2241	MemberAccess	u . data . f
>2242	Identifier	f
>2243	MemberAccess	u . data
>2244	Identifier	data
>2245	Identifier	u
>2246	ExpressionStatement	 
>2247	AssignmentExpr	u . data . f [ 0 ] = x
>2248	Identifier	x
>2249	ArrayIndexing	u . data . f [ 0 ]
>2250	PrimaryExpression	0
>2251	MemberAccess	u . data . f
>2252	Identifier	f
>2253	MemberAccess	u . data
>2254	Identifier	data
>2255	Identifier	u
>2256	IdentifierDeclStatement	 
>2257	IdentifierDecl	& u = uniforms [ idx ]
>2258	AssignmentExpr	& u = uniforms [ idx ]
>2259	ArrayIndexing	uniforms [ idx ]
>2260	Identifier	idx
>2261	Identifier	uniforms
>2262	Identifier	u
>2263	Identifier	u
>2264	IdentifierDeclType	Uniform &
>2265	ReturnStatement	 
>2266	Statement	 
>2267	Statement	 
>2268	Statement	 
>2269	Statement	 
>2270	Statement	 
>2271	Statement	 
>2272	Statement	 
>2273	Statement	 
>2274	Statement	 
>2275	Statement	 
>2276	Statement	 
>2277	Statement	 
>2278	Statement	 
>2279	IdentifierDeclStatement	 
>2280	IdentifierDecl	idx = _getUniformIndex ( name )
>2281	AssignmentExpr	idx = _getUniformIndex ( name )
>2282	CallExpression	_getUniformIndex ( name )
>2283	ArgumentList	name
>2284	Argument	name
>2285	Identifier	name
>2286	Callee	_getUniformIndex
>2287	Identifier	_getUniformIndex
>2288	Identifier	idx
>2289	Identifier	idx
>2290	IdentifierDeclType	int
>2291	IfStatement	if ( ! g_programObj || numUniforms <= 0 )
>2292	ReturnStatement	 
>2293	Condition	 
>2294	OrExpression	! g_programObj || numUniforms <= 0
>2295	RelationalExpression	numUniforms <= 0
>2296	PrimaryExpression	0
>2297	Identifier	numUniforms
>2298	UnaryOp	! g_programObj
>2299	Identifier	g_programObj
>2300	UnaryOperator	!
<47=50,49,48
<50=461,457,450,436,414,75,71,69,51
<51=67,60,52
<52=53
<53=54
<54=58,55
<55=56
<56=57
<58=59
<60=61
<61=65,62
<62=63
<63=64
<65=66
<67=68
<69=70
<71=72
<72=74,73
<75=403,393,76
<76=77
<77=382,371,360,349,338,327,316,305,294,283,272,261,250,239,228,217,206,195,184,173,78
<78=93,79
<79=89,82,80
<80=81
<82=83
<83=87,84
<84=85
<85=86
<87=88
<89=90
<90=92,91
<93=94
<94=170,95
<95=167,96
<96=164,97
<97=161,98
<98=158,99
<99=155,100
<100=152,101
<101=149,102
<102=146,103
<103=143,104
<104=140,105
<105=137,106
<106=134,107
<107=131,108
<108=128,109
<109=125,110
<110=122,111
<111=119,112
<112=116,113
<113=115,114
<116=118,117
<119=121,120
<122=124,123
<125=127,126
<128=130,129
<131=133,132
<134=136,135
<137=139,138
<140=142,141
<143=145,144
<146=148,147
<149=151,150
<152=154,153
<155=157,156
<158=160,159
<161=163,162
<164=166,165
<167=169,168
<170=172,171
<173=174
<174=183,175
<175=182,176
<176=180,177
<177=178
<178=179
<180=181
<184=185
<185=194,186
<186=193,187
<187=191,188
<188=189
<189=190
<191=192
<195=196
<196=205,197
<197=204,198
<198=202,199
<199=200
<200=201
<202=203
<206=207
<207=216,208
<208=215,209
<209=213,210
<210=211
<211=212
<213=214
<217=218
<218=227,219
<219=226,220
<220=224,221
<221=222
<222=223
<224=225
<228=229
<229=238,230
<230=237,231
<231=235,232
<232=233
<233=234
<235=236
<239=240
<240=249,241
<241=248,242
<242=246,243
<243=244
<244=245
<246=247
<250=251
<251=260,252
<252=259,253
<253=257,254
<254=255
<255=256
<257=258
<261=262
<262=271,263
<263=270,264
<264=268,265
<265=266
<266=267
<268=269
<272=273
<273=282,274
<274=281,275
<275=279,276
<276=277
<277=278
<279=280
<283=284
<284=293,285
<285=292,286
<286=290,287
<287=288
<288=289
<290=291
<294=295
<295=304,296
<296=303,297
<297=301,298
<298=299
<299=300
<301=302
<305=306
<306=315,307
<307=314,308
<308=312,309
<309=310
<310=311
<312=313
<316=317
<317=326,318
<318=325,319
<319=323,320
<320=321
<321=322
<323=324
<327=328
<328=337,329
<329=336,330
<330=334,331
<331=332
<332=333
<334=335
<338=339
<339=348,340
<340=347,341
<341=345,342
<342=343
<343=344
<345=346
<349=350
<350=359,351
<351=358,352
<352=356,353
<353=354
<354=355
<356=357
<360=361
<361=370,362
<362=369,363
<363=367,364
<364=365
<365=366
<367=368
<371=372
<372=381,373
<373=380,374
<374=378,375
<375=376
<376=377
<378=379
<382=383
<383=392,384
<384=391,385
<385=389,386
<386=387
<387=388
<389=390
<393=396,394
<394=395
<396=397
<397=401,398
<398=399
<399=400
<401=402
<403=404
<404=406,405
<406=412,407
<407=410,408
<408=409
<410=411
<412=413
<414=425,415
<415=418,416
<416=417
<418=419
<419=423,420
<420=421
<421=422
<423=424
<425=426
<426=428,427
<428=434,429
<429=432,430
<430=431
<432=433
<434=435
<436=437
<437=449,448,438
<438=447,439
<439=446,440
<440=444,441
<441=442
<442=443
<444=445
<450=451
<451=455,452
<452=453
<453=454
<455=456
<457=458
<458=460,459
<461=463,462
<463=464
<497=499,498
<499=508,504,500
<500=501
<501=503,502
<504=505
<505=507,506
<508=509
<509=513,510
<510=512,511
<521=523,522
<523=524
<524=525
<525=527,526
<527=528
<532=535,534,533
<535=551,536
<536=549,537
<537=542,538
<538=539
<539=541,540
<542=543
<543=547,544
<544=545
<545=546
<547=548
<549=550
<551=553,552
<553=554
<554=556,555
<562=565,564,563
<565=566
<566=567
<567=569,568
<574=577,576,575
<577=578
<578=608,599,579
<579=580
<580=581
<581=597,582
<582=590,583
<583=584
<584=586,585
<586=587
<587=589,588
<590=591
<591=593,592
<593=594
<594=596,595
<597=598
<599=600
<600=606,601
<601=604,602
<602=603
<604=605
<606=607
<608=609
<609=616,610
<610=612,611
<612=613
<613=615,614
<616=618,617
<618=619
<619=621,620
<633=636,635,634
<636=649,642,637
<637=638
<638=640,639
<640=641
<642=643
<643=647,644
<644=645
<645=646
<647=648
<649=651,650
<651=652
<652=654,653
<660=663,662,661
<663=671,664
<664=665
<665=669,666
<666=667
<667=668
<669=670
<671=673,672
<673=674
<674=676,675
<681=696,695,682
<682=692,689,686,683
<683=685,684
<686=688,687
<689=691,690
<692=694,693
<696=846,834,804,789,782,769,756,739,729,701,699,697
<697=698
<699=700
<701=725,702
<702=721,715,703
<703=704
<704=713,705
<705=706
<706=707
<707=709,708
<709=710
<710=712,711
<713=714
<715=716
<716=720,717
<717=719,718
<721=722
<722=724,723
<725=726
<726=728,727
<729=730
<730=738,737,731
<731=736,732
<732=734,733
<734=735
<739=752,740
<740=745,741
<741=742
<742=744,743
<745=746
<746=750,747
<747=748
<748=749
<750=751
<752=753
<753=755,754
<756=757
<757=767,758
<758=765,763,761,759
<759=760
<761=762
<763=764
<765=766
<767=768
<769=770
<770=780,771
<771=778,776,772
<772=773
<773=775,774
<776=777
<778=779
<780=781
<782=783
<783=787,784
<784=785
<785=786
<787=788
<789=790
<790=802,791
<791=800,798,794,792
<792=793
<794=795
<795=797,796
<798=799
<800=801
<802=803
<804=830,805
<805=826,820,808,806
<806=807
<808=809
<809=818,810
<810=811
<811=812
<812=814,813
<814=815
<815=817,816
<818=819
<820=821
<821=825,822
<822=824,823
<826=827
<827=829,828
<830=831
<831=833,832
<834=835
<835=845,844,836
<836=843,837
<837=841,838
<838=839
<839=840
<841=842
<846=847
<847=852,851,848
<848=850,849
<872=881,880,873
<873=877,874
<874=876,875
<877=879,878
<881=976,970,955,949,943,922,901,892,891,890,889,887,886,885,884,882
<882=883
<887=888
<892=893
<893=899,894
<894=897,895
<895=896
<897=898
<899=900
<901=902
<902=921,920,903
<903=919,904
<904=912,906,905
<906=910,907
<907=908
<908=909
<910=911
<912=913
<913=915,914
<915=916
<916=918,917
<922=923
<923=942,941,924
<924=940,925
<925=933,927,926
<927=931,928
<928=929
<929=930
<931=932
<933=934
<934=936,935
<936=937
<937=939,938
<943=944
<944=946,945
<946=948,947
<949=950
<950=952,951
<952=954,953
<955=956
<956=968,957
<957=958
<958=959
<959=967,960
<960=966,961
<961=965,962
<962=964,963
<968=969
<970=972,971
<972=973
<973=975,974
<976=977
<977=979,978
<979=980
<997=1006,1005,998
<998=1002,999
<999=1001,1000
<1002=1004,1003
<1006=1313,1308,1302,1297,1290,1283,1229,1175,1168,1145,1133,1121,1114,1104,1094,1090,1077,1028,1020,1012,1007
<1007=1008
<1008=1010,1009
<1010=1011
<1012=1013
<1013=1019,1014
<1014=1017,1016,1015
<1017=1018
<1020=1021
<1021=1027,1022
<1022=1025,1024,1023
<1025=1026
<1028=1073,1029
<1029=1058,1054,1048,1036,1031,1030
<1031=1032
<1032=1034,1033
<1034=1035
<1036=1037
<1037=1046,1038
<1038=1039
<1039=1040
<1040=1042,1041
<1042=1043
<1043=1045,1044
<1046=1047
<1048=1049
<1049=1053,1050
<1050=1052,1051
<1054=1055
<1055=1057,1056
<1058=1059
<1059=1071,1060
<1060=1069,1065,1063,1061
<1061=1062
<1063=1064
<1065=1066
<1066=1068,1067
<1069=1070
<1071=1072
<1073=1074
<1074=1076,1075
<1077=1078
<1078=1088,1079
<1079=1086,1084,1080
<1080=1081
<1081=1083,1082
<1084=1085
<1086=1087
<1088=1089
<1090=1091
<1091=1093,1092
<1094=1102,1095
<1095=1096
<1096=1100,1097
<1097=1098
<1098=1099
<1100=1101
<1102=1103
<1104=1112,1105
<1105=1106
<1106=1110,1107
<1107=1108
<1108=1109
<1110=1111
<1112=1113
<1114=1115
<1115=1119,1116
<1116=1117
<1117=1118
<1119=1120
<1121=1131,1122
<1122=1123
<1123=1129,1124
<1124=1127,1125
<1125=1126
<1127=1128
<1129=1130
<1131=1132
<1133=1143,1134
<1134=1135
<1135=1141,1136
<1136=1139,1137
<1137=1138
<1139=1140
<1141=1142
<1143=1144
<1145=1160,1146
<1146=1153,1148,1147
<1148=1149
<1149=1151,1150
<1151=1152
<1153=1154
<1154=1158,1155
<1155=1156
<1156=1157
<1158=1159
<1160=1161
<1161=1167,1162
<1162=1166,1163
<1163=1165,1164
<1168=1169
<1169=1174,1170
<1170=1172,1171
<1172=1173
<1175=1204,1176
<1176=1200,1190,1178,1177
<1178=1179
<1179=1188,1180
<1180=1181
<1181=1182
<1182=1184,1183
<1184=1185
<1185=1187,1186
<1188=1189
<1190=1191
<1191=1199,1192
<1192=1198,1193
<1193=1197,1194
<1194=1196,1195
<1200=1201
<1201=1203,1202
<1204=1205
<1205=1228,1206
<1206=1225,1207
<1207=1224,1208
<1208=1223,1209
<1209=1221,1210
<1210=1219,1217,1215,1211
<1211=1212
<1212=1214,1213
<1215=1216
<1217=1218
<1219=1220
<1221=1222
<1225=1227,1226
<1229=1258,1230
<1230=1254,1244,1232,1231
<1232=1233
<1233=1242,1234
<1234=1235
<1235=1236
<1236=1238,1237
<1238=1239
<1239=1241,1240
<1242=1243
<1244=1245
<1245=1253,1246
<1246=1252,1247
<1247=1251,1248
<1248=1250,1249
<1254=1255
<1255=1257,1256
<1258=1259
<1259=1282,1260
<1260=1279,1261
<1261=1278,1262
<1262=1277,1263
<1263=1275,1264
<1264=1273,1271,1269,1265
<1265=1266
<1266=1268,1267
<1269=1270
<1271=1272
<1273=1274
<1275=1276
<1279=1281,1280
<1283=1284
<1284=1289,1288,1285
<1285=1287,1286
<1290=1291
<1291=1296,1295,1292
<1292=1294,1293
<1297=1298
<1298=1301,1300,1299
<1302=1304,1303
<1304=1305
<1305=1307,1306
<1308=1309
<1309=1311,1310
<1311=1312
<1313=1314
<1314=1316,1315
<1316=1317
<1342=1348,1347,1343
<1343=1344
<1344=1346,1345
<1348=1355,1349
<1349=1350
<1350=1352,1351
<1352=1354,1353
<1355=1517,1356
<1356=1515,1498,1497,1495,1478,1477,1475,1458,1457,1455,1438,1437,1435,1418,1417,1415,1398,1397,1395,1378,1377,1375,1358,1357
<1358=1359
<1359=1373,1360
<1360=1369,1367,1361
<1361=1362
<1362=1364,1363
<1364=1366,1365
<1367=1368
<1369=1370
<1370=1372,1371
<1373=1374
<1375=1376
<1378=1379
<1379=1393,1380
<1380=1389,1387,1381
<1381=1382
<1382=1384,1383
<1384=1386,1385
<1387=1388
<1389=1390
<1390=1392,1391
<1393=1394
<1395=1396
<1398=1399
<1399=1413,1400
<1400=1409,1407,1401
<1401=1402
<1402=1404,1403
<1404=1406,1405
<1407=1408
<1409=1410
<1410=1412,1411
<1413=1414
<1415=1416
<1418=1419
<1419=1433,1420
<1420=1429,1427,1421
<1421=1422
<1422=1424,1423
<1424=1426,1425
<1427=1428
<1429=1430
<1430=1432,1431
<1433=1434
<1435=1436
<1438=1439
<1439=1453,1440
<1440=1449,1447,1441
<1441=1442
<1442=1444,1443
<1444=1446,1445
<1447=1448
<1449=1450
<1450=1452,1451
<1453=1454
<1455=1456
<1458=1459
<1459=1473,1460
<1460=1469,1467,1461
<1461=1462
<1462=1464,1463
<1464=1466,1465
<1467=1468
<1469=1470
<1470=1472,1471
<1473=1474
<1475=1476
<1478=1479
<1479=1493,1480
<1480=1489,1487,1481
<1481=1482
<1482=1484,1483
<1484=1486,1485
<1487=1488
<1489=1490
<1490=1492,1491
<1493=1494
<1495=1496
<1498=1499
<1499=1513,1500
<1500=1509,1507,1501
<1501=1502
<1502=1504,1503
<1504=1506,1505
<1507=1508
<1509=1510
<1510=1512,1511
<1513=1514
<1515=1516
<1517=1518
<1518=1520,1519
<1533=1536,1535,1534
<1536=1586,1582,1537
<1537=1574,1565,1562,1538
<1538=1553,1539
<1539=1549,1540
<1540=1541
<1541=1547,1542
<1542=1543
<1543=1544
<1544=1546,1545
<1547=1548
<1549=1550
<1550=1552,1551
<1553=1554
<1554=1561,1560,1555
<1555=1559,1556
<1556=1558,1557
<1562=1564,1563
<1565=1566
<1566=1573,1567
<1567=1569,1568
<1569=1570
<1570=1572,1571
<1574=1575
<1575=1576
<1576=1581,1580,1577
<1577=1579,1578
<1582=1583
<1583=1585,1584
<1586=1588,1587
<1588=1589
<1589=1591,1590
<1605=1614,1613,1606
<1606=1610,1607
<1607=1609,1608
<1610=1612,1611
<1614=1615
<1615=1616
<1616=1618,1617
<1618=1626,1619
<1619=1622,1620
<1620=1621
<1622=1623
<1623=1625,1624
<1626=1627
<1635=1640,1636
<1636=1637
<1637=1639,1638
<1640=1641
<1641=1642
<1642=1656,1643
<1643=1652,1644
<1644=1645
<1645=1651,1646
<1646=1648,1647
<1648=1650,1649
<1652=1653
<1653=1655,1654
<1656=1657
<1668=1671,1670,1669
<1671=1914,1900,1891,1884,1704,1695,1676,1672
<1672=1673
<1673=1675,1674
<1676=1677
<1677=1693,1678
<1678=1686,1679
<1679=1680
<1680=1682,1681
<1682=1683
<1683=1685,1684
<1686=1687
<1687=1689,1688
<1689=1690
<1690=1692,1691
<1693=1694
<1695=1696
<1696=1700,1697
<1697=1698
<1698=1699
<1700=1701
<1701=1703,1702
<1704=1876,1872,1869,1705
<1705=1865,1858,1851,1818,1808,1793,1783,1769,1741,1735,1729,1710,1706
<1706=1707
<1707=1709,1708
<1710=1727,1718,1711
<1711=1712
<1712=1713
<1713=1715,1714
<1715=1717,1716
<1718=1719
<1719=1723,1720
<1720=1721
<1721=1722
<1723=1724
<1724=1726,1725
<1727=1728
<1729=1730
<1730=1732,1731
<1732=1734,1733
<1735=1736
<1736=1738,1737
<1738=1740,1739
<1741=1761,1742
<1742=1743
<1743=1759,1744
<1744=1753,1751,1745
<1745=1746
<1746=1750,1747
<1747=1749,1748
<1751=1752
<1753=1754
<1754=1758,1755
<1755=1757,1756
<1759=1760
<1761=1762
<1762=1768,1763
<1763=1767,1764
<1764=1766,1765
<1769=1770
<1770=1782,1781,1771
<1771=1780,1772
<1772=1779,1773
<1773=1775,1774
<1775=1776
<1776=1778,1777
<1783=1785,1784
<1785=1786
<1786=1790,1787
<1787=1789,1788
<1790=1792,1791
<1793=1794
<1794=1805,1795
<1795=1803,1796
<1796=1801,1797
<1797=1798
<1798=1800,1799
<1801=1802
<1803=1804
<1805=1807,1806
<1808=1810,1809
<1810=1811
<1811=1815,1812
<1812=1814,1813
<1815=1817,1816
<1818=1819
<1819=1849,1820
<1820=1847,1845,1839,1837,1833,1829,1821
<1821=1822
<1822=1828,1823
<1823=1825,1824
<1825=1827,1826
<1829=1830
<1830=1832,1831
<1833=1834
<1834=1836,1835
<1837=1838
<1839=1840
<1840=1844,1841
<1841=1843,1842
<1845=1846
<1847=1848
<1849=1850
<1851=1852
<1852=1857,1856,1853
<1853=1855,1854
<1858=1859
<1859=1864,1863,1860
<1860=1862,1861
<1865=1866
<1866=1868,1867
<1869=1871,1870
<1872=1873
<1873=1875,1874
<1876=1877
<1877=1878
<1878=1883,1882,1879
<1879=1881,1880
<1884=1885
<1885=1890,1889,1886
<1886=1888,1887
<1891=1892
<1892=1896,1893
<1893=1894
<1894=1895
<1896=1897
<1897=1899,1898
<1900=1910,1901
<1901=1903,1902
<1903=1904
<1904=1906,1905
<1906=1907
<1907=1909,1908
<1910=1911
<1911=1913,1912
<1914=1915
<1915=1925,1916
<1916=1923,1921,1917
<1917=1918
<1918=1920,1919
<1921=1922
<1923=1924
<1925=1926
<1961=1967,1966,1962
<1962=1963
<1963=1965,1964
<1967=2007,1982,1968
<1968=1969
<1969=1980,1970
<1970=1971
<1971=1972
<1972=1979,1973
<1973=1975,1974
<1975=1976
<1976=1978,1977
<1980=1981
<1982=1987,1983
<1983=1984
<1984=1986,1985
<1987=1988
<1988=1999,1989
<1989=1997,1990
<1990=1993,1991
<1991=1992
<1993=1994
<1994=1996,1995
<1997=1998
<1999=2006,2000
<2000=2002,2001
<2002=2003
<2003=2005,2004
<2007=2008
<2008=2034,2033,2009
<2009=2032,2010
<2010=2030,2011
<2011=2023,2016,2014,2012
<2012=2013
<2014=2015
<2016=2017
<2017=2019,2018
<2019=2020
<2020=2022,2021
<2023=2024
<2024=2026,2025
<2026=2027
<2027=2029,2028
<2030=2031
<2049=2067,2066,2050
<2050=2063,2060,2057,2054,2051
<2051=2053,2052
<2054=2056,2055
<2057=2059,2058
<2060=2062,2061
<2063=2065,2064
<2067=2153,2141,2140,2139,2138,2137,2136,2135,2134,2133,2132,2131,2130,2129,2128,2127,2118,2108,2098,2088,2078,2072,2068
<2068=2069
<2069=2071,2070
<2072=2073
<2073=2075,2074
<2075=2077,2076
<2078=2079
<2079=2081,2080
<2081=2083,2082
<2083=2085,2084
<2085=2087,2086
<2088=2089
<2089=2091,2090
<2091=2093,2092
<2093=2095,2094
<2095=2097,2096
<2098=2099
<2099=2101,2100
<2101=2103,2102
<2103=2105,2104
<2105=2107,2106
<2108=2109
<2109=2111,2110
<2111=2113,2112
<2113=2115,2114
<2115=2117,2116
<2118=2119
<2119=2126,2125,2120
<2120=2124,2121
<2121=2123,2122
<2141=2142
<2142=2152,2151,2143
<2143=2150,2144
<2144=2148,2145
<2145=2146
<2146=2147
<2148=2149
<2153=2155,2154
<2155=2156
<2156=2160,2157
<2157=2159,2158
<2160=2162,2161
<2187=2205,2204,2188
<2188=2201,2198,2195,2192,2189
<2189=2191,2190
<2192=2194,2193
<2195=2197,2196
<2198=2200,2199
<2201=2203,2202
<2205=2291,2279,2278,2277,2276,2275,2274,2273,2272,2271,2270,2269,2268,2267,2266,2265,2256,2246,2236,2226,2216,2210,2206
<2206=2207
<2207=2209,2208
<2210=2211
<2211=2213,2212
<2213=2215,2214
<2216=2217
<2217=2219,2218
<2219=2221,2220
<2221=2223,2222
<2223=2225,2224
<2226=2227
<2227=2229,2228
<2229=2231,2230
<2231=2233,2232
<2233=2235,2234
<2236=2237
<2237=2239,2238
<2239=2241,2240
<2241=2243,2242
<2243=2245,2244
<2246=2247
<2247=2249,2248
<2249=2251,2250
<2251=2253,2252
<2253=2255,2254
<2256=2257
<2257=2264,2263,2258
<2258=2262,2259
<2259=2261,2260
<2279=2280
<2280=2290,2289,2281
<2281=2288,2282
<2282=2286,2283
<2283=2284
<2284=2285
<2286=2287
<2291=2293,2292
<2293=2294
<2294=2298,2295
<2295=2297,2296
<2298=2300,2299
