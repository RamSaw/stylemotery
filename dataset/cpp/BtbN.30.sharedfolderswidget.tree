>3	FunctionDef	SharedFoldersWidget 
>4	ParameterList	QWidget * parent
>5	Parameter	 
>6	Identifier	parent
>7	ParameterType	QWidget *
>8	CompoundStatement	 
>9	ExpressionStatement	 
>10	Statement	 
>11	Statement	 
>12	Statement	 
>13	Statement	 
>14	Statement	 
>15	Statement	 
>16	Statement	 
>17	Statement	 
>18	Statement	 
>19	Statement	 
>20	Statement	 
>21	Statement	 
>22	Statement	 
>23	Statement	 
>24	Statement	 
>25	Statement	 
>26	Statement	 
>27	Statement	 
>28	Statement	 
>29	Statement	 
>30	Statement	 
>31	Statement	 
>32	Statement	 
>33	Statement	 
>34	ExpressionStatement	 
>35	CallExpression	connect ( infoButton , SIGNAL ( clicked ( ) ) , this , SLOT ( folderInfo ( ) ) )
>36	ArgumentList	infoButton
>37	Argument	SLOT ( folderInfo ( ) )
>38	CallExpression	SLOT ( folderInfo ( ) )
>39	ArgumentList	folderInfo ( )
>40	Argument	folderInfo ( )
>41	CallExpression	folderInfo ( )
>42	ArgumentList	 
>43	Callee	folderInfo
>44	Identifier	folderInfo
>45	Callee	SLOT
>46	Identifier	SLOT
>47	Argument	this
>48	Identifier	this
>49	Argument	SIGNAL ( clicked ( ) )
>50	CallExpression	SIGNAL ( clicked ( ) )
>51	ArgumentList	clicked ( )
>52	Argument	clicked ( )
>53	CallExpression	clicked ( )
>54	ArgumentList	 
>55	Callee	clicked
>56	Identifier	clicked
>57	Callee	SIGNAL
>58	Identifier	SIGNAL
>59	Argument	infoButton
>60	Identifier	infoButton
>61	Callee	connect
>62	Identifier	connect
>63	ExpressionStatement	 
>64	CallExpression	connect ( removeButton , SIGNAL ( clicked ( ) ) , this , SLOT ( removeFolder ( ) ) )
>65	ArgumentList	removeButton
>66	Argument	SLOT ( removeFolder ( ) )
>67	CallExpression	SLOT ( removeFolder ( ) )
>68	ArgumentList	removeFolder ( )
>69	Argument	removeFolder ( )
>70	CallExpression	removeFolder ( )
>71	ArgumentList	 
>72	Callee	removeFolder
>73	Identifier	removeFolder
>74	Callee	SLOT
>75	Identifier	SLOT
>76	Argument	this
>77	Identifier	this
>78	Argument	SIGNAL ( clicked ( ) )
>79	CallExpression	SIGNAL ( clicked ( ) )
>80	ArgumentList	clicked ( )
>81	Argument	clicked ( )
>82	CallExpression	clicked ( )
>83	ArgumentList	 
>84	Callee	clicked
>85	Identifier	clicked
>86	Callee	SIGNAL
>87	Identifier	SIGNAL
>88	Argument	removeButton
>89	Identifier	removeButton
>90	Callee	connect
>91	Identifier	connect
>92	ExpressionStatement	 
>93	CallExpression	connect ( addButton , SIGNAL ( clicked ( ) ) , this , SLOT ( addFolder ( ) ) )
>94	ArgumentList	addButton
>95	Argument	SLOT ( addFolder ( ) )
>96	CallExpression	SLOT ( addFolder ( ) )
>97	ArgumentList	addFolder ( )
>98	Argument	addFolder ( )
>99	CallExpression	addFolder ( )
>100	ArgumentList	 
>101	Callee	addFolder
>102	Identifier	addFolder
>103	Callee	SLOT
>104	Identifier	SLOT
>105	Argument	this
>106	Identifier	this
>107	Argument	SIGNAL ( clicked ( ) )
>108	CallExpression	SIGNAL ( clicked ( ) )
>109	ArgumentList	clicked ( )
>110	Argument	clicked ( )
>111	CallExpression	clicked ( )
>112	ArgumentList	 
>113	Callee	clicked
>114	Identifier	clicked
>115	Callee	SIGNAL
>116	Identifier	SIGNAL
>117	Argument	addButton
>118	Identifier	addButton
>119	Callee	connect
>120	Identifier	connect
>121	ExpressionStatement	 
>122	CallExpression	connect ( updateTimer , SIGNAL ( timeout ( ) ) , this , SLOT ( updateTick ( ) ) )
>123	ArgumentList	updateTimer
>124	Argument	SLOT ( updateTick ( ) )
>125	CallExpression	SLOT ( updateTick ( ) )
>126	ArgumentList	updateTick ( )
>127	Argument	updateTick ( )
>128	CallExpression	updateTick ( )
>129	ArgumentList	 
>130	Callee	updateTick
>131	Identifier	updateTick
>132	Callee	SLOT
>133	Identifier	SLOT
>134	Argument	this
>135	Identifier	this
>136	Argument	SIGNAL ( timeout ( ) )
>137	CallExpression	SIGNAL ( timeout ( ) )
>138	ArgumentList	timeout ( )
>139	Argument	timeout ( )
>140	CallExpression	timeout ( )
>141	ArgumentList	 
>142	Callee	timeout
>143	Identifier	timeout
>144	Callee	SIGNAL
>145	Identifier	SIGNAL
>146	Argument	updateTimer
>147	Identifier	updateTimer
>148	Callee	connect
>149	Identifier	connect
>150	ExpressionStatement	 
>151	CallExpression	updateTimer -> start ( )
>152	ArgumentList	 
>153	Callee	updateTimer -> start
>154	PtrMemberAccess	updateTimer -> start
>155	Identifier	start
>156	Identifier	updateTimer
>157	ExpressionStatement	 
>158	CallExpression	updateTimer -> setInterval ( 2000 )
>159	ArgumentList	2000
>160	Argument	2000
>161	PrimaryExpression	2000
>162	Callee	updateTimer -> setInterval
>163	PtrMemberAccess	updateTimer -> setInterval
>164	Identifier	setInterval
>165	Identifier	updateTimer
>166	IdentifierDeclStatement	 
>167	IdentifierDecl	* updateTimer = new QTimer ( this )
>168	AssignmentExpr	* updateTimer = new QTimer ( this )
>169	Identifier	this
>170	Identifier	this
>171	Identifier	updateTimer
>172	IdentifierDeclType	QTimer *
>173	ExpressionStatement	 
>174	CallExpression	foldersTable -> horizontalHeader ( ) -> setSectionResizeMode ( QHeaderView 
>175	ArgumentList	QHeaderView 
>176	Argument	QHeaderView 
>177	Identifier	QHeaderView 
>178	Callee	foldersTable -> horizontalHeader ( ) -> setSectionResizeMode
>179	PtrMemberAccess	foldersTable -> horizontalHeader ( ) -> setSectionResizeMode
>180	Identifier	setSectionResizeMode
>181	CallExpression	foldersTable -> horizontalHeader ( )
>182	ArgumentList	 
>183	Callee	foldersTable -> horizontalHeader
>184	PtrMemberAccess	foldersTable -> horizontalHeader
>185	Identifier	horizontalHeader
>186	Identifier	foldersTable
>187	ExpressionStatement	 
>188	CallExpression	setupUi ( this )
>189	ArgumentList	this
>190	Argument	this
>191	Identifier	this
>192	Callee	setupUi
>193	Identifier	setupUi
>215	FunctionDef	SharedFoldersWidget 
>216	ParameterList	BtsClient * newclient
>217	Parameter	 
>218	Identifier	newclient
>219	ParameterType	BtsClient *
>220	ReturnType	void
>221	CompoundStatement	 
>222	ExpressionStatement	 
>223	CallExpression	connect ( api , SIGNAL ( removeFolderResult ( QString ) ) , this , SLOT ( updateTick ( ) ) )
>224	ArgumentList	api
>225	Argument	SLOT ( updateTick ( ) )
>226	CallExpression	SLOT ( updateTick ( ) )
>227	ArgumentList	updateTick ( )
>228	Argument	updateTick ( )
>229	CallExpression	updateTick ( )
>230	ArgumentList	 
>231	Callee	updateTick
>232	Identifier	updateTick
>233	Callee	SLOT
>234	Identifier	SLOT
>235	Argument	this
>236	Identifier	this
>237	Argument	SIGNAL ( removeFolderResult ( QString ) )
>238	CallExpression	SIGNAL ( removeFolderResult ( QString ) )
>239	ArgumentList	removeFolderResult ( QString )
>240	Argument	removeFolderResult ( QString )
>241	CallExpression	removeFolderResult ( QString )
>242	ArgumentList	QString
>243	Argument	QString
>244	Identifier	QString
>245	Callee	removeFolderResult
>246	Identifier	removeFolderResult
>247	Callee	SIGNAL
>248	Identifier	SIGNAL
>249	Argument	api
>250	Identifier	api
>251	Callee	connect
>252	Identifier	connect
>253	ExpressionStatement	 
>254	CallExpression	connect ( api , SIGNAL ( addFolderResult ( ) ) , this , SLOT ( updateTick ( ) ) )
>255	ArgumentList	api
>256	Argument	SLOT ( updateTick ( ) )
>257	CallExpression	SLOT ( updateTick ( ) )
>258	ArgumentList	updateTick ( )
>259	Argument	updateTick ( )
>260	CallExpression	updateTick ( )
>261	ArgumentList	 
>262	Callee	updateTick
>263	Identifier	updateTick
>264	Callee	SLOT
>265	Identifier	SLOT
>266	Argument	this
>267	Identifier	this
>268	Argument	SIGNAL ( addFolderResult ( ) )
>269	CallExpression	SIGNAL ( addFolderResult ( ) )
>270	ArgumentList	addFolderResult ( )
>271	Argument	addFolderResult ( )
>272	CallExpression	addFolderResult ( )
>273	ArgumentList	 
>274	Callee	addFolderResult
>275	Identifier	addFolderResult
>276	Callee	SIGNAL
>277	Identifier	SIGNAL
>278	Argument	api
>279	Identifier	api
>280	Callee	connect
>281	Identifier	connect
>282	ExpressionStatement	 
>283	CallExpression	connect ( client , SIGNAL ( clientStarted ( ) ) , this , SLOT ( updateTick ( ) ) )
>284	ArgumentList	client
>285	Argument	SLOT ( updateTick ( ) )
>286	CallExpression	SLOT ( updateTick ( ) )
>287	ArgumentList	updateTick ( )
>288	Argument	updateTick ( )
>289	CallExpression	updateTick ( )
>290	ArgumentList	 
>291	Callee	updateTick
>292	Identifier	updateTick
>293	Callee	SLOT
>294	Identifier	SLOT
>295	Argument	this
>296	Identifier	this
>297	Argument	SIGNAL ( clientStarted ( ) )
>298	CallExpression	SIGNAL ( clientStarted ( ) )
>299	ArgumentList	clientStarted ( )
>300	Argument	clientStarted ( )
>301	CallExpression	clientStarted ( )
>302	ArgumentList	 
>303	Callee	clientStarted
>304	Identifier	clientStarted
>305	Callee	SIGNAL
>306	Identifier	SIGNAL
>307	Argument	client
>308	Identifier	client
>309	Callee	connect
>310	Identifier	connect
>311	ExpressionStatement	 
>312	Statement	 
>313	Statement	 
>314	Statement	 
>315	Statement	 
>316	Statement	 
>317	Statement	 
>318	Statement	 
>319	Statement	 
>320	Statement	 
>321	Statement	 
>322	Statement	 
>323	Statement	 
>324	Statement	 
>325	Statement	 
>326	Statement	 
>327	Statement	 
>328	Statement	 
>329	Statement	 
>330	Statement	 
>331	Statement	 
>332	Statement	 
>333	Statement	 
>334	Statement	 
>335	Statement	 
>336	Statement	 
>337	Statement	 
>338	Statement	 
>339	Statement	 
>340	Statement	 
>341	Statement	 
>342	ExpressionStatement	 
>343	CallExpression	connect ( api , SIGNAL ( error ( QString ) ) , this , SIGNAL ( error ( QString ) ) )
>344	ArgumentList	api
>345	Argument	SIGNAL ( error ( QString ) )
>346	CallExpression	SIGNAL ( error ( QString ) )
>347	ArgumentList	error ( QString )
>348	Argument	error ( QString )
>349	CallExpression	error ( QString )
>350	ArgumentList	QString
>351	Argument	QString
>352	Identifier	QString
>353	Callee	error
>354	Identifier	error
>355	Callee	SIGNAL
>356	Identifier	SIGNAL
>357	Argument	this
>358	Identifier	this
>359	Argument	SIGNAL ( error ( QString ) )
>360	CallExpression	SIGNAL ( error ( QString ) )
>361	ArgumentList	error ( QString )
>362	Argument	error ( QString )
>363	CallExpression	error ( QString )
>364	ArgumentList	QString
>365	Argument	QString
>366	Identifier	QString
>367	Callee	error
>368	Identifier	error
>369	Callee	SIGNAL
>370	Identifier	SIGNAL
>371	Argument	api
>372	Identifier	api
>373	Callee	connect
>374	Identifier	connect
>375	ExpressionStatement	 
>376	AssignmentExpr	api = new BtsApi ( client , this )
>377	Expression	client , this
>378	Identifier	this
>379	Identifier	client
>380	Identifier	api
>381	ExpressionStatement	 
>382	AssignmentExpr	client = newclient
>383	Identifier	newclient
>384	Identifier	client
>385	IfStatement	if ( client )
>386	CompoundStatement	 
>387	ExpressionStatement	 
>388	AssignmentExpr	api = nullptr
>389	Identifier	nullptr
>390	Identifier	api
>391	ExpressionStatement	 
>392	CallExpression	api -> deleteLater ( )
>393	ArgumentList	 
>394	Callee	api -> deleteLater
>395	PtrMemberAccess	api -> deleteLater
>396	Identifier	deleteLater
>397	Identifier	api
>398	ExpressionStatement	 
>399	CallExpression	api -> disconnect ( this )
>400	ArgumentList	this
>401	Argument	this
>402	Identifier	this
>403	Callee	api -> disconnect
>404	PtrMemberAccess	api -> disconnect
>405	Identifier	disconnect
>406	Identifier	api
>407	Condition	 
>408	Identifier	client
>425	FunctionDef	SharedFoldersWidget 
>426	ParameterList	 
>427	ReturnType	void
>428	CompoundStatement	 
>429	ExpressionStatement	 
>430	CallExpression	api -> addFolder ( dialog . getPath ( ) , dialog . getSecret ( ) )
>431	ArgumentList	dialog . getPath ( )
>432	Argument	dialog . getSecret ( )
>433	CallExpression	dialog . getSecret ( )
>434	ArgumentList	 
>435	Callee	dialog . getSecret
>436	MemberAccess	dialog . getSecret
>437	Identifier	getSecret
>438	Identifier	dialog
>439	Argument	dialog . getPath ( )
>440	CallExpression	dialog . getPath ( )
>441	ArgumentList	 
>442	Callee	dialog . getPath
>443	MemberAccess	dialog . getPath
>444	Identifier	getPath
>445	Identifier	dialog
>446	Callee	api -> addFolder
>447	PtrMemberAccess	api -> addFolder
>448	Identifier	addFolder
>449	Identifier	api
>450	IfStatement	if ( dialog . getSecret ( ) . isEmpty ( ) )
>451	ReturnStatement	 
>452	Condition	 
>453	CallExpression	dialog . getSecret ( ) . isEmpty ( )
>454	ArgumentList	 
>455	Callee	dialog . getSecret ( ) . isEmpty
>456	MemberAccess	dialog . getSecret ( ) . isEmpty
>457	Identifier	isEmpty
>458	CallExpression	dialog . getSecret ( )
>459	ArgumentList	 
>460	Callee	dialog . getSecret
>461	MemberAccess	dialog . getSecret
>462	Identifier	getSecret
>463	Identifier	dialog
>464	IfStatement	if ( dialog . getPath ( ) . isEmpty ( ) )
>465	ReturnStatement	 
>466	Condition	 
>467	CallExpression	dialog . getPath ( ) . isEmpty ( )
>468	ArgumentList	 
>469	Callee	dialog . getPath ( ) . isEmpty
>470	MemberAccess	dialog . getPath ( ) . isEmpty
>471	Identifier	isEmpty
>472	CallExpression	dialog . getPath ( )
>473	ArgumentList	 
>474	Callee	dialog . getPath
>475	MemberAccess	dialog . getPath
>476	Identifier	getPath
>477	Identifier	dialog
>478	IfStatement	if ( dialog . exec ( ) != QDialog 
>479	ReturnStatement	 
>480	Condition	 
>481	EqualityExpression	dialog . exec ( ) != QDialog 
>482	Identifier	QDialog 
>483	CallExpression	dialog . exec ( )
>484	ArgumentList	 
>485	Callee	dialog . exec
>486	MemberAccess	dialog . exec
>487	Identifier	exec
>488	Identifier	dialog
>489	IdentifierDeclStatement	 
>490	IdentifierDecl	dialog ( api , this )
>491	Expression	api , this
>492	Identifier	this
>493	Identifier	api
>494	Identifier	dialog
>495	IdentifierDeclType	AddFolderDialog
>496	IfStatement	if ( ! api || ! client )
>497	ReturnStatement	 
>498	Condition	 
>499	OrExpression	! api || ! client
>500	UnaryOp	! client
>501	Identifier	client
>502	UnaryOperator	!
>503	UnaryOp	! api
>504	Identifier	api
>505	UnaryOperator	!
>518	FunctionDef	getSelectedRow (QTableWidget * tbl)
>519	ParameterList	QTableWidget * tbl
>520	Parameter	 
>521	Identifier	tbl
>522	ParameterType	QTableWidget *
>523	ReturnType	static QTableWidgetItem *
>524	CompoundStatement	 
>525	ReturnStatement	 
>526	CallExpression	tbl -> item ( row , 0 )
>527	ArgumentList	row
>528	Argument	0
>529	PrimaryExpression	0
>530	Argument	row
>531	Identifier	row
>532	Callee	tbl -> item
>533	PtrMemberAccess	tbl -> item
>534	Identifier	item
>535	Identifier	tbl
>536	IdentifierDeclStatement	 
>537	IdentifierDecl	row = selection . topRow ( )
>538	AssignmentExpr	row = selection . topRow ( )
>539	CallExpression	selection . topRow ( )
>540	ArgumentList	 
>541	Callee	selection . topRow
>542	MemberAccess	selection . topRow
>543	Identifier	topRow
>544	Identifier	selection
>545	Identifier	row
>546	Identifier	row
>547	IdentifierDeclType	int
>548	IfStatement	if ( selection . rowCount ( ) != 1 )
>549	ReturnStatement	 
>550	PrimaryExpression	0
>551	Condition	 
>552	EqualityExpression	selection . rowCount ( ) != 1
>553	PrimaryExpression	1
>554	CallExpression	selection . rowCount ( )
>555	ArgumentList	 
>556	Callee	selection . rowCount
>557	MemberAccess	selection . rowCount
>558	Identifier	rowCount
>559	Identifier	selection
>560	IdentifierDeclStatement	 
>561	IdentifierDecl	selection = selections . first ( )
>562	AssignmentExpr	selection = selections . first ( )
>563	CallExpression	selections . first ( )
>564	ArgumentList	 
>565	Callee	selections . first
>566	MemberAccess	selections . first
>567	Identifier	first
>568	Identifier	selections
>569	Identifier	selection
>570	Identifier	selection
>571	IdentifierDeclType	QTableWidgetSelectionRange
>572	IfStatement	if ( selections . size ( ) != 1 )
>573	ReturnStatement	 
>574	PrimaryExpression	0
>575	Condition	 
>576	EqualityExpression	selections . size ( ) != 1
>577	PrimaryExpression	1
>578	CallExpression	selections . size ( )
>579	ArgumentList	 
>580	Callee	selections . size
>581	MemberAccess	selections . size
>582	Identifier	size
>583	Identifier	selections
>584	IdentifierDeclStatement	 
>585	IdentifierDecl	selections = tbl -> selectedRanges ( )
>586	AssignmentExpr	selections = tbl -> selectedRanges ( )
>587	CallExpression	tbl -> selectedRanges ( )
>588	ArgumentList	 
>589	Callee	tbl -> selectedRanges
>590	PtrMemberAccess	tbl -> selectedRanges
>591	Identifier	selectedRanges
>592	Identifier	tbl
>593	Identifier	selections
>594	Identifier	selections
>595	IdentifierDeclType	QList < QTableWidgetSelectionRange >
>610	FunctionDef	SharedFoldersWidget 
>611	ParameterList	 
>612	ReturnType	void
>613	CompoundStatement	 
>614	ExpressionStatement	 
>615	CallExpression	api -> removeFolder ( selectedSecret )
>616	ArgumentList	selectedSecret
>617	Argument	selectedSecret
>618	Identifier	selectedSecret
>619	Callee	api -> removeFolder
>620	PtrMemberAccess	api -> removeFolder
>621	Identifier	removeFolder
>622	Identifier	api
>623	IfStatement	if ( result != QMessageBox 
>624	ReturnStatement	 
>625	Condition	 
>626	EqualityExpression	result != QMessageBox 
>627	Identifier	QMessageBox 
>628	Identifier	result
>629	ExpressionStatement	 
>630	AssignmentExpr	result = QMessageBox 
>631	CallExpression	QMessageBox 
>632	ArgumentList	this
>633	Argument	tr ( \"Are you sure that you want to remove the shared folder \\"%1\\"?\" ) . arg ( selectedFolder )
>634	CallExpression	tr ( \"Are you sure that you want to remove the shared folder \\"%1\\"?\" ) . arg ( selectedFolder )
>635	ArgumentList	selectedFolder
>636	Argument	selectedFolder
>637	Identifier	selectedFolder
>638	Callee	tr ( \"Are you sure that you want to remove the shared folder \\"%1\\"?\" ) . arg
>639	MemberAccess	tr ( \"Are you sure that you want to remove the shared folder \\"%1\\"?\" ) . arg
>640	Identifier	arg
>641	CallExpression	tr ( \"Are you sure that you want to remove the shared folder \\"%1\\"?\" )
>642	ArgumentList	\"Are you sure that you want to remove the shared folder \\"%1\\"?\"
>643	Argument	\"Are you sure that you want to remove the shared folder \\"%1\\"?\"
>644	PrimaryExpression	\"Are you sure that you want to remove the shared folder \\"%1\\"?\"
>645	Callee	tr
>646	Identifier	tr
>647	Argument	tr ( \"Remove shared folder?\" )
>648	CallExpression	tr ( \"Remove shared folder?\" )
>649	ArgumentList	\"Remove shared folder?\"
>650	Argument	\"Remove shared folder?\"
>651	PrimaryExpression	\"Remove shared folder?\"
>652	Callee	tr
>653	Identifier	tr
>654	Argument	this
>655	Identifier	this
>656	Callee	QMessageBox 
>657	Identifier	QMessageBox 
>658	Identifier	result
>659	Statement	 
>660	IdentifierDeclStatement	 
>661	IdentifierDecl	selectedSecret = item -> data ( Qt 
>662	AssignmentExpr	selectedSecret = item -> data ( Qt 
>663	CallExpression	item -> data ( Qt 
>664	ArgumentList	 
>665	Callee	item -> data ( Qt 
>666	MemberAccess	item -> data ( Qt 
>667	Identifier	toString
>668	CallExpression	item -> data ( Qt 
>669	ArgumentList	Qt 
>670	Argument	Qt 
>671	Identifier	Qt 
>672	Callee	item -> data
>673	PtrMemberAccess	item -> data
>674	Identifier	data
>675	Identifier	item
>676	Identifier	selectedSecret
>677	Identifier	selectedSecret
>678	IdentifierDeclType	QString
>679	IdentifierDeclStatement	 
>680	IdentifierDecl	selectedFolder = item -> text ( )
>681	AssignmentExpr	selectedFolder = item -> text ( )
>682	CallExpression	item -> text ( )
>683	ArgumentList	 
>684	Callee	item -> text
>685	PtrMemberAccess	item -> text
>686	Identifier	text
>687	Identifier	item
>688	Identifier	selectedFolder
>689	Identifier	selectedFolder
>690	IdentifierDeclType	QString
>691	IfStatement	if ( ! item )
>692	ReturnStatement	 
>693	Condition	 
>694	UnaryOp	! item
>695	Identifier	item
>696	UnaryOperator	!
>697	IdentifierDeclStatement	 
>698	IdentifierDecl	* item = getSelectedRow ( foldersTable )
>699	AssignmentExpr	* item = getSelectedRow ( foldersTable )
>700	CallExpression	getSelectedRow ( foldersTable )
>701	ArgumentList	foldersTable
>702	Argument	foldersTable
>703	Identifier	foldersTable
>704	Callee	getSelectedRow
>705	Identifier	getSelectedRow
>706	Identifier	item
>707	Identifier	item
>708	IdentifierDeclType	QTableWidgetItem *
>709	IfStatement	if ( ! api || ! client )
>710	ReturnStatement	 
>711	Condition	 
>712	OrExpression	! api || ! client
>713	UnaryOp	! client
>714	Identifier	client
>715	UnaryOperator	!
>716	UnaryOp	! api
>717	Identifier	api
>718	UnaryOperator	!
>740	FunctionDef	SharedFoldersWidget 
>741	ParameterList	 
>742	ReturnType	void
>743	CompoundStatement	 
>744	ExpressionStatement	 
>745	CallExpression	showInfoDialog ( selectedSecret )
>746	ArgumentList	selectedSecret
>747	Argument	selectedSecret
>748	Identifier	selectedSecret
>749	Callee	showInfoDialog
>750	Identifier	showInfoDialog
>751	IfStatement	if ( selectedSecret . isEmpty ( ) )
>752	CompoundStatement	 
>753	ReturnStatement	 
>754	ExpressionStatement	 
>755	CallExpression	qCritical ( \"No secret associated with row!\" )
>756	ArgumentList	\"No secret associated with row!\"
>757	Argument	\"No secret associated with row!\"
>758	PrimaryExpression	\"No secret associated with row!\"
>759	Callee	qCritical
>760	Identifier	qCritical
>761	Condition	 
>762	CallExpression	selectedSecret . isEmpty ( )
>763	ArgumentList	 
>764	Callee	selectedSecret . isEmpty
>765	MemberAccess	selectedSecret . isEmpty
>766	Identifier	isEmpty
>767	Identifier	selectedSecret
>768	IdentifierDeclStatement	 
>769	IdentifierDecl	selectedSecret = item -> data ( Qt 
>770	AssignmentExpr	selectedSecret = item -> data ( Qt 
>771	CallExpression	item -> data ( Qt 
>772	ArgumentList	 
>773	Callee	item -> data ( Qt 
>774	MemberAccess	item -> data ( Qt 
>775	Identifier	toString
>776	CallExpression	item -> data ( Qt 
>777	ArgumentList	Qt 
>778	Argument	Qt 
>779	Identifier	Qt 
>780	Callee	item -> data
>781	PtrMemberAccess	item -> data
>782	Identifier	data
>783	Identifier	item
>784	Identifier	selectedSecret
>785	Identifier	selectedSecret
>786	IdentifierDeclType	QString
>787	IfStatement	if ( ! item )
>788	ReturnStatement	 
>789	Condition	 
>790	UnaryOp	! item
>791	Identifier	item
>792	UnaryOperator	!
>793	IdentifierDeclStatement	 
>794	IdentifierDecl	* item = getSelectedRow ( foldersTable )
>795	AssignmentExpr	* item = getSelectedRow ( foldersTable )
>796	CallExpression	getSelectedRow ( foldersTable )
>797	ArgumentList	foldersTable
>798	Argument	foldersTable
>799	Identifier	foldersTable
>800	Callee	getSelectedRow
>801	Identifier	getSelectedRow
>802	Identifier	item
>803	Identifier	item
>804	IdentifierDeclType	QTableWidgetItem *
>805	IfStatement	if ( ! api || ! client || ! client -> isClientReady ( ) )
>806	ReturnStatement	 
>807	Condition	 
>808	OrExpression	! api || ! client || ! client -> isClientReady ( )
>809	OrExpression	! client || ! client -> isClientReady ( )
>810	UnaryOp	! client -> isClientReady ( )
>811	CallExpression	client -> isClientReady ( )
>812	ArgumentList	 
>813	Callee	client -> isClientReady
>814	PtrMemberAccess	client -> isClientReady
>815	Identifier	isClientReady
>816	Identifier	client
>817	UnaryOperator	!
>818	UnaryOp	! client
>819	Identifier	client
>820	UnaryOperator	!
>821	UnaryOp	! api
>822	Identifier	api
>823	UnaryOperator	!
>840	FunctionDef	SharedFoldersWidget 
>841	ParameterList	 
>842	ReturnType	void
>843	CompoundStatement	 
>844	ExpressionStatement	 
>845	CallExpression	api -> getFolders ( )
>846	ArgumentList	 
>847	Callee	api -> getFolders
>848	PtrMemberAccess	api -> getFolders
>849	Identifier	getFolders
>850	Identifier	api
>851	IfStatement	if ( ! api || ! client || ! client -> isClientReady ( ) )
>852	ReturnStatement	 
>853	Condition	 
>854	OrExpression	! api || ! client || ! client -> isClientReady ( )
>855	OrExpression	! client || ! client -> isClientReady ( )
>856	UnaryOp	! client -> isClientReady ( )
>857	CallExpression	client -> isClientReady ( )
>858	ArgumentList	 
>859	Callee	client -> isClientReady
>860	PtrMemberAccess	client -> isClientReady
>861	Identifier	isClientReady
>862	Identifier	client
>863	UnaryOperator	!
>864	UnaryOp	! client
>865	Identifier	client
>866	UnaryOperator	!
>867	UnaryOp	! api
>868	Identifier	api
>869	UnaryOperator	!
>877	FunctionDef	SharedFoldersWidget 
>878	ParameterList	const QVector < BtsGetFoldersResult > result
>879	Parameter	 
>880	Identifier	result
>881	ParameterType	const QVector < BtsGetFoldersResult >
>882	ReturnType	void
>883	CompoundStatement	 
>884	CompoundStatement	 
>885	ExpressionStatement	 
>886	CallExpression	sizeItem -> setText ( tr ( \"%1 in %2%3\" ) . arg ( sizeString ) . arg ( tr ( \"%Ln file(s)\" , \"\" , folder . files ) ) \
>887	ArgumentList	tr ( \"%1 in %2%3\" ) . arg ( sizeString ) . arg ( tr ( \"%Ln file(s)\" , \"\" , folder . files ) ) . arg ( infoString )
>888	Argument	tr ( \"%1 in %2%3\" ) . arg ( sizeString ) . arg ( tr ( \"%Ln file(s)\" , \"\" , folder . files ) ) . arg ( infoString )
>889	CallExpression	tr ( \"%1 in %2%3\" ) . arg ( sizeString ) . arg ( tr ( \"%Ln file(s)\" , \"\" , folder . files ) ) . arg ( infoString )
>890	ArgumentList	infoString
>891	Argument	infoString
>892	Identifier	infoString
>893	Callee	tr ( \"%1 in %2%3\" ) . arg ( sizeString ) . arg ( tr ( \"%Ln file(s)\" , \"\" , folder . files ) ) . arg
>894	MemberAccess	tr ( \"%1 in %2%3\" ) . arg ( sizeString ) . arg ( tr ( \"%Ln file(s)\" , \"\" , folder . files ) ) . arg
>895	Identifier	arg
>896	CallExpression	tr ( \"%1 in %2%3\" ) . arg ( sizeString ) . arg ( tr ( \"%Ln file(s)\" , \"\" , folder . files ) )
>897	ArgumentList	tr ( \"%Ln file(s)\" , \"\" , folder . files )
>898	Argument	tr ( \"%Ln file(s)\" , \"\" , folder . files )
>899	CallExpression	tr ( \"%Ln file(s)\" , \"\" , folder . files )
>900	ArgumentList	\"%Ln file(s)\"
>901	Argument	folder . files
>902	MemberAccess	folder . files
>903	Identifier	files
>904	Identifier	folder
>905	Argument	\"\"
>906	PrimaryExpression	\"\"
>907	Argument	\"%Ln file(s)\"
>908	PrimaryExpression	\"%Ln file(s)\"
>909	Callee	tr
>910	Identifier	tr
>911	Callee	tr ( \"%1 in %2%3\" ) . arg ( sizeString ) . arg
>912	MemberAccess	tr ( \"%1 in %2%3\" ) . arg ( sizeString ) . arg
>913	Identifier	arg
>914	CallExpression	tr ( \"%1 in %2%3\" ) . arg ( sizeString )
>915	ArgumentList	sizeString
>916	Argument	sizeString
>917	Identifier	sizeString
>918	Callee	tr ( \"%1 in %2%3\" ) . arg
>919	MemberAccess	tr ( \"%1 in %2%3\" ) . arg
>920	Identifier	arg
>921	CallExpression	tr ( \"%1 in %2%3\" )
>922	ArgumentList	\"%1 in %2%3\"
>923	Argument	\"%1 in %2%3\"
>924	PrimaryExpression	\"%1 in %2%3\"
>925	Callee	tr
>926	Identifier	tr
>927	Callee	sizeItem -> setText
>928	PtrMemberAccess	sizeItem -> setText
>929	Identifier	setText
>930	Identifier	sizeItem
>931	ExpressionStatement	 
>932	CallExpression	pathItem -> setText ( dir )
>933	ArgumentList	dir
>934	Argument	dir
>935	Identifier	dir
>936	Callee	pathItem -> setText
>937	PtrMemberAccess	pathItem -> setText
>938	Identifier	setText
>939	Identifier	pathItem
>940	IfStatement	if ( folder . error != 0 )
>941	ExpressionStatement	 
>942	AssignmentExpr	infoString += tr ( \" (error)\" )
>943	CallExpression	tr ( \" (error)\" )
>944	ArgumentList	\" (error)\"
>945	Argument	\" (error)\"
>946	PrimaryExpression	\" (error)\"
>947	Callee	tr
>948	Identifier	tr
>949	Identifier	infoString
>950	Condition	 
>951	EqualityExpression	folder . error != 0
>952	PrimaryExpression	0
>953	MemberAccess	folder . error
>954	Identifier	error
>955	Identifier	folder
>956	IfStatement	if ( folder . indexing != 0 )
>957	ExpressionStatement	 
>958	AssignmentExpr	infoString += tr ( \" (indexing)\" )
>959	CallExpression	tr ( \" (indexing)\" )
>960	ArgumentList	\" (indexing)\"
>961	Argument	\" (indexing)\"
>962	PrimaryExpression	\" (indexing)\"
>963	Callee	tr
>964	Identifier	tr
>965	Identifier	infoString
>966	Condition	 
>967	EqualityExpression	folder . indexing != 0
>968	PrimaryExpression	0
>969	MemberAccess	folder . indexing
>970	Identifier	indexing
>971	Identifier	folder
>972	IdentifierDeclStatement	 
>973	IdentifierDecl	infoString = \"\"
>974	AssignmentExpr	infoString = \"\"
>975	PrimaryExpression	\"\"
>976	Identifier	infoString
>977	Identifier	infoString
>978	IdentifierDeclType	QString
>979	IdentifierDeclStatement	 
>980	IdentifierDecl	sizeString = byteCountToString ( folder . size , true , false )
>981	AssignmentExpr	sizeString = byteCountToString ( folder . size , true , false )
>982	CallExpression	byteCountToString ( folder . size , true , false )
>983	ArgumentList	folder . size
>984	Argument	false
>985	Identifier	false
>986	Argument	true
>987	Identifier	true
>988	Argument	folder . size
>989	MemberAccess	folder . size
>990	Identifier	size
>991	Identifier	folder
>992	Callee	byteCountToString
>993	Identifier	byteCountToString
>994	Identifier	sizeString
>995	Identifier	sizeString
>996	IdentifierDeclType	QString
>997	IfStatement	if ( dir . startsWith ( \"\\\\?\\\" ) )
>998	ExpressionStatement	 
>999	AssignmentExpr	dir = dir . mid ( 4 )
>1000	CallExpression	dir . mid ( 4 )
>1001	ArgumentList	4
>1002	Argument	4
>1003	PrimaryExpression	4
>1004	Callee	dir . mid
>1005	MemberAccess	dir . mid
>1006	Identifier	mid
>1007	Identifier	dir
>1008	Identifier	dir
>1009	Condition	 
>1010	CallExpression	dir . startsWith ( \"\\\\?\\\" )
>1011	ArgumentList	\"\\\\?\\\"
>1012	Argument	\"\\\\?\\\"
>1013	PrimaryExpression	\"\\\\?\\\"
>1014	Callee	dir . startsWith
>1015	MemberAccess	dir . startsWith
>1016	Identifier	startsWith
>1017	Identifier	dir
>1018	IdentifierDeclStatement	 
>1019	IdentifierDecl	dir = folder . dir
>1020	AssignmentExpr	dir = folder . dir
>1021	MemberAccess	folder . dir
>1022	Identifier	dir
>1023	Identifier	folder
>1024	Identifier	dir
>1025	Identifier	dir
>1026	IdentifierDeclType	QString
>1027	ExpressionStatement	 
>1028	CallExpression	sizeItem -> setData ( Qt 
>1029	ArgumentList	Qt 
>1030	Argument	folder . secret
>1031	MemberAccess	folder . secret
>1032	Identifier	secret
>1033	Identifier	folder
>1034	Argument	Qt 
>1035	Identifier	Qt 
>1036	Callee	sizeItem -> setData
>1037	PtrMemberAccess	sizeItem -> setData
>1038	Identifier	setData
>1039	Identifier	sizeItem
>1040	ExpressionStatement	 
>1041	CallExpression	pathItem -> setData ( Qt 
>1042	ArgumentList	Qt 
>1043	Argument	folder . secret
>1044	MemberAccess	folder . secret
>1045	Identifier	secret
>1046	Identifier	folder
>1047	Argument	Qt 
>1048	Identifier	Qt 
>1049	Callee	pathItem -> setData
>1050	PtrMemberAccess	pathItem -> setData
>1051	Identifier	setData
>1052	Identifier	pathItem
>1053	IfStatement	if ( ! sizeItem )
>1054	CompoundStatement	 
>1055	ExpressionStatement	 
>1056	CallExpression	foldersTable -> setItem ( row , 1 , sizeItem )
>1057	ArgumentList	row
>1058	Argument	sizeItem
>1059	Identifier	sizeItem
>1060	Argument	1
>1061	PrimaryExpression	1
>1062	Argument	row
>1063	Identifier	row
>1064	Callee	foldersTable -> setItem
>1065	PtrMemberAccess	foldersTable -> setItem
>1066	Identifier	setItem
>1067	Identifier	foldersTable
>1068	ExpressionStatement	 
>1069	AssignmentExpr	sizeItem = new QTableWidgetItem ( )
>1070	UnaryExpression	new QTableWidgetItem ( )
>1071	Identifier	sizeItem
>1072	Condition	 
>1073	UnaryOp	! sizeItem
>1074	Identifier	sizeItem
>1075	UnaryOperator	!
>1076	IfStatement	if ( ! pathItem )
>1077	CompoundStatement	 
>1078	ExpressionStatement	 
>1079	CallExpression	foldersTable -> setItem ( row , 0 , pathItem )
>1080	ArgumentList	row
>1081	Argument	pathItem
>1082	Identifier	pathItem
>1083	Argument	0
>1084	PrimaryExpression	0
>1085	Argument	row
>1086	Identifier	row
>1087	Callee	foldersTable -> setItem
>1088	PtrMemberAccess	foldersTable -> setItem
>1089	Identifier	setItem
>1090	Identifier	foldersTable
>1091	ExpressionStatement	 
>1092	AssignmentExpr	pathItem = new QTableWidgetItem ( )
>1093	UnaryExpression	new QTableWidgetItem ( )
>1094	Identifier	pathItem
>1095	Condition	 
>1096	UnaryOp	! pathItem
>1097	Identifier	pathItem
>1098	UnaryOperator	!
>1099	IdentifierDeclStatement	 
>1100	IdentifierDecl	* sizeItem = foldersTable -> item ( row , 1 )
>1101	AssignmentExpr	* sizeItem = foldersTable -> item ( row , 1 )
>1102	CallExpression	foldersTable -> item ( row , 1 )
>1103	ArgumentList	row
>1104	Argument	1
>1105	PrimaryExpression	1
>1106	Argument	row
>1107	Identifier	row
>1108	Callee	foldersTable -> item
>1109	PtrMemberAccess	foldersTable -> item
>1110	Identifier	item
>1111	Identifier	foldersTable
>1112	Identifier	sizeItem
>1113	Identifier	sizeItem
>1114	IdentifierDeclType	QTableWidgetItem *
>1115	IdentifierDeclStatement	 
>1116	IdentifierDecl	* pathItem = foldersTable -> item ( row , 0 )
>1117	AssignmentExpr	* pathItem = foldersTable -> item ( row , 0 )
>1118	CallExpression	foldersTable -> item ( row , 0 )
>1119	ArgumentList	row
>1120	Argument	0
>1121	PrimaryExpression	0
>1122	Argument	row
>1123	Identifier	row
>1124	Callee	foldersTable -> item
>1125	PtrMemberAccess	foldersTable -> item
>1126	Identifier	item
>1127	Identifier	foldersTable
>1128	Identifier	pathItem
>1129	Identifier	pathItem
>1130	IdentifierDeclType	QTableWidgetItem *
>1131	ExpressionStatement	 
>1132	AssignmentExpr	row += 1
>1133	PrimaryExpression	1
>1134	Identifier	row
>1135	Statement	 
>1136	Statement	 
>1137	Label	 
>1138	Identifier	folder
>1139	Statement	 
>1140	Statement	 
>1141	Statement	 
>1142	Statement	 
>1143	Statement	 
>1144	IdentifierDeclStatement	 
>1145	IdentifierDecl	row = - 1
>1146	AssignmentExpr	row = - 1
>1147	UnaryOp	- 1
>1148	PrimaryExpression	1
>1149	UnaryOperator	-
>1150	Identifier	row
>1151	Identifier	row
>1152	IdentifierDeclType	int
>1153	IfStatement	if ( foldersTable -> rowCount ( ) != result . size ( ) )
>1154	ExpressionStatement	 
>1155	CallExpression	foldersTable -> setRowCount ( result . size ( ) )
>1156	ArgumentList	result . size ( )
>1157	Argument	result . size ( )
>1158	CallExpression	result . size ( )
>1159	ArgumentList	 
>1160	Callee	result . size
>1161	MemberAccess	result . size
>1162	Identifier	size
>1163	Identifier	result
>1164	Callee	foldersTable -> setRowCount
>1165	PtrMemberAccess	foldersTable -> setRowCount
>1166	Identifier	setRowCount
>1167	Identifier	foldersTable
>1168	Condition	 
>1169	EqualityExpression	foldersTable -> rowCount ( ) != result . size ( )
>1170	CallExpression	result . size ( )
>1171	ArgumentList	 
>1172	Callee	result . size
>1173	MemberAccess	result . size
>1174	Identifier	size
>1175	Identifier	result
>1176	CallExpression	foldersTable -> rowCount ( )
>1177	ArgumentList	 
>1178	Callee	foldersTable -> rowCount
>1179	PtrMemberAccess	foldersTable -> rowCount
>1180	Identifier	rowCount
>1181	Identifier	foldersTable
>1182	IfStatement	if ( foldersTable -> hasFocus ( ) )
>1183	ReturnStatement	 
>1184	Condition	 
>1185	CallExpression	foldersTable -> hasFocus ( )
>1186	ArgumentList	 
>1187	Callee	foldersTable -> hasFocus
>1188	PtrMemberAccess	foldersTable -> hasFocus
>1189	Identifier	hasFocus
>1190	Identifier	foldersTable
>1224	FunctionDef	SharedFoldersWidget 
>1225	ParameterList	QTableWidgetItem * item
>1226	Parameter	 
>1227	Identifier	item
>1228	ParameterType	QTableWidgetItem *
>1229	ReturnType	void
>1230	CompoundStatement	 
>1231	ExpressionStatement	 
>1232	CallExpression	showInfoDialog ( selectedSecret )
>1233	ArgumentList	selectedSecret
>1234	Argument	selectedSecret
>1235	Identifier	selectedSecret
>1236	Callee	showInfoDialog
>1237	Identifier	showInfoDialog
>1238	IfStatement	if ( selectedSecret . isEmpty ( ) )
>1239	CompoundStatement	 
>1240	ReturnStatement	 
>1241	ExpressionStatement	 
>1242	CallExpression	qCritical ( \"No secret associated with row!\" )
>1243	ArgumentList	\"No secret associated with row!\"
>1244	Argument	\"No secret associated with row!\"
>1245	PrimaryExpression	\"No secret associated with row!\"
>1246	Callee	qCritical
>1247	Identifier	qCritical
>1248	Condition	 
>1249	CallExpression	selectedSecret . isEmpty ( )
>1250	ArgumentList	 
>1251	Callee	selectedSecret . isEmpty
>1252	MemberAccess	selectedSecret . isEmpty
>1253	Identifier	isEmpty
>1254	Identifier	selectedSecret
>1255	IdentifierDeclStatement	 
>1256	IdentifierDecl	selectedSecret = item -> data ( Qt 
>1257	AssignmentExpr	selectedSecret = item -> data ( Qt 
>1258	CallExpression	item -> data ( Qt 
>1259	ArgumentList	 
>1260	Callee	item -> data ( Qt 
>1261	MemberAccess	item -> data ( Qt 
>1262	Identifier	toString
>1263	CallExpression	item -> data ( Qt 
>1264	ArgumentList	Qt 
>1265	Argument	Qt 
>1266	Identifier	Qt 
>1267	Callee	item -> data
>1268	PtrMemberAccess	item -> data
>1269	Identifier	data
>1270	Identifier	item
>1271	Identifier	selectedSecret
>1272	Identifier	selectedSecret
>1273	IdentifierDeclType	QString
>1284	FunctionDef	SharedFoldersWidget 
>1285	ParameterList	const QString & secret
>1286	Parameter	 
>1287	Identifier	secret
>1288	ParameterType	const QString &
>1289	ReturnType	void
>1290	CompoundStatement	 
>1291	ExpressionStatement	 
>1292	CallExpression	dialog -> show ( )
>1293	ArgumentList	 
>1294	Callee	dialog -> show
>1295	PtrMemberAccess	dialog -> show
>1296	Identifier	show
>1297	Identifier	dialog
>1298	ExpressionStatement	 
>1299	CallExpression	dialog -> setAttribute ( Qt 
>1300	ArgumentList	Qt 
>1301	Argument	true
>1302	Identifier	true
>1303	Argument	Qt 
>1304	Identifier	Qt 
>1305	Callee	dialog -> setAttribute
>1306	PtrMemberAccess	dialog -> setAttribute
>1307	Identifier	setAttribute
>1308	Identifier	dialog
>1309	ExpressionStatement	 
>1310	CallExpression	dialog -> setModal ( true )
>1311	ArgumentList	true
>1312	Argument	true
>1313	Identifier	true
>1314	Callee	dialog -> setModal
>1315	PtrMemberAccess	dialog -> setModal
>1316	Identifier	setModal
>1317	Identifier	dialog
>1318	IdentifierDeclStatement	 
>1319	IdentifierDecl	* dialog = new FolderInfoDialog ( api , secret , this )
>1320	AssignmentExpr	* dialog = new FolderInfoDialog ( api , secret , this )
>1321	Expression	api , secret , this
>1322	Expression	secret , this
>1323	Identifier	this
>1324	Identifier	secret
>1325	Identifier	api
>1326	Identifier	dialog
>1327	Identifier	dialog
>1328	IdentifierDeclType	FolderInfoDialog *
<3=8,4
<4=5
<5=7,6
<8=187,173,166,157,150,121,92,63,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9
<34=35
<35=61,36
<36=59,49,47,37
<37=38
<38=45,39
<39=40
<40=41
<41=43,42
<43=44
<45=46
<47=48
<49=50
<50=57,51
<51=52
<52=53
<53=55,54
<55=56
<57=58
<59=60
<61=62
<63=64
<64=90,65
<65=88,78,76,66
<66=67
<67=74,68
<68=69
<69=70
<70=72,71
<72=73
<74=75
<76=77
<78=79
<79=86,80
<80=81
<81=82
<82=84,83
<84=85
<86=87
<88=89
<90=91
<92=93
<93=119,94
<94=117,107,105,95
<95=96
<96=103,97
<97=98
<98=99
<99=101,100
<101=102
<103=104
<105=106
<107=108
<108=115,109
<109=110
<110=111
<111=113,112
<113=114
<115=116
<117=118
<119=120
<121=122
<122=148,123
<123=146,136,134,124
<124=125
<125=132,126
<126=127
<127=128
<128=130,129
<130=131
<132=133
<134=135
<136=137
<137=144,138
<138=139
<139=140
<140=142,141
<142=143
<144=145
<146=147
<148=149
<150=151
<151=153,152
<153=154
<154=156,155
<157=158
<158=162,159
<159=160
<160=161
<162=163
<163=165,164
<166=167
<167=172,171,168
<168=170,169
<173=174
<174=178,175
<175=176
<176=177
<178=179
<179=181,180
<181=183,182
<183=184
<184=186,185
<187=188
<188=192,189
<189=190
<190=191
<192=193
<215=221,220,216
<216=217
<217=219,218
<221=385,381,375,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,313,312,311,282,253,222
<222=223
<223=251,224
<224=249,237,235,225
<225=226
<226=233,227
<227=228
<228=229
<229=231,230
<231=232
<233=234
<235=236
<237=238
<238=247,239
<239=240
<240=241
<241=245,242
<242=243
<243=244
<245=246
<247=248
<249=250
<251=252
<253=254
<254=280,255
<255=278,268,266,256
<256=257
<257=264,258
<258=259
<259=260
<260=262,261
<262=263
<264=265
<266=267
<268=269
<269=276,270
<270=271
<271=272
<272=274,273
<274=275
<276=277
<278=279
<280=281
<282=283
<283=309,284
<284=307,297,295,285
<285=286
<286=293,287
<287=288
<288=289
<289=291,290
<291=292
<293=294
<295=296
<297=298
<298=305,299
<299=300
<300=301
<301=303,302
<303=304
<305=306
<307=308
<309=310
<342=343
<343=373,344
<344=371,359,357,345
<345=346
<346=355,347
<347=348
<348=349
<349=353,350
<350=351
<351=352
<353=354
<355=356
<357=358
<359=360
<360=369,361
<361=362
<362=363
<363=367,364
<364=365
<365=366
<367=368
<369=370
<371=372
<373=374
<375=376
<376=380,377
<377=379,378
<381=382
<382=384,383
<385=407,386
<386=398,391,387
<387=388
<388=390,389
<391=392
<392=394,393
<394=395
<395=397,396
<398=399
<399=403,400
<400=401
<401=402
<403=404
<404=406,405
<407=408
<425=428,427,426
<428=496,489,478,464,450,429
<429=430
<430=446,431
<431=439,432
<432=433
<433=435,434
<435=436
<436=438,437
<439=440
<440=442,441
<442=443
<443=445,444
<446=447
<447=449,448
<450=452,451
<452=453
<453=455,454
<455=456
<456=458,457
<458=460,459
<460=461
<461=463,462
<464=466,465
<466=467
<467=469,468
<469=470
<470=472,471
<472=474,473
<474=475
<475=477,476
<478=480,479
<480=481
<481=483,482
<483=485,484
<485=486
<486=488,487
<489=490
<490=495,494,491
<491=493,492
<496=498,497
<498=499
<499=503,500
<500=502,501
<503=505,504
<518=524,523,519
<519=520
<520=522,521
<524=584,572,560,548,536,525
<525=526
<526=532,527
<527=530,528
<528=529
<530=531
<532=533
<533=535,534
<536=537
<537=547,546,538
<538=545,539
<539=541,540
<541=542
<542=544,543
<548=551,549
<549=550
<551=552
<552=554,553
<554=556,555
<556=557
<557=559,558
<560=561
<561=571,570,562
<562=569,563
<563=565,564
<565=566
<566=568,567
<572=575,573
<573=574
<575=576
<576=578,577
<578=580,579
<580=581
<581=583,582
<584=585
<585=595,594,586
<586=593,587
<587=589,588
<589=590
<590=592,591
<610=613,612,611
<613=709,697,691,679,660,659,629,623,614
<614=615
<615=619,616
<616=617
<617=618
<619=620
<620=622,621
<623=625,624
<625=626
<626=628,627
<629=630
<630=658,631
<631=656,632
<632=654,647,633
<633=634
<634=638,635
<635=636
<636=637
<638=639
<639=641,640
<641=645,642
<642=643
<643=644
<645=646
<647=648
<648=652,649
<649=650
<650=651
<652=653
<654=655
<656=657
<660=661
<661=678,677,662
<662=676,663
<663=665,664
<665=666
<666=668,667
<668=672,669
<669=670
<670=671
<672=673
<673=675,674
<679=680
<680=690,689,681
<681=688,682
<682=684,683
<684=685
<685=687,686
<691=693,692
<693=694
<694=696,695
<697=698
<698=708,707,699
<699=706,700
<700=704,701
<701=702
<702=703
<704=705
<709=711,710
<711=712
<712=716,713
<713=715,714
<716=718,717
<740=743,742,741
<743=805,793,787,768,751,744
<744=745
<745=749,746
<746=747
<747=748
<749=750
<751=761,752
<752=754,753
<754=755
<755=759,756
<756=757
<757=758
<759=760
<761=762
<762=764,763
<764=765
<765=767,766
<768=769
<769=786,785,770
<770=784,771
<771=773,772
<773=774
<774=776,775
<776=780,777
<777=778
<778=779
<780=781
<781=783,782
<787=789,788
<789=790
<790=792,791
<793=794
<794=804,803,795
<795=802,796
<796=800,797
<797=798
<798=799
<800=801
<805=807,806
<807=808
<808=821,809
<809=818,810
<810=817,811
<811=813,812
<813=814
<814=816,815
<818=820,819
<821=823,822
<840=843,842,841
<843=851,844
<844=845
<845=847,846
<847=848
<848=850,849
<851=853,852
<853=854
<854=867,855
<855=864,856
<856=863,857
<857=859,858
<859=860
<860=862,861
<864=866,865
<867=869,868
<877=883,882,878
<878=879
<879=881,880
<883=1182,1153,1144,1143,1142,1141,1140,1139,1137,1136,1135,884
<884=1131,1115,1099,1076,1053,1040,1027,1018,997,979,972,956,940,931,885
<885=886
<886=927,887
<887=888
<888=889
<889=893,890
<890=891
<891=892
<893=894
<894=896,895
<896=911,897
<897=898
<898=899
<899=909,900
<900=907,905,901
<901=902
<902=904,903
<905=906
<907=908
<909=910
<911=912
<912=914,913
<914=918,915
<915=916
<916=917
<918=919
<919=921,920
<921=925,922
<922=923
<923=924
<925=926
<927=928
<928=930,929
<931=932
<932=936,933
<933=934
<934=935
<936=937
<937=939,938
<940=950,941
<941=942
<942=949,943
<943=947,944
<944=945
<945=946
<947=948
<950=951
<951=953,952
<953=955,954
<956=966,957
<957=958
<958=965,959
<959=963,960
<960=961
<961=962
<963=964
<966=967
<967=969,968
<969=971,970
<972=973
<973=978,977,974
<974=976,975
<979=980
<980=996,995,981
<981=994,982
<982=992,983
<983=988,986,984
<984=985
<986=987
<988=989
<989=991,990
<992=993
<997=1009,998
<998=999
<999=1008,1000
<1000=1004,1001
<1001=1002
<1002=1003
<1004=1005
<1005=1007,1006
<1009=1010
<1010=1014,1011
<1011=1012
<1012=1013
<1014=1015
<1015=1017,1016
<1018=1019
<1019=1026,1025,1020
<1020=1024,1021
<1021=1023,1022
<1027=1028
<1028=1036,1029
<1029=1034,1030
<1030=1031
<1031=1033,1032
<1034=1035
<1036=1037
<1037=1039,1038
<1040=1041
<1041=1049,1042
<1042=1047,1043
<1043=1044
<1044=1046,1045
<1047=1048
<1049=1050
<1050=1052,1051
<1053=1072,1054
<1054=1068,1055
<1055=1056
<1056=1064,1057
<1057=1062,1060,1058
<1058=1059
<1060=1061
<1062=1063
<1064=1065
<1065=1067,1066
<1068=1069
<1069=1071,1070
<1072=1073
<1073=1075,1074
<1076=1095,1077
<1077=1091,1078
<1078=1079
<1079=1087,1080
<1080=1085,1083,1081
<1081=1082
<1083=1084
<1085=1086
<1087=1088
<1088=1090,1089
<1091=1092
<1092=1094,1093
<1095=1096
<1096=1098,1097
<1099=1100
<1100=1114,1113,1101
<1101=1112,1102
<1102=1108,1103
<1103=1106,1104
<1104=1105
<1106=1107
<1108=1109
<1109=1111,1110
<1115=1116
<1116=1130,1129,1117
<1117=1128,1118
<1118=1124,1119
<1119=1122,1120
<1120=1121
<1122=1123
<1124=1125
<1125=1127,1126
<1131=1132
<1132=1134,1133
<1137=1138
<1144=1145
<1145=1152,1151,1146
<1146=1150,1147
<1147=1149,1148
<1153=1168,1154
<1154=1155
<1155=1164,1156
<1156=1157
<1157=1158
<1158=1160,1159
<1160=1161
<1161=1163,1162
<1164=1165
<1165=1167,1166
<1168=1169
<1169=1176,1170
<1170=1172,1171
<1172=1173
<1173=1175,1174
<1176=1178,1177
<1178=1179
<1179=1181,1180
<1182=1184,1183
<1184=1185
<1185=1187,1186
<1187=1188
<1188=1190,1189
<1224=1230,1229,1225
<1225=1226
<1226=1228,1227
<1230=1255,1238,1231
<1231=1232
<1232=1236,1233
<1233=1234
<1234=1235
<1236=1237
<1238=1248,1239
<1239=1241,1240
<1241=1242
<1242=1246,1243
<1243=1244
<1244=1245
<1246=1247
<1248=1249
<1249=1251,1250
<1251=1252
<1252=1254,1253
<1255=1256
<1256=1273,1272,1257
<1257=1271,1258
<1258=1260,1259
<1260=1261
<1261=1263,1262
<1263=1267,1264
<1264=1265
<1265=1266
<1267=1268
<1268=1270,1269
<1284=1290,1289,1285
<1285=1286
<1286=1288,1287
<1290=1318,1309,1298,1291
<1291=1292
<1292=1294,1293
<1294=1295
<1295=1297,1296
<1298=1299
<1299=1305,1300
<1300=1303,1301
<1301=1302
<1303=1304
<1305=1306
<1306=1308,1307
<1309=1310
<1310=1314,1311
<1311=1312
<1312=1313
<1314=1315
<1315=1317,1316
<1318=1319
<1319=1328,1327,1320
<1320=1326,1321
<1321=1325,1322
<1322=1324,1323
