>3	FunctionDef	BruteForceSearch 
>4	ParameterList	int n , v3_t * pts
>5	Parameter	 
>6	Identifier	pts
>7	ParameterType	v3_t *
>8	Parameter	 
>9	Identifier	n
>10	ParameterType	int
>11	CompoundStatement	 
>12	ForStatement	for ( int i = 0 ; i < n ; i ++ )
>13	ExpressionStatement	 
>14	AssignmentExpr	m_points [ i ] = pts [ i ]
>15	ArrayIndexing	pts [ i ]
>16	Identifier	i
>17	Identifier	pts
>18	ArrayIndexing	m_points [ i ]
>19	Identifier	i
>20	Identifier	m_points
>21	IncDecOp	 
>22	IncDec	++
>23	Identifier	i
>24	Condition	 
>25	RelationalExpression	i < n
>26	Identifier	n
>27	Identifier	i
>28	ForInit	 
>29	IdentifierDeclStatement	int i = 0 ;
>30	IdentifierDecl	i = 0
>31	AssignmentExpr	i = 0
>32	PrimaryExpression	0
>33	Identifier	i
>34	Identifier	i
>35	IdentifierDeclType	int
>36	ExpressionStatement	 
>37	AssignmentExpr	m_points = new v3_t [ n ]
>38	Identifier	n
>39	Identifier	m_points
>40	ExpressionStatement	 
>41	AssignmentExpr	m_num_points = n
>42	Identifier	n
>43	Identifier	m_num_points
>55	FunctionDef	BruteForceSearch 
>56	ParameterList	v3_t query , int num_points , int * idxs , double * dists
>57	Parameter	 
>58	Identifier	dists
>59	ParameterType	double *
>60	Parameter	 
>61	Identifier	idxs
>62	ParameterType	int *
>63	Parameter	 
>64	Identifier	num_points
>65	ParameterType	int
>66	Parameter	 
>67	Identifier	query
>68	ParameterType	v3_t
>69	ReturnType	void
>70	CompoundStatement	 
>71	ExpressionStatement	 
>72	Identifier	perm
>73	Statement	 
>74	Statement	 
>75	Statement	 
>76	ExpressionStatement	 
>77	Identifier	dists_all
>78	Statement	 
>79	Statement	 
>80	Statement	 
>81	ForStatement	for ( int i = 0 ; i < num_points ; i ++ )
>82	CompoundStatement	 
>83	ExpressionStatement	 
>84	AssignmentExpr	dists [ i ] = dists_all [ i ]
>85	ArrayIndexing	dists_all [ i ]
>86	Identifier	i
>87	Identifier	dists_all
>88	ArrayIndexing	dists [ i ]
>89	Identifier	i
>90	Identifier	dists
>91	ExpressionStatement	 
>92	AssignmentExpr	idxs [ i ] = perm [ i ]
>93	ArrayIndexing	perm [ i ]
>94	Identifier	i
>95	Identifier	perm
>96	ArrayIndexing	idxs [ i ]
>97	Identifier	i
>98	Identifier	idxs
>99	IncDecOp	 
>100	IncDec	++
>101	Identifier	i
>102	Condition	 
>103	RelationalExpression	i < num_points
>104	Identifier	num_points
>105	Identifier	i
>106	ForInit	 
>107	IdentifierDeclStatement	int i = 0 ;
>108	IdentifierDecl	i = 0
>109	AssignmentExpr	i = 0
>110	PrimaryExpression	0
>111	Identifier	i
>112	Identifier	i
>113	IdentifierDeclType	int
>114	ExpressionStatement	 
>115	CallExpression	qsort_perm ( m_num_points , dists_all , perm )
>116	ArgumentList	m_num_points
>117	Argument	perm
>118	Identifier	perm
>119	Argument	dists_all
>120	Identifier	dists_all
>121	Argument	m_num_points
>122	Identifier	m_num_points
>123	Callee	qsort_perm
>124	Identifier	qsort_perm
>125	ExpressionStatement	 
>126	CallExpression	qsort_ascending ( )
>127	ArgumentList	 
>128	Callee	qsort_ascending
>129	Identifier	qsort_ascending
>130	IdentifierDeclStatement	 
>131	IdentifierDecl	* perm = new int [ m_num_points ]
>132	AssignmentExpr	* perm = new int [ m_num_points ]
>133	Identifier	m_num_points
>134	Identifier	m_num_points
>135	Identifier	perm
>136	IdentifierDeclType	int *
>137	ForStatement	for ( int i = 0 ; i < m_num_points ; i ++ )
>138	CompoundStatement	 
>139	ExpressionStatement	 
>140	AssignmentExpr	dists_all [ i ] = v3_magsq ( v3_sub ( query , m_points [ i ] ) )
>141	CallExpression	v3_magsq ( v3_sub ( query , m_points [ i ] ) )
>142	ArgumentList	v3_sub ( query , m_points [ i ] )
>143	Argument	v3_sub ( query , m_points [ i ] )
>144	CallExpression	v3_sub ( query , m_points [ i ] )
>145	ArgumentList	query
>146	Argument	m_points [ i ]
>147	ArrayIndexing	m_points [ i ]
>148	Identifier	i
>149	Identifier	m_points
>150	Argument	query
>151	Identifier	query
>152	Callee	v3_sub
>153	Identifier	v3_sub
>154	Callee	v3_magsq
>155	Identifier	v3_magsq
>156	ArrayIndexing	dists_all [ i ]
>157	Identifier	i
>158	Identifier	dists_all
>159	IncDecOp	 
>160	IncDec	++
>161	Identifier	i
>162	Condition	 
>163	RelationalExpression	i < m_num_points
>164	Identifier	m_num_points
>165	Identifier	i
>166	ForInit	 
>167	IdentifierDeclStatement	int i = 0 ;
>168	IdentifierDecl	i = 0
>169	AssignmentExpr	i = 0
>170	PrimaryExpression	0
>171	Identifier	i
>172	Identifier	i
>173	IdentifierDeclType	int
>174	IdentifierDeclStatement	 
>175	IdentifierDecl	* dists_all = new double [ m_num_points ]
>176	AssignmentExpr	* dists_all = new double [ m_num_points ]
>177	Identifier	m_num_points
>178	Identifier	m_num_points
>179	Identifier	dists_all
>180	IdentifierDeclType	double *
<3=11,4
<4=8,5
<5=7,6
<8=10,9
<11=40,36,12
<12=28,24,21,13
<13=14
<14=18,15
<15=17,16
<18=20,19
<21=23,22
<24=25
<25=27,26
<28=29
<29=30
<30=35,34,31
<31=33,32
<36=37
<37=39,38
<40=41
<41=43,42
<55=70,69,56
<56=66,63,60,57
<57=59,58
<60=62,61
<63=65,64
<66=68,67
<70=174,137,130,125,114,81,80,79,78,76,75,74,73,71
<71=72
<76=77
<81=106,102,99,82
<82=91,83
<83=84
<84=88,85
<85=87,86
<88=90,89
<91=92
<92=96,93
<93=95,94
<96=98,97
<99=101,100
<102=103
<103=105,104
<106=107
<107=108
<108=113,112,109
<109=111,110
<114=115
<115=123,116
<116=121,119,117
<117=118
<119=120
<121=122
<123=124
<125=126
<126=128,127
<128=129
<130=131
<131=136,135,132
<132=134,133
<137=166,162,159,138
<138=139
<139=140
<140=156,141
<141=154,142
<142=143
<143=144
<144=152,145
<145=150,146
<146=147
<147=149,148
<150=151
<152=153
<154=155
<156=158,157
<159=161,160
<162=163
<163=165,164
<166=167
<167=168
<168=173,172,169
<169=171,170
<174=175
<175=180,179,176
<176=178,177
