>10	FunctionDef	max (int a , int b)
>11	ParameterList	int a , int b
>12	Parameter	 
>13	Identifier	b
>14	ParameterType	int
>15	Parameter	 
>16	Identifier	a
>17	ParameterType	int
>18	ReturnType	inline int
>19	CompoundStatement	 
>20	ReturnStatement	 
>21	ConditionalExpression	a > b ? a 
>22	Identifier	b
>23	Identifier	a
>24	Condition	a > b
>25	RelationalExpression	a > b
>26	Identifier	b
>27	Identifier	a
>33	FunctionDef	IsSquare (int row , int col , int size)
>34	ParameterList	int row , int col , int size
>35	Parameter	 
>36	Identifier	size
>37	ParameterType	int
>38	Parameter	 
>39	Identifier	col
>40	ParameterType	int
>41	Parameter	 
>42	Identifier	row
>43	ParameterType	int
>44	ReturnType	bool
>45	CompoundStatement	 
>46	ReturnStatement	 
>47	Identifier	true
>48	ForStatement	for ( int i = 0 ; i < size ; ++ i )
>49	CompoundStatement	 
>50	IfStatement	if ( matrix [ row + i ] [ col + size - 1 ] == 1 )
>51	ReturnStatement	 
>52	Identifier	false
>53	Condition	 
>54	EqualityExpression	matrix [ row + i ] [ col + size - 1 ] == 1
>55	PrimaryExpression	1
>56	ArrayIndexing	matrix [ row + i ] [ col + size - 1 ]
>57	AdditiveExpression	col + size - 1
>58	AdditiveExpression	size - 1
>59	PrimaryExpression	1
>60	Identifier	size
>61	Identifier	col
>62	ArrayIndexing	matrix [ row + i ]
>63	AdditiveExpression	row + i
>64	Identifier	i
>65	Identifier	row
>66	Identifier	matrix
>67	IfStatement	if ( matrix [ row + i ] [ col ] == 1 )
>68	ReturnStatement	 
>69	Identifier	false
>70	Condition	 
>71	EqualityExpression	matrix [ row + i ] [ col ] == 1
>72	PrimaryExpression	1
>73	ArrayIndexing	matrix [ row + i ] [ col ]
>74	Identifier	col
>75	ArrayIndexing	matrix [ row + i ]
>76	AdditiveExpression	row + i
>77	Identifier	i
>78	Identifier	row
>79	Identifier	matrix
>80	IfStatement	if ( matrix [ row + size - 1 ] [ col + i ] == 1 )
>81	ReturnStatement	 
>82	Identifier	false
>83	Condition	 
>84	EqualityExpression	matrix [ row + size - 1 ] [ col + i ] == 1
>85	PrimaryExpression	1
>86	ArrayIndexing	matrix [ row + size - 1 ] [ col + i ]
>87	AdditiveExpression	col + i
>88	Identifier	i
>89	Identifier	col
>90	ArrayIndexing	matrix [ row + size - 1 ]
>91	AdditiveExpression	row + size - 1
>92	AdditiveExpression	size - 1
>93	PrimaryExpression	1
>94	Identifier	size
>95	Identifier	row
>96	Identifier	matrix
>97	IfStatement	if ( matrix [ row ] [ col + i ] == 1 )
>98	ReturnStatement	 
>99	Identifier	false
>100	Condition	 
>101	EqualityExpression	matrix [ row ] [ col + i ] == 1
>102	PrimaryExpression	1
>103	ArrayIndexing	matrix [ row ] [ col + i ]
>104	AdditiveExpression	col + i
>105	Identifier	i
>106	Identifier	col
>107	ArrayIndexing	matrix [ row ]
>108	Identifier	row
>109	Identifier	matrix
>110	UnaryExpression	 
>111	Identifier	i
>112	IncDec	++
>113	Condition	 
>114	RelationalExpression	i < size
>115	Identifier	size
>116	Identifier	i
>117	ForInit	 
>118	IdentifierDeclStatement	int i = 0 ;
>119	IdentifierDecl	i = 0
>120	AssignmentExpr	i = 0
>121	PrimaryExpression	0
>122	Identifier	i
>123	Identifier	i
>124	IdentifierDeclType	int
>144	FunctionDef	FindSubSquare (int n)
>145	ParameterList	int n
>146	Parameter	 
>147	Identifier	n
>148	ParameterType	int
>149	ReturnType	SubSquare
>150	CompoundStatement	 
>151	ReturnStatement	 
>152	Identifier	sq
>153	WhileStatement	while ( n - col > max_size )
>154	CompoundStatement	 
>155	ExpressionStatement	 
>156	UnaryExpression	++ col
>157	Identifier	col
>158	IncDec	++
>159	ForStatement	for ( int row = 0 ; row < n ; ++ row )
>160	CompoundStatement	 
>161	WhileStatement	while ( size > max_size )
>162	CompoundStatement	 
>163	ExpressionStatement	 
>164	UnaryExpression	-- size
>165	Identifier	size
>166	IncDec	--
>167	IfStatement	if ( IsSquare ( row , col , size ) )
>168	CompoundStatement	 
>169	BreakStatement	 
>170	ExpressionStatement	 
>171	AssignmentExpr	sq . size = size
>172	Identifier	size
>173	MemberAccess	sq . size
>174	Identifier	size
>175	Identifier	sq
>176	ExpressionStatement	 
>177	AssignmentExpr	sq . col = col
>178	Identifier	col
>179	MemberAccess	sq . col
>180	Identifier	col
>181	Identifier	sq
>182	ExpressionStatement	 
>183	AssignmentExpr	sq . row = row
>184	Identifier	row
>185	MemberAccess	sq . row
>186	Identifier	row
>187	Identifier	sq
>188	ExpressionStatement	 
>189	AssignmentExpr	max_size = size
>190	Identifier	size
>191	Identifier	max_size
>192	Condition	 
>193	CallExpression	IsSquare ( row , col , size )
>194	ArgumentList	row
>195	Argument	size
>196	Identifier	size
>197	Argument	col
>198	Identifier	col
>199	Argument	row
>200	Identifier	row
>201	Callee	IsSquare
>202	Identifier	IsSquare
>203	Condition	 
>204	RelationalExpression	size > max_size
>205	Identifier	max_size
>206	Identifier	size
>207	IdentifierDeclStatement	 
>208	IdentifierDecl	size = n - max ( row , col )
>209	AssignmentExpr	size = n - max ( row , col )
>210	AdditiveExpression	n - max ( row , col )
>211	CallExpression	max ( row , col )
>212	ArgumentList	row
>213	Argument	col
>214	Identifier	col
>215	Argument	row
>216	Identifier	row
>217	Callee	max
>218	Identifier	max
>219	Identifier	n
>220	Identifier	size
>221	Identifier	size
>222	IdentifierDeclType	int
>223	UnaryExpression	 
>224	Identifier	row
>225	IncDec	++
>226	Condition	 
>227	RelationalExpression	row < n
>228	Identifier	n
>229	Identifier	row
>230	ForInit	 
>231	IdentifierDeclStatement	int row = 0 ;
>232	IdentifierDecl	row = 0
>233	AssignmentExpr	row = 0
>234	PrimaryExpression	0
>235	Identifier	row
>236	Identifier	row
>237	IdentifierDeclType	int
>238	Condition	 
>239	RelationalExpression	n - col > max_size
>240	Identifier	max_size
>241	AdditiveExpression	n - col
>242	Identifier	col
>243	Identifier	n
>244	IdentifierDeclStatement	 
>245	IdentifierDecl	sq
>246	Identifier	sq
>247	IdentifierDeclType	SubSquare
>248	IdentifierDeclStatement	 
>249	IdentifierDecl	col = 0
>250	AssignmentExpr	col = 0
>251	PrimaryExpression	0
>252	Identifier	col
>253	Identifier	col
>254	IdentifierDeclType	int
>255	IdentifierDeclStatement	 
>256	IdentifierDecl	max_size = 0
>257	AssignmentExpr	max_size = 0
>258	PrimaryExpression	0
>259	Identifier	max_size
>260	Identifier	max_size
>261	IdentifierDeclType	int
>276	FunctionDef	main ()
>277	ParameterList	 
>278	ReturnType	int
>279	CompoundStatement	 
>280	ReturnStatement	 
>281	PrimaryExpression	0
>282	ExpressionStatement	 
>283	CallExpression	fclose ( stdin )
>284	ArgumentList	stdin
>285	Argument	stdin
>286	Identifier	stdin
>287	Callee	fclose
>288	Identifier	fclose
>289	ExpressionStatement	 
>290	ShiftExpression	cout << \"right
>291	ShiftExpression	\"right
>292	ShiftExpression	sq . col + sq . size - 1 << endl
>293	Identifier	endl
>294	AdditiveExpression	sq . col + sq . size - 1
>295	AdditiveExpression	sq . size - 1
>296	PrimaryExpression	1
>297	MemberAccess	sq . size
>298	Identifier	size
>299	Identifier	sq
>300	MemberAccess	sq . col
>301	Identifier	col
>302	Identifier	sq
>303	PrimaryExpression	\"right
>304	Identifier	cout
>305	ExpressionStatement	 
>306	ShiftExpression	cout << \"left
>307	ShiftExpression	\"left
>308	ShiftExpression	sq . col << endl
>309	Identifier	endl
>310	MemberAccess	sq . col
>311	Identifier	col
>312	Identifier	sq
>313	PrimaryExpression	\"left
>314	Identifier	cout
>315	ExpressionStatement	 
>316	ShiftExpression	cout << \"bottom
>317	ShiftExpression	\"bottom
>318	ShiftExpression	sq . row + sq . size - 1 << endl
>319	Identifier	endl
>320	AdditiveExpression	sq . row + sq . size - 1
>321	AdditiveExpression	sq . size - 1
>322	PrimaryExpression	1
>323	MemberAccess	sq . size
>324	Identifier	size
>325	Identifier	sq
>326	MemberAccess	sq . row
>327	Identifier	row
>328	Identifier	sq
>329	PrimaryExpression	\"bottom
>330	Identifier	cout
>331	ExpressionStatement	 
>332	ShiftExpression	cout << \"top
>333	ShiftExpression	\"top
>334	ShiftExpression	sq . row << endl
>335	Identifier	endl
>336	MemberAccess	sq . row
>337	Identifier	row
>338	Identifier	sq
>339	PrimaryExpression	\"top
>340	Identifier	cout
>341	IdentifierDeclStatement	 
>342	IdentifierDecl	sq = FindSubSquare ( n )
>343	AssignmentExpr	sq = FindSubSquare ( n )
>344	CallExpression	FindSubSquare ( n )
>345	ArgumentList	n
>346	Argument	n
>347	Identifier	n
>348	Callee	FindSubSquare
>349	Identifier	FindSubSquare
>350	Identifier	sq
>351	Identifier	sq
>352	IdentifierDeclType	SubSquare
>353	ForStatement	for ( int i = 0 ; i < n ; ++ i )
>354	ForStatement	for ( int j = 0 ; j < n ; ++ j )
>355	ExpressionStatement	 
>356	ShiftExpression	cin >> matrix [ i ] [ j ]
>357	ArrayIndexing	matrix [ i ] [ j ]
>358	Identifier	j
>359	ArrayIndexing	matrix [ i ]
>360	Identifier	i
>361	Identifier	matrix
>362	Identifier	cin
>363	UnaryExpression	 
>364	Identifier	j
>365	IncDec	++
>366	Condition	 
>367	RelationalExpression	j < n
>368	Identifier	n
>369	Identifier	j
>370	ForInit	 
>371	IdentifierDeclStatement	int j = 0 ;
>372	IdentifierDecl	j = 0
>373	AssignmentExpr	j = 0
>374	PrimaryExpression	0
>375	Identifier	j
>376	Identifier	j
>377	IdentifierDeclType	int
>378	UnaryExpression	 
>379	Identifier	i
>380	IncDec	++
>381	Condition	 
>382	RelationalExpression	i < n
>383	Identifier	n
>384	Identifier	i
>385	ForInit	 
>386	IdentifierDeclStatement	int i = 0 ;
>387	IdentifierDecl	i = 0
>388	AssignmentExpr	i = 0
>389	PrimaryExpression	0
>390	Identifier	i
>391	Identifier	i
>392	IdentifierDeclType	int
>393	ExpressionStatement	 
>394	ShiftExpression	cin >> n
>395	Identifier	n
>396	Identifier	cin
>397	IdentifierDeclStatement	 
>398	IdentifierDecl	n
>399	Identifier	n
>400	IdentifierDeclType	int
>401	ExpressionStatement	 
>402	CallExpression	freopen ( \"20.11.in\" , \"r\" , stdin )
>403	ArgumentList	\"20.11.in\"
>404	Argument	stdin
>405	Identifier	stdin
>406	Argument	\"r\"
>407	PrimaryExpression	\"r\"
>408	Argument	\"20.11.in\"
>409	PrimaryExpression	\"20.11.in\"
>410	Callee	freopen
>411	Identifier	freopen
<10=19,18,11
<11=15,12
<12=14,13
<15=17,16
<19=20
<20=21
<21=24,23,22
<24=25
<25=27,26
<33=45,44,34
<34=41,38,35
<35=37,36
<38=40,39
<41=43,42
<45=48,46
<46=47
<48=117,113,110,49
<49=97,80,67,50
<50=53,51
<51=52
<53=54
<54=56,55
<56=62,57
<57=61,58
<58=60,59
<62=66,63
<63=65,64
<67=70,68
<68=69
<70=71
<71=73,72
<73=75,74
<75=79,76
<76=78,77
<80=83,81
<81=82
<83=84
<84=86,85
<86=90,87
<87=89,88
<90=96,91
<91=95,92
<92=94,93
<97=100,98
<98=99
<100=101
<101=103,102
<103=107,104
<104=106,105
<107=109,108
<110=112,111
<113=114
<114=116,115
<117=118
<118=119
<119=124,123,120
<120=122,121
<144=150,149,145
<145=146
<146=148,147
<150=255,248,244,153,151
<151=152
<153=238,154
<154=159,155
<155=156
<156=158,157
<159=230,226,223,160
<160=207,161
<161=203,162
<162=167,163
<163=164
<164=166,165
<167=192,168
<168=188,182,176,170,169
<170=171
<171=173,172
<173=175,174
<176=177
<177=179,178
<179=181,180
<182=183
<183=185,184
<185=187,186
<188=189
<189=191,190
<192=193
<193=201,194
<194=199,197,195
<195=196
<197=198
<199=200
<201=202
<203=204
<204=206,205
<207=208
<208=222,221,209
<209=220,210
<210=219,211
<211=217,212
<212=215,213
<213=214
<215=216
<217=218
<223=225,224
<226=227
<227=229,228
<230=231
<231=232
<232=237,236,233
<233=235,234
<238=239
<239=241,240
<241=243,242
<244=245
<245=247,246
<248=249
<249=254,253,250
<250=252,251
<255=256
<256=261,260,257
<257=259,258
<276=279,278,277
<279=401,397,393,353,341,331,315,305,289,282,280
<280=281
<282=283
<283=287,284
<284=285
<285=286
<287=288
<289=290
<290=304,291
<291=303,292
<292=294,293
<294=300,295
<295=297,296
<297=299,298
<300=302,301
<305=306
<306=314,307
<307=313,308
<308=310,309
<310=312,311
<315=316
<316=330,317
<317=329,318
<318=320,319
<320=326,321
<321=323,322
<323=325,324
<326=328,327
<331=332
<332=340,333
<333=339,334
<334=336,335
<336=338,337
<341=342
<342=352,351,343
<343=350,344
<344=348,345
<345=346
<346=347
<348=349
<353=385,381,378,354
<354=370,366,363,355
<355=356
<356=362,357
<357=359,358
<359=361,360
<363=365,364
<366=367
<367=369,368
<370=371
<371=372
<372=377,376,373
<373=375,374
<378=380,379
<381=382
<382=384,383
<385=386
<386=387
<387=392,391,388
<388=390,389
<393=394
<394=396,395
<397=398
<398=400,399
<401=402
<402=410,403
<403=408,406,404
<404=405
<406=407
<408=409
<410=411
