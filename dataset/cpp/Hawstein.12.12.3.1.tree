>3	FunctionDef	main ()
>4	ParameterList	 
>5	ReturnType	int
>6	CompoundStatement	 
>7	ReturnStatement	 
>8	PrimaryExpression	0
>9	ExpressionStatement	 
>10	CallExpression	fclose ( stdin )
>11	ArgumentList	stdin
>12	Argument	stdin
>13	Identifier	stdin
>14	Callee	fclose
>15	Identifier	fclose
>16	ExpressionStatement	 
>17	Identifier	bit
>18	Statement	 
>19	Statement	 
>20	Statement	 
>21	ExpressionStatement	 
>22	Identifier	block
>23	Statement	 
>24	Statement	 
>25	Statement	 
>26	ForStatement	for ( int i = 0 ; i < blocksize / int_len + 1 ; ++ i )
>27	CompoundStatement	 
>28	IfStatement	if ( found )
>29	BreakStatement	 
>30	Condition	 
>31	Identifier	found
>32	ForStatement	for ( int j = 0 ; j < int_len ; ++ j )
>33	CompoundStatement	 
>34	IfStatement	if ( ( bit [ i ] & ( 1 << j ) ) == 0 )
>35	CompoundStatement	 
>36	BreakStatement	 
>37	ExpressionStatement	 
>38	AssignmentExpr	found = true
>39	Identifier	true
>40	Identifier	found
>41	ExpressionStatement	 
>42	ShiftExpression	cout << i * int_len + j + start << endl
>43	ShiftExpression	i * int_len + j + start << endl
>44	Identifier	endl
>45	AdditiveExpression	i * int_len + j + start
>46	AdditiveExpression	j + start
>47	Identifier	start
>48	Identifier	j
>49	MultiplicativeExpression	i * int_len
>50	Identifier	int_len
>51	Identifier	i
>52	Identifier	cout
>53	Condition	 
>54	EqualityExpression	( bit [ i ] & ( 1 << j ) ) == 0
>55	PrimaryExpression	0
>56	BitAndExpression	bit [ i ] & ( 1 << j )
>57	ShiftExpression	1 << j
>58	Identifier	j
>59	PrimaryExpression	1
>60	ArrayIndexing	bit [ i ]
>61	Identifier	i
>62	Identifier	bit
>63	UnaryExpression	 
>64	Identifier	j
>65	IncDec	++
>66	Condition	 
>67	RelationalExpression	j < int_len
>68	Identifier	int_len
>69	Identifier	j
>70	ForInit	 
>71	IdentifierDeclStatement	int j = 0 ;
>72	IdentifierDecl	j = 0
>73	AssignmentExpr	j = 0
>74	PrimaryExpression	0
>75	Identifier	j
>76	Identifier	j
>77	IdentifierDeclType	int
>78	UnaryExpression	 
>79	Identifier	i
>80	IncDec	++
>81	Condition	 
>82	RelationalExpression	i < blocksize / int_len + 1
>83	AdditiveExpression	blocksize / int_len + 1
>84	PrimaryExpression	1
>85	MultiplicativeExpression	blocksize / int_len
>86	Identifier	int_len
>87	Identifier	blocksize
>88	Identifier	i
>89	ForInit	 
>90	IdentifierDeclStatement	int i = 0 ;
>91	IdentifierDecl	i = 0
>92	AssignmentExpr	i = 0
>93	PrimaryExpression	0
>94	Identifier	i
>95	Identifier	i
>96	IdentifierDeclType	int
>97	IdentifierDeclStatement	 
>98	IdentifierDecl	found = false
>99	AssignmentExpr	found = false
>100	Identifier	false
>101	Identifier	false
>102	Identifier	found
>103	IdentifierDeclType	bool
>104	WhileStatement	while ( scanf ( \"%d\" , & v ) != EOF )
>105	CompoundStatement	 
>106	IfStatement	if ( v >= start && v < start + blocksize )
>107	CompoundStatement	 
>108	ExpressionStatement	 
>109	AssignmentExpr	bit [ v / int_len ] |= 1 << ( v % int_len )
>110	ShiftExpression	1 << ( v % int_len )
>111	MultiplicativeExpression	v % int_len
>112	Identifier	int_len
>113	Identifier	v
>114	PrimaryExpression	1
>115	ArrayIndexing	bit [ v / int_len ]
>116	MultiplicativeExpression	v / int_len
>117	Identifier	int_len
>118	Identifier	v
>119	Identifier	bit
>120	ExpressionStatement	 
>121	AssignmentExpr	v -= start
>122	Identifier	start
>123	Identifier	v
>124	Condition	 
>125	AndExpression	v >= start && v < start + blocksize
>126	RelationalExpression	v < start + blocksize
>127	AdditiveExpression	start + blocksize
>128	Identifier	blocksize
>129	Identifier	start
>130	Identifier	v
>131	RelationalExpression	v >= start
>132	Identifier	start
>133	Identifier	v
>134	Condition	 
>135	EqualityExpression	scanf ( \"%d\" , & v ) != EOF
>136	Identifier	EOF
>137	CallExpression	scanf ( \"%d\" , & v )
>138	ArgumentList	\"%d\"
>139	Argument	& v
>140	UnaryOp	& v
>141	Identifier	v
>142	UnaryOperator	&
>143	Argument	\"%d\"
>144	PrimaryExpression	\"%d\"
>145	Callee	scanf
>146	Identifier	scanf
>147	ExpressionStatement	 
>148	CallExpression	freopen ( \"12.3.in\" , \"r\" , stdin )
>149	ArgumentList	\"12.3.in\"
>150	Argument	stdin
>151	Identifier	stdin
>152	Argument	\"r\"
>153	PrimaryExpression	\"r\"
>154	Argument	\"12.3.in\"
>155	PrimaryExpression	\"12.3.in\"
>156	Callee	freopen
>157	Identifier	freopen
>158	ForStatement	for ( int i = 0 ; i < blocknum ; ++ i )
>159	CompoundStatement	 
>160	IfStatement	if ( block [ i ] < blocksize )
>161	CompoundStatement	 
>162	BreakStatement	 
>163	ExpressionStatement	 
>164	AssignmentExpr	start = i * blocksize
>165	MultiplicativeExpression	i * blocksize
>166	Identifier	blocksize
>167	Identifier	i
>168	Identifier	start
>169	Condition	 
>170	RelationalExpression	block [ i ] < blocksize
>171	Identifier	blocksize
>172	ArrayIndexing	block [ i ]
>173	Identifier	i
>174	Identifier	block
>175	UnaryExpression	 
>176	Identifier	i
>177	IncDec	++
>178	Condition	 
>179	RelationalExpression	i < blocknum
>180	Identifier	blocknum
>181	Identifier	i
>182	ForInit	 
>183	IdentifierDeclStatement	int i = 0 ;
>184	IdentifierDecl	i = 0
>185	AssignmentExpr	i = 0
>186	PrimaryExpression	0
>187	Identifier	i
>188	Identifier	i
>189	IdentifierDeclType	int
>190	IdentifierDeclStatement	 
>191	IdentifierDecl	start
>192	Identifier	start
>193	IdentifierDeclType	int
>194	ExpressionStatement	 
>195	CallExpression	fclose ( stdin )
>196	ArgumentList	stdin
>197	Argument	stdin
>198	Identifier	stdin
>199	Callee	fclose
>200	Identifier	fclose
>201	WhileStatement	while ( scanf ( \"%d\" , & v ) != EOF )
>202	CompoundStatement	 
>203	ExpressionStatement	 
>204	UnaryExpression	++ block [ v / blocksize ]
>205	ArrayIndexing	block [ v / blocksize ]
>206	MultiplicativeExpression	v / blocksize
>207	Identifier	blocksize
>208	Identifier	v
>209	Identifier	block
>210	IncDec	++
>211	Condition	 
>212	EqualityExpression	scanf ( \"%d\" , & v ) != EOF
>213	Identifier	EOF
>214	CallExpression	scanf ( \"%d\" , & v )
>215	ArgumentList	\"%d\"
>216	Argument	& v
>217	UnaryOp	& v
>218	Identifier	v
>219	UnaryOperator	&
>220	Argument	\"%d\"
>221	PrimaryExpression	\"%d\"
>222	Callee	scanf
>223	Identifier	scanf
>224	IdentifierDeclStatement	 
>225	IdentifierDecl	v
>226	Identifier	v
>227	IdentifierDeclType	int
>228	IdentifierDeclStatement	 
>229	IdentifierDecl	* bit = new int [ blocksize / int_len + 1 ]
>230	AssignmentExpr	* bit = new int [ blocksize / int_len + 1 ]
>231	AdditiveExpression	blocksize / int_len + 1
>232	PrimaryExpression	1
>233	MultiplicativeExpression	blocksize / int_len
>234	Identifier	int_len
>235	Identifier	blocksize
>236	Identifier	bit
>237	Identifier	bit
>238	IdentifierDeclType	int *
>239	IdentifierDeclStatement	 
>240	IdentifierDecl	* block = new int [ blocknum ]
>241	AssignmentExpr	* block = new int [ blocknum ]
>242	Identifier	blocknum
>243	Identifier	blocknum
>244	Identifier	block
>245	IdentifierDeclType	int *
>246	IdentifierDeclStatement	 
>247	IdentifierDecl	blocknum = totalnum / blocksize
>248	AssignmentExpr	blocknum = totalnum / blocksize
>249	MultiplicativeExpression	totalnum / blocksize
>250	Identifier	blocksize
>251	Identifier	totalnum
>252	Identifier	blocknum
>253	Identifier	blocknum
>254	IdentifierDeclType	int
>255	IdentifierDeclStatement	 
>256	IdentifierDecl	blocksize = 2000
>257	AssignmentExpr	blocksize = 2000
>258	PrimaryExpression	2000
>259	Identifier	blocksize
>260	Identifier	blocksize
>261	IdentifierDeclType	int
>262	IdentifierDeclStatement	 
>263	IdentifierDecl	totalnum = 20000
>264	AssignmentExpr	totalnum = 20000
>265	PrimaryExpression	20000
>266	Identifier	totalnum
>267	Identifier	totalnum
>268	IdentifierDeclType	int
>269	IdentifierDeclStatement	 
>270	IdentifierDecl	int_len = sizeof ( int ) * 8
>271	AssignmentExpr	int_len = sizeof ( int ) * 8
>272	MultiplicativeExpression	sizeof ( int ) * 8
>273	PrimaryExpression	8
>274	SizeofExpr	sizeof ( int )
>275	SizeofOperand	int
>276	Sizeof	sizeof
>277	Identifier	int_len
>278	Identifier	int_len
>279	IdentifierDeclType	int
>280	ExpressionStatement	 
>281	CallExpression	freopen ( \"12.3.in\" , \"r\" , stdin )
>282	ArgumentList	\"12.3.in\"
>283	Argument	stdin
>284	Identifier	stdin
>285	Argument	\"r\"
>286	PrimaryExpression	\"r\"
>287	Argument	\"12.3.in\"
>288	PrimaryExpression	\"12.3.in\"
>289	Callee	freopen
>290	Identifier	freopen
<3=6,5,4
<6=280,269,262,255,246,239,228,224,201,194,190,158,147,104,97,26,25,24,23,21,20,19,18,16,9,7
<7=8
<9=10
<10=14,11
<11=12
<12=13
<14=15
<16=17
<21=22
<26=89,81,78,27
<27=32,28
<28=30,29
<30=31
<32=70,66,63,33
<33=34
<34=53,35
<35=41,37,36
<37=38
<38=40,39
<41=42
<42=52,43
<43=45,44
<45=49,46
<46=48,47
<49=51,50
<53=54
<54=56,55
<56=60,57
<57=59,58
<60=62,61
<63=65,64
<66=67
<67=69,68
<70=71
<71=72
<72=77,76,73
<73=75,74
<78=80,79
<81=82
<82=88,83
<83=85,84
<85=87,86
<89=90
<90=91
<91=96,95,92
<92=94,93
<97=98
<98=103,102,99
<99=101,100
<104=134,105
<105=106
<106=124,107
<107=120,108
<108=109
<109=115,110
<110=114,111
<111=113,112
<115=119,116
<116=118,117
<120=121
<121=123,122
<124=125
<125=131,126
<126=130,127
<127=129,128
<131=133,132
<134=135
<135=137,136
<137=145,138
<138=143,139
<139=140
<140=142,141
<143=144
<145=146
<147=148
<148=156,149
<149=154,152,150
<150=151
<152=153
<154=155
<156=157
<158=182,178,175,159
<159=160
<160=169,161
<161=163,162
<163=164
<164=168,165
<165=167,166
<169=170
<170=172,171
<172=174,173
<175=177,176
<178=179
<179=181,180
<182=183
<183=184
<184=189,188,185
<185=187,186
<190=191
<191=193,192
<194=195
<195=199,196
<196=197
<197=198
<199=200
<201=211,202
<202=203
<203=204
<204=210,205
<205=209,206
<206=208,207
<211=212
<212=214,213
<214=222,215
<215=220,216
<216=217
<217=219,218
<220=221
<222=223
<224=225
<225=227,226
<228=229
<229=238,237,230
<230=236,231
<231=233,232
<233=235,234
<239=240
<240=245,244,241
<241=243,242
<246=247
<247=254,253,248
<248=252,249
<249=251,250
<255=256
<256=261,260,257
<257=259,258
<262=263
<263=268,267,264
<264=266,265
<269=270
<270=279,278,271
<271=277,272
<272=274,273
<274=276,275
<280=281
<281=289,282
<282=287,285,283
<283=284
<285=286
<287=288
<289=290
