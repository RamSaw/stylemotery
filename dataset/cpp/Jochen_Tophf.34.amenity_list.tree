>8	FunctionDef	print_amenity (const char * type , const char * name , double x , double y)
>9	ParameterList	const char * type , const char * name , double x , double y
>10	Parameter	 
>11	Identifier	y
>12	ParameterType	double
>13	Parameter	 
>14	Identifier	x
>15	ParameterType	double
>16	Parameter	 
>17	Identifier	name
>18	ParameterType	const char *
>19	Parameter	 
>20	Identifier	type
>21	ParameterType	const char *
>22	ReturnType	void
>23	CompoundStatement	 
>24	ExpressionStatement	 
>25	CallExpression	printf ( \"%8.4f,%8.4f %-15s %s\n\" , x , y , type , name ? name 
>26	ArgumentList	\"%8.4f,%8.4f %-15s %s\n\"
>27	Argument	name ? name 
>28	ConditionalExpression	name ? name 
>29	PrimaryExpression	\"\"
>30	Identifier	name
>31	Condition	name
>32	Identifier	name
>33	Argument	type
>34	Identifier	type
>35	Argument	y
>36	Identifier	y
>37	Argument	x
>38	Identifier	x
>39	Argument	\"%8.4f,%8.4f %-15s %s\n\"
>40	PrimaryExpression	\"%8.4f,%8.4f %-15s %s\n\"
>41	Callee	printf
>42	Identifier	printf
>50	FunctionDef	node (const osmium 
>51	ParameterList	const osmium 
>52	Parameter	 
>53	Identifier	node
>54	ParameterType	const osmium 
>55	ReturnType	void
>56	CompoundStatement	 
>57	IfStatement	if ( amenity )
>58	CompoundStatement	 
>59	ExpressionStatement	 
>60	CallExpression	print_amenity ( amenity , node . tags ( ) [ \"name\" ] , node . location ( ) . lon ( ) , node . location ( ) . lat ( ) )
>61	ArgumentList	amenity
>62	Argument	node . location ( ) . lat ( )
>63	CallExpression	node . location ( ) . lat ( )
>64	ArgumentList	 
>65	Callee	node . location ( ) . lat
>66	MemberAccess	node . location ( ) . lat
>67	Identifier	lat
>68	CallExpression	node . location ( )
>69	ArgumentList	 
>70	Callee	node . location
>71	MemberAccess	node . location
>72	Identifier	location
>73	Identifier	node
>74	Argument	node . location ( ) . lon ( )
>75	CallExpression	node . location ( ) . lon ( )
>76	ArgumentList	 
>77	Callee	node . location ( ) . lon
>78	MemberAccess	node . location ( ) . lon
>79	Identifier	lon
>80	CallExpression	node . location ( )
>81	ArgumentList	 
>82	Callee	node . location
>83	MemberAccess	node . location
>84	Identifier	location
>85	Identifier	node
>86	Argument	node . tags ( ) [ \"name\" ]
>87	ArrayIndexing	node . tags ( ) [ \"name\" ]
>88	PrimaryExpression	\"name\"
>89	CallExpression	node . tags ( )
>90	ArgumentList	 
>91	Callee	node . tags
>92	MemberAccess	node . tags
>93	Identifier	tags
>94	Identifier	node
>95	Argument	amenity
>96	Identifier	amenity
>97	Callee	print_amenity
>98	Identifier	print_amenity
>99	Condition	 
>100	Identifier	amenity
>101	IdentifierDeclStatement	 
>102	IdentifierDecl	* amenity = node . tags ( ) [ \"amenity\" ]
>103	AssignmentExpr	* amenity = node . tags ( ) [ \"amenity\" ]
>104	ArrayIndexing	node . tags ( ) [ \"amenity\" ]
>105	PrimaryExpression	\"amenity\"
>106	CallExpression	node . tags ( )
>107	ArgumentList	 
>108	Callee	node . tags
>109	MemberAccess	node . tags
>110	Identifier	tags
>111	Identifier	node
>112	Identifier	amenity
>113	Identifier	amenity
>114	IdentifierDeclType	const char *
>126	FunctionDef	area (const osmium 
>127	ParameterList	const osmium 
>128	Parameter	 
>129	Identifier	area
>130	ParameterType	const osmium 
>131	ReturnType	void
>132	CompoundStatement	 
>133	IfStatement	if ( amenity )
>134	CompoundStatement	 
>135	ExpressionStatement	 
>136	CallExpression	print_amenity ( amenity , area . tags ( ) [ \"name\" ] , x , y )
>137	ArgumentList	amenity
>138	Argument	y
>139	Identifier	y
>140	Argument	x
>141	Identifier	x
>142	Argument	area . tags ( ) [ \"name\" ]
>143	ArrayIndexing	area . tags ( ) [ \"name\" ]
>144	PrimaryExpression	\"name\"
>145	CallExpression	area . tags ( )
>146	ArgumentList	 
>147	Callee	area . tags
>148	MemberAccess	area . tags
>149	Identifier	tags
>150	Identifier	area
>151	Argument	amenity
>152	Identifier	amenity
>153	Callee	print_amenity
>154	Identifier	print_amenity
>155	ExpressionStatement	 
>156	AssignmentExpr	y /= ring . size ( )
>157	CallExpression	ring . size ( )
>158	ArgumentList	 
>159	Callee	ring . size
>160	MemberAccess	ring . size
>161	Identifier	size
>162	Identifier	ring
>163	Identifier	y
>164	ExpressionStatement	 
>165	AssignmentExpr	x /= ring . size ( )
>166	CallExpression	ring . size ( )
>167	ArgumentList	 
>168	Callee	ring . size
>169	MemberAccess	ring . size
>170	Identifier	size
>171	Identifier	ring
>172	Identifier	x
>173	CompoundStatement	 
>174	ExpressionStatement	 
>175	AssignmentExpr	y += l . lat ( )
>176	CallExpression	l . lat ( )
>177	ArgumentList	 
>178	Callee	l . lat
>179	MemberAccess	l . lat
>180	Identifier	lat
>181	Identifier	l
>182	Identifier	y
>183	ExpressionStatement	 
>184	AssignmentExpr	x += l . lon ( )
>185	CallExpression	l . lon ( )
>186	ArgumentList	 
>187	Callee	l . lon
>188	MemberAccess	l . lon
>189	Identifier	lon
>190	Identifier	l
>191	Identifier	x
>192	Statement	 
>193	Statement	 
>194	Label	 
>195	Identifier	l
>196	Statement	 
>197	Statement	 
>198	Statement	 
>199	Statement	 
>200	Statement	 
>201	IdentifierDeclStatement	 
>202	IdentifierDecl	y = 0
>203	AssignmentExpr	y = 0
>204	PrimaryExpression	0
>205	Identifier	y
>206	Identifier	y
>207	IdentifierDeclType	double
>208	IdentifierDeclStatement	 
>209	IdentifierDecl	x = 0
>210	AssignmentExpr	x = 0
>211	PrimaryExpression	0
>212	Identifier	x
>213	Identifier	x
>214	IdentifierDeclType	double
>215	ExpressionStatement	 
>216	Statement	 
>217	Statement	 
>218	Statement	 
>219	Statement	 
>220	Statement	 
>221	Statement	 
>222	Statement	 
>223	Statement	 
>224	Statement	 
>225	Statement	 
>226	Statement	 
>227	Statement	 
>228	Statement	 
>229	Statement	 
>230	Statement	 
>231	Statement	 
>232	Statement	 
>233	Statement	 
>234	Condition	 
>235	Identifier	amenity
>236	IdentifierDeclStatement	 
>237	IdentifierDecl	* amenity = area . tags ( ) [ \"amenity\" ]
>238	AssignmentExpr	* amenity = area . tags ( ) [ \"amenity\" ]
>239	ArrayIndexing	area . tags ( ) [ \"amenity\" ]
>240	PrimaryExpression	\"amenity\"
>241	CallExpression	area . tags ( )
>242	ArgumentList	 
>243	Callee	area . tags
>244	MemberAccess	area . tags
>245	Identifier	tags
>246	Identifier	area
>247	Identifier	amenity
>248	Identifier	amenity
>249	IdentifierDeclType	const char *
>250	CompoundStatement	 
>251	ReturnStatement	 
>252	Statement	 
>253	Statement	 
>254	Statement	 
>255	Statement	 
>256	Statement	 
>257	Statement	 
>258	Statement	 
>259	Statement	 
>260	Statement	 
>261	Statement	 
>262	Statement	 
>263	Statement	 
>264	Statement	 
>265	Statement	 
>266	Statement	 
>267	Statement	 
>268	Statement	 
>269	Statement	 
>270	Statement	 
>271	Statement	 
>272	Statement	 
>273	Statement	 
>274	Statement	 
>275	Statement	 
>291	FunctionDef	main (int argc , char * argv [ ])
>292	ParameterList	int argc , char * argv [ ]
>293	Parameter	 
>294	Identifier	argv
>295	ParameterType	char * [ ]
>296	Parameter	 
>297	Identifier	argc
>298	ParameterType	int
>299	ReturnType	int
>300	CompoundStatement	 
>301	ExpressionStatement	 
>302	Statement	 
>303	Statement	 
>304	CompoundStatement	 
>305	ExpressionStatement	 
>306	CallExpression	osmium 
>307	ArgumentList	area_buffer
>308	Argument	data_handler
>309	Identifier	data_handler
>310	Argument	area_buffer
>311	Identifier	area_buffer
>312	Callee	osmium 
>313	Identifier	osmium 
>314	Statement	 
>315	Statement	 
>316	Statement	 
>317	Statement	 
>318	Statement	 
>319	Statement	 
>320	Statement	 
>321	Statement	 
>322	Statement	 
>323	Statement	 
>324	Statement	 
>325	Statement	 
>326	Statement	 
>327	Statement	 
>328	Statement	 
>329	Statement	 
>330	Statement	 
>331	Statement	 
>332	Statement	 
>333	Statement	 
>334	Statement	 
>335	Statement	 
>336	Statement	 
>337	Statement	 
>338	Statement	 
>339	Statement	 
>340	Statement	 
>341	Statement	 
>342	IdentifierDeclStatement	 
>343	IdentifierDecl	reader2 ( argv [ 1 ] )
>344	ArrayIndexing	argv [ 1 ]
>345	PrimaryExpression	1
>346	Identifier	argv
>347	Identifier	reader2
>348	IdentifierDeclType	osmium 
>349	ExpressionStatement	 
>350	ShiftExpression	std 
>351	PrimaryExpression	\"Pass 2...\n\"
>352	Identifier	std 
>353	IdentifierDeclStatement	 
>354	IdentifierDecl	data_handler
>355	Identifier	data_handler
>356	IdentifierDeclType	AmenityHandler
>357	ExpressionStatement	 
>358	CallExpression	location_handler . ignore_errors ( )
>359	ArgumentList	 
>360	Callee	location_handler . ignore_errors
>361	MemberAccess	location_handler . ignore_errors
>362	Identifier	ignore_errors
>363	Identifier	location_handler
>364	IdentifierDeclStatement	 
>365	IdentifierDecl	location_handler ( index )
>366	Identifier	index
>367	Identifier	location_handler
>368	IdentifierDeclType	location_handler_type
>369	IdentifierDeclStatement	 
>370	IdentifierDecl	index
>371	Identifier	index
>372	IdentifierDeclType	index_type
>373	ExpressionStatement	 
>374	ShiftExpression	std 
>375	PrimaryExpression	\"Pass 1 done\n\"
>376	Identifier	std 
>377	ExpressionStatement	 
>378	CallExpression	reader1 . close ( )
>379	ArgumentList	 
>380	Callee	reader1 . close
>381	MemberAccess	reader1 . close
>382	Identifier	close
>383	Identifier	reader1
>384	ExpressionStatement	 
>385	CallExpression	collector . read_relations ( reader1 )
>386	ArgumentList	reader1
>387	Argument	reader1
>388	Identifier	reader1
>389	Callee	collector . read_relations
>390	MemberAccess	collector . read_relations
>391	Identifier	read_relations
>392	Identifier	collector
>393	IdentifierDeclStatement	 
>394	IdentifierDecl	reader1 ( argv [ 1 ] )
>395	ArrayIndexing	argv [ 1 ]
>396	PrimaryExpression	1
>397	Identifier	argv
>398	Identifier	reader1
>399	IdentifierDeclType	osmium 
>400	ExpressionStatement	 
>401	ShiftExpression	std 
>402	PrimaryExpression	\"Pass 1...\n\"
>403	Identifier	std 
>404	IdentifierDeclStatement	 
>405	IdentifierDecl	collector ( assembler_config )
>406	Identifier	assembler_config
>407	Identifier	collector
>408	IdentifierDeclType	osmium 
>409	IdentifierDeclStatement	 
>410	IdentifierDecl	assembler_config
>411	Identifier	assembler_config
>412	IdentifierDeclType	osmium 
>413	IfStatement	if ( argc != 2 )
>414	CompoundStatement	 
>415	ExpressionStatement	 
>416	CallExpression	exit ( 1 )
>417	ArgumentList	1
>418	Argument	1
>419	PrimaryExpression	1
>420	Callee	exit
>421	Identifier	exit
>422	ExpressionStatement	 
>423	ShiftExpression	std 
>424	ShiftExpression	\"Usage
>425	ShiftExpression	argv [ 0 ] << \" OSMFILE\n\"
>426	PrimaryExpression	\" OSMFILE\n\"
>427	ArrayIndexing	argv [ 0 ]
>428	PrimaryExpression	0
>429	Identifier	argv
>430	PrimaryExpression	\"Usage
>431	Identifier	std 
>432	Condition	 
>433	EqualityExpression	argc != 2
>434	PrimaryExpression	2
>435	Identifier	argc
<8=23,22,9
<9=19,16,13,10
<10=12,11
<13=15,14
<16=18,17
<19=21,20
<23=24
<24=25
<25=41,26
<26=39,37,35,33,27
<27=28
<28=31,30,29
<31=32
<33=34
<35=36
<37=38
<39=40
<41=42
<50=56,55,51
<51=52
<52=54,53
<56=101,57
<57=99,58
<58=59
<59=60
<60=97,61
<61=95,86,74,62
<62=63
<63=65,64
<65=66
<66=68,67
<68=70,69
<70=71
<71=73,72
<74=75
<75=77,76
<77=78
<78=80,79
<80=82,81
<82=83
<83=85,84
<86=87
<87=89,88
<89=91,90
<91=92
<92=94,93
<95=96
<97=98
<99=100
<101=102
<102=114,113,103
<103=112,104
<104=106,105
<106=108,107
<108=109
<109=111,110
<126=132,131,127
<127=128
<128=130,129
<132=275,274,273,272,271,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,250,236,133
<133=234,134
<134=233,232,231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,216,215,208,201,200,199,198,197,196,194,193,192,173,164,155,135
<135=136
<136=153,137
<137=151,142,140,138
<138=139
<140=141
<142=143
<143=145,144
<145=147,146
<147=148
<148=150,149
<151=152
<153=154
<155=156
<156=163,157
<157=159,158
<159=160
<160=162,161
<164=165
<165=172,166
<166=168,167
<168=169
<169=171,170
<173=183,174
<174=175
<175=182,176
<176=178,177
<178=179
<179=181,180
<183=184
<184=191,185
<185=187,186
<187=188
<188=190,189
<194=195
<201=202
<202=207,206,203
<203=205,204
<208=209
<209=214,213,210
<210=212,211
<234=235
<236=237
<237=249,248,238
<238=247,239
<239=241,240
<241=243,242
<243=244
<244=246,245
<250=251
<291=300,299,292
<292=296,293
<293=295,294
<296=298,297
<300=413,409,404,400,393,384,377,373,369,364,357,353,349,342,341,340,339,338,337,336,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,316,315,314,304,303,302,301
<304=305
<305=306
<306=312,307
<307=310,308
<308=309
<310=311
<312=313
<342=343
<343=348,347,344
<344=346,345
<349=350
<350=352,351
<353=354
<354=356,355
<357=358
<358=360,359
<360=361
<361=363,362
<364=365
<365=368,367,366
<369=370
<370=372,371
<373=374
<374=376,375
<377=378
<378=380,379
<380=381
<381=383,382
<384=385
<385=389,386
<386=387
<387=388
<389=390
<390=392,391
<393=394
<394=399,398,395
<395=397,396
<400=401
<401=403,402
<404=405
<405=408,407,406
<409=410
<410=412,411
<413=432,414
<414=422,415
<415=416
<416=420,417
<417=418
<418=419
<420=421
<422=423
<423=431,424
<424=430,425
<425=427,426
<427=429,428
<432=433
<433=435,434
