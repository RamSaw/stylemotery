>3	FunctionDef	PointCloudViewer 
>4	ParameterList	 
>5	ReturnType	include < fstream >
>6	CompoundStatement	 
>7	ExpressionStatement	 
>8	CallExpression	reset ( )
>9	ArgumentList	 
>10	Callee	reset
>11	Identifier	reset
>12	ExpressionStatement	 
>13	CallExpression	setSnapshotFormat ( QString ( \"PNG\" ) )
>14	ArgumentList	QString ( \"PNG\" )
>15	Argument	QString ( \"PNG\" )
>16	CallExpression	QString ( \"PNG\" )
>17	ArgumentList	\"PNG\"
>18	Argument	\"PNG\"
>19	PrimaryExpression	\"PNG\"
>20	Callee	QString
>21	Identifier	QString
>22	Callee	setSnapshotFormat
>23	Identifier	setSnapshotFormat
>24	ExpressionStatement	 
>25	AssignmentExpr	customAnimationEnabled = false
>26	Identifier	false
>27	Identifier	customAnimationEnabled
>28	ExpressionStatement	 
>29	AssignmentExpr	kfInt = new qglviewer 
>30	UnaryExpression	new qglviewer 
>31	Identifier	kfInt
>32	ForStatement	for ( int i = 0 ; i < 10 ; i ++ )
>33	CompoundStatement	 
>34	ExpressionStatement	 
>35	AssignmentExpr	KFautoPlayIdx [ i ] = - 1
>36	UnaryOp	- 1
>37	PrimaryExpression	1
>38	UnaryOperator	-
>39	ArrayIndexing	KFautoPlayIdx [ i ]
>40	Identifier	i
>41	Identifier	KFautoPlayIdx
>42	ExpressionStatement	 
>43	AssignmentExpr	KFexists [ i ] = 0
>44	PrimaryExpression	0
>45	ArrayIndexing	KFexists [ i ]
>46	Identifier	i
>47	Identifier	KFexists
>48	IncDecOp	 
>49	IncDec	++
>50	Identifier	i
>51	Condition	 
>52	RelationalExpression	i < 10
>53	PrimaryExpression	10
>54	Identifier	i
>55	ForInit	 
>56	IdentifierDeclStatement	int i = 0 ;
>57	IdentifierDecl	i = 0
>58	AssignmentExpr	i = 0
>59	PrimaryExpression	0
>60	Identifier	i
>61	Identifier	i
>62	IdentifierDeclType	int
>63	ExpressionStatement	 
>64	AssignmentExpr	graphDisplay = 0
>65	PrimaryExpression	0
>66	Identifier	graphDisplay
>67	ExpressionStatement	 
>68	AssignmentExpr	currentCamDisplay = 0
>69	PrimaryExpression	0
>70	Identifier	currentCamDisplay
>71	ExpressionStatement	 
>72	CallExpression	setPathKey ( Qt 
>73	ArgumentList	Qt 
>74	Argument	9
>75	PrimaryExpression	9
>76	Argument	Qt 
>77	Identifier	Qt 
>78	Callee	setPathKey
>79	Identifier	setPathKey
>80	ExpressionStatement	 
>81	CallExpression	setPathKey ( Qt 
>82	ArgumentList	Qt 
>83	Argument	8
>84	PrimaryExpression	8
>85	Argument	Qt 
>86	Identifier	Qt 
>87	Callee	setPathKey
>88	Identifier	setPathKey
>89	ExpressionStatement	 
>90	CallExpression	setPathKey ( Qt 
>91	ArgumentList	Qt 
>92	Argument	7
>93	PrimaryExpression	7
>94	Argument	Qt 
>95	Identifier	Qt 
>96	Callee	setPathKey
>97	Identifier	setPathKey
>98	ExpressionStatement	 
>99	CallExpression	setPathKey ( Qt 
>100	ArgumentList	Qt 
>101	Argument	6
>102	PrimaryExpression	6
>103	Argument	Qt 
>104	Identifier	Qt 
>105	Callee	setPathKey
>106	Identifier	setPathKey
>107	ExpressionStatement	 
>108	CallExpression	setPathKey ( Qt 
>109	ArgumentList	Qt 
>110	Argument	5
>111	PrimaryExpression	5
>112	Argument	Qt 
>113	Identifier	Qt 
>114	Callee	setPathKey
>115	Identifier	setPathKey
>116	ExpressionStatement	 
>117	CallExpression	setPathKey ( Qt 
>118	ArgumentList	Qt 
>119	Argument	4
>120	PrimaryExpression	4
>121	Argument	Qt 
>122	Identifier	Qt 
>123	Callee	setPathKey
>124	Identifier	setPathKey
>125	ExpressionStatement	 
>126	CallExpression	setPathKey ( Qt 
>127	ArgumentList	Qt 
>128	Argument	3
>129	PrimaryExpression	3
>130	Argument	Qt 
>131	Identifier	Qt 
>132	Callee	setPathKey
>133	Identifier	setPathKey
>134	ExpressionStatement	 
>135	CallExpression	setPathKey ( Qt 
>136	ArgumentList	Qt 
>137	Argument	2
>138	PrimaryExpression	2
>139	Argument	Qt 
>140	Identifier	Qt 
>141	Callee	setPathKey
>142	Identifier	setPathKey
>143	ExpressionStatement	 
>144	CallExpression	setPathKey ( Qt 
>145	ArgumentList	Qt 
>146	Argument	1
>147	PrimaryExpression	1
>148	Argument	Qt 
>149	Identifier	Qt 
>150	Callee	setPathKey
>151	Identifier	setPathKey
>152	ExpressionStatement	 
>153	CallExpression	setPathKey ( Qt 
>154	ArgumentList	Qt 
>155	Argument	0
>156	PrimaryExpression	0
>157	Argument	Qt 
>158	Identifier	Qt 
>159	Callee	setPathKey
>160	Identifier	setPathKey
>186	FunctionDef	PointCloudViewer 
>187	ParameterList	 
>188	CompoundStatement	 
>189	ExpressionStatement	 
>190	Identifier	graphDisplay
>191	Statement	 
>192	ExpressionStatement	 
>193	Identifier	currentCamDisplay
>194	Statement	 
>198	FunctionDef	PointCloudViewer 
>199	ParameterList	 
>200	ReturnType	void
>201	CompoundStatement	 
>202	ExpressionStatement	 
>203	AssignmentExpr	animationPlaybackEnabled = false
>204	Identifier	false
>205	Identifier	animationPlaybackEnabled
>206	ExpressionStatement	 
>207	AssignmentExpr	lastAutoplayCheckedSaveTime = - 1
>208	UnaryOp	- 1
>209	PrimaryExpression	1
>210	UnaryOperator	-
>211	Identifier	lastAutoplayCheckedSaveTime
>212	ExpressionStatement	 
>213	CallExpression	setTextIsEnabled ( false )
>214	ArgumentList	false
>215	Argument	false
>216	Identifier	false
>217	Callee	setTextIsEnabled
>218	Identifier	setTextIsEnabled
>219	ExpressionStatement	 
>220	CallExpression	setSceneRadius ( 80 )
>221	ArgumentList	80
>222	Argument	80
>223	PrimaryExpression	80
>224	Callee	setSceneRadius
>225	Identifier	setSceneRadius
>226	ExpressionStatement	 
>227	CallExpression	assert ( k != - 42 )
>228	ArgumentList	k != - 42
>229	Argument	k != - 42
>230	EqualityExpression	k != - 42
>231	UnaryOp	- 42
>232	PrimaryExpression	42
>233	UnaryOperator	-
>234	Identifier	k
>235	Callee	assert
>236	Identifier	assert
>237	ExpressionStatement	 
>238	AssignmentExpr	k += system ( buf )
>239	CallExpression	system ( buf )
>240	ArgumentList	buf
>241	Argument	buf
>242	Identifier	buf
>243	Callee	system
>244	Identifier	system
>245	Identifier	k
>246	ExpressionStatement	 
>247	CallExpression	snprintf ( buf , 500 , \"mkdir %s\" , save_folder . c_str ( ) )
>248	ArgumentList	buf
>249	Argument	save_folder . c_str ( )
>250	CallExpression	save_folder . c_str ( )
>251	ArgumentList	 
>252	Callee	save_folder . c_str
>253	MemberAccess	save_folder . c_str
>254	Identifier	c_str
>255	Identifier	save_folder
>256	Argument	\"mkdir %s\"
>257	PrimaryExpression	\"mkdir %s\"
>258	Argument	500
>259	PrimaryExpression	500
>260	Argument	buf
>261	Identifier	buf
>262	Callee	snprintf
>263	Identifier	snprintf
>264	IdentifierDeclStatement	 
>265	IdentifierDecl	k = system ( buf )
>266	AssignmentExpr	k = system ( buf )
>267	CallExpression	system ( buf )
>268	ArgumentList	buf
>269	Argument	buf
>270	Identifier	buf
>271	Callee	system
>272	Identifier	system
>273	Identifier	k
>274	Identifier	k
>275	IdentifierDeclType	int
>276	ExpressionStatement	 
>277	CallExpression	snprintf ( buf , 500 , \"rm -rf %s\" , save_folder . c_str ( ) )
>278	ArgumentList	buf
>279	Argument	save_folder . c_str ( )
>280	CallExpression	save_folder . c_str ( )
>281	ArgumentList	 
>282	Callee	save_folder . c_str
>283	MemberAccess	save_folder . c_str
>284	Identifier	c_str
>285	Identifier	save_folder
>286	Argument	\"rm -rf %s\"
>287	PrimaryExpression	\"rm -rf %s\"
>288	Argument	500
>289	PrimaryExpression	500
>290	Argument	buf
>291	Identifier	buf
>292	Callee	snprintf
>293	Identifier	snprintf
>294	IdentifierDeclStatement	 
>295	IdentifierDecl	buf [ 500 ]
>296	PrimaryExpression	500
>297	Identifier	buf
>298	IdentifierDeclType	char [ 500 ]
>299	ExpressionStatement	 
>300	AssignmentExpr	lastAnimTime = lastCamTime = lastSaveTime = 0
>301	AssignmentExpr	lastCamTime = lastSaveTime = 0
>302	AssignmentExpr	lastSaveTime = 0
>303	PrimaryExpression	0
>304	Identifier	lastSaveTime
>305	Identifier	lastCamTime
>306	Identifier	lastAnimTime
>307	ExpressionStatement	 
>308	AssignmentExpr	lastCamID = - 1
>309	UnaryOp	- 1
>310	PrimaryExpression	1
>311	UnaryOperator	-
>312	Identifier	lastCamID
>313	ExpressionStatement	 
>314	AssignmentExpr	simMsBetweenSaves = 1
>315	PrimaryExpression	1
>316	Identifier	simMsBetweenSaves
>317	ExpressionStatement	 
>318	AssignmentExpr	localMsBetweenSaves = 1
>319	PrimaryExpression	1
>320	Identifier	localMsBetweenSaves
>321	ExpressionStatement	 
>322	AssignmentExpr	save_folder = ros 
>323	AdditiveExpression	ros 
>324	PrimaryExpression	\"/save/\"
>325	CallExpression	ros 
>326	ArgumentList	\"lsd_slam_viewer\"
>327	Argument	\"lsd_slam_viewer\"
>328	PrimaryExpression	\"lsd_slam_viewer\"
>329	Callee	ros 
>330	Identifier	ros 
>331	Identifier	save_folder
>332	ExpressionStatement	 
>333	AssignmentExpr	resetRequested = false
>334	Identifier	false
>335	Identifier	resetRequested
>336	ExpressionStatement	 
>337	AssignmentExpr	KFLastPCSeq = - 1
>338	UnaryOp	- 1
>339	PrimaryExpression	1
>340	UnaryOperator	-
>341	Identifier	KFLastPCSeq
>342	ExpressionStatement	 
>343	AssignmentExpr	KFcurrent = 0
>344	PrimaryExpression	0
>345	Identifier	KFcurrent
>346	ExpressionStatement	 
>347	AssignmentExpr	graphDisplay = new KeyFrameGraphDisplay ( )
>348	UnaryExpression	new KeyFrameGraphDisplay ( )
>349	Identifier	graphDisplay
>350	ExpressionStatement	 
>351	AssignmentExpr	currentCamDisplay = new KeyFrameDisplay ( )
>352	UnaryExpression	new KeyFrameDisplay ( )
>353	Identifier	currentCamDisplay
>354	ExpressionStatement	 
>355	Identifier	graphDisplay
>356	IfStatement	if ( graphDisplay != 0 )
>357	Statement	 
>358	Condition	 
>359	EqualityExpression	graphDisplay != 0
>360	PrimaryExpression	0
>361	Identifier	graphDisplay
>362	ExpressionStatement	 
>363	Identifier	currentCamDisplay
>364	IfStatement	if ( currentCamDisplay != 0 )
>365	Statement	 
>366	Condition	 
>367	EqualityExpression	currentCamDisplay != 0
>368	PrimaryExpression	0
>369	Identifier	currentCamDisplay
>393	FunctionDef	PointCloudViewer 
>394	ParameterList	lsd_slam_viewer 
>395	Parameter	 
>396	Identifier	msg
>397	ParameterType	lsd_slam_viewer 
>398	ReturnType	void
>399	CompoundStatement	 
>400	ExpressionStatement	 
>401	CallExpression	meddleMutex . unlock ( )
>402	ArgumentList	 
>403	Callee	meddleMutex . unlock
>404	MemberAccess	meddleMutex . unlock
>405	Identifier	unlock
>406	Identifier	meddleMutex
>407	IfStatement	if ( ! msg -> isKeyframe )
>408	ElseStatement	else
>409	ExpressionStatement	 
>410	CallExpression	graphDisplay -> addMsg ( msg )
>411	ArgumentList	msg
>412	Argument	msg
>413	Identifier	msg
>414	Callee	graphDisplay -> addMsg
>415	PtrMemberAccess	graphDisplay -> addMsg
>416	Identifier	addMsg
>417	Identifier	graphDisplay
>418	CompoundStatement	 
>419	ExpressionStatement	 
>420	AssignmentExpr	lastCamID = msg -> id
>421	PtrMemberAccess	msg -> id
>422	Identifier	id
>423	Identifier	msg
>424	Identifier	lastCamID
>425	ExpressionStatement	 
>426	AssignmentExpr	lastAnimTime = lastCamTime = msg -> time
>427	AssignmentExpr	lastCamTime = msg -> time
>428	PtrMemberAccess	msg -> time
>429	Identifier	time
>430	Identifier	msg
>431	Identifier	lastCamTime
>432	Identifier	lastAnimTime
>433	ExpressionStatement	 
>434	CallExpression	currentCamDisplay -> setFrom ( msg )
>435	ArgumentList	msg
>436	Argument	msg
>437	Identifier	msg
>438	Callee	currentCamDisplay -> setFrom
>439	PtrMemberAccess	currentCamDisplay -> setFrom
>440	Identifier	setFrom
>441	Identifier	currentCamDisplay
>442	IfStatement	if ( currentCamDisplay -> id > msg -> id )
>443	CompoundStatement	 
>444	ExpressionStatement	 
>445	AssignmentExpr	resetRequested = true
>446	Identifier	true
>447	Identifier	resetRequested
>448	ExpressionStatement	 
>449	CallExpression	printf ( \"detected backward-jump in id (%d to %d), resetting!\n\" , currentCamDisplay -> id , msg -> id )
>450	ArgumentList	\"detected backward-jump in id (%d to %d), resetting!\n\"
>451	Argument	msg -> id
>452	PtrMemberAccess	msg -> id
>453	Identifier	id
>454	Identifier	msg
>455	Argument	currentCamDisplay -> id
>456	PtrMemberAccess	currentCamDisplay -> id
>457	Identifier	id
>458	Identifier	currentCamDisplay
>459	Argument	\"detected backward-jump in id (%d to %d), resetting!\n\"
>460	PrimaryExpression	\"detected backward-jump in id (%d to %d), resetting!\n\"
>461	Callee	printf
>462	Identifier	printf
>463	Condition	 
>464	RelationalExpression	currentCamDisplay -> id > msg -> id
>465	PtrMemberAccess	msg -> id
>466	Identifier	id
>467	Identifier	msg
>468	PtrMemberAccess	currentCamDisplay -> id
>469	Identifier	id
>470	Identifier	currentCamDisplay
>471	Condition	 
>472	UnaryOp	! msg -> isKeyframe
>473	PtrMemberAccess	msg -> isKeyframe
>474	Identifier	isKeyframe
>475	Identifier	msg
>476	UnaryOperator	!
>477	ExpressionStatement	 
>478	CallExpression	meddleMutex . lock ( )
>479	ArgumentList	 
>480	Callee	meddleMutex . lock
>481	MemberAccess	meddleMutex . lock
>482	Identifier	lock
>483	Identifier	meddleMutex
>502	FunctionDef	PointCloudViewer 
>503	ParameterList	lsd_slam_viewer 
>504	Parameter	 
>505	Identifier	msg
>506	ParameterType	lsd_slam_viewer 
>507	ReturnType	void
>508	CompoundStatement	 
>509	ExpressionStatement	 
>510	CallExpression	meddleMutex . unlock ( )
>511	ArgumentList	 
>512	Callee	meddleMutex . unlock
>513	MemberAccess	meddleMutex . unlock
>514	Identifier	unlock
>515	Identifier	meddleMutex
>516	ExpressionStatement	 
>517	CallExpression	graphDisplay -> addGraphMsg ( msg )
>518	ArgumentList	msg
>519	Argument	msg
>520	Identifier	msg
>521	Callee	graphDisplay -> addGraphMsg
>522	PtrMemberAccess	graphDisplay -> addGraphMsg
>523	Identifier	addGraphMsg
>524	Identifier	graphDisplay
>525	ExpressionStatement	 
>526	CallExpression	meddleMutex . lock ( )
>527	ArgumentList	 
>528	Callee	meddleMutex . lock
>529	MemberAccess	meddleMutex . lock
>530	Identifier	lock
>531	Identifier	meddleMutex
>538	FunctionDef	PointCloudViewer 
>539	ParameterList	 
>540	ReturnType	void
>541	CompoundStatement	 
>542	ExpressionStatement	 
>543	CallExpression	startAnimation ( )
>544	ArgumentList	 
>545	Callee	startAnimation
>546	Identifier	startAnimation
>547	ExpressionStatement	 
>548	CallExpression	setAnimationPeriod ( 30 )
>549	ArgumentList	30
>550	Argument	30
>551	PrimaryExpression	30
>552	Callee	setAnimationPeriod
>553	Identifier	setAnimationPeriod
>557	FunctionDef	PointCloudViewer 
>558	ParameterList	 
>559	ReturnType	QString
>560	CompoundStatement	 
>561	ReturnStatement	 
>562	CallExpression	QString ( \"\" )
>563	ArgumentList	\"\"
>564	Argument	\"\"
>565	PrimaryExpression	\"\"
>566	Callee	QString
>567	Identifier	QString
>572	FunctionDef	PointCloudViewer 
>573	ParameterList	 
>574	ReturnType	void
>575	CompoundStatement	 
>576	IfStatement	if ( saveAllVideo )
>577	CompoundStatement	 
>578	IfStatement	if ( span > 0.4 )
>579	CompoundStatement	 
>580	ExpressionStatement	 
>581	AssignmentExpr	lastRealSaveTime = ros 
>582	CallExpression	ros 
>583	ArgumentList	 
>584	Callee	ros 
>585	MemberAccess	ros 
>586	Identifier	toSec
>587	CallExpression	ros 
>588	ArgumentList	 
>589	Callee	ros 
>590	Identifier	ros 
>591	Identifier	lastRealSaveTime
>592	ExpressionStatement	 
>593	CallExpression	saveSnapshot ( QString ( buf ) )
>594	ArgumentList	QString ( buf )
>595	Argument	QString ( buf )
>596	CallExpression	QString ( buf )
>597	ArgumentList	buf
>598	Argument	buf
>599	Identifier	buf
>600	Callee	QString
>601	Identifier	QString
>602	Callee	saveSnapshot
>603	Identifier	saveSnapshot
>604	ExpressionStatement	 
>605	CallExpression	snprintf ( buf , 500 , \"%s%lf.png\" , save_folder . c_str ( ) , ros 
>606	ArgumentList	buf
>607	Argument	ros 
>608	CallExpression	ros 
>609	ArgumentList	 
>610	Callee	ros 
>611	MemberAccess	ros 
>612	Identifier	toSec
>613	CallExpression	ros 
>614	ArgumentList	 
>615	Callee	ros 
>616	Identifier	ros 
>617	Argument	save_folder . c_str ( )
>618	CallExpression	save_folder . c_str ( )
>619	ArgumentList	 
>620	Callee	save_folder . c_str
>621	MemberAccess	save_folder . c_str
>622	Identifier	c_str
>623	Identifier	save_folder
>624	Argument	\"%s%lf.png\"
>625	PrimaryExpression	\"%s%lf.png\"
>626	Argument	500
>627	PrimaryExpression	500
>628	Argument	buf
>629	Identifier	buf
>630	Callee	snprintf
>631	Identifier	snprintf
>632	IdentifierDeclStatement	 
>633	IdentifierDecl	buf [ 500 ]
>634	PrimaryExpression	500
>635	Identifier	buf
>636	IdentifierDeclType	char [ 500 ]
>637	ExpressionStatement	 
>638	CallExpression	printf ( \"saved (img %d @ time %lf, saveHZ %f)!\n\" , lastCamID , lastAnimTime , 1.0 / localMsBetweenSaves )
>639	ArgumentList	\"saved (img %d @ time %lf, saveHZ %f)!\n\"
>640	Argument	1.0 / localMsBetweenSaves
>641	MultiplicativeExpression	1.0 / localMsBetweenSaves
>642	Identifier	localMsBetweenSaves
>643	PrimaryExpression	1.0
>644	Argument	lastAnimTime
>645	Identifier	lastAnimTime
>646	Argument	lastCamID
>647	Identifier	lastCamID
>648	Argument	\"saved (img %d @ time %lf, saveHZ %f)!\n\"
>649	PrimaryExpression	\"saved (img %d @ time %lf, saveHZ %f)!\n\"
>650	Callee	printf
>651	Identifier	printf
>652	ExpressionStatement	 
>653	CallExpression	setSnapshotQuality ( 100 )
>654	ArgumentList	100
>655	Argument	100
>656	PrimaryExpression	100
>657	Callee	setSnapshotQuality
>658	Identifier	setSnapshotQuality
>659	Condition	 
>660	RelationalExpression	span > 0.4
>661	PrimaryExpression	0.4
>662	Identifier	span
>663	IdentifierDeclStatement	 
>664	IdentifierDecl	span = ros 
>665	AssignmentExpr	span = ros 
>666	AdditiveExpression	ros 
>667	Identifier	lastRealSaveTime
>668	CallExpression	ros 
>669	ArgumentList	 
>670	Callee	ros 
>671	MemberAccess	ros 
>672	Identifier	toSec
>673	CallExpression	ros 
>674	ArgumentList	 
>675	Callee	ros 
>676	Identifier	ros 
>677	Identifier	span
>678	Identifier	span
>679	IdentifierDeclType	double
>680	Condition	 
>681	Identifier	saveAllVideo
>682	ExpressionStatement	 
>683	CallExpression	meddleMutex . unlock ( )
>684	ArgumentList	 
>685	Callee	meddleMutex . unlock
>686	MemberAccess	meddleMutex . unlock
>687	Identifier	unlock
>688	Identifier	meddleMutex
>689	ExpressionStatement	 
>690	CallExpression	glPopMatrix ( )
>691	ArgumentList	 
>692	Callee	glPopMatrix
>693	Identifier	glPopMatrix
>694	ExpressionStatement	 
>695	CallExpression	graphDisplay -> draw ( )
>696	ArgumentList	 
>697	Callee	graphDisplay -> draw
>698	PtrMemberAccess	graphDisplay -> draw
>699	Identifier	draw
>700	Identifier	graphDisplay
>701	IfStatement	if ( showCurrentPointcloud )
>702	ExpressionStatement	 
>703	CallExpression	currentCamDisplay -> drawPC ( pointTesselation , 1 )
>704	ArgumentList	pointTesselation
>705	Argument	1
>706	PrimaryExpression	1
>707	Argument	pointTesselation
>708	Identifier	pointTesselation
>709	Callee	currentCamDisplay -> drawPC
>710	PtrMemberAccess	currentCamDisplay -> drawPC
>711	Identifier	drawPC
>712	Identifier	currentCamDisplay
>713	Condition	 
>714	Identifier	showCurrentPointcloud
>715	IfStatement	if ( showCurrentCamera )
>716	ExpressionStatement	 
>717	CallExpression	currentCamDisplay -> drawCam ( 2 * lineTesselation , 0 )
>718	ArgumentList	2 * lineTesselation
>719	Argument	0
>720	PrimaryExpression	0
>721	Argument	2 * lineTesselation
>722	MultiplicativeExpression	2 * lineTesselation
>723	Identifier	lineTesselation
>724	PrimaryExpression	2
>725	Callee	currentCamDisplay -> drawCam
>726	PtrMemberAccess	currentCamDisplay -> drawCam
>727	Identifier	drawCam
>728	Identifier	currentCamDisplay
>729	Condition	 
>730	Identifier	showCurrentCamera
>731	IfStatement	if ( animationPlaybackEnabled )
>732	CompoundStatement	 
>733	IfStatement	if ( lastAnimObj != 0 )
>734	CompoundStatement	 
>735	ExpressionStatement	 
>736	AssignmentExpr	showConstraints = lastAnimObj -> showLoopClosures
>737	PtrMemberAccess	lastAnimObj -> showLoopClosures
>738	Identifier	showLoopClosures
>739	Identifier	lastAnimObj
>740	Identifier	showConstraints
>741	ExpressionStatement	 
>742	AssignmentExpr	showKFCameras = lastAnimObj -> showKeyframes
>743	PtrMemberAccess	lastAnimObj -> showKeyframes
>744	Identifier	showKeyframes
>745	Identifier	lastAnimObj
>746	Identifier	showKFCameras
>747	ExpressionStatement	 
>748	AssignmentExpr	sparsifyFactor = lastAnimObj -> sparsity
>749	PtrMemberAccess	lastAnimObj -> sparsity
>750	Identifier	sparsity
>751	Identifier	lastAnimObj
>752	Identifier	sparsifyFactor
>753	ExpressionStatement	 
>754	AssignmentExpr	minNearSupport = lastAnimObj -> neighb
>755	PtrMemberAccess	lastAnimObj -> neighb
>756	Identifier	neighb
>757	Identifier	lastAnimObj
>758	Identifier	minNearSupport
>759	ExpressionStatement	 
>760	AssignmentExpr	scaledDepthVarTH = lastAnimObj -> scaledTH
>761	PtrMemberAccess	lastAnimObj -> scaledTH
>762	Identifier	scaledTH
>763	Identifier	lastAnimObj
>764	Identifier	scaledDepthVarTH
>765	ExpressionStatement	 
>766	AssignmentExpr	absDepthVarTH = lastAnimObj -> absTH
>767	PtrMemberAccess	lastAnimObj -> absTH
>768	Identifier	absTH
>769	Identifier	lastAnimObj
>770	Identifier	absDepthVarTH
>771	Condition	 
>772	EqualityExpression	lastAnimObj != 0
>773	PrimaryExpression	0
>774	Identifier	lastAnimObj
>775	ForStatement	for ( unsigned int i = 0 ; i < animationList . size ( ) ; i ++ )
>776	CompoundStatement	 
>777	IfStatement	if ( animationList [ i ] . isSettings && accTime <= tm )
>778	ExpressionStatement	 
>779	AssignmentExpr	lastAnimObj = & ( animationList [ i ] )
>780	UnaryOp	& ( animationList [ i ] )
>781	ArrayIndexing	animationList [ i ]
>782	Identifier	i
>783	Identifier	animationList
>784	UnaryOperator	&
>785	Identifier	lastAnimObj
>786	Condition	 
>787	AndExpression	animationList [ i ] . isSettings && accTime <= tm
>788	RelationalExpression	accTime <= tm
>789	Identifier	tm
>790	Identifier	accTime
>791	MemberAccess	animationList [ i ] . isSettings
>792	Identifier	isSettings
>793	ArrayIndexing	animationList [ i ]
>794	Identifier	i
>795	Identifier	animationList
>796	ExpressionStatement	 
>797	AssignmentExpr	accTime += animationList [ i ] . duration
>798	MemberAccess	animationList [ i ] . duration
>799	Identifier	duration
>800	ArrayIndexing	animationList [ i ]
>801	Identifier	i
>802	Identifier	animationList
>803	Identifier	accTime
>804	IncDecOp	 
>805	IncDec	++
>806	Identifier	i
>807	Condition	 
>808	RelationalExpression	i < animationList . size ( )
>809	CallExpression	animationList . size ( )
>810	ArgumentList	 
>811	Callee	animationList . size
>812	MemberAccess	animationList . size
>813	Identifier	size
>814	Identifier	animationList
>815	Identifier	i
>816	ForInit	 
>817	IdentifierDeclStatement	unsigned int i = 0 ;
>818	IdentifierDecl	i = 0
>819	AssignmentExpr	i = 0
>820	PrimaryExpression	0
>821	Identifier	i
>822	Identifier	i
>823	IdentifierDeclType	unsigned int
>824	IdentifierDeclStatement	 
>825	IdentifierDecl	* lastAnimObj = 0
>826	AssignmentExpr	* lastAnimObj = 0
>827	PrimaryExpression	0
>828	Identifier	lastAnimObj
>829	Identifier	lastAnimObj
>830	IdentifierDeclType	AnimationObject *
>831	ExpressionStatement	 
>832	AssignmentExpr	accTime = 0
>833	PrimaryExpression	0
>834	Identifier	accTime
>835	ForStatement	for ( unsigned int i = 0 ; i < animationList . size ( ) ; i ++ )
>836	CompoundStatement	 
>837	ExpressionStatement	 
>838	AssignmentExpr	accTime += animationList [ i ] . duration
>839	MemberAccess	animationList [ i ] . duration
>840	Identifier	duration
>841	ArrayIndexing	animationList [ i ]
>842	Identifier	i
>843	Identifier	animationList
>844	Identifier	accTime
>845	IfStatement	if ( tm >= accTime && tm < accTime + animationList [ i ] . duration && animationList [ i ] . isFix )
>846	CompoundStatement	 
>847	ExpressionStatement	 
>848	CallExpression	printf ( \"fixFrameto %d at %.2f (%.2f to %.2f)\n\" , i , tm , kfInt -> firstTime ( ) , kfInt -> lastTime ( ) )
>849	ArgumentList	\"fixFrameto %d at %.2f (%.2f to %.2f)\n\"
>850	Argument	kfInt -> lastTime ( )
>851	CallExpression	kfInt -> lastTime ( )
>852	ArgumentList	 
>853	Callee	kfInt -> lastTime
>854	PtrMemberAccess	kfInt -> lastTime
>855	Identifier	lastTime
>856	Identifier	kfInt
>857	Argument	kfInt -> firstTime ( )
>858	CallExpression	kfInt -> firstTime ( )
>859	ArgumentList	 
>860	Callee	kfInt -> firstTime
>861	PtrMemberAccess	kfInt -> firstTime
>862	Identifier	firstTime
>863	Identifier	kfInt
>864	Argument	tm
>865	Identifier	tm
>866	Argument	i
>867	Identifier	i
>868	Argument	\"fixFrameto %d at %.2f (%.2f to %.2f)\n\"
>869	PrimaryExpression	\"fixFrameto %d at %.2f (%.2f to %.2f)\n\"
>870	Callee	printf
>871	Identifier	printf
>872	ExpressionStatement	 
>873	CallExpression	camera ( ) -> frame ( ) -> setFromMatrix ( animationList [ i ] . frame . matrix ( ) )
>874	ArgumentList	animationList [ i ] . frame . matrix ( )
>875	Argument	animationList [ i ] . frame . matrix ( )
>876	CallExpression	animationList [ i ] . frame . matrix ( )
>877	ArgumentList	 
>878	Callee	animationList [ i ] . frame . matrix
>879	MemberAccess	animationList [ i ] . frame . matrix
>880	Identifier	matrix
>881	MemberAccess	animationList [ i ] . frame
>882	Identifier	frame
>883	ArrayIndexing	animationList [ i ]
>884	Identifier	i
>885	Identifier	animationList
>886	Callee	camera ( ) -> frame ( ) -> setFromMatrix
>887	PtrMemberAccess	camera ( ) -> frame ( ) -> setFromMatrix
>888	Identifier	setFromMatrix
>889	CallExpression	camera ( ) -> frame ( )
>890	ArgumentList	 
>891	Callee	camera ( ) -> frame
>892	PtrMemberAccess	camera ( ) -> frame
>893	Identifier	frame
>894	CallExpression	camera ( )
>895	ArgumentList	 
>896	Callee	camera
>897	Identifier	camera
>898	Condition	 
>899	AndExpression	tm >= accTime && tm < accTime + animationList [ i ] . duration && animationList [ i ] . isFix
>900	AndExpression	tm < accTime + animationList [ i ] . duration && animationList [ i ] . isFix
>901	MemberAccess	animationList [ i ] . isFix
>902	Identifier	isFix
>903	ArrayIndexing	animationList [ i ]
>904	Identifier	i
>905	Identifier	animationList
>906	RelationalExpression	tm < accTime + animationList [ i ] . duration
>907	AdditiveExpression	accTime + animationList [ i ] . duration
>908	MemberAccess	animationList [ i ] . duration
>909	Identifier	duration
>910	ArrayIndexing	animationList [ i ]
>911	Identifier	i
>912	Identifier	animationList
>913	Identifier	accTime
>914	Identifier	tm
>915	RelationalExpression	tm >= accTime
>916	Identifier	accTime
>917	Identifier	tm
>918	IncDecOp	 
>919	IncDec	++
>920	Identifier	i
>921	Condition	 
>922	RelationalExpression	i < animationList . size ( )
>923	CallExpression	animationList . size ( )
>924	ArgumentList	 
>925	Callee	animationList . size
>926	MemberAccess	animationList . size
>927	Identifier	size
>928	Identifier	animationList
>929	Identifier	i
>930	ForInit	 
>931	IdentifierDeclStatement	unsigned int i = 0 ;
>932	IdentifierDecl	i = 0
>933	AssignmentExpr	i = 0
>934	PrimaryExpression	0
>935	Identifier	i
>936	Identifier	i
>937	IdentifierDeclType	unsigned int
>938	IdentifierDeclStatement	 
>939	IdentifierDecl	accTime = 0
>940	AssignmentExpr	accTime = 0
>941	PrimaryExpression	0
>942	Identifier	accTime
>943	Identifier	accTime
>944	IdentifierDeclType	double
>945	ExpressionStatement	 
>946	CallExpression	camera ( ) -> frame ( ) -> setFromMatrix ( kfInt -> frame ( ) -> matrix ( ) )
>947	ArgumentList	kfInt -> frame ( ) -> matrix ( )
>948	Argument	kfInt -> frame ( ) -> matrix ( )
>949	CallExpression	kfInt -> frame ( ) -> matrix ( )
>950	ArgumentList	 
>951	Callee	kfInt -> frame ( ) -> matrix
>952	PtrMemberAccess	kfInt -> frame ( ) -> matrix
>953	Identifier	matrix
>954	CallExpression	kfInt -> frame ( )
>955	ArgumentList	 
>956	Callee	kfInt -> frame
>957	PtrMemberAccess	kfInt -> frame
>958	Identifier	frame
>959	Identifier	kfInt
>960	Callee	camera ( ) -> frame ( ) -> setFromMatrix
>961	PtrMemberAccess	camera ( ) -> frame ( ) -> setFromMatrix
>962	Identifier	setFromMatrix
>963	CallExpression	camera ( ) -> frame ( )
>964	ArgumentList	 
>965	Callee	camera ( ) -> frame
>966	PtrMemberAccess	camera ( ) -> frame
>967	Identifier	frame
>968	CallExpression	camera ( )
>969	ArgumentList	 
>970	Callee	camera
>971	Identifier	camera
>972	ExpressionStatement	 
>973	CallExpression	kfInt -> interpolateAtTime ( tm )
>974	ArgumentList	tm
>975	Argument	tm
>976	Identifier	tm
>977	Callee	kfInt -> interpolateAtTime
>978	PtrMemberAccess	kfInt -> interpolateAtTime
>979	Identifier	interpolateAtTime
>980	Identifier	kfInt
>981	ExpressionStatement	 
>982	CallExpression	printf ( \"anim at %.2f (%.2f to %.2f)\n\" , tm , kfInt -> firstTime ( ) , kfInt -> lastTime ( ) )
>983	ArgumentList	\"anim at %.2f (%.2f to %.2f)\n\"
>984	Argument	kfInt -> lastTime ( )
>985	CallExpression	kfInt -> lastTime ( )
>986	ArgumentList	 
>987	Callee	kfInt -> lastTime
>988	PtrMemberAccess	kfInt -> lastTime
>989	Identifier	lastTime
>990	Identifier	kfInt
>991	Argument	kfInt -> firstTime ( )
>992	CallExpression	kfInt -> firstTime ( )
>993	ArgumentList	 
>994	Callee	kfInt -> firstTime
>995	PtrMemberAccess	kfInt -> firstTime
>996	Identifier	firstTime
>997	Identifier	kfInt
>998	Argument	tm
>999	Identifier	tm
>1000	Argument	\"anim at %.2f (%.2f to %.2f)\n\"
>1001	PrimaryExpression	\"anim at %.2f (%.2f to %.2f)\n\"
>1002	Callee	printf
>1003	Identifier	printf
>1004	IfStatement	if ( tm < kfInt -> firstTime ( ) )
>1005	ExpressionStatement	 
>1006	AssignmentExpr	tm = kfInt -> firstTime ( )
>1007	CallExpression	kfInt -> firstTime ( )
>1008	ArgumentList	 
>1009	Callee	kfInt -> firstTime
>1010	PtrMemberAccess	kfInt -> firstTime
>1011	Identifier	firstTime
>1012	Identifier	kfInt
>1013	Identifier	tm
>1014	Condition	 
>1015	RelationalExpression	tm < kfInt -> firstTime ( )
>1016	CallExpression	kfInt -> firstTime ( )
>1017	ArgumentList	 
>1018	Callee	kfInt -> firstTime
>1019	PtrMemberAccess	kfInt -> firstTime
>1020	Identifier	firstTime
>1021	Identifier	kfInt
>1022	Identifier	tm
>1023	IfStatement	if ( tm > kfInt -> lastTime ( ) )
>1024	CompoundStatement	 
>1025	ExpressionStatement	 
>1026	AssignmentExpr	tm = kfInt -> lastTime ( )
>1027	CallExpression	kfInt -> lastTime ( )
>1028	ArgumentList	 
>1029	Callee	kfInt -> lastTime
>1030	PtrMemberAccess	kfInt -> lastTime
>1031	Identifier	lastTime
>1032	Identifier	kfInt
>1033	Identifier	tm
>1034	ExpressionStatement	 
>1035	AssignmentExpr	animationPlaybackEnabled = false
>1036	Identifier	false
>1037	Identifier	animationPlaybackEnabled
>1038	Condition	 
>1039	RelationalExpression	tm > kfInt -> lastTime ( )
>1040	CallExpression	kfInt -> lastTime ( )
>1041	ArgumentList	 
>1042	Callee	kfInt -> lastTime
>1043	PtrMemberAccess	kfInt -> lastTime
>1044	Identifier	lastTime
>1045	Identifier	kfInt
>1046	Identifier	tm
>1047	IdentifierDeclStatement	 
>1048	IdentifierDecl	tm = ros 
>1049	AssignmentExpr	tm = ros 
>1050	AdditiveExpression	ros 
>1051	Identifier	animationPlaybackTime
>1052	CallExpression	ros 
>1053	ArgumentList	 
>1054	Callee	ros 
>1055	MemberAccess	ros 
>1056	Identifier	toSec
>1057	CallExpression	ros 
>1058	ArgumentList	 
>1059	Callee	ros 
>1060	Identifier	ros 
>1061	Identifier	tm
>1062	Identifier	tm
>1063	IdentifierDeclType	double
>1064	Condition	 
>1065	Identifier	animationPlaybackEnabled
>1066	ExpressionStatement	 
>1067	CallExpression	glPushMatrix ( )
>1068	ArgumentList	 
>1069	Callee	glPushMatrix
>1070	Identifier	glPushMatrix
>1071	IfStatement	if ( resetRequested )
>1072	CompoundStatement	 
>1073	ExpressionStatement	 
>1074	AssignmentExpr	resetRequested = false
>1075	Identifier	false
>1076	Identifier	resetRequested
>1077	ExpressionStatement	 
>1078	CallExpression	reset ( )
>1079	ArgumentList	 
>1080	Callee	reset
>1081	Identifier	reset
>1082	Condition	 
>1083	Identifier	resetRequested
>1084	ExpressionStatement	 
>1085	CallExpression	meddleMutex . lock ( )
>1086	ArgumentList	 
>1087	Callee	meddleMutex . lock
>1088	MemberAccess	meddleMutex . lock
>1089	Identifier	lock
>1090	Identifier	meddleMutex
>1156	FunctionDef	PointCloudViewer 
>1157	ParameterList	QKeyEvent * e
>1158	Parameter	 
>1159	Identifier	e
>1160	ParameterType	QKeyEvent *
>1161	ReturnType	void
>1162	CompoundStatement	 
>1167	FunctionDef	PointCloudViewer 
>1168	ParameterList	 
>1169	ReturnType	void
>1170	CompoundStatement	 
>1171	ExpressionStatement	 
>1172	CallExpression	this -> setFixedSize ( 1600 , 900 )
>1173	ArgumentList	1600
>1174	Argument	900
>1175	PrimaryExpression	900
>1176	Argument	1600
>1177	PrimaryExpression	1600
>1178	Callee	this -> setFixedSize
>1179	PtrMemberAccess	this -> setFixedSize
>1180	Identifier	setFixedSize
>1181	Identifier	this
>1186	FunctionDef	PointCloudViewer 
>1187	ParameterList	 
>1188	ReturnType	void
>1189	CompoundStatement	 
>1190	ExpressionStatement	 
>1191	CallExpression	printf ( \"made animation with %d keyframes, spanning %f s!\n\" , kfInt -> numberOfKeyFrames ( ) , tm )
>1192	ArgumentList	\"made animation with %d keyframes, spanning %f s!\n\"
>1193	Argument	tm
>1194	Identifier	tm
>1195	Argument	kfInt -> numberOfKeyFrames ( )
>1196	CallExpression	kfInt -> numberOfKeyFrames ( )
>1197	ArgumentList	 
>1198	Callee	kfInt -> numberOfKeyFrames
>1199	PtrMemberAccess	kfInt -> numberOfKeyFrames
>1200	Identifier	numberOfKeyFrames
>1201	Identifier	kfInt
>1202	Argument	\"made animation with %d keyframes, spanning %f s!\n\"
>1203	PrimaryExpression	\"made animation with %d keyframes, spanning %f s!\n\"
>1204	Callee	printf
>1205	Identifier	printf
>1206	ForStatement	for ( unsigned int i = 0 ; i < animationList . size ( ) ; i ++ )
>1207	CompoundStatement	 
>1208	IfStatement	if ( ! animationList [ i ] . isSettings )
>1209	CompoundStatement	 
>1210	ExpressionStatement	 
>1211	AssignmentExpr	tm += animationList [ i ] . duration
>1212	MemberAccess	animationList [ i ] . duration
>1213	Identifier	duration
>1214	ArrayIndexing	animationList [ i ]
>1215	Identifier	i
>1216	Identifier	animationList
>1217	Identifier	tm
>1218	ExpressionStatement	 
>1219	CallExpression	kfInt -> addKeyFrame ( & animationList [ i ] . frame , tm )
>1220	ArgumentList	& animationList [ i ] . frame
>1221	Argument	tm
>1222	Identifier	tm
>1223	Argument	& animationList [ i ] . frame
>1224	UnaryOp	& animationList [ i ] . frame
>1225	MemberAccess	animationList [ i ] . frame
>1226	Identifier	frame
>1227	ArrayIndexing	animationList [ i ]
>1228	Identifier	i
>1229	Identifier	animationList
>1230	UnaryOperator	&
>1231	Callee	kfInt -> addKeyFrame
>1232	PtrMemberAccess	kfInt -> addKeyFrame
>1233	Identifier	addKeyFrame
>1234	Identifier	kfInt
>1235	Condition	 
>1236	UnaryOp	! animationList [ i ] . isSettings
>1237	MemberAccess	animationList [ i ] . isSettings
>1238	Identifier	isSettings
>1239	ArrayIndexing	animationList [ i ]
>1240	Identifier	i
>1241	Identifier	animationList
>1242	UnaryOperator	!
>1243	IncDecOp	 
>1244	IncDec	++
>1245	Identifier	i
>1246	Condition	 
>1247	RelationalExpression	i < animationList . size ( )
>1248	CallExpression	animationList . size ( )
>1249	ArgumentList	 
>1250	Callee	animationList . size
>1251	MemberAccess	animationList . size
>1252	Identifier	size
>1253	Identifier	animationList
>1254	Identifier	i
>1255	ForInit	 
>1256	IdentifierDeclStatement	unsigned int i = 0 ;
>1257	IdentifierDecl	i = 0
>1258	AssignmentExpr	i = 0
>1259	PrimaryExpression	0
>1260	Identifier	i
>1261	Identifier	i
>1262	IdentifierDeclType	unsigned int
>1263	IdentifierDeclStatement	 
>1264	IdentifierDecl	tm = 0
>1265	AssignmentExpr	tm = 0
>1266	PrimaryExpression	0
>1267	Identifier	tm
>1268	Identifier	tm
>1269	IdentifierDeclType	float
>1270	ExpressionStatement	 
>1271	CallExpression	std 
>1272	ArgumentList	animationList . begin ( )
>1273	Argument	animationList . end ( )
>1274	CallExpression	animationList . end ( )
>1275	ArgumentList	 
>1276	Callee	animationList . end
>1277	MemberAccess	animationList . end
>1278	Identifier	end
>1279	Identifier	animationList
>1280	Argument	animationList . begin ( )
>1281	CallExpression	animationList . begin ( )
>1282	ArgumentList	 
>1283	Callee	animationList . begin
>1284	MemberAccess	animationList . begin
>1285	Identifier	begin
>1286	Identifier	animationList
>1287	Callee	std 
>1288	Identifier	std 
>1289	ExpressionStatement	 
>1290	AssignmentExpr	kfInt = new qglviewer 
>1291	UnaryExpression	new qglviewer 
>1292	Identifier	kfInt
>1293	ExpressionStatement	 
>1294	Identifier	kfInt
>1295	Statement	 
>1315	FunctionDef	PointCloudViewer 
>1316	ParameterList	QKeyEvent * e
>1317	Parameter	 
>1318	Identifier	e
>1319	ParameterType	QKeyEvent *
>1320	ReturnType	void
>1321	CompoundStatement	 
>1322	SwitchStatement	switch ( e -> key ( ) )
>1323	CompoundStatement	 
>1324	BreakStatement	 
>1325	ExpressionStatement	 
>1326	CallExpression	QGLViewer 
>1327	ArgumentList	e
>1328	Argument	e
>1329	Identifier	e
>1330	Callee	QGLViewer 
>1331	Identifier	QGLViewer 
>1332	Label	 
>1333	Identifier	default
>1334	BreakStatement	 
>1335	ExpressionStatement	 
>1336	AssignmentExpr	graphDisplay -> printNumbers = true
>1337	Identifier	true
>1338	PtrMemberAccess	graphDisplay -> printNumbers
>1339	Identifier	printNumbers
>1340	Identifier	graphDisplay
>1341	Label	 
>1342	Identifier	Qt 
>1343	BreakStatement	 
>1344	ExpressionStatement	 
>1345	AssignmentExpr	graphDisplay -> flushPointcloud = true
>1346	Identifier	true
>1347	PtrMemberAccess	graphDisplay -> flushPointcloud
>1348	Identifier	flushPointcloud
>1349	Identifier	graphDisplay
>1350	Label	 
>1351	Identifier	Qt 
>1352	BreakStatement	 
>1353	IfStatement	if ( animationPlaybackEnabled )
>1354	ElseStatement	else
>1355	CompoundStatement	 
>1356	ExpressionStatement	 
>1357	AssignmentExpr	animationPlaybackTime = ros 
>1358	CallExpression	ros 
>1359	ArgumentList	 
>1360	Callee	ros 
>1361	MemberAccess	ros 
>1362	Identifier	toSec
>1363	CallExpression	ros 
>1364	ArgumentList	 
>1365	Callee	ros 
>1366	Identifier	ros 
>1367	Identifier	animationPlaybackTime
>1368	ExpressionStatement	 
>1369	AssignmentExpr	animationPlaybackEnabled = true
>1370	Identifier	true
>1371	Identifier	animationPlaybackEnabled
>1372	CompoundStatement	 
>1373	ExpressionStatement	 
>1374	AssignmentExpr	animationPlaybackEnabled = false
>1375	Identifier	false
>1376	Identifier	animationPlaybackEnabled
>1377	Condition	 
>1378	Identifier	animationPlaybackEnabled
>1379	Label	 
>1380	Identifier	Qt 
>1381	BreakStatement	 
>1382	ExpressionStatement	 
>1383	AssignmentExpr	customAnimationEnabled = ! customAnimationEnabled
>1384	UnaryOp	! customAnimationEnabled
>1385	Identifier	customAnimationEnabled
>1386	UnaryOperator	!
>1387	Identifier	customAnimationEnabled
>1388	IfStatement	if ( customAnimationEnabled )
>1389	ElseStatement	else
>1390	ExpressionStatement	 
>1391	CallExpression	printf ( \"ENABLE custom animation!\n\" )
>1392	ArgumentList	\"ENABLE custom animation!\n\"
>1393	Argument	\"ENABLE custom animation!\n\"
>1394	PrimaryExpression	\"ENABLE custom animation!\n\"
>1395	Callee	printf
>1396	Identifier	printf
>1397	ExpressionStatement	 
>1398	CallExpression	printf ( \"DISABLE custom animation!\n)\" )
>1399	ArgumentList	\"DISABLE custom animation!\n)\"
>1400	Argument	\"DISABLE custom animation!\n)\"
>1401	PrimaryExpression	\"DISABLE custom animation!\n)\"
>1402	Callee	printf
>1403	Identifier	printf
>1404	Condition	 
>1405	Identifier	customAnimationEnabled
>1406	Label	 
>1407	Identifier	Qt 
>1408	BreakStatement	 
>1409	CompoundStatement	 
>1410	ExpressionStatement	 
>1411	CallExpression	remakeAnimation ( )
>1412	ArgumentList	 
>1413	Callee	remakeAnimation
>1414	Identifier	remakeAnimation
>1415	ExpressionStatement	 
>1416	CallExpression	printf ( \"loaded animation list! (%d items)!\n\" , ( int ) animationList . size ( ) )
>1417	ArgumentList	\"loaded animation list! (%d items)!\n\"
>1418	Argument	( int ) animationList . size ( )
>1419	CastExpression	( int ) animationList . size ( )
>1420	CallExpression	animationList . size ( )
>1421	ArgumentList	 
>1422	Callee	animationList . size
>1423	MemberAccess	animationList . size
>1424	Identifier	size
>1425	Identifier	animationList
>1426	CastTarget	int
>1427	Argument	\"loaded animation list! (%d items)!\n\"
>1428	PrimaryExpression	\"loaded animation list! (%d items)!\n\"
>1429	Callee	printf
>1430	Identifier	printf
>1431	ExpressionStatement	 
>1432	CallExpression	meddleMutex . unlock ( )
>1433	ArgumentList	 
>1434	Callee	meddleMutex . unlock
>1435	MemberAccess	meddleMutex . unlock
>1436	Identifier	unlock
>1437	Identifier	meddleMutex
>1438	ExpressionStatement	 
>1439	CallExpression	myfile . close ( )
>1440	ArgumentList	 
>1441	Callee	myfile . close
>1442	MemberAccess	myfile . close
>1443	Identifier	close
>1444	Identifier	myfile
>1445	IfStatement	if ( myfile . is_open ( ) )
>1446	ElseStatement	else
>1447	ExpressionStatement	 
>1448	ShiftExpression	std 
>1449	PrimaryExpression	\"Unable to open file\"
>1450	Identifier	std 
>1451	CompoundStatement	 
>1452	ExpressionStatement	 
>1453	CallExpression	myfile . close ( )
>1454	ArgumentList	 
>1455	Callee	myfile . close
>1456	MemberAccess	myfile . close
>1457	Identifier	close
>1458	Identifier	myfile
>1459	WhileStatement	while ( getline ( myfile , line ) )
>1460	CompoundStatement	 
>1461	IfStatement	if ( ! ( line [ 0 ] == '#' ) )
>1462	ExpressionStatement	 
>1463	CallExpression	animationList . push_back ( AnimationObject ( line ) )
>1464	ArgumentList	AnimationObject ( line )
>1465	Argument	AnimationObject ( line )
>1466	CallExpression	AnimationObject ( line )
>1467	ArgumentList	line
>1468	Argument	line
>1469	Identifier	line
>1470	Callee	AnimationObject
>1471	Identifier	AnimationObject
>1472	Callee	animationList . push_back
>1473	MemberAccess	animationList . push_back
>1474	Identifier	push_back
>1475	Identifier	animationList
>1476	Condition	 
>1477	UnaryOp	! ( line [ 0 ] == '#' )
>1478	EqualityExpression	line [ 0 ] == '#'
>1479	PrimaryExpression	'#'
>1480	ArrayIndexing	line [ 0 ]
>1481	PrimaryExpression	0
>1482	Identifier	line
>1483	UnaryOperator	!
>1484	Condition	 
>1485	CallExpression	getline ( myfile , line )
>1486	ArgumentList	myfile
>1487	Argument	line
>1488	Identifier	line
>1489	Argument	myfile
>1490	Identifier	myfile
>1491	Callee	getline
>1492	Identifier	getline
>1493	Condition	 
>1494	CallExpression	myfile . is_open ( )
>1495	ArgumentList	 
>1496	Callee	myfile . is_open
>1497	MemberAccess	myfile . is_open
>1498	Identifier	is_open
>1499	Identifier	myfile
>1500	ExpressionStatement	 
>1501	CallExpression	myfile . open ( \"animationPath.txt\" )
>1502	ArgumentList	\"animationPath.txt\"
>1503	Argument	\"animationPath.txt\"
>1504	PrimaryExpression	\"animationPath.txt\"
>1505	Callee	myfile . open
>1506	MemberAccess	myfile . open
>1507	Identifier	open
>1508	Identifier	myfile
>1509	IdentifierDeclStatement	 
>1510	IdentifierDecl	line
>1511	Identifier	line
>1512	IdentifierDeclType	std 
>1513	IdentifierDeclStatement	 
>1514	IdentifierDecl	myfile
>1515	Identifier	myfile
>1516	IdentifierDeclType	std 
>1517	ExpressionStatement	 
>1518	CallExpression	animationList . clear ( )
>1519	ArgumentList	 
>1520	Callee	animationList . clear
>1521	MemberAccess	animationList . clear
>1522	Identifier	clear
>1523	Identifier	animationList
>1524	ExpressionStatement	 
>1525	CallExpression	meddleMutex . lock ( )
>1526	ArgumentList	 
>1527	Callee	meddleMutex . lock
>1528	MemberAccess	meddleMutex . lock
>1529	Identifier	lock
>1530	Identifier	meddleMutex
>1531	Label	 
>1532	Identifier	Qt 
>1533	BreakStatement	 
>1534	CompoundStatement	 
>1535	ExpressionStatement	 
>1536	CallExpression	printf ( \"saved animation list (%d items)!\n\" , ( int ) animationList . size ( ) )
>1537	ArgumentList	\"saved animation list (%d items)!\n\"
>1538	Argument	( int ) animationList . size ( )
>1539	CastExpression	( int ) animationList . size ( )
>1540	CallExpression	animationList . size ( )
>1541	ArgumentList	 
>1542	Callee	animationList . size
>1543	MemberAccess	animationList . size
>1544	Identifier	size
>1545	Identifier	animationList
>1546	CastTarget	int
>1547	Argument	\"saved animation list (%d items)!\n\"
>1548	PrimaryExpression	\"saved animation list (%d items)!\n\"
>1549	Callee	printf
>1550	Identifier	printf
>1551	ExpressionStatement	 
>1552	CallExpression	meddleMutex . unlock ( )
>1553	ArgumentList	 
>1554	Callee	meddleMutex . unlock
>1555	MemberAccess	meddleMutex . unlock
>1556	Identifier	unlock
>1557	Identifier	meddleMutex
>1558	ExpressionStatement	 
>1559	CallExpression	myfile . close ( )
>1560	ArgumentList	 
>1561	Callee	myfile . close
>1562	MemberAccess	myfile . close
>1563	Identifier	close
>1564	Identifier	myfile
>1565	ForStatement	for ( unsigned int i = 0 ; i < animationList . size ( ) ; i ++ )
>1566	CompoundStatement	 
>1567	ExpressionStatement	 
>1568	ShiftExpression	myfile << animationList [ i ] . toString ( ) << \"\n\"
>1569	ShiftExpression	animationList [ i ] . toString ( ) << \"\n\"
>1570	PrimaryExpression	\"\n\"
>1571	CallExpression	animationList [ i ] . toString ( )
>1572	ArgumentList	 
>1573	Callee	animationList [ i ] . toString
>1574	MemberAccess	animationList [ i ] . toString
>1575	Identifier	toString
>1576	ArrayIndexing	animationList [ i ]
>1577	Identifier	i
>1578	Identifier	animationList
>1579	Identifier	myfile
>1580	IncDecOp	 
>1581	IncDec	++
>1582	Identifier	i
>1583	Condition	 
>1584	RelationalExpression	i < animationList . size ( )
>1585	CallExpression	animationList . size ( )
>1586	ArgumentList	 
>1587	Callee	animationList . size
>1588	MemberAccess	animationList . size
>1589	Identifier	size
>1590	Identifier	animationList
>1591	Identifier	i
>1592	ForInit	 
>1593	IdentifierDeclStatement	unsigned int i = 0 ;
>1594	IdentifierDecl	i = 0
>1595	AssignmentExpr	i = 0
>1596	PrimaryExpression	0
>1597	Identifier	i
>1598	Identifier	i
>1599	IdentifierDeclType	unsigned int
>1600	ExpressionStatement	 
>1601	CallExpression	myfile . open ( \"animationPath.txt\" )
>1602	ArgumentList	\"animationPath.txt\"
>1603	Argument	\"animationPath.txt\"
>1604	PrimaryExpression	\"animationPath.txt\"
>1605	Callee	myfile . open
>1606	MemberAccess	myfile . open
>1607	Identifier	open
>1608	Identifier	myfile
>1609	IdentifierDeclStatement	 
>1610	IdentifierDecl	myfile
>1611	Identifier	myfile
>1612	IdentifierDeclType	std 
>1613	ExpressionStatement	 
>1614	CallExpression	meddleMutex . lock ( )
>1615	ArgumentList	 
>1616	Callee	meddleMutex . lock
>1617	MemberAccess	meddleMutex . lock
>1618	Identifier	lock
>1619	Identifier	meddleMutex
>1620	Label	 
>1621	Identifier	Qt 
>1622	BreakStatement	 
>1623	ExpressionStatement	 
>1624	CallExpression	remakeAnimation ( )
>1625	ArgumentList	 
>1626	Callee	remakeAnimation
>1627	Identifier	remakeAnimation
>1628	ExpressionStatement	 
>1629	CallExpression	printf ( \"resetted animation list!\n\" )
>1630	ArgumentList	\"resetted animation list!\n\"
>1631	Argument	\"resetted animation list!\n\"
>1632	PrimaryExpression	\"resetted animation list!\n\"
>1633	Callee	printf
>1634	Identifier	printf
>1635	ExpressionStatement	 
>1636	CallExpression	meddleMutex . unlock ( )
>1637	ArgumentList	 
>1638	Callee	meddleMutex . unlock
>1639	MemberAccess	meddleMutex . unlock
>1640	Identifier	unlock
>1641	Identifier	meddleMutex
>1642	ExpressionStatement	 
>1643	CallExpression	animationList . clear ( )
>1644	ArgumentList	 
>1645	Callee	animationList . clear
>1646	MemberAccess	animationList . clear
>1647	Identifier	clear
>1648	Identifier	animationList
>1649	ExpressionStatement	 
>1650	CallExpression	meddleMutex . lock ( )
>1651	ArgumentList	 
>1652	Callee	meddleMutex . lock
>1653	MemberAccess	meddleMutex . lock
>1654	Identifier	lock
>1655	Identifier	meddleMutex
>1656	Label	 
>1657	Identifier	Qt 
>1658	BreakStatement	 
>1659	ExpressionStatement	 
>1660	CallExpression	remakeAnimation ( )
>1661	ArgumentList	 
>1662	Callee	remakeAnimation
>1663	Identifier	remakeAnimation
>1664	ExpressionStatement	 
>1665	CallExpression	printf ( \"added KF
>1666	ArgumentList	\"added KF
>1667	Argument	animationList . back ( ) . toString ( ) . c_str ( )
>1668	CallExpression	animationList . back ( ) . toString ( ) . c_str ( )
>1669	ArgumentList	 
>1670	Callee	animationList . back ( ) . toString ( ) . c_str
>1671	MemberAccess	animationList . back ( ) . toString ( ) . c_str
>1672	Identifier	c_str
>1673	CallExpression	animationList . back ( ) . toString ( )
>1674	ArgumentList	 
>1675	Callee	animationList . back ( ) . toString
>1676	MemberAccess	animationList . back ( ) . toString
>1677	Identifier	toString
>1678	CallExpression	animationList . back ( )
>1679	ArgumentList	 
>1680	Callee	animationList . back
>1681	MemberAccess	animationList . back
>1682	Identifier	back
>1683	Identifier	animationList
>1684	Argument	\"added KF
>1685	PrimaryExpression	\"added KF
>1686	Callee	printf
>1687	Identifier	printf
>1688	ExpressionStatement	 
>1689	CallExpression	meddleMutex . unlock ( )
>1690	ArgumentList	 
>1691	Callee	meddleMutex . unlock
>1692	MemberAccess	meddleMutex . unlock
>1693	Identifier	unlock
>1694	Identifier	meddleMutex
>1695	ExpressionStatement	 
>1696	CallExpression	animationList . back ( ) . frame . setPosition ( x , y , z )
>1697	ArgumentList	x
>1698	Argument	z
>1699	Identifier	z
>1700	Argument	y
>1701	Identifier	y
>1702	Argument	x
>1703	Identifier	x
>1704	Callee	animationList . back ( ) . frame . setPosition
>1705	MemberAccess	animationList . back ( ) . frame . setPosition
>1706	Identifier	setPosition
>1707	MemberAccess	animationList . back ( ) . frame
>1708	Identifier	frame
>1709	CallExpression	animationList . back ( )
>1710	ArgumentList	 
>1711	Callee	animationList . back
>1712	MemberAccess	animationList . back
>1713	Identifier	back
>1714	Identifier	animationList
>1715	ExpressionStatement	 
>1716	CallExpression	animationList . push_back ( AnimationObject ( false , lastAnimTime , 2 , qglviewer 
>1717	ArgumentList	AnimationObject ( false , lastAnimTime , 2 , qglviewer 
>1718	Argument	AnimationObject ( false , lastAnimTime , 2 , qglviewer 
>1719	CallExpression	AnimationObject ( false , lastAnimTime , 2 , qglviewer 
>1720	ArgumentList	false
>1721	Argument	qglviewer 
>1722	CallExpression	qglviewer 
>1723	ArgumentList	qglviewer 
>1724	Argument	camera ( ) -> frame ( ) -> orientation ( )
>1725	CallExpression	camera ( ) -> frame ( ) -> orientation ( )
>1726	ArgumentList	 
>1727	Callee	camera ( ) -> frame ( ) -> orientation
>1728	PtrMemberAccess	camera ( ) -> frame ( ) -> orientation
>1729	Identifier	orientation
>1730	CallExpression	camera ( ) -> frame ( )
>1731	ArgumentList	 
>1732	Callee	camera ( ) -> frame
>1733	PtrMemberAccess	camera ( ) -> frame
>1734	Identifier	frame
>1735	CallExpression	camera ( )
>1736	ArgumentList	 
>1737	Callee	camera
>1738	Identifier	camera
>1739	Argument	qglviewer 
>1740	CallExpression	qglviewer 
>1741	ArgumentList	0
>1742	Argument	0
>1743	PrimaryExpression	0
>1744	Argument	0
>1745	PrimaryExpression	0
>1746	Argument	0
>1747	PrimaryExpression	0
>1748	Callee	qglviewer 
>1749	Identifier	qglviewer 
>1750	Callee	qglviewer 
>1751	Identifier	qglviewer 
>1752	Argument	2
>1753	PrimaryExpression	2
>1754	Argument	lastAnimTime
>1755	Identifier	lastAnimTime
>1756	Argument	false
>1757	Identifier	false
>1758	Callee	AnimationObject
>1759	Identifier	AnimationObject
>1760	Callee	animationList . push_back
>1761	MemberAccess	animationList . push_back
>1762	Identifier	push_back
>1763	Identifier	animationList
>1764	ExpressionStatement	 
>1765	CallExpression	camera ( ) -> frame ( ) -> getPosition ( x , y , z )
>1766	ArgumentList	x
>1767	Argument	z
>1768	Identifier	z
>1769	Argument	y
>1770	Identifier	y
>1771	Argument	x
>1772	Identifier	x
>1773	Callee	camera ( ) -> frame ( ) -> getPosition
>1774	PtrMemberAccess	camera ( ) -> frame ( ) -> getPosition
>1775	Identifier	getPosition
>1776	CallExpression	camera ( ) -> frame ( )
>1777	ArgumentList	 
>1778	Callee	camera ( ) -> frame
>1779	PtrMemberAccess	camera ( ) -> frame
>1780	Identifier	frame
>1781	CallExpression	camera ( )
>1782	ArgumentList	 
>1783	Callee	camera
>1784	Identifier	camera
>1785	IdentifierDeclStatement	 
>1786	IdentifierDecl	z
>1787	Identifier	z
>1788	IdentifierDeclType	float
>1789	IdentifierDecl	y
>1790	Identifier	y
>1791	IdentifierDeclType	float
>1792	IdentifierDecl	x
>1793	Identifier	x
>1794	IdentifierDeclType	float
>1795	ExpressionStatement	 
>1796	CallExpression	meddleMutex . lock ( )
>1797	ArgumentList	 
>1798	Callee	meddleMutex . lock
>1799	MemberAccess	meddleMutex . lock
>1800	Identifier	lock
>1801	Identifier	meddleMutex
>1802	Label	 
>1803	Identifier	Qt 
>1804	BreakStatement	 
>1805	ExpressionStatement	 
>1806	CallExpression	printf ( \"added St
>1807	ArgumentList	\"added St
>1808	Argument	animationList . back ( ) . toString ( ) . c_str ( )
>1809	CallExpression	animationList . back ( ) . toString ( ) . c_str ( )
>1810	ArgumentList	 
>1811	Callee	animationList . back ( ) . toString ( ) . c_str
>1812	MemberAccess	animationList . back ( ) . toString ( ) . c_str
>1813	Identifier	c_str
>1814	CallExpression	animationList . back ( ) . toString ( )
>1815	ArgumentList	 
>1816	Callee	animationList . back ( ) . toString
>1817	MemberAccess	animationList . back ( ) . toString
>1818	Identifier	toString
>1819	CallExpression	animationList . back ( )
>1820	ArgumentList	 
>1821	Callee	animationList . back
>1822	MemberAccess	animationList . back
>1823	Identifier	back
>1824	Identifier	animationList
>1825	Argument	\"added St
>1826	PrimaryExpression	\"added St
>1827	Callee	printf
>1828	Identifier	printf
>1829	ExpressionStatement	 
>1830	CallExpression	meddleMutex . unlock ( )
>1831	ArgumentList	 
>1832	Callee	meddleMutex . unlock
>1833	MemberAccess	meddleMutex . unlock
>1834	Identifier	unlock
>1835	Identifier	meddleMutex
>1836	ExpressionStatement	 
>1837	CallExpression	animationList . push_back ( AnimationObject ( true , lastAnimTime , 0 ) )
>1838	ArgumentList	AnimationObject ( true , lastAnimTime , 0 )
>1839	Argument	AnimationObject ( true , lastAnimTime , 0 )
>1840	CallExpression	AnimationObject ( true , lastAnimTime , 0 )
>1841	ArgumentList	true
>1842	Argument	0
>1843	PrimaryExpression	0
>1844	Argument	lastAnimTime
>1845	Identifier	lastAnimTime
>1846	Argument	true
>1847	Identifier	true
>1848	Callee	AnimationObject
>1849	Identifier	AnimationObject
>1850	Callee	animationList . push_back
>1851	MemberAccess	animationList . push_back
>1852	Identifier	push_back
>1853	Identifier	animationList
>1854	ExpressionStatement	 
>1855	CallExpression	meddleMutex . lock ( )
>1856	ArgumentList	 
>1857	Callee	meddleMutex . lock
>1858	MemberAccess	meddleMutex . lock
>1859	Identifier	lock
>1860	Identifier	meddleMutex
>1861	Label	 
>1862	Identifier	Qt 
>1863	BreakStatement	 
>1864	ExpressionStatement	 
>1865	AssignmentExpr	resetRequested = true
>1866	Identifier	true
>1867	Identifier	resetRequested
>1868	Label	 
>1869	Identifier	Qt 
>1870	BreakStatement	 
>1871	ExpressionStatement	 
>1872	CallExpression	setToVideoSize ( )
>1873	ArgumentList	 
>1874	Callee	setToVideoSize
>1875	Identifier	setToVideoSize
>1876	Label	 
>1877	Identifier	Qt 
>1878	Condition	 
>1879	CallExpression	e -> key ( )
>1880	ArgumentList	 
>1881	Callee	e -> key
>1882	PtrMemberAccess	e -> key
>1883	Identifier	key
>1884	Identifier	e
<3=6,5,4
<6=152,143,134,125,116,107,98,89,80,71,67,63,32,28,24,12,7
<7=8
<8=10,9
<10=11
<12=13
<13=22,14
<14=15
<15=16
<16=20,17
<17=18
<18=19
<20=21
<22=23
<24=25
<25=27,26
<28=29
<29=31,30
<32=55,51,48,33
<33=42,34
<34=35
<35=39,36
<36=38,37
<39=41,40
<42=43
<43=45,44
<45=47,46
<48=50,49
<51=52
<52=54,53
<55=56
<56=57
<57=62,61,58
<58=60,59
<63=64
<64=66,65
<67=68
<68=70,69
<71=72
<72=78,73
<73=76,74
<74=75
<76=77
<78=79
<80=81
<81=87,82
<82=85,83
<83=84
<85=86
<87=88
<89=90
<90=96,91
<91=94,92
<92=93
<94=95
<96=97
<98=99
<99=105,100
<100=103,101
<101=102
<103=104
<105=106
<107=108
<108=114,109
<109=112,110
<110=111
<112=113
<114=115
<116=117
<117=123,118
<118=121,119
<119=120
<121=122
<123=124
<125=126
<126=132,127
<127=130,128
<128=129
<130=131
<132=133
<134=135
<135=141,136
<136=139,137
<137=138
<139=140
<141=142
<143=144
<144=150,145
<145=148,146
<146=147
<148=149
<150=151
<152=153
<153=159,154
<154=157,155
<155=156
<157=158
<159=160
<186=188,187
<188=194,192,191,189
<189=190
<192=193
<198=201,200,199
<201=364,362,356,354,350,346,342,336,332,321,317,313,307,299,294,276,264,246,237,226,219,212,206,202
<202=203
<203=205,204
<206=207
<207=211,208
<208=210,209
<212=213
<213=217,214
<214=215
<215=216
<217=218
<219=220
<220=224,221
<221=222
<222=223
<224=225
<226=227
<227=235,228
<228=229
<229=230
<230=234,231
<231=233,232
<235=236
<237=238
<238=245,239
<239=243,240
<240=241
<241=242
<243=244
<246=247
<247=262,248
<248=260,258,256,249
<249=250
<250=252,251
<252=253
<253=255,254
<256=257
<258=259
<260=261
<262=263
<264=265
<265=275,274,266
<266=273,267
<267=271,268
<268=269
<269=270
<271=272
<276=277
<277=292,278
<278=290,288,286,279
<279=280
<280=282,281
<282=283
<283=285,284
<286=287
<288=289
<290=291
<292=293
<294=295
<295=298,297,296
<299=300
<300=306,301
<301=305,302
<302=304,303
<307=308
<308=312,309
<309=311,310
<313=314
<314=316,315
<317=318
<318=320,319
<321=322
<322=331,323
<323=325,324
<325=329,326
<326=327
<327=328
<329=330
<332=333
<333=335,334
<336=337
<337=341,338
<338=340,339
<342=343
<343=345,344
<346=347
<347=349,348
<350=351
<351=353,352
<354=355
<356=358,357
<358=359
<359=361,360
<362=363
<364=366,365
<366=367
<367=369,368
<393=399,398,394
<394=395
<395=397,396
<399=477,407,400
<400=401
<401=403,402
<403=404
<404=406,405
<407=471,418,408
<408=409
<409=410
<410=414,411
<411=412
<412=413
<414=415
<415=417,416
<418=442,433,425,419
<419=420
<420=424,421
<421=423,422
<425=426
<426=432,427
<427=431,428
<428=430,429
<433=434
<434=438,435
<435=436
<436=437
<438=439
<439=441,440
<442=463,443
<443=448,444
<444=445
<445=447,446
<448=449
<449=461,450
<450=459,455,451
<451=452
<452=454,453
<455=456
<456=458,457
<459=460
<461=462
<463=464
<464=468,465
<465=467,466
<468=470,469
<471=472
<472=476,473
<473=475,474
<477=478
<478=480,479
<480=481
<481=483,482
<502=508,507,503
<503=504
<504=506,505
<508=525,516,509
<509=510
<510=512,511
<512=513
<513=515,514
<516=517
<517=521,518
<518=519
<519=520
<521=522
<522=524,523
<525=526
<526=528,527
<528=529
<529=531,530
<538=541,540,539
<541=547,542
<542=543
<543=545,544
<545=546
<547=548
<548=552,549
<549=550
<550=551
<552=553
<557=560,559,558
<560=561
<561=562
<562=566,563
<563=564
<564=565
<566=567
<572=575,574,573
<575=1084,1071,1066,731,715,701,694,689,682,576
<576=680,577
<577=663,578
<578=659,579
<579=652,637,632,604,592,580
<580=581
<581=591,582
<582=584,583
<584=585
<585=587,586
<587=589,588
<589=590
<592=593
<593=602,594
<594=595
<595=596
<596=600,597
<597=598
<598=599
<600=601
<602=603
<604=605
<605=630,606
<606=628,626,624,617,607
<607=608
<608=610,609
<610=611
<611=613,612
<613=615,614
<615=616
<617=618
<618=620,619
<620=621
<621=623,622
<624=625
<626=627
<628=629
<630=631
<632=633
<633=636,635,634
<637=638
<638=650,639
<639=648,646,644,640
<640=641
<641=643,642
<644=645
<646=647
<648=649
<650=651
<652=653
<653=657,654
<654=655
<655=656
<657=658
<659=660
<660=662,661
<663=664
<664=679,678,665
<665=677,666
<666=668,667
<668=670,669
<670=671
<671=673,672
<673=675,674
<675=676
<680=681
<682=683
<683=685,684
<685=686
<686=688,687
<689=690
<690=692,691
<692=693
<694=695
<695=697,696
<697=698
<698=700,699
<701=713,702
<702=703
<703=709,704
<704=707,705
<705=706
<707=708
<709=710
<710=712,711
<713=714
<715=729,716
<716=717
<717=725,718
<718=721,719
<719=720
<721=722
<722=724,723
<725=726
<726=728,727
<729=730
<731=1064,732
<732=1047,1023,1004,981,972,945,938,835,831,824,775,733
<733=771,734
<734=765,759,753,747,741,735
<735=736
<736=740,737
<737=739,738
<741=742
<742=746,743
<743=745,744
<747=748
<748=752,749
<749=751,750
<753=754
<754=758,755
<755=757,756
<759=760
<760=764,761
<761=763,762
<765=766
<766=770,767
<767=769,768
<771=772
<772=774,773
<775=816,807,804,776
<776=796,777
<777=786,778
<778=779
<779=785,780
<780=784,781
<781=783,782
<786=787
<787=791,788
<788=790,789
<791=793,792
<793=795,794
<796=797
<797=803,798
<798=800,799
<800=802,801
<804=806,805
<807=808
<808=815,809
<809=811,810
<811=812
<812=814,813
<816=817
<817=818
<818=823,822,819
<819=821,820
<824=825
<825=830,829,826
<826=828,827
<831=832
<832=834,833
<835=930,921,918,836
<836=845,837
<837=838
<838=844,839
<839=841,840
<841=843,842
<845=898,846
<846=872,847
<847=848
<848=870,849
<849=868,866,864,857,850
<850=851
<851=853,852
<853=854
<854=856,855
<857=858
<858=860,859
<860=861
<861=863,862
<864=865
<866=867
<868=869
<870=871
<872=873
<873=886,874
<874=875
<875=876
<876=878,877
<878=879
<879=881,880
<881=883,882
<883=885,884
<886=887
<887=889,888
<889=891,890
<891=892
<892=894,893
<894=896,895
<896=897
<898=899
<899=915,900
<900=906,901
<901=903,902
<903=905,904
<906=914,907
<907=913,908
<908=910,909
<910=912,911
<915=917,916
<918=920,919
<921=922
<922=929,923
<923=925,924
<925=926
<926=928,927
<930=931
<931=932
<932=937,936,933
<933=935,934
<938=939
<939=944,943,940
<940=942,941
<945=946
<946=960,947
<947=948
<948=949
<949=951,950
<951=952
<952=954,953
<954=956,955
<956=957
<957=959,958
<960=961
<961=963,962
<963=965,964
<965=966
<966=968,967
<968=970,969
<970=971
<972=973
<973=977,974
<974=975
<975=976
<977=978
<978=980,979
<981=982
<982=1002,983
<983=1000,998,991,984
<984=985
<985=987,986
<987=988
<988=990,989
<991=992
<992=994,993
<994=995
<995=997,996
<998=999
<1000=1001
<1002=1003
<1004=1014,1005
<1005=1006
<1006=1013,1007
<1007=1009,1008
<1009=1010
<1010=1012,1011
<1014=1015
<1015=1022,1016
<1016=1018,1017
<1018=1019
<1019=1021,1020
<1023=1038,1024
<1024=1034,1025
<1025=1026
<1026=1033,1027
<1027=1029,1028
<1029=1030
<1030=1032,1031
<1034=1035
<1035=1037,1036
<1038=1039
<1039=1046,1040
<1040=1042,1041
<1042=1043
<1043=1045,1044
<1047=1048
<1048=1063,1062,1049
<1049=1061,1050
<1050=1052,1051
<1052=1054,1053
<1054=1055
<1055=1057,1056
<1057=1059,1058
<1059=1060
<1064=1065
<1066=1067
<1067=1069,1068
<1069=1070
<1071=1082,1072
<1072=1077,1073
<1073=1074
<1074=1076,1075
<1077=1078
<1078=1080,1079
<1080=1081
<1082=1083
<1084=1085
<1085=1087,1086
<1087=1088
<1088=1090,1089
<1156=1162,1161,1157
<1157=1158
<1158=1160,1159
<1167=1170,1169,1168
<1170=1171
<1171=1172
<1172=1178,1173
<1173=1176,1174
<1174=1175
<1176=1177
<1178=1179
<1179=1181,1180
<1186=1189,1188,1187
<1189=1295,1293,1289,1270,1263,1206,1190
<1190=1191
<1191=1204,1192
<1192=1202,1195,1193
<1193=1194
<1195=1196
<1196=1198,1197
<1198=1199
<1199=1201,1200
<1202=1203
<1204=1205
<1206=1255,1246,1243,1207
<1207=1208
<1208=1235,1209
<1209=1218,1210
<1210=1211
<1211=1217,1212
<1212=1214,1213
<1214=1216,1215
<1218=1219
<1219=1231,1220
<1220=1223,1221
<1221=1222
<1223=1224
<1224=1230,1225
<1225=1227,1226
<1227=1229,1228
<1231=1232
<1232=1234,1233
<1235=1236
<1236=1242,1237
<1237=1239,1238
<1239=1241,1240
<1243=1245,1244
<1246=1247
<1247=1254,1248
<1248=1250,1249
<1250=1251
<1251=1253,1252
<1255=1256
<1256=1257
<1257=1262,1261,1258
<1258=1260,1259
<1263=1264
<1264=1269,1268,1265
<1265=1267,1266
<1270=1271
<1271=1287,1272
<1272=1280,1273
<1273=1274
<1274=1276,1275
<1276=1277
<1277=1279,1278
<1280=1281
<1281=1283,1282
<1283=1284
<1284=1286,1285
<1287=1288
<1289=1290
<1290=1292,1291
<1293=1294
<1315=1321,1320,1316
<1316=1317
<1317=1319,1318
<1321=1322
<1322=1878,1323
<1323=1876,1324,1325,1332,1334,1335,1341,1343,1344,1350,1352,1353,1379,1381,1382,1388,1406,1408,1409,1531,1533,1534,1620,1622,1623,1628,1635,1642,1649,1656,1658,1659,1664,1688,1695,1715,1764,1785,1795,1802,1804,1805,1829,1836,1854,1861,1863,1864,1868,1870,1871
<1325=1326
<1326=1330,1327
<1327=1328
<1328=1329
<1330=1331
<1332=1333
<1335=1336
<1336=1338,1337
<1338=1340,1339
<1341=1342
<1344=1345
<1345=1347,1346
<1347=1349,1348
<1350=1351
<1353=1377,1372,1354
<1354=1355
<1355=1368,1356
<1356=1357
<1357=1367,1358
<1358=1360,1359
<1360=1361
<1361=1363,1362
<1363=1365,1364
<1365=1366
<1368=1369
<1369=1371,1370
<1372=1373
<1373=1374
<1374=1376,1375
<1377=1378
<1379=1380
<1382=1383
<1383=1387,1384
<1384=1386,1385
<1388=1404,1397,1389
<1389=1390
<1390=1391
<1391=1395,1392
<1392=1393
<1393=1394
<1395=1396
<1397=1398
<1398=1402,1399
<1399=1400
<1400=1401
<1402=1403
<1404=1405
<1406=1407
<1409=1524,1517,1513,1509,1500,1445,1438,1431,1415,1410
<1410=1411
<1411=1413,1412
<1413=1414
<1415=1416
<1416=1429,1417
<1417=1427,1418
<1418=1419
<1419=1426,1420
<1420=1422,1421
<1422=1423
<1423=1425,1424
<1427=1428
<1429=1430
<1431=1432
<1432=1434,1433
<1434=1435
<1435=1437,1436
<1438=1439
<1439=1441,1440
<1441=1442
<1442=1444,1443
<1445=1493,1451,1446
<1446=1447
<1447=1448
<1448=1450,1449
<1451=1459,1452
<1452=1453
<1453=1455,1454
<1455=1456
<1456=1458,1457
<1459=1484,1460
<1460=1461
<1461=1476,1462
<1462=1463
<1463=1472,1464
<1464=1465
<1465=1466
<1466=1470,1467
<1467=1468
<1468=1469
<1470=1471
<1472=1473
<1473=1475,1474
<1476=1477
<1477=1483,1478
<1478=1480,1479
<1480=1482,1481
<1484=1485
<1485=1491,1486
<1486=1489,1487
<1487=1488
<1489=1490
<1491=1492
<1493=1494
<1494=1496,1495
<1496=1497
<1497=1499,1498
<1500=1501
<1501=1505,1502
<1502=1503
<1503=1504
<1505=1506
<1506=1508,1507
<1509=1510
<1510=1512,1511
<1513=1514
<1514=1516,1515
<1517=1518
<1518=1520,1519
<1520=1521
<1521=1523,1522
<1524=1525
<1525=1527,1526
<1527=1528
<1528=1530,1529
<1531=1532
<1534=1613,1609,1600,1565,1558,1551,1535
<1535=1536
<1536=1549,1537
<1537=1547,1538
<1538=1539
<1539=1546,1540
<1540=1542,1541
<1542=1543
<1543=1545,1544
<1547=1548
<1549=1550
<1551=1552
<1552=1554,1553
<1554=1555
<1555=1557,1556
<1558=1559
<1559=1561,1560
<1561=1562
<1562=1564,1563
<1565=1592,1583,1580,1566
<1566=1567
<1567=1568
<1568=1579,1569
<1569=1571,1570
<1571=1573,1572
<1573=1574
<1574=1576,1575
<1576=1578,1577
<1580=1582,1581
<1583=1584
<1584=1591,1585
<1585=1587,1586
<1587=1588
<1588=1590,1589
<1592=1593
<1593=1594
<1594=1599,1598,1595
<1595=1597,1596
<1600=1601
<1601=1605,1602
<1602=1603
<1603=1604
<1605=1606
<1606=1608,1607
<1609=1610
<1610=1612,1611
<1613=1614
<1614=1616,1615
<1616=1617
<1617=1619,1618
<1620=1621
<1623=1624
<1624=1626,1625
<1626=1627
<1628=1629
<1629=1633,1630
<1630=1631
<1631=1632
<1633=1634
<1635=1636
<1636=1638,1637
<1638=1639
<1639=1641,1640
<1642=1643
<1643=1645,1644
<1645=1646
<1646=1648,1647
<1649=1650
<1650=1652,1651
<1652=1653
<1653=1655,1654
<1656=1657
<1659=1660
<1660=1662,1661
<1662=1663
<1664=1665
<1665=1686,1666
<1666=1684,1667
<1667=1668
<1668=1670,1669
<1670=1671
<1671=1673,1672
<1673=1675,1674
<1675=1676
<1676=1678,1677
<1678=1680,1679
<1680=1681
<1681=1683,1682
<1684=1685
<1686=1687
<1688=1689
<1689=1691,1690
<1691=1692
<1692=1694,1693
<1695=1696
<1696=1704,1697
<1697=1702,1700,1698
<1698=1699
<1700=1701
<1702=1703
<1704=1705
<1705=1707,1706
<1707=1709,1708
<1709=1711,1710
<1711=1712
<1712=1714,1713
<1715=1716
<1716=1760,1717
<1717=1718
<1718=1719
<1719=1758,1720
<1720=1756,1754,1752,1721
<1721=1722
<1722=1750,1723
<1723=1739,1724
<1724=1725
<1725=1727,1726
<1727=1728
<1728=1730,1729
<1730=1732,1731
<1732=1733
<1733=1735,1734
<1735=1737,1736
<1737=1738
<1739=1740
<1740=1748,1741
<1741=1746,1744,1742
<1742=1743
<1744=1745
<1746=1747
<1748=1749
<1750=1751
<1752=1753
<1754=1755
<1756=1757
<1758=1759
<1760=1761
<1761=1763,1762
<1764=1765
<1765=1773,1766
<1766=1771,1769,1767
<1767=1768
<1769=1770
<1771=1772
<1773=1774
<1774=1776,1775
<1776=1778,1777
<1778=1779
<1779=1781,1780
<1781=1783,1782
<1783=1784
<1785=1792,1789,1786
<1786=1788,1787
<1789=1791,1790
<1792=1794,1793
<1795=1796
<1796=1798,1797
<1798=1799
<1799=1801,1800
<1802=1803
<1805=1806
<1806=1827,1807
<1807=1825,1808
<1808=1809
<1809=1811,1810
<1811=1812
<1812=1814,1813
<1814=1816,1815
<1816=1817
<1817=1819,1818
<1819=1821,1820
<1821=1822
<1822=1824,1823
<1825=1826
<1827=1828
<1829=1830
<1830=1832,1831
<1832=1833
<1833=1835,1834
<1836=1837
<1837=1850,1838
<1838=1839
<1839=1840
<1840=1848,1841
<1841=1846,1844,1842
<1842=1843
<1844=1845
<1846=1847
<1848=1849
<1850=1851
<1851=1853,1852
<1854=1855
<1855=1857,1856
<1857=1858
<1858=1860,1859
<1861=1862
<1864=1865
<1865=1867,1866
<1868=1869
<1871=1872
<1872=1874,1873
<1874=1875
<1876=1877
<1878=1879
<1879=1881,1880
<1881=1882
<1882=1884,1883
