>3	FunctionDef	main (int argc , char * argv [ ])
>4	ParameterList	int argc , char * argv [ ]
>5	Parameter	 
>6	Identifier	argv
>7	ParameterType	char * [ ]
>8	Parameter	 
>9	Identifier	argc
>10	ParameterType	int
>11	ReturnType	int
>12	CompoundStatement	 
>13	BlockStarter	 
>14	CompoundStatement	 
>15	ReturnStatement	return 1 ;
>16	PrimaryExpression	1
>17	ExpressionStatement	cerr << e . what ( ) << endl
>18	ShiftExpression	cerr << e . what ( ) << endl
>19	ShiftExpression	e . what ( ) << endl
>20	Identifier	endl
>21	CallExpression	e . what ( )
>22	ArgumentList	 
>23	Callee	e . what
>24	MemberAccess	e . what
>25	Identifier	what
>26	Identifier	e
>27	Identifier	cerr
>28	Identifier	e
>29	BlockStarter	 
>30	CompoundStatement	 
>31	CompoundStatement	 
>32	ExpressionStatement	t . commit ( )
>33	CallExpression	t . commit ( )
>34	ArgumentList	 
>35	Callee	t . commit
>36	MemberAccess	t . commit
>37	Identifier	commit
>38	Identifier	t
>39	ExpressionStatement	db -> erase < person > ( john_id )
>40	RelationalExpression	db -> erase < person > ( john_id )
>41	RelationalExpression	person > ( john_id )
>42	Identifier	john_id
>43	Identifier	person
>44	PtrMemberAccess	db -> erase
>45	Identifier	erase
>46	Identifier	db
>47	IdentifierDeclStatement	transaction t ( db -> begin ( ) ) ;
>48	IdentifierDecl	t ( db -> begin ( ) )
>49	CallExpression	db -> begin ( )
>50	ArgumentList	 
>51	Callee	db -> begin
>52	PtrMemberAccess	db -> begin
>53	Identifier	begin
>54	Identifier	db
>55	Identifier	t
>56	IdentifierDeclType	transaction
>57	CompoundStatement	 
>58	ExpressionStatement	t . commit ( )
>59	CallExpression	t . commit ( )
>60	ArgumentList	 
>61	Callee	t . commit
>62	MemberAccess	t . commit
>63	Identifier	commit
>64	Identifier	t
>65	ExpressionStatement	cout << endl << \"count  
>66	ShiftExpression	cout << endl << \"count  
>67	ShiftExpression	endl << \"count  
>68	ShiftExpression	\"count  
>69	ShiftExpression	ps . count << endl << \"min age
>70	ShiftExpression	endl << \"min age
>71	ShiftExpression	\"min age
>72	ShiftExpression	ps . min_age << endl << \"max age
>73	ShiftExpression	endl << \"max age
>74	ShiftExpression	\"max age
>75	ShiftExpression	ps . max_age << endl
>76	Identifier	endl
>77	MemberAccess	ps . max_age
>78	Identifier	max_age
>79	Identifier	ps
>80	PrimaryExpression	\"max age
>81	Identifier	endl
>82	MemberAccess	ps . min_age
>83	Identifier	min_age
>84	Identifier	ps
>85	PrimaryExpression	\"min age
>86	Identifier	endl
>87	MemberAccess	ps . count
>88	Identifier	count
>89	Identifier	ps
>90	PrimaryExpression	\"count  
>91	Identifier	endl
>92	Identifier	cout
>93	IdentifierDeclStatement	const person_stat & ps ( * r . begin ( ) ) ;
>94	IdentifierDecl	& ps ( * r . begin ( ) )
>95	UnaryOp	* r . begin ( )
>96	CallExpression	r . begin ( )
>97	ArgumentList	 
>98	Callee	r . begin
>99	MemberAccess	r . begin
>100	Identifier	begin
>101	Identifier	r
>102	UnaryOperator	*
>103	Identifier	ps
>104	IdentifierDeclType	const person_stat &
>105	ExpressionStatement	 
>106	Statement	)
>107	Statement	)
>108	Statement	(
>109	Statement	>
>110	Statement	person_stat
>111	Statement	<
>112	Statement	query
>113	Statement	->
>114	Statement	db
>115	Statement	(
>116	Statement	r
>117	Statement	>
>118	Statement	person_stat
>119	Statement	<
>120	Statement	result
>121	Statement	 
>122	Statement	odb
>123	IdentifierDeclStatement	transaction t ( db -> begin ( ) ) ;
>124	IdentifierDecl	t ( db -> begin ( ) )
>125	CallExpression	db -> begin ( )
>126	ArgumentList	 
>127	Callee	db -> begin
>128	PtrMemberAccess	db -> begin
>129	Identifier	begin
>130	Identifier	db
>131	Identifier	t
>132	IdentifierDeclType	transaction
>133	CompoundStatement	 
>134	ExpressionStatement	t . commit ( )
>135	CallExpression	t . commit ( )
>136	ArgumentList	 
>137	Callee	t . commit
>138	MemberAccess	t . commit
>139	Identifier	commit
>140	Identifier	t
>141	ExpressionStatement	db -> update ( * joe )
>142	CallExpression	db -> update ( * joe )
>143	ArgumentList	* joe
>144	Argument	* joe
>145	UnaryOp	* joe
>146	Identifier	joe
>147	UnaryOperator	*
>148	Callee	db -> update
>149	PtrMemberAccess	db -> update
>150	Identifier	update
>151	Identifier	db
>152	ExpressionStatement	joe -> age ( joe -> age ( ) + 1 )
>153	CallExpression	joe -> age ( joe -> age ( ) + 1 )
>154	ArgumentList	joe -> age ( ) + 1
>155	Argument	joe -> age ( ) + 1
>156	AdditiveExpression	joe -> age ( ) + 1
>157	PrimaryExpression	1
>158	CallExpression	joe -> age ( )
>159	ArgumentList	 
>160	Callee	joe -> age
>161	PtrMemberAccess	joe -> age
>162	Identifier	age
>163	Identifier	joe
>164	Callee	joe -> age
>165	PtrMemberAccess	joe -> age
>166	Identifier	age
>167	Identifier	joe
>168	IdentifierDeclStatement	auto_ptr < person > joe ( db -> load < person > ( joe_id ) ) ;
>169	IdentifierDecl	joe ( db -> load < person > ( joe_id ) )
>170	RelationalExpression	db -> load < person > ( joe_id )
>171	RelationalExpression	person > ( joe_id )
>172	Identifier	joe_id
>173	Identifier	person
>174	PtrMemberAccess	db -> load
>175	Identifier	load
>176	Identifier	db
>177	Identifier	joe
>178	IdentifierDeclType	auto_ptr < person >
>179	IdentifierDeclStatement	transaction t ( db -> begin ( ) ) ;
>180	IdentifierDecl	t ( db -> begin ( ) )
>181	CallExpression	db -> begin ( )
>182	ArgumentList	 
>183	Callee	db -> begin
>184	PtrMemberAccess	db -> begin
>185	Identifier	begin
>186	Identifier	db
>187	Identifier	t
>188	IdentifierDeclType	transaction
>189	CompoundStatement	 
>190	ExpressionStatement	t . commit ( )
>191	CallExpression	t . commit ( )
>192	ArgumentList	 
>193	Callee	t . commit
>194	MemberAccess	t . commit
>195	Identifier	commit
>196	Identifier	t
>197	ForStatement	for ( result 
>198	CompoundStatement	 
>199	ExpressionStatement	cout << \"Hello, \" << i -> first ( ) << \" \" << i -> last ( ) << \"!\" << endl
>200	ShiftExpression	cout << \"Hello, \" << i -> first ( ) << \" \" << i -> last ( ) << \"!\" << endl
>201	ShiftExpression	\"Hello, \" << i -> first ( ) << \" \" << i -> last ( ) << \"!\" << endl
>202	ShiftExpression	i -> first ( ) << \" \" << i -> last ( ) << \"!\" << endl
>203	ShiftExpression	\" \" << i -> last ( ) << \"!\" << endl
>204	ShiftExpression	i -> last ( ) << \"!\" << endl
>205	ShiftExpression	\"!\" << endl
>206	Identifier	endl
>207	PrimaryExpression	\"!\"
>208	CallExpression	i -> last ( )
>209	ArgumentList	 
>210	Callee	i -> last
>211	PtrMemberAccess	i -> last
>212	Identifier	last
>213	Identifier	i
>214	PrimaryExpression	\" \"
>215	CallExpression	i -> first ( )
>216	ArgumentList	 
>217	Callee	i -> first
>218	PtrMemberAccess	i -> first
>219	Identifier	first
>220	Identifier	i
>221	PrimaryExpression	\"Hello, \"
>222	Identifier	cout
>223	UnaryExpression	++ i
>224	Identifier	i
>225	IncDec	++
>226	Condition	i != r . end ( )
>227	EqualityExpression	i != r . end ( )
>228	CallExpression	r . end ( )
>229	ArgumentList	 
>230	Callee	r . end
>231	MemberAccess	r . end
>232	Identifier	end
>233	Identifier	r
>234	Identifier	i
>235	ForInit	result 
>236	IdentifierDeclStatement	result 
>237	IdentifierDecl	i ( r . begin ( ) )
>238	CallExpression	r . begin ( )
>239	ArgumentList	 
>240	Callee	r . begin
>241	MemberAccess	r . begin
>242	Identifier	begin
>243	Identifier	r
>244	Identifier	i
>245	IdentifierDeclType	result 
>246	IdentifierDeclStatement	result r ( db -> query < person > ( query 
>247	IdentifierDecl	r ( db -> query < person > ( query 
>248	RelationalExpression	db -> query < person > ( query 
>249	RelationalExpression	person > ( query 
>250	RelationalExpression	query 
>251	PrimaryExpression	30
>252	Identifier	query 
>253	Identifier	person
>254	PtrMemberAccess	db -> query
>255	Identifier	query
>256	Identifier	db
>257	Identifier	r
>258	IdentifierDeclType	result
>259	IdentifierDeclStatement	transaction t ( db -> begin ( ) ) ;
>260	IdentifierDecl	t ( db -> begin ( ) )
>261	CallExpression	db -> begin ( )
>262	ArgumentList	 
>263	Callee	db -> begin
>264	PtrMemberAccess	db -> begin
>265	Identifier	begin
>266	Identifier	db
>267	Identifier	t
>268	IdentifierDeclType	transaction
>269	IdentifierDeclStatement	odb 
>270	IdentifierDecl	result
>271	Identifier	result
>272	IdentifierDeclType	odb 
>273	IdentifierDeclStatement	odb 
>274	IdentifierDecl	query
>275	Identifier	query
>276	IdentifierDeclType	odb 
>277	CompoundStatement	 
>278	ExpressionStatement	t . commit ( )
>279	CallExpression	t . commit ( )
>280	ArgumentList	 
>281	Callee	t . commit
>282	MemberAccess	t . commit
>283	Identifier	commit
>284	Identifier	t
>285	ExpressionStatement	joe_id = db -> persist ( joe )
>286	AssignmentExpr	joe_id = db -> persist ( joe )
>287	CallExpression	db -> persist ( joe )
>288	ArgumentList	joe
>289	Argument	joe
>290	Identifier	joe
>291	Callee	db -> persist
>292	PtrMemberAccess	db -> persist
>293	Identifier	persist
>294	Identifier	db
>295	Identifier	joe_id
>296	ExpressionStatement	db -> persist ( jane )
>297	CallExpression	db -> persist ( jane )
>298	ArgumentList	jane
>299	Argument	jane
>300	Identifier	jane
>301	Callee	db -> persist
>302	PtrMemberAccess	db -> persist
>303	Identifier	persist
>304	Identifier	db
>305	ExpressionStatement	john_id = db -> persist ( john )
>306	AssignmentExpr	john_id = db -> persist ( john )
>307	CallExpression	db -> persist ( john )
>308	ArgumentList	john
>309	Argument	john
>310	Identifier	john
>311	Callee	db -> persist
>312	PtrMemberAccess	db -> persist
>313	Identifier	persist
>314	Identifier	db
>315	Identifier	john_id
>316	IdentifierDeclStatement	transaction t ( db -> begin ( ) ) ;
>317	IdentifierDecl	t ( db -> begin ( ) )
>318	CallExpression	db -> begin ( )
>319	ArgumentList	 
>320	Callee	db -> begin
>321	PtrMemberAccess	db -> begin
>322	Identifier	begin
>323	Identifier	db
>324	Identifier	t
>325	IdentifierDeclType	transaction
>326	IdentifierDeclStatement	person joe ( \"Joe\" , \"Dirt\" , 30 ) ;
>327	IdentifierDecl	joe ( \"Joe\" , \"Dirt\" , 30 )
>328	Expression	\"Joe\" , \"Dirt\" , 30
>329	Expression	\"Dirt\" , 30
>330	PrimaryExpression	30
>331	PrimaryExpression	\"Dirt\"
>332	PrimaryExpression	\"Joe\"
>333	Identifier	joe
>334	IdentifierDeclType	person
>335	IdentifierDeclStatement	person jane ( \"Jane\" , \"Doe\" , 32 ) ;
>336	IdentifierDecl	jane ( \"Jane\" , \"Doe\" , 32 )
>337	Expression	\"Jane\" , \"Doe\" , 32
>338	Expression	\"Doe\" , 32
>339	PrimaryExpression	32
>340	PrimaryExpression	\"Doe\"
>341	PrimaryExpression	\"Jane\"
>342	Identifier	jane
>343	IdentifierDeclType	person
>344	IdentifierDeclStatement	person john ( \"John\" , \"Doe\" , 33 ) ;
>345	IdentifierDecl	john ( \"John\" , \"Doe\" , 33 )
>346	Expression	\"John\" , \"Doe\" , 33
>347	Expression	\"Doe\" , 33
>348	PrimaryExpression	33
>349	PrimaryExpression	\"Doe\"
>350	PrimaryExpression	\"John\"
>351	Identifier	john
>352	IdentifierDeclType	person
>353	IdentifierDeclStatement	unsigned long john_id , joe_id ;
>354	IdentifierDecl	joe_id
>355	Identifier	joe_id
>356	IdentifierDeclType	unsigned long
>357	IdentifierDecl	john_id
>358	Identifier	john_id
>359	IdentifierDeclType	unsigned long
>360	IdentifierDeclStatement	auto_ptr < database > db ( create_database ( argc , argv ) ) ;
>361	IdentifierDecl	db ( create_database ( argc , argv ) )
>362	CallExpression	create_database ( argc , argv )
>363	ArgumentList	argc
>364	Argument	argv
>365	Identifier	argv
>366	Argument	argc
>367	Identifier	argc
>368	Callee	create_database
>369	Identifier	create_database
>370	Identifier	db
>371	IdentifierDeclType	auto_ptr < database >
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=29,13
<13=28,14
<14=17,15
<15=16
<17=18
<18=27,19
<19=21,20
<21=23,22
<23=24
<24=26,25
<29=30
<30=360,353,277,273,269,189,133,57,31
<31=47,39,32
<32=33
<33=35,34
<35=36
<36=38,37
<39=40
<40=44,41
<41=43,42
<44=46,45
<47=48
<48=56,55,49
<49=51,50
<51=52
<52=54,53
<57=123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,93,65,58
<58=59
<59=61,60
<61=62
<62=64,63
<65=66
<66=92,67
<67=91,68
<68=90,69
<69=87,70
<70=86,71
<71=85,72
<72=82,73
<73=81,74
<74=80,75
<75=77,76
<77=79,78
<82=84,83
<87=89,88
<93=94
<94=104,103,95
<95=102,96
<96=98,97
<98=99
<99=101,100
<123=124
<124=132,131,125
<125=127,126
<127=128
<128=130,129
<133=179,168,152,141,134
<134=135
<135=137,136
<137=138
<138=140,139
<141=142
<142=148,143
<143=144
<144=145
<145=147,146
<148=149
<149=151,150
<152=153
<153=164,154
<154=155
<155=156
<156=158,157
<158=160,159
<160=161
<161=163,162
<164=165
<165=167,166
<168=169
<169=178,177,170
<170=174,171
<171=173,172
<174=176,175
<179=180
<180=188,187,181
<181=183,182
<183=184
<184=186,185
<189=259,246,197,190
<190=191
<191=193,192
<193=194
<194=196,195
<197=235,226,223,198
<198=199
<199=200
<200=222,201
<201=221,202
<202=215,203
<203=214,204
<204=208,205
<205=207,206
<208=210,209
<210=211
<211=213,212
<215=217,216
<217=218
<218=220,219
<223=225,224
<226=227
<227=234,228
<228=230,229
<230=231
<231=233,232
<235=236
<236=237
<237=245,244,238
<238=240,239
<240=241
<241=243,242
<246=247
<247=258,257,248
<248=254,249
<249=253,250
<250=252,251
<254=256,255
<259=260
<260=268,267,261
<261=263,262
<263=264
<264=266,265
<269=270
<270=272,271
<273=274
<274=276,275
<277=344,335,326,316,305,296,285,278
<278=279
<279=281,280
<281=282
<282=284,283
<285=286
<286=295,287
<287=291,288
<288=289
<289=290
<291=292
<292=294,293
<296=297
<297=301,298
<298=299
<299=300
<301=302
<302=304,303
<305=306
<306=315,307
<307=311,308
<308=309
<309=310
<311=312
<312=314,313
<316=317
<317=325,324,318
<318=320,319
<320=321
<321=323,322
<326=327
<327=334,333,328
<328=332,329
<329=331,330
<335=336
<336=343,342,337
<337=341,338
<338=340,339
<344=345
<345=352,351,346
<346=350,347
<347=349,348
<353=357,354
<354=356,355
<357=359,358
<360=361
<361=371,370,362
<362=368,363
<363=366,364
<364=365
<366=367
<368=369
