>12	FunctionDef	cl_context ()
>13	ParameterList	 
>14	CompoundStatement	 
>15	ExpressionStatement	 
>16	CallExpression	m_steps . produces ( m_items )
>17	ArgumentList	m_items
>18	Argument	m_items
>19	Identifier	m_items
>20	Callee	m_steps . produces
>21	MemberAccess	m_steps . produces
>22	Identifier	produces
>23	Identifier	m_steps
>24	ExpressionStatement	 
>25	CallExpression	m_steps . consumes ( m_items )
>26	ArgumentList	m_items
>27	Argument	m_items
>28	Identifier	m_items
>29	Callee	m_steps . consumes
>30	MemberAccess	m_steps . consumes
>31	Identifier	consumes
>32	Identifier	m_steps
>33	ExpressionStatement	 
>34	CallExpression	m_tags . prescribes ( m_steps , * this )
>35	ArgumentList	m_steps
>36	Argument	* this
>37	UnaryOp	* this
>38	Identifier	this
>39	UnaryOperator	*
>40	Argument	m_steps
>41	Identifier	m_steps
>42	Callee	m_tags . prescribes
>43	MemberAccess	m_tags . prescribes
>44	Identifier	prescribes
>45	Identifier	m_tags
>54	FunctionDef	cl_step 
>55	ParameterList	int t , cl_context & ctxt
>56	Parameter	 
>57	Identifier	ctxt
>58	ParameterType	cl_context &
>59	Parameter	 
>60	Identifier	t
>61	ParameterType	int
>62	ReturnType	int
>63	CompoundStatement	 
>64	ReturnStatement	 
>65	PrimaryExpression	0
>66	IfStatement	if ( t < 100 )
>67	ElseStatement	else
>68	CompoundStatement	 
>69	ExpressionStatement	 
>70	CallExpression	ctxt . m_items . get ( t , _i )
>71	ArgumentList	t
>72	Argument	_i
>73	Identifier	_i
>74	Argument	t
>75	Identifier	t
>76	Callee	ctxt . m_items . get
>77	MemberAccess	ctxt . m_items . get
>78	Identifier	get
>79	MemberAccess	ctxt . m_items
>80	Identifier	m_items
>81	Identifier	ctxt
>82	IdentifierDeclStatement	 
>83	IdentifierDecl	_i
>84	Identifier	_i
>85	IdentifierDeclType	int
>86	CompoundStatement	 
>87	ExpressionStatement	 
>88	CallExpression	ctxt . m_items . put ( t , t )
>89	ArgumentList	t
>90	Argument	t
>91	Identifier	t
>92	Argument	t
>93	Identifier	t
>94	Callee	ctxt . m_items . put
>95	MemberAccess	ctxt . m_items . put
>96	Identifier	put
>97	MemberAccess	ctxt . m_items
>98	Identifier	m_items
>99	Identifier	ctxt
>100	ExpressionStatement	 
>101	CallExpression	ctxt . m_tuner . cancel ( t + 1 )
>102	ArgumentList	t + 1
>103	Argument	t + 1
>104	AdditiveExpression	t + 1
>105	PrimaryExpression	1
>106	Identifier	t
>107	Callee	ctxt . m_tuner . cancel
>108	MemberAccess	ctxt . m_tuner . cancel
>109	Identifier	cancel
>110	MemberAccess	ctxt . m_tuner
>111	Identifier	m_tuner
>112	Identifier	ctxt
>113	Condition	 
>114	RelationalExpression	t < 100
>115	PrimaryExpression	100
>116	Identifier	t
>125	FunctionDef	main ()
>126	ParameterList	 
>127	ReturnType	int
>128	CompoundStatement	 
>129	ReturnStatement	 
>130	PrimaryExpression	0
>131	ExpressionStatement	 
>132	CallExpression	_ctxt . m_items . unsafe_reset ( )
>133	ArgumentList	 
>134	Callee	_ctxt . m_items . unsafe_reset
>135	MemberAccess	_ctxt . m_items . unsafe_reset
>136	Identifier	unsafe_reset
>137	MemberAccess	_ctxt . m_items
>138	Identifier	m_items
>139	Identifier	_ctxt
>140	ExpressionStatement	 
>141	CallExpression	_ctxt . m_tags . unsafe_reset ( )
>142	ArgumentList	 
>143	Callee	_ctxt . m_tags . unsafe_reset
>144	MemberAccess	_ctxt . m_tags . unsafe_reset
>145	Identifier	unsafe_reset
>146	MemberAccess	_ctxt . m_tags
>147	Identifier	m_tags
>148	Identifier	_ctxt
>149	ForStatement	for ( CnC 
>150	CompoundStatement	 
>151	ExpressionStatement	 
>152	ShiftExpression	std 
>153	ShiftExpression	i -> first << std 
>154	Identifier	std 
>155	PtrMemberAccess	i -> first
>156	Identifier	first
>157	Identifier	i
>158	Identifier	std 
>159	UnaryExpression	 
>160	Identifier	i
>161	IncDec	++
>162	Condition	 
>163	EqualityExpression	i != _ctxt . m_items . end ( )
>164	CallExpression	_ctxt . m_items . end ( )
>165	ArgumentList	 
>166	Callee	_ctxt . m_items . end
>167	MemberAccess	_ctxt . m_items . end
>168	Identifier	end
>169	MemberAccess	_ctxt . m_items
>170	Identifier	m_items
>171	Identifier	_ctxt
>172	Identifier	i
>173	ForInit	 
>174	IdentifierDeclStatement	CnC 
>175	IdentifierDecl	i = _ctxt . m_items . begin ( )
>176	AssignmentExpr	i = _ctxt . m_items . begin ( )
>177	CallExpression	_ctxt . m_items . begin ( )
>178	ArgumentList	 
>179	Callee	_ctxt . m_items . begin
>180	MemberAccess	_ctxt . m_items . begin
>181	Identifier	begin
>182	MemberAccess	_ctxt . m_items
>183	Identifier	m_items
>184	Identifier	_ctxt
>185	Identifier	i
>186	Identifier	i
>187	IdentifierDeclType	CnC 
>188	ForStatement	for ( int i = 9 ; i >= 0 ; -- i )
>189	CompoundStatement	 
>190	ExpressionStatement	 
>191	CallExpression	_ctxt . wait ( )
>192	ArgumentList	 
>193	Callee	_ctxt . wait
>194	MemberAccess	_ctxt . wait
>195	Identifier	wait
>196	Identifier	_ctxt
>197	ExpressionStatement	 
>198	CallExpression	_ctxt . m_tags . put ( i )
>199	ArgumentList	i
>200	Argument	i
>201	Identifier	i
>202	Callee	_ctxt . m_tags . put
>203	MemberAccess	_ctxt . m_tags . put
>204	Identifier	put
>205	MemberAccess	_ctxt . m_tags
>206	Identifier	m_tags
>207	Identifier	_ctxt
>208	UnaryExpression	 
>209	Identifier	i
>210	IncDec	--
>211	Condition	 
>212	RelationalExpression	i >= 0
>213	PrimaryExpression	0
>214	Identifier	i
>215	ForInit	 
>216	IdentifierDeclStatement	int i = 9 ;
>217	IdentifierDecl	i = 9
>218	AssignmentExpr	i = 9
>219	PrimaryExpression	9
>220	Identifier	i
>221	Identifier	i
>222	IdentifierDeclType	int
>223	ExpressionStatement	 
>224	CallExpression	_ctxt . unsafe_reset ( )
>225	ArgumentList	 
>226	Callee	_ctxt . unsafe_reset
>227	MemberAccess	_ctxt . unsafe_reset
>228	Identifier	unsafe_reset
>229	Identifier	_ctxt
>230	ForStatement	for ( int i = 0 ; i < 10 ; ++ i )
>231	CompoundStatement	 
>232	ExpressionStatement	 
>233	CallExpression	_ctxt . wait ( )
>234	ArgumentList	 
>235	Callee	_ctxt . wait
>236	MemberAccess	_ctxt . wait
>237	Identifier	wait
>238	Identifier	_ctxt
>239	ExpressionStatement	 
>240	CallExpression	_ctxt . m_tags . put ( i )
>241	ArgumentList	i
>242	Argument	i
>243	Identifier	i
>244	Callee	_ctxt . m_tags . put
>245	MemberAccess	_ctxt . m_tags . put
>246	Identifier	put
>247	MemberAccess	_ctxt . m_tags
>248	Identifier	m_tags
>249	Identifier	_ctxt
>250	UnaryExpression	 
>251	Identifier	i
>252	IncDec	++
>253	Condition	 
>254	RelationalExpression	i < 10
>255	PrimaryExpression	10
>256	Identifier	i
>257	ForInit	 
>258	IdentifierDeclStatement	int i = 0 ;
>259	IdentifierDecl	i = 0
>260	AssignmentExpr	i = 0
>261	PrimaryExpression	0
>262	Identifier	i
>263	Identifier	i
>264	IdentifierDeclType	int
>265	ExpressionStatement	 
>266	CallExpression	_ctxt . m_tuner . unsafe_reset ( )
>267	ArgumentList	 
>268	Callee	_ctxt . m_tuner . unsafe_reset
>269	MemberAccess	_ctxt . m_tuner . unsafe_reset
>270	Identifier	unsafe_reset
>271	MemberAccess	_ctxt . m_tuner
>272	Identifier	m_tuner
>273	Identifier	_ctxt
>274	ExpressionStatement	 
>275	CallExpression	_ctxt . wait ( )
>276	ArgumentList	 
>277	Callee	_ctxt . wait
>278	MemberAccess	_ctxt . wait
>279	Identifier	wait
>280	Identifier	_ctxt
>281	ForStatement	for ( int i = 3 ; i < 5 ; ++ i )
>282	CompoundStatement	 
>283	ExpressionStatement	 
>284	CallExpression	_ctxt . m_items . put ( 100 + i , i )
>285	ArgumentList	100 + i
>286	Argument	i
>287	Identifier	i
>288	Argument	100 + i
>289	AdditiveExpression	100 + i
>290	Identifier	i
>291	PrimaryExpression	100
>292	Callee	_ctxt . m_items . put
>293	MemberAccess	_ctxt . m_items . put
>294	Identifier	put
>295	MemberAccess	_ctxt . m_items
>296	Identifier	m_items
>297	Identifier	_ctxt
>298	ExpressionStatement	 
>299	CallExpression	_ctxt . m_items . put ( 105 + i , i )
>300	ArgumentList	105 + i
>301	Argument	i
>302	Identifier	i
>303	Argument	105 + i
>304	AdditiveExpression	105 + i
>305	Identifier	i
>306	PrimaryExpression	105
>307	Callee	_ctxt . m_items . put
>308	MemberAccess	_ctxt . m_items . put
>309	Identifier	put
>310	MemberAccess	_ctxt . m_items
>311	Identifier	m_items
>312	Identifier	_ctxt
>313	UnaryExpression	 
>314	Identifier	i
>315	IncDec	++
>316	Condition	 
>317	RelationalExpression	i < 5
>318	PrimaryExpression	5
>319	Identifier	i
>320	ForInit	 
>321	IdentifierDeclStatement	int i = 3 ;
>322	IdentifierDecl	i = 3
>323	AssignmentExpr	i = 3
>324	PrimaryExpression	3
>325	Identifier	i
>326	Identifier	i
>327	IdentifierDeclType	int
>328	ExpressionStatement	 
>329	CallExpression	_ctxt . m_tuner . cancel_all ( )
>330	ArgumentList	 
>331	Callee	_ctxt . m_tuner . cancel_all
>332	MemberAccess	_ctxt . m_tuner . cancel_all
>333	Identifier	cancel_all
>334	MemberAccess	_ctxt . m_tuner
>335	Identifier	m_tuner
>336	Identifier	_ctxt
>337	ExpressionStatement	 
>338	CallExpression	_ctxt . wait ( )
>339	ArgumentList	 
>340	Callee	_ctxt . wait
>341	MemberAccess	_ctxt . wait
>342	Identifier	wait
>343	Identifier	_ctxt
>344	ForStatement	for ( int i = 0 ; i < 3 ; ++ i )
>345	CompoundStatement	 
>346	ExpressionStatement	 
>347	CallExpression	_ctxt . m_items . put ( 100 + i , i )
>348	ArgumentList	100 + i
>349	Argument	i
>350	Identifier	i
>351	Argument	100 + i
>352	AdditiveExpression	100 + i
>353	Identifier	i
>354	PrimaryExpression	100
>355	Callee	_ctxt . m_items . put
>356	MemberAccess	_ctxt . m_items . put
>357	Identifier	put
>358	MemberAccess	_ctxt . m_items
>359	Identifier	m_items
>360	Identifier	_ctxt
>361	ExpressionStatement	 
>362	CallExpression	_ctxt . m_items . put ( 105 + i , i )
>363	ArgumentList	105 + i
>364	Argument	i
>365	Identifier	i
>366	Argument	105 + i
>367	AdditiveExpression	105 + i
>368	Identifier	i
>369	PrimaryExpression	105
>370	Callee	_ctxt . m_items . put
>371	MemberAccess	_ctxt . m_items . put
>372	Identifier	put
>373	MemberAccess	_ctxt . m_items
>374	Identifier	m_items
>375	Identifier	_ctxt
>376	UnaryExpression	 
>377	Identifier	i
>378	IncDec	++
>379	Condition	 
>380	RelationalExpression	i < 3
>381	PrimaryExpression	3
>382	Identifier	i
>383	ForInit	 
>384	IdentifierDeclStatement	int i = 0 ;
>385	IdentifierDecl	i = 0
>386	AssignmentExpr	i = 0
>387	PrimaryExpression	0
>388	Identifier	i
>389	Identifier	i
>390	IdentifierDeclType	int
>391	ExpressionStatement	 
>392	CallExpression	_ctxt . wait ( )
>393	ArgumentList	 
>394	Callee	_ctxt . wait
>395	MemberAccess	_ctxt . wait
>396	Identifier	wait
>397	Identifier	_ctxt
>398	ForStatement	for ( int i = 100 ; i < 110 ; ++ i )
>399	CompoundStatement	 
>400	ExpressionStatement	 
>401	CallExpression	_ctxt . m_tags . put ( i )
>402	ArgumentList	i
>403	Argument	i
>404	Identifier	i
>405	Callee	_ctxt . m_tags . put
>406	MemberAccess	_ctxt . m_tags . put
>407	Identifier	put
>408	MemberAccess	_ctxt . m_tags
>409	Identifier	m_tags
>410	Identifier	_ctxt
>411	UnaryExpression	 
>412	Identifier	i
>413	IncDec	++
>414	Condition	 
>415	RelationalExpression	i < 110
>416	PrimaryExpression	110
>417	Identifier	i
>418	ForInit	 
>419	IdentifierDeclStatement	int i = 100 ;
>420	IdentifierDecl	i = 100
>421	AssignmentExpr	i = 100
>422	PrimaryExpression	100
>423	Identifier	i
>424	Identifier	i
>425	IdentifierDeclType	int
>426	ExpressionStatement	 
>427	CallExpression	_ctxt . wait ( )
>428	ArgumentList	 
>429	Callee	_ctxt . wait
>430	MemberAccess	_ctxt . wait
>431	Identifier	wait
>432	Identifier	_ctxt
>433	ExpressionStatement	 
>434	CallExpression	CnC 
>435	ArgumentList	_ctxt . m_steps
>436	Argument	3
>437	PrimaryExpression	3
>438	Argument	_ctxt . m_steps
>439	MemberAccess	_ctxt . m_steps
>440	Identifier	m_steps
>441	Identifier	_ctxt
>442	Callee	CnC 
>443	Identifier	CnC 
>444	ExpressionStatement	 
>445	CallExpression	assert ( CnC 
>446	ArgumentList	CnC 
>447	Argument	CnC 
>448	EqualityExpression	CnC 
>449	PrimaryExpression	0
>450	CallExpression	CnC 
>451	ArgumentList	 
>452	Callee	CnC 
>453	Identifier	CnC 
>454	Callee	assert
>455	Identifier	assert
>456	IdentifierDeclStatement	 
>457	IdentifierDecl	_ctxt
>458	Identifier	_ctxt
>459	IdentifierDeclType	cl_context
>460	IdentifierDeclStatement	 
>461	IdentifierDecl	_dcinit
>462	Identifier	_dcinit
>463	IdentifierDeclType	CnC 
<12=14,13
<14=33,24,15
<15=16
<16=20,17
<17=18
<18=19
<20=21
<21=23,22
<24=25
<25=29,26
<26=27
<27=28
<29=30
<30=32,31
<33=34
<34=42,35
<35=40,36
<36=37
<37=39,38
<40=41
<42=43
<43=45,44
<54=63,62,55
<55=59,56
<56=58,57
<59=61,60
<63=66,64
<64=65
<66=113,86,67
<67=68
<68=82,69
<69=70
<70=76,71
<71=74,72
<72=73
<74=75
<76=77
<77=79,78
<79=81,80
<82=83
<83=85,84
<86=100,87
<87=88
<88=94,89
<89=92,90
<90=91
<92=93
<94=95
<95=97,96
<97=99,98
<100=101
<101=107,102
<102=103
<103=104
<104=106,105
<107=108
<108=110,109
<110=112,111
<113=114
<114=116,115
<125=128,127,126
<128=460,456,444,433,426,398,391,344,337,328,281,274,265,230,223,188,149,140,131,129
<129=130
<131=132
<132=134,133
<134=135
<135=137,136
<137=139,138
<140=141
<141=143,142
<143=144
<144=146,145
<146=148,147
<149=173,162,159,150
<150=151
<151=152
<152=158,153
<153=155,154
<155=157,156
<159=161,160
<162=163
<163=172,164
<164=166,165
<166=167
<167=169,168
<169=171,170
<173=174
<174=175
<175=187,186,176
<176=185,177
<177=179,178
<179=180
<180=182,181
<182=184,183
<188=215,211,208,189
<189=197,190
<190=191
<191=193,192
<193=194
<194=196,195
<197=198
<198=202,199
<199=200
<200=201
<202=203
<203=205,204
<205=207,206
<208=210,209
<211=212
<212=214,213
<215=216
<216=217
<217=222,221,218
<218=220,219
<223=224
<224=226,225
<226=227
<227=229,228
<230=257,253,250,231
<231=239,232
<232=233
<233=235,234
<235=236
<236=238,237
<239=240
<240=244,241
<241=242
<242=243
<244=245
<245=247,246
<247=249,248
<250=252,251
<253=254
<254=256,255
<257=258
<258=259
<259=264,263,260
<260=262,261
<265=266
<266=268,267
<268=269
<269=271,270
<271=273,272
<274=275
<275=277,276
<277=278
<278=280,279
<281=320,316,313,282
<282=298,283
<283=284
<284=292,285
<285=288,286
<286=287
<288=289
<289=291,290
<292=293
<293=295,294
<295=297,296
<298=299
<299=307,300
<300=303,301
<301=302
<303=304
<304=306,305
<307=308
<308=310,309
<310=312,311
<313=315,314
<316=317
<317=319,318
<320=321
<321=322
<322=327,326,323
<323=325,324
<328=329
<329=331,330
<331=332
<332=334,333
<334=336,335
<337=338
<338=340,339
<340=341
<341=343,342
<344=383,379,376,345
<345=361,346
<346=347
<347=355,348
<348=351,349
<349=350
<351=352
<352=354,353
<355=356
<356=358,357
<358=360,359
<361=362
<362=370,363
<363=366,364
<364=365
<366=367
<367=369,368
<370=371
<371=373,372
<373=375,374
<376=378,377
<379=380
<380=382,381
<383=384
<384=385
<385=390,389,386
<386=388,387
<391=392
<392=394,393
<394=395
<395=397,396
<398=418,414,411,399
<399=400
<400=401
<401=405,402
<402=403
<403=404
<405=406
<406=408,407
<408=410,409
<411=413,412
<414=415
<415=417,416
<418=419
<419=420
<420=425,424,421
<421=423,422
<426=427
<427=429,428
<429=430
<430=432,431
<433=434
<434=442,435
<435=438,436
<436=437
<438=439
<439=441,440
<442=443
<444=445
<445=454,446
<446=447
<447=448
<448=450,449
<450=452,451
<452=453
<454=455
<456=457
<457=459,458
<460=461
<461=463,462
