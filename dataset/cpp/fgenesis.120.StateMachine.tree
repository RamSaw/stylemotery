>3	FunctionDef	StateMachine 
>4	ParameterList	 
>5	CompoundStatement	 
>6	ExpressionStatement	 
>7	AssignmentExpr	stateCounter = 0
>8	PrimaryExpression	0
>9	Identifier	stateCounter
>10	ExpressionStatement	 
>11	AssignmentExpr	enqueuedState = nextState = prevState = currentState = STATE_NONE
>12	AssignmentExpr	nextState = prevState = currentState = STATE_NONE
>13	AssignmentExpr	prevState = currentState = STATE_NONE
>14	AssignmentExpr	currentState = STATE_NONE
>15	Identifier	STATE_NONE
>16	Identifier	currentState
>17	Identifier	prevState
>18	Identifier	nextState
>19	Identifier	enqueuedState
>20	ExpressionStatement	 
>21	AssignmentExpr	enqueuedTime = stateTime = - 1
>22	AssignmentExpr	stateTime = - 1
>23	UnaryOp	- 1
>24	PrimaryExpression	1
>25	UnaryOperator	-
>26	Identifier	stateTime
>27	Identifier	enqueuedTime
>28	ExpressionStatement	 
>29	AssignmentExpr	stateExtraDT = 0
>30	PrimaryExpression	0
>31	Identifier	stateExtraDT
>44	FunctionDef	StateMachine 
>45	ParameterList	 
>46	ReturnType	int
>47	CompoundStatement	 
>48	ReturnStatement	 
>49	Identifier	currentState
>54	FunctionDef	StateMachine 
>55	ParameterList	int state
>56	Parameter	 
>57	Identifier	state
>58	ParameterType	int
>59	ReturnType	bool
>60	CompoundStatement	 
>61	ReturnStatement	 
>62	EqualityExpression	currentState == state
>63	Identifier	state
>64	Identifier	currentState
>70	FunctionDef	StateMachine 
>71	ParameterList	 
>72	ReturnType	int
>73	CompoundStatement	 
>74	ReturnStatement	 
>75	Identifier	prevState
>80	FunctionDef	StateMachine 
>81	ParameterList	int state , float time
>82	Parameter	 
>83	Identifier	time
>84	ParameterType	float
>85	Parameter	 
>86	Identifier	state
>87	ParameterType	int
>88	ReturnType	void
>89	CompoundStatement	 
>90	ExpressionStatement	 
>91	CallExpression	onEnterState ( currentState )
>92	ArgumentList	currentState
>93	Argument	currentState
>94	Identifier	currentState
>95	Callee	onEnterState
>96	Identifier	onEnterState
>97	ExpressionStatement	 
>98	AssignmentExpr	nextState = STATE_NONE
>99	Identifier	STATE_NONE
>100	Identifier	nextState
>101	ExpressionStatement	 
>102	AssignmentExpr	currentState = state
>103	Identifier	state
>104	Identifier	currentState
>105	ExpressionStatement	 
>106	AssignmentExpr	stateTime = time
>107	Identifier	time
>108	Identifier	stateTime
>109	ExpressionStatement	 
>110	AssignmentExpr	stateCounter = 0
>111	PrimaryExpression	0
>112	Identifier	stateCounter
>113	ExpressionStatement	 
>114	CallExpression	onExitState ( currentState )
>115	ArgumentList	currentState
>116	Argument	currentState
>117	Identifier	currentState
>118	Callee	onExitState
>119	Identifier	onExitState
>120	ExpressionStatement	 
>121	AssignmentExpr	enqueuedState = STATE_NONE
>122	Identifier	STATE_NONE
>123	Identifier	enqueuedState
>124	ExpressionStatement	 
>125	AssignmentExpr	nextState = state
>126	Identifier	state
>127	Identifier	nextState
>128	ExpressionStatement	 
>129	AssignmentExpr	prevState = currentState
>130	Identifier	currentState
>131	Identifier	prevState
>132	ExpressionStatement	 
>133	AssignmentExpr	stateExtraDT = 0
>134	PrimaryExpression	0
>135	Identifier	stateExtraDT
>149	FunctionDef	StateMachine 
>150	ParameterList	int state , float time , bool force
>151	Parameter	 
>152	Identifier	force
>153	ParameterType	bool
>154	Parameter	 
>155	Identifier	time
>156	ParameterType	float
>157	Parameter	 
>158	Identifier	state
>159	ParameterType	int
>160	ReturnType	void
>161	CompoundStatement	 
>162	IfStatement	if ( canSetState ( state ) )
>163	CompoundStatement	 
>164	IfStatement	if ( force )
>165	ElseStatement	else
>166	CompoundStatement	 
>167	ExpressionStatement	 
>168	AssignmentExpr	enqueuedTime = time
>169	Identifier	time
>170	Identifier	enqueuedTime
>171	ExpressionStatement	 
>172	AssignmentExpr	enqueuedState = state
>173	Identifier	state
>174	Identifier	enqueuedState
>175	CompoundStatement	 
>176	ExpressionStatement	 
>177	CallExpression	perform ( state , time )
>178	ArgumentList	state
>179	Argument	time
>180	Identifier	time
>181	Argument	state
>182	Identifier	state
>183	Callee	perform
>184	Identifier	perform
>185	Condition	 
>186	Identifier	force
>187	Condition	 
>188	CallExpression	canSetState ( state )
>189	ArgumentList	state
>190	Argument	state
>191	Identifier	state
>192	Callee	canSetState
>193	Identifier	canSetState
>203	FunctionDef	StateMachine 
>204	ParameterList	int state
>205	Parameter	 
>206	Identifier	state
>207	ParameterType	int
>208	ReturnType	bool
>209	CompoundStatement	 
>210	ReturnStatement	 
>211	Identifier	true
>217	FunctionDef	StateMachine 
>218	ParameterList	int state
>219	Parameter	 
>220	Identifier	state
>221	ParameterType	int
>222	ReturnType	void
>223	CompoundStatement	 
>228	FunctionDef	StateMachine 
>229	ParameterList	int state
>230	Parameter	 
>231	Identifier	state
>232	ParameterType	int
>233	ReturnType	void
>234	CompoundStatement	 
>239	FunctionDef	StateMachine 
>240	ParameterList	int state
>241	Parameter	 
>242	Identifier	state
>243	ParameterType	int
>244	ReturnType	void
>245	CompoundStatement	 
>246	ExpressionStatement	 
>247	AssignmentExpr	currentState = STATE_NONE
>248	Identifier	STATE_NONE
>249	Identifier	currentState
>250	ExpressionStatement	 
>251	CallExpression	onExitState ( state )
>252	ArgumentList	state
>253	Argument	state
>254	Identifier	state
>255	Callee	onExitState
>256	Identifier	onExitState
>263	FunctionDef	StateMachine 
>264	ParameterList	 
>265	ReturnType	float
>266	CompoundStatement	 
>267	ReturnStatement	 
>268	Identifier	stateCounter
>273	FunctionDef	StateMachine 
>274	ParameterList	 
>275	ReturnType	float
>276	CompoundStatement	 
>277	ReturnStatement	 
>278	Identifier	stateTime
>283	FunctionDef	StateMachine 
>284	ParameterList	float t
>285	Parameter	 
>286	Identifier	t
>287	ParameterType	float
>288	ReturnType	void
>289	CompoundStatement	 
>290	ExpressionStatement	 
>291	AssignmentExpr	stateTime = t
>292	Identifier	t
>293	Identifier	stateTime
>299	FunctionDef	StateMachine 
>300	ParameterList	float dt
>301	Parameter	 
>302	Identifier	dt
>303	ParameterType	float
>304	ReturnType	void
>305	CompoundStatement	 
>306	IfStatement	if ( enqueuedState != STATE_NONE )
>307	CompoundStatement	 
>308	ExpressionStatement	 
>309	AssignmentExpr	enqueuedTime = - 1
>310	UnaryOp	- 1
>311	PrimaryExpression	1
>312	UnaryOperator	-
>313	Identifier	enqueuedTime
>314	ExpressionStatement	 
>315	AssignmentExpr	enqueuedState = STATE_NONE
>316	Identifier	STATE_NONE
>317	Identifier	enqueuedState
>318	ExpressionStatement	 
>319	CallExpression	perform ( enqueuedState , enqueuedTime )
>320	ArgumentList	enqueuedState
>321	Argument	enqueuedTime
>322	Identifier	enqueuedTime
>323	Argument	enqueuedState
>324	Identifier	enqueuedState
>325	Callee	perform
>326	Identifier	perform
>327	Condition	 
>328	EqualityExpression	enqueuedState != STATE_NONE
>329	Identifier	STATE_NONE
>330	Identifier	enqueuedState
>331	IfStatement	if ( currentState != STATE_NONE )
>332	CompoundStatement	 
>333	IfStatement	if ( stateTime != - 1 )
>334	CompoundStatement	 
>335	IfStatement	if ( stateCounter >= stateTime )
>336	CompoundStatement	 
>337	ExpressionStatement	 
>338	AssignmentExpr	stateExtraDT = 0
>339	PrimaryExpression	0
>340	Identifier	stateExtraDT
>341	ExpressionStatement	 
>342	AssignmentExpr	currentState = - 1
>343	UnaryOp	- 1
>344	PrimaryExpression	1
>345	UnaryOperator	-
>346	Identifier	currentState
>347	ExpressionStatement	 
>348	CallExpression	onExitState ( currentState )
>349	ArgumentList	currentState
>350	Argument	currentState
>351	Identifier	currentState
>352	Callee	onExitState
>353	Identifier	onExitState
>354	ExpressionStatement	 
>355	AssignmentExpr	stateCounter = stateTime
>356	Identifier	stateTime
>357	Identifier	stateCounter
>358	ExpressionStatement	 
>359	AssignmentExpr	stateExtraDT = stateCounter - stateTime
>360	AdditiveExpression	stateCounter - stateTime
>361	Identifier	stateTime
>362	Identifier	stateCounter
>363	Identifier	stateExtraDT
>364	Condition	 
>365	RelationalExpression	stateCounter >= stateTime
>366	Identifier	stateTime
>367	Identifier	stateCounter
>368	ExpressionStatement	 
>369	AssignmentExpr	stateCounter += dt
>370	Identifier	dt
>371	Identifier	stateCounter
>372	Condition	 
>373	EqualityExpression	stateTime != - 1
>374	UnaryOp	- 1
>375	PrimaryExpression	1
>376	UnaryOperator	-
>377	Identifier	stateTime
>378	Condition	 
>379	EqualityExpression	currentState != STATE_NONE
>380	Identifier	STATE_NONE
>381	Identifier	currentState
<3=5,4
<5=28,20,10,6
<6=7
<7=9,8
<10=11
<11=19,12
<12=18,13
<13=17,14
<14=16,15
<20=21
<21=27,22
<22=26,23
<23=25,24
<28=29
<29=31,30
<44=47,46,45
<47=48
<48=49
<54=60,59,55
<55=56
<56=58,57
<60=61
<61=62
<62=64,63
<70=73,72,71
<73=74
<74=75
<80=89,88,81
<81=85,82
<82=84,83
<85=87,86
<89=132,128,124,120,113,109,105,101,97,90
<90=91
<91=95,92
<92=93
<93=94
<95=96
<97=98
<98=100,99
<101=102
<102=104,103
<105=106
<106=108,107
<109=110
<110=112,111
<113=114
<114=118,115
<115=116
<116=117
<118=119
<120=121
<121=123,122
<124=125
<125=127,126
<128=129
<129=131,130
<132=133
<133=135,134
<149=161,160,150
<150=157,154,151
<151=153,152
<154=156,155
<157=159,158
<161=162
<162=187,163
<163=164
<164=185,175,165
<165=166
<166=171,167
<167=168
<168=170,169
<171=172
<172=174,173
<175=176
<176=177
<177=183,178
<178=181,179
<179=180
<181=182
<183=184
<185=186
<187=188
<188=192,189
<189=190
<190=191
<192=193
<203=209,208,204
<204=205
<205=207,206
<209=210
<210=211
<217=223,222,218
<218=219
<219=221,220
<228=234,233,229
<229=230
<230=232,231
<239=245,244,240
<240=241
<241=243,242
<245=250,246
<246=247
<247=249,248
<250=251
<251=255,252
<252=253
<253=254
<255=256
<263=266,265,264
<266=267
<267=268
<273=276,275,274
<276=277
<277=278
<283=289,288,284
<284=285
<285=287,286
<289=290
<290=291
<291=293,292
<299=305,304,300
<300=301
<301=303,302
<305=331,306
<306=327,307
<307=318,314,308
<308=309
<309=313,310
<310=312,311
<314=315
<315=317,316
<318=319
<319=325,320
<320=323,321
<321=322
<323=324
<325=326
<327=328
<328=330,329
<331=378,332
<332=333
<333=372,334
<334=368,335
<335=364,336
<336=358,354,347,341,337
<337=338
<338=340,339
<341=342
<342=346,343
<343=345,344
<347=348
<348=352,349
<349=350
<350=351
<352=353
<354=355
<355=357,356
<358=359
<359=363,360
<360=362,361
<364=365
<365=367,366
<368=369
<369=371,370
<372=373
<373=377,374
<374=376,375
<378=379
<379=381,380
