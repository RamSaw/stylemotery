>10	FunctionDef	my_context ()
>11	ParameterList	 
>12	CompoundStatement	 
>13	IfStatement	if ( CnC 
>14	CompoundStatement	 
>15	ExpressionStatement	 
>16	CallExpression	CnC 
>17	ArgumentList	* this
>18	Argument	* this
>19	UnaryOp	* this
>20	Identifier	this
>21	UnaryOperator	*
>22	Callee	CnC 
>23	Identifier	CnC 
>24	ExpressionStatement	 
>25	CallExpression	CnC 
>26	ArgumentList	* this
>27	Argument	* this
>28	UnaryOp	* this
>29	Identifier	this
>30	UnaryOperator	*
>31	Callee	CnC 
>32	Identifier	CnC 
>33	Condition	 
>34	EqualityExpression	CnC 
>35	PrimaryExpression	0
>36	CallExpression	CnC 
>37	ArgumentList	 
>38	Callee	CnC 
>39	Identifier	CnC 
>40	ExpressionStatement	 
>41	CallExpression	m_tags . prescribes ( m_steps , * this )
>42	ArgumentList	m_steps
>43	Argument	* this
>44	UnaryOp	* this
>45	Identifier	this
>46	UnaryOperator	*
>47	Argument	m_steps
>48	Identifier	m_steps
>49	Callee	m_tags . prescribes
>50	MemberAccess	m_tags . prescribes
>51	Identifier	prescribes
>52	Identifier	m_tags
>63	FunctionDef	my_step 
>64	ParameterList	const int tag , my_context & c
>65	Parameter	 
>66	Identifier	c
>67	ParameterType	my_context &
>68	Parameter	 
>69	Identifier	tag
>70	ParameterType	const int
>71	ReturnType	int
>72	CompoundStatement	 
>73	ReturnStatement	 
>74	PrimaryExpression	0
>75	IfStatement	if ( tag % 2 == 1 )
>76	CompoundStatement	 
>77	ExpressionStatement	 
>78	CallExpression	c . m_items . put ( tag , val )
>79	ArgumentList	tag
>80	Argument	val
>81	Identifier	val
>82	Argument	tag
>83	Identifier	tag
>84	Callee	c . m_items . put
>85	MemberAccess	c . m_items . put
>86	Identifier	put
>87	MemberAccess	c . m_items
>88	Identifier	m_items
>89	Identifier	c
>90	ExpressionStatement	 
>91	AssignmentExpr	val -= tag
>92	Identifier	tag
>93	Identifier	val
>94	ExpressionStatement	 
>95	ShiftExpression	oss << \"tag \" << tag << \" with value \" << val
>96	ShiftExpression	\"tag \" << tag << \" with value \" << val
>97	ShiftExpression	tag << \" with value \" << val
>98	ShiftExpression	\" with value \" << val
>99	Identifier	val
>100	PrimaryExpression	\" with value \"
>101	Identifier	tag
>102	PrimaryExpression	\"tag \"
>103	Identifier	oss
>104	IdentifierDeclStatement	 
>105	IdentifierDecl	oss
>106	Identifier	oss
>107	IdentifierDeclType	CnC 
>108	IfStatement	if ( tag < 14 )
>109	ExpressionStatement	 
>110	CallExpression	c . m_items . get ( tag > 10 ? 1 
>111	ArgumentList	tag > 10 ? 1 
>112	Argument	item
>113	Identifier	item
>114	Argument	tag > 10 ? 1 
>115	ConditionalExpression	tag > 10 ? 1 
>116	AdditiveExpression	tag - 2
>117	PrimaryExpression	2
>118	Identifier	tag
>119	PrimaryExpression	1
>120	Condition	tag > 10
>121	RelationalExpression	tag > 10
>122	PrimaryExpression	10
>123	Identifier	tag
>124	Callee	c . m_items . get
>125	MemberAccess	c . m_items . get
>126	Identifier	get
>127	MemberAccess	c . m_items
>128	Identifier	m_items
>129	Identifier	c
>130	Condition	 
>131	RelationalExpression	tag < 14
>132	PrimaryExpression	14
>133	Identifier	tag
>134	IdentifierDeclStatement	 
>135	IdentifierDecl	item
>136	Identifier	item
>137	IdentifierDeclType	int
>138	IfStatement	if ( tag == 3 )
>139	ExpressionStatement	 
>140	CallExpression	SLEEP ( 5.0 )
>141	ArgumentList	5.0
>142	Argument	5.0
>143	PrimaryExpression	5.0
>144	Callee	SLEEP
>145	Identifier	SLEEP
>146	Condition	 
>147	EqualityExpression	tag == 3
>148	PrimaryExpression	3
>149	Identifier	tag
>150	Condition	 
>151	EqualityExpression	tag % 2 == 1
>152	PrimaryExpression	1
>153	MultiplicativeExpression	tag % 2
>154	PrimaryExpression	2
>155	Identifier	tag
>156	ExpressionStatement	 
>157	CallExpression	SLEEP ( 0.1 )
>158	ArgumentList	0.1
>159	Argument	0.1
>160	PrimaryExpression	0.1
>161	Callee	SLEEP
>162	Identifier	SLEEP
<10=12,11
<12=40,13
<13=33,14
<14=24,15
<15=16
<16=22,17
<17=18
<18=19
<19=21,20
<22=23
<24=25
<25=31,26
<26=27
<27=28
<28=30,29
<31=32
<33=34
<34=36,35
<36=38,37
<38=39
<40=41
<41=49,42
<42=47,43
<43=44
<44=46,45
<47=48
<49=50
<50=52,51
<63=72,71,64
<64=68,65
<65=67,66
<68=70,69
<72=156,75,73
<73=74
<75=150,76
<76=138,134,108,104,94,90,77
<77=78
<78=84,79
<79=82,80
<80=81
<82=83
<84=85
<85=87,86
<87=89,88
<90=91
<91=93,92
<94=95
<95=103,96
<96=102,97
<97=101,98
<98=100,99
<104=105
<105=107,106
<108=130,109
<109=110
<110=124,111
<111=114,112
<112=113
<114=115
<115=120,119,116
<116=118,117
<120=121
<121=123,122
<124=125
<125=127,126
<127=129,128
<130=131
<131=133,132
<134=135
<135=137,136
<138=146,139
<139=140
<140=144,141
<141=142
<142=143
<144=145
<146=147
<147=149,148
<150=151
<151=153,152
<153=155,154
<156=157
<157=161,158
<158=159
<159=160
<161=162
