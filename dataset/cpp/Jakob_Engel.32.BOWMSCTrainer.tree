>3	FunctionDef	BOWMSCTrainer 
>4	ParameterList	double _clusterSize
>5	Parameter	 
>6	Identifier	_clusterSize
>7	ParameterType	double
>8	CompoundStatement	 
>13	FunctionDef	BOWMSCTrainer 
>14	ParameterList	 
>15	CompoundStatement	 
>19	FunctionDef	BOWMSCTrainer 
>20	ParameterList	 
>21	ReturnType	Mat
>22	CompoundStatement	 
>23	ReturnStatement	 
>24	CallExpression	cluster ( mergedDescriptors )
>25	ArgumentList	mergedDescriptors
>26	Argument	mergedDescriptors
>27	Identifier	mergedDescriptors
>28	Callee	cluster
>29	Identifier	cluster
>30	ForStatement	for ( size_t i = 0 , start = 0 ; i < descriptors . size ( ) ; i ++ )
>31	CompoundStatement	 
>32	ExpressionStatement	 
>33	AssignmentExpr	start += descriptors [ i ] . rows
>34	MemberAccess	descriptors [ i ] . rows
>35	Identifier	rows
>36	ArrayIndexing	descriptors [ i ]
>37	Identifier	i
>38	Identifier	descriptors
>39	Identifier	start
>40	ExpressionStatement	 
>41	CallExpression	descriptors [ i ] . copyTo ( submut )
>42	ArgumentList	submut
>43	Argument	submut
>44	Identifier	submut
>45	Callee	descriptors [ i ] . copyTo
>46	MemberAccess	descriptors [ i ] . copyTo
>47	Identifier	copyTo
>48	ArrayIndexing	descriptors [ i ]
>49	Identifier	i
>50	Identifier	descriptors
>51	IdentifierDeclStatement	 
>52	IdentifierDecl	submut = mergedDescriptors . rowRange ( ( int ) start , ( int ) ( start + descriptors [ i ] . rows ) )
>53	AssignmentExpr	submut = mergedDescriptors . rowRange ( ( int ) start , ( int ) ( start + descriptors [ i ] . rows ) )
>54	CallExpression	mergedDescriptors . rowRange ( ( int ) start , ( int ) ( start + descriptors [ i ] . rows ) )
>55	ArgumentList	( int ) start
>56	Argument	( int ) ( start + descriptors [ i ] . rows )
>57	CastExpression	( int ) ( start + descriptors [ i ] . rows )
>58	AdditiveExpression	start + descriptors [ i ] . rows
>59	MemberAccess	descriptors [ i ] . rows
>60	Identifier	rows
>61	ArrayIndexing	descriptors [ i ]
>62	Identifier	i
>63	Identifier	descriptors
>64	Identifier	start
>65	CastTarget	int
>66	Argument	( int ) start
>67	CastExpression	( int ) start
>68	Identifier	start
>69	CastTarget	int
>70	Callee	mergedDescriptors . rowRange
>71	MemberAccess	mergedDescriptors . rowRange
>72	Identifier	rowRange
>73	Identifier	mergedDescriptors
>74	Identifier	submut
>75	Identifier	submut
>76	IdentifierDeclType	Mat
>77	IncDecOp	 
>78	IncDec	++
>79	Identifier	i
>80	Condition	 
>81	RelationalExpression	i < descriptors . size ( )
>82	CallExpression	descriptors . size ( )
>83	ArgumentList	 
>84	Callee	descriptors . size
>85	MemberAccess	descriptors . size
>86	Identifier	size
>87	Identifier	descriptors
>88	Identifier	i
>89	ForInit	 
>90	IdentifierDeclStatement	size_t i = 0 , start = 0 ;
>91	IdentifierDecl	start = 0
>92	AssignmentExpr	start = 0
>93	PrimaryExpression	0
>94	Identifier	start
>95	Identifier	start
>96	IdentifierDeclType	size_t
>97	IdentifierDecl	i = 0
>98	AssignmentExpr	i = 0
>99	PrimaryExpression	0
>100	Identifier	i
>101	Identifier	i
>102	IdentifierDeclType	size_t
>103	IdentifierDeclStatement	 
>104	IdentifierDecl	mergedDescriptors ( descCount , descriptors [ 0 ] . cols , descriptors [ 0 ] . type ( ) )
>105	Expression	descCount , descriptors [ 0 ] . cols , descriptors [ 0 ] . type ( )
>106	Expression	descriptors [ 0 ] . cols , descriptors [ 0 ] . type ( )
>107	CallExpression	descriptors [ 0 ] . type ( )
>108	ArgumentList	 
>109	Callee	descriptors [ 0 ] . type
>110	MemberAccess	descriptors [ 0 ] . type
>111	Identifier	type
>112	ArrayIndexing	descriptors [ 0 ]
>113	PrimaryExpression	0
>114	Identifier	descriptors
>115	MemberAccess	descriptors [ 0 ] . cols
>116	Identifier	cols
>117	ArrayIndexing	descriptors [ 0 ]
>118	PrimaryExpression	0
>119	Identifier	descriptors
>120	Identifier	descCount
>121	Identifier	mergedDescriptors
>122	IdentifierDeclType	Mat
>123	ForStatement	for ( size_t i = 0 ; i < descriptors . size ( ) ; i ++ )
>124	ExpressionStatement	 
>125	AssignmentExpr	descCount += descriptors [ i ] . rows
>126	MemberAccess	descriptors [ i ] . rows
>127	Identifier	rows
>128	ArrayIndexing	descriptors [ i ]
>129	Identifier	i
>130	Identifier	descriptors
>131	Identifier	descCount
>132	IncDecOp	 
>133	IncDec	++
>134	Identifier	i
>135	Condition	 
>136	RelationalExpression	i < descriptors . size ( )
>137	CallExpression	descriptors . size ( )
>138	ArgumentList	 
>139	Callee	descriptors . size
>140	MemberAccess	descriptors . size
>141	Identifier	size
>142	Identifier	descriptors
>143	Identifier	i
>144	ForInit	 
>145	IdentifierDeclStatement	size_t i = 0 ;
>146	IdentifierDecl	i = 0
>147	AssignmentExpr	i = 0
>148	PrimaryExpression	0
>149	Identifier	i
>150	Identifier	i
>151	IdentifierDeclType	size_t
>152	IdentifierDeclStatement	 
>153	IdentifierDecl	descCount = 0
>154	AssignmentExpr	descCount = 0
>155	PrimaryExpression	0
>156	Identifier	descCount
>157	Identifier	descCount
>158	IdentifierDeclType	int
>159	ExpressionStatement	 
>160	CallExpression	CV_Assert ( ! descriptors . empty ( ) )
>161	ArgumentList	! descriptors . empty ( )
>162	Argument	! descriptors . empty ( )
>163	UnaryOp	! descriptors . empty ( )
>164	CallExpression	descriptors . empty ( )
>165	ArgumentList	 
>166	Callee	descriptors . empty
>167	MemberAccess	descriptors . empty
>168	Identifier	empty
>169	Identifier	descriptors
>170	UnaryOperator	!
>171	Callee	CV_Assert
>172	Identifier	CV_Assert
>189	FunctionDef	BOWMSCTrainer 
>190	ParameterList	const Mat & descriptors
>191	Parameter	 
>192	Identifier	descriptors
>193	ParameterType	const Mat &
>194	ReturnType	Mat
>195	CompoundStatement	 
>196	ReturnStatement	 
>197	Identifier	vocabulary
>198	ForStatement	for ( size_t i = 0 ; i < clusters . size ( ) ; i ++ )
>199	CompoundStatement	 
>200	ExpressionStatement	 
>201	CallExpression	vocabulary . push_back ( centre )
>202	ArgumentList	centre
>203	Argument	centre
>204	Identifier	centre
>205	Callee	vocabulary . push_back
>206	MemberAccess	vocabulary . push_back
>207	Identifier	push_back
>208	Identifier	vocabulary
>209	ExpressionStatement	 
>210	AssignmentExpr	centre /= ( double ) clusters [ i ] . size ( )
>211	CastExpression	( double ) clusters [ i ] . size ( )
>212	CallExpression	clusters [ i ] . size ( )
>213	ArgumentList	 
>214	Callee	clusters [ i ] . size
>215	MemberAccess	clusters [ i ] . size
>216	Identifier	size
>217	ArrayIndexing	clusters [ i ]
>218	Identifier	i
>219	Identifier	clusters
>220	CastTarget	double
>221	Identifier	centre
>222	ForStatement	for ( list < Mat > 
>223	CompoundStatement	 
>224	ExpressionStatement	 
>225	AssignmentExpr	centre += * Ci
>226	UnaryOp	* Ci
>227	Identifier	Ci
>228	UnaryOperator	*
>229	Identifier	centre
>230	IncDecOp	 
>231	IncDec	++
>232	Identifier	Ci
>233	Condition	 
>234	EqualityExpression	Ci != clusters [ i ] . end ( )
>235	CallExpression	clusters [ i ] . end ( )
>236	ArgumentList	 
>237	Callee	clusters [ i ] . end
>238	MemberAccess	clusters [ i ] . end
>239	Identifier	end
>240	ArrayIndexing	clusters [ i ]
>241	Identifier	i
>242	Identifier	clusters
>243	Identifier	Ci
>244	ForInit	 
>245	IdentifierDeclStatement	list < Mat > 
>246	IdentifierDecl	Ci = clusters [ i ] . begin ( )
>247	AssignmentExpr	Ci = clusters [ i ] . begin ( )
>248	CallExpression	clusters [ i ] . begin ( )
>249	ArgumentList	 
>250	Callee	clusters [ i ] . begin
>251	MemberAccess	clusters [ i ] . begin
>252	Identifier	begin
>253	ArrayIndexing	clusters [ i ]
>254	Identifier	i
>255	Identifier	clusters
>256	Identifier	Ci
>257	Identifier	Ci
>258	IdentifierDeclType	list < Mat > 
>259	ExpressionStatement	 
>260	CallExpression	centre . setTo ( 0 )
>261	ArgumentList	0
>262	Argument	0
>263	PrimaryExpression	0
>264	Callee	centre . setTo
>265	MemberAccess	centre . setTo
>266	Identifier	setTo
>267	Identifier	centre
>268	IncDecOp	 
>269	IncDec	++
>270	Identifier	i
>271	Condition	 
>272	RelationalExpression	i < clusters . size ( )
>273	CallExpression	clusters . size ( )
>274	ArgumentList	 
>275	Callee	clusters . size
>276	MemberAccess	clusters . size
>277	Identifier	size
>278	Identifier	clusters
>279	Identifier	i
>280	ForInit	 
>281	IdentifierDeclStatement	size_t i = 0 ;
>282	IdentifierDecl	i = 0
>283	AssignmentExpr	i = 0
>284	PrimaryExpression	0
>285	Identifier	i
>286	Identifier	i
>287	IdentifierDeclType	size_t
>288	IdentifierDeclStatement	 
>289	IdentifierDecl	centre = Mat 
>290	AssignmentExpr	centre = Mat 
>291	CallExpression	Mat 
>292	ArgumentList	1
>293	Argument	descriptors . type ( )
>294	CallExpression	descriptors . type ( )
>295	ArgumentList	 
>296	Callee	descriptors . type
>297	MemberAccess	descriptors . type
>298	Identifier	type
>299	Identifier	descriptors
>300	Argument	descriptors . cols
>301	MemberAccess	descriptors . cols
>302	Identifier	cols
>303	Identifier	descriptors
>304	Argument	1
>305	PrimaryExpression	1
>306	Callee	Mat 
>307	Identifier	Mat 
>308	Identifier	centre
>309	Identifier	centre
>310	IdentifierDeclType	Mat
>311	IdentifierDeclStatement	 
>312	IdentifierDecl	vocabulary
>313	Identifier	vocabulary
>314	IdentifierDeclType	Mat
>315	ForStatement	for ( int i = 0 ; i < descriptors . rows ; i ++ )
>316	CompoundStatement	 
>317	ExpressionStatement	 
>318	CallExpression	clusters [ index ] . push_back ( descriptors . row ( i ) )
>319	ArgumentList	descriptors . row ( i )
>320	Argument	descriptors . row ( i )
>321	CallExpression	descriptors . row ( i )
>322	ArgumentList	i
>323	Argument	i
>324	Identifier	i
>325	Callee	descriptors . row
>326	MemberAccess	descriptors . row
>327	Identifier	row
>328	Identifier	descriptors
>329	Callee	clusters [ index ] . push_back
>330	MemberAccess	clusters [ index ] . push_back
>331	Identifier	push_back
>332	ArrayIndexing	clusters [ index ]
>333	Identifier	index
>334	Identifier	clusters
>335	ForStatement	for ( size_t j = 0 ; j < initialCentres . size ( ) ; j ++ )
>336	CompoundStatement	 
>337	IfStatement	if ( dist < minDist )
>338	CompoundStatement	 
>339	ExpressionStatement	 
>340	AssignmentExpr	index = j
>341	Identifier	j
>342	Identifier	index
>343	ExpressionStatement	 
>344	AssignmentExpr	minDist = dist
>345	Identifier	dist
>346	Identifier	minDist
>347	Condition	 
>348	RelationalExpression	dist < minDist
>349	Identifier	minDist
>350	Identifier	dist
>351	ExpressionStatement	 
>352	AssignmentExpr	dist = cv 
>353	CallExpression	cv 
>354	ArgumentList	descriptors . row ( i )
>355	Argument	icovar
>356	Identifier	icovar
>357	Argument	initialCentres [ j ]
>358	ArrayIndexing	initialCentres [ j ]
>359	Identifier	j
>360	Identifier	initialCentres
>361	Argument	descriptors . row ( i )
>362	CallExpression	descriptors . row ( i )
>363	ArgumentList	i
>364	Argument	i
>365	Identifier	i
>366	Callee	descriptors . row
>367	MemberAccess	descriptors . row
>368	Identifier	row
>369	Identifier	descriptors
>370	Callee	cv 
>371	Identifier	cv 
>372	Identifier	dist
>373	IncDecOp	 
>374	IncDec	++
>375	Identifier	j
>376	Condition	 
>377	RelationalExpression	j < initialCentres . size ( )
>378	CallExpression	initialCentres . size ( )
>379	ArgumentList	 
>380	Callee	initialCentres . size
>381	MemberAccess	initialCentres . size
>382	Identifier	size
>383	Identifier	initialCentres
>384	Identifier	j
>385	ForInit	 
>386	IdentifierDeclStatement	size_t j = 0 ;
>387	IdentifierDecl	j = 0
>388	AssignmentExpr	j = 0
>389	PrimaryExpression	0
>390	Identifier	j
>391	Identifier	j
>392	IdentifierDeclType	size_t
>393	IdentifierDeclStatement	 
>394	IdentifierDecl	minDist = DBL_MAX
>395	AssignmentExpr	minDist = DBL_MAX
>396	Identifier	DBL_MAX
>397	Identifier	DBL_MAX
>398	Identifier	minDist
>399	IdentifierDeclType	double
>400	IdentifierDecl	dist
>401	Identifier	dist
>402	IdentifierDeclType	double
>403	IdentifierDeclStatement	 
>404	IdentifierDecl	index
>405	Identifier	index
>406	IdentifierDeclType	int
>407	IncDecOp	 
>408	IncDec	++
>409	Identifier	i
>410	Condition	 
>411	RelationalExpression	i < descriptors . rows
>412	MemberAccess	descriptors . rows
>413	Identifier	rows
>414	Identifier	descriptors
>415	Identifier	i
>416	ForInit	 
>417	IdentifierDeclStatement	int i = 0 ;
>418	IdentifierDecl	i = 0
>419	AssignmentExpr	i = 0
>420	PrimaryExpression	0
>421	Identifier	i
>422	Identifier	i
>423	IdentifierDeclType	int
>424	ExpressionStatement	 
>425	CallExpression	clusters . resize ( initialCentres . size ( ) )
>426	ArgumentList	initialCentres . size ( )
>427	Argument	initialCentres . size ( )
>428	CallExpression	initialCentres . size ( )
>429	ArgumentList	 
>430	Callee	initialCentres . size
>431	MemberAccess	initialCentres . size
>432	Identifier	size
>433	Identifier	initialCentres
>434	Callee	clusters . resize
>435	MemberAccess	clusters . resize
>436	Identifier	resize
>437	Identifier	clusters
>438	IdentifierDeclStatement	 
>439	IdentifierDecl	clusters
>440	Identifier	clusters
>441	IdentifierDeclType	vector < list < Mat > >
>442	ForStatement	for ( int i = 1 ; i < descriptors . rows ; i ++ )
>443	CompoundStatement	 
>444	IfStatement	if ( minDist > clusterSize )
>445	ExpressionStatement	 
>446	CallExpression	initialCentres . push_back ( descriptors . row ( i ) )
>447	ArgumentList	descriptors . row ( i )
>448	Argument	descriptors . row ( i )
>449	CallExpression	descriptors . row ( i )
>450	ArgumentList	i
>451	Argument	i
>452	Identifier	i
>453	Callee	descriptors . row
>454	MemberAccess	descriptors . row
>455	Identifier	row
>456	Identifier	descriptors
>457	Callee	initialCentres . push_back
>458	MemberAccess	initialCentres . push_back
>459	Identifier	push_back
>460	Identifier	initialCentres
>461	Condition	 
>462	RelationalExpression	minDist > clusterSize
>463	Identifier	clusterSize
>464	Identifier	minDist
>465	ForStatement	for ( size_t j = 0 ; j < initialCentres . size ( ) ; j ++ )
>466	CompoundStatement	 
>467	ExpressionStatement	 
>468	AssignmentExpr	minDist = std 
>469	CallExpression	std 
>470	ArgumentList	minDist
>471	Argument	cv 
>472	CallExpression	cv 
>473	ArgumentList	descriptors . row ( i )
>474	Argument	icovar
>475	Identifier	icovar
>476	Argument	initialCentres [ j ]
>477	ArrayIndexing	initialCentres [ j ]
>478	Identifier	j
>479	Identifier	initialCentres
>480	Argument	descriptors . row ( i )
>481	CallExpression	descriptors . row ( i )
>482	ArgumentList	i
>483	Argument	i
>484	Identifier	i
>485	Callee	descriptors . row
>486	MemberAccess	descriptors . row
>487	Identifier	row
>488	Identifier	descriptors
>489	Callee	cv 
>490	Identifier	cv 
>491	Argument	minDist
>492	Identifier	minDist
>493	Callee	std 
>494	Identifier	std 
>495	Identifier	minDist
>496	IncDecOp	 
>497	IncDec	++
>498	Identifier	j
>499	Condition	 
>500	RelationalExpression	j < initialCentres . size ( )
>501	CallExpression	initialCentres . size ( )
>502	ArgumentList	 
>503	Callee	initialCentres . size
>504	MemberAccess	initialCentres . size
>505	Identifier	size
>506	Identifier	initialCentres
>507	Identifier	j
>508	ForInit	 
>509	IdentifierDeclStatement	size_t j = 0 ;
>510	IdentifierDecl	j = 0
>511	AssignmentExpr	j = 0
>512	PrimaryExpression	0
>513	Identifier	j
>514	Identifier	j
>515	IdentifierDeclType	size_t
>516	IdentifierDeclStatement	 
>517	IdentifierDecl	minDist = DBL_MAX
>518	AssignmentExpr	minDist = DBL_MAX
>519	Identifier	DBL_MAX
>520	Identifier	DBL_MAX
>521	Identifier	minDist
>522	IdentifierDeclType	double
>523	IncDecOp	 
>524	IncDec	++
>525	Identifier	i
>526	Condition	 
>527	RelationalExpression	i < descriptors . rows
>528	MemberAccess	descriptors . rows
>529	Identifier	rows
>530	Identifier	descriptors
>531	Identifier	i
>532	ForInit	 
>533	IdentifierDeclStatement	int i = 1 ;
>534	IdentifierDecl	i = 1
>535	AssignmentExpr	i = 1
>536	PrimaryExpression	1
>537	Identifier	i
>538	Identifier	i
>539	IdentifierDeclType	int
>540	ExpressionStatement	 
>541	CallExpression	initialCentres . push_back ( descriptors . row ( 0 ) )
>542	ArgumentList	descriptors . row ( 0 )
>543	Argument	descriptors . row ( 0 )
>544	CallExpression	descriptors . row ( 0 )
>545	ArgumentList	0
>546	Argument	0
>547	PrimaryExpression	0
>548	Callee	descriptors . row
>549	MemberAccess	descriptors . row
>550	Identifier	row
>551	Identifier	descriptors
>552	Callee	initialCentres . push_back
>553	MemberAccess	initialCentres . push_back
>554	Identifier	push_back
>555	Identifier	initialCentres
>556	IdentifierDeclStatement	 
>557	IdentifierDecl	initialCentres
>558	Identifier	initialCentres
>559	IdentifierDeclType	vector < Mat >
>560	IdentifierDeclStatement	 
>561	IdentifierDecl	icovar = Mat 
>562	AssignmentExpr	icovar = Mat 
>563	CallExpression	Mat 
>564	ArgumentList	descriptors . cols
>565	Argument	descriptors . type ( )
>566	CallExpression	descriptors . type ( )
>567	ArgumentList	 
>568	Callee	descriptors . type
>569	MemberAccess	descriptors . type
>570	Identifier	type
>571	Identifier	descriptors
>572	Argument	descriptors . cols
>573	MemberAccess	descriptors . cols
>574	Identifier	cols
>575	Identifier	descriptors
>576	Argument	descriptors . cols
>577	MemberAccess	descriptors . cols
>578	Identifier	cols
>579	Identifier	descriptors
>580	Callee	Mat 
>581	Identifier	Mat 
>582	Identifier	icovar
>583	Identifier	icovar
>584	IdentifierDeclType	Mat
>585	ExpressionStatement	 
>586	CallExpression	CV_Assert ( ! descriptors . empty ( ) )
>587	ArgumentList	! descriptors . empty ( )
>588	Argument	! descriptors . empty ( )
>589	UnaryOp	! descriptors . empty ( )
>590	CallExpression	descriptors . empty ( )
>591	ArgumentList	 
>592	Callee	descriptors . empty
>593	MemberAccess	descriptors . empty
>594	Identifier	empty
>595	Identifier	descriptors
>596	UnaryOperator	!
>597	Callee	CV_Assert
>598	Identifier	CV_Assert
<3=8,4
<4=5
<5=7,6
<13=15,14
<19=22,21,20
<22=159,152,123,103,30,23
<23=24
<24=28,25
<25=26
<26=27
<28=29
<30=89,80,77,31
<31=51,40,32
<32=33
<33=39,34
<34=36,35
<36=38,37
<40=41
<41=45,42
<42=43
<43=44
<45=46
<46=48,47
<48=50,49
<51=52
<52=76,75,53
<53=74,54
<54=70,55
<55=66,56
<56=57
<57=65,58
<58=64,59
<59=61,60
<61=63,62
<66=67
<67=69,68
<70=71
<71=73,72
<77=79,78
<80=81
<81=88,82
<82=84,83
<84=85
<85=87,86
<89=90
<90=97,91
<91=96,95,92
<92=94,93
<97=102,101,98
<98=100,99
<103=104
<104=122,121,105
<105=120,106
<106=115,107
<107=109,108
<109=110
<110=112,111
<112=114,113
<115=117,116
<117=119,118
<123=144,135,132,124
<124=125
<125=131,126
<126=128,127
<128=130,129
<132=134,133
<135=136
<136=143,137
<137=139,138
<139=140
<140=142,141
<144=145
<145=146
<146=151,150,147
<147=149,148
<152=153
<153=158,157,154
<154=156,155
<159=160
<160=171,161
<161=162
<162=163
<163=170,164
<164=166,165
<166=167
<167=169,168
<171=172
<189=195,194,190
<190=191
<191=193,192
<195=585,560,556,540,442,438,424,315,311,288,198,196
<196=197
<198=280,271,268,199
<199=259,222,209,200
<200=201
<201=205,202
<202=203
<203=204
<205=206
<206=208,207
<209=210
<210=221,211
<211=220,212
<212=214,213
<214=215
<215=217,216
<217=219,218
<222=244,233,230,223
<223=224
<224=225
<225=229,226
<226=228,227
<230=232,231
<233=234
<234=243,235
<235=237,236
<237=238
<238=240,239
<240=242,241
<244=245
<245=246
<246=258,257,247
<247=256,248
<248=250,249
<250=251
<251=253,252
<253=255,254
<259=260
<260=264,261
<261=262
<262=263
<264=265
<265=267,266
<268=270,269
<271=272
<272=279,273
<273=275,274
<275=276
<276=278,277
<280=281
<281=282
<282=287,286,283
<283=285,284
<288=289
<289=310,309,290
<290=308,291
<291=306,292
<292=304,300,293
<293=294
<294=296,295
<296=297
<297=299,298
<300=301
<301=303,302
<304=305
<306=307
<311=312
<312=314,313
<315=416,410,407,316
<316=403,393,335,317
<317=318
<318=329,319
<319=320
<320=321
<321=325,322
<322=323
<323=324
<325=326
<326=328,327
<329=330
<330=332,331
<332=334,333
<335=385,376,373,336
<336=351,337
<337=347,338
<338=343,339
<339=340
<340=342,341
<343=344
<344=346,345
<347=348
<348=350,349
<351=352
<352=372,353
<353=370,354
<354=361,357,355
<355=356
<357=358
<358=360,359
<361=362
<362=366,363
<363=364
<364=365
<366=367
<367=369,368
<370=371
<373=375,374
<376=377
<377=384,378
<378=380,379
<380=381
<381=383,382
<385=386
<386=387
<387=392,391,388
<388=390,389
<393=400,394
<394=399,398,395
<395=397,396
<400=402,401
<403=404
<404=406,405
<407=409,408
<410=411
<411=415,412
<412=414,413
<416=417
<417=418
<418=423,422,419
<419=421,420
<424=425
<425=434,426
<426=427
<427=428
<428=430,429
<430=431
<431=433,432
<434=435
<435=437,436
<438=439
<439=441,440
<442=532,526,523,443
<443=516,465,444
<444=461,445
<445=446
<446=457,447
<447=448
<448=449
<449=453,450
<450=451
<451=452
<453=454
<454=456,455
<457=458
<458=460,459
<461=462
<462=464,463
<465=508,499,496,466
<466=467
<467=468
<468=495,469
<469=493,470
<470=491,471
<471=472
<472=489,473
<473=480,476,474
<474=475
<476=477
<477=479,478
<480=481
<481=485,482
<482=483
<483=484
<485=486
<486=488,487
<489=490
<491=492
<493=494
<496=498,497
<499=500
<500=507,501
<501=503,502
<503=504
<504=506,505
<508=509
<509=510
<510=515,514,511
<511=513,512
<516=517
<517=522,521,518
<518=520,519
<523=525,524
<526=527
<527=531,528
<528=530,529
<532=533
<533=534
<534=539,538,535
<535=537,536
<540=541
<541=552,542
<542=543
<543=544
<544=548,545
<545=546
<546=547
<548=549
<549=551,550
<552=553
<553=555,554
<556=557
<557=559,558
<560=561
<561=584,583,562
<562=582,563
<563=580,564
<564=576,572,565
<565=566
<566=568,567
<568=569
<569=571,570
<572=573
<573=575,574
<576=577
<577=579,578
<580=581
<585=586
<586=597,587
<587=588
<588=589
<589=596,590
<590=592,591
<592=593
<593=595,594
<597=598
