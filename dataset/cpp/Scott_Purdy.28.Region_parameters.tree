>3	FunctionDef	Region 
>4	ParameterList	const std 
>5	Parameter	 
>6	Identifier	value
>7	ParameterType	Int32
>8	Parameter	 
>9	Identifier	name
>10	ParameterType	const std 
>11	ReturnType	void
>12	CompoundStatement	 
>13	ExpressionStatement	 
>14	CallExpression	impl_ -> setParameterInt32 ( name , ( Int64 ) - 1 , value )
>15	ArgumentList	name
>16	Argument	value
>17	Identifier	value
>18	Argument	( Int64 ) - 1
>19	CastExpression	( Int64 ) - 1
>20	UnaryOp	- 1
>21	PrimaryExpression	1
>22	UnaryOperator	-
>23	CastTarget	Int64
>24	Argument	name
>25	Identifier	name
>26	Callee	impl_ -> setParameterInt32
>27	PtrMemberAccess	impl_ -> setParameterInt32
>28	Identifier	setParameterInt32
>29	Identifier	impl_
>36	FunctionDef	Region 
>37	ParameterList	const std 
>38	Parameter	 
>39	Identifier	value
>40	ParameterType	UInt32
>41	Parameter	 
>42	Identifier	name
>43	ParameterType	const std 
>44	ReturnType	void
>45	CompoundStatement	 
>46	ExpressionStatement	 
>47	CallExpression	impl_ -> setParameterUInt32 ( name , ( Int64 ) - 1 , value )
>48	ArgumentList	name
>49	Argument	value
>50	Identifier	value
>51	Argument	( Int64 ) - 1
>52	CastExpression	( Int64 ) - 1
>53	UnaryOp	- 1
>54	PrimaryExpression	1
>55	UnaryOperator	-
>56	CastTarget	Int64
>57	Argument	name
>58	Identifier	name
>59	Callee	impl_ -> setParameterUInt32
>60	PtrMemberAccess	impl_ -> setParameterUInt32
>61	Identifier	setParameterUInt32
>62	Identifier	impl_
>69	FunctionDef	Region 
>70	ParameterList	const std 
>71	Parameter	 
>72	Identifier	value
>73	ParameterType	Int64
>74	Parameter	 
>75	Identifier	name
>76	ParameterType	const std 
>77	ReturnType	void
>78	CompoundStatement	 
>79	ExpressionStatement	 
>80	CallExpression	impl_ -> setParameterInt64 ( name , ( Int64 ) - 1 , value )
>81	ArgumentList	name
>82	Argument	value
>83	Identifier	value
>84	Argument	( Int64 ) - 1
>85	CastExpression	( Int64 ) - 1
>86	UnaryOp	- 1
>87	PrimaryExpression	1
>88	UnaryOperator	-
>89	CastTarget	Int64
>90	Argument	name
>91	Identifier	name
>92	Callee	impl_ -> setParameterInt64
>93	PtrMemberAccess	impl_ -> setParameterInt64
>94	Identifier	setParameterInt64
>95	Identifier	impl_
>102	FunctionDef	Region 
>103	ParameterList	const std 
>104	Parameter	 
>105	Identifier	value
>106	ParameterType	UInt64
>107	Parameter	 
>108	Identifier	name
>109	ParameterType	const std 
>110	ReturnType	void
>111	CompoundStatement	 
>112	ExpressionStatement	 
>113	CallExpression	impl_ -> setParameterUInt64 ( name , ( Int64 ) - 1 , value )
>114	ArgumentList	name
>115	Argument	value
>116	Identifier	value
>117	Argument	( Int64 ) - 1
>118	CastExpression	( Int64 ) - 1
>119	UnaryOp	- 1
>120	PrimaryExpression	1
>121	UnaryOperator	-
>122	CastTarget	Int64
>123	Argument	name
>124	Identifier	name
>125	Callee	impl_ -> setParameterUInt64
>126	PtrMemberAccess	impl_ -> setParameterUInt64
>127	Identifier	setParameterUInt64
>128	Identifier	impl_
>135	FunctionDef	Region 
>136	ParameterList	const std 
>137	Parameter	 
>138	Identifier	value
>139	ParameterType	Real32
>140	Parameter	 
>141	Identifier	name
>142	ParameterType	const std 
>143	ReturnType	void
>144	CompoundStatement	 
>145	ExpressionStatement	 
>146	CallExpression	impl_ -> setParameterReal32 ( name , ( Int64 ) - 1 , value )
>147	ArgumentList	name
>148	Argument	value
>149	Identifier	value
>150	Argument	( Int64 ) - 1
>151	CastExpression	( Int64 ) - 1
>152	UnaryOp	- 1
>153	PrimaryExpression	1
>154	UnaryOperator	-
>155	CastTarget	Int64
>156	Argument	name
>157	Identifier	name
>158	Callee	impl_ -> setParameterReal32
>159	PtrMemberAccess	impl_ -> setParameterReal32
>160	Identifier	setParameterReal32
>161	Identifier	impl_
>168	FunctionDef	Region 
>169	ParameterList	const std 
>170	Parameter	 
>171	Identifier	value
>172	ParameterType	Real64
>173	Parameter	 
>174	Identifier	name
>175	ParameterType	const std 
>176	ReturnType	void
>177	CompoundStatement	 
>178	ExpressionStatement	 
>179	CallExpression	impl_ -> setParameterReal64 ( name , ( Int64 ) - 1 , value )
>180	ArgumentList	name
>181	Argument	value
>182	Identifier	value
>183	Argument	( Int64 ) - 1
>184	CastExpression	( Int64 ) - 1
>185	UnaryOp	- 1
>186	PrimaryExpression	1
>187	UnaryOperator	-
>188	CastTarget	Int64
>189	Argument	name
>190	Identifier	name
>191	Callee	impl_ -> setParameterReal64
>192	PtrMemberAccess	impl_ -> setParameterReal64
>193	Identifier	setParameterReal64
>194	Identifier	impl_
>201	FunctionDef	Region 
>202	ParameterList	const std 
>203	Parameter	 
>204	Identifier	value
>205	ParameterType	Handle
>206	Parameter	 
>207	Identifier	name
>208	ParameterType	const std 
>209	ReturnType	void
>210	CompoundStatement	 
>211	ExpressionStatement	 
>212	CallExpression	impl_ -> setParameterHandle ( name , ( Int64 ) - 1 , value )
>213	ArgumentList	name
>214	Argument	value
>215	Identifier	value
>216	Argument	( Int64 ) - 1
>217	CastExpression	( Int64 ) - 1
>218	UnaryOp	- 1
>219	PrimaryExpression	1
>220	UnaryOperator	-
>221	CastTarget	Int64
>222	Argument	name
>223	Identifier	name
>224	Callee	impl_ -> setParameterHandle
>225	PtrMemberAccess	impl_ -> setParameterHandle
>226	Identifier	setParameterHandle
>227	Identifier	impl_
>234	FunctionDef	Region 
>235	ParameterList	const std 
>236	Parameter	 
>237	Identifier	name
>238	ParameterType	const std 
>239	ReturnType	Int32
>240	CompoundStatement	 
>241	ReturnStatement	 
>242	CallExpression	impl_ -> getParameterInt32 ( name , ( Int64 ) - 1 )
>243	ArgumentList	name
>244	Argument	( Int64 ) - 1
>245	CastExpression	( Int64 ) - 1
>246	UnaryOp	- 1
>247	PrimaryExpression	1
>248	UnaryOperator	-
>249	CastTarget	Int64
>250	Argument	name
>251	Identifier	name
>252	Callee	impl_ -> getParameterInt32
>253	PtrMemberAccess	impl_ -> getParameterInt32
>254	Identifier	getParameterInt32
>255	Identifier	impl_
>263	FunctionDef	Region 
>264	ParameterList	const std 
>265	Parameter	 
>266	Identifier	name
>267	ParameterType	const std 
>268	ReturnType	Int64
>269	CompoundStatement	 
>270	ReturnStatement	 
>271	CallExpression	impl_ -> getParameterInt64 ( name , ( Int64 ) - 1 )
>272	ArgumentList	name
>273	Argument	( Int64 ) - 1
>274	CastExpression	( Int64 ) - 1
>275	UnaryOp	- 1
>276	PrimaryExpression	1
>277	UnaryOperator	-
>278	CastTarget	Int64
>279	Argument	name
>280	Identifier	name
>281	Callee	impl_ -> getParameterInt64
>282	PtrMemberAccess	impl_ -> getParameterInt64
>283	Identifier	getParameterInt64
>284	Identifier	impl_
>292	FunctionDef	Region 
>293	ParameterList	const std 
>294	Parameter	 
>295	Identifier	name
>296	ParameterType	const std 
>297	ReturnType	UInt32
>298	CompoundStatement	 
>299	ReturnStatement	 
>300	CallExpression	impl_ -> getParameterUInt32 ( name , ( Int64 ) - 1 )
>301	ArgumentList	name
>302	Argument	( Int64 ) - 1
>303	CastExpression	( Int64 ) - 1
>304	UnaryOp	- 1
>305	PrimaryExpression	1
>306	UnaryOperator	-
>307	CastTarget	Int64
>308	Argument	name
>309	Identifier	name
>310	Callee	impl_ -> getParameterUInt32
>311	PtrMemberAccess	impl_ -> getParameterUInt32
>312	Identifier	getParameterUInt32
>313	Identifier	impl_
>321	FunctionDef	Region 
>322	ParameterList	const std 
>323	Parameter	 
>324	Identifier	name
>325	ParameterType	const std 
>326	ReturnType	UInt64
>327	CompoundStatement	 
>328	ReturnStatement	 
>329	CallExpression	impl_ -> getParameterUInt64 ( name , ( Int64 ) - 1 )
>330	ArgumentList	name
>331	Argument	( Int64 ) - 1
>332	CastExpression	( Int64 ) - 1
>333	UnaryOp	- 1
>334	PrimaryExpression	1
>335	UnaryOperator	-
>336	CastTarget	Int64
>337	Argument	name
>338	Identifier	name
>339	Callee	impl_ -> getParameterUInt64
>340	PtrMemberAccess	impl_ -> getParameterUInt64
>341	Identifier	getParameterUInt64
>342	Identifier	impl_
>350	FunctionDef	Region 
>351	ParameterList	const std 
>352	Parameter	 
>353	Identifier	name
>354	ParameterType	const std 
>355	ReturnType	Real32
>356	CompoundStatement	 
>357	ReturnStatement	 
>358	CallExpression	impl_ -> getParameterReal32 ( name , ( Int64 ) - 1 )
>359	ArgumentList	name
>360	Argument	( Int64 ) - 1
>361	CastExpression	( Int64 ) - 1
>362	UnaryOp	- 1
>363	PrimaryExpression	1
>364	UnaryOperator	-
>365	CastTarget	Int64
>366	Argument	name
>367	Identifier	name
>368	Callee	impl_ -> getParameterReal32
>369	PtrMemberAccess	impl_ -> getParameterReal32
>370	Identifier	getParameterReal32
>371	Identifier	impl_
>379	FunctionDef	Region 
>380	ParameterList	const std 
>381	Parameter	 
>382	Identifier	name
>383	ParameterType	const std 
>384	ReturnType	Real64
>385	CompoundStatement	 
>386	ReturnStatement	 
>387	CallExpression	impl_ -> getParameterReal64 ( name , ( Int64 ) - 1 )
>388	ArgumentList	name
>389	Argument	( Int64 ) - 1
>390	CastExpression	( Int64 ) - 1
>391	UnaryOp	- 1
>392	PrimaryExpression	1
>393	UnaryOperator	-
>394	CastTarget	Int64
>395	Argument	name
>396	Identifier	name
>397	Callee	impl_ -> getParameterReal64
>398	PtrMemberAccess	impl_ -> getParameterReal64
>399	Identifier	getParameterReal64
>400	Identifier	impl_
>408	FunctionDef	Region 
>409	ParameterList	const std 
>410	Parameter	 
>411	Identifier	name
>412	ParameterType	const std 
>413	ReturnType	Handle
>414	CompoundStatement	 
>415	ReturnStatement	 
>416	CallExpression	impl_ -> getParameterHandle ( name , ( Int64 ) - 1 )
>417	ArgumentList	name
>418	Argument	( Int64 ) - 1
>419	CastExpression	( Int64 ) - 1
>420	UnaryOp	- 1
>421	PrimaryExpression	1
>422	UnaryOperator	-
>423	CastTarget	Int64
>424	Argument	name
>425	Identifier	name
>426	Callee	impl_ -> getParameterHandle
>427	PtrMemberAccess	impl_ -> getParameterHandle
>428	Identifier	getParameterHandle
>429	Identifier	impl_
>437	FunctionDef	Region 
>438	ParameterList	const std 
>439	Parameter	 
>440	Identifier	array
>441	ParameterType	Array &
>442	Parameter	 
>443	Identifier	name
>444	ParameterType	const std 
>445	ReturnType	void
>446	CompoundStatement	 
>447	ExpressionStatement	 
>448	CallExpression	impl_ -> getParameterArray ( name , ( Int64 ) - 1 , array )
>449	ArgumentList	name
>450	Argument	array
>451	Identifier	array
>452	Argument	( Int64 ) - 1
>453	CastExpression	( Int64 ) - 1
>454	UnaryOp	- 1
>455	PrimaryExpression	1
>456	UnaryOperator	-
>457	CastTarget	Int64
>458	Argument	name
>459	Identifier	name
>460	Callee	impl_ -> getParameterArray
>461	PtrMemberAccess	impl_ -> getParameterArray
>462	Identifier	getParameterArray
>463	Identifier	impl_
>464	IfStatement	if ( array . getBuffer ( ) != NULL )
>465	ElseStatement	else
>466	CompoundStatement	 
>467	ExpressionStatement	 
>468	CallExpression	array . allocateBuffer ( count )
>469	ArgumentList	count
>470	Argument	count
>471	Identifier	count
>472	Callee	array . allocateBuffer
>473	MemberAccess	array . allocateBuffer
>474	Identifier	allocateBuffer
>475	Identifier	array
>476	CompoundStatement	 
>477	IfStatement	if ( array . getCount ( ) > count )
>478	ExpressionStatement	 
>479	ShiftExpression	NTA_THROW << \"getParameterArray -- supplied buffer for parameter \" << name << \" can hold \" << array \
>480	ShiftExpression	\"getParameterArray -- supplied buffer for parameter \" << name << \" can hold \" << array . getCount ( ) << \" \
>481	ShiftExpression	name << \" can hold \" << array . getCount ( ) << \" elements but parameter count is \" << count
>482	ShiftExpression	\" can hold \" << array . getCount ( ) << \" elements but parameter count is \" << count
>483	ShiftExpression	array . getCount ( ) << \" elements but parameter count is \" << count
>484	ShiftExpression	\" elements but parameter count is \" << count
>485	Identifier	count
>486	PrimaryExpression	\" elements but parameter count is \"
>487	CallExpression	array . getCount ( )
>488	ArgumentList	 
>489	Callee	array . getCount
>490	MemberAccess	array . getCount
>491	Identifier	getCount
>492	Identifier	array
>493	PrimaryExpression	\" can hold \"
>494	Identifier	name
>495	PrimaryExpression	\"getParameterArray -- supplied buffer for parameter \"
>496	Identifier	NTA_THROW
>497	Condition	 
>498	RelationalExpression	array . getCount ( ) > count
>499	Identifier	count
>500	CallExpression	array . getCount ( )
>501	ArgumentList	 
>502	Callee	array . getCount
>503	MemberAccess	array . getCount
>504	Identifier	getCount
>505	Identifier	array
>506	Condition	 
>507	EqualityExpression	array . getBuffer ( ) != NULL
>508	Identifier	NULL
>509	CallExpression	array . getBuffer ( )
>510	ArgumentList	 
>511	Callee	array . getBuffer
>512	MemberAccess	array . getBuffer
>513	Identifier	getBuffer
>514	Identifier	array
>515	IdentifierDeclStatement	 
>516	IdentifierDecl	count = impl_ -> getParameterArrayCount ( name , ( Int64 ) ( - 1 ) )
>517	AssignmentExpr	count = impl_ -> getParameterArrayCount ( name , ( Int64 ) ( - 1 ) )
>518	CallExpression	impl_ -> getParameterArrayCount ( name , ( Int64 ) ( - 1 ) )
>519	ArgumentList	name
>520	Argument	( Int64 ) ( - 1 )
>521	CastExpression	( Int64 ) ( - 1 )
>522	UnaryOp	- 1
>523	PrimaryExpression	1
>524	UnaryOperator	-
>525	CastTarget	Int64
>526	Argument	name
>527	Identifier	name
>528	Callee	impl_ -> getParameterArrayCount
>529	PtrMemberAccess	impl_ -> getParameterArrayCount
>530	Identifier	getParameterArrayCount
>531	Identifier	impl_
>532	Identifier	count
>533	Identifier	count
>534	IdentifierDeclType	size_t
>547	FunctionDef	Region 
>548	ParameterList	const std 
>549	Parameter	 
>550	Identifier	array
>551	ParameterType	const Array &
>552	Parameter	 
>553	Identifier	name
>554	ParameterType	const std 
>555	ReturnType	void
>556	CompoundStatement	 
>557	ExpressionStatement	 
>558	CallExpression	impl_ -> setParameterArray ( name , ( Int64 ) - 1 , array )
>559	ArgumentList	name
>560	Argument	array
>561	Identifier	array
>562	Argument	( Int64 ) - 1
>563	CastExpression	( Int64 ) - 1
>564	UnaryOp	- 1
>565	PrimaryExpression	1
>566	UnaryOperator	-
>567	CastTarget	Int64
>568	Argument	name
>569	Identifier	name
>570	Callee	impl_ -> setParameterArray
>571	PtrMemberAccess	impl_ -> setParameterArray
>572	Identifier	setParameterArray
>573	Identifier	impl_
>580	FunctionDef	Region 
>581	ParameterList	const std 
>582	Parameter	 
>583	Identifier	s
>584	ParameterType	const std 
>585	Parameter	 
>586	Identifier	name
>587	ParameterType	const std 
>588	ReturnType	void
>589	CompoundStatement	 
>590	ExpressionStatement	 
>591	CallExpression	impl_ -> setParameterString ( name , ( Int64 ) - 1 , s )
>592	ArgumentList	name
>593	Argument	s
>594	Identifier	s
>595	Argument	( Int64 ) - 1
>596	CastExpression	( Int64 ) - 1
>597	UnaryOp	- 1
>598	PrimaryExpression	1
>599	UnaryOperator	-
>600	CastTarget	Int64
>601	Argument	name
>602	Identifier	name
>603	Callee	impl_ -> setParameterString
>604	PtrMemberAccess	impl_ -> setParameterString
>605	Identifier	setParameterString
>606	Identifier	impl_
>613	FunctionDef	Region 
>614	ParameterList	const std 
>615	Parameter	 
>616	Identifier	name
>617	ParameterType	const std 
>618	ReturnType	std 
>619	CompoundStatement	 
>620	ReturnStatement	 
>621	CallExpression	impl_ -> getParameterString ( name , ( Int64 ) - 1 )
>622	ArgumentList	name
>623	Argument	( Int64 ) - 1
>624	CastExpression	( Int64 ) - 1
>625	UnaryOp	- 1
>626	PrimaryExpression	1
>627	UnaryOperator	-
>628	CastTarget	Int64
>629	Argument	name
>630	Identifier	name
>631	Callee	impl_ -> getParameterString
>632	PtrMemberAccess	impl_ -> getParameterString
>633	Identifier	getParameterString
>634	Identifier	impl_
>642	FunctionDef	Region 
>643	ParameterList	const std 
>644	Parameter	 
>645	Identifier	name
>646	ParameterType	const std 
>647	ReturnType	bool
>648	CompoundStatement	 
>649	ReturnStatement	 
>650	CallExpression	impl_ -> isParameterShared ( name )
>651	ArgumentList	name
>652	Argument	name
>653	Identifier	name
>654	Callee	impl_ -> isParameterShared
>655	PtrMemberAccess	impl_ -> isParameterShared
>656	Identifier	isParameterShared
>657	Identifier	impl_
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=13
<13=14
<14=26,15
<15=24,18,16
<16=17
<18=19
<19=23,20
<20=22,21
<24=25
<26=27
<27=29,28
<36=45,44,37
<37=41,38
<38=40,39
<41=43,42
<45=46
<46=47
<47=59,48
<48=57,51,49
<49=50
<51=52
<52=56,53
<53=55,54
<57=58
<59=60
<60=62,61
<69=78,77,70
<70=74,71
<71=73,72
<74=76,75
<78=79
<79=80
<80=92,81
<81=90,84,82
<82=83
<84=85
<85=89,86
<86=88,87
<90=91
<92=93
<93=95,94
<102=111,110,103
<103=107,104
<104=106,105
<107=109,108
<111=112
<112=113
<113=125,114
<114=123,117,115
<115=116
<117=118
<118=122,119
<119=121,120
<123=124
<125=126
<126=128,127
<135=144,143,136
<136=140,137
<137=139,138
<140=142,141
<144=145
<145=146
<146=158,147
<147=156,150,148
<148=149
<150=151
<151=155,152
<152=154,153
<156=157
<158=159
<159=161,160
<168=177,176,169
<169=173,170
<170=172,171
<173=175,174
<177=178
<178=179
<179=191,180
<180=189,183,181
<181=182
<183=184
<184=188,185
<185=187,186
<189=190
<191=192
<192=194,193
<201=210,209,202
<202=206,203
<203=205,204
<206=208,207
<210=211
<211=212
<212=224,213
<213=222,216,214
<214=215
<216=217
<217=221,218
<218=220,219
<222=223
<224=225
<225=227,226
<234=240,239,235
<235=236
<236=238,237
<240=241
<241=242
<242=252,243
<243=250,244
<244=245
<245=249,246
<246=248,247
<250=251
<252=253
<253=255,254
<263=269,268,264
<264=265
<265=267,266
<269=270
<270=271
<271=281,272
<272=279,273
<273=274
<274=278,275
<275=277,276
<279=280
<281=282
<282=284,283
<292=298,297,293
<293=294
<294=296,295
<298=299
<299=300
<300=310,301
<301=308,302
<302=303
<303=307,304
<304=306,305
<308=309
<310=311
<311=313,312
<321=327,326,322
<322=323
<323=325,324
<327=328
<328=329
<329=339,330
<330=337,331
<331=332
<332=336,333
<333=335,334
<337=338
<339=340
<340=342,341
<350=356,355,351
<351=352
<352=354,353
<356=357
<357=358
<358=368,359
<359=366,360
<360=361
<361=365,362
<362=364,363
<366=367
<368=369
<369=371,370
<379=385,384,380
<380=381
<381=383,382
<385=386
<386=387
<387=397,388
<388=395,389
<389=390
<390=394,391
<391=393,392
<395=396
<397=398
<398=400,399
<408=414,413,409
<409=410
<410=412,411
<414=415
<415=416
<416=426,417
<417=424,418
<418=419
<419=423,420
<420=422,421
<424=425
<426=427
<427=429,428
<437=446,445,438
<438=442,439
<439=441,440
<442=444,443
<446=515,464,447
<447=448
<448=460,449
<449=458,452,450
<450=451
<452=453
<453=457,454
<454=456,455
<458=459
<460=461
<461=463,462
<464=506,476,465
<465=466
<466=467
<467=468
<468=472,469
<469=470
<470=471
<472=473
<473=475,474
<476=477
<477=497,478
<478=479
<479=496,480
<480=495,481
<481=494,482
<482=493,483
<483=487,484
<484=486,485
<487=489,488
<489=490
<490=492,491
<497=498
<498=500,499
<500=502,501
<502=503
<503=505,504
<506=507
<507=509,508
<509=511,510
<511=512
<512=514,513
<515=516
<516=534,533,517
<517=532,518
<518=528,519
<519=526,520
<520=521
<521=525,522
<522=524,523
<526=527
<528=529
<529=531,530
<547=556,555,548
<548=552,549
<549=551,550
<552=554,553
<556=557
<557=558
<558=570,559
<559=568,562,560
<560=561
<562=563
<563=567,564
<564=566,565
<568=569
<570=571
<571=573,572
<580=589,588,581
<581=585,582
<582=584,583
<585=587,586
<589=590
<590=591
<591=603,592
<592=601,595,593
<593=594
<595=596
<596=600,597
<597=599,598
<601=602
<603=604
<604=606,605
<613=619,618,614
<614=615
<615=617,616
<619=620
<620=621
<621=631,622
<622=629,623
<623=624
<624=628,625
<625=627,626
<629=630
<631=632
<632=634,633
<642=648,647,643
<643=644
<644=646,645
<648=649
<649=650
<650=654,651
<651=652
<652=653
<654=655
<655=657,656
