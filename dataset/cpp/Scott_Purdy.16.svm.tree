>3	FunctionDef	svm_parameter 
>4	ParameterList	 
>5	ReturnType	void
>6	CompoundStatement	 
>7	ExpressionStatement	 
>8	ShiftExpression	std 
>9	ShiftExpression	\"kernel = \" << kernel << std 
>10	ShiftExpression	kernel << std 
>11	ShiftExpression	std 
>12	ShiftExpression	\"probability = \" << probability << std 
>13	ShiftExpression	probability << std 
>14	ShiftExpression	std 
>15	ShiftExpression	\"gamma = \" << gamma << std 
>16	ShiftExpression	gamma << std 
>17	ShiftExpression	std 
>18	ShiftExpression	\"C = \" << C << std 
>19	ShiftExpression	C << std 
>20	ShiftExpression	std 
>21	ShiftExpression	\"eps = \" << eps << std 
>22	ShiftExpression	eps << std 
>23	ShiftExpression	std 
>24	ShiftExpression	\"cache_size = \" << cache_size << std 
>25	ShiftExpression	cache_size << std 
>26	ShiftExpression	std 
>27	ShiftExpression	\"shrinking = \" << shrinking << std 
>28	ShiftExpression	shrinking << std 
>29	Identifier	std 
>30	Identifier	shrinking
>31	PrimaryExpression	\"shrinking = \"
>32	Identifier	std 
>33	Identifier	cache_size
>34	PrimaryExpression	\"cache_size = \"
>35	Identifier	std 
>36	Identifier	eps
>37	PrimaryExpression	\"eps = \"
>38	Identifier	std 
>39	Identifier	C
>40	PrimaryExpression	\"C = \"
>41	Identifier	std 
>42	Identifier	gamma
>43	PrimaryExpression	\"gamma = \"
>44	Identifier	std 
>45	Identifier	probability
>46	PrimaryExpression	\"probability = \"
>47	Identifier	std 
>48	Identifier	kernel
>49	PrimaryExpression	\"kernel = \"
>50	Identifier	std 
>54	FunctionDef	svm_parameter 
>55	ParameterList	 
>56	ReturnType	int
>57	CompoundStatement	 
>58	ReturnStatement	 
>59	Identifier	n
>60	ForStatement	for ( size_t i = 0 ; i != weight . size ( ) ; ++ i )
>61	ExpressionStatement	 
>62	AssignmentExpr	n += sprintf ( buffer , \"%e \" , weight [ i ] )
>63	CallExpression	sprintf ( buffer , \"%e \" , weight [ i ] )
>64	ArgumentList	buffer
>65	Argument	weight [ i ]
>66	ArrayIndexing	weight [ i ]
>67	Identifier	i
>68	Identifier	weight
>69	Argument	\"%e \"
>70	PrimaryExpression	\"%e \"
>71	Argument	buffer
>72	Identifier	buffer
>73	Callee	sprintf
>74	Identifier	sprintf
>75	Identifier	n
>76	UnaryExpression	 
>77	Identifier	i
>78	IncDec	++
>79	Condition	 
>80	EqualityExpression	i != weight . size ( )
>81	CallExpression	weight . size ( )
>82	ArgumentList	 
>83	Callee	weight . size
>84	MemberAccess	weight . size
>85	Identifier	size
>86	Identifier	weight
>87	Identifier	i
>88	ForInit	 
>89	IdentifierDeclStatement	size_t i = 0 ;
>90	IdentifierDecl	i = 0
>91	AssignmentExpr	i = 0
>92	PrimaryExpression	0
>93	Identifier	i
>94	Identifier	i
>95	IdentifierDeclType	size_t
>96	ExpressionStatement	 
>97	AssignmentExpr	n += sprintf ( buffer , \"%lu \" , ( unsigned long ) weight . size ( ) )
>98	CallExpression	sprintf ( buffer , \"%lu \" , ( unsigned long ) weight . size ( ) )
>99	ArgumentList	buffer
>100	Argument	( unsigned long ) weight . size ( )
>101	CastExpression	( unsigned long ) weight . size ( )
>102	CallExpression	weight . size ( )
>103	ArgumentList	 
>104	Callee	weight . size
>105	MemberAccess	weight . size
>106	Identifier	size
>107	Identifier	weight
>108	CastTarget	unsigned long
>109	Argument	\"%lu \"
>110	PrimaryExpression	\"%lu \"
>111	Argument	buffer
>112	Identifier	buffer
>113	Callee	sprintf
>114	Identifier	sprintf
>115	Identifier	n
>116	ForStatement	for ( size_t i = 0 ; i != weight_label . size ( ) ; ++ i )
>117	ExpressionStatement	 
>118	AssignmentExpr	n += sprintf ( buffer , \"%d \" , weight_label [ i ] )
>119	CallExpression	sprintf ( buffer , \"%d \" , weight_label [ i ] )
>120	ArgumentList	buffer
>121	Argument	weight_label [ i ]
>122	ArrayIndexing	weight_label [ i ]
>123	Identifier	i
>124	Identifier	weight_label
>125	Argument	\"%d \"
>126	PrimaryExpression	\"%d \"
>127	Argument	buffer
>128	Identifier	buffer
>129	Callee	sprintf
>130	Identifier	sprintf
>131	Identifier	n
>132	UnaryExpression	 
>133	Identifier	i
>134	IncDec	++
>135	Condition	 
>136	EqualityExpression	i != weight_label . size ( )
>137	CallExpression	weight_label . size ( )
>138	ArgumentList	 
>139	Callee	weight_label . size
>140	MemberAccess	weight_label . size
>141	Identifier	size
>142	Identifier	weight_label
>143	Identifier	i
>144	ForInit	 
>145	IdentifierDeclStatement	size_t i = 0 ;
>146	IdentifierDecl	i = 0
>147	AssignmentExpr	i = 0
>148	PrimaryExpression	0
>149	Identifier	i
>150	Identifier	i
>151	IdentifierDeclType	size_t
>152	ExpressionStatement	 
>153	AssignmentExpr	n += sprintf ( buffer , \"%lu \" , ( unsigned long ) weight_label . size ( ) )
>154	CallExpression	sprintf ( buffer , \"%lu \" , ( unsigned long ) weight_label . size ( ) )
>155	ArgumentList	buffer
>156	Argument	( unsigned long ) weight_label . size ( )
>157	CastExpression	( unsigned long ) weight_label . size ( )
>158	CallExpression	weight_label . size ( )
>159	ArgumentList	 
>160	Callee	weight_label . size
>161	MemberAccess	weight_label . size
>162	Identifier	size
>163	Identifier	weight_label
>164	CastTarget	unsigned long
>165	Argument	\"%lu \"
>166	PrimaryExpression	\"%lu \"
>167	Argument	buffer
>168	Identifier	buffer
>169	Callee	sprintf
>170	Identifier	sprintf
>171	Identifier	n
>172	IdentifierDeclStatement	 
>173	IdentifierDecl	buffer [ 32 ]
>174	PrimaryExpression	32
>175	Identifier	buffer
>176	IdentifierDeclType	char [ 32 ]
>177	IdentifierDeclStatement	 
>178	IdentifierDecl	n = b . str ( ) . size ( )
>179	AssignmentExpr	n = b . str ( ) . size ( )
>180	CallExpression	b . str ( ) . size ( )
>181	ArgumentList	 
>182	Callee	b . str ( ) . size
>183	MemberAccess	b . str ( ) . size
>184	Identifier	size
>185	CallExpression	b . str ( )
>186	ArgumentList	 
>187	Callee	b . str
>188	MemberAccess	b . str
>189	Identifier	str
>190	Identifier	b
>191	Identifier	n
>192	Identifier	n
>193	IdentifierDeclType	int
>194	ExpressionStatement	 
>195	ShiftExpression	b << kernel << ' ' << probability << ' ' << gamma << ' ' << C << ' ' << eps << ' ' << cache_size << ' ' << \
>196	ShiftExpression	kernel << ' ' << probability << ' ' << gamma << ' ' << C << ' ' << eps << ' ' << cache_size << ' ' << \
>197	ShiftExpression	' ' << probability << ' ' << gamma << ' ' << C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' '
>198	ShiftExpression	probability << ' ' << gamma << ' ' << C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' '
>199	ShiftExpression	' ' << gamma << ' ' << C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' '
>200	ShiftExpression	gamma << ' ' << C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' '
>201	ShiftExpression	' ' << C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' '
>202	ShiftExpression	C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' '
>203	ShiftExpression	' ' << eps << ' ' << cache_size << ' ' << shrinking << ' '
>204	ShiftExpression	eps << ' ' << cache_size << ' ' << shrinking << ' '
>205	ShiftExpression	' ' << cache_size << ' ' << shrinking << ' '
>206	ShiftExpression	cache_size << ' ' << shrinking << ' '
>207	ShiftExpression	' ' << shrinking << ' '
>208	ShiftExpression	shrinking << ' '
>209	PrimaryExpression	' '
>210	Identifier	shrinking
>211	PrimaryExpression	' '
>212	Identifier	cache_size
>213	PrimaryExpression	' '
>214	Identifier	eps
>215	PrimaryExpression	' '
>216	Identifier	C
>217	PrimaryExpression	' '
>218	Identifier	gamma
>219	PrimaryExpression	' '
>220	Identifier	probability
>221	PrimaryExpression	' '
>222	Identifier	kernel
>223	Identifier	b
>224	IdentifierDeclStatement	 
>225	IdentifierDecl	b
>226	Identifier	b
>227	IdentifierDeclType	stringstream
>245	FunctionDef	svm_parameter 
>246	ParameterList	std 
>247	Parameter	 
>248	Identifier	outStream
>249	ParameterType	std 
>250	ReturnType	void
>251	CompoundStatement	 
>252	ExpressionStatement	 
>253	ShiftExpression	outStream << kernel << ' ' << probability << ' ' << gamma << ' ' << C << ' ' << eps << ' ' << cache_\
>254	ShiftExpression	kernel << ' ' << probability << ' ' << gamma << ' ' << C << ' ' << eps << ' ' << cache_size << ' ' << \
>255	ShiftExpression	' ' << probability << ' ' << gamma << ' ' << C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' ' << \
>256	ShiftExpression	probability << ' ' << gamma << ' ' << C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' ' << \
>257	ShiftExpression	' ' << gamma << ' ' << C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' ' << weight_label << ' ' << \
>258	ShiftExpression	gamma << ' ' << C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' ' << weight_label << ' ' << \
>259	ShiftExpression	' ' << C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' ' << weight_label << ' ' << weight << ' '
>260	ShiftExpression	C << ' ' << eps << ' ' << cache_size << ' ' << shrinking << ' ' << weight_label << ' ' << weight << ' '
>261	ShiftExpression	' ' << eps << ' ' << cache_size << ' ' << shrinking << ' ' << weight_label << ' ' << weight << ' '
>262	ShiftExpression	eps << ' ' << cache_size << ' ' << shrinking << ' ' << weight_label << ' ' << weight << ' '
>263	ShiftExpression	' ' << cache_size << ' ' << shrinking << ' ' << weight_label << ' ' << weight << ' '
>264	ShiftExpression	cache_size << ' ' << shrinking << ' ' << weight_label << ' ' << weight << ' '
>265	ShiftExpression	' ' << shrinking << ' ' << weight_label << ' ' << weight << ' '
>266	ShiftExpression	shrinking << ' ' << weight_label << ' ' << weight << ' '
>267	ShiftExpression	' ' << weight_label << ' ' << weight << ' '
>268	ShiftExpression	weight_label << ' ' << weight << ' '
>269	ShiftExpression	' ' << weight << ' '
>270	ShiftExpression	weight << ' '
>271	PrimaryExpression	' '
>272	Identifier	weight
>273	PrimaryExpression	' '
>274	Identifier	weight_label
>275	PrimaryExpression	' '
>276	Identifier	shrinking
>277	PrimaryExpression	' '
>278	Identifier	cache_size
>279	PrimaryExpression	' '
>280	Identifier	eps
>281	PrimaryExpression	' '
>282	Identifier	C
>283	PrimaryExpression	' '
>284	Identifier	gamma
>285	PrimaryExpression	' '
>286	Identifier	probability
>287	PrimaryExpression	' '
>288	Identifier	kernel
>289	Identifier	outStream
>294	FunctionDef	svm_parameter 
>295	ParameterList	std 
>296	Parameter	 
>297	Identifier	inStream
>298	ParameterType	std 
>299	ReturnType	void
>300	CompoundStatement	 
>301	ExpressionStatement	 
>302	ShiftExpression	inStream >> kernel >> probability >> gamma >> C >> eps >> cache_size >> shrinking >> weight_label >> \
>303	ShiftExpression	kernel >> probability >> gamma >> C >> eps >> cache_size >> shrinking >> weight_label >> weight
>304	ShiftExpression	probability >> gamma >> C >> eps >> cache_size >> shrinking >> weight_label >> weight
>305	ShiftExpression	gamma >> C >> eps >> cache_size >> shrinking >> weight_label >> weight
>306	ShiftExpression	C >> eps >> cache_size >> shrinking >> weight_label >> weight
>307	ShiftExpression	eps >> cache_size >> shrinking >> weight_label >> weight
>308	ShiftExpression	cache_size >> shrinking >> weight_label >> weight
>309	ShiftExpression	shrinking >> weight_label >> weight
>310	ShiftExpression	weight_label >> weight
>311	Identifier	weight
>312	Identifier	weight_label
>313	Identifier	shrinking
>314	Identifier	cache_size
>315	Identifier	eps
>316	Identifier	C
>317	Identifier	gamma
>318	Identifier	probability
>319	Identifier	kernel
>320	Identifier	inStream
>325	FunctionDef	svm_problem 
>326	ParameterList	 
>327	ReturnType	int
>328	CompoundStatement	 
>329	ReturnStatement	 
>330	AdditiveExpression	b . str ( ) . size ( ) + y_ . size ( ) * sizeof ( label_type ) + size ( ) * n_dims ( ) * sizeof ( feature_\
>331	AdditiveExpression	y_ . size ( ) * sizeof ( label_type ) + size ( ) * n_dims ( ) * sizeof ( feature_type ) + 1
>332	AdditiveExpression	size ( ) * n_dims ( ) * sizeof ( feature_type ) + 1
>333	PrimaryExpression	1
>334	MultiplicativeExpression	size ( ) * n_dims ( ) * sizeof ( feature_type )
>335	MultiplicativeExpression	n_dims ( ) * sizeof ( feature_type )
>336	SizeofExpr	sizeof ( feature_type )
>337	SizeofOperand	feature_type
>338	Sizeof	sizeof
>339	CallExpression	n_dims ( )
>340	ArgumentList	 
>341	Callee	n_dims
>342	Identifier	n_dims
>343	CallExpression	size ( )
>344	ArgumentList	 
>345	Callee	size
>346	Identifier	size
>347	MultiplicativeExpression	y_ . size ( ) * sizeof ( label_type )
>348	SizeofExpr	sizeof ( label_type )
>349	SizeofOperand	label_type
>350	Sizeof	sizeof
>351	CallExpression	y_ . size ( )
>352	ArgumentList	 
>353	Callee	y_ . size
>354	MemberAccess	y_ . size
>355	Identifier	size
>356	Identifier	y_
>357	CallExpression	b . str ( ) . size ( )
>358	ArgumentList	 
>359	Callee	b . str ( ) . size
>360	MemberAccess	b . str ( ) . size
>361	Identifier	size
>362	CallExpression	b . str ( )
>363	ArgumentList	 
>364	Callee	b . str
>365	MemberAccess	b . str
>366	Identifier	str
>367	Identifier	b
>368	ExpressionStatement	 
>369	ShiftExpression	b << size ( ) << \" \" << n_dims ( ) << \" \"
>370	ShiftExpression	size ( ) << \" \" << n_dims ( ) << \" \"
>371	ShiftExpression	\" \" << n_dims ( ) << \" \"
>372	ShiftExpression	n_dims ( ) << \" \"
>373	PrimaryExpression	\" \"
>374	CallExpression	n_dims ( )
>375	ArgumentList	 
>376	Callee	n_dims
>377	Identifier	n_dims
>378	PrimaryExpression	\" \"
>379	CallExpression	size ( )
>380	ArgumentList	 
>381	Callee	size
>382	Identifier	size
>383	Identifier	b
>384	IdentifierDeclStatement	 
>385	IdentifierDecl	b
>386	Identifier	b
>387	IdentifierDeclType	stringstream
>398	FunctionDef	svm_problem 
>399	ParameterList	std 
>400	Parameter	 
>401	Identifier	outStream
>402	ParameterType	std 
>403	ReturnType	void
>404	CompoundStatement	 
>405	ExpressionStatement	 
>406	ShiftExpression	outStream << \" \"
>407	PrimaryExpression	\" \"
>408	Identifier	outStream
>409	ForStatement	for ( int i = 0 ; i < size ( ) ; ++ i )
>410	ExpressionStatement	 
>411	CallExpression	nta 
>412	ArgumentList	outStream
>413	Argument	x_ [ i ] + n_dims ( )
>414	AdditiveExpression	x_ [ i ] + n_dims ( )
>415	CallExpression	n_dims ( )
>416	ArgumentList	 
>417	Callee	n_dims
>418	Identifier	n_dims
>419	ArrayIndexing	x_ [ i ]
>420	Identifier	i
>421	Identifier	x_
>422	Argument	x_ [ i ]
>423	ArrayIndexing	x_ [ i ]
>424	Identifier	i
>425	Identifier	x_
>426	Argument	outStream
>427	Identifier	outStream
>428	Callee	nta 
>429	Identifier	nta 
>430	UnaryExpression	 
>431	Identifier	i
>432	IncDec	++
>433	Condition	 
>434	RelationalExpression	i < size ( )
>435	CallExpression	size ( )
>436	ArgumentList	 
>437	Callee	size
>438	Identifier	size
>439	Identifier	i
>440	ForInit	 
>441	IdentifierDeclStatement	int i = 0 ;
>442	IdentifierDecl	i = 0
>443	AssignmentExpr	i = 0
>444	PrimaryExpression	0
>445	Identifier	i
>446	Identifier	i
>447	IdentifierDeclType	int
>448	ExpressionStatement	 
>449	CallExpression	nta 
>450	ArgumentList	outStream
>451	Argument	y_
>452	Identifier	y_
>453	Argument	outStream
>454	Identifier	outStream
>455	Callee	nta 
>456	Identifier	nta 
>457	ExpressionStatement	 
>458	ShiftExpression	outStream << size ( ) << \" \" << n_dims ( ) << \" \"
>459	ShiftExpression	size ( ) << \" \" << n_dims ( ) << \" \"
>460	ShiftExpression	\" \" << n_dims ( ) << \" \"
>461	ShiftExpression	n_dims ( ) << \" \"
>462	PrimaryExpression	\" \"
>463	CallExpression	n_dims ( )
>464	ArgumentList	 
>465	Callee	n_dims
>466	Identifier	n_dims
>467	PrimaryExpression	\" \"
>468	CallExpression	size ( )
>469	ArgumentList	 
>470	Callee	size
>471	Identifier	size
>472	Identifier	outStream
>484	FunctionDef	svm_problem 
>485	ParameterList	std 
>486	Parameter	 
>487	Identifier	inStream
>488	ParameterType	std 
>489	ReturnType	void
>490	CompoundStatement	 
>491	ForStatement	for ( int i = 0 ; i < size ( ) ; ++ i )
>492	CompoundStatement	 
>493	ExpressionStatement	 
>494	CallExpression	nta 
>495	ArgumentList	inStream
>496	Argument	x_ [ i ] + n_dims ( )
>497	AdditiveExpression	x_ [ i ] + n_dims ( )
>498	CallExpression	n_dims ( )
>499	ArgumentList	 
>500	Callee	n_dims
>501	Identifier	n_dims
>502	ArrayIndexing	x_ [ i ]
>503	Identifier	i
>504	Identifier	x_
>505	Argument	x_ [ i ]
>506	ArrayIndexing	x_ [ i ]
>507	Identifier	i
>508	Identifier	x_
>509	Argument	inStream
>510	Identifier	inStream
>511	Callee	nta 
>512	Identifier	nta 
>513	ExpressionStatement	 
>514	CallExpression	std 
>515	ArgumentList	x_ [ i ]
>516	Argument	( float ) 0
>517	CastExpression	( float ) 0
>518	PrimaryExpression	0
>519	CastTarget	float
>520	Argument	x_ [ i ] + n_dims ( )
>521	AdditiveExpression	x_ [ i ] + n_dims ( )
>522	CallExpression	n_dims ( )
>523	ArgumentList	 
>524	Callee	n_dims
>525	Identifier	n_dims
>526	ArrayIndexing	x_ [ i ]
>527	Identifier	i
>528	Identifier	x_
>529	Argument	x_ [ i ]
>530	ArrayIndexing	x_ [ i ]
>531	Identifier	i
>532	Identifier	x_
>533	Callee	std 
>534	Identifier	std 
>535	ExpressionStatement	 
>536	AssignmentExpr	x_ [ i ] = ( float * ) _aligned_malloc ( 4 * n_dims ( ) , 16 )
>537	CastExpression	( float * ) _aligned_malloc ( 4 * n_dims ( ) , 16 )
>538	CallExpression	_aligned_malloc ( 4 * n_dims ( ) , 16 )
>539	ArgumentList	4 * n_dims ( )
>540	Argument	16
>541	PrimaryExpression	16
>542	Argument	4 * n_dims ( )
>543	MultiplicativeExpression	4 * n_dims ( )
>544	CallExpression	n_dims ( )
>545	ArgumentList	 
>546	Callee	n_dims
>547	Identifier	n_dims
>548	PrimaryExpression	4
>549	Callee	_aligned_malloc
>550	Identifier	_aligned_malloc
>551	CastTarget	float *
>552	ArrayIndexing	x_ [ i ]
>553	Identifier	i
>554	Identifier	x_
>555	UnaryExpression	 
>556	Identifier	i
>557	IncDec	++
>558	Condition	 
>559	RelationalExpression	i < size ( )
>560	CallExpression	size ( )
>561	ArgumentList	 
>562	Callee	size
>563	Identifier	size
>564	Identifier	i
>565	ForInit	 
>566	IdentifierDeclStatement	int i = 0 ;
>567	IdentifierDecl	i = 0
>568	AssignmentExpr	i = 0
>569	PrimaryExpression	0
>570	Identifier	i
>571	Identifier	i
>572	IdentifierDeclType	int
>573	ExpressionStatement	 
>574	CallExpression	nta 
>575	ArgumentList	inStream
>576	Argument	y_
>577	Identifier	y_
>578	Argument	inStream
>579	Identifier	inStream
>580	Callee	nta 
>581	Identifier	nta 
>582	ExpressionStatement	 
>583	CallExpression	inStream . ignore ( 1 )
>584	ArgumentList	1
>585	Argument	1
>586	PrimaryExpression	1
>587	Callee	inStream . ignore
>588	MemberAccess	inStream . ignore
>589	Identifier	ignore
>590	Identifier	inStream
>591	ExpressionStatement	 
>592	CallExpression	x_ . resize ( s , 0 )
>593	ArgumentList	s
>594	Argument	0
>595	PrimaryExpression	0
>596	Argument	s
>597	Identifier	s
>598	Callee	x_ . resize
>599	MemberAccess	x_ . resize
>600	Identifier	resize
>601	Identifier	x_
>602	ExpressionStatement	 
>603	CallExpression	y_ . resize ( s , 0 )
>604	ArgumentList	s
>605	Argument	0
>606	PrimaryExpression	0
>607	Argument	s
>608	Identifier	s
>609	Callee	y_ . resize
>610	MemberAccess	y_ . resize
>611	Identifier	resize
>612	Identifier	y_
>613	ExpressionStatement	 
>614	ArrayIndexing	x_ [ i ]
>615	Identifier	i
>616	Identifier	x_
>617	Statement	 
>618	Statement	 
>619	IfStatement	if ( recover_ )
>620	ForStatement	for ( size_t i = 0 ; i != x_ . size ( ) ; ++ i )
>621	Statement	 
>622	UnaryExpression	 
>623	Identifier	i
>624	IncDec	++
>625	Condition	 
>626	EqualityExpression	i != x_ . size ( )
>627	CallExpression	x_ . size ( )
>628	ArgumentList	 
>629	Callee	x_ . size
>630	MemberAccess	x_ . size
>631	Identifier	size
>632	Identifier	x_
>633	Identifier	i
>634	ForInit	 
>635	IdentifierDeclStatement	size_t i = 0 ;
>636	IdentifierDecl	i = 0
>637	AssignmentExpr	i = 0
>638	PrimaryExpression	0
>639	Identifier	i
>640	Identifier	i
>641	IdentifierDeclType	size_t
>642	Condition	 
>643	Identifier	recover_
>644	ExpressionStatement	 
>645	ShiftExpression	inStream >> s >> n_dims_
>646	ShiftExpression	s >> n_dims_
>647	Identifier	n_dims_
>648	Identifier	s
>649	Identifier	inStream
>650	IdentifierDeclStatement	 
>651	IdentifierDecl	s = 0
>652	AssignmentExpr	s = 0
>653	PrimaryExpression	0
>654	Identifier	s
>655	Identifier	s
>656	IdentifierDeclType	int
>672	FunctionDef	svm_problem01 
>673	ParameterList	 
>674	ReturnType	int
>675	CompoundStatement	 
>676	ReturnStatement	 
>677	AdditiveExpression	n + 1
>678	PrimaryExpression	1
>679	Identifier	n
>680	ForStatement	for ( int i = 0 ; i != size ( ) ; ++ i )
>681	ExpressionStatement	 
>682	AssignmentExpr	n += nnz_ [ i ] * sizeof ( feature_type )
>683	MultiplicativeExpression	nnz_ [ i ] * sizeof ( feature_type )
>684	SizeofExpr	sizeof ( feature_type )
>685	SizeofOperand	feature_type
>686	Sizeof	sizeof
>687	ArrayIndexing	nnz_ [ i ]
>688	Identifier	i
>689	Identifier	nnz_
>690	Identifier	n
>691	UnaryExpression	 
>692	Identifier	i
>693	IncDec	++
>694	Condition	 
>695	EqualityExpression	i != size ( )
>696	CallExpression	size ( )
>697	ArgumentList	 
>698	Callee	size
>699	Identifier	size
>700	Identifier	i
>701	ForInit	 
>702	IdentifierDeclStatement	int i = 0 ;
>703	IdentifierDecl	i = 0
>704	AssignmentExpr	i = 0
>705	PrimaryExpression	0
>706	Identifier	i
>707	Identifier	i
>708	IdentifierDeclType	int
>709	ExpressionStatement	 
>710	AssignmentExpr	n += nnz_ . size ( ) * sizeof ( int )
>711	MultiplicativeExpression	nnz_ . size ( ) * sizeof ( int )
>712	SizeofExpr	sizeof ( int )
>713	SizeofOperand	int
>714	Sizeof	sizeof
>715	CallExpression	nnz_ . size ( )
>716	ArgumentList	 
>717	Callee	nnz_ . size
>718	MemberAccess	nnz_ . size
>719	Identifier	size
>720	Identifier	nnz_
>721	Identifier	n
>722	ExpressionStatement	 
>723	AssignmentExpr	n += y_ . size ( ) * sizeof ( float )
>724	MultiplicativeExpression	y_ . size ( ) * sizeof ( float )
>725	SizeofExpr	sizeof ( float )
>726	SizeofOperand	float
>727	Sizeof	sizeof
>728	CallExpression	y_ . size ( )
>729	ArgumentList	 
>730	Callee	y_ . size
>731	MemberAccess	y_ . size
>732	Identifier	size
>733	Identifier	y_
>734	Identifier	n
>735	IdentifierDeclStatement	 
>736	IdentifierDecl	n = b . str ( ) . size ( )
>737	AssignmentExpr	n = b . str ( ) . size ( )
>738	CallExpression	b . str ( ) . size ( )
>739	ArgumentList	 
>740	Callee	b . str ( ) . size
>741	MemberAccess	b . str ( ) . size
>742	Identifier	size
>743	CallExpression	b . str ( )
>744	ArgumentList	 
>745	Callee	b . str
>746	MemberAccess	b . str
>747	Identifier	str
>748	Identifier	b
>749	Identifier	n
>750	Identifier	n
>751	IdentifierDeclType	int
>752	ExpressionStatement	 
>753	ShiftExpression	b << size ( ) << \" \" << n_dims ( ) << \" \" << threshold_ << \" \"
>754	ShiftExpression	size ( ) << \" \" << n_dims ( ) << \" \" << threshold_ << \" \"
>755	ShiftExpression	\" \" << n_dims ( ) << \" \" << threshold_ << \" \"
>756	ShiftExpression	n_dims ( ) << \" \" << threshold_ << \" \"
>757	ShiftExpression	\" \" << threshold_ << \" \"
>758	ShiftExpression	threshold_ << \" \"
>759	PrimaryExpression	\" \"
>760	Identifier	threshold_
>761	PrimaryExpression	\" \"
>762	CallExpression	n_dims ( )
>763	ArgumentList	 
>764	Callee	n_dims
>765	Identifier	n_dims
>766	PrimaryExpression	\" \"
>767	CallExpression	size ( )
>768	ArgumentList	 
>769	Callee	size
>770	Identifier	size
>771	Identifier	b
>772	IdentifierDeclStatement	 
>773	IdentifierDecl	b
>774	Identifier	b
>775	IdentifierDeclType	stringstream
>791	FunctionDef	svm_problem01 
>792	ParameterList	std 
>793	Parameter	 
>794	Identifier	outStream
>795	ParameterType	std 
>796	ReturnType	void
>797	CompoundStatement	 
>798	ExpressionStatement	 
>799	ShiftExpression	outStream << \" \"
>800	PrimaryExpression	\" \"
>801	Identifier	outStream
>802	ForStatement	for ( int i = 0 ; i < size ( ) ; ++ i )
>803	ExpressionStatement	 
>804	CallExpression	nta 
>805	ArgumentList	outStream
>806	Argument	x_ [ i ] + nnz_ [ i ]
>807	AdditiveExpression	x_ [ i ] + nnz_ [ i ]
>808	ArrayIndexing	nnz_ [ i ]
>809	Identifier	i
>810	Identifier	nnz_
>811	ArrayIndexing	x_ [ i ]
>812	Identifier	i
>813	Identifier	x_
>814	Argument	x_ [ i ]
>815	ArrayIndexing	x_ [ i ]
>816	Identifier	i
>817	Identifier	x_
>818	Argument	outStream
>819	Identifier	outStream
>820	Callee	nta 
>821	Identifier	nta 
>822	UnaryExpression	 
>823	Identifier	i
>824	IncDec	++
>825	Condition	 
>826	RelationalExpression	i < size ( )
>827	CallExpression	size ( )
>828	ArgumentList	 
>829	Callee	size
>830	Identifier	size
>831	Identifier	i
>832	ForInit	 
>833	IdentifierDeclStatement	int i = 0 ;
>834	IdentifierDecl	i = 0
>835	AssignmentExpr	i = 0
>836	PrimaryExpression	0
>837	Identifier	i
>838	Identifier	i
>839	IdentifierDeclType	int
>840	ExpressionStatement	 
>841	CallExpression	nta 
>842	ArgumentList	outStream
>843	Argument	nnz_
>844	Identifier	nnz_
>845	Argument	outStream
>846	Identifier	outStream
>847	Callee	nta 
>848	Identifier	nta 
>849	ExpressionStatement	 
>850	CallExpression	nta 
>851	ArgumentList	outStream
>852	Argument	y_
>853	Identifier	y_
>854	Argument	outStream
>855	Identifier	outStream
>856	Callee	nta 
>857	Identifier	nta 
>858	ExpressionStatement	 
>859	ShiftExpression	outStream << size ( ) << \" \" << n_dims ( ) << \" \" << threshold_ << \" \"
>860	ShiftExpression	size ( ) << \" \" << n_dims ( ) << \" \" << threshold_ << \" \"
>861	ShiftExpression	\" \" << n_dims ( ) << \" \" << threshold_ << \" \"
>862	ShiftExpression	n_dims ( ) << \" \" << threshold_ << \" \"
>863	ShiftExpression	\" \" << threshold_ << \" \"
>864	ShiftExpression	threshold_ << \" \"
>865	PrimaryExpression	\" \"
>866	Identifier	threshold_
>867	PrimaryExpression	\" \"
>868	CallExpression	n_dims ( )
>869	ArgumentList	 
>870	Callee	n_dims
>871	Identifier	n_dims
>872	PrimaryExpression	\" \"
>873	CallExpression	size ( )
>874	ArgumentList	 
>875	Callee	size
>876	Identifier	size
>877	Identifier	outStream
>890	FunctionDef	svm_problem01 
>891	ParameterList	std 
>892	Parameter	 
>893	Identifier	inStream
>894	ParameterType	std 
>895	ReturnType	void
>896	CompoundStatement	 
>897	ForStatement	for ( int i = 0 ; i < s ; ++ i )
>898	CompoundStatement	 
>899	ExpressionStatement	 
>900	CallExpression	nta 
>901	ArgumentList	inStream
>902	Argument	x_ [ i ] + nnz_ [ i ]
>903	AdditiveExpression	x_ [ i ] + nnz_ [ i ]
>904	ArrayIndexing	nnz_ [ i ]
>905	Identifier	i
>906	Identifier	nnz_
>907	ArrayIndexing	x_ [ i ]
>908	Identifier	i
>909	Identifier	x_
>910	Argument	x_ [ i ]
>911	ArrayIndexing	x_ [ i ]
>912	Identifier	i
>913	Identifier	x_
>914	Argument	inStream
>915	Identifier	inStream
>916	Callee	nta 
>917	Identifier	nta 
>918	ExpressionStatement	 
>919	AssignmentExpr	x_ [ i ] = new feature_type [ nnz_ [ i ] ]
>920	ArrayIndexing	nnz_ [ i ]
>921	Identifier	i
>922	Identifier	nnz_
>923	ArrayIndexing	x_ [ i ]
>924	Identifier	i
>925	Identifier	x_
>926	UnaryExpression	 
>927	Identifier	i
>928	IncDec	++
>929	Condition	 
>930	RelationalExpression	i < s
>931	Identifier	s
>932	Identifier	i
>933	ForInit	 
>934	IdentifierDeclStatement	int i = 0 ;
>935	IdentifierDecl	i = 0
>936	AssignmentExpr	i = 0
>937	PrimaryExpression	0
>938	Identifier	i
>939	Identifier	i
>940	IdentifierDeclType	int
>941	ExpressionStatement	 
>942	CallExpression	nta 
>943	ArgumentList	inStream
>944	Argument	nnz_
>945	Identifier	nnz_
>946	Argument	inStream
>947	Identifier	inStream
>948	Callee	nta 
>949	Identifier	nta 
>950	ExpressionStatement	 
>951	CallExpression	nta 
>952	ArgumentList	inStream
>953	Argument	y_
>954	Identifier	y_
>955	Argument	inStream
>956	Identifier	inStream
>957	Callee	nta 
>958	Identifier	nta 
>959	ExpressionStatement	 
>960	CallExpression	inStream . ignore ( 1 )
>961	ArgumentList	1
>962	Argument	1
>963	PrimaryExpression	1
>964	Callee	inStream . ignore
>965	MemberAccess	inStream . ignore
>966	Identifier	ignore
>967	Identifier	inStream
>968	ExpressionStatement	 
>969	CallExpression	x_ . resize ( s , 0 )
>970	ArgumentList	s
>971	Argument	0
>972	PrimaryExpression	0
>973	Argument	s
>974	Identifier	s
>975	Callee	x_ . resize
>976	MemberAccess	x_ . resize
>977	Identifier	resize
>978	Identifier	x_
>979	ExpressionStatement	 
>980	CallExpression	nnz_ . resize ( s , 0 )
>981	ArgumentList	s
>982	Argument	0
>983	PrimaryExpression	0
>984	Argument	s
>985	Identifier	s
>986	Callee	nnz_ . resize
>987	MemberAccess	nnz_ . resize
>988	Identifier	resize
>989	Identifier	nnz_
>990	ExpressionStatement	 
>991	CallExpression	y_ . resize ( s , 0 )
>992	ArgumentList	s
>993	Argument	0
>994	PrimaryExpression	0
>995	Argument	s
>996	Identifier	s
>997	Callee	y_ . resize
>998	MemberAccess	y_ . resize
>999	Identifier	resize
>1000	Identifier	y_
>1001	ExpressionStatement	 
>1002	ArrayIndexing	x_ [ i ]
>1003	Identifier	i
>1004	Identifier	x_
>1005	Statement	 
>1006	Statement	 
>1007	IfStatement	if ( recover_ )
>1008	ForStatement	for ( size_t i = 0 ; i < x_ . size ( ) ; ++ i )
>1009	Statement	 
>1010	UnaryExpression	 
>1011	Identifier	i
>1012	IncDec	++
>1013	Condition	 
>1014	RelationalExpression	i < x_ . size ( )
>1015	CallExpression	x_ . size ( )
>1016	ArgumentList	 
>1017	Callee	x_ . size
>1018	MemberAccess	x_ . size
>1019	Identifier	size
>1020	Identifier	x_
>1021	Identifier	i
>1022	ForInit	 
>1023	IdentifierDeclStatement	size_t i = 0 ;
>1024	IdentifierDecl	i = 0
>1025	AssignmentExpr	i = 0
>1026	PrimaryExpression	0
>1027	Identifier	i
>1028	Identifier	i
>1029	IdentifierDeclType	size_t
>1030	Condition	 
>1031	Identifier	recover_
>1032	ExpressionStatement	 
>1033	ShiftExpression	inStream >> s >> n_dims_ >> threshold_
>1034	ShiftExpression	s >> n_dims_ >> threshold_
>1035	ShiftExpression	n_dims_ >> threshold_
>1036	Identifier	threshold_
>1037	Identifier	n_dims_
>1038	Identifier	s
>1039	Identifier	inStream
>1040	IdentifierDeclStatement	 
>1041	IdentifierDecl	s = 0
>1042	AssignmentExpr	s = 0
>1043	PrimaryExpression	0
>1044	Identifier	s
>1045	Identifier	s
>1046	IdentifierDeclType	int
>1061	FunctionDef	svm_model 
>1062	ParameterList	 
>1063	CompoundStatement	 
>1064	ExpressionStatement	 
>1065	ArrayIndexing	sv_coef [ i ]
>1066	Identifier	i
>1067	Identifier	sv_coef
>1068	Statement	 
>1069	Statement	 
>1070	ForStatement	for ( size_t i = 0 ; i != sv_coef . size ( ) ; ++ i )
>1071	Statement	 
>1072	UnaryExpression	 
>1073	Identifier	i
>1074	IncDec	++
>1075	Condition	 
>1076	EqualityExpression	i != sv_coef . size ( )
>1077	CallExpression	sv_coef . size ( )
>1078	ArgumentList	 
>1079	Callee	sv_coef . size
>1080	MemberAccess	sv_coef . size
>1081	Identifier	size
>1082	Identifier	sv_coef
>1083	Identifier	i
>1084	ForInit	 
>1085	IdentifierDeclStatement	size_t i = 0 ;
>1086	IdentifierDecl	i = 0
>1087	AssignmentExpr	i = 0
>1088	PrimaryExpression	0
>1089	Identifier	i
>1090	Identifier	i
>1091	IdentifierDeclType	size_t
>1092	IfStatement	if ( sv_mem == NULL )
>1093	ElseStatement	else
>1094	CompoundStatement	 
>1095	ExpressionStatement	 
>1096	CallExpression	sv . clear ( )
>1097	ArgumentList	 
>1098	Callee	sv . clear
>1099	MemberAccess	sv . clear
>1100	Identifier	clear
>1101	Identifier	sv
>1102	ExpressionStatement	 
>1103	AssignmentExpr	sv_mem = NULL
>1104	Identifier	NULL
>1105	Identifier	sv_mem
>1106	ExpressionStatement	 
>1107	CallExpression	_aligned_free ( sv_mem )
>1108	ArgumentList	sv_mem
>1109	Argument	sv_mem
>1110	Identifier	sv_mem
>1111	Callee	_aligned_free
>1112	Identifier	_aligned_free
>1113	CompoundStatement	 
>1114	ForStatement	for ( size_t i = 0 ; i != sv . size ( ) ; ++ i )
>1115	ExpressionStatement	 
>1116	CallExpression	_aligned_free ( sv [ i ] )
>1117	ArgumentList	sv [ i ]
>1118	Argument	sv [ i ]
>1119	ArrayIndexing	sv [ i ]
>1120	Identifier	i
>1121	Identifier	sv
>1122	Callee	_aligned_free
>1123	Identifier	_aligned_free
>1124	UnaryExpression	 
>1125	Identifier	i
>1126	IncDec	++
>1127	Condition	 
>1128	EqualityExpression	i != sv . size ( )
>1129	CallExpression	sv . size ( )
>1130	ArgumentList	 
>1131	Callee	sv . size
>1132	MemberAccess	sv . size
>1133	Identifier	size
>1134	Identifier	sv
>1135	Identifier	i
>1136	ForInit	 
>1137	IdentifierDeclStatement	size_t i = 0 ;
>1138	IdentifierDecl	i = 0
>1139	AssignmentExpr	i = 0
>1140	PrimaryExpression	0
>1141	Identifier	i
>1142	Identifier	i
>1143	IdentifierDeclType	size_t
>1144	Condition	 
>1145	EqualityExpression	sv_mem == NULL
>1146	Identifier	NULL
>1147	Identifier	sv_mem
>1160	FunctionDef	svm_model 
>1161	ParameterList	 
>1162	ReturnType	void
>1163	CompoundStatement	 
>1164	IfStatement	if ( ! probA . empty ( ) )
>1165	CompoundStatement	 
>1166	ExpressionStatement	 
>1167	ShiftExpression	std 
>1168	Identifier	std 
>1169	Identifier	std 
>1170	ForStatement	for ( size_t i = 0 ; i != probB . size ( ) ; ++ i )
>1171	ExpressionStatement	 
>1172	ShiftExpression	std 
>1173	ShiftExpression	probB [ i ] << \" \"
>1174	PrimaryExpression	\" \"
>1175	ArrayIndexing	probB [ i ]
>1176	Identifier	i
>1177	Identifier	probB
>1178	Identifier	std 
>1179	UnaryExpression	 
>1180	Identifier	i
>1181	IncDec	++
>1182	Condition	 
>1183	EqualityExpression	i != probB . size ( )
>1184	CallExpression	probB . size ( )
>1185	ArgumentList	 
>1186	Callee	probB . size
>1187	MemberAccess	probB . size
>1188	Identifier	size
>1189	Identifier	probB
>1190	Identifier	i
>1191	ForInit	 
>1192	IdentifierDeclStatement	size_t i = 0 ;
>1193	IdentifierDecl	i = 0
>1194	AssignmentExpr	i = 0
>1195	PrimaryExpression	0
>1196	Identifier	i
>1197	Identifier	i
>1198	IdentifierDeclType	size_t
>1199	ExpressionStatement	 
>1200	ShiftExpression	std 
>1201	ShiftExpression	\"Probabilities B
>1202	Identifier	std 
>1203	PrimaryExpression	\"Probabilities B
>1204	Identifier	std 
>1205	ExpressionStatement	 
>1206	ShiftExpression	std 
>1207	Identifier	std 
>1208	Identifier	std 
>1209	ForStatement	for ( size_t i = 0 ; i != probA . size ( ) ; ++ i )
>1210	ExpressionStatement	 
>1211	ShiftExpression	std 
>1212	ShiftExpression	probA [ i ] << \" \"
>1213	PrimaryExpression	\" \"
>1214	ArrayIndexing	probA [ i ]
>1215	Identifier	i
>1216	Identifier	probA
>1217	Identifier	std 
>1218	UnaryExpression	 
>1219	Identifier	i
>1220	IncDec	++
>1221	Condition	 
>1222	EqualityExpression	i != probA . size ( )
>1223	CallExpression	probA . size ( )
>1224	ArgumentList	 
>1225	Callee	probA . size
>1226	MemberAccess	probA . size
>1227	Identifier	size
>1228	Identifier	probA
>1229	Identifier	i
>1230	ForInit	 
>1231	IdentifierDeclStatement	size_t i = 0 ;
>1232	IdentifierDecl	i = 0
>1233	AssignmentExpr	i = 0
>1234	PrimaryExpression	0
>1235	Identifier	i
>1236	Identifier	i
>1237	IdentifierDeclType	size_t
>1238	ExpressionStatement	 
>1239	ShiftExpression	std 
>1240	ShiftExpression	\"Probabilities A
>1241	Identifier	std 
>1242	PrimaryExpression	\"Probabilities A
>1243	Identifier	std 
>1244	Condition	 
>1245	UnaryOp	! probA . empty ( )
>1246	CallExpression	probA . empty ( )
>1247	ArgumentList	 
>1248	Callee	probA . empty
>1249	MemberAccess	probA . empty
>1250	Identifier	empty
>1251	Identifier	probA
>1252	UnaryOperator	!
>1253	ExpressionStatement	 
>1254	ShiftExpression	std 
>1255	Identifier	std 
>1256	Identifier	std 
>1257	ForStatement	for ( size_t i = 0 ; i != rho . size ( ) ; ++ i )
>1258	ExpressionStatement	 
>1259	ShiftExpression	std 
>1260	ShiftExpression	rho [ i ] << \" \"
>1261	PrimaryExpression	\" \"
>1262	ArrayIndexing	rho [ i ]
>1263	Identifier	i
>1264	Identifier	rho
>1265	Identifier	std 
>1266	UnaryExpression	 
>1267	Identifier	i
>1268	IncDec	++
>1269	Condition	 
>1270	EqualityExpression	i != rho . size ( )
>1271	CallExpression	rho . size ( )
>1272	ArgumentList	 
>1273	Callee	rho . size
>1274	MemberAccess	rho . size
>1275	Identifier	size
>1276	Identifier	rho
>1277	Identifier	i
>1278	ForInit	 
>1279	IdentifierDeclStatement	size_t i = 0 ;
>1280	IdentifierDecl	i = 0
>1281	AssignmentExpr	i = 0
>1282	PrimaryExpression	0
>1283	Identifier	i
>1284	Identifier	i
>1285	IdentifierDeclType	size_t
>1286	ExpressionStatement	 
>1287	ShiftExpression	std 
>1288	ShiftExpression	\"Rho
>1289	Identifier	std 
>1290	PrimaryExpression	\"Rho
>1291	Identifier	std 
>1292	ForStatement	for ( size_t i = 0 ; i != sv_coef . size ( ) ; ++ i )
>1293	CompoundStatement	 
>1294	ExpressionStatement	 
>1295	ShiftExpression	std 
>1296	Identifier	std 
>1297	Identifier	std 
>1298	ForStatement	for ( int j = 0 ; j != size ( ) ; ++ j )
>1299	ExpressionStatement	 
>1300	ShiftExpression	std 
>1301	ShiftExpression	sv_coef [ i ] [ j ] << \" \"
>1302	PrimaryExpression	\" \"
>1303	ArrayIndexing	sv_coef [ i ] [ j ]
>1304	Identifier	j
>1305	ArrayIndexing	sv_coef [ i ]
>1306	Identifier	i
>1307	Identifier	sv_coef
>1308	Identifier	std 
>1309	UnaryExpression	 
>1310	Identifier	j
>1311	IncDec	++
>1312	Condition	 
>1313	EqualityExpression	j != size ( )
>1314	CallExpression	size ( )
>1315	ArgumentList	 
>1316	Callee	size
>1317	Identifier	size
>1318	Identifier	j
>1319	ForInit	 
>1320	IdentifierDeclStatement	int j = 0 ;
>1321	IdentifierDecl	j = 0
>1322	AssignmentExpr	j = 0
>1323	PrimaryExpression	0
>1324	Identifier	j
>1325	Identifier	j
>1326	IdentifierDeclType	int
>1327	UnaryExpression	 
>1328	Identifier	i
>1329	IncDec	++
>1330	Condition	 
>1331	EqualityExpression	i != sv_coef . size ( )
>1332	CallExpression	sv_coef . size ( )
>1333	ArgumentList	 
>1334	Callee	sv_coef . size
>1335	MemberAccess	sv_coef . size
>1336	Identifier	size
>1337	Identifier	sv_coef
>1338	Identifier	i
>1339	ForInit	 
>1340	IdentifierDeclStatement	size_t i = 0 ;
>1341	IdentifierDecl	i = 0
>1342	AssignmentExpr	i = 0
>1343	PrimaryExpression	0
>1344	Identifier	i
>1345	Identifier	i
>1346	IdentifierDeclType	size_t
>1347	ExpressionStatement	 
>1348	ShiftExpression	std 
>1349	ShiftExpression	\"Support vector coefficients
>1350	Identifier	std 
>1351	PrimaryExpression	\"Support vector coefficients
>1352	Identifier	std 
>1353	ForStatement	for ( size_t i = 0 ; i != sv . size ( ) ; ++ i )
>1354	CompoundStatement	 
>1355	ExpressionStatement	 
>1356	ShiftExpression	std 
>1357	Identifier	std 
>1358	Identifier	std 
>1359	ForStatement	for ( int j = 0 ; j != n_dims ( ) ; ++ j )
>1360	ExpressionStatement	 
>1361	ShiftExpression	std 
>1362	ShiftExpression	sv [ i ] [ j ] << \" \"
>1363	PrimaryExpression	\" \"
>1364	ArrayIndexing	sv [ i ] [ j ]
>1365	Identifier	j
>1366	ArrayIndexing	sv [ i ]
>1367	Identifier	i
>1368	Identifier	sv
>1369	Identifier	std 
>1370	UnaryExpression	 
>1371	Identifier	j
>1372	IncDec	++
>1373	Condition	 
>1374	EqualityExpression	j != n_dims ( )
>1375	CallExpression	n_dims ( )
>1376	ArgumentList	 
>1377	Callee	n_dims
>1378	Identifier	n_dims
>1379	Identifier	j
>1380	ForInit	 
>1381	IdentifierDeclStatement	int j = 0 ;
>1382	IdentifierDecl	j = 0
>1383	AssignmentExpr	j = 0
>1384	PrimaryExpression	0
>1385	Identifier	j
>1386	Identifier	j
>1387	IdentifierDeclType	int
>1388	UnaryExpression	 
>1389	Identifier	i
>1390	IncDec	++
>1391	Condition	 
>1392	EqualityExpression	i != sv . size ( )
>1393	CallExpression	sv . size ( )
>1394	ArgumentList	 
>1395	Callee	sv . size
>1396	MemberAccess	sv . size
>1397	Identifier	size
>1398	Identifier	sv
>1399	Identifier	i
>1400	ForInit	 
>1401	IdentifierDeclStatement	size_t i = 0 ;
>1402	IdentifierDecl	i = 0
>1403	AssignmentExpr	i = 0
>1404	PrimaryExpression	0
>1405	Identifier	i
>1406	Identifier	i
>1407	IdentifierDeclType	size_t
>1408	ExpressionStatement	 
>1409	ShiftExpression	std 
>1410	ShiftExpression	\"Support vectors
>1411	Identifier	std 
>1412	PrimaryExpression	\"Support vectors
>1413	Identifier	std 
>1414	ExpressionStatement	 
>1415	ShiftExpression	std 
>1416	ShiftExpression	\"n classes = \" << n_class ( ) << \" n sv = \" << size ( ) << \" n dims = \" << n_dims ( ) << std 
>1417	ShiftExpression	n_class ( ) << \" n sv = \" << size ( ) << \" n dims = \" << n_dims ( ) << std 
>1418	ShiftExpression	\" n sv = \" << size ( ) << \" n dims = \" << n_dims ( ) << std 
>1419	ShiftExpression	size ( ) << \" n dims = \" << n_dims ( ) << std 
>1420	ShiftExpression	\" n dims = \" << n_dims ( ) << std 
>1421	ShiftExpression	n_dims ( ) << std 
>1422	Identifier	std 
>1423	CallExpression	n_dims ( )
>1424	ArgumentList	 
>1425	Callee	n_dims
>1426	Identifier	n_dims
>1427	PrimaryExpression	\" n dims = \"
>1428	CallExpression	size ( )
>1429	ArgumentList	 
>1430	Callee	size
>1431	Identifier	size
>1432	PrimaryExpression	\" n sv = \"
>1433	CallExpression	n_class ( )
>1434	ArgumentList	 
>1435	Callee	n_class
>1436	Identifier	n_class
>1437	PrimaryExpression	\"n classes = \"
>1438	Identifier	std 
>1460	FunctionDef	svm_model 
>1461	ParameterList	 
>1462	ReturnType	int
>1463	CompoundStatement	 
>1464	ReturnStatement	 
>1465	Identifier	n
>1466	CompoundStatement	 
>1467	ExpressionStatement	 
>1468	AssignmentExpr	n += b2 . str ( ) . size ( )
>1469	CallExpression	b2 . str ( ) . size ( )
>1470	ArgumentList	 
>1471	Callee	b2 . str ( ) . size
>1472	MemberAccess	b2 . str ( ) . size
>1473	Identifier	size
>1474	CallExpression	b2 . str ( )
>1475	ArgumentList	 
>1476	Callee	b2 . str
>1477	MemberAccess	b2 . str
>1478	Identifier	str
>1479	Identifier	b2
>1480	Identifier	n
>1481	ExpressionStatement	 
>1482	ShiftExpression	b2 << w << \" \"
>1483	ShiftExpression	w << \" \"
>1484	PrimaryExpression	\" \"
>1485	Identifier	w
>1486	Identifier	b2
>1487	IdentifierDeclStatement	 
>1488	IdentifierDecl	b2
>1489	Identifier	b2
>1490	IdentifierDeclType	stringstream
>1491	CompoundStatement	 
>1492	ExpressionStatement	 
>1493	AssignmentExpr	n += b2 . str ( ) . size ( )
>1494	CallExpression	b2 . str ( ) . size ( )
>1495	ArgumentList	 
>1496	Callee	b2 . str ( ) . size
>1497	MemberAccess	b2 . str ( ) . size
>1498	Identifier	size
>1499	CallExpression	b2 . str ( )
>1500	ArgumentList	 
>1501	Callee	b2 . str
>1502	MemberAccess	b2 . str
>1503	Identifier	str
>1504	Identifier	b2
>1505	Identifier	n
>1506	ExpressionStatement	 
>1507	ShiftExpression	b2 << probB << \" \"
>1508	ShiftExpression	probB << \" \"
>1509	PrimaryExpression	\" \"
>1510	Identifier	probB
>1511	Identifier	b2
>1512	IdentifierDeclStatement	 
>1513	IdentifierDecl	b2
>1514	Identifier	b2
>1515	IdentifierDeclType	stringstream
>1516	CompoundStatement	 
>1517	ExpressionStatement	 
>1518	AssignmentExpr	n += b2 . str ( ) . size ( )
>1519	CallExpression	b2 . str ( ) . size ( )
>1520	ArgumentList	 
>1521	Callee	b2 . str ( ) . size
>1522	MemberAccess	b2 . str ( ) . size
>1523	Identifier	size
>1524	CallExpression	b2 . str ( )
>1525	ArgumentList	 
>1526	Callee	b2 . str
>1527	MemberAccess	b2 . str
>1528	Identifier	str
>1529	Identifier	b2
>1530	Identifier	n
>1531	ExpressionStatement	 
>1532	ShiftExpression	b2 << probA << \" \"
>1533	ShiftExpression	probA << \" \"
>1534	PrimaryExpression	\" \"
>1535	Identifier	probA
>1536	Identifier	b2
>1537	IdentifierDeclStatement	 
>1538	IdentifierDecl	b2
>1539	Identifier	b2
>1540	IdentifierDeclType	stringstream
>1541	CompoundStatement	 
>1542	ExpressionStatement	 
>1543	AssignmentExpr	n += b2 . str ( ) . size ( )
>1544	CallExpression	b2 . str ( ) . size ( )
>1545	ArgumentList	 
>1546	Callee	b2 . str ( ) . size
>1547	MemberAccess	b2 . str ( ) . size
>1548	Identifier	size
>1549	CallExpression	b2 . str ( )
>1550	ArgumentList	 
>1551	Callee	b2 . str
>1552	MemberAccess	b2 . str
>1553	Identifier	str
>1554	Identifier	b2
>1555	Identifier	n
>1556	ExpressionStatement	 
>1557	ShiftExpression	b2 << n_sv << \" \"
>1558	ShiftExpression	n_sv << \" \"
>1559	PrimaryExpression	\" \"
>1560	Identifier	n_sv
>1561	Identifier	b2
>1562	IdentifierDeclStatement	 
>1563	IdentifierDecl	b2
>1564	Identifier	b2
>1565	IdentifierDeclType	stringstream
>1566	CompoundStatement	 
>1567	ExpressionStatement	 
>1568	AssignmentExpr	n += b2 . str ( ) . size ( )
>1569	CallExpression	b2 . str ( ) . size ( )
>1570	ArgumentList	 
>1571	Callee	b2 . str ( ) . size
>1572	MemberAccess	b2 . str ( ) . size
>1573	Identifier	size
>1574	CallExpression	b2 . str ( )
>1575	ArgumentList	 
>1576	Callee	b2 . str
>1577	MemberAccess	b2 . str
>1578	Identifier	str
>1579	Identifier	b2
>1580	Identifier	n
>1581	ExpressionStatement	 
>1582	ShiftExpression	b2 << label << \" \"
>1583	ShiftExpression	label << \" \"
>1584	PrimaryExpression	\" \"
>1585	Identifier	label
>1586	Identifier	b2
>1587	IdentifierDeclStatement	 
>1588	IdentifierDecl	b2
>1589	Identifier	b2
>1590	IdentifierDeclType	stringstream
>1591	CompoundStatement	 
>1592	ExpressionStatement	 
>1593	AssignmentExpr	n += b2 . str ( ) . size ( )
>1594	CallExpression	b2 . str ( ) . size ( )
>1595	ArgumentList	 
>1596	Callee	b2 . str ( ) . size
>1597	MemberAccess	b2 . str ( ) . size
>1598	Identifier	size
>1599	CallExpression	b2 . str ( )
>1600	ArgumentList	 
>1601	Callee	b2 . str
>1602	MemberAccess	b2 . str
>1603	Identifier	str
>1604	Identifier	b2
>1605	Identifier	n
>1606	ExpressionStatement	 
>1607	ShiftExpression	b2 << rho << \" \"
>1608	ShiftExpression	rho << \" \"
>1609	PrimaryExpression	\" \"
>1610	Identifier	rho
>1611	Identifier	b2
>1612	IdentifierDeclStatement	 
>1613	IdentifierDecl	b2
>1614	Identifier	b2
>1615	IdentifierDeclType	stringstream
>1616	CompoundStatement	 
>1617	ExpressionStatement	 
>1618	AssignmentExpr	n += b2 . str ( ) . size ( )
>1619	CallExpression	b2 . str ( ) . size ( )
>1620	ArgumentList	 
>1621	Callee	b2 . str ( ) . size
>1622	MemberAccess	b2 . str ( ) . size
>1623	Identifier	size
>1624	CallExpression	b2 . str ( )
>1625	ArgumentList	 
>1626	Callee	b2 . str
>1627	MemberAccess	b2 . str
>1628	Identifier	str
>1629	Identifier	b2
>1630	Identifier	n
>1631	ForStatement	for ( size_t i = 0 ; i < sv_coef . size ( ) ; ++ i )
>1632	CompoundStatement	 
>1633	ForStatement	for ( int j = 0 ; j < size ( ) ; ++ j )
>1634	ExpressionStatement	 
>1635	ShiftExpression	b2 << sv_coef [ i ] [ j ] << \" \"
>1636	ShiftExpression	sv_coef [ i ] [ j ] << \" \"
>1637	PrimaryExpression	\" \"
>1638	ArrayIndexing	sv_coef [ i ] [ j ]
>1639	Identifier	j
>1640	ArrayIndexing	sv_coef [ i ]
>1641	Identifier	i
>1642	Identifier	sv_coef
>1643	Identifier	b2
>1644	UnaryExpression	 
>1645	Identifier	j
>1646	IncDec	++
>1647	Condition	 
>1648	RelationalExpression	j < size ( )
>1649	CallExpression	size ( )
>1650	ArgumentList	 
>1651	Callee	size
>1652	Identifier	size
>1653	Identifier	j
>1654	ForInit	 
>1655	IdentifierDeclStatement	int j = 0 ;
>1656	IdentifierDecl	j = 0
>1657	AssignmentExpr	j = 0
>1658	PrimaryExpression	0
>1659	Identifier	j
>1660	Identifier	j
>1661	IdentifierDeclType	int
>1662	UnaryExpression	 
>1663	Identifier	i
>1664	IncDec	++
>1665	Condition	 
>1666	RelationalExpression	i < sv_coef . size ( )
>1667	CallExpression	sv_coef . size ( )
>1668	ArgumentList	 
>1669	Callee	sv_coef . size
>1670	MemberAccess	sv_coef . size
>1671	Identifier	size
>1672	Identifier	sv_coef
>1673	Identifier	i
>1674	ForInit	 
>1675	IdentifierDeclStatement	size_t i = 0 ;
>1676	IdentifierDecl	i = 0
>1677	AssignmentExpr	i = 0
>1678	PrimaryExpression	0
>1679	Identifier	i
>1680	Identifier	i
>1681	IdentifierDeclType	size_t
>1682	IdentifierDeclStatement	 
>1683	IdentifierDecl	b2
>1684	Identifier	b2
>1685	IdentifierDeclType	stringstream
>1686	ExpressionStatement	 
>1687	AssignmentExpr	n += sv . size ( ) * n_dims ( ) * sizeof ( float ) + 1
>1688	AdditiveExpression	sv . size ( ) * n_dims ( ) * sizeof ( float ) + 1
>1689	PrimaryExpression	1
>1690	MultiplicativeExpression	sv . size ( ) * n_dims ( ) * sizeof ( float )
>1691	MultiplicativeExpression	n_dims ( ) * sizeof ( float )
>1692	SizeofExpr	sizeof ( float )
>1693	SizeofOperand	float
>1694	Sizeof	sizeof
>1695	CallExpression	n_dims ( )
>1696	ArgumentList	 
>1697	Callee	n_dims
>1698	Identifier	n_dims
>1699	CallExpression	sv . size ( )
>1700	ArgumentList	 
>1701	Callee	sv . size
>1702	MemberAccess	sv . size
>1703	Identifier	size
>1704	Identifier	sv
>1705	Identifier	n
>1706	IdentifierDeclStatement	 
>1707	IdentifierDecl	n = b . str ( ) . size ( )
>1708	AssignmentExpr	n = b . str ( ) . size ( )
>1709	CallExpression	b . str ( ) . size ( )
>1710	ArgumentList	 
>1711	Callee	b . str ( ) . size
>1712	MemberAccess	b . str ( ) . size
>1713	Identifier	size
>1714	CallExpression	b . str ( )
>1715	ArgumentList	 
>1716	Callee	b . str
>1717	MemberAccess	b . str
>1718	Identifier	str
>1719	Identifier	b
>1720	Identifier	n
>1721	Identifier	n
>1722	IdentifierDeclType	int
>1723	ExpressionStatement	 
>1724	ShiftExpression	b << n_class ( ) << \" \" << size ( ) << \" \" << n_dims ( ) << \" \"
>1725	ShiftExpression	n_class ( ) << \" \" << size ( ) << \" \" << n_dims ( ) << \" \"
>1726	ShiftExpression	\" \" << size ( ) << \" \" << n_dims ( ) << \" \"
>1727	ShiftExpression	size ( ) << \" \" << n_dims ( ) << \" \"
>1728	ShiftExpression	\" \" << n_dims ( ) << \" \"
>1729	ShiftExpression	n_dims ( ) << \" \"
>1730	PrimaryExpression	\" \"
>1731	CallExpression	n_dims ( )
>1732	ArgumentList	 
>1733	Callee	n_dims
>1734	Identifier	n_dims
>1735	PrimaryExpression	\" \"
>1736	CallExpression	size ( )
>1737	ArgumentList	 
>1738	Callee	size
>1739	Identifier	size
>1740	PrimaryExpression	\" \"
>1741	CallExpression	n_class ( )
>1742	ArgumentList	 
>1743	Callee	n_class
>1744	Identifier	n_class
>1745	Identifier	b
>1746	IdentifierDeclStatement	 
>1747	IdentifierDecl	b
>1748	Identifier	b
>1749	IdentifierDeclType	stringstream
>1770	FunctionDef	svm_model 
>1771	ParameterList	std 
>1772	Parameter	 
>1773	Identifier	outStream
>1774	ParameterType	std 
>1775	ReturnType	void
>1776	CompoundStatement	 
>1777	ExpressionStatement	 
>1778	ShiftExpression	outStream << rho << ' ' << label << ' ' << n_sv << ' ' << probA << ' ' << probB << ' ' << w << ' '
>1779	ShiftExpression	rho << ' ' << label << ' ' << n_sv << ' ' << probA << ' ' << probB << ' ' << w << ' '
>1780	ShiftExpression	' ' << label << ' ' << n_sv << ' ' << probA << ' ' << probB << ' ' << w << ' '
>1781	ShiftExpression	label << ' ' << n_sv << ' ' << probA << ' ' << probB << ' ' << w << ' '
>1782	ShiftExpression	' ' << n_sv << ' ' << probA << ' ' << probB << ' ' << w << ' '
>1783	ShiftExpression	n_sv << ' ' << probA << ' ' << probB << ' ' << w << ' '
>1784	ShiftExpression	' ' << probA << ' ' << probB << ' ' << w << ' '
>1785	ShiftExpression	probA << ' ' << probB << ' ' << w << ' '
>1786	ShiftExpression	' ' << probB << ' ' << w << ' '
>1787	ShiftExpression	probB << ' ' << w << ' '
>1788	ShiftExpression	' ' << w << ' '
>1789	ShiftExpression	w << ' '
>1790	PrimaryExpression	' '
>1791	Identifier	w
>1792	PrimaryExpression	' '
>1793	Identifier	probB
>1794	PrimaryExpression	' '
>1795	Identifier	probA
>1796	PrimaryExpression	' '
>1797	Identifier	n_sv
>1798	PrimaryExpression	' '
>1799	Identifier	label
>1800	PrimaryExpression	' '
>1801	Identifier	rho
>1802	Identifier	outStream
>1803	ForStatement	for ( size_t i = 0 ; i < sv_coef . size ( ) ; ++ i )
>1804	ForStatement	for ( int j = 0 ; j < size ( ) ; ++ j )
>1805	ExpressionStatement	 
>1806	ShiftExpression	outStream << sv_coef [ i ] [ j ] << \" \"
>1807	ShiftExpression	sv_coef [ i ] [ j ] << \" \"
>1808	PrimaryExpression	\" \"
>1809	ArrayIndexing	sv_coef [ i ] [ j ]
>1810	Identifier	j
>1811	ArrayIndexing	sv_coef [ i ]
>1812	Identifier	i
>1813	Identifier	sv_coef
>1814	Identifier	outStream
>1815	UnaryExpression	 
>1816	Identifier	j
>1817	IncDec	++
>1818	Condition	 
>1819	RelationalExpression	j < size ( )
>1820	CallExpression	size ( )
>1821	ArgumentList	 
>1822	Callee	size
>1823	Identifier	size
>1824	Identifier	j
>1825	ForInit	 
>1826	IdentifierDeclStatement	int j = 0 ;
>1827	IdentifierDecl	j = 0
>1828	AssignmentExpr	j = 0
>1829	PrimaryExpression	0
>1830	Identifier	j
>1831	Identifier	j
>1832	IdentifierDeclType	int
>1833	UnaryExpression	 
>1834	Identifier	i
>1835	IncDec	++
>1836	Condition	 
>1837	RelationalExpression	i < sv_coef . size ( )
>1838	CallExpression	sv_coef . size ( )
>1839	ArgumentList	 
>1840	Callee	sv_coef . size
>1841	MemberAccess	sv_coef . size
>1842	Identifier	size
>1843	Identifier	sv_coef
>1844	Identifier	i
>1845	ForInit	 
>1846	IdentifierDeclStatement	size_t i = 0 ;
>1847	IdentifierDecl	i = 0
>1848	AssignmentExpr	i = 0
>1849	PrimaryExpression	0
>1850	Identifier	i
>1851	Identifier	i
>1852	IdentifierDeclType	size_t
>1853	ExpressionStatement	 
>1854	ShiftExpression	outStream << \" \"
>1855	PrimaryExpression	\" \"
>1856	Identifier	outStream
>1857	ForStatement	for ( size_t i = 0 ; i < sv . size ( ) ; ++ i )
>1858	ExpressionStatement	 
>1859	CallExpression	nta 
>1860	ArgumentList	outStream
>1861	Argument	sv [ i ] + n_dims ( )
>1862	AdditiveExpression	sv [ i ] + n_dims ( )
>1863	CallExpression	n_dims ( )
>1864	ArgumentList	 
>1865	Callee	n_dims
>1866	Identifier	n_dims
>1867	ArrayIndexing	sv [ i ]
>1868	Identifier	i
>1869	Identifier	sv
>1870	Argument	sv [ i ]
>1871	ArrayIndexing	sv [ i ]
>1872	Identifier	i
>1873	Identifier	sv
>1874	Argument	outStream
>1875	Identifier	outStream
>1876	Callee	nta 
>1877	Identifier	nta 
>1878	UnaryExpression	 
>1879	Identifier	i
>1880	IncDec	++
>1881	Condition	 
>1882	RelationalExpression	i < sv . size ( )
>1883	CallExpression	sv . size ( )
>1884	ArgumentList	 
>1885	Callee	sv . size
>1886	MemberAccess	sv . size
>1887	Identifier	size
>1888	Identifier	sv
>1889	Identifier	i
>1890	ForInit	 
>1891	IdentifierDeclStatement	size_t i = 0 ;
>1892	IdentifierDecl	i = 0
>1893	AssignmentExpr	i = 0
>1894	PrimaryExpression	0
>1895	Identifier	i
>1896	Identifier	i
>1897	IdentifierDeclType	size_t
>1898	ExpressionStatement	 
>1899	ShiftExpression	outStream << n_class ( ) << \" \" << size ( ) << \" \" << n_dims ( ) << \" \"
>1900	ShiftExpression	n_class ( ) << \" \" << size ( ) << \" \" << n_dims ( ) << \" \"
>1901	ShiftExpression	\" \" << size ( ) << \" \" << n_dims ( ) << \" \"
>1902	ShiftExpression	size ( ) << \" \" << n_dims ( ) << \" \"
>1903	ShiftExpression	\" \" << n_dims ( ) << \" \"
>1904	ShiftExpression	n_dims ( ) << \" \"
>1905	PrimaryExpression	\" \"
>1906	CallExpression	n_dims ( )
>1907	ArgumentList	 
>1908	Callee	n_dims
>1909	Identifier	n_dims
>1910	PrimaryExpression	\" \"
>1911	CallExpression	size ( )
>1912	ArgumentList	 
>1913	Callee	size
>1914	Identifier	size
>1915	PrimaryExpression	\" \"
>1916	CallExpression	n_class ( )
>1917	ArgumentList	 
>1918	Callee	n_class
>1919	Identifier	n_class
>1920	Identifier	outStream
>1936	FunctionDef	svm_model 
>1937	ParameterList	std 
>1938	Parameter	 
>1939	Identifier	inStream
>1940	ParameterType	std 
>1941	ReturnType	void
>1942	CompoundStatement	 
>1943	ExpressionStatement	 
>1944	ShiftExpression	inStream >> rho >> label >> n_sv >> probA >> probB >> w
>1945	ShiftExpression	rho >> label >> n_sv >> probA >> probB >> w
>1946	ShiftExpression	label >> n_sv >> probA >> probB >> w
>1947	ShiftExpression	n_sv >> probA >> probB >> w
>1948	ShiftExpression	probA >> probB >> w
>1949	ShiftExpression	probB >> w
>1950	Identifier	w
>1951	Identifier	probB
>1952	Identifier	probA
>1953	Identifier	n_sv
>1954	Identifier	label
>1955	Identifier	rho
>1956	Identifier	inStream
>1957	ForStatement	for ( int i = 0 ; i < n_class - 1 ; ++ i )
>1958	CompoundStatement	 
>1959	ForStatement	for ( int j = 0 ; j < l ; ++ j )
>1960	ExpressionStatement	 
>1961	ShiftExpression	inStream >> sv_coef [ i ] [ j ]
>1962	ArrayIndexing	sv_coef [ i ] [ j ]
>1963	Identifier	j
>1964	ArrayIndexing	sv_coef [ i ]
>1965	Identifier	i
>1966	Identifier	sv_coef
>1967	Identifier	inStream
>1968	UnaryExpression	 
>1969	Identifier	j
>1970	IncDec	++
>1971	Condition	 
>1972	RelationalExpression	j < l
>1973	Identifier	l
>1974	Identifier	j
>1975	ForInit	 
>1976	IdentifierDeclStatement	int j = 0 ;
>1977	IdentifierDecl	j = 0
>1978	AssignmentExpr	j = 0
>1979	PrimaryExpression	0
>1980	Identifier	j
>1981	Identifier	j
>1982	IdentifierDeclType	int
>1983	ExpressionStatement	 
>1984	AssignmentExpr	sv_coef [ i ] = new float [ l ]
>1985	Identifier	l
>1986	ArrayIndexing	sv_coef [ i ]
>1987	Identifier	i
>1988	Identifier	sv_coef
>1989	UnaryExpression	 
>1990	Identifier	i
>1991	IncDec	++
>1992	Condition	 
>1993	RelationalExpression	i < n_class - 1
>1994	AdditiveExpression	n_class - 1
>1995	PrimaryExpression	1
>1996	Identifier	n_class
>1997	Identifier	i
>1998	ForInit	 
>1999	IdentifierDeclStatement	int i = 0 ;
>2000	IdentifierDecl	i = 0
>2001	AssignmentExpr	i = 0
>2002	PrimaryExpression	0
>2003	Identifier	i
>2004	Identifier	i
>2005	IdentifierDeclType	int
>2006	ExpressionStatement	 
>2007	CallExpression	sv_coef . resize ( n_class - 1 , 0 )
>2008	ArgumentList	n_class - 1
>2009	Argument	0
>2010	PrimaryExpression	0
>2011	Argument	n_class - 1
>2012	AdditiveExpression	n_class - 1
>2013	PrimaryExpression	1
>2014	Identifier	n_class
>2015	Callee	sv_coef . resize
>2016	MemberAccess	sv_coef . resize
>2017	Identifier	resize
>2018	Identifier	sv_coef
>2019	ExpressionStatement	 
>2020	ArrayIndexing	sv_coef [ i ]
>2021	Identifier	i
>2022	Identifier	sv_coef
>2023	Statement	 
>2024	Statement	 
>2025	ForStatement	for ( size_t i = 0 ; i < sv_coef . size ( ) ; ++ i )
>2026	Statement	 
>2027	UnaryExpression	 
>2028	Identifier	i
>2029	IncDec	++
>2030	Condition	 
>2031	RelationalExpression	i < sv_coef . size ( )
>2032	CallExpression	sv_coef . size ( )
>2033	ArgumentList	 
>2034	Callee	sv_coef . size
>2035	MemberAccess	sv_coef . size
>2036	Identifier	size
>2037	Identifier	sv_coef
>2038	Identifier	i
>2039	ForInit	 
>2040	IdentifierDeclStatement	size_t i = 0 ;
>2041	IdentifierDecl	i = 0
>2042	AssignmentExpr	i = 0
>2043	PrimaryExpression	0
>2044	Identifier	i
>2045	Identifier	i
>2046	IdentifierDeclType	size_t
>2047	ForStatement	for ( int i = 0 ; i < l ; ++ i )
>2048	CompoundStatement	 
>2049	ExpressionStatement	 
>2050	CallExpression	nta 
>2051	ArgumentList	inStream
>2052	Argument	sv [ i ] + n_dims ( )
>2053	AdditiveExpression	sv [ i ] + n_dims ( )
>2054	CallExpression	n_dims ( )
>2055	ArgumentList	 
>2056	Callee	n_dims
>2057	Identifier	n_dims
>2058	ArrayIndexing	sv [ i ]
>2059	Identifier	i
>2060	Identifier	sv
>2061	Argument	sv [ i ]
>2062	ArrayIndexing	sv [ i ]
>2063	Identifier	i
>2064	Identifier	sv
>2065	Argument	inStream
>2066	Identifier	inStream
>2067	Callee	nta 
>2068	Identifier	nta 
>2069	ExpressionStatement	 
>2070	AssignmentExpr	sv [ i ] = sv_mem + i * n_dims ( )
>2071	AdditiveExpression	sv_mem + i * n_dims ( )
>2072	MultiplicativeExpression	i * n_dims ( )
>2073	CallExpression	n_dims ( )
>2074	ArgumentList	 
>2075	Callee	n_dims
>2076	Identifier	n_dims
>2077	Identifier	i
>2078	Identifier	sv_mem
>2079	ArrayIndexing	sv [ i ]
>2080	Identifier	i
>2081	Identifier	sv
>2082	UnaryExpression	 
>2083	Identifier	i
>2084	IncDec	++
>2085	Condition	 
>2086	RelationalExpression	i < l
>2087	Identifier	l
>2088	Identifier	i
>2089	ForInit	 
>2090	IdentifierDeclStatement	int i = 0 ;
>2091	IdentifierDecl	i = 0
>2092	AssignmentExpr	i = 0
>2093	PrimaryExpression	0
>2094	Identifier	i
>2095	Identifier	i
>2096	IdentifierDeclType	int
>2097	ExpressionStatement	 
>2098	CallExpression	inStream . ignore ( 1 )
>2099	ArgumentList	1
>2100	Argument	1
>2101	PrimaryExpression	1
>2102	Callee	inStream . ignore
>2103	MemberAccess	inStream . ignore
>2104	Identifier	ignore
>2105	Identifier	inStream
>2106	ExpressionStatement	 
>2107	CallExpression	sv . resize ( l , 0 )
>2108	ArgumentList	l
>2109	Argument	0
>2110	PrimaryExpression	0
>2111	Argument	l
>2112	Identifier	l
>2113	Callee	sv . resize
>2114	MemberAccess	sv . resize
>2115	Identifier	resize
>2116	Identifier	sv
>2117	ExpressionStatement	 
>2118	CallExpression	std 
>2119	ArgumentList	sv_mem
>2120	Argument	( float ) 0
>2121	CastExpression	( float ) 0
>2122	PrimaryExpression	0
>2123	CastTarget	float
>2124	Argument	sv_mem + l * n_dims ( )
>2125	AdditiveExpression	sv_mem + l * n_dims ( )
>2126	MultiplicativeExpression	l * n_dims ( )
>2127	CallExpression	n_dims ( )
>2128	ArgumentList	 
>2129	Callee	n_dims
>2130	Identifier	n_dims
>2131	Identifier	l
>2132	Identifier	sv_mem
>2133	Argument	sv_mem
>2134	Identifier	sv_mem
>2135	Callee	std 
>2136	Identifier	std 
>2137	ExpressionStatement	 
>2138	AssignmentExpr	sv_mem = ( float * ) _aligned_malloc ( 4 * l * n_dims ( ) , 16 )
>2139	CastExpression	( float * ) _aligned_malloc ( 4 * l * n_dims ( ) , 16 )
>2140	CallExpression	_aligned_malloc ( 4 * l * n_dims ( ) , 16 )
>2141	ArgumentList	4 * l * n_dims ( )
>2142	Argument	16
>2143	PrimaryExpression	16
>2144	Argument	4 * l * n_dims ( )
>2145	MultiplicativeExpression	4 * l * n_dims ( )
>2146	MultiplicativeExpression	l * n_dims ( )
>2147	CallExpression	n_dims ( )
>2148	ArgumentList	 
>2149	Callee	n_dims
>2150	Identifier	n_dims
>2151	Identifier	l
>2152	PrimaryExpression	4
>2153	Callee	_aligned_malloc
>2154	Identifier	_aligned_malloc
>2155	CastTarget	float *
>2156	Identifier	sv_mem
>2157	IfStatement	if ( sv_mem == NULL )
>2158	ElseStatement	else
>2159	CompoundStatement	 
>2160	ExpressionStatement	 
>2161	AssignmentExpr	sv_mem = NULL
>2162	Identifier	NULL
>2163	Identifier	sv_mem
>2164	ExpressionStatement	 
>2165	Identifier	sv_mem
>2166	Statement	 
>2167	Statement	 
>2168	Statement	 
>2169	CompoundStatement	 
>2170	ExpressionStatement	 
>2171	ArrayIndexing	sv [ i ]
>2172	Identifier	i
>2173	Identifier	sv
>2174	Statement	 
>2175	Statement	 
>2176	ForStatement	for ( size_t i = 0 ; i < sv . size ( ) ; ++ i )
>2177	Statement	 
>2178	UnaryExpression	 
>2179	Identifier	i
>2180	IncDec	++
>2181	Condition	 
>2182	RelationalExpression	i < sv . size ( )
>2183	CallExpression	sv . size ( )
>2184	ArgumentList	 
>2185	Callee	sv . size
>2186	MemberAccess	sv . size
>2187	Identifier	size
>2188	Identifier	sv
>2189	Identifier	i
>2190	ForInit	 
>2191	IdentifierDeclStatement	size_t i = 0 ;
>2192	IdentifierDecl	i = 0
>2193	AssignmentExpr	i = 0
>2194	PrimaryExpression	0
>2195	Identifier	i
>2196	Identifier	i
>2197	IdentifierDeclType	size_t
>2198	Condition	 
>2199	EqualityExpression	sv_mem == NULL
>2200	Identifier	NULL
>2201	Identifier	sv_mem
>2202	ExpressionStatement	 
>2203	ShiftExpression	inStream >> n_class >> l >> n_dims_
>2204	ShiftExpression	n_class >> l >> n_dims_
>2205	ShiftExpression	l >> n_dims_
>2206	Identifier	n_dims_
>2207	Identifier	l
>2208	Identifier	n_class
>2209	Identifier	inStream
>2210	IdentifierDeclStatement	 
>2211	IdentifierDecl	l = 0
>2212	AssignmentExpr	l = 0
>2213	PrimaryExpression	0
>2214	Identifier	l
>2215	Identifier	l
>2216	IdentifierDeclType	int
>2217	IdentifierDecl	n_class = 0
>2218	AssignmentExpr	n_class = 0
>2219	PrimaryExpression	0
>2220	Identifier	n_class
>2221	Identifier	n_class
>2222	IdentifierDeclType	int
<3=6,5,4
<6=7
<7=8
<8=50,9
<9=49,10
<10=48,11
<11=47,12
<12=46,13
<13=45,14
<14=44,15
<15=43,16
<16=42,17
<17=41,18
<18=40,19
<19=39,20
<20=38,21
<21=37,22
<22=36,23
<23=35,24
<24=34,25
<25=33,26
<26=32,27
<27=31,28
<28=30,29
<54=57,56,55
<57=224,194,177,172,152,116,96,60,58
<58=59
<60=88,79,76,61
<61=62
<62=75,63
<63=73,64
<64=71,69,65
<65=66
<66=68,67
<69=70
<71=72
<73=74
<76=78,77
<79=80
<80=87,81
<81=83,82
<83=84
<84=86,85
<88=89
<89=90
<90=95,94,91
<91=93,92
<96=97
<97=115,98
<98=113,99
<99=111,109,100
<100=101
<101=108,102
<102=104,103
<104=105
<105=107,106
<109=110
<111=112
<113=114
<116=144,135,132,117
<117=118
<118=131,119
<119=129,120
<120=127,125,121
<121=122
<122=124,123
<125=126
<127=128
<129=130
<132=134,133
<135=136
<136=143,137
<137=139,138
<139=140
<140=142,141
<144=145
<145=146
<146=151,150,147
<147=149,148
<152=153
<153=171,154
<154=169,155
<155=167,165,156
<156=157
<157=164,158
<158=160,159
<160=161
<161=163,162
<165=166
<167=168
<169=170
<172=173
<173=176,175,174
<177=178
<178=193,192,179
<179=191,180
<180=182,181
<182=183
<183=185,184
<185=187,186
<187=188
<188=190,189
<194=195
<195=223,196
<196=222,197
<197=221,198
<198=220,199
<199=219,200
<200=218,201
<201=217,202
<202=216,203
<203=215,204
<204=214,205
<205=213,206
<206=212,207
<207=211,208
<208=210,209
<224=225
<225=227,226
<245=251,250,246
<246=247
<247=249,248
<251=252
<252=253
<253=289,254
<254=288,255
<255=287,256
<256=286,257
<257=285,258
<258=284,259
<259=283,260
<260=282,261
<261=281,262
<262=280,263
<263=279,264
<264=278,265
<265=277,266
<266=276,267
<267=275,268
<268=274,269
<269=273,270
<270=272,271
<294=300,299,295
<295=296
<296=298,297
<300=301
<301=302
<302=320,303
<303=319,304
<304=318,305
<305=317,306
<306=316,307
<307=315,308
<308=314,309
<309=313,310
<310=312,311
<325=328,327,326
<328=384,368,329
<329=330
<330=357,331
<331=347,332
<332=334,333
<334=343,335
<335=339,336
<336=338,337
<339=341,340
<341=342
<343=345,344
<345=346
<347=351,348
<348=350,349
<351=353,352
<353=354
<354=356,355
<357=359,358
<359=360
<360=362,361
<362=364,363
<364=365
<365=367,366
<368=369
<369=383,370
<370=379,371
<371=378,372
<372=374,373
<374=376,375
<376=377
<379=381,380
<381=382
<384=385
<385=387,386
<398=404,403,399
<399=400
<400=402,401
<404=457,448,409,405
<405=406
<406=408,407
<409=440,433,430,410
<410=411
<411=428,412
<412=426,422,413
<413=414
<414=419,415
<415=417,416
<417=418
<419=421,420
<422=423
<423=425,424
<426=427
<428=429
<430=432,431
<433=434
<434=439,435
<435=437,436
<437=438
<440=441
<441=442
<442=447,446,443
<443=445,444
<448=449
<449=455,450
<450=453,451
<451=452
<453=454
<455=456
<457=458
<458=472,459
<459=468,460
<460=467,461
<461=463,462
<463=465,464
<465=466
<468=470,469
<470=471
<484=490,489,485
<485=486
<486=488,487
<490=650,644,619,618,617,613,602,591,582,573,491
<491=565,558,555,492
<492=535,513,493
<493=494
<494=511,495
<495=509,505,496
<496=497
<497=502,498
<498=500,499
<500=501
<502=504,503
<505=506
<506=508,507
<509=510
<511=512
<513=514
<514=533,515
<515=529,520,516
<516=517
<517=519,518
<520=521
<521=526,522
<522=524,523
<524=525
<526=528,527
<529=530
<530=532,531
<533=534
<535=536
<536=552,537
<537=551,538
<538=549,539
<539=542,540
<540=541
<542=543
<543=548,544
<544=546,545
<546=547
<549=550
<552=554,553
<555=557,556
<558=559
<559=564,560
<560=562,561
<562=563
<565=566
<566=567
<567=572,571,568
<568=570,569
<573=574
<574=580,575
<575=578,576
<576=577
<578=579
<580=581
<582=583
<583=587,584
<584=585
<585=586
<587=588
<588=590,589
<591=592
<592=598,593
<593=596,594
<594=595
<596=597
<598=599
<599=601,600
<602=603
<603=609,604
<604=607,605
<605=606
<607=608
<609=610
<610=612,611
<613=614
<614=616,615
<619=642,620
<620=634,625,622,621
<622=624,623
<625=626
<626=633,627
<627=629,628
<629=630
<630=632,631
<634=635
<635=636
<636=641,640,637
<637=639,638
<642=643
<644=645
<645=649,646
<646=648,647
<650=651
<651=656,655,652
<652=654,653
<672=675,674,673
<675=772,752,735,722,709,680,676
<676=677
<677=679,678
<680=701,694,691,681
<681=682
<682=690,683
<683=687,684
<684=686,685
<687=689,688
<691=693,692
<694=695
<695=700,696
<696=698,697
<698=699
<701=702
<702=703
<703=708,707,704
<704=706,705
<709=710
<710=721,711
<711=715,712
<712=714,713
<715=717,716
<717=718
<718=720,719
<722=723
<723=734,724
<724=728,725
<725=727,726
<728=730,729
<730=731
<731=733,732
<735=736
<736=751,750,737
<737=749,738
<738=740,739
<740=741
<741=743,742
<743=745,744
<745=746
<746=748,747
<752=753
<753=771,754
<754=767,755
<755=766,756
<756=762,757
<757=761,758
<758=760,759
<762=764,763
<764=765
<767=769,768
<769=770
<772=773
<773=775,774
<791=797,796,792
<792=793
<793=795,794
<797=858,849,840,802,798
<798=799
<799=801,800
<802=832,825,822,803
<803=804
<804=820,805
<805=818,814,806
<806=807
<807=811,808
<808=810,809
<811=813,812
<814=815
<815=817,816
<818=819
<820=821
<822=824,823
<825=826
<826=831,827
<827=829,828
<829=830
<832=833
<833=834
<834=839,838,835
<835=837,836
<840=841
<841=847,842
<842=845,843
<843=844
<845=846
<847=848
<849=850
<850=856,851
<851=854,852
<852=853
<854=855
<856=857
<858=859
<859=877,860
<860=873,861
<861=872,862
<862=868,863
<863=867,864
<864=866,865
<868=870,869
<870=871
<873=875,874
<875=876
<890=896,895,891
<891=892
<892=894,893
<896=1040,1032,1007,1006,1005,1001,990,979,968,959,950,941,897
<897=933,929,926,898
<898=918,899
<899=900
<900=916,901
<901=914,910,902
<902=903
<903=907,904
<904=906,905
<907=909,908
<910=911
<911=913,912
<914=915
<916=917
<918=919
<919=923,920
<920=922,921
<923=925,924
<926=928,927
<929=930
<930=932,931
<933=934
<934=935
<935=940,939,936
<936=938,937
<941=942
<942=948,943
<943=946,944
<944=945
<946=947
<948=949
<950=951
<951=957,952
<952=955,953
<953=954
<955=956
<957=958
<959=960
<960=964,961
<961=962
<962=963
<964=965
<965=967,966
<968=969
<969=975,970
<970=973,971
<971=972
<973=974
<975=976
<976=978,977
<979=980
<980=986,981
<981=984,982
<982=983
<984=985
<986=987
<987=989,988
<990=991
<991=997,992
<992=995,993
<993=994
<995=996
<997=998
<998=1000,999
<1001=1002
<1002=1004,1003
<1007=1030,1008
<1008=1022,1013,1010,1009
<1010=1012,1011
<1013=1014
<1014=1021,1015
<1015=1017,1016
<1017=1018
<1018=1020,1019
<1022=1023
<1023=1024
<1024=1029,1028,1025
<1025=1027,1026
<1030=1031
<1032=1033
<1033=1039,1034
<1034=1038,1035
<1035=1037,1036
<1040=1041
<1041=1046,1045,1042
<1042=1044,1043
<1061=1063,1062
<1063=1092,1070,1069,1068,1064
<1064=1065
<1065=1067,1066
<1070=1084,1075,1072,1071
<1072=1074,1073
<1075=1076
<1076=1083,1077
<1077=1079,1078
<1079=1080
<1080=1082,1081
<1084=1085
<1085=1086
<1086=1091,1090,1087
<1087=1089,1088
<1092=1144,1113,1093
<1093=1094
<1094=1106,1102,1095
<1095=1096
<1096=1098,1097
<1098=1099
<1099=1101,1100
<1102=1103
<1103=1105,1104
<1106=1107
<1107=1111,1108
<1108=1109
<1109=1110
<1111=1112
<1113=1114
<1114=1136,1127,1124,1115
<1115=1116
<1116=1122,1117
<1117=1118
<1118=1119
<1119=1121,1120
<1122=1123
<1124=1126,1125
<1127=1128
<1128=1135,1129
<1129=1131,1130
<1131=1132
<1132=1134,1133
<1136=1137
<1137=1138
<1138=1143,1142,1139
<1139=1141,1140
<1144=1145
<1145=1147,1146
<1160=1163,1162,1161
<1163=1414,1408,1353,1347,1292,1286,1257,1253,1164
<1164=1244,1165
<1165=1238,1209,1205,1199,1170,1166
<1166=1167
<1167=1169,1168
<1170=1191,1182,1179,1171
<1171=1172
<1172=1178,1173
<1173=1175,1174
<1175=1177,1176
<1179=1181,1180
<1182=1183
<1183=1190,1184
<1184=1186,1185
<1186=1187
<1187=1189,1188
<1191=1192
<1192=1193
<1193=1198,1197,1194
<1194=1196,1195
<1199=1200
<1200=1204,1201
<1201=1203,1202
<1205=1206
<1206=1208,1207
<1209=1230,1221,1218,1210
<1210=1211
<1211=1217,1212
<1212=1214,1213
<1214=1216,1215
<1218=1220,1219
<1221=1222
<1222=1229,1223
<1223=1225,1224
<1225=1226
<1226=1228,1227
<1230=1231
<1231=1232
<1232=1237,1236,1233
<1233=1235,1234
<1238=1239
<1239=1243,1240
<1240=1242,1241
<1244=1245
<1245=1252,1246
<1246=1248,1247
<1248=1249
<1249=1251,1250
<1253=1254
<1254=1256,1255
<1257=1278,1269,1266,1258
<1258=1259
<1259=1265,1260
<1260=1262,1261
<1262=1264,1263
<1266=1268,1267
<1269=1270
<1270=1277,1271
<1271=1273,1272
<1273=1274
<1274=1276,1275
<1278=1279
<1279=1280
<1280=1285,1284,1281
<1281=1283,1282
<1286=1287
<1287=1291,1288
<1288=1290,1289
<1292=1339,1330,1327,1293
<1293=1298,1294
<1294=1295
<1295=1297,1296
<1298=1319,1312,1309,1299
<1299=1300
<1300=1308,1301
<1301=1303,1302
<1303=1305,1304
<1305=1307,1306
<1309=1311,1310
<1312=1313
<1313=1318,1314
<1314=1316,1315
<1316=1317
<1319=1320
<1320=1321
<1321=1326,1325,1322
<1322=1324,1323
<1327=1329,1328
<1330=1331
<1331=1338,1332
<1332=1334,1333
<1334=1335
<1335=1337,1336
<1339=1340
<1340=1341
<1341=1346,1345,1342
<1342=1344,1343
<1347=1348
<1348=1352,1349
<1349=1351,1350
<1353=1400,1391,1388,1354
<1354=1359,1355
<1355=1356
<1356=1358,1357
<1359=1380,1373,1370,1360
<1360=1361
<1361=1369,1362
<1362=1364,1363
<1364=1366,1365
<1366=1368,1367
<1370=1372,1371
<1373=1374
<1374=1379,1375
<1375=1377,1376
<1377=1378
<1380=1381
<1381=1382
<1382=1387,1386,1383
<1383=1385,1384
<1388=1390,1389
<1391=1392
<1392=1399,1393
<1393=1395,1394
<1395=1396
<1396=1398,1397
<1400=1401
<1401=1402
<1402=1407,1406,1403
<1403=1405,1404
<1408=1409
<1409=1413,1410
<1410=1412,1411
<1414=1415
<1415=1438,1416
<1416=1437,1417
<1417=1433,1418
<1418=1432,1419
<1419=1428,1420
<1420=1427,1421
<1421=1423,1422
<1423=1425,1424
<1425=1426
<1428=1430,1429
<1430=1431
<1433=1435,1434
<1435=1436
<1460=1463,1462,1461
<1463=1746,1723,1706,1686,1616,1591,1566,1541,1516,1491,1466,1464
<1464=1465
<1466=1487,1481,1467
<1467=1468
<1468=1480,1469
<1469=1471,1470
<1471=1472
<1472=1474,1473
<1474=1476,1475
<1476=1477
<1477=1479,1478
<1481=1482
<1482=1486,1483
<1483=1485,1484
<1487=1488
<1488=1490,1489
<1491=1512,1506,1492
<1492=1493
<1493=1505,1494
<1494=1496,1495
<1496=1497
<1497=1499,1498
<1499=1501,1500
<1501=1502
<1502=1504,1503
<1506=1507
<1507=1511,1508
<1508=1510,1509
<1512=1513
<1513=1515,1514
<1516=1537,1531,1517
<1517=1518
<1518=1530,1519
<1519=1521,1520
<1521=1522
<1522=1524,1523
<1524=1526,1525
<1526=1527
<1527=1529,1528
<1531=1532
<1532=1536,1533
<1533=1535,1534
<1537=1538
<1538=1540,1539
<1541=1562,1556,1542
<1542=1543
<1543=1555,1544
<1544=1546,1545
<1546=1547
<1547=1549,1548
<1549=1551,1550
<1551=1552
<1552=1554,1553
<1556=1557
<1557=1561,1558
<1558=1560,1559
<1562=1563
<1563=1565,1564
<1566=1587,1581,1567
<1567=1568
<1568=1580,1569
<1569=1571,1570
<1571=1572
<1572=1574,1573
<1574=1576,1575
<1576=1577
<1577=1579,1578
<1581=1582
<1582=1586,1583
<1583=1585,1584
<1587=1588
<1588=1590,1589
<1591=1612,1606,1592
<1592=1593
<1593=1605,1594
<1594=1596,1595
<1596=1597
<1597=1599,1598
<1599=1601,1600
<1601=1602
<1602=1604,1603
<1606=1607
<1607=1611,1608
<1608=1610,1609
<1612=1613
<1613=1615,1614
<1616=1682,1631,1617
<1617=1618
<1618=1630,1619
<1619=1621,1620
<1621=1622
<1622=1624,1623
<1624=1626,1625
<1626=1627
<1627=1629,1628
<1631=1674,1665,1662,1632
<1632=1633
<1633=1654,1647,1644,1634
<1634=1635
<1635=1643,1636
<1636=1638,1637
<1638=1640,1639
<1640=1642,1641
<1644=1646,1645
<1647=1648
<1648=1653,1649
<1649=1651,1650
<1651=1652
<1654=1655
<1655=1656
<1656=1661,1660,1657
<1657=1659,1658
<1662=1664,1663
<1665=1666
<1666=1673,1667
<1667=1669,1668
<1669=1670
<1670=1672,1671
<1674=1675
<1675=1676
<1676=1681,1680,1677
<1677=1679,1678
<1682=1683
<1683=1685,1684
<1686=1687
<1687=1705,1688
<1688=1690,1689
<1690=1699,1691
<1691=1695,1692
<1692=1694,1693
<1695=1697,1696
<1697=1698
<1699=1701,1700
<1701=1702
<1702=1704,1703
<1706=1707
<1707=1722,1721,1708
<1708=1720,1709
<1709=1711,1710
<1711=1712
<1712=1714,1713
<1714=1716,1715
<1716=1717
<1717=1719,1718
<1723=1724
<1724=1745,1725
<1725=1741,1726
<1726=1740,1727
<1727=1736,1728
<1728=1735,1729
<1729=1731,1730
<1731=1733,1732
<1733=1734
<1736=1738,1737
<1738=1739
<1741=1743,1742
<1743=1744
<1746=1747
<1747=1749,1748
<1770=1776,1775,1771
<1771=1772
<1772=1774,1773
<1776=1898,1857,1853,1803,1777
<1777=1778
<1778=1802,1779
<1779=1801,1780
<1780=1800,1781
<1781=1799,1782
<1782=1798,1783
<1783=1797,1784
<1784=1796,1785
<1785=1795,1786
<1786=1794,1787
<1787=1793,1788
<1788=1792,1789
<1789=1791,1790
<1803=1845,1836,1833,1804
<1804=1825,1818,1815,1805
<1805=1806
<1806=1814,1807
<1807=1809,1808
<1809=1811,1810
<1811=1813,1812
<1815=1817,1816
<1818=1819
<1819=1824,1820
<1820=1822,1821
<1822=1823
<1825=1826
<1826=1827
<1827=1832,1831,1828
<1828=1830,1829
<1833=1835,1834
<1836=1837
<1837=1844,1838
<1838=1840,1839
<1840=1841
<1841=1843,1842
<1845=1846
<1846=1847
<1847=1852,1851,1848
<1848=1850,1849
<1853=1854
<1854=1856,1855
<1857=1890,1881,1878,1858
<1858=1859
<1859=1876,1860
<1860=1874,1870,1861
<1861=1862
<1862=1867,1863
<1863=1865,1864
<1865=1866
<1867=1869,1868
<1870=1871
<1871=1873,1872
<1874=1875
<1876=1877
<1878=1880,1879
<1881=1882
<1882=1889,1883
<1883=1885,1884
<1885=1886
<1886=1888,1887
<1890=1891
<1891=1892
<1892=1897,1896,1893
<1893=1895,1894
<1898=1899
<1899=1920,1900
<1900=1916,1901
<1901=1915,1902
<1902=1911,1903
<1903=1910,1904
<1904=1906,1905
<1906=1908,1907
<1908=1909
<1911=1913,1912
<1913=1914
<1916=1918,1917
<1918=1919
<1936=1942,1941,1937
<1937=1938
<1938=1940,1939
<1942=2210,2202,2157,2137,2117,2106,2097,2047,2025,2024,2023,2019,2006,1957,1943
<1943=1944
<1944=1956,1945
<1945=1955,1946
<1946=1954,1947
<1947=1953,1948
<1948=1952,1949
<1949=1951,1950
<1957=1998,1992,1989,1958
<1958=1983,1959
<1959=1975,1971,1968,1960
<1960=1961
<1961=1967,1962
<1962=1964,1963
<1964=1966,1965
<1968=1970,1969
<1971=1972
<1972=1974,1973
<1975=1976
<1976=1977
<1977=1982,1981,1978
<1978=1980,1979
<1983=1984
<1984=1986,1985
<1986=1988,1987
<1989=1991,1990
<1992=1993
<1993=1997,1994
<1994=1996,1995
<1998=1999
<1999=2000
<2000=2005,2004,2001
<2001=2003,2002
<2006=2007
<2007=2015,2008
<2008=2011,2009
<2009=2010
<2011=2012
<2012=2014,2013
<2015=2016
<2016=2018,2017
<2019=2020
<2020=2022,2021
<2025=2039,2030,2027,2026
<2027=2029,2028
<2030=2031
<2031=2038,2032
<2032=2034,2033
<2034=2035
<2035=2037,2036
<2039=2040
<2040=2041
<2041=2046,2045,2042
<2042=2044,2043
<2047=2089,2085,2082,2048
<2048=2069,2049
<2049=2050
<2050=2067,2051
<2051=2065,2061,2052
<2052=2053
<2053=2058,2054
<2054=2056,2055
<2056=2057
<2058=2060,2059
<2061=2062
<2062=2064,2063
<2065=2066
<2067=2068
<2069=2070
<2070=2079,2071
<2071=2078,2072
<2072=2077,2073
<2073=2075,2074
<2075=2076
<2079=2081,2080
<2082=2084,2083
<2085=2086
<2086=2088,2087
<2089=2090
<2090=2091
<2091=2096,2095,2092
<2092=2094,2093
<2097=2098
<2098=2102,2099
<2099=2100
<2100=2101
<2102=2103
<2103=2105,2104
<2106=2107
<2107=2113,2108
<2108=2111,2109
<2109=2110
<2111=2112
<2113=2114
<2114=2116,2115
<2117=2118
<2118=2135,2119
<2119=2133,2124,2120
<2120=2121
<2121=2123,2122
<2124=2125
<2125=2132,2126
<2126=2131,2127
<2127=2129,2128
<2129=2130
<2133=2134
<2135=2136
<2137=2138
<2138=2156,2139
<2139=2155,2140
<2140=2153,2141
<2141=2144,2142
<2142=2143
<2144=2145
<2145=2152,2146
<2146=2151,2147
<2147=2149,2148
<2149=2150
<2153=2154
<2157=2198,2169,2158
<2158=2159
<2159=2168,2167,2166,2164,2160
<2160=2161
<2161=2163,2162
<2164=2165
<2169=2176,2175,2174,2170
<2170=2171
<2171=2173,2172
<2176=2190,2181,2178,2177
<2178=2180,2179
<2181=2182
<2182=2189,2183
<2183=2185,2184
<2185=2186
<2186=2188,2187
<2190=2191
<2191=2192
<2192=2197,2196,2193
<2193=2195,2194
<2198=2199
<2199=2201,2200
<2202=2203
<2203=2209,2204
<2204=2208,2205
<2205=2207,2206
<2210=2217,2211
<2211=2216,2215,2212
<2212=2214,2213
<2217=2222,2221,2218
<2218=2220,2219
