>9	FunctionDef	Y ()
>10	ParameterList	 
>11	CompoundStatement	 
>12	ExpressionStatement	 
>13	AssignmentExpr	constructed = true
>14	Identifier	true
>15	Identifier	constructed
>16	ExpressionStatement	 
>17	CallExpression	Assert ( ! constructed )
>18	ArgumentList	! constructed
>19	Argument	! constructed
>20	UnaryOp	! constructed
>21	Identifier	constructed
>22	UnaryOperator	!
>23	Callee	Assert
>24	Identifier	Assert
>35	FunctionDef	Z ()
>36	ParameterList	 
>37	CompoundStatement	 
>38	ExpressionStatement	 
>39	AssignmentExpr	constructed = true
>40	Identifier	true
>41	Identifier	constructed
>42	ExpressionStatement	 
>43	CallExpression	Assert ( ! constructed )
>44	ArgumentList	! constructed
>45	Argument	! constructed
>46	UnaryOp	! constructed
>47	Identifier	constructed
>48	UnaryOperator	!
>49	Callee	Assert
>50	Identifier	Assert
>60	FunctionDef	getComponent ()
>61	ParameterList	 
>62	ReturnType	fruit 
>63	CompoundStatement	 
>64	ExpressionStatement	 
>65	Statement	 
>66	Statement	 
>67	Statement	 
>68	Statement	 
>69	Statement	 
>70	Statement	 
>71	Statement	 
>72	Statement	 
>73	Statement	 
>74	Statement	 
>75	CompoundStatement	 
>76	ReturnStatement	 
>77	UnaryExpression	new Y ( )
>78	Statement	 
>79	Statement	 
>80	Statement	 
>81	Statement	 
>82	Statement	 
>83	Statement	 
>84	Statement	 
>85	Statement	 
>86	Statement	 
>87	Statement	 
>88	Statement	 
>89	Statement	 
>90	Statement	 
>94	FunctionDef	main ()
>95	ParameterList	 
>96	ReturnType	int
>97	CompoundStatement	 
>98	ReturnStatement	 
>99	PrimaryExpression	0
>100	ExpressionStatement	 
>101	CallExpression	Assert ( ! Z 
>102	ArgumentList	! Z 
>103	Argument	! Z 
>104	UnaryOp	! Z 
>105	Identifier	Z 
>106	UnaryOperator	!
>107	Callee	Assert
>108	Identifier	Assert
>109	ExpressionStatement	 
>110	CallExpression	Assert ( Y 
>111	ArgumentList	Y 
>112	Argument	Y 
>113	Identifier	Y 
>114	Callee	Assert
>115	Identifier	Assert
>116	ExpressionStatement	 
>117	CallExpression	Assert ( X 
>118	ArgumentList	X 
>119	Argument	X 
>120	Identifier	X 
>121	Callee	Assert
>122	Identifier	Assert
>123	ExpressionStatement	 
>124	CallExpression	injector . eagerlyInjectAll ( )
>125	ArgumentList	 
>126	Callee	injector . eagerlyInjectAll
>127	MemberAccess	injector . eagerlyInjectAll
>128	Identifier	eagerlyInjectAll
>129	Identifier	injector
>130	ExpressionStatement	 
>131	CallExpression	Assert ( ! Z 
>132	ArgumentList	! Z 
>133	Argument	! Z 
>134	UnaryOp	! Z 
>135	Identifier	Z 
>136	UnaryOperator	!
>137	Callee	Assert
>138	Identifier	Assert
>139	ExpressionStatement	 
>140	CallExpression	Assert ( ! Y 
>141	ArgumentList	! Y 
>142	Argument	! Y 
>143	UnaryOp	! Y 
>144	Identifier	Y 
>145	UnaryOperator	!
>146	Callee	Assert
>147	Identifier	Assert
>148	ExpressionStatement	 
>149	CallExpression	Assert ( ! X 
>150	ArgumentList	! X 
>151	Argument	! X 
>152	UnaryOp	! X 
>153	Identifier	X 
>154	UnaryOperator	!
>155	Callee	Assert
>156	Identifier	Assert
>157	IdentifierDeclStatement	 
>158	IdentifierDecl	injector ( getComponent ( ) )
>159	CallExpression	getComponent ( )
>160	ArgumentList	 
>161	Callee	getComponent
>162	Identifier	getComponent
>163	Identifier	injector
>164	IdentifierDeclType	Injector < X >
<9=11,10
<11=16,12
<12=13
<13=15,14
<16=17
<17=23,18
<18=19
<19=20
<20=22,21
<23=24
<35=37,36
<37=42,38
<38=39
<39=41,40
<42=43
<43=49,44
<44=45
<45=46
<46=48,47
<49=50
<60=63,62,61
<63=90,89,88,87,86,85,84,83,82,81,80,79,78,75,74,73,72,71,70,69,68,67,66,65,64
<75=76
<76=77
<94=97,96,95
<97=157,148,139,130,123,116,109,100,98
<98=99
<100=101
<101=107,102
<102=103
<103=104
<104=106,105
<107=108
<109=110
<110=114,111
<111=112
<112=113
<114=115
<116=117
<117=121,118
<118=119
<119=120
<121=122
<123=124
<124=126,125
<126=127
<127=129,128
<130=131
<131=137,132
<132=133
<133=134
<134=136,135
<137=138
<139=140
<140=146,141
<141=142
<142=143
<143=145,144
<146=147
<148=149
<149=155,150
<150=151
<151=152
<152=154,153
<155=156
<157=158
<158=164,163,159
<159=161,160
<161=162
