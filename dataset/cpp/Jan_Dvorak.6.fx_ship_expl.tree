>3	FunctionDef	FX_Ship_Explosion 
>4	ParameterList	const vec2 & pos
>5	Parameter	 
>6	Identifier	pos
>7	ParameterType	const vec2 &
>8	CompoundStatement	 
>9	ExpressionStatement	 
>10	AssignmentExpr	m_running = true
>11	Identifier	true
>12	Identifier	m_running
>13	ExpressionStatement	 
>14	AssignmentExpr	m_duration = 5.0
>15	PrimaryExpression	5.0
>16	Identifier	m_duration
>17	ExpressionStatement	 
>18	AssignmentExpr	m_start_time = g_timer -> now ( )
>19	CallExpression	g_timer -> now ( )
>20	ArgumentList	 
>21	Callee	g_timer -> now
>22	PtrMemberAccess	g_timer -> now
>23	Identifier	now
>24	Identifier	g_timer
>25	Identifier	m_start_time
>26	ForStatement	for ( int i = 0 ; i < m_num_trails ; ++ i )
>27	ExpressionStatement	 
>28	CallExpression	m_trails . push_back ( new PE_SmokeTrail ( m_pos , vec2 ( rand_range ( - 0.4 , 0.4 ) , rand_range ( - 0.6 , - 0.3 ) ) , \
>29	ArgumentList	m_pos , vec2 ( rand_range ( - 0.4 , 0.4 ) , rand_range ( - 0.6 , - 0.3 ) ) , gravity
>30	Argument	m_pos , vec2 ( rand_range ( - 0.4 , 0.4 ) , rand_range ( - 0.6 , - 0.3 ) ) , gravity
>31	Expression	m_pos , vec2 ( rand_range ( - 0.4 , 0.4 ) , rand_range ( - 0.6 , - 0.3 ) ) , gravity
>32	Expression	vec2 ( rand_range ( - 0.4 , 0.4 ) , rand_range ( - 0.6 , - 0.3 ) ) , gravity
>33	Identifier	gravity
>34	CallExpression	vec2 ( rand_range ( - 0.4 , 0.4 ) , rand_range ( - 0.6 , - 0.3 ) )
>35	ArgumentList	rand_range ( - 0.4 , 0.4 )
>36	Argument	rand_range ( - 0.6 , - 0.3 )
>37	CallExpression	rand_range ( - 0.6 , - 0.3 )
>38	ArgumentList	- 0.6
>39	Argument	- 0.3
>40	UnaryOp	- 0.3
>41	PrimaryExpression	0.3
>42	UnaryOperator	-
>43	Argument	- 0.6
>44	UnaryOp	- 0.6
>45	PrimaryExpression	0.6
>46	UnaryOperator	-
>47	Callee	rand_range
>48	Identifier	rand_range
>49	Argument	rand_range ( - 0.4 , 0.4 )
>50	CallExpression	rand_range ( - 0.4 , 0.4 )
>51	ArgumentList	- 0.4
>52	Argument	0.4
>53	PrimaryExpression	0.4
>54	Argument	- 0.4
>55	UnaryOp	- 0.4
>56	PrimaryExpression	0.4
>57	UnaryOperator	-
>58	Callee	rand_range
>59	Identifier	rand_range
>60	Callee	vec2
>61	Identifier	vec2
>62	Identifier	m_pos
>63	Callee	m_trails . push_back
>64	MemberAccess	m_trails . push_back
>65	Identifier	push_back
>66	Identifier	m_trails
>67	UnaryExpression	 
>68	Identifier	i
>69	IncDec	++
>70	Condition	 
>71	RelationalExpression	i < m_num_trails
>72	Identifier	m_num_trails
>73	Identifier	i
>74	ForInit	 
>75	IdentifierDeclStatement	int i = 0 ;
>76	IdentifierDecl	i = 0
>77	AssignmentExpr	i = 0
>78	PrimaryExpression	0
>79	Identifier	i
>80	Identifier	i
>81	IdentifierDeclType	int
>82	IdentifierDeclStatement	 
>83	IdentifierDecl	gravity = vec2 ( 0.0 , 0.4 )
>84	AssignmentExpr	gravity = vec2 ( 0.0 , 0.4 )
>85	CallExpression	vec2 ( 0.0 , 0.4 )
>86	ArgumentList	0.0
>87	Argument	0.4
>88	PrimaryExpression	0.4
>89	Argument	0.0
>90	PrimaryExpression	0.0
>91	Callee	vec2
>92	Identifier	vec2
>93	Identifier	gravity
>94	Identifier	gravity
>95	IdentifierDeclType	vec2
>114	FunctionDef	FX_Ship_Explosion 
>115	ParameterList	 
>116	CompoundStatement	 
>117	ExpressionStatement	 
>118	ArrayIndexing	m_trails [ i ]
>119	Identifier	i
>120	Identifier	m_trails
>121	ForStatement	for ( int i = 0 ; i < m_num_trails ; ++ i )
>122	Statement	 
>123	UnaryExpression	 
>124	Identifier	i
>125	IncDec	++
>126	Condition	 
>127	RelationalExpression	i < m_num_trails
>128	Identifier	m_num_trails
>129	Identifier	i
>130	ForInit	 
>131	IdentifierDeclStatement	int i = 0 ;
>132	IdentifierDecl	i = 0
>133	AssignmentExpr	i = 0
>134	PrimaryExpression	0
>135	Identifier	i
>136	Identifier	i
>137	IdentifierDeclType	int
>144	FunctionDef	FX_Ship_Explosion 
>145	ParameterList	 
>146	ReturnType	void
>147	CompoundStatement	 
>148	ForStatement	for ( int i = 0 ; i < m_num_trails ; ++ i )
>149	ExpressionStatement	 
>150	CallExpression	m_trails [ i ] -> update ( )
>151	ArgumentList	 
>152	Callee	m_trails [ i ] -> update
>153	PtrMemberAccess	m_trails [ i ] -> update
>154	Identifier	update
>155	ArrayIndexing	m_trails [ i ]
>156	Identifier	i
>157	Identifier	m_trails
>158	UnaryExpression	 
>159	Identifier	i
>160	IncDec	++
>161	Condition	 
>162	RelationalExpression	i < m_num_trails
>163	Identifier	m_num_trails
>164	Identifier	i
>165	ForInit	 
>166	IdentifierDeclStatement	int i = 0 ;
>167	IdentifierDecl	i = 0
>168	AssignmentExpr	i = 0
>169	PrimaryExpression	0
>170	Identifier	i
>171	Identifier	i
>172	IdentifierDeclType	int
>173	IfStatement	if ( g_timer -> now ( ) - m_start_time > m_duration )
>174	CompoundStatement	 
>175	ReturnStatement	 
>176	ExpressionStatement	 
>177	AssignmentExpr	m_running = false
>178	Identifier	false
>179	Identifier	m_running
>180	Condition	 
>181	RelationalExpression	g_timer -> now ( ) - m_start_time > m_duration
>182	Identifier	m_duration
>183	AdditiveExpression	g_timer -> now ( ) - m_start_time
>184	Identifier	m_start_time
>185	CallExpression	g_timer -> now ( )
>186	ArgumentList	 
>187	Callee	g_timer -> now
>188	PtrMemberAccess	g_timer -> now
>189	Identifier	now
>190	Identifier	g_timer
>191	IfStatement	if ( ! m_running )
>192	ReturnStatement	 
>193	Condition	 
>194	UnaryOp	! m_running
>195	Identifier	m_running
>196	UnaryOperator	!
>212	FunctionDef	FX_Ship_Explosion 
>213	ParameterList	 
>214	ReturnType	void
>215	CompoundStatement	 
>216	ForStatement	for ( int i = 0 ; i < m_num_trails ; ++ i )
>217	ExpressionStatement	 
>218	CallExpression	m_trails [ i ] -> draw ( )
>219	ArgumentList	 
>220	Callee	m_trails [ i ] -> draw
>221	PtrMemberAccess	m_trails [ i ] -> draw
>222	Identifier	draw
>223	ArrayIndexing	m_trails [ i ]
>224	Identifier	i
>225	Identifier	m_trails
>226	UnaryExpression	 
>227	Identifier	i
>228	IncDec	++
>229	Condition	 
>230	RelationalExpression	i < m_num_trails
>231	Identifier	m_num_trails
>232	Identifier	i
>233	ForInit	 
>234	IdentifierDeclStatement	int i = 0 ;
>235	IdentifierDecl	i = 0
>236	AssignmentExpr	i = 0
>237	PrimaryExpression	0
>238	Identifier	i
>239	Identifier	i
>240	IdentifierDeclType	int
>241	IfStatement	if ( ! m_running )
>242	ReturnStatement	 
>243	Condition	 
>244	UnaryOp	! m_running
>245	Identifier	m_running
>246	UnaryOperator	!
>256	FunctionDef	FX_Ship_Explosion 
>257	ParameterList	 
>258	ReturnType	bool
>259	CompoundStatement	 
>260	ReturnStatement	 
>261	UnaryOp	! m_running
>262	Identifier	m_running
>263	UnaryOperator	!
>268	FunctionDef	FX_Ship_Explosion 
>269	ParameterList	 
>270	ReturnType	bool
>271	CompoundStatement	 
>272	ReturnStatement	 
>273	Identifier	m_running
<3=8,4
<4=5
<5=7,6
<8=82,26,17,13,9
<9=10
<10=12,11
<13=14
<14=16,15
<17=18
<18=25,19
<19=21,20
<21=22
<22=24,23
<26=74,70,67,27
<27=28
<28=63,29
<29=30
<30=31
<31=62,32
<32=34,33
<34=60,35
<35=49,36
<36=37
<37=47,38
<38=43,39
<39=40
<40=42,41
<43=44
<44=46,45
<47=48
<49=50
<50=58,51
<51=54,52
<52=53
<54=55
<55=57,56
<58=59
<60=61
<63=64
<64=66,65
<67=69,68
<70=71
<71=73,72
<74=75
<75=76
<76=81,80,77
<77=79,78
<82=83
<83=95,94,84
<84=93,85
<85=91,86
<86=89,87
<87=88
<89=90
<91=92
<114=116,115
<116=121,117
<117=118
<118=120,119
<121=130,126,123,122
<123=125,124
<126=127
<127=129,128
<130=131
<131=132
<132=137,136,133
<133=135,134
<144=147,146,145
<147=191,173,148
<148=165,161,158,149
<149=150
<150=152,151
<152=153
<153=155,154
<155=157,156
<158=160,159
<161=162
<162=164,163
<165=166
<166=167
<167=172,171,168
<168=170,169
<173=180,174
<174=176,175
<176=177
<177=179,178
<180=181
<181=183,182
<183=185,184
<185=187,186
<187=188
<188=190,189
<191=193,192
<193=194
<194=196,195
<212=215,214,213
<215=241,216
<216=233,229,226,217
<217=218
<218=220,219
<220=221
<221=223,222
<223=225,224
<226=228,227
<229=230
<230=232,231
<233=234
<234=235
<235=240,239,236
<236=238,237
<241=243,242
<243=244
<244=246,245
<256=259,258,257
<259=260
<260=261
<261=263,262
<268=271,270,269
<271=272
<272=273
