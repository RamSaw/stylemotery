>7	FunctionDef	OSMNodeWrap 
>8	ParameterList	v8 
>9	Parameter	 
>10	Identifier	target
>11	ParameterType	v8 
>12	ReturnType	void
>13	CompoundStatement	 
>14	ExpressionStatement	 
>15	CallExpression	target -> Set ( symbol_Node , constructor -> GetFunction ( ) )
>16	ArgumentList	symbol_Node
>17	Argument	constructor -> GetFunction ( )
>18	CallExpression	constructor -> GetFunction ( )
>19	ArgumentList	 
>20	Callee	constructor -> GetFunction
>21	PtrMemberAccess	constructor -> GetFunction
>22	Identifier	GetFunction
>23	Identifier	constructor
>24	Argument	symbol_Node
>25	Identifier	symbol_Node
>26	Callee	target -> Set
>27	PtrMemberAccess	target -> Set
>28	Identifier	Set
>29	Identifier	target
>30	ExpressionStatement	 
>31	CallExpression	set_accessor ( constructor , \"lat\" , get_lat , attributes )
>32	ArgumentList	constructor
>33	Argument	attributes
>34	Identifier	attributes
>35	Argument	get_lat
>36	Identifier	get_lat
>37	Argument	\"lat\"
>38	PrimaryExpression	\"lat\"
>39	Argument	constructor
>40	Identifier	constructor
>41	Callee	set_accessor
>42	Identifier	set_accessor
>43	ExpressionStatement	 
>44	CallExpression	set_accessor ( constructor , \"lon\" , get_lon , attributes )
>45	ArgumentList	constructor
>46	Argument	attributes
>47	Identifier	attributes
>48	Argument	get_lon
>49	Identifier	get_lon
>50	Argument	\"lon\"
>51	PrimaryExpression	\"lon\"
>52	Argument	constructor
>53	Identifier	constructor
>54	Callee	set_accessor
>55	Identifier	set_accessor
>56	ExpressionStatement	 
>57	CallExpression	set_accessor ( constructor , \"coordinates\" , get_coordinates , attributes )
>58	ArgumentList	constructor
>59	Argument	attributes
>60	Identifier	attributes
>61	Argument	get_coordinates
>62	Identifier	get_coordinates
>63	Argument	\"coordinates\"
>64	PrimaryExpression	\"coordinates\"
>65	Argument	constructor
>66	Identifier	constructor
>67	Callee	set_accessor
>68	Identifier	set_accessor
>69	ExpressionStatement	 
>70	CallExpression	set_accessor ( constructor , \"location\" , get_coordinates , attributes )
>71	ArgumentList	constructor
>72	Argument	attributes
>73	Identifier	attributes
>74	Argument	get_coordinates
>75	Identifier	get_coordinates
>76	Argument	\"location\"
>77	PrimaryExpression	\"location\"
>78	Argument	constructor
>79	Identifier	constructor
>80	Callee	set_accessor
>81	Identifier	set_accessor
>82	ExpressionStatement	 
>83	CallExpression	set_accessor ( constructor , \"type\" , get_type , attributes )
>84	ArgumentList	constructor
>85	Argument	attributes
>86	Identifier	attributes
>87	Argument	get_type
>88	Identifier	get_type
>89	Argument	\"type\"
>90	PrimaryExpression	\"type\"
>91	Argument	constructor
>92	Identifier	constructor
>93	Callee	set_accessor
>94	Identifier	set_accessor
>95	ExpressionStatement	 
>96	AssignmentExpr	attributes = static_cast < v8 
>97	RelationalExpression	static_cast < v8 
>98	RelationalExpression	v8 
>99	InclusiveOrExpression	v8 
>100	Identifier	v8 
>101	Identifier	v8 
>102	Identifier	v8 
>103	Identifier	static_cast
>104	Identifier	attributes
>105	Statement	 
>106	ExpressionStatement	 
>107	CallExpression	node 
>108	ArgumentList	constructor
>109	Argument	wkt
>110	Identifier	wkt
>111	Argument	\"wkt\"
>112	PrimaryExpression	\"wkt\"
>113	Argument	constructor
>114	Identifier	constructor
>115	Callee	node 
>116	Identifier	node 
>117	ExpressionStatement	 
>118	CallExpression	node 
>119	ArgumentList	constructor
>120	Argument	wkb
>121	Identifier	wkb
>122	Argument	\"wkb\"
>123	PrimaryExpression	\"wkb\"
>124	Argument	constructor
>125	Identifier	constructor
>126	Callee	node 
>127	Identifier	node 
>128	ExpressionStatement	 
>129	CallExpression	constructor -> SetClassName ( symbol_Node )
>130	ArgumentList	symbol_Node
>131	Argument	symbol_Node
>132	Identifier	symbol_Node
>133	Callee	constructor -> SetClassName
>134	PtrMemberAccess	constructor -> SetClassName
>135	Identifier	SetClassName
>136	Identifier	constructor
>137	ExpressionStatement	 
>138	CallExpression	constructor -> InstanceTemplate ( ) -> SetInternalFieldCount ( 1 )
>139	ArgumentList	1
>140	Argument	1
>141	PrimaryExpression	1
>142	Callee	constructor -> InstanceTemplate ( ) -> SetInternalFieldCount
>143	PtrMemberAccess	constructor -> InstanceTemplate ( ) -> SetInternalFieldCount
>144	Identifier	SetInternalFieldCount
>145	CallExpression	constructor -> InstanceTemplate ( )
>146	ArgumentList	 
>147	Callee	constructor -> InstanceTemplate
>148	PtrMemberAccess	constructor -> InstanceTemplate
>149	Identifier	InstanceTemplate
>150	Identifier	constructor
>151	ExpressionStatement	 
>152	CallExpression	constructor -> Inherit ( OSMObjectWrap 
>153	ArgumentList	OSMObjectWrap 
>154	Argument	OSMObjectWrap 
>155	Identifier	OSMObjectWrap 
>156	Callee	constructor -> Inherit
>157	PtrMemberAccess	constructor -> Inherit
>158	Identifier	Inherit
>159	Identifier	constructor
>160	ExpressionStatement	 
>161	CallExpression	New ( v8 
>162	ArgumentList	v8 
>163	Argument	v8 
>164	CallExpression	v8 
>165	ArgumentList	OSMNodeWrap 
>166	Argument	OSMNodeWrap 
>167	Identifier	OSMNodeWrap 
>168	Callee	v8 
>169	Identifier	v8 
>170	Callee	New
>171	Identifier	New
>172	Statement	 
>173	Statement	 
>174	Statement	 
>175	Statement	 
>176	Statement	 
>177	Statement	 
>178	Statement	 
>179	Statement	 
>180	Statement	 
>181	Statement	 
>182	Statement	 
>183	IdentifierDeclStatement	 
>184	IdentifierDecl	scope
>185	Identifier	scope
>186	IdentifierDeclType	v8 
>211	FunctionDef	OSMNodeWrap 
>212	ParameterList	const v8 
>213	Parameter	 
>214	Identifier	args
>215	ParameterType	const v8 
>216	ReturnType	v8 
>217	CompoundStatement	 
>218	IfStatement	if ( args . Length ( ) == 1 && args [ 0 ] -> IsExternal ( ) )
>219	ElseStatement	else
>220	CompoundStatement	 
>221	ReturnStatement	 
>222	CallExpression	ThrowException ( v8 
>223	ArgumentList	v8 
>224	Argument	v8 
>225	CallExpression	v8 
>226	ArgumentList	v8 
>227	Argument	v8 
>228	CallExpression	v8 
>229	ArgumentList	\"osmium.Node cannot be created in Javascript\"
>230	Argument	\"osmium.Node cannot be created in Javascript\"
>231	PrimaryExpression	\"osmium.Node cannot be created in Javascript\"
>232	Callee	v8 
>233	Identifier	v8 
>234	Callee	v8 
>235	Identifier	v8 
>236	Callee	ThrowException
>237	Identifier	ThrowException
>238	CompoundStatement	 
>239	ReturnStatement	 
>240	CallExpression	args . This ( )
>241	ArgumentList	 
>242	Callee	args . This
>243	MemberAccess	args . This
>244	Identifier	This
>245	Identifier	args
>246	ExpressionStatement	 
>247	CallExpression	( ext -> Value ( ) ) -> Wrap ( args . This ( ) )
>248	ArgumentList	args . This ( )
>249	Argument	args . This ( )
>250	CallExpression	args . This ( )
>251	ArgumentList	 
>252	Callee	args . This
>253	MemberAccess	args . This
>254	Identifier	This
>255	Identifier	args
>256	Callee	( ext -> Value ( ) ) -> Wrap
>257	PtrMemberAccess	( ext -> Value ( ) ) -> Wrap
>258	Identifier	Wrap
>259	CallExpression	ext -> Value ( )
>260	ArgumentList	 
>261	Callee	ext -> Value
>262	PtrMemberAccess	ext -> Value
>263	Identifier	Value
>264	Identifier	ext
>265	Statement	 
>266	Statement	 
>267	Statement	 
>268	Statement	 
>269	Statement	 
>270	ExpressionStatement	 
>271	CallExpression	Cast ( args [ 0 ] )
>272	ArgumentList	args [ 0 ]
>273	Argument	args [ 0 ]
>274	ArrayIndexing	args [ 0 ]
>275	PrimaryExpression	0
>276	Identifier	args
>277	Callee	Cast
>278	Identifier	Cast
>279	Statement	 
>280	Statement	 
>281	Statement	 
>282	Statement	 
>283	Statement	 
>284	Statement	 
>285	Statement	 
>286	Statement	 
>287	Statement	 
>288	Statement	 
>289	Statement	 
>290	Statement	 
>291	Statement	 
>292	Statement	 
>293	Statement	 
>294	Statement	 
>295	Statement	 
>296	Statement	 
>297	Statement	 
>298	Condition	 
>299	AndExpression	args . Length ( ) == 1 && args [ 0 ] -> IsExternal ( )
>300	CallExpression	args [ 0 ] -> IsExternal ( )
>301	ArgumentList	 
>302	Callee	args [ 0 ] -> IsExternal
>303	PtrMemberAccess	args [ 0 ] -> IsExternal
>304	Identifier	IsExternal
>305	ArrayIndexing	args [ 0 ]
>306	PrimaryExpression	0
>307	Identifier	args
>308	EqualityExpression	args . Length ( ) == 1
>309	PrimaryExpression	1
>310	CallExpression	args . Length ( )
>311	ArgumentList	 
>312	Callee	args . Length
>313	MemberAccess	args . Length
>314	Identifier	Length
>315	Identifier	args
>345	FunctionDef	OSMNodeWrap 
>346	ParameterList	const v8 
>347	Parameter	 
>348	Identifier	args
>349	ParameterType	const v8 
>350	ReturnType	v8 
>351	CompoundStatement	 
>352	BlockStarter	 
>353	CompoundStatement	 
>354	ReturnStatement	return ThrowException ( v8 
>355	CallExpression	ThrowException ( v8 
>356	ArgumentList	v8 
>357	Argument	v8 
>358	CallExpression	v8 
>359	ArgumentList	v8 
>360	Argument	v8 
>361	CallExpression	v8 
>362	ArgumentList	e . what ( )
>363	Argument	e . what ( )
>364	CallExpression	e . what ( )
>365	ArgumentList	 
>366	Callee	e . what
>367	MemberAccess	e . what
>368	Identifier	what
>369	Identifier	e
>370	Callee	v8 
>371	Identifier	v8 
>372	Callee	v8 
>373	Identifier	v8 
>374	Callee	ThrowException
>375	Identifier	ThrowException
>376	Identifier	e
>377	BlockStarter	 
>378	CompoundStatement	 
>379	ReturnStatement	return scope . Close ( node 
>380	CallExpression	scope . Close ( node 
>381	ArgumentList	node 
>382	Argument	node 
>383	PtrMemberAccess	node 
>384	Identifier	handle_
>385	CallExpression	node 
>386	ArgumentList	wkb . data ( )
>387	Argument	wkb . size ( )
>388	CallExpression	wkb . size ( )
>389	ArgumentList	 
>390	Callee	wkb . size
>391	MemberAccess	wkb . size
>392	Identifier	size
>393	Identifier	wkb
>394	Argument	wkb . data ( )
>395	CallExpression	wkb . data ( )
>396	ArgumentList	 
>397	Callee	wkb . data
>398	MemberAccess	wkb . data
>399	Identifier	data
>400	Identifier	wkb
>401	Callee	node 
>402	Identifier	node 
>403	Callee	scope . Close
>404	MemberAccess	scope . Close
>405	Identifier	Close
>406	Identifier	scope
>407	ExpressionStatement	 
>408	CompoundStatement	 
>409	Statement	)
>410	Statement	)
>411	Statement	)
>412	Statement	(
>413	Statement	This
>414	Statement	.
>415	Statement	args
>416	Statement	(
>417	Statement	wrapped
>418	Statement	(
>419	Statement	create_point
>420	Statement	.
>421	Statement	wkb_factory
>422	Statement	wkb
>423	Statement	string
>424	Statement	 
>425	Statement	std
>426	IdentifierDeclStatement	 
>427	IdentifierDecl	scope
>428	Identifier	scope
>429	IdentifierDeclType	v8 
>430	ExpressionStatement	 
>431	CallExpression	INSTANCE_CHECK ( OSMNodeWrap , \"Node\" , \"wkb\" )
>432	ArgumentList	OSMNodeWrap
>433	Argument	\"wkb\"
>434	PrimaryExpression	\"wkb\"
>435	Argument	\"Node\"
>436	PrimaryExpression	\"Node\"
>437	Argument	OSMNodeWrap
>438	Identifier	OSMNodeWrap
>439	Callee	INSTANCE_CHECK
>440	Identifier	INSTANCE_CHECK
>459	FunctionDef	OSMNodeWrap 
>460	ParameterList	const v8 
>461	Parameter	 
>462	Identifier	args
>463	ParameterType	const v8 
>464	ReturnType	v8 
>465	CompoundStatement	 
>466	BlockStarter	 
>467	CompoundStatement	 
>468	ReturnStatement	return ThrowException ( v8 
>469	CallExpression	ThrowException ( v8 
>470	ArgumentList	v8 
>471	Argument	v8 
>472	CallExpression	v8 
>473	ArgumentList	v8 
>474	Argument	v8 
>475	CallExpression	v8 
>476	ArgumentList	e . what ( )
>477	Argument	e . what ( )
>478	CallExpression	e . what ( )
>479	ArgumentList	 
>480	Callee	e . what
>481	MemberAccess	e . what
>482	Identifier	what
>483	Identifier	e
>484	Callee	v8 
>485	Identifier	v8 
>486	Callee	v8 
>487	Identifier	v8 
>488	Callee	ThrowException
>489	Identifier	ThrowException
>490	Identifier	e
>491	BlockStarter	 
>492	CompoundStatement	 
>493	ReturnStatement	return scope . Close ( v8 
>494	CallExpression	scope . Close ( v8 
>495	ArgumentList	v8 
>496	Argument	v8 
>497	CallExpression	v8 
>498	ArgumentList	wkt . c_str ( )
>499	Argument	wkt . c_str ( )
>500	CallExpression	wkt . c_str ( )
>501	ArgumentList	 
>502	Callee	wkt . c_str
>503	MemberAccess	wkt . c_str
>504	Identifier	c_str
>505	Identifier	wkt
>506	Callee	v8 
>507	Identifier	v8 
>508	Callee	scope . Close
>509	MemberAccess	scope . Close
>510	Identifier	Close
>511	Identifier	scope
>512	ExpressionStatement	 
>513	CompoundStatement	 
>514	Statement	)
>515	Statement	)
>516	Statement	)
>517	Statement	(
>518	Statement	This
>519	Statement	.
>520	Statement	args
>521	Statement	(
>522	Statement	wrapped
>523	Statement	(
>524	Statement	create_point
>525	Statement	.
>526	Statement	wkt_factory
>527	Statement	wkt
>528	Statement	string
>529	Statement	 
>530	Statement	std
>531	IdentifierDeclStatement	 
>532	IdentifierDecl	scope
>533	Identifier	scope
>534	IdentifierDeclType	v8 
>535	ExpressionStatement	 
>536	CallExpression	INSTANCE_CHECK ( OSMNodeWrap , \"Node\" , \"wkt\" )
>537	ArgumentList	OSMNodeWrap
>538	Argument	\"wkt\"
>539	PrimaryExpression	\"wkt\"
>540	Argument	\"Node\"
>541	PrimaryExpression	\"Node\"
>542	Argument	OSMNodeWrap
>543	Identifier	OSMNodeWrap
>544	Callee	INSTANCE_CHECK
>545	Identifier	INSTANCE_CHECK
<7=13,12,8
<8=9
<9=11,10
<13=183,182,181,180,179,178,177,176,175,174,173,172,160,151,137,128,117,106,105,95,82,69,56,43,30,14
<14=15
<15=26,16
<16=24,17
<17=18
<18=20,19
<20=21
<21=23,22
<24=25
<26=27
<27=29,28
<30=31
<31=41,32
<32=39,37,35,33
<33=34
<35=36
<37=38
<39=40
<41=42
<43=44
<44=54,45
<45=52,50,48,46
<46=47
<48=49
<50=51
<52=53
<54=55
<56=57
<57=67,58
<58=65,63,61,59
<59=60
<61=62
<63=64
<65=66
<67=68
<69=70
<70=80,71
<71=78,76,74,72
<72=73
<74=75
<76=77
<78=79
<80=81
<82=83
<83=93,84
<84=91,89,87,85
<85=86
<87=88
<89=90
<91=92
<93=94
<95=96
<96=104,97
<97=103,98
<98=102,99
<99=101,100
<106=107
<107=115,108
<108=113,111,109
<109=110
<111=112
<113=114
<115=116
<117=118
<118=126,119
<119=124,122,120
<120=121
<122=123
<124=125
<126=127
<128=129
<129=133,130
<130=131
<131=132
<133=134
<134=136,135
<137=138
<138=142,139
<139=140
<140=141
<142=143
<143=145,144
<145=147,146
<147=148
<148=150,149
<151=152
<152=156,153
<153=154
<154=155
<156=157
<157=159,158
<160=161
<161=170,162
<162=163
<163=164
<164=168,165
<165=166
<166=167
<168=169
<170=171
<183=184
<184=186,185
<211=217,216,212
<212=213
<213=215,214
<217=218
<218=298,238,219
<219=220
<220=221
<221=222
<222=236,223
<223=224
<224=225
<225=234,226
<226=227
<227=228
<228=232,229
<229=230
<230=231
<232=233
<234=235
<236=237
<238=297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,280,279,270,269,268,267,266,265,246,239
<239=240
<240=242,241
<242=243
<243=245,244
<246=247
<247=256,248
<248=249
<249=250
<250=252,251
<252=253
<253=255,254
<256=257
<257=259,258
<259=261,260
<261=262
<262=264,263
<270=271
<271=277,272
<272=273
<273=274
<274=276,275
<277=278
<298=299
<299=308,300
<300=302,301
<302=303
<303=305,304
<305=307,306
<308=310,309
<310=312,311
<312=313
<313=315,314
<345=351,350,346
<346=347
<347=349,348
<351=430,426,377,352
<352=376,353
<353=354
<354=355
<355=374,356
<356=357
<357=358
<358=372,359
<359=360
<360=361
<361=370,362
<362=363
<363=364
<364=366,365
<366=367
<367=369,368
<370=371
<372=373
<374=375
<377=378
<378=425,424,423,422,408,407,379
<379=380
<380=403,381
<381=382
<382=383
<383=385,384
<385=401,386
<386=394,387
<387=388
<388=390,389
<390=391
<391=393,392
<394=395
<395=397,396
<397=398
<398=400,399
<401=402
<403=404
<404=406,405
<408=421,420,419,418,417,416,415,414,413,412,411,410,409
<426=427
<427=429,428
<430=431
<431=439,432
<432=437,435,433
<433=434
<435=436
<437=438
<439=440
<459=465,464,460
<460=461
<461=463,462
<465=535,531,491,466
<466=490,467
<467=468
<468=469
<469=488,470
<470=471
<471=472
<472=486,473
<473=474
<474=475
<475=484,476
<476=477
<477=478
<478=480,479
<480=481
<481=483,482
<484=485
<486=487
<488=489
<491=492
<492=530,529,528,527,513,512,493
<493=494
<494=508,495
<495=496
<496=497
<497=506,498
<498=499
<499=500
<500=502,501
<502=503
<503=505,504
<506=507
<508=509
<509=511,510
<513=526,525,524,523,522,521,520,519,518,517,516,515,514
<531=532
<532=534,533
<535=536
<536=544,537
<537=542,540,538
<538=539
<540=541
<542=543
<544=545
