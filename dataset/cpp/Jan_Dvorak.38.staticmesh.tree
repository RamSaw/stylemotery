>3	FunctionDef	StaticMesh 
>4	ParameterList	const unsigned char * data , unsigned int data_size
>5	Parameter	 
>6	Identifier	data_size
>7	ParameterType	unsigned int
>8	Parameter	 
>9	Identifier	data
>10	ParameterType	const unsigned char *
>11	CompoundStatement	 
>12	ExpressionStatement	 
>13	CallExpression	render_to_texture ( g_resources . texture_mesh_size )
>14	ArgumentList	g_resources . texture_mesh_size
>15	Argument	g_resources . texture_mesh_size
>16	MemberAccess	g_resources . texture_mesh_size
>17	Identifier	texture_mesh_size
>18	Identifier	g_resources
>19	Callee	render_to_texture
>20	Identifier	render_to_texture
>21	ExpressionStatement	 
>22	CallExpression	build_vbo ( )
>23	ArgumentList	 
>24	Callee	build_vbo
>25	Identifier	build_vbo
>26	ExpressionStatement	 
>27	CallExpression	load ( )
>28	ArgumentList	 
>29	Callee	load
>30	Identifier	load
>38	FunctionDef	StaticMesh 
>39	ParameterList	 
>40	CompoundStatement	 
>41	IfStatement	if ( m_texture )
>42	ExpressionStatement	 
>43	CallExpression	glDeleteTextures ( 1 , & m_texture )
>44	ArgumentList	1
>45	Argument	& m_texture
>46	UnaryOp	& m_texture
>47	Identifier	m_texture
>48	UnaryOperator	&
>49	Argument	1
>50	PrimaryExpression	1
>51	Callee	glDeleteTextures
>52	Identifier	glDeleteTextures
>53	Condition	 
>54	Identifier	m_texture
>60	FunctionDef	StaticMesh 
>61	ParameterList	int t_size
>62	Parameter	 
>63	Identifier	t_size
>64	ParameterType	int
>65	ReturnType	void
>66	CompoundStatement	 
>67	ExpressionStatement	 
>68	CallExpression	glPopMatrix ( )
>69	ArgumentList	 
>70	Callee	glPopMatrix
>71	Identifier	glPopMatrix
>72	ExpressionStatement	 
>73	CallExpression	glMatrixMode ( GL_MODELVIEW )
>74	ArgumentList	GL_MODELVIEW
>75	Argument	GL_MODELVIEW
>76	Identifier	GL_MODELVIEW
>77	Callee	glMatrixMode
>78	Identifier	glMatrixMode
>79	ExpressionStatement	 
>80	CallExpression	glPopMatrix ( )
>81	ArgumentList	 
>82	Callee	glPopMatrix
>83	Identifier	glPopMatrix
>84	ExpressionStatement	 
>85	CallExpression	glMatrixMode ( GL_PROJECTION )
>86	ArgumentList	GL_PROJECTION
>87	Argument	GL_PROJECTION
>88	Identifier	GL_PROJECTION
>89	Callee	glMatrixMode
>90	Identifier	glMatrixMode
>91	ExpressionStatement	 
>92	AssignmentExpr	m_texture = move_texture_red_component ( m_texture )
>93	CallExpression	move_texture_red_component ( m_texture )
>94	ArgumentList	m_texture
>95	Argument	m_texture
>96	Identifier	m_texture
>97	Callee	move_texture_red_component
>98	Identifier	move_texture_red_component
>99	Identifier	m_texture
>100	ExpressionStatement	 
>101	Identifier	m_rtt
>102	Statement	 
>103	ExpressionStatement	 
>104	AssignmentExpr	m_texture = m_rtt -> get_texid ( )
>105	CallExpression	m_rtt -> get_texid ( )
>106	ArgumentList	 
>107	Callee	m_rtt -> get_texid
>108	PtrMemberAccess	m_rtt -> get_texid
>109	Identifier	get_texid
>110	Identifier	m_rtt
>111	Identifier	m_texture
>112	ExpressionStatement	 
>113	CallExpression	m_rtt -> end_render ( )
>114	ArgumentList	 
>115	Callee	m_rtt -> end_render
>116	PtrMemberAccess	m_rtt -> end_render
>117	Identifier	end_render
>118	Identifier	m_rtt
>119	ExpressionStatement	 
>120	CallExpression	draw ( )
>121	ArgumentList	 
>122	Callee	draw
>123	Identifier	draw
>124	ExpressionStatement	 
>125	CallExpression	glScalef ( 1.95 , 1.95 , 1.0 )
>126	ArgumentList	1.95
>127	Argument	1.0
>128	PrimaryExpression	1.0
>129	Argument	1.95
>130	PrimaryExpression	1.95
>131	Argument	1.95
>132	PrimaryExpression	1.95
>133	Callee	glScalef
>134	Identifier	glScalef
>135	ExpressionStatement	 
>136	CallExpression	glLoadIdentity ( )
>137	ArgumentList	 
>138	Callee	glLoadIdentity
>139	Identifier	glLoadIdentity
>140	ExpressionStatement	 
>141	CallExpression	glPushMatrix ( )
>142	ArgumentList	 
>143	Callee	glPushMatrix
>144	Identifier	glPushMatrix
>145	ExpressionStatement	 
>146	CallExpression	glMatrixMode ( GL_MODELVIEW )
>147	ArgumentList	GL_MODELVIEW
>148	Argument	GL_MODELVIEW
>149	Identifier	GL_MODELVIEW
>150	Callee	glMatrixMode
>151	Identifier	glMatrixMode
>152	ExpressionStatement	 
>153	CallExpression	glLoadIdentity ( )
>154	ArgumentList	 
>155	Callee	glLoadIdentity
>156	Identifier	glLoadIdentity
>157	ExpressionStatement	 
>158	CallExpression	glPushMatrix ( )
>159	ArgumentList	 
>160	Callee	glPushMatrix
>161	Identifier	glPushMatrix
>162	ExpressionStatement	 
>163	CallExpression	glMatrixMode ( GL_PROJECTION )
>164	ArgumentList	GL_PROJECTION
>165	Argument	GL_PROJECTION
>166	Identifier	GL_PROJECTION
>167	Callee	glMatrixMode
>168	Identifier	glMatrixMode
>169	ExpressionStatement	 
>170	CallExpression	glClear ( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
>171	ArgumentList	GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT
>172	Argument	GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT
>173	InclusiveOrExpression	GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT
>174	Identifier	GL_DEPTH_BUFFER_BIT
>175	Identifier	GL_COLOR_BUFFER_BIT
>176	Callee	glClear
>177	Identifier	glClear
>178	ExpressionStatement	 
>179	CallExpression	glViewport ( 0 , 0 , t_size , t_size )
>180	ArgumentList	0
>181	Argument	t_size
>182	Identifier	t_size
>183	Argument	t_size
>184	Identifier	t_size
>185	Argument	0
>186	PrimaryExpression	0
>187	Argument	0
>188	PrimaryExpression	0
>189	Callee	glViewport
>190	Identifier	glViewport
>191	ExpressionStatement	 
>192	CallExpression	glClearColor ( 0.0 , 0.0 , 0.0 , 0.0 )
>193	ArgumentList	0.0
>194	Argument	0.0
>195	PrimaryExpression	0.0
>196	Argument	0.0
>197	PrimaryExpression	0.0
>198	Argument	0.0
>199	PrimaryExpression	0.0
>200	Argument	0.0
>201	PrimaryExpression	0.0
>202	Callee	glClearColor
>203	Identifier	glClearColor
>204	ExpressionStatement	 
>205	CallExpression	m_rtt -> start_render ( )
>206	ArgumentList	 
>207	Callee	m_rtt -> start_render
>208	PtrMemberAccess	m_rtt -> start_render
>209	Identifier	start_render
>210	Identifier	m_rtt
>211	IdentifierDeclStatement	 
>212	IdentifierDecl	* m_rtt = new RTT_FBO ( 1 , t_size , t_size )
>213	AssignmentExpr	* m_rtt = new RTT_FBO ( 1 , t_size , t_size )
>214	Expression	1 , t_size , t_size
>215	Expression	t_size , t_size
>216	Identifier	t_size
>217	Identifier	t_size
>218	PrimaryExpression	1
>219	Identifier	m_rtt
>220	Identifier	m_rtt
>221	IdentifierDeclType	RTT *
>235	FunctionDef	StaticMesh 
>236	ParameterList	 
>237	ReturnType	void
>238	CompoundStatement	 
>239	ExpressionStatement	 
>240	AssignmentExpr	m_aabb = AABB ( verts )
>241	CallExpression	AABB ( verts )
>242	ArgumentList	verts
>243	Argument	verts
>244	Identifier	verts
>245	Callee	AABB
>246	Identifier	AABB
>247	Identifier	m_aabb
>248	ExpressionStatement	 
>249	AssignmentExpr	m_vbo_data = vec2_ary_to_float_ary ( verts )
>250	CallExpression	vec2_ary_to_float_ary ( verts )
>251	ArgumentList	verts
>252	Argument	verts
>253	Identifier	verts
>254	Callee	vec2_ary_to_float_ary
>255	Identifier	vec2_ary_to_float_ary
>256	Identifier	m_vbo_data
>257	ExpressionStatement	 
>258	AssignmentExpr	m_vertexcount = verts . size ( )
>259	CallExpression	verts . size ( )
>260	ArgumentList	 
>261	Callee	verts . size
>262	MemberAccess	verts . size
>263	Identifier	size
>264	Identifier	verts
>265	Identifier	m_vertexcount
>266	IdentifierDeclStatement	 
>267	IdentifierDecl	verts = Tesselate 
>268	AssignmentExpr	verts = Tesselate 
>269	CallExpression	Tesselate 
>270	ArgumentList	pathset
>271	Argument	pathset
>272	Identifier	pathset
>273	Callee	Tesselate 
>274	Identifier	Tesselate 
>275	Identifier	verts
>276	Identifier	verts
>277	IdentifierDeclType	vec2_ary_t
>278	IdentifierDeclStatement	 
>279	IdentifierDecl	pathset = svgpath . get_pathset ( )
>280	AssignmentExpr	pathset = svgpath . get_pathset ( )
>281	CallExpression	svgpath . get_pathset ( )
>282	ArgumentList	 
>283	Callee	svgpath . get_pathset
>284	MemberAccess	svgpath . get_pathset
>285	Identifier	get_pathset
>286	Identifier	svgpath
>287	Identifier	pathset
>288	Identifier	pathset
>289	IdentifierDeclType	pathset_t
>290	IdentifierDeclStatement	 
>291	IdentifierDecl	svgpath = SVGpath ( path , true , m_segments )
>292	AssignmentExpr	svgpath = SVGpath ( path , true , m_segments )
>293	CallExpression	SVGpath ( path , true , m_segments )
>294	ArgumentList	path
>295	Argument	m_segments
>296	Identifier	m_segments
>297	Argument	true
>298	Identifier	true
>299	Argument	path
>300	Identifier	path
>301	Callee	SVGpath
>302	Identifier	SVGpath
>303	Identifier	svgpath
>304	Identifier	svgpath
>305	IdentifierDeclType	SVGpath
>306	IdentifierDeclStatement	 
>307	IdentifierDecl	path = read_path ( )
>308	AssignmentExpr	path = read_path ( )
>309	CallExpression	read_path ( )
>310	ArgumentList	 
>311	Callee	read_path
>312	Identifier	read_path
>313	Identifier	path
>314	Identifier	path
>315	IdentifierDeclType	path_t
>335	FunctionDef	StaticMesh 
>336	ParameterList	 
>337	ReturnType	void
>338	CompoundStatement	 
>339	ExpressionStatement	 
>340	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER , 0 )
>341	ArgumentList	GL_ARRAY_BUFFER
>342	Argument	0
>343	PrimaryExpression	0
>344	Argument	GL_ARRAY_BUFFER
>345	Identifier	GL_ARRAY_BUFFER
>346	Callee	my_glBindBuffer
>347	Identifier	my_glBindBuffer
>348	ExpressionStatement	 
>349	CallExpression	my_glBufferData ( GL_ARRAY_BUFFER , m_vbo_data . size ( ) * sizeof ( float ) , & m_vbo_data [ 0 ] , GL_STATIC_DRAW )
>350	ArgumentList	GL_ARRAY_BUFFER
>351	Argument	GL_STATIC_DRAW
>352	Identifier	GL_STATIC_DRAW
>353	Argument	& m_vbo_data [ 0 ]
>354	UnaryOp	& m_vbo_data [ 0 ]
>355	ArrayIndexing	m_vbo_data [ 0 ]
>356	PrimaryExpression	0
>357	Identifier	m_vbo_data
>358	UnaryOperator	&
>359	Argument	m_vbo_data . size ( ) * sizeof ( float )
>360	MultiplicativeExpression	m_vbo_data . size ( ) * sizeof ( float )
>361	SizeofExpr	sizeof ( float )
>362	SizeofOperand	float
>363	Sizeof	sizeof
>364	CallExpression	m_vbo_data . size ( )
>365	ArgumentList	 
>366	Callee	m_vbo_data . size
>367	MemberAccess	m_vbo_data . size
>368	Identifier	size
>369	Identifier	m_vbo_data
>370	Argument	GL_ARRAY_BUFFER
>371	Identifier	GL_ARRAY_BUFFER
>372	Callee	my_glBufferData
>373	Identifier	my_glBufferData
>374	ExpressionStatement	 
>375	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER , m_vbo )
>376	ArgumentList	GL_ARRAY_BUFFER
>377	Argument	m_vbo
>378	Identifier	m_vbo
>379	Argument	GL_ARRAY_BUFFER
>380	Identifier	GL_ARRAY_BUFFER
>381	Callee	my_glBindBuffer
>382	Identifier	my_glBindBuffer
>383	ExpressionStatement	 
>384	CallExpression	my_glGenBuffers ( 1 , & m_vbo )
>385	ArgumentList	1
>386	Argument	& m_vbo
>387	UnaryOp	& m_vbo
>388	Identifier	m_vbo
>389	UnaryOperator	&
>390	Argument	1
>391	PrimaryExpression	1
>392	Callee	my_glGenBuffers
>393	Identifier	my_glGenBuffers
>404	FunctionDef	StaticMesh 
>405	ParameterList	 
>406	ReturnType	void
>407	CompoundStatement	 
>408	IfStatement	if ( m_texture != 0 )
>409	ElseStatement	else
>410	CompoundStatement	 
>411	ExpressionStatement	 
>412	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER , 0 )
>413	ArgumentList	GL_ARRAY_BUFFER
>414	Argument	0
>415	PrimaryExpression	0
>416	Argument	GL_ARRAY_BUFFER
>417	Identifier	GL_ARRAY_BUFFER
>418	Callee	my_glBindBuffer
>419	Identifier	my_glBindBuffer
>420	ExpressionStatement	 
>421	CallExpression	glDisableClientState ( GL_VERTEX_ARRAY )
>422	ArgumentList	GL_VERTEX_ARRAY
>423	Argument	GL_VERTEX_ARRAY
>424	Identifier	GL_VERTEX_ARRAY
>425	Callee	glDisableClientState
>426	Identifier	glDisableClientState
>427	ExpressionStatement	 
>428	CallExpression	glDrawArrays ( GL_TRIANGLES , 0 , m_vertexcount )
>429	ArgumentList	GL_TRIANGLES
>430	Argument	m_vertexcount
>431	Identifier	m_vertexcount
>432	Argument	0
>433	PrimaryExpression	0
>434	Argument	GL_TRIANGLES
>435	Identifier	GL_TRIANGLES
>436	Callee	glDrawArrays
>437	Identifier	glDrawArrays
>438	ExpressionStatement	 
>439	CallExpression	glVertexPointer ( 2 , GL_FLOAT , 0 , 0 )
>440	ArgumentList	2
>441	Argument	0
>442	PrimaryExpression	0
>443	Argument	0
>444	PrimaryExpression	0
>445	Argument	GL_FLOAT
>446	Identifier	GL_FLOAT
>447	Argument	2
>448	PrimaryExpression	2
>449	Callee	glVertexPointer
>450	Identifier	glVertexPointer
>451	ExpressionStatement	 
>452	CallExpression	glEnableClientState ( GL_VERTEX_ARRAY )
>453	ArgumentList	GL_VERTEX_ARRAY
>454	Argument	GL_VERTEX_ARRAY
>455	Identifier	GL_VERTEX_ARRAY
>456	Callee	glEnableClientState
>457	Identifier	glEnableClientState
>458	ExpressionStatement	 
>459	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER , m_vbo )
>460	ArgumentList	GL_ARRAY_BUFFER
>461	Argument	m_vbo
>462	Identifier	m_vbo
>463	Argument	GL_ARRAY_BUFFER
>464	Identifier	GL_ARRAY_BUFFER
>465	Callee	my_glBindBuffer
>466	Identifier	my_glBindBuffer
>467	CompoundStatement	 
>468	ExpressionStatement	 
>469	CallExpression	g_resources . shader_staticmesh -> unuse ( )
>470	ArgumentList	 
>471	Callee	g_resources . shader_staticmesh -> unuse
>472	PtrMemberAccess	g_resources . shader_staticmesh -> unuse
>473	Identifier	unuse
>474	MemberAccess	g_resources . shader_staticmesh
>475	Identifier	shader_staticmesh
>476	Identifier	g_resources
>477	ExpressionStatement	 
>478	CallExpression	glPopMatrix ( )
>479	ArgumentList	 
>480	Callee	glPopMatrix
>481	Identifier	glPopMatrix
>482	ExpressionStatement	 
>483	CallExpression	draw_textured_quad ( 1.0 , m_texture , true )
>484	ArgumentList	1.0
>485	Argument	true
>486	Identifier	true
>487	Argument	m_texture
>488	Identifier	m_texture
>489	Argument	1.0
>490	PrimaryExpression	1.0
>491	Callee	draw_textured_quad
>492	Identifier	draw_textured_quad
>493	ExpressionStatement	 
>494	CallExpression	glScalef ( 1.02 , 1.02 , 1.00 )
>495	ArgumentList	1.02
>496	Argument	1.00
>497	PrimaryExpression	1.00
>498	Argument	1.02
>499	PrimaryExpression	1.02
>500	Argument	1.02
>501	PrimaryExpression	1.02
>502	Callee	glScalef
>503	Identifier	glScalef
>504	ExpressionStatement	 
>505	CallExpression	glPushMatrix ( )
>506	ArgumentList	 
>507	Callee	glPushMatrix
>508	Identifier	glPushMatrix
>509	ExpressionStatement	 
>510	CallExpression	glMatrixMode ( GL_MODELVIEW )
>511	ArgumentList	GL_MODELVIEW
>512	Argument	GL_MODELVIEW
>513	Identifier	GL_MODELVIEW
>514	Callee	glMatrixMode
>515	Identifier	glMatrixMode
>516	ExpressionStatement	 
>517	CallExpression	g_resources . shader_staticmesh -> use ( )
>518	ArgumentList	 
>519	Callee	g_resources . shader_staticmesh -> use
>520	PtrMemberAccess	g_resources . shader_staticmesh -> use
>521	Identifier	use
>522	MemberAccess	g_resources . shader_staticmesh
>523	Identifier	shader_staticmesh
>524	Identifier	g_resources
>525	Condition	 
>526	EqualityExpression	m_texture != 0
>527	PrimaryExpression	0
>528	Identifier	m_texture
>543	FunctionDef	StaticMesh 
>544	ParameterList	 
>545	ReturnType	float
>546	CompoundStatement	 
>547	ReturnStatement	 
>548	MultiplicativeExpression	( float ) * num / m_divisor
>549	Identifier	m_divisor
>550	CastExpression	( float ) * num
>551	UnaryOp	* num
>552	Identifier	num
>553	UnaryOperator	*
>554	CastTarget	float
>555	ExpressionStatement	 
>556	AssignmentExpr	m_data_ptr += 2
>557	PrimaryExpression	2
>558	Identifier	m_data_ptr
>559	ExpressionStatement	 
>560	UnaryOp	& m_data [ m_data_ptr ]
>561	ArrayIndexing	m_data [ m_data_ptr ]
>562	Identifier	m_data_ptr
>563	Identifier	m_data
>564	UnaryOperator	&
>565	Statement	 
>566	Statement	 
>567	Statement	 
>568	Statement	 
>569	Statement	 
>570	Statement	 
>571	Statement	 
>572	Statement	 
>573	Statement	 
>574	Statement	 
>575	Statement	 
>576	Statement	 
>577	Statement	 
>586	FunctionDef	StaticMesh 
>587	ParameterList	 
>588	ReturnType	vec2
>589	CompoundStatement	 
>590	ReturnStatement	 
>591	CallExpression	vec2 ( x , y )
>592	ArgumentList	x
>593	Argument	y
>594	Identifier	y
>595	Argument	x
>596	Identifier	x
>597	Callee	vec2
>598	Identifier	vec2
>599	IdentifierDeclStatement	 
>600	IdentifierDecl	y = get_num ( )
>601	AssignmentExpr	y = get_num ( )
>602	CallExpression	get_num ( )
>603	ArgumentList	 
>604	Callee	get_num
>605	Identifier	get_num
>606	Identifier	y
>607	Identifier	y
>608	IdentifierDeclType	float
>609	IdentifierDeclStatement	 
>610	IdentifierDecl	x = get_num ( )
>611	AssignmentExpr	x = get_num ( )
>612	CallExpression	get_num ( )
>613	ArgumentList	 
>614	Callee	get_num
>615	Identifier	get_num
>616	Identifier	x
>617	Identifier	x
>618	IdentifierDeclType	float
>626	FunctionDef	StaticMesh 
>627	ParameterList	 
>628	ReturnType	int
>629	CompoundStatement	 
>630	ReturnStatement	 
>631	Identifier	num
>632	ExpressionStatement	 
>633	IncDecOp	m_data_ptr ++
>634	IncDec	++
>635	Identifier	m_data_ptr
>636	IdentifierDeclStatement	 
>637	IdentifierDecl	num = m_data [ m_data_ptr ]
>638	AssignmentExpr	num = m_data [ m_data_ptr ]
>639	ArrayIndexing	m_data [ m_data_ptr ]
>640	Identifier	m_data_ptr
>641	Identifier	m_data
>642	Identifier	num
>643	Identifier	num
>644	IdentifierDeclType	const unsigned char
>653	FunctionDef	StaticMesh 
>654	ParameterList	 
>655	ReturnType	path_t
>656	CompoundStatement	 
>657	ReturnStatement	 
>658	Identifier	path
>659	WhileStatement	while ( true )
>660	CompoundStatement	 
>661	ExpressionStatement	 
>662	CallExpression	path . push_back ( pt )
>663	ArgumentList	pt
>664	Argument	pt
>665	Identifier	pt
>666	Callee	path . push_back
>667	MemberAccess	path . push_back
>668	Identifier	push_back
>669	Identifier	path
>670	IdentifierDeclStatement	 
>671	IdentifierDecl	pt ( cmd , data )
>672	Expression	cmd , data
>673	Identifier	data
>674	Identifier	cmd
>675	Identifier	pt
>676	IdentifierDeclType	path_token_t
>677	SwitchStatement	switch ( cmd )
>678	CompoundStatement	 
>679	ExpressionStatement	 
>680	CallExpression	assert ( false )
>681	ArgumentList	false
>682	Argument	false
>683	Identifier	false
>684	Callee	assert
>685	Identifier	assert
>686	Label	 
>687	Identifier	default
>688	BreakStatement	 
>689	Label	 
>690	Label	 
>691	BreakStatement	 
>692	ExpressionStatement	 
>693	CallExpression	data . push_back ( get_vec2 ( ) )
>694	ArgumentList	get_vec2 ( )
>695	Argument	get_vec2 ( )
>696	CallExpression	get_vec2 ( )
>697	ArgumentList	 
>698	Callee	get_vec2
>699	Identifier	get_vec2
>700	Callee	data . push_back
>701	MemberAccess	data . push_back
>702	Identifier	push_back
>703	Identifier	data
>704	Label	 
>705	Label	 
>706	Label	 
>707	ExpressionStatement	 
>708	CallExpression	data . push_back ( get_vec2 ( ) )
>709	ArgumentList	get_vec2 ( )
>710	Argument	get_vec2 ( )
>711	CallExpression	get_vec2 ( )
>712	ArgumentList	 
>713	Callee	get_vec2
>714	Identifier	get_vec2
>715	Callee	data . push_back
>716	MemberAccess	data . push_back
>717	Identifier	push_back
>718	Identifier	data
>719	Label	 
>720	ExpressionStatement	 
>721	CallExpression	data . push_back ( get_vec2 ( ) )
>722	ArgumentList	get_vec2 ( )
>723	Argument	get_vec2 ( )
>724	CallExpression	get_vec2 ( )
>725	ArgumentList	 
>726	Callee	get_vec2
>727	Identifier	get_vec2
>728	Callee	data . push_back
>729	MemberAccess	data . push_back
>730	Identifier	push_back
>731	Identifier	data
>732	Label	 
>733	BreakStatement	 
>734	ExpressionStatement	 
>735	CallExpression	data . push_back ( vec2 ( get_num ( ) , 0.0 ) )
>736	ArgumentList	vec2 ( get_num ( ) , 0.0 )
>737	Argument	vec2 ( get_num ( ) , 0.0 )
>738	CallExpression	vec2 ( get_num ( ) , 0.0 )
>739	ArgumentList	get_num ( )
>740	Argument	0.0
>741	PrimaryExpression	0.0
>742	Argument	get_num ( )
>743	CallExpression	get_num ( )
>744	ArgumentList	 
>745	Callee	get_num
>746	Identifier	get_num
>747	Callee	vec2
>748	Identifier	vec2
>749	Callee	data . push_back
>750	MemberAccess	data . push_back
>751	Identifier	push_back
>752	Identifier	data
>753	Label	 
>754	Label	 
>755	Condition	 
>756	Identifier	cmd
>757	IdentifierDeclStatement	 
>758	IdentifierDecl	cmd = get_byte ( )
>759	AssignmentExpr	cmd = get_byte ( )
>760	CallExpression	get_byte ( )
>761	ArgumentList	 
>762	Callee	get_byte
>763	Identifier	get_byte
>764	Identifier	cmd
>765	Identifier	cmd
>766	IdentifierDeclType	char
>767	IfStatement	if ( m_data_ptr >= m_data_size )
>768	BreakStatement	 
>769	Condition	 
>770	RelationalExpression	m_data_ptr >= m_data_size
>771	Identifier	m_data_size
>772	Identifier	m_data_ptr
>773	IdentifierDeclStatement	 
>774	IdentifierDecl	data
>775	Identifier	data
>776	IdentifierDeclType	vec2_ary_t
>777	Condition	 
>778	Identifier	true
>779	IdentifierDeclStatement	 
>780	IdentifierDecl	path
>781	Identifier	path
>782	IdentifierDeclType	path_t
<3=11,4
<4=8,5
<5=7,6
<8=10,9
<11=26,21,12
<12=13
<13=19,14
<14=15
<15=16
<16=18,17
<19=20
<21=22
<22=24,23
<24=25
<26=27
<27=29,28
<29=30
<38=40,39
<40=41
<41=53,42
<42=43
<43=51,44
<44=49,45
<45=46
<46=48,47
<49=50
<51=52
<53=54
<60=66,65,61
<61=62
<62=64,63
<66=211,204,191,178,169,162,157,152,145,140,135,124,119,112,103,102,100,91,84,79,72,67
<67=68
<68=70,69
<70=71
<72=73
<73=77,74
<74=75
<75=76
<77=78
<79=80
<80=82,81
<82=83
<84=85
<85=89,86
<86=87
<87=88
<89=90
<91=92
<92=99,93
<93=97,94
<94=95
<95=96
<97=98
<100=101
<103=104
<104=111,105
<105=107,106
<107=108
<108=110,109
<112=113
<113=115,114
<115=116
<116=118,117
<119=120
<120=122,121
<122=123
<124=125
<125=133,126
<126=131,129,127
<127=128
<129=130
<131=132
<133=134
<135=136
<136=138,137
<138=139
<140=141
<141=143,142
<143=144
<145=146
<146=150,147
<147=148
<148=149
<150=151
<152=153
<153=155,154
<155=156
<157=158
<158=160,159
<160=161
<162=163
<163=167,164
<164=165
<165=166
<167=168
<169=170
<170=176,171
<171=172
<172=173
<173=175,174
<176=177
<178=179
<179=189,180
<180=187,185,183,181
<181=182
<183=184
<185=186
<187=188
<189=190
<191=192
<192=202,193
<193=200,198,196,194
<194=195
<196=197
<198=199
<200=201
<202=203
<204=205
<205=207,206
<207=208
<208=210,209
<211=212
<212=221,220,213
<213=219,214
<214=218,215
<215=217,216
<235=238,237,236
<238=306,290,278,266,257,248,239
<239=240
<240=247,241
<241=245,242
<242=243
<243=244
<245=246
<248=249
<249=256,250
<250=254,251
<251=252
<252=253
<254=255
<257=258
<258=265,259
<259=261,260
<261=262
<262=264,263
<266=267
<267=277,276,268
<268=275,269
<269=273,270
<270=271
<271=272
<273=274
<278=279
<279=289,288,280
<280=287,281
<281=283,282
<283=284
<284=286,285
<290=291
<291=305,304,292
<292=303,293
<293=301,294
<294=299,297,295
<295=296
<297=298
<299=300
<301=302
<306=307
<307=315,314,308
<308=313,309
<309=311,310
<311=312
<335=338,337,336
<338=383,374,348,339
<339=340
<340=346,341
<341=344,342
<342=343
<344=345
<346=347
<348=349
<349=372,350
<350=370,359,353,351
<351=352
<353=354
<354=358,355
<355=357,356
<359=360
<360=364,361
<361=363,362
<364=366,365
<366=367
<367=369,368
<370=371
<372=373
<374=375
<375=381,376
<376=379,377
<377=378
<379=380
<381=382
<383=384
<384=392,385
<385=390,386
<386=387
<387=389,388
<390=391
<392=393
<404=407,406,405
<407=408
<408=525,467,409
<409=410
<410=458,451,438,427,420,411
<411=412
<412=418,413
<413=416,414
<414=415
<416=417
<418=419
<420=421
<421=425,422
<422=423
<423=424
<425=426
<427=428
<428=436,429
<429=434,432,430
<430=431
<432=433
<434=435
<436=437
<438=439
<439=449,440
<440=447,445,443,441
<441=442
<443=444
<445=446
<447=448
<449=450
<451=452
<452=456,453
<453=454
<454=455
<456=457
<458=459
<459=465,460
<460=463,461
<461=462
<463=464
<465=466
<467=516,509,504,493,482,477,468
<468=469
<469=471,470
<471=472
<472=474,473
<474=476,475
<477=478
<478=480,479
<480=481
<482=483
<483=491,484
<484=489,487,485
<485=486
<487=488
<489=490
<491=492
<493=494
<494=502,495
<495=500,498,496
<496=497
<498=499
<500=501
<502=503
<504=505
<505=507,506
<507=508
<509=510
<510=514,511
<511=512
<512=513
<514=515
<516=517
<517=519,518
<519=520
<520=522,521
<522=524,523
<525=526
<526=528,527
<543=546,545,544
<546=577,576,575,574,573,572,571,570,569,568,567,566,565,559,555,547
<547=548
<548=550,549
<550=554,551
<551=553,552
<555=556
<556=558,557
<559=560
<560=564,561
<561=563,562
<586=589,588,587
<589=609,599,590
<590=591
<591=597,592
<592=595,593
<593=594
<595=596
<597=598
<599=600
<600=608,607,601
<601=606,602
<602=604,603
<604=605
<609=610
<610=618,617,611
<611=616,612
<612=614,613
<614=615
<626=629,628,627
<629=636,632,630
<630=631
<632=633
<633=635,634
<636=637
<637=644,643,638
<638=642,639
<639=641,640
<653=656,655,654
<656=779,659,657
<657=658
<659=777,660
<660=773,767,757,677,670,661
<661=662
<662=666,663
<663=664
<664=665
<666=667
<667=669,668
<670=671
<671=676,675,672
<672=674,673
<677=755,678
<678=754,753,734,733,732,720,719,707,706,705,704,692,691,690,689,688,686,679
<679=680
<680=684,681
<681=682
<682=683
<684=685
<686=687
<692=693
<693=700,694
<694=695
<695=696
<696=698,697
<698=699
<700=701
<701=703,702
<707=708
<708=715,709
<709=710
<710=711
<711=713,712
<713=714
<715=716
<716=718,717
<720=721
<721=728,722
<722=723
<723=724
<724=726,725
<726=727
<728=729
<729=731,730
<734=735
<735=749,736
<736=737
<737=738
<738=747,739
<739=742,740
<740=741
<742=743
<743=745,744
<745=746
<747=748
<749=750
<750=752,751
<755=756
<757=758
<758=766,765,759
<759=764,760
<760=762,761
<762=763
<767=769,768
<769=770
<770=772,771
<773=774
<774=776,775
<777=778
<779=780
<780=782,781
