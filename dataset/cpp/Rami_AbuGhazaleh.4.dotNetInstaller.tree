>3	FunctionDef	CdotNetInstallerApp 
>4	ParameterList	 
>5	CompoundStatement	 
>11	FunctionDef	CdotNetInstallerApp 
>12	ParameterList	 
>13	ReturnType	BOOL
>14	CompoundStatement	 
>15	ReturnStatement	 
>16	Identifier	FALSE
>17	BlockStarter	 
>18	CompoundStatement	 
>19	ExpressionStatement	m_rc = - 1
>20	AssignmentExpr	m_rc = - 1
>21	UnaryOp	- 1
>22	PrimaryExpression	1
>23	UnaryOperator	-
>24	Identifier	m_rc
>25	ExpressionStatement	 
>26	Statement	)
>27	Statement	)
>28	Statement	)
>29	Statement	(
>30	Statement	what
>31	Statement	.
>32	Statement	ex
>33	Statement	(
>34	Statement	string2wstring
>35	Statement	 
>36	Statement	DVLib
>37	Statement	<<
>38	Statement	\"Error
>39	Statement	L
>40	Statement	(
>41	Statement	TRYLOG
>42	ExpressionStatement	DniMessageBox 
>43	CallExpression	DniMessageBox 
>44	ArgumentList	DVLib 
>45	Argument	MB_OK | MB_ICONSTOP
>46	InclusiveOrExpression	MB_OK | MB_ICONSTOP
>47	Identifier	MB_ICONSTOP
>48	Identifier	MB_OK
>49	Argument	DVLib 
>50	CallExpression	DVLib 
>51	ArgumentList	 
>52	Callee	DVLib 
>53	MemberAccess	DVLib 
>54	Identifier	c_str
>55	CallExpression	DVLib 
>56	ArgumentList	ex . what ( )
>57	Argument	ex . what ( )
>58	CallExpression	ex . what ( )
>59	ArgumentList	 
>60	Callee	ex . what
>61	MemberAccess	ex . what
>62	Identifier	what
>63	Identifier	ex
>64	Callee	DVLib 
>65	Identifier	DVLib 
>66	Callee	DniMessageBox 
>67	Identifier	DniMessageBox 
>68	Identifier	ex
>69	BlockStarter	 
>70	CompoundStatement	 
>71	ExpressionStatement	m_rc = config -> Run ( )
>72	AssignmentExpr	m_rc = config -> Run ( )
>73	CallExpression	config -> Run ( )
>74	ArgumentList	 
>75	Callee	config -> Run
>76	PtrMemberAccess	config -> Run
>77	Identifier	Run
>78	Identifier	config
>79	Identifier	m_rc
>80	IfStatement	if ( InstallerCommandLineInfo 
>81	ElseStatement	else
>82	IfStatement	if ( InstallerCommandLineInfo 
>83	ElseStatement	else
>84	IfStatement	if ( InstallerCommandLineInfo 
>85	CompoundStatement	 
>86	ReturnStatement	return FALSE ;
>87	Identifier	FALSE
>88	ExpressionStatement	DisplayConfig ( )
>89	CallExpression	DisplayConfig ( )
>90	ArgumentList	 
>91	Callee	DisplayConfig
>92	Identifier	DisplayConfig
>93	Condition	InstallerCommandLineInfo 
>94	CallExpression	InstallerCommandLineInfo 
>95	ArgumentList	 
>96	Callee	InstallerCommandLineInfo 
>97	PtrMemberAccess	InstallerCommandLineInfo 
>98	Identifier	DisplayConfig
>99	Identifier	InstallerCommandLineInfo 
>100	CompoundStatement	 
>101	ReturnStatement	return FALSE ;
>102	Identifier	FALSE
>103	ExpressionStatement	ExtractAllCabs ( )
>104	CallExpression	ExtractAllCabs ( )
>105	ArgumentList	 
>106	Callee	ExtractAllCabs
>107	Identifier	ExtractAllCabs
>108	Condition	InstallerCommandLineInfo 
>109	CallExpression	InstallerCommandLineInfo 
>110	ArgumentList	 
>111	Callee	InstallerCommandLineInfo 
>112	PtrMemberAccess	InstallerCommandLineInfo 
>113	Identifier	ExtractCab
>114	Identifier	InstallerCommandLineInfo 
>115	CompoundStatement	 
>116	ReturnStatement	return FALSE ;
>117	Identifier	FALSE
>118	ExpressionStatement	DisplayCab ( )
>119	CallExpression	DisplayCab ( )
>120	ArgumentList	 
>121	Callee	DisplayCab
>122	Identifier	DisplayCab
>123	Condition	InstallerCommandLineInfo 
>124	CallExpression	InstallerCommandLineInfo 
>125	ArgumentList	 
>126	Callee	InstallerCommandLineInfo 
>127	PtrMemberAccess	InstallerCommandLineInfo 
>128	Identifier	DisplayCab
>129	Identifier	InstallerCommandLineInfo 
>130	ExpressionStatement	config -> Load ( )
>131	CallExpression	config -> Load ( )
>132	ArgumentList	 
>133	Callee	config -> Load
>134	PtrMemberAccess	config -> Load
>135	Identifier	Load
>136	Identifier	config
>137	IdentifierDeclStatement	ConfigFileManagerPtr config ( new ConfigFileManager ( ) ) ;
>138	IdentifierDecl	config ( new ConfigFileManager ( ) )
>139	UnaryExpression	new ConfigFileManager ( )
>140	Identifier	config
>141	IdentifierDeclType	ConfigFileManagerPtr
>142	IfStatement	if ( InstallerCommandLineInfo 
>143	CompoundStatement	 
>144	ReturnStatement	return FALSE ;
>145	Identifier	FALSE
>146	ExpressionStatement	DisplayHelp ( )
>147	CallExpression	DisplayHelp ( )
>148	ArgumentList	 
>149	Callee	DisplayHelp
>150	Identifier	DisplayHelp
>151	Condition	InstallerCommandLineInfo 
>152	CallExpression	InstallerCommandLineInfo 
>153	ArgumentList	 
>154	Callee	InstallerCommandLineInfo 
>155	PtrMemberAccess	InstallerCommandLineInfo 
>156	Identifier	DisplayHelp
>157	Identifier	InstallerCommandLineInfo 
>158	ExpressionStatement	InstallerSession 
>159	AssignmentExpr	InstallerSession 
>160	PtrMemberAccess	InstallerCommandLineInfo 
>161	Identifier	controlCmdArgs
>162	Identifier	InstallerCommandLineInfo 
>163	PtrMemberAccess	InstallerSession 
>164	Identifier	AdditionalControlArgs
>165	Identifier	InstallerSession 
>166	ExpressionStatement	InstallerSession 
>167	AssignmentExpr	InstallerSession 
>168	PtrMemberAccess	InstallerCommandLineInfo 
>169	Identifier	componentCmdArgs
>170	Identifier	InstallerCommandLineInfo 
>171	PtrMemberAccess	InstallerSession 
>172	Identifier	AdditionalCmdLineArgs
>173	Identifier	InstallerSession 
>174	WhileStatement	while ( arg != InstallerCommandLineInfo 
>175	CompoundStatement	 
>176	ExpressionStatement	arg ++
>177	IncDecOp	arg ++
>178	IncDec	++
>179	Identifier	arg
>180	ExpressionStatement	 
>181	Statement	)
>182	Statement	second
>183	Statement	->
>184	Statement	arg
>185	Statement	<<
>186	Statement	\"\\"
>187	Statement	L
>188	Statement	+
>189	Statement	first
>190	Statement	->
>191	Statement	arg
>192	Statement	+
>193	Statement	\"Component arguments
>194	Statement	L
>195	Statement	(
>196	Statement	LOG
>197	Condition	arg != InstallerCommandLineInfo 
>198	EqualityExpression	arg != InstallerCommandLineInfo 
>199	CallExpression	InstallerCommandLineInfo 
>200	ArgumentList	 
>201	Callee	InstallerCommandLineInfo 
>202	MemberAccess	InstallerCommandLineInfo 
>203	Identifier	end
>204	PtrMemberAccess	InstallerCommandLineInfo 
>205	Identifier	componentCmdArgs
>206	Identifier	InstallerCommandLineInfo 
>207	Identifier	arg
>208	IdentifierDeclStatement	std 
>209	IdentifierDecl	arg = InstallerCommandLineInfo 
>210	AssignmentExpr	arg = InstallerCommandLineInfo 
>211	CallExpression	InstallerCommandLineInfo 
>212	ArgumentList	 
>213	Callee	InstallerCommandLineInfo 
>214	MemberAccess	InstallerCommandLineInfo 
>215	Identifier	begin
>216	PtrMemberAccess	InstallerCommandLineInfo 
>217	Identifier	componentCmdArgs
>218	Identifier	InstallerCommandLineInfo 
>219	Identifier	arg
>220	Identifier	arg
>221	IdentifierDeclType	std 
>222	ExpressionStatement	 
>223	Statement	)
>224	Statement	)
>225	Statement	sequence
>226	Statement	->
>227	Statement	Instance
>228	Statement	 
>229	Statement	InstallerSession
>230	Statement	(
>231	Statement	towstring
>232	Statement	 
>233	Statement	InstallSequenceUtil
>234	Statement	<<
>235	Statement	\"Sequence
>236	Statement	L
>237	Statement	(
>238	Statement	LOG
>239	ExpressionStatement	 
>240	Statement	)
>241	Statement	\"-------------------------------------------------------------------\"
>242	Statement	L
>243	Statement	(
>244	Statement	LOG
>245	ExpressionStatement	 
>246	Statement	)
>247	Statement	\")\"
>248	Statement	L
>249	Statement	<<
>250	Statement	)
>251	Statement	)
>252	Statement	(
>253	Statement	GetProcessorArchitecture
>254	Statement	 
>255	Statement	DVLib
>256	Statement	(
>257	Statement	pa2wstring
>258	Statement	 
>259	Statement	DVLib
>260	Statement	<<
>261	Statement	\" (\"
>262	Statement	L
>263	Statement	<<
>264	Statement	)
>265	Statement	(
>266	Statement	GetOperatingSystemVersionString
>267	Statement	 
>268	Statement	DVLib
>269	Statement	<<
>270	Statement	\"Operating system
>271	Statement	L
>272	Statement	(
>273	Statement	LOG
>274	ExpressionStatement	LOG ( VERSION_LEGALCOPYRIGHT_VALUE )
>275	CallExpression	LOG ( VERSION_LEGALCOPYRIGHT_VALUE )
>276	ArgumentList	VERSION_LEGALCOPYRIGHT_VALUE
>277	Argument	VERSION_LEGALCOPYRIGHT_VALUE
>278	Identifier	VERSION_LEGALCOPYRIGHT_VALUE
>279	Callee	LOG
>280	Identifier	LOG
>281	ExpressionStatement	 
>282	Statement	)
>283	Statement	)
>284	Statement	VERSION_VALUE
>285	Statement	(
>286	Statement	TEXT
>287	Statement	<<
>288	Statement	\"dotNetInstaller (DNI) started, version \"
>289	Statement	L
>290	Statement	(
>291	Statement	LOG
>292	ExpressionStatement	 
>293	Statement	)
>294	Statement	\"-------------------------------------------------------------------\"
>295	Statement	L
>296	Statement	(
>297	Statement	LOG
>298	ExpressionStatement	CSplashWnd 
>299	CallExpression	CSplashWnd 
>300	ArgumentList	InstallerCommandLineInfo 
>301	Argument	InstallerCommandLineInfo 
>302	CallExpression	InstallerCommandLineInfo 
>303	ArgumentList	 
>304	Callee	InstallerCommandLineInfo 
>305	PtrMemberAccess	InstallerCommandLineInfo 
>306	Identifier	DisplaySplash
>307	Identifier	InstallerCommandLineInfo 
>308	Callee	CSplashWnd 
>309	Identifier	CSplashWnd 
>310	IfStatement	if ( InstallerCommandLineInfo 
>311	CompoundStatement	 
>312	ExpressionStatement	 
>313	Statement	)
>314	Statement	hUnicows
>315	Statement	<<
>316	Statement	\"Loaded MSLU
>317	Statement	L
>318	Statement	(
>319	Statement	LOG
>320	IdentifierDeclStatement	HMODULE hUnicows = LoadMSLU ( ) ;
>321	IdentifierDecl	hUnicows = LoadMSLU ( )
>322	AssignmentExpr	hUnicows = LoadMSLU ( )
>323	CallExpression	LoadMSLU ( )
>324	ArgumentList	 
>325	Callee	LoadMSLU
>326	Identifier	LoadMSLU
>327	Identifier	hUnicows
>328	Identifier	hUnicows
>329	IdentifierDeclType	HMODULE
>330	Condition	InstallerCommandLineInfo 
>331	CallExpression	InstallerCommandLineInfo 
>332	ArgumentList	 
>333	Callee	InstallerCommandLineInfo 
>334	PtrMemberAccess	InstallerCommandLineInfo 
>335	Identifier	LoadMSLU
>336	Identifier	InstallerCommandLineInfo 
>337	ExpressionStatement	ParseCommandLine ( * get ( InstallerCommandLineInfo 
>338	CallExpression	ParseCommandLine ( * get ( InstallerCommandLineInfo 
>339	ArgumentList	* get ( InstallerCommandLineInfo 
>340	Argument	* get ( InstallerCommandLineInfo 
>341	UnaryOp	* get ( InstallerCommandLineInfo 
>342	CallExpression	get ( InstallerCommandLineInfo 
>343	ArgumentList	InstallerCommandLineInfo 
>344	Argument	InstallerCommandLineInfo 
>345	Identifier	InstallerCommandLineInfo 
>346	Callee	get
>347	Identifier	get
>348	UnaryOperator	*
>349	Callee	ParseCommandLine
>350	Identifier	ParseCommandLine
>351	ExpressionStatement	reset ( InstallUILevelSetting 
>352	CallExpression	reset ( InstallUILevelSetting 
>353	ArgumentList	InstallUILevelSetting 
>354	Argument	new InstallUILevelSetting ( )
>355	UnaryExpression	new InstallUILevelSetting ( )
>356	Argument	InstallUILevelSetting 
>357	Identifier	InstallUILevelSetting 
>358	Callee	reset
>359	Identifier	reset
>360	ExpressionStatement	reset ( InstallerSession 
>361	CallExpression	reset ( InstallerSession 
>362	ArgumentList	InstallerSession 
>363	Argument	new InstallerSession ( )
>364	UnaryExpression	new InstallerSession ( )
>365	Argument	InstallerSession 
>366	Identifier	InstallerSession 
>367	Callee	reset
>368	Identifier	reset
>369	ExpressionStatement	reset ( InstallerLog 
>370	CallExpression	reset ( InstallerLog 
>371	ArgumentList	InstallerLog 
>372	Argument	new InstallerLog ( )
>373	UnaryExpression	new InstallerLog ( )
>374	Argument	InstallerLog 
>375	Identifier	InstallerLog 
>376	Callee	reset
>377	Identifier	reset
>378	ExpressionStatement	reset ( InstallerLauncher 
>379	CallExpression	reset ( InstallerLauncher 
>380	ArgumentList	InstallerLauncher 
>381	Argument	new InstallerLauncher ( )
>382	UnaryExpression	new InstallerLauncher ( )
>383	Argument	InstallerLauncher 
>384	Identifier	InstallerLauncher 
>385	Callee	reset
>386	Identifier	reset
>387	ExpressionStatement	reset ( InstallerCommandLineInfo 
>388	CallExpression	reset ( InstallerCommandLineInfo 
>389	ArgumentList	InstallerCommandLineInfo 
>390	Argument	new InstallerCommandLineInfo ( )
>391	UnaryExpression	new InstallerCommandLineInfo ( )
>392	Argument	InstallerCommandLineInfo 
>393	Identifier	InstallerCommandLineInfo 
>394	Callee	reset
>395	Identifier	reset
>396	ExpressionStatement	 
>397	CallExpression	CWinApp 
>398	ArgumentList	 
>399	Callee	CWinApp 
>400	Identifier	CWinApp 
>401	ExpressionStatement	 
>402	CallExpression	InitCommonControls ( )
>403	ArgumentList	 
>404	Callee	InitCommonControls
>405	Identifier	InitCommonControls
>446	FunctionDef	CdotNetInstallerApp 
>447	ParameterList	 
>448	ReturnType	int
>449	CompoundStatement	 
>450	ReturnStatement	 
>451	Identifier	m_rc
>452	ExpressionStatement	 
>453	CallExpression	CWinApp 
>454	ArgumentList	 
>455	Callee	CWinApp 
>456	Identifier	CWinApp 
>457	ExpressionStatement	 
>458	CallExpression	reset ( InstallUILevelSetting 
>459	ArgumentList	InstallUILevelSetting 
>460	Argument	InstallUILevelSetting 
>461	Identifier	InstallUILevelSetting 
>462	Callee	reset
>463	Identifier	reset
>464	ExpressionStatement	 
>465	CallExpression	reset ( InstallerSession 
>466	ArgumentList	InstallerSession 
>467	Argument	InstallerSession 
>468	Identifier	InstallerSession 
>469	Callee	reset
>470	Identifier	reset
>471	ExpressionStatement	 
>472	CallExpression	reset ( InstallerLog 
>473	ArgumentList	InstallerLog 
>474	Argument	InstallerLog 
>475	Identifier	InstallerLog 
>476	Callee	reset
>477	Identifier	reset
>478	ExpressionStatement	 
>479	CallExpression	reset ( InstallerLauncher 
>480	ArgumentList	InstallerLauncher 
>481	Argument	InstallerLauncher 
>482	Identifier	InstallerLauncher 
>483	Callee	reset
>484	Identifier	reset
>485	ExpressionStatement	 
>486	CallExpression	reset ( InstallerCommandLineInfo 
>487	ArgumentList	InstallerCommandLineInfo 
>488	Argument	InstallerCommandLineInfo 
>489	Identifier	InstallerCommandLineInfo 
>490	Callee	reset
>491	Identifier	reset
>492	ExpressionStatement	 
>493	Statement	 
>494	Statement	 
>495	Statement	 
>496	Statement	 
>497	Statement	 
>498	Statement	 
>499	Statement	 
>500	Statement	 
>501	Statement	 
>502	Statement	 
>503	Statement	 
>504	Statement	 
>505	Statement	 
>506	Statement	 
>507	Statement	 
>508	Statement	 
>509	Statement	 
>519	FunctionDef	CdotNetInstallerApp 
>520	ParameterList	 
>521	ReturnType	void
>522	CompoundStatement	 
>523	ExpressionStatement	 
>524	CallExpression	DniMessageBox 
>525	ArgumentList	InstallerCommandLineInfo 
>526	Argument	MB_OK | MB_ICONINFORMATION
>527	InclusiveOrExpression	MB_OK | MB_ICONINFORMATION
>528	Identifier	MB_ICONINFORMATION
>529	Identifier	MB_OK
>530	Argument	InstallerCommandLineInfo 
>531	CallExpression	InstallerCommandLineInfo 
>532	ArgumentList	 
>533	Callee	InstallerCommandLineInfo 
>534	PtrMemberAccess	InstallerCommandLineInfo 
>535	Identifier	GetUsage
>536	Identifier	InstallerCommandLineInfo 
>537	Callee	DniMessageBox 
>538	Identifier	DniMessageBox 
>547	FunctionDef	CdotNetInstallerApp 
>548	ParameterList	 
>549	ReturnType	void
>550	CompoundStatement	 
>551	ExpressionStatement	 
>552	Statement	 
>553	Statement	 
>554	Statement	 
>555	Statement	 
>556	Statement	 
>557	Statement	 
>558	Statement	 
>559	Statement	 
>560	Statement	 
>561	Statement	 
>562	Statement	 
>563	Statement	 
>564	Statement	 
>565	Statement	 
>566	Statement	 
>567	Statement	 
>568	Statement	 
>569	Statement	 
>570	Statement	 
>571	Statement	 
>572	Statement	 
>573	Statement	 
>574	ExpressionStatement	 
>575	Statement	 
>576	Statement	 
>577	Statement	 
>578	Statement	 
>579	Statement	 
>580	Statement	 
>581	Statement	 
>582	Statement	 
>583	Statement	 
>584	Statement	 
>585	Statement	 
>586	Statement	 
>587	Statement	 
>588	Statement	 
>589	Statement	 
>590	Statement	 
>591	Statement	 
>592	Statement	 
>593	Statement	 
>594	IdentifierDeclStatement	 
>595	IdentifierDecl	dlg
>596	Identifier	dlg
>597	IdentifierDeclType	InstallComponentDlg
>602	FunctionDef	CdotNetInstallerApp 
>603	ParameterList	 
>604	ReturnType	void
>605	CompoundStatement	 
>606	CompoundStatement	 
>607	CompoundStatement	 
>608	ExpressionStatement	 
>609	CallExpression	ExtractCab ( component -> id )
>610	ArgumentList	component -> id
>611	Argument	component -> id
>612	PtrMemberAccess	component -> id
>613	Identifier	id
>614	Identifier	component
>615	Callee	ExtractCab
>616	Identifier	ExtractCab
>617	Statement	 
>618	Statement	 
>619	Statement	 
>620	Statement	 
>621	Statement	 
>622	Statement	 
>623	Statement	 
>624	Statement	 
>625	Statement	 
>626	Statement	 
>627	Statement	 
>628	Statement	 
>629	ExpressionStatement	 
>630	CallExpression	get ( configuration )
>631	ArgumentList	configuration
>632	Argument	configuration
>633	Identifier	configuration
>634	Callee	get
>635	Identifier	get
>636	Statement	 
>637	Statement	 
>638	Statement	 
>639	Statement	 
>640	Statement	 
>641	Statement	 
>642	Statement	 
>643	Statement	 
>644	Statement	 
>645	IfStatement	if ( configuration -> type != configuration_install )
>646	ContinueStatement	 
>647	Condition	 
>648	EqualityExpression	configuration -> type != configuration_install
>649	Identifier	configuration_install
>650	PtrMemberAccess	configuration -> type
>651	Identifier	type
>652	Identifier	configuration
>653	Statement	 
>654	Statement	 
>655	Statement	 
>656	Statement	 
>657	Statement	 
>658	Statement	 
>659	Statement	 
>660	Statement	 
>661	Statement	 
>662	Statement	 
>663	Statement	 
>664	ExpressionStatement	 
>665	CallExpression	config -> Load ( )
>666	ArgumentList	 
>667	Callee	config -> Load
>668	PtrMemberAccess	config -> Load
>669	Identifier	Load
>670	Identifier	config
>671	IdentifierDeclStatement	 
>672	IdentifierDecl	config ( new ConfigFileManager ( ) )
>673	UnaryExpression	new ConfigFileManager ( )
>674	Identifier	config
>675	IdentifierDeclType	ConfigFileManagerPtr
>676	ExpressionStatement	 
>677	Statement	 
>678	Statement	 
>679	Statement	 
>680	Statement	 
>681	Statement	 
>694	FunctionDef	CdotNetInstallerApp 
>695	ParameterList	const std 
>696	Parameter	 
>697	Identifier	id
>698	ParameterType	const std 
>699	ReturnType	void
>700	CompoundStatement	 
>701	ExpressionStatement	 
>702	CallExpression	p_extractcab -> EndExec ( )
>703	ArgumentList	 
>704	Callee	p_extractcab -> EndExec
>705	PtrMemberAccess	p_extractcab -> EndExec
>706	Identifier	EndExec
>707	Identifier	p_extractcab
>708	IfStatement	if ( InstallUILevelSetting 
>709	ExpressionStatement	 
>710	CallExpression	dlg . DoModal ( )
>711	ArgumentList	 
>712	Callee	dlg . DoModal
>713	MemberAccess	dlg . DoModal
>714	Identifier	DoModal
>715	Identifier	dlg
>716	Condition	 
>717	CallExpression	InstallUILevelSetting 
>718	ArgumentList	 
>719	Callee	InstallUILevelSetting 
>720	PtrMemberAccess	InstallUILevelSetting 
>721	Identifier	IsAnyUI
>722	Identifier	InstallUILevelSetting 
>723	ExpressionStatement	 
>724	CallExpression	p_extractcab -> BeginExec ( )
>725	ArgumentList	 
>726	Callee	p_extractcab -> BeginExec
>727	PtrMemberAccess	p_extractcab -> BeginExec
>728	Identifier	BeginExec
>729	Identifier	p_extractcab
>730	IfStatement	if ( InstallUILevelSetting 
>731	ExpressionStatement	 
>732	CallExpression	dlg . LoadComponent ( configuration , p_extractcab )
>733	ArgumentList	configuration
>734	Argument	p_extractcab
>735	Identifier	p_extractcab
>736	Argument	configuration
>737	Identifier	configuration
>738	Callee	dlg . LoadComponent
>739	MemberAccess	dlg . LoadComponent
>740	Identifier	LoadComponent
>741	Identifier	dlg
>742	Condition	 
>743	CallExpression	InstallUILevelSetting 
>744	ArgumentList	 
>745	Callee	InstallUILevelSetting 
>746	PtrMemberAccess	InstallUILevelSetting 
>747	Identifier	IsAnyUI
>748	Identifier	InstallUILevelSetting 
>749	ExpressionStatement	 
>750	Statement	 
>751	Statement	 
>752	Statement	 
>753	Statement	 
>754	Statement	 
>755	Statement	 
>756	Statement	 
>757	Statement	 
>758	Statement	 
>759	ExpressionStatement	 
>760	AssignmentExpr	p_extractcab -> cab_path = DVLib 
>761	CallExpression	DVLib 
>762	ArgumentList	 
>763	Callee	DVLib 
>764	Identifier	DVLib 
>765	PtrMemberAccess	p_extractcab -> cab_path
>766	Identifier	cab_path
>767	Identifier	p_extractcab
>768	ExpressionStatement	 
>769	PrimaryExpression	\"%s\"
>770	Statement	 
>771	Statement	 
>772	Statement	 
>773	Statement	 
>774	Statement	 
>775	ExpressionStatement	 
>776	PrimaryExpression	\"ExtractCab\"
>777	Statement	 
>778	Statement	 
>779	Statement	 
>780	Statement	 
>781	Statement	 
>782	ExpressionStatement	 
>783	CallExpression	get ( configuration )
>784	ArgumentList	configuration
>785	Argument	configuration
>786	Identifier	configuration
>787	Callee	get
>788	Identifier	get
>789	Statement	 
>790	Statement	 
>791	Statement	 
>792	Statement	 
>793	Statement	 
>794	Statement	 
>795	Statement	 
>796	Statement	 
>797	Statement	 
>798	IdentifierDeclStatement	 
>799	IdentifierDecl	configuration ( new InstallConfiguration ( ) )
>800	UnaryExpression	new InstallConfiguration ( )
>801	Identifier	configuration
>802	IdentifierDeclType	ConfigurationPtr
>803	IfStatement	if ( p_extractcab -> GetCabCount ( ) == 0 )
>804	ReturnStatement	 
>805	Condition	 
>806	EqualityExpression	p_extractcab -> GetCabCount ( ) == 0
>807	PrimaryExpression	0
>808	CallExpression	p_extractcab -> GetCabCount ( )
>809	ArgumentList	 
>810	Callee	p_extractcab -> GetCabCount
>811	PtrMemberAccess	p_extractcab -> GetCabCount
>812	Identifier	GetCabCount
>813	Identifier	p_extractcab
>814	IdentifierDeclStatement	 
>815	IdentifierDecl	p_extractcab ( new ExtractCabProcessor ( AfxGetApp ( ) -> m_hInstance , id , & dlg ) )
>816	Expression	AfxGetApp ( ) -> m_hInstance , id , & dlg
>817	Expression	id , & dlg
>818	UnaryOp	& dlg
>819	Identifier	dlg
>820	UnaryOperator	&
>821	Identifier	id
>822	PtrMemberAccess	AfxGetApp ( ) -> m_hInstance
>823	Identifier	m_hInstance
>824	CallExpression	AfxGetApp ( )
>825	ArgumentList	 
>826	Callee	AfxGetApp
>827	Identifier	AfxGetApp
>828	Identifier	p_extractcab
>829	IdentifierDeclType	ExtractCabProcessorPtr
>830	IdentifierDeclStatement	 
>831	IdentifierDecl	dlg
>832	Identifier	dlg
>833	IdentifierDeclType	ExtractCabDlg
>849	FunctionDef	CdotNetInstallerApp 
>850	ParameterList	 
>851	ReturnType	void
>852	CompoundStatement	 
>853	ExpressionStatement	 
>854	CallExpression	DniMessageBox 
>855	ArgumentList	config -> GetString ( )
>856	Argument	MB_OK | MB_ICONINFORMATION
>857	InclusiveOrExpression	MB_OK | MB_ICONINFORMATION
>858	Identifier	MB_ICONINFORMATION
>859	Identifier	MB_OK
>860	Argument	config -> GetString ( )
>861	CallExpression	config -> GetString ( )
>862	ArgumentList	 
>863	Callee	config -> GetString
>864	PtrMemberAccess	config -> GetString
>865	Identifier	GetString
>866	Identifier	config
>867	Callee	DniMessageBox 
>868	Identifier	DniMessageBox 
>869	ExpressionStatement	 
>870	CallExpression	config -> Load ( )
>871	ArgumentList	 
>872	Callee	config -> Load
>873	PtrMemberAccess	config -> Load
>874	Identifier	Load
>875	Identifier	config
>876	IdentifierDeclStatement	 
>877	IdentifierDecl	config ( new ConfigFileManager ( ) )
>878	UnaryExpression	new ConfigFileManager ( )
>879	Identifier	config
>880	IdentifierDeclType	ConfigFileManagerPtr
>889	FunctionDef	CdotNetInstallerApp 
>890	ParameterList	MSG * pMsg
>891	Parameter	 
>892	Identifier	pMsg
>893	ParameterType	MSG *
>894	ReturnType	BOOL
>895	CompoundStatement	 
>896	ReturnStatement	 
>897	CallExpression	CWinApp 
>898	ArgumentList	pMsg
>899	Argument	pMsg
>900	Identifier	pMsg
>901	Callee	CWinApp 
>902	Identifier	CWinApp 
>903	IfStatement	if ( CSplashWnd 
>904	CompoundStatement	 
>905	ReturnStatement	 
>906	Identifier	TRUE
>907	Condition	 
>908	CallExpression	CSplashWnd 
>909	ArgumentList	pMsg
>910	Argument	pMsg
>911	Identifier	pMsg
>912	Callee	CSplashWnd 
>913	Identifier	CSplashWnd 
<3=5,4
<11=14,13,12
<14=401,396,69,17,15
<15=16
<17=68,18
<18=42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,19
<19=20
<20=24,21
<21=23,22
<42=43
<43=66,44
<44=49,45
<45=46
<46=48,47
<49=50
<50=52,51
<52=53
<53=55,54
<55=64,56
<56=57
<57=58
<58=60,59
<60=61
<61=63,62
<64=65
<66=67
<69=70
<70=387,378,369,360,351,337,310,298,297,296,295,294,293,292,291,290,289,288,287,286,285,284,283,282,281,274,273,272,271,270,269,268,267,266,265,264,263,71,80,130,137,142,158,166,174,208,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262
<71=72
<72=79,73
<73=75,74
<75=76
<76=78,77
<80=123,115,81
<81=82
<82=108,100,83
<83=84
<84=93,85
<85=88,86
<86=87
<88=89
<89=91,90
<91=92
<93=94
<94=96,95
<96=97
<97=99,98
<100=103,101
<101=102
<103=104
<104=106,105
<106=107
<108=109
<109=111,110
<111=112
<112=114,113
<115=118,116
<116=117
<118=119
<119=121,120
<121=122
<123=124
<124=126,125
<126=127
<127=129,128
<130=131
<131=133,132
<133=134
<134=136,135
<137=138
<138=141,140,139
<142=151,143
<143=146,144
<144=145
<146=147
<147=149,148
<149=150
<151=152
<152=154,153
<154=155
<155=157,156
<158=159
<159=163,160
<160=162,161
<163=165,164
<166=167
<167=171,168
<168=170,169
<171=173,172
<174=197,175
<175=196,195,194,193,192,191,190,189,188,187,186,185,184,183,182,181,180,176
<176=177
<177=179,178
<197=198
<198=207,199
<199=201,200
<201=202
<202=204,203
<204=206,205
<208=209
<209=221,220,210
<210=219,211
<211=213,212
<213=214
<214=216,215
<216=218,217
<274=275
<275=279,276
<276=277
<277=278
<279=280
<298=299
<299=308,300
<300=301
<301=302
<302=304,303
<304=305
<305=307,306
<308=309
<310=330,311
<311=320,319,318,317,316,315,314,313,312
<320=321
<321=329,328,322
<322=327,323
<323=325,324
<325=326
<330=331
<331=333,332
<333=334
<334=336,335
<337=338
<338=349,339
<339=340
<340=341
<341=348,342
<342=346,343
<343=344
<344=345
<346=347
<349=350
<351=352
<352=358,353
<353=356,354
<354=355
<356=357
<358=359
<360=361
<361=367,362
<362=365,363
<363=364
<365=366
<367=368
<369=370
<370=376,371
<371=374,372
<372=373
<374=375
<376=377
<378=379
<379=385,380
<380=383,381
<381=382
<383=384
<385=386
<387=388
<388=394,389
<389=392,390
<390=391
<392=393
<394=395
<396=397
<397=399,398
<399=400
<401=402
<402=404,403
<404=405
<446=449,448,447
<449=509,508,507,506,505,504,503,502,501,500,499,498,497,496,495,494,493,492,485,478,471,464,457,452,450
<450=451
<452=453
<453=455,454
<455=456
<457=458
<458=462,459
<459=460
<460=461
<462=463
<464=465
<465=469,466
<466=467
<467=468
<469=470
<471=472
<472=476,473
<473=474
<474=475
<476=477
<478=479
<479=483,480
<480=481
<481=482
<483=484
<485=486
<486=490,487
<487=488
<488=489
<490=491
<519=522,521,520
<522=523
<523=524
<524=537,525
<525=530,526
<526=527
<527=529,528
<530=531
<531=533,532
<533=534
<534=536,535
<537=538
<547=550,549,548
<550=594,593,592,591,590,589,588,587,586,585,584,583,582,581,580,579,578,577,576,575,574,573,572,571,570,569,568,567,566,565,564,563,562,561,560,559,558,557,556,555,554,553,552,551
<594=595
<595=597,596
<602=605,604,603
<605=681,680,679,678,677,676,671,664,663,662,661,660,659,658,657,656,655,654,653,606
<606=645,644,643,642,641,640,639,638,637,636,629,628,627,626,625,624,623,622,621,620,619,618,617,607
<607=608
<608=609
<609=615,610
<610=611
<611=612
<612=614,613
<615=616
<629=630
<630=634,631
<631=632
<632=633
<634=635
<645=647,646
<647=648
<648=650,649
<650=652,651
<664=665
<665=667,666
<667=668
<668=670,669
<671=672
<672=675,674,673
<694=700,699,695
<695=696
<696=698,697
<700=830,814,803,798,797,796,795,794,793,792,791,790,789,782,781,780,779,778,777,775,774,773,772,771,770,768,759,758,757,756,755,754,753,752,751,750,749,730,723,708,701
<701=702
<702=704,703
<704=705
<705=707,706
<708=716,709
<709=710
<710=712,711
<712=713
<713=715,714
<716=717
<717=719,718
<719=720
<720=722,721
<723=724
<724=726,725
<726=727
<727=729,728
<730=742,731
<731=732
<732=738,733
<733=736,734
<734=735
<736=737
<738=739
<739=741,740
<742=743
<743=745,744
<745=746
<746=748,747
<759=760
<760=765,761
<761=763,762
<763=764
<765=767,766
<768=769
<775=776
<782=783
<783=787,784
<784=785
<785=786
<787=788
<798=799
<799=802,801,800
<803=805,804
<805=806
<806=808,807
<808=810,809
<810=811
<811=813,812
<814=815
<815=829,828,816
<816=822,817
<817=821,818
<818=820,819
<822=824,823
<824=826,825
<826=827
<830=831
<831=833,832
<849=852,851,850
<852=876,869,853
<853=854
<854=867,855
<855=860,856
<856=857
<857=859,858
<860=861
<861=863,862
<863=864
<864=866,865
<867=868
<869=870
<870=872,871
<872=873
<873=875,874
<876=877
<877=880,879,878
<889=895,894,890
<890=891
<891=893,892
<895=903,896
<896=897
<897=901,898
<898=899
<899=900
<901=902
<903=907,904
<904=905
<905=906
<907=908
<908=912,909
<909=910
<910=911
<912=913
