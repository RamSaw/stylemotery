>3	FunctionDef	Calculator 
>4	ParameterList	double n
>5	Parameter	 
>6	Identifier	n
>7	ParameterType	double
>8	ReturnType	void
>9	CompoundStatement	 
>10	ExpressionStatement	 
>11	CallExpression	values . push_back ( n )
>12	ArgumentList	n
>13	Argument	n
>14	Identifier	n
>15	Callee	values . push_back
>16	MemberAccess	values . push_back
>17	Identifier	push_back
>18	Identifier	values
>24	FunctionDef	Calculator 
>25	ParameterList	 
>26	ReturnType	double
>27	CompoundStatement	 
>28	ReturnStatement	 
>29	Identifier	result
>30	ForStatement	for ( std 
>31	CompoundStatement	 
>32	ExpressionStatement	 
>33	AssignmentExpr	result += * i
>34	UnaryOp	* i
>35	Identifier	i
>36	UnaryOperator	*
>37	Identifier	result
>38	UnaryExpression	 
>39	Identifier	i
>40	IncDec	++
>41	Condition	 
>42	EqualityExpression	i != values . end ( )
>43	CallExpression	values . end ( )
>44	ArgumentList	 
>45	Callee	values . end
>46	MemberAccess	values . end
>47	Identifier	end
>48	Identifier	values
>49	Identifier	i
>50	ForInit	 
>51	IdentifierDeclStatement	std 
>52	IdentifierDecl	i = values . begin ( )
>53	AssignmentExpr	i = values . begin ( )
>54	CallExpression	values . begin ( )
>55	ArgumentList	 
>56	Callee	values . begin
>57	MemberAccess	values . begin
>58	Identifier	begin
>59	Identifier	values
>60	Identifier	i
>61	Identifier	i
>62	IdentifierDeclType	std 
>63	IdentifierDeclStatement	 
>64	IdentifierDecl	result = 0
>65	AssignmentExpr	result = 0
>66	PrimaryExpression	0
>67	Identifier	result
>68	Identifier	result
>69	IdentifierDeclType	double
>79	FunctionDef	Calculator 
>80	ParameterList	 
>81	ReturnType	double
>82	CompoundStatement	 
>83	ReturnStatement	 
>84	Identifier	result
>85	ForStatement	for ( std 
>86	CompoundStatement	 
>87	IfStatement	if ( i == values . begin ( ) )
>88	ElseStatement	else
>89	CompoundStatement	 
>90	ExpressionStatement	 
>91	AssignmentExpr	result /= * i
>92	UnaryOp	* i
>93	Identifier	i
>94	UnaryOperator	*
>95	Identifier	result
>96	CompoundStatement	 
>97	ExpressionStatement	 
>98	AssignmentExpr	result = * i
>99	UnaryOp	* i
>100	Identifier	i
>101	UnaryOperator	*
>102	Identifier	result
>103	Condition	 
>104	EqualityExpression	i == values . begin ( )
>105	CallExpression	values . begin ( )
>106	ArgumentList	 
>107	Callee	values . begin
>108	MemberAccess	values . begin
>109	Identifier	begin
>110	Identifier	values
>111	Identifier	i
>112	UnaryExpression	 
>113	Identifier	i
>114	IncDec	++
>115	Condition	 
>116	EqualityExpression	i != values . end ( )
>117	CallExpression	values . end ( )
>118	ArgumentList	 
>119	Callee	values . end
>120	MemberAccess	values . end
>121	Identifier	end
>122	Identifier	values
>123	Identifier	i
>124	ForInit	 
>125	IdentifierDeclStatement	std 
>126	IdentifierDecl	i = values . begin ( )
>127	AssignmentExpr	i = values . begin ( )
>128	CallExpression	values . begin ( )
>129	ArgumentList	 
>130	Callee	values . begin
>131	MemberAccess	values . begin
>132	Identifier	begin
>133	Identifier	values
>134	Identifier	i
>135	Identifier	i
>136	IdentifierDeclType	std 
>137	ExpressionStatement	 
>138	CallExpression	quiet_NaN ( )
>139	ArgumentList	 
>140	Callee	quiet_NaN
>141	Identifier	quiet_NaN
>142	Statement	 
>143	Statement	 
>144	Statement	 
>145	Statement	 
>146	Statement	 
>147	Statement	 
>148	Statement	 
>149	Statement	 
>150	Statement	 
>151	Statement	 
<3=9,8,4
<4=5
<5=7,6
<9=10
<10=11
<11=15,12
<12=13
<13=14
<15=16
<16=18,17
<24=27,26,25
<27=63,30,28
<28=29
<30=50,41,38,31
<31=32
<32=33
<33=37,34
<34=36,35
<38=40,39
<41=42
<42=49,43
<43=45,44
<45=46
<46=48,47
<50=51
<51=52
<52=62,61,53
<53=60,54
<54=56,55
<56=57
<57=59,58
<63=64
<64=69,68,65
<65=67,66
<79=82,81,80
<82=151,150,149,148,147,146,145,144,143,142,137,85,83
<83=84
<85=124,115,112,86
<86=87
<87=103,96,88
<88=89
<89=90
<90=91
<91=95,92
<92=94,93
<96=97
<97=98
<98=102,99
<99=101,100
<103=104
<104=111,105
<105=107,106
<107=108
<108=110,109
<112=114,113
<115=116
<116=123,117
<117=119,118
<119=120
<120=122,121
<124=125
<125=126
<126=136,135,127
<127=134,128
<128=130,129
<130=131
<131=133,132
<137=138
<138=140,139
<140=141
