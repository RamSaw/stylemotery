>3	FunctionDef	FX_Torpedo_Explosion 
>4	ParameterList	const vec2 & pos , const vec2 & dir
>5	Parameter	 
>6	Identifier	dir
>7	ParameterType	const vec2 &
>8	Parameter	 
>9	Identifier	pos
>10	ParameterType	const vec2 &
>11	CompoundStatement	 
>12	ExpressionStatement	 
>13	AssignmentExpr	m_running = true
>14	Identifier	true
>15	Identifier	m_running
>16	ExpressionStatement	 
>17	AssignmentExpr	m_duration = 2.0
>18	PrimaryExpression	2.0
>19	Identifier	m_duration
>20	ExpressionStatement	 
>21	AssignmentExpr	m_start_time = g_timer -> now ( )
>22	CallExpression	g_timer -> now ( )
>23	ArgumentList	 
>24	Callee	g_timer -> now
>25	PtrMemberAccess	g_timer -> now
>26	Identifier	now
>27	Identifier	g_timer
>28	Identifier	m_start_time
>29	ExpressionStatement	 
>30	AssignmentExpr	m_torpedo_expl = new PE_Torpedo_Explosion ( m_pos , m_dir )
>31	Expression	m_pos , m_dir
>32	Identifier	m_dir
>33	Identifier	m_pos
>34	Identifier	m_torpedo_expl
>50	FunctionDef	FX_Torpedo_Explosion 
>51	ParameterList	 
>52	CompoundStatement	 
>53	ExpressionStatement	 
>54	Identifier	m_torpedo_expl
>55	Statement	 
>59	FunctionDef	FX_Torpedo_Explosion 
>60	ParameterList	 
>61	ReturnType	void
>62	CompoundStatement	 
>63	ExpressionStatement	 
>64	CallExpression	m_torpedo_expl -> update ( )
>65	ArgumentList	 
>66	Callee	m_torpedo_expl -> update
>67	PtrMemberAccess	m_torpedo_expl -> update
>68	Identifier	update
>69	Identifier	m_torpedo_expl
>70	IfStatement	if ( g_timer -> now ( ) - m_start_time > m_duration )
>71	CompoundStatement	 
>72	ReturnStatement	 
>73	ExpressionStatement	 
>74	AssignmentExpr	m_running = false
>75	Identifier	false
>76	Identifier	m_running
>77	Condition	 
>78	RelationalExpression	g_timer -> now ( ) - m_start_time > m_duration
>79	Identifier	m_duration
>80	AdditiveExpression	g_timer -> now ( ) - m_start_time
>81	Identifier	m_start_time
>82	CallExpression	g_timer -> now ( )
>83	ArgumentList	 
>84	Callee	g_timer -> now
>85	PtrMemberAccess	g_timer -> now
>86	Identifier	now
>87	Identifier	g_timer
>88	IfStatement	if ( ! m_running )
>89	ReturnStatement	 
>90	Condition	 
>91	UnaryOp	! m_running
>92	Identifier	m_running
>93	UnaryOperator	!
>105	FunctionDef	FX_Torpedo_Explosion 
>106	ParameterList	 
>107	ReturnType	void
>108	CompoundStatement	 
>109	ExpressionStatement	 
>110	CallExpression	m_torpedo_expl -> draw ( )
>111	ArgumentList	 
>112	Callee	m_torpedo_expl -> draw
>113	PtrMemberAccess	m_torpedo_expl -> draw
>114	Identifier	draw
>115	Identifier	m_torpedo_expl
>116	IfStatement	if ( ! m_running )
>117	ReturnStatement	 
>118	Condition	 
>119	UnaryOp	! m_running
>120	Identifier	m_running
>121	UnaryOperator	!
>127	FunctionDef	FX_Torpedo_Explosion 
>128	ParameterList	 
>129	ReturnType	bool
>130	CompoundStatement	 
>131	ReturnStatement	 
>132	UnaryOp	! m_running
>133	Identifier	m_running
>134	UnaryOperator	!
>139	FunctionDef	FX_Torpedo_Explosion 
>140	ParameterList	 
>141	ReturnType	bool
>142	CompoundStatement	 
>143	ReturnStatement	 
>144	Identifier	m_running
<3=11,4
<4=8,5
<5=7,6
<8=10,9
<11=29,20,16,12
<12=13
<13=15,14
<16=17
<17=19,18
<20=21
<21=28,22
<22=24,23
<24=25
<25=27,26
<29=30
<30=34,31
<31=33,32
<50=52,51
<52=55,53
<53=54
<59=62,61,60
<62=88,70,63
<63=64
<64=66,65
<66=67
<67=69,68
<70=77,71
<71=73,72
<73=74
<74=76,75
<77=78
<78=80,79
<80=82,81
<82=84,83
<84=85
<85=87,86
<88=90,89
<90=91
<91=93,92
<105=108,107,106
<108=116,109
<109=110
<110=112,111
<112=113
<113=115,114
<116=118,117
<118=119
<119=121,120
<127=130,129,128
<130=131
<131=132
<132=134,133
<139=142,141,140
<142=143
<143=144
