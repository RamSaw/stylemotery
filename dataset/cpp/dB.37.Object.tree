>5	FunctionDef	CObject 
>6	ParameterList	size_t stAllocateBlock
>7	Parameter	 
>8	Identifier	stAllocateBlock
>9	ParameterType	size_t
>10	ReturnType	void *
>11	CompoundStatement	 
>12	IfStatement	if ( CVirtualMemory 
>13	ElseStatement	else
>14	ReturnStatement	 
>15	CallExpression	malloc ( stAllocateBlock )
>16	ArgumentList	stAllocateBlock
>17	Argument	stAllocateBlock
>18	Identifier	stAllocateBlock
>19	Callee	malloc
>20	Identifier	malloc
>21	ReturnStatement	 
>22	CallExpression	CVirtualMemory 
>23	ArgumentList	stAllocateBlock
>24	Argument	stAllocateBlock
>25	Identifier	stAllocateBlock
>26	Callee	CVirtualMemory 
>27	PtrMemberAccess	CVirtualMemory 
>28	Identifier	Allocate
>29	Identifier	CVirtualMemory 
>30	Condition	 
>31	Identifier	CVirtualMemory 
>40	FunctionDef	CObject 
>41	ParameterList	void * pvMem
>42	Parameter	 
>43	Identifier	pvMem
>44	ParameterType	void *
>45	ReturnType	void
>46	CompoundStatement	 
>47	IfStatement	if ( CVirtualMemory 
>48	ElseStatement	else
>49	ExpressionStatement	 
>50	CallExpression	free ( pvMem )
>51	ArgumentList	pvMem
>52	Argument	pvMem
>53	Identifier	pvMem
>54	Callee	free
>55	Identifier	free
>56	ExpressionStatement	 
>57	CallExpression	CVirtualMemory 
>58	ArgumentList	pvMem
>59	Argument	pvMem
>60	Identifier	pvMem
>61	Callee	CVirtualMemory 
>62	PtrMemberAccess	CVirtualMemory 
>63	Identifier	Free
>64	Identifier	CVirtualMemory 
>65	Condition	 
>66	Identifier	CVirtualMemory 
>72	FunctionDef	operator new (size_t stAllocateBlock)
>73	ParameterList	size_t stAllocateBlock
>74	Parameter	 
>75	Identifier	stAllocateBlock
>76	ParameterType	size_t
>77	ReturnType	void *
>78	CompoundStatement	 
>79	ReturnStatement	 
>80	CallExpression	CObject 
>81	ArgumentList	stAllocateBlock
>82	Argument	stAllocateBlock
>83	Identifier	stAllocateBlock
>84	Callee	CObject 
>85	Identifier	CObject 
>91	FunctionDef	operator new [ ] (size_t stAllocateBlock)
>92	ParameterList	size_t stAllocateBlock
>93	Parameter	 
>94	Identifier	stAllocateBlock
>95	ParameterType	size_t
>96	ReturnType	void *
>97	CompoundStatement	 
>98	ReturnStatement	 
>99	CallExpression	CObject 
>100	ArgumentList	stAllocateBlock
>101	Argument	stAllocateBlock
>102	Identifier	stAllocateBlock
>103	Callee	CObject 
>104	Identifier	CObject 
>110	FunctionDef	operator delete [ ] (void * pvMem)
>111	ParameterList	void * pvMem
>112	Parameter	 
>113	Identifier	pvMem
>114	ParameterType	void *
>115	ReturnType	void
>116	CompoundStatement	 
>117	ExpressionStatement	 
>118	CallExpression	CObject 
>119	ArgumentList	pvMem
>120	Argument	pvMem
>121	Identifier	pvMem
>122	Callee	CObject 
>123	Identifier	CObject 
>128	FunctionDef	operator delete (void * pvMem)
>129	ParameterList	void * pvMem
>130	Parameter	 
>131	Identifier	pvMem
>132	ParameterType	void *
>133	ReturnType	void
>134	CompoundStatement	 
>135	ExpressionStatement	 
>136	CallExpression	CObject 
>137	ArgumentList	pvMem
>138	Argument	pvMem
>139	Identifier	pvMem
>140	Callee	CObject 
>141	Identifier	CObject 
<5=11,10,6
<6=7
<7=9,8
<11=12
<12=30,21,13
<13=14
<14=15
<15=19,16
<16=17
<17=18
<19=20
<21=22
<22=26,23
<23=24
<24=25
<26=27
<27=29,28
<30=31
<40=46,45,41
<41=42
<42=44,43
<46=47
<47=65,56,48
<48=49
<49=50
<50=54,51
<51=52
<52=53
<54=55
<56=57
<57=61,58
<58=59
<59=60
<61=62
<62=64,63
<65=66
<72=78,77,73
<73=74
<74=76,75
<78=79
<79=80
<80=84,81
<81=82
<82=83
<84=85
<91=97,96,92
<92=93
<93=95,94
<97=98
<98=99
<99=103,100
<100=101
<101=102
<103=104
<110=116,115,111
<111=112
<112=114,113
<116=117
<117=118
<118=122,119
<119=120
<120=121
<122=123
<128=134,133,129
<129=130
<130=132,131
<134=135
<135=136
<136=140,137
<137=138
<138=139
<140=141
