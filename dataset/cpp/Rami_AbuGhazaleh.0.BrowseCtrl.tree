>6	FunctionDef	InitOffsetMoveTo (long x , long y)
>7	ParameterList	long x , long y
>8	Parameter	 
>9	Identifier	y
>10	ParameterType	long
>11	Parameter	 
>12	Identifier	x
>13	ParameterType	long
>14	ReturnType	void
>15	CompoundStatement	 
>16	ExpressionStatement	 
>17	CallExpression	m_pDC -> MoveTo ( m_ptCur )
>18	ArgumentList	m_ptCur
>19	Argument	m_ptCur
>20	Identifier	m_ptCur
>21	Callee	m_pDC -> MoveTo
>22	PtrMemberAccess	m_pDC -> MoveTo
>23	Identifier	MoveTo
>24	Identifier	m_pDC
>25	ExpressionStatement	 
>26	CallExpression	m_ptCur . Offset ( x , y )
>27	ArgumentList	x
>28	Argument	y
>29	Identifier	y
>30	Argument	x
>31	Identifier	x
>32	Callee	m_ptCur . Offset
>33	MemberAccess	m_ptCur . Offset
>34	Identifier	Offset
>35	Identifier	m_ptCur
>36	ExpressionStatement	 
>37	AssignmentExpr	m_ptCur = m_ptInit
>38	Identifier	m_ptInit
>39	Identifier	m_ptCur
>48	FunctionDef	OffsetMoveTo (long x , long y)
>49	ParameterList	long x , long y
>50	Parameter	 
>51	Identifier	y
>52	ParameterType	long
>53	Parameter	 
>54	Identifier	x
>55	ParameterType	long
>56	ReturnType	void
>57	CompoundStatement	 
>58	ExpressionStatement	 
>59	CallExpression	m_pDC -> MoveTo ( m_ptCur )
>60	ArgumentList	m_ptCur
>61	Argument	m_ptCur
>62	Identifier	m_ptCur
>63	Callee	m_pDC -> MoveTo
>64	PtrMemberAccess	m_pDC -> MoveTo
>65	Identifier	MoveTo
>66	Identifier	m_pDC
>67	ExpressionStatement	 
>68	CallExpression	m_ptCur . Offset ( x , y )
>69	ArgumentList	x
>70	Argument	y
>71	Identifier	y
>72	Argument	x
>73	Identifier	x
>74	Callee	m_ptCur . Offset
>75	MemberAccess	m_ptCur . Offset
>76	Identifier	Offset
>77	Identifier	m_ptCur
>85	FunctionDef	OffsetLineTo (long x , long y)
>86	ParameterList	long x , long y
>87	Parameter	 
>88	Identifier	y
>89	ParameterType	long
>90	Parameter	 
>91	Identifier	x
>92	ParameterType	long
>93	ReturnType	void
>94	CompoundStatement	 
>95	ExpressionStatement	 
>96	CallExpression	m_pDC -> SetPixel ( m_ptCur , m_lgp . lopnColor )
>97	ArgumentList	m_ptCur
>98	Argument	m_lgp . lopnColor
>99	MemberAccess	m_lgp . lopnColor
>100	Identifier	lopnColor
>101	Identifier	m_lgp
>102	Argument	m_ptCur
>103	Identifier	m_ptCur
>104	Callee	m_pDC -> SetPixel
>105	PtrMemberAccess	m_pDC -> SetPixel
>106	Identifier	SetPixel
>107	Identifier	m_pDC
>108	ExpressionStatement	 
>109	CallExpression	m_pDC -> GetCurrentPen ( ) -> GetLogPen ( & m_lgp )
>110	ArgumentList	& m_lgp
>111	Argument	& m_lgp
>112	UnaryOp	& m_lgp
>113	Identifier	m_lgp
>114	UnaryOperator	&
>115	Callee	m_pDC -> GetCurrentPen ( ) -> GetLogPen
>116	PtrMemberAccess	m_pDC -> GetCurrentPen ( ) -> GetLogPen
>117	Identifier	GetLogPen
>118	CallExpression	m_pDC -> GetCurrentPen ( )
>119	ArgumentList	 
>120	Callee	m_pDC -> GetCurrentPen
>121	PtrMemberAccess	m_pDC -> GetCurrentPen
>122	Identifier	GetCurrentPen
>123	Identifier	m_pDC
>124	ExpressionStatement	 
>125	CallExpression	m_pDC -> LineTo ( m_ptCur )
>126	ArgumentList	m_ptCur
>127	Argument	m_ptCur
>128	Identifier	m_ptCur
>129	Callee	m_pDC -> LineTo
>130	PtrMemberAccess	m_pDC -> LineTo
>131	Identifier	LineTo
>132	Identifier	m_pDC
>133	ExpressionStatement	 
>134	CallExpression	m_ptCur . Offset ( x , y )
>135	ArgumentList	x
>136	Argument	y
>137	Identifier	y
>138	Argument	x
>139	Identifier	x
>140	Callee	m_ptCur . Offset
>141	MemberAccess	m_ptCur . Offset
>142	Identifier	Offset
>143	Identifier	m_ptCur
>164	FunctionDef	CBrowseCtrl 
>165	ParameterList	 
>166	CompoundStatement	 
>167	ExpressionStatement	 
>168	AssignmentExpr	m_bEditChanged = FALSE
>169	Identifier	FALSE
>170	Identifier	m_bEditChanged
>171	ExpressionStatement	 
>172	AssignmentExpr	m_lpszPathNames = NULL
>173	Identifier	NULL
>174	Identifier	m_lpszPathNames
>175	ExpressionStatement	 
>176	AssignmentExpr	m_sFilter = _T ( \"All Files (*.*)|*.*||\" )
>177	CallExpression	_T ( \"All Files (*.*)|*.*||\" )
>178	ArgumentList	\"All Files (*.*)|*.*||\"
>179	Argument	\"All Files (*.*)|*.*||\"
>180	PrimaryExpression	\"All Files (*.*)|*.*||\"
>181	Callee	_T
>182	Identifier	_T
>183	Identifier	m_sFilter
>184	ExpressionStatement	 
>185	AssignmentExpr	m_nFolderFlags = BIF_RETURNONLYFSDIRS
>186	Identifier	BIF_RETURNONLYFSDIRS
>187	Identifier	m_nFolderFlags
>188	ExpressionStatement	 
>189	AssignmentExpr	m_dwFileFlags = OFN_ALLOWMULTISELECT | OFN_OVERWRITEPROMPT | OFN_CREATEPROMPT | OFN_ENABLESIZING | OFN_\
>190	InclusiveOrExpression	OFN_ALLOWMULTISELECT | OFN_OVERWRITEPROMPT | OFN_CREATEPROMPT | OFN_ENABLESIZING | OFN_EXPLORER
>191	InclusiveOrExpression	OFN_OVERWRITEPROMPT | OFN_CREATEPROMPT | OFN_ENABLESIZING | OFN_EXPLORER
>192	InclusiveOrExpression	OFN_CREATEPROMPT | OFN_ENABLESIZING | OFN_EXPLORER
>193	InclusiveOrExpression	OFN_ENABLESIZING | OFN_EXPLORER
>194	Identifier	OFN_EXPLORER
>195	Identifier	OFN_ENABLESIZING
>196	Identifier	OFN_CREATEPROMPT
>197	Identifier	OFN_OVERWRITEPROMPT
>198	Identifier	OFN_ALLOWMULTISELECT
>199	Identifier	m_dwFileFlags
>200	ExpressionStatement	 
>201	AssignmentExpr	m_bOpenFileDialog = TRUE
>202	Identifier	TRUE
>203	Identifier	m_bOpenFileDialog
>204	ExpressionStatement	 
>205	AssignmentExpr	m_bReadOnlyRef = FALSE
>206	Identifier	FALSE
>207	Identifier	m_bReadOnlyRef
>208	ExpressionStatement	 
>209	AssignmentExpr	m_sDlgBanner = _T ( \"Please select a folder from the list
>210	CallExpression	_T ( \"Please select a folder from the list
>211	ArgumentList	\"Please select a folder from the list
>212	Argument	\"Please select a folder from the list
>213	PrimaryExpression	\"Please select a folder from the list
>214	Callee	_T
>215	Identifier	_T
>216	Identifier	m_sDlgBanner
>217	ExpressionStatement	 
>218	AssignmentExpr	m_sTootipText = _T ( \"Browse\" )
>219	CallExpression	_T ( \"Browse\" )
>220	ArgumentList	\"Browse\"
>221	Argument	\"Browse\"
>222	PrimaryExpression	\"Browse\"
>223	Callee	_T
>224	Identifier	_T
>225	Identifier	m_sTootipText
>226	ExpressionStatement	 
>227	AssignmentExpr	m_bMouseIn = FALSE
>228	Identifier	FALSE
>229	Identifier	m_bMouseIn
>230	ExpressionStatement	 
>231	AssignmentExpr	m_bBtnPushed = FALSE
>232	Identifier	FALSE
>233	Identifier	m_bBtnPushed
>234	ExpressionStatement	 
>235	AssignmentExpr	m_bOwnCreate = FALSE
>236	Identifier	FALSE
>237	Identifier	m_bOwnCreate
>238	ExpressionStatement	 
>239	AssignmentExpr	m_nNotifyMsg = 0
>240	PrimaryExpression	0
>241	Identifier	m_nNotifyMsg
>242	ExpressionStatement	 
>243	AssignmentExpr	m_bDlgPopped = FALSE
>244	Identifier	FALSE
>245	Identifier	m_bDlgPopped
>246	ExpressionStatement	 
>247	AssignmentExpr	m_nPathNamesLen = 0
>248	PrimaryExpression	0
>249	Identifier	m_nPathNamesLen
>250	ExpressionStatement	 
>251	AssignmentExpr	m_bEditFocused = FALSE
>252	Identifier	FALSE
>253	Identifier	m_bEditFocused
>254	ExpressionStatement	 
>255	AssignmentExpr	m_nSelCount = 0
>256	PrimaryExpression	0
>257	Identifier	m_nSelCount
>258	ExpressionStatement	 
>259	AssignmentExpr	m_dwStyle = BC_BTN_ICON | BC_ICO_ARROWFOLDER
>260	InclusiveOrExpression	BC_BTN_ICON | BC_ICO_ARROWFOLDER
>261	Identifier	BC_ICO_ARROWFOLDER
>262	Identifier	BC_BTN_ICON
>263	Identifier	m_dwStyle
>297	FunctionDef	CBrowseCtrl 
>298	ParameterList	 
>299	CompoundStatement	 
>300	ExpressionStatement	 
>301	Identifier	m_lpszPathNames
>302	Statement	 
>303	Statement	 
>304	IfStatement	if ( m_lpszPathNames != NULL )
>305	Statement	 
>306	Condition	 
>307	EqualityExpression	m_lpszPathNames != NULL
>308	Identifier	NULL
>309	Identifier	m_lpszPathNames
>315	FunctionDef	CBrowseCtrl 
>316	ParameterList	 
>317	ReturnType	void
>318	CompoundStatement	 
>319	IfStatement	if ( ! m_bDlgPopped && ( m_dwStyle & BC_CTL_ALLOWEDIT ) )
>320	CompoundStatement	 
>321	ExpressionStatement	 
>322	AssignmentExpr	m_bEditChanged = TRUE
>323	Identifier	TRUE
>324	Identifier	m_bEditChanged
>325	ExpressionStatement	 
>326	CallExpression	m_wndEdit . GetWindowText ( m_sEditText )
>327	ArgumentList	m_sEditText
>328	Argument	m_sEditText
>329	Identifier	m_sEditText
>330	Callee	m_wndEdit . GetWindowText
>331	MemberAccess	m_wndEdit . GetWindowText
>332	Identifier	GetWindowText
>333	Identifier	m_wndEdit
>334	Condition	 
>335	AndExpression	! m_bDlgPopped && ( m_dwStyle & BC_CTL_ALLOWEDIT )
>336	BitAndExpression	m_dwStyle & BC_CTL_ALLOWEDIT
>337	Identifier	BC_CTL_ALLOWEDIT
>338	Identifier	m_dwStyle
>339	UnaryOp	! m_bDlgPopped
>340	Identifier	m_bDlgPopped
>341	UnaryOperator	!
>352	FunctionDef	CBrowseCtrl 
>353	ParameterList	 
>354	ReturnType	void
>355	CompoundStatement	 
>356	IfStatement	if ( ! m_bOwnCreate )
>357	ExpressionStatement	 
>358	CallExpression	CreateCtrl ( )
>359	ArgumentList	 
>360	Callee	CreateCtrl
>361	Identifier	CreateCtrl
>362	Condition	 
>363	UnaryOp	! m_bOwnCreate
>364	Identifier	m_bOwnCreate
>365	UnaryOperator	!
>366	ExpressionStatement	 
>367	CallExpression	CButton 
>368	ArgumentList	 
>369	Callee	CButton 
>370	Identifier	CButton 
>375	FunctionDef	CBrowseCtrl 
>376	ParameterList	DWORD dwStyles
>377	Parameter	 
>378	Identifier	dwStyles
>379	ParameterType	DWORD
>380	ReturnType	void
>381	CompoundStatement	 
>382	IfStatement	if ( m_dwStyle != dwStyles )
>383	CompoundStatement	 
>384	CompoundStatement	 
>385	ExpressionStatement	 
>386	CallExpression	RedrawWindow ( )
>387	ArgumentList	 
>388	Callee	RedrawWindow
>389	Identifier	RedrawWindow
>390	ExpressionStatement	 
>391	CallExpression	CreateEdit ( )
>392	ArgumentList	 
>393	Callee	CreateEdit
>394	Identifier	CreateEdit
>395	ExpressionStatement	 
>396	CallExpression	RecalculateRects ( )
>397	ArgumentList	 
>398	Callee	RecalculateRects
>399	Identifier	RecalculateRects
>400	Statement	 
>401	Statement	 
>402	Statement	 
>403	Statement	 
>404	Statement	 
>405	Statement	 
>406	Statement	 
>407	Statement	 
>408	ExpressionStatement	 
>409	AssignmentExpr	m_dwStyle = dwStyles
>410	Identifier	dwStyles
>411	Identifier	m_dwStyle
>412	Condition	 
>413	EqualityExpression	m_dwStyle != dwStyles
>414	Identifier	dwStyles
>415	Identifier	m_dwStyle
>421	FunctionDef	CBrowseCtrl 
>422	ParameterList	 
>423	ReturnType	DWORD
>424	CompoundStatement	 
>425	ReturnStatement	 
>426	Identifier	m_dwStyle
>431	FunctionDef	CBrowseCtrl 
>432	ParameterList	 
>433	ReturnType	BOOL
>434	CompoundStatement	 
>435	ReturnStatement	 
>436	Identifier	TRUE
>437	ExpressionStatement	 
>438	CallExpression	SetTimer ( ID_TMR_FOCUSMONITOR , 1 , NULL )
>439	ArgumentList	ID_TMR_FOCUSMONITOR
>440	Argument	NULL
>441	Identifier	NULL
>442	Argument	1
>443	PrimaryExpression	1
>444	Argument	ID_TMR_FOCUSMONITOR
>445	Identifier	ID_TMR_FOCUSMONITOR
>446	Callee	SetTimer
>447	Identifier	SetTimer
>448	ExpressionStatement	 
>449	CallExpression	m_wndTooltip . AddTool ( this , m_sTootipText , m_rcButton , TOOLTIPCTRL_ID )
>450	ArgumentList	this
>451	Argument	TOOLTIPCTRL_ID
>452	Identifier	TOOLTIPCTRL_ID
>453	Argument	m_rcButton
>454	Identifier	m_rcButton
>455	Argument	m_sTootipText
>456	Identifier	m_sTootipText
>457	Argument	this
>458	Identifier	this
>459	Callee	m_wndTooltip . AddTool
>460	MemberAccess	m_wndTooltip . AddTool
>461	Identifier	AddTool
>462	Identifier	m_wndTooltip
>463	IfStatement	if ( ! m_wndTooltip . Create ( this ) )
>464	CompoundStatement	 
>465	ReturnStatement	 
>466	Identifier	FALSE
>467	ExpressionStatement	 
>468	CallExpression	ASSERT ( FALSE )
>469	ArgumentList	FALSE
>470	Argument	FALSE
>471	Identifier	FALSE
>472	Callee	ASSERT
>473	Identifier	ASSERT
>474	Condition	 
>475	UnaryOp	! m_wndTooltip . Create ( this )
>476	CallExpression	m_wndTooltip . Create ( this )
>477	ArgumentList	this
>478	Argument	this
>479	Identifier	this
>480	Callee	m_wndTooltip . Create
>481	MemberAccess	m_wndTooltip . Create
>482	Identifier	Create
>483	Identifier	m_wndTooltip
>484	UnaryOperator	!
>485	IfStatement	if ( ! CreateEdit ( ) )
>486	CompoundStatement	 
>487	ReturnStatement	 
>488	Identifier	FALSE
>489	ExpressionStatement	 
>490	CallExpression	ASSERT ( FALSE )
>491	ArgumentList	FALSE
>492	Argument	FALSE
>493	Identifier	FALSE
>494	Callee	ASSERT
>495	Identifier	ASSERT
>496	Condition	 
>497	UnaryOp	! CreateEdit ( )
>498	CallExpression	CreateEdit ( )
>499	ArgumentList	 
>500	Callee	CreateEdit
>501	Identifier	CreateEdit
>502	UnaryOperator	!
>503	ExpressionStatement	 
>504	CallExpression	CButton 
>505	ArgumentList	_T ( \"\" )
>506	Argument	_T ( \"\" )
>507	CallExpression	_T ( \"\" )
>508	ArgumentList	\"\"
>509	Argument	\"\"
>510	PrimaryExpression	\"\"
>511	Callee	_T
>512	Identifier	_T
>513	Callee	CButton 
>514	Identifier	CButton 
>515	IfStatement	if ( m_sButtonText . IsEmpty ( ) )
>516	ExpressionStatement	 
>517	CallExpression	CButton 
>518	ArgumentList	m_sButtonText
>519	Argument	m_sButtonText
>520	Identifier	m_sButtonText
>521	Callee	CButton 
>522	Identifier	CButton 
>523	Condition	 
>524	CallExpression	m_sButtonText . IsEmpty ( )
>525	ArgumentList	 
>526	Callee	m_sButtonText . IsEmpty
>527	MemberAccess	m_sButtonText . IsEmpty
>528	Identifier	IsEmpty
>529	Identifier	m_sButtonText
>530	ExpressionStatement	 
>531	CallExpression	RecalculateRects ( )
>532	ArgumentList	 
>533	Callee	RecalculateRects
>534	Identifier	RecalculateRects
>535	ReturnStatement	 
>536	Identifier	FALSE
>537	Statement	 
>538	Statement	 
>539	Statement	 
>540	Statement	 
>541	Statement	 
>542	Statement	 
>543	Statement	 
>544	Statement	 
>545	Statement	 
>563	FunctionDef	CBrowseCtrl 
>564	ParameterList	 
>565	ReturnType	void
>566	CompoundStatement	 
>567	IfStatement	if ( m_dwStyle & BC_BTN_ICON )
>568	ElseStatement	else
>569	CompoundStatement	 
>570	ExpressionStatement	 
>571	CallExpression	DrawButtonText ( & dc , bkColor , rect )
>572	ArgumentList	& dc
>573	Argument	rect
>574	Identifier	rect
>575	Argument	bkColor
>576	Identifier	bkColor
>577	Argument	& dc
>578	UnaryOp	& dc
>579	Identifier	dc
>580	UnaryOperator	&
>581	Callee	DrawButtonText
>582	Identifier	DrawButtonText
>583	CompoundStatement	 
>584	IfStatement	if ( m_dwStyle & BC_ICO_ARROWFOLDER )
>585	ElseStatement	else
>586	IfStatement	if ( m_dwStyle & BC_ICO_FOLDER )
>587	ElseStatement	else
>588	IfStatement	if ( m_dwStyle & BC_ICO_EXPLORER )
>589	ElseStatement	else
>590	CompoundStatement	 
>591	CompoundStatement	 
>592	ExpressionStatement	 
>593	CallExpression	DrawButtonExplorer ( & dc , bkColor , rect )
>594	ArgumentList	& dc
>595	Argument	rect
>596	Identifier	rect
>597	Argument	bkColor
>598	Identifier	bkColor
>599	Argument	& dc
>600	UnaryOp	& dc
>601	Identifier	dc
>602	UnaryOperator	&
>603	Callee	DrawButtonExplorer
>604	Identifier	DrawButtonExplorer
>605	Condition	 
>606	BitAndExpression	m_dwStyle & BC_ICO_EXPLORER
>607	Identifier	BC_ICO_EXPLORER
>608	Identifier	m_dwStyle
>609	CompoundStatement	 
>610	ExpressionStatement	 
>611	CallExpression	DrawButtonFolder ( & dc , bkColor , rect )
>612	ArgumentList	& dc
>613	Argument	rect
>614	Identifier	rect
>615	Argument	bkColor
>616	Identifier	bkColor
>617	Argument	& dc
>618	UnaryOp	& dc
>619	Identifier	dc
>620	UnaryOperator	&
>621	Callee	DrawButtonFolder
>622	Identifier	DrawButtonFolder
>623	Condition	 
>624	BitAndExpression	m_dwStyle & BC_ICO_FOLDER
>625	Identifier	BC_ICO_FOLDER
>626	Identifier	m_dwStyle
>627	CompoundStatement	 
>628	ExpressionStatement	 
>629	CallExpression	DrawButtonArrowFolder ( & dc , bkColor , rect )
>630	ArgumentList	& dc
>631	Argument	rect
>632	Identifier	rect
>633	Argument	bkColor
>634	Identifier	bkColor
>635	Argument	& dc
>636	UnaryOp	& dc
>637	Identifier	dc
>638	UnaryOperator	&
>639	Callee	DrawButtonArrowFolder
>640	Identifier	DrawButtonArrowFolder
>641	Condition	 
>642	BitAndExpression	m_dwStyle & BC_ICO_ARROWFOLDER
>643	Identifier	BC_ICO_ARROWFOLDER
>644	Identifier	m_dwStyle
>645	Condition	 
>646	BitAndExpression	m_dwStyle & BC_BTN_ICON
>647	Identifier	BC_BTN_ICON
>648	Identifier	m_dwStyle
>649	IfStatement	if ( m_bBtnPushed )
>650	ExpressionStatement	 
>651	CallExpression	rect . OffsetRect ( 1 , 1 )
>652	ArgumentList	1
>653	Argument	1
>654	PrimaryExpression	1
>655	Argument	1
>656	PrimaryExpression	1
>657	Callee	rect . OffsetRect
>658	MemberAccess	rect . OffsetRect
>659	Identifier	OffsetRect
>660	Identifier	rect
>661	Condition	 
>662	Identifier	m_bBtnPushed
>663	IdentifierDeclStatement	 
>664	IdentifierDecl	rect = m_rcContent
>665	AssignmentExpr	rect = m_rcContent
>666	Identifier	m_rcContent
>667	Identifier	m_rcContent
>668	Identifier	rect
>669	IdentifierDeclType	CRect
>670	ExpressionStatement	 
>671	CallExpression	DrawButtonFrame ( & dc , bkColor )
>672	ArgumentList	& dc
>673	Argument	bkColor
>674	Identifier	bkColor
>675	Argument	& dc
>676	UnaryOp	& dc
>677	Identifier	dc
>678	UnaryOperator	&
>679	Callee	DrawButtonFrame
>680	Identifier	DrawButtonFrame
>681	ExpressionStatement	 
>682	CallExpression	GetSysColor ( COLOR_BTNFACE )
>683	ArgumentList	COLOR_BTNFACE
>684	Argument	COLOR_BTNFACE
>685	Identifier	COLOR_BTNFACE
>686	Callee	GetSysColor
>687	Identifier	GetSysColor
>688	Statement	 
>689	Statement	 
>690	Statement	 
>691	Statement	 
>692	IdentifierDeclStatement	 
>693	IdentifierDecl	dc ( this )
>694	Identifier	this
>695	Identifier	dc
>696	IdentifierDeclType	CPaintDC
>712	FunctionDef	CBrowseCtrl 
>713	ParameterList	CWnd * pOldWnd
>714	Parameter	 
>715	Identifier	pOldWnd
>716	ParameterType	CWnd *
>717	ReturnType	void
>718	CompoundStatement	 
>719	ExpressionStatement	 
>720	CallExpression	SetTimer ( ID_TMR_FOCUSMONITOR , 1 , NULL )
>721	ArgumentList	ID_TMR_FOCUSMONITOR
>722	Argument	NULL
>723	Identifier	NULL
>724	Argument	1
>725	PrimaryExpression	1
>726	Argument	ID_TMR_FOCUSMONITOR
>727	Identifier	ID_TMR_FOCUSMONITOR
>728	Callee	SetTimer
>729	Identifier	SetTimer
>730	IfStatement	if ( ! m_bEditFocused && pOldWnd != & m_wndEdit )
>731	CompoundStatement	 
>732	ExpressionStatement	 
>733	AssignmentExpr	m_bEditFocused = TRUE
>734	Identifier	TRUE
>735	Identifier	m_bEditFocused
>736	ExpressionStatement	 
>737	CallExpression	m_wndEdit . SetSel ( 0 , - 1 )
>738	ArgumentList	0
>739	Argument	- 1
>740	UnaryOp	- 1
>741	PrimaryExpression	1
>742	UnaryOperator	-
>743	Argument	0
>744	PrimaryExpression	0
>745	Callee	m_wndEdit . SetSel
>746	MemberAccess	m_wndEdit . SetSel
>747	Identifier	SetSel
>748	Identifier	m_wndEdit
>749	ExpressionStatement	 
>750	CallExpression	m_wndEdit . SetFocus ( )
>751	ArgumentList	 
>752	Callee	m_wndEdit . SetFocus
>753	MemberAccess	m_wndEdit . SetFocus
>754	Identifier	SetFocus
>755	Identifier	m_wndEdit
>756	ExpressionStatement	 
>757	CallExpression	CButton 
>758	ArgumentList	pOldWnd
>759	Argument	pOldWnd
>760	Identifier	pOldWnd
>761	Callee	CButton 
>762	Identifier	CButton 
>763	Condition	 
>764	AndExpression	! m_bEditFocused && pOldWnd != & m_wndEdit
>765	EqualityExpression	pOldWnd != & m_wndEdit
>766	UnaryOp	& m_wndEdit
>767	Identifier	m_wndEdit
>768	UnaryOperator	&
>769	Identifier	pOldWnd
>770	UnaryOp	! m_bEditFocused
>771	Identifier	m_bEditFocused
>772	UnaryOperator	!
>773	ExpressionStatement	 
>774	CallExpression	KillTimer ( ID_TMR_FOCUSMONITOR )
>775	ArgumentList	ID_TMR_FOCUSMONITOR
>776	Argument	ID_TMR_FOCUSMONITOR
>777	Identifier	ID_TMR_FOCUSMONITOR
>778	Callee	KillTimer
>779	Identifier	KillTimer
>790	FunctionDef	CBrowseCtrl 
>791	ParameterList	 
>792	ReturnType	void
>793	CompoundStatement	 
>794	ExpressionStatement	 
>795	CallExpression	m_wndEdit . SetSel ( 0 , - 1 )
>796	ArgumentList	0
>797	Argument	- 1
>798	UnaryOp	- 1
>799	PrimaryExpression	1
>800	UnaryOperator	-
>801	Argument	0
>802	PrimaryExpression	0
>803	Callee	m_wndEdit . SetSel
>804	MemberAccess	m_wndEdit . SetSel
>805	Identifier	SetSel
>806	Identifier	m_wndEdit
>811	FunctionDef	CBrowseCtrl 
>812	ParameterList	 
>813	ReturnType	void
>814	CompoundStatement	 
>815	ExpressionStatement	 
>816	CallExpression	m_wndEdit . SetSel ( - 1 , - 1 )
>817	ArgumentList	- 1
>818	Argument	- 1
>819	UnaryOp	- 1
>820	PrimaryExpression	1
>821	UnaryOperator	-
>822	Argument	- 1
>823	UnaryOp	- 1
>824	PrimaryExpression	1
>825	UnaryOperator	-
>826	Callee	m_wndEdit . SetSel
>827	MemberAccess	m_wndEdit . SetSel
>828	Identifier	SetSel
>829	Identifier	m_wndEdit
>834	FunctionDef	CBrowseCtrl 
>835	ParameterList	 
>836	ReturnType	int
>837	CompoundStatement	 
>838	ReturnStatement	 
>839	Identifier	nRes
>840	ExpressionStatement	 
>841	AssignmentExpr	m_bDlgPopped = FALSE
>842	Identifier	FALSE
>843	Identifier	m_bDlgPopped
>844	IfStatement	if ( m_nNotifyMsg > 0 )
>845	ExpressionStatement	 
>846	CallExpression	GetParent ( ) -> SendMessage ( m_nNotifyMsg , ( WPARAM ) nRes , ( LPARAM ) this )
>847	ArgumentList	m_nNotifyMsg
>848	Argument	( LPARAM ) this
>849	CastExpression	( LPARAM ) this
>850	Identifier	this
>851	CastTarget	LPARAM
>852	Argument	( WPARAM ) nRes
>853	CastExpression	( WPARAM ) nRes
>854	Identifier	nRes
>855	CastTarget	WPARAM
>856	Argument	m_nNotifyMsg
>857	Identifier	m_nNotifyMsg
>858	Callee	GetParent ( ) -> SendMessage
>859	PtrMemberAccess	GetParent ( ) -> SendMessage
>860	Identifier	SendMessage
>861	CallExpression	GetParent ( )
>862	ArgumentList	 
>863	Callee	GetParent
>864	Identifier	GetParent
>865	Condition	 
>866	RelationalExpression	m_nNotifyMsg > 0
>867	PrimaryExpression	0
>868	Identifier	m_nNotifyMsg
>869	IdentifierDeclStatement	 
>870	IdentifierDecl	nRes = ( m_dwStyle & BC_CTL_FOLDERSONLY ) ? FolderDoModal ( ) 
>871	AssignmentExpr	nRes = ( m_dwStyle & BC_CTL_FOLDERSONLY ) ? FolderDoModal ( ) 
>872	ConditionalExpression	( m_dwStyle & BC_CTL_FOLDERSONLY ) ? FolderDoModal ( ) 
>873	CallExpression	FileDoModal ( )
>874	ArgumentList	 
>875	Callee	FileDoModal
>876	Identifier	FileDoModal
>877	CallExpression	FolderDoModal ( )
>878	ArgumentList	 
>879	Callee	FolderDoModal
>880	Identifier	FolderDoModal
>881	Condition	m_dwStyle & BC_CTL_FOLDERSONLY
>882	BitAndExpression	m_dwStyle & BC_CTL_FOLDERSONLY
>883	Identifier	BC_CTL_FOLDERSONLY
>884	Identifier	m_dwStyle
>885	Identifier	nRes
>886	Identifier	nRes
>887	IdentifierDeclType	int
>888	ExpressionStatement	 
>889	AssignmentExpr	m_bDlgPopped = TRUE
>890	Identifier	TRUE
>891	Identifier	m_bDlgPopped
>892	IfStatement	if ( m_bDlgPopped )
>893	ReturnStatement	 
>894	Identifier	IDCANCEL
>895	Condition	 
>896	Identifier	m_bDlgPopped
>912	FunctionDef	CBrowseCtrl 
>913	ParameterList	 
>914	ReturnType	int
>915	CompoundStatement	 
>916	ReturnStatement	 
>917	Identifier	m_nSelCount
>922	FunctionDef	CBrowseCtrl 
>923	ParameterList	UINT nFlags , CPoint point
>924	Parameter	 
>925	Identifier	point
>926	ParameterType	CPoint
>927	Parameter	 
>928	Identifier	nFlags
>929	ParameterType	UINT
>930	ReturnType	void
>931	CompoundStatement	 
>932	ExpressionStatement	 
>933	CallExpression	RedrawWindow ( )
>934	ArgumentList	 
>935	Callee	RedrawWindow
>936	Identifier	RedrawWindow
>937	IfStatement	if ( m_rcButton . PtInRect ( point ) )
>938	CompoundStatement	 
>939	ExpressionStatement	 
>940	AssignmentExpr	m_bBtnPushed = TRUE
>941	Identifier	TRUE
>942	Identifier	m_bBtnPushed
>943	ExpressionStatement	 
>944	CallExpression	SetCapture ( )
>945	ArgumentList	 
>946	Callee	SetCapture
>947	Identifier	SetCapture
>948	ExpressionStatement	 
>949	CallExpression	OnKillEditFocus ( )
>950	ArgumentList	 
>951	Callee	OnKillEditFocus
>952	Identifier	OnKillEditFocus
>953	Condition	 
>954	CallExpression	m_rcButton . PtInRect ( point )
>955	ArgumentList	point
>956	Argument	point
>957	Identifier	point
>958	Callee	m_rcButton . PtInRect
>959	MemberAccess	m_rcButton . PtInRect
>960	Identifier	PtInRect
>961	Identifier	m_rcButton
>962	ExpressionStatement	 
>963	CallExpression	CButton 
>964	ArgumentList	nFlags
>965	Argument	point
>966	Identifier	point
>967	Argument	nFlags
>968	Identifier	nFlags
>969	Callee	CButton 
>970	Identifier	CButton 
>980	FunctionDef	CBrowseCtrl 
>981	ParameterList	UINT nFlags , CPoint point
>982	Parameter	 
>983	Identifier	point
>984	ParameterType	CPoint
>985	Parameter	 
>986	Identifier	nFlags
>987	ParameterType	UINT
>988	ReturnType	void
>989	CompoundStatement	 
>990	IfStatement	if ( GetCapture ( ) == this )
>991	CompoundStatement	 
>992	IfStatement	if ( m_rcButton . PtInRect ( point ) )
>993	ExpressionStatement	 
>994	CallExpression	OnButtonClicked ( )
>995	ArgumentList	 
>996	Callee	OnButtonClicked
>997	Identifier	OnButtonClicked
>998	Condition	 
>999	CallExpression	m_rcButton . PtInRect ( point )
>1000	ArgumentList	point
>1001	Argument	point
>1002	Identifier	point
>1003	Callee	m_rcButton . PtInRect
>1004	MemberAccess	m_rcButton . PtInRect
>1005	Identifier	PtInRect
>1006	Identifier	m_rcButton
>1007	ExpressionStatement	 
>1008	CallExpression	RedrawWindow ( & m_rcButton )
>1009	ArgumentList	& m_rcButton
>1010	Argument	& m_rcButton
>1011	UnaryOp	& m_rcButton
>1012	Identifier	m_rcButton
>1013	UnaryOperator	&
>1014	Callee	RedrawWindow
>1015	Identifier	RedrawWindow
>1016	ExpressionStatement	 
>1017	AssignmentExpr	m_bBtnPushed = FALSE
>1018	Identifier	FALSE
>1019	Identifier	m_bBtnPushed
>1020	ExpressionStatement	 
>1021	CallExpression	ReleaseCapture ( )
>1022	ArgumentList	 
>1023	Callee	ReleaseCapture
>1024	Identifier	ReleaseCapture
>1025	Condition	 
>1026	EqualityExpression	GetCapture ( ) == this
>1027	Identifier	this
>1028	CallExpression	GetCapture ( )
>1029	ArgumentList	 
>1030	Callee	GetCapture
>1031	Identifier	GetCapture
>1032	ExpressionStatement	 
>1033	CallExpression	CButton 
>1034	ArgumentList	nFlags
>1035	Argument	point
>1036	Identifier	point
>1037	Argument	nFlags
>1038	Identifier	nFlags
>1039	Callee	CButton 
>1040	Identifier	CButton 
>1053	FunctionDef	CBrowseCtrl 
>1054	ParameterList	CDC * pDC , COLORREF bkColor
>1055	Parameter	 
>1056	Identifier	bkColor
>1057	ParameterType	COLORREF
>1058	Parameter	 
>1059	Identifier	pDC
>1060	ParameterType	CDC *
>1061	ReturnType	void
>1062	CompoundStatement	 
>1063	IfStatement	if ( m_dwStyle & BC_BTN_FLAT )
>1064	ElseStatement	else
>1065	CompoundStatement	 
>1066	IfStatement	if ( ! m_bBtnPushed )
>1067	ElseStatement	else
>1068	CompoundStatement	 
>1069	ExpressionStatement	 
>1070	Statement	 
>1071	Statement	 
>1072	Statement	 
>1073	Statement	 
>1074	Statement	 
>1075	Statement	 
>1076	Statement	 
>1077	Statement	 
>1078	Statement	 
>1079	Statement	 
>1080	Statement	 
>1081	Statement	 
>1082	Statement	 
>1083	Statement	 
>1084	Statement	 
>1085	Statement	 
>1086	Statement	 
>1087	Statement	 
>1088	ExpressionStatement	 
>1089	CallExpression	rect . DeflateRect ( 1 , 1 )
>1090	ArgumentList	1
>1091	Argument	1
>1092	PrimaryExpression	1
>1093	Argument	1
>1094	PrimaryExpression	1
>1095	Callee	rect . DeflateRect
>1096	MemberAccess	rect . DeflateRect
>1097	Identifier	DeflateRect
>1098	Identifier	rect
>1099	ExpressionStatement	 
>1100	Statement	 
>1101	Statement	 
>1102	Statement	 
>1103	Statement	 
>1104	Statement	 
>1105	Statement	 
>1106	Statement	 
>1107	Statement	 
>1108	Statement	 
>1109	Statement	 
>1110	Statement	 
>1111	Statement	 
>1112	Statement	 
>1113	Statement	 
>1114	Statement	 
>1115	Statement	 
>1116	Statement	 
>1117	Statement	 
>1118	CompoundStatement	 
>1119	ExpressionStatement	 
>1120	Statement	 
>1121	Statement	 
>1122	Statement	 
>1123	Statement	 
>1124	Statement	 
>1125	Statement	 
>1126	Statement	 
>1127	Statement	 
>1128	Statement	 
>1129	Statement	 
>1130	Statement	 
>1131	Statement	 
>1132	Statement	 
>1133	Statement	 
>1134	Statement	 
>1135	Statement	 
>1136	Statement	 
>1137	Statement	 
>1138	ExpressionStatement	 
>1139	CallExpression	rect . DeflateRect ( 1 , 1 )
>1140	ArgumentList	1
>1141	Argument	1
>1142	PrimaryExpression	1
>1143	Argument	1
>1144	PrimaryExpression	1
>1145	Callee	rect . DeflateRect
>1146	MemberAccess	rect . DeflateRect
>1147	Identifier	DeflateRect
>1148	Identifier	rect
>1149	ExpressionStatement	 
>1150	Statement	 
>1151	Statement	 
>1152	Statement	 
>1153	Statement	 
>1154	Statement	 
>1155	Statement	 
>1156	Statement	 
>1157	Statement	 
>1158	Statement	 
>1159	Statement	 
>1160	Statement	 
>1161	Statement	 
>1162	Statement	 
>1163	Statement	 
>1164	Statement	 
>1165	Statement	 
>1166	Statement	 
>1167	Statement	 
>1168	Condition	 
>1169	UnaryOp	! m_bBtnPushed
>1170	Identifier	m_bBtnPushed
>1171	UnaryOperator	!
>1172	CompoundStatement	 
>1173	IfStatement	if ( m_bBtnPushed )
>1174	ElseStatement	else
>1175	CompoundStatement	 
>1176	ExpressionStatement	 
>1177	Statement	 
>1178	Statement	 
>1179	Statement	 
>1180	Statement	 
>1181	Statement	 
>1182	Statement	 
>1183	Statement	 
>1184	Statement	 
>1185	Statement	 
>1186	Statement	 
>1187	Statement	 
>1188	Statement	 
>1189	Statement	 
>1190	Statement	 
>1191	Statement	 
>1192	Statement	 
>1193	Statement	 
>1194	IfStatement	if ( m_bMouseIn )
>1195	Statement	 
>1196	Condition	 
>1197	Identifier	m_bMouseIn
>1198	CompoundStatement	 
>1199	ExpressionStatement	 
>1200	Statement	 
>1201	Statement	 
>1202	Statement	 
>1203	Statement	 
>1204	Statement	 
>1205	Statement	 
>1206	Statement	 
>1207	Statement	 
>1208	Statement	 
>1209	Statement	 
>1210	Statement	 
>1211	Statement	 
>1212	Statement	 
>1213	Statement	 
>1214	Statement	 
>1215	Statement	 
>1216	Statement	 
>1217	Statement	 
>1218	Condition	 
>1219	Identifier	m_bBtnPushed
>1220	Condition	 
>1221	BitAndExpression	m_dwStyle & BC_BTN_FLAT
>1222	Identifier	BC_BTN_FLAT
>1223	Identifier	m_dwStyle
>1224	ExpressionStatement	 
>1225	CallExpression	pDC -> FillSolidRect ( & rect , bkColor )
>1226	ArgumentList	& rect
>1227	Argument	bkColor
>1228	Identifier	bkColor
>1229	Argument	& rect
>1230	UnaryOp	& rect
>1231	Identifier	rect
>1232	UnaryOperator	&
>1233	Callee	pDC -> FillSolidRect
>1234	PtrMemberAccess	pDC -> FillSolidRect
>1235	Identifier	FillSolidRect
>1236	Identifier	pDC
>1237	IdentifierDeclStatement	 
>1238	IdentifierDecl	rect = m_rcButton
>1239	AssignmentExpr	rect = m_rcButton
>1240	Identifier	m_rcButton
>1241	Identifier	m_rcButton
>1242	Identifier	rect
>1243	IdentifierDeclType	CRect
>1256	FunctionDef	CBrowseCtrl 
>1257	ParameterList	MSG * pMsg
>1258	Parameter	 
>1259	Identifier	pMsg
>1260	ParameterType	MSG *
>1261	ReturnType	BOOL
>1262	CompoundStatement	 
>1263	ReturnStatement	 
>1264	CallExpression	CButton 
>1265	ArgumentList	pMsg
>1266	Argument	pMsg
>1267	Identifier	pMsg
>1268	Callee	CButton 
>1269	Identifier	CButton 
>1270	IfStatement	if ( pMsg -> message == WM_KEYDOWN && pMsg -> wParam == VK_RETURN )
>1271	CompoundStatement	 
>1272	ReturnStatement	 
>1273	Identifier	TRUE
>1274	ExpressionStatement	 
>1275	CallExpression	OnButtonClicked ( )
>1276	ArgumentList	 
>1277	Callee	OnButtonClicked
>1278	Identifier	OnButtonClicked
>1279	Condition	 
>1280	AndExpression	pMsg -> message == WM_KEYDOWN && pMsg -> wParam == VK_RETURN
>1281	EqualityExpression	pMsg -> wParam == VK_RETURN
>1282	Identifier	VK_RETURN
>1283	PtrMemberAccess	pMsg -> wParam
>1284	Identifier	wParam
>1285	Identifier	pMsg
>1286	EqualityExpression	pMsg -> message == WM_KEYDOWN
>1287	Identifier	WM_KEYDOWN
>1288	PtrMemberAccess	pMsg -> message
>1289	Identifier	message
>1290	Identifier	pMsg
>1291	ExpressionStatement	 
>1292	CallExpression	m_wndTooltip . RelayEvent ( pMsg )
>1293	ArgumentList	pMsg
>1294	Argument	pMsg
>1295	Identifier	pMsg
>1296	Callee	m_wndTooltip . RelayEvent
>1297	MemberAccess	m_wndTooltip . RelayEvent
>1298	Identifier	RelayEvent
>1299	Identifier	m_wndTooltip
>1312	FunctionDef	CBrowseCtrl 
>1313	ParameterList	UINT nIDEvent
>1314	Parameter	 
>1315	Identifier	nIDEvent
>1316	ParameterType	UINT
>1317	ReturnType	void
>1318	CompoundStatement	 
>1319	ExpressionStatement	 
>1320	CallExpression	CButton 
>1321	ArgumentList	nIDEvent
>1322	Argument	nIDEvent
>1323	Identifier	nIDEvent
>1324	Callee	CButton 
>1325	Identifier	CButton 
>1326	IfStatement	if ( nIDEvent == ID_TMR_MOUSEMONITOR )
>1327	ElseStatement	else
>1328	IfStatement	if ( nIDEvent == ID_TMR_FOCUSMONITOR )
>1329	CompoundStatement	 
>1330	IfStatement	if ( GetFocus ( ) != & m_wndEdit )
>1331	ElseStatement	else
>1332	CompoundStatement	 
>1333	IfStatement	if ( ! m_bEditFocused )
>1334	CompoundStatement	 
>1335	ExpressionStatement	 
>1336	CallExpression	OnSetEditFocus ( )
>1337	ArgumentList	 
>1338	Callee	OnSetEditFocus
>1339	Identifier	OnSetEditFocus
>1340	ExpressionStatement	 
>1341	AssignmentExpr	m_bEditFocused = TRUE
>1342	Identifier	TRUE
>1343	Identifier	m_bEditFocused
>1344	Condition	 
>1345	UnaryOp	! m_bEditFocused
>1346	Identifier	m_bEditFocused
>1347	UnaryOperator	!
>1348	CompoundStatement	 
>1349	IfStatement	if ( m_bEditFocused )
>1350	CompoundStatement	 
>1351	ExpressionStatement	 
>1352	CallExpression	OnKillEditFocus ( )
>1353	ArgumentList	 
>1354	Callee	OnKillEditFocus
>1355	Identifier	OnKillEditFocus
>1356	ExpressionStatement	 
>1357	AssignmentExpr	m_bEditFocused = FALSE
>1358	Identifier	FALSE
>1359	Identifier	m_bEditFocused
>1360	Condition	 
>1361	Identifier	m_bEditFocused
>1362	Condition	 
>1363	EqualityExpression	GetFocus ( ) != & m_wndEdit
>1364	UnaryOp	& m_wndEdit
>1365	Identifier	m_wndEdit
>1366	UnaryOperator	&
>1367	CallExpression	GetFocus ( )
>1368	ArgumentList	 
>1369	Callee	GetFocus
>1370	Identifier	GetFocus
>1371	Condition	 
>1372	EqualityExpression	nIDEvent == ID_TMR_FOCUSMONITOR
>1373	Identifier	ID_TMR_FOCUSMONITOR
>1374	Identifier	nIDEvent
>1375	CompoundStatement	 
>1376	IfStatement	if ( m_bMouseIn )
>1377	CompoundStatement	 
>1378	IfStatement	if ( ! rect . PtInRect ( pt ) )
>1379	CompoundStatement	 
>1380	ExpressionStatement	 
>1381	CallExpression	OnMouseLeave ( )
>1382	ArgumentList	 
>1383	Callee	OnMouseLeave
>1384	Identifier	OnMouseLeave
>1385	ExpressionStatement	 
>1386	AssignmentExpr	m_bMouseIn = FALSE
>1387	Identifier	FALSE
>1388	Identifier	m_bMouseIn
>1389	ExpressionStatement	 
>1390	CallExpression	KillTimer ( ID_TMR_MOUSEMONITOR )
>1391	ArgumentList	ID_TMR_MOUSEMONITOR
>1392	Argument	ID_TMR_MOUSEMONITOR
>1393	Identifier	ID_TMR_MOUSEMONITOR
>1394	Callee	KillTimer
>1395	Identifier	KillTimer
>1396	Condition	 
>1397	UnaryOp	! rect . PtInRect ( pt )
>1398	CallExpression	rect . PtInRect ( pt )
>1399	ArgumentList	pt
>1400	Argument	pt
>1401	Identifier	pt
>1402	Callee	rect . PtInRect
>1403	MemberAccess	rect . PtInRect
>1404	Identifier	PtInRect
>1405	Identifier	rect
>1406	UnaryOperator	!
>1407	ExpressionStatement	 
>1408	CallExpression	ClientToScreen ( & rect )
>1409	ArgumentList	& rect
>1410	Argument	& rect
>1411	UnaryOp	& rect
>1412	Identifier	rect
>1413	UnaryOperator	&
>1414	Callee	ClientToScreen
>1415	Identifier	ClientToScreen
>1416	IdentifierDeclStatement	 
>1417	IdentifierDecl	rect = m_rcButton
>1418	AssignmentExpr	rect = m_rcButton
>1419	Identifier	m_rcButton
>1420	Identifier	m_rcButton
>1421	Identifier	rect
>1422	IdentifierDeclType	CRect
>1423	ExpressionStatement	 
>1424	CallExpression	GetCursorPos ( & pt )
>1425	ArgumentList	& pt
>1426	Argument	& pt
>1427	UnaryOp	& pt
>1428	Identifier	pt
>1429	UnaryOperator	&
>1430	Callee	GetCursorPos
>1431	Identifier	GetCursorPos
>1432	Statement	 
>1433	IdentifierDeclStatement	 
>1434	IdentifierDecl	pt
>1435	Identifier	pt
>1436	IdentifierDeclType	POINT
>1437	Condition	 
>1438	Identifier	m_bMouseIn
>1439	Condition	 
>1440	EqualityExpression	nIDEvent == ID_TMR_MOUSEMONITOR
>1441	Identifier	ID_TMR_MOUSEMONITOR
>1442	Identifier	nIDEvent
>1461	FunctionDef	CBrowseCtrl 
>1462	ParameterList	 
>1463	ReturnType	void
>1464	CompoundStatement	 
>1465	ExpressionStatement	 
>1466	CallExpression	CButton 
>1467	ArgumentList	 
>1468	Callee	CButton 
>1469	Identifier	CButton 
>1470	ExpressionStatement	 
>1471	CallExpression	m_wndTooltip . DestroyWindow ( )
>1472	ArgumentList	 
>1473	Callee	m_wndTooltip . DestroyWindow
>1474	MemberAccess	m_wndTooltip . DestroyWindow
>1475	Identifier	DestroyWindow
>1476	Identifier	m_wndTooltip
>1477	ExpressionStatement	 
>1478	CallExpression	m_wndEdit . DestroyWindow ( )
>1479	ArgumentList	 
>1480	Callee	m_wndEdit . DestroyWindow
>1481	MemberAccess	m_wndEdit . DestroyWindow
>1482	Identifier	DestroyWindow
>1483	Identifier	m_wndEdit
>1484	ExpressionStatement	 
>1485	CallExpression	KillTimer ( ID_TMR_FOCUSMONITOR )
>1486	ArgumentList	ID_TMR_FOCUSMONITOR
>1487	Argument	ID_TMR_FOCUSMONITOR
>1488	Identifier	ID_TMR_FOCUSMONITOR
>1489	Callee	KillTimer
>1490	Identifier	KillTimer
>1491	ExpressionStatement	 
>1492	CallExpression	KillTimer ( ID_TMR_MOUSEMONITOR )
>1493	ArgumentList	ID_TMR_MOUSEMONITOR
>1494	Argument	ID_TMR_MOUSEMONITOR
>1495	Identifier	ID_TMR_MOUSEMONITOR
>1496	Callee	KillTimer
>1497	Identifier	KillTimer
>1505	FunctionDef	CBrowseCtrl 
>1506	ParameterList	UINT nFlags , CPoint point
>1507	Parameter	 
>1508	Identifier	point
>1509	ParameterType	CPoint
>1510	Parameter	 
>1511	Identifier	nFlags
>1512	ParameterType	UINT
>1513	ReturnType	void
>1514	CompoundStatement	 
>1515	IfStatement	if ( ! m_bMouseIn && m_rcButton . PtInRect ( point ) )
>1516	CompoundStatement	 
>1517	ExpressionStatement	 
>1518	CallExpression	OnMouseEnter ( )
>1519	ArgumentList	 
>1520	Callee	OnMouseEnter
>1521	Identifier	OnMouseEnter
>1522	ExpressionStatement	 
>1523	CallExpression	SetTimer ( ID_TMR_MOUSEMONITOR , 1 , NULL )
>1524	ArgumentList	ID_TMR_MOUSEMONITOR
>1525	Argument	NULL
>1526	Identifier	NULL
>1527	Argument	1
>1528	PrimaryExpression	1
>1529	Argument	ID_TMR_MOUSEMONITOR
>1530	Identifier	ID_TMR_MOUSEMONITOR
>1531	Callee	SetTimer
>1532	Identifier	SetTimer
>1533	IfStatement	if ( GetCapture ( ) == this )
>1534	ExpressionStatement	 
>1535	AssignmentExpr	m_bBtnPushed = TRUE
>1536	Identifier	TRUE
>1537	Identifier	m_bBtnPushed
>1538	Condition	 
>1539	EqualityExpression	GetCapture ( ) == this
>1540	Identifier	this
>1541	CallExpression	GetCapture ( )
>1542	ArgumentList	 
>1543	Callee	GetCapture
>1544	Identifier	GetCapture
>1545	ExpressionStatement	 
>1546	AssignmentExpr	m_bMouseIn = TRUE
>1547	Identifier	TRUE
>1548	Identifier	m_bMouseIn
>1549	Condition	 
>1550	AndExpression	! m_bMouseIn && m_rcButton . PtInRect ( point )
>1551	CallExpression	m_rcButton . PtInRect ( point )
>1552	ArgumentList	point
>1553	Argument	point
>1554	Identifier	point
>1555	Callee	m_rcButton . PtInRect
>1556	MemberAccess	m_rcButton . PtInRect
>1557	Identifier	PtInRect
>1558	Identifier	m_rcButton
>1559	UnaryOp	! m_bMouseIn
>1560	Identifier	m_bMouseIn
>1561	UnaryOperator	!
>1562	ExpressionStatement	 
>1563	CallExpression	CButton 
>1564	ArgumentList	nFlags
>1565	Argument	point
>1566	Identifier	point
>1567	Argument	nFlags
>1568	Identifier	nFlags
>1569	Callee	CButton 
>1570	Identifier	CButton 
>1585	FunctionDef	CBrowseCtrl 
>1586	ParameterList	 
>1587	ReturnType	void
>1588	CompoundStatement	 
>1589	ExpressionStatement	 
>1590	CallExpression	RedrawWindow ( & m_rcButton )
>1591	ArgumentList	& m_rcButton
>1592	Argument	& m_rcButton
>1593	UnaryOp	& m_rcButton
>1594	Identifier	m_rcButton
>1595	UnaryOperator	&
>1596	Callee	RedrawWindow
>1597	Identifier	RedrawWindow
>1602	FunctionDef	CBrowseCtrl 
>1603	ParameterList	 
>1604	ReturnType	void
>1605	CompoundStatement	 
>1606	ExpressionStatement	 
>1607	CallExpression	RedrawWindow ( )
>1608	ArgumentList	 
>1609	Callee	RedrawWindow
>1610	Identifier	RedrawWindow
>1611	ExpressionStatement	 
>1612	AssignmentExpr	m_bBtnPushed = FALSE
>1613	Identifier	FALSE
>1614	Identifier	m_bBtnPushed
>1620	FunctionDef	CBrowseCtrl 
>1621	ParameterList	LPCTSTR lpszText
>1622	Parameter	 
>1623	Identifier	lpszText
>1624	ParameterType	LPCTSTR
>1625	ReturnType	void
>1626	CompoundStatement	 
>1627	ExpressionStatement	 
>1628	CallExpression	m_wndTooltip . UpdateTipText ( lpszText , this , TOOLTIPCTRL_ID )
>1629	ArgumentList	lpszText
>1630	Argument	TOOLTIPCTRL_ID
>1631	Identifier	TOOLTIPCTRL_ID
>1632	Argument	this
>1633	Identifier	this
>1634	Argument	lpszText
>1635	Identifier	lpszText
>1636	Callee	m_wndTooltip . UpdateTipText
>1637	MemberAccess	m_wndTooltip . UpdateTipText
>1638	Identifier	UpdateTipText
>1639	Identifier	m_wndTooltip
>1640	Statement	 
>1641	Statement	 
>1642	Statement	 
>1643	Statement	 
>1644	Statement	 
>1645	Statement	 
>1646	Statement	 
>1647	Statement	 
>1648	ExpressionStatement	 
>1649	AssignmentExpr	m_sTootipText = lpszText
>1650	Identifier	lpszText
>1651	Identifier	m_sTootipText
>1660	FunctionDef	CBrowseCtrl 
>1661	ParameterList	LPCTSTR lpszString
>1662	Parameter	 
>1663	Identifier	lpszString
>1664	ParameterType	LPCTSTR
>1665	ReturnType	void
>1666	CompoundStatement	 
>1667	ExpressionStatement	 
>1668	CallExpression	SetButtonText ( lpszString )
>1669	ArgumentList	lpszString
>1670	Argument	lpszString
>1671	Identifier	lpszString
>1672	Callee	SetButtonText
>1673	Identifier	SetButtonText
>1678	FunctionDef	CBrowseCtrl 
>1679	ParameterList	LPTSTR lpszStringBuf , int nMaxCount
>1680	Parameter	 
>1681	Identifier	nMaxCount
>1682	ParameterType	int
>1683	Parameter	 
>1684	Identifier	lpszStringBuf
>1685	ParameterType	LPTSTR
>1686	ReturnType	int
>1687	CompoundStatement	 
>1688	ReturnStatement	 
>1689	CallExpression	_tcslen ( lpszStringBuf )
>1690	ArgumentList	lpszStringBuf
>1691	Argument	lpszStringBuf
>1692	Identifier	lpszStringBuf
>1693	Callee	_tcslen
>1694	Identifier	_tcslen
>1695	ExpressionStatement	 
>1696	CallExpression	_tcsncpy_s ( lpszStringBuf , nMaxCount , m_sButtonText , nMaxCount )
>1697	ArgumentList	lpszStringBuf
>1698	Argument	nMaxCount
>1699	Identifier	nMaxCount
>1700	Argument	m_sButtonText
>1701	Identifier	m_sButtonText
>1702	Argument	nMaxCount
>1703	Identifier	nMaxCount
>1704	Argument	lpszStringBuf
>1705	Identifier	lpszStringBuf
>1706	Callee	_tcsncpy_s
>1707	Identifier	_tcsncpy_s
>1708	IfStatement	if ( lpszStringBuf == NULL )
>1709	ReturnStatement	 
>1710	PrimaryExpression	0
>1711	Condition	 
>1712	EqualityExpression	lpszStringBuf == NULL
>1713	Identifier	NULL
>1714	Identifier	lpszStringBuf
>1723	FunctionDef	CBrowseCtrl 
>1724	ParameterList	CString & rString
>1725	Parameter	 
>1726	Identifier	rString
>1727	ParameterType	CString &
>1728	ReturnType	void
>1729	CompoundStatement	 
>1730	ExpressionStatement	 
>1731	AssignmentExpr	rString = GetButtonText ( )
>1732	CallExpression	GetButtonText ( )
>1733	ArgumentList	 
>1734	Callee	GetButtonText
>1735	Identifier	GetButtonText
>1736	Identifier	rString
>1742	FunctionDef	CBrowseCtrl 
>1743	ParameterList	 
>1744	ReturnType	BOOL
>1745	CompoundStatement	 
>1746	ReturnStatement	 
>1747	Identifier	TRUE
>1748	ExpressionStatement	 
>1749	CallExpression	m_wndEdit . ShowWindow ( SW_SHOW )
>1750	ArgumentList	SW_SHOW
>1751	Argument	SW_SHOW
>1752	Identifier	SW_SHOW
>1753	Callee	m_wndEdit . ShowWindow
>1754	MemberAccess	m_wndEdit . ShowWindow
>1755	Identifier	ShowWindow
>1756	Identifier	m_wndEdit
>1757	ExpressionStatement	 
>1758	CallExpression	m_wndEdit . SetWindowText ( str )
>1759	ArgumentList	str
>1760	Argument	str
>1761	Identifier	str
>1762	Callee	m_wndEdit . SetWindowText
>1763	MemberAccess	m_wndEdit . SetWindowText
>1764	Identifier	SetWindowText
>1765	Identifier	m_wndEdit
>1766	ExpressionStatement	 
>1767	CallExpression	m_wndEdit . SetFont ( GetFont ( ) )
>1768	ArgumentList	GetFont ( )
>1769	Argument	GetFont ( )
>1770	CallExpression	GetFont ( )
>1771	ArgumentList	 
>1772	Callee	GetFont
>1773	Identifier	GetFont
>1774	Callee	m_wndEdit . SetFont
>1775	MemberAccess	m_wndEdit . SetFont
>1776	Identifier	SetFont
>1777	Identifier	m_wndEdit
>1778	ExpressionStatement	 
>1779	CallExpression	m_wndEdit . SetMargins ( 1 , 1 )
>1780	ArgumentList	1
>1781	Argument	1
>1782	PrimaryExpression	1
>1783	Argument	1
>1784	PrimaryExpression	1
>1785	Callee	m_wndEdit . SetMargins
>1786	MemberAccess	m_wndEdit . SetMargins
>1787	Identifier	SetMargins
>1788	Identifier	m_wndEdit
>1789	IfStatement	if ( ! m_wndEdit . CreateEx ( WS_EX_CLIENTEDGE , _T ( \"EDIT\" ) , NULL , dwStyle , m_rcEdit , this , EDITCTRL_ID , \
>1790	CompoundStatement	 
>1791	ReturnStatement	 
>1792	Identifier	FALSE
>1793	ExpressionStatement	 
>1794	CallExpression	ASSERT ( FALSE )
>1795	ArgumentList	FALSE
>1796	Argument	FALSE
>1797	Identifier	FALSE
>1798	Callee	ASSERT
>1799	Identifier	ASSERT
>1800	Condition	 
>1801	UnaryOp	! m_wndEdit . CreateEx ( WS_EX_CLIENTEDGE , _T ( \"EDIT\" ) , NULL , dwStyle , m_rcEdit , this , EDITCTRL_ID , NULL )
>1802	CallExpression	m_wndEdit . CreateEx ( WS_EX_CLIENTEDGE , _T ( \"EDIT\" ) , NULL , dwStyle , m_rcEdit , this , EDITCTRL_ID , NULL )
>1803	ArgumentList	WS_EX_CLIENTEDGE
>1804	Argument	NULL
>1805	Identifier	NULL
>1806	Argument	EDITCTRL_ID
>1807	Identifier	EDITCTRL_ID
>1808	Argument	this
>1809	Identifier	this
>1810	Argument	m_rcEdit
>1811	Identifier	m_rcEdit
>1812	Argument	dwStyle
>1813	Identifier	dwStyle
>1814	Argument	NULL
>1815	Identifier	NULL
>1816	Argument	_T ( \"EDIT\" )
>1817	CallExpression	_T ( \"EDIT\" )
>1818	ArgumentList	\"EDIT\"
>1819	Argument	\"EDIT\"
>1820	PrimaryExpression	\"EDIT\"
>1821	Callee	_T
>1822	Identifier	_T
>1823	Argument	WS_EX_CLIENTEDGE
>1824	Identifier	WS_EX_CLIENTEDGE
>1825	Callee	m_wndEdit . CreateEx
>1826	MemberAccess	m_wndEdit . CreateEx
>1827	Identifier	CreateEx
>1828	Identifier	m_wndEdit
>1829	UnaryOperator	!
>1830	ExpressionStatement	 
>1831	AssignmentExpr	m_wndEdit . m_hWnd = NULL
>1832	Identifier	NULL
>1833	MemberAccess	m_wndEdit . m_hWnd
>1834	Identifier	m_hWnd
>1835	Identifier	m_wndEdit
>1836	IfStatement	if ( GetStyle ( ) & WS_DISABLED )
>1837	ExpressionStatement	 
>1838	AssignmentExpr	dwStyle |= WS_DISABLED
>1839	Identifier	WS_DISABLED
>1840	Identifier	dwStyle
>1841	Condition	 
>1842	BitAndExpression	GetStyle ( ) & WS_DISABLED
>1843	Identifier	WS_DISABLED
>1844	CallExpression	GetStyle ( )
>1845	ArgumentList	 
>1846	Callee	GetStyle
>1847	Identifier	GetStyle
>1848	IfStatement	if ( ( m_dwStyle & BC_CTL_ALLOWEDIT ) == 0 )
>1849	ExpressionStatement	 
>1850	AssignmentExpr	dwStyle |= ES_READONLY
>1851	Identifier	ES_READONLY
>1852	Identifier	dwStyle
>1853	Condition	 
>1854	EqualityExpression	( m_dwStyle & BC_CTL_ALLOWEDIT ) == 0
>1855	PrimaryExpression	0
>1856	BitAndExpression	m_dwStyle & BC_CTL_ALLOWEDIT
>1857	Identifier	BC_CTL_ALLOWEDIT
>1858	Identifier	m_dwStyle
>1859	IdentifierDeclStatement	 
>1860	IdentifierDecl	dwStyle = ES_AUTOHSCROLL | ES_NOHIDESEL | WS_CHILD | WS_VISIBLE
>1861	AssignmentExpr	dwStyle = ES_AUTOHSCROLL | ES_NOHIDESEL | WS_CHILD | WS_VISIBLE
>1862	InclusiveOrExpression	ES_AUTOHSCROLL | ES_NOHIDESEL | WS_CHILD | WS_VISIBLE
>1863	InclusiveOrExpression	ES_NOHIDESEL | WS_CHILD | WS_VISIBLE
>1864	InclusiveOrExpression	WS_CHILD | WS_VISIBLE
>1865	Identifier	WS_VISIBLE
>1866	Identifier	WS_CHILD
>1867	Identifier	ES_NOHIDESEL
>1868	Identifier	ES_AUTOHSCROLL
>1869	Identifier	dwStyle
>1870	Identifier	dwStyle
>1871	IdentifierDeclType	DWORD
>1872	CompoundStatement	 
>1873	ExpressionStatement	 
>1874	CallExpression	m_wndEdit . DestroyWindow ( )
>1875	ArgumentList	 
>1876	Callee	m_wndEdit . DestroyWindow
>1877	MemberAccess	m_wndEdit . DestroyWindow
>1878	Identifier	DestroyWindow
>1879	Identifier	m_wndEdit
>1880	ExpressionStatement	 
>1881	CallExpression	m_wndEdit . GetWindowText ( str )
>1882	ArgumentList	str
>1883	Argument	str
>1884	Identifier	str
>1885	Callee	m_wndEdit . GetWindowText
>1886	MemberAccess	m_wndEdit . GetWindowText
>1887	Identifier	GetWindowText
>1888	Identifier	m_wndEdit
>1889	Statement	 
>1890	Statement	 
>1891	Statement	 
>1892	Statement	 
>1893	Statement	 
>1894	Statement	 
>1895	Statement	 
>1896	Statement	 
>1897	Statement	 
>1898	Statement	 
>1899	IdentifierDeclStatement	 
>1900	IdentifierDecl	str
>1901	Identifier	str
>1902	IdentifierDeclType	CString
>1903	CompoundStatement	 
>1904	ReturnStatement	 
>1905	Identifier	FALSE
>1906	ExpressionStatement	 
>1907	CallExpression	ASSERT ( FALSE )
>1908	ArgumentList	FALSE
>1909	Argument	FALSE
>1910	Identifier	FALSE
>1911	Callee	ASSERT
>1912	Identifier	ASSERT
>1913	Statement	 
>1914	Statement	 
>1915	Statement	 
>1916	Statement	 
>1917	Statement	 
>1918	Statement	 
>1919	Statement	 
>1920	Statement	 
>1921	Statement	 
>1949	FunctionDef	CBrowseCtrl 
>1950	ParameterList	UINT nNotifyMsgID
>1951	Parameter	 
>1952	Identifier	nNotifyMsgID
>1953	ParameterType	UINT
>1954	ReturnType	void
>1955	CompoundStatement	 
>1956	ExpressionStatement	 
>1957	AssignmentExpr	m_nNotifyMsg = nNotifyMsgID
>1958	Identifier	nNotifyMsgID
>1959	Identifier	m_nNotifyMsg
>1965	FunctionDef	CBrowseCtrl 
>1966	ParameterList	 
>1967	ReturnType	UINT
>1968	CompoundStatement	 
>1969	ReturnStatement	 
>1970	Identifier	m_nNotifyMsg
>1975	FunctionDef	CBrowseCtrl 
>1976	ParameterList	BOOL bOpen
>1977	Parameter	 
>1978	Identifier	bOpen
>1979	ParameterType	BOOL
>1980	ReturnType	void
>1981	CompoundStatement	 
>1982	ExpressionStatement	 
>1983	AssignmentExpr	m_bOpenFileDialog = bOpen
>1984	Identifier	bOpen
>1985	Identifier	m_bOpenFileDialog
>1991	FunctionDef	CBrowseCtrl 
>1992	ParameterList	 
>1993	ReturnType	BOOL
>1994	CompoundStatement	 
>1995	ReturnStatement	 
>1996	Identifier	m_bOpenFileDialog
>2001	FunctionDef	CBrowseCtrl 
>2002	ParameterList	LPCTSTR lpszDefExt
>2003	Parameter	 
>2004	Identifier	lpszDefExt
>2005	ParameterType	LPCTSTR
>2006	ReturnType	void
>2007	CompoundStatement	 
>2008	ExpressionStatement	 
>2009	AssignmentExpr	m_sDefExt = lpszDefExt
>2010	Identifier	lpszDefExt
>2011	Identifier	m_sDefExt
>2017	FunctionDef	CBrowseCtrl 
>2018	ParameterList	 
>2019	ReturnType	CString
>2020	CompoundStatement	 
>2021	ReturnStatement	 
>2022	Identifier	m_sDefExt
>2027	FunctionDef	CBrowseCtrl 
>2028	ParameterList	DWORD dwFlags
>2029	Parameter	 
>2030	Identifier	dwFlags
>2031	ParameterType	DWORD
>2032	ReturnType	void
>2033	CompoundStatement	 
>2034	ExpressionStatement	 
>2035	AssignmentExpr	m_dwFileFlags = dwFlags | OFN_EXPLORER
>2036	InclusiveOrExpression	dwFlags | OFN_EXPLORER
>2037	Identifier	OFN_EXPLORER
>2038	Identifier	dwFlags
>2039	Identifier	m_dwFileFlags
>2046	FunctionDef	CBrowseCtrl 
>2047	ParameterList	 
>2048	ReturnType	DWORD
>2049	CompoundStatement	 
>2050	ReturnStatement	 
>2051	Identifier	m_dwFileFlags
>2056	FunctionDef	CBrowseCtrl 
>2057	ParameterList	LPCTSTR lpszFilter
>2058	Parameter	 
>2059	Identifier	lpszFilter
>2060	ParameterType	LPCTSTR
>2061	ReturnType	void
>2062	CompoundStatement	 
>2063	ExpressionStatement	 
>2064	AssignmentExpr	m_sFilter = lpszFilter
>2065	Identifier	lpszFilter
>2066	Identifier	m_sFilter
>2072	FunctionDef	CBrowseCtrl 
>2073	ParameterList	 
>2074	ReturnType	CString
>2075	CompoundStatement	 
>2076	ReturnStatement	 
>2077	Identifier	m_sFilter
>2082	FunctionDef	CBrowseCtrl 
>2083	ParameterList	 
>2084	ReturnType	CString
>2085	CompoundStatement	 
>2086	ReturnStatement	 
>2087	Identifier	m_sTootipText
>2092	FunctionDef	CBrowseCtrl 
>2093	ParameterList	 
>2094	ReturnType	CString
>2095	CompoundStatement	 
>2096	ReturnStatement	 
>2097	ConditionalExpression	IsEditManuallyChanged ( ) ? m_sEditText 
>2098	CallExpression	CString ( m_lpszPathNames )
>2099	ArgumentList	m_lpszPathNames
>2100	Argument	m_lpszPathNames
>2101	Identifier	m_lpszPathNames
>2102	Callee	CString
>2103	Identifier	CString
>2104	Identifier	m_sEditText
>2105	Condition	IsEditManuallyChanged ( )
>2106	CallExpression	IsEditManuallyChanged ( )
>2107	ArgumentList	 
>2108	Callee	IsEditManuallyChanged
>2109	Identifier	IsEditManuallyChanged
>2117	FunctionDef	CBrowseCtrl 
>2118	ParameterList	 
>2119	ReturnType	CString
>2120	CompoundStatement	 
>2121	ReturnStatement	 
>2122	Identifier	str
>2123	ExpressionStatement	 
>2124	CallExpression	SplitPath ( GetPathName ( ) , NULL , NULL , & str , NULL , NULL )
>2125	ArgumentList	GetPathName ( )
>2126	Argument	NULL
>2127	Identifier	NULL
>2128	Argument	NULL
>2129	Identifier	NULL
>2130	Argument	& str
>2131	UnaryOp	& str
>2132	Identifier	str
>2133	UnaryOperator	&
>2134	Argument	NULL
>2135	Identifier	NULL
>2136	Argument	NULL
>2137	Identifier	NULL
>2138	Argument	GetPathName ( )
>2139	CallExpression	GetPathName ( )
>2140	ArgumentList	 
>2141	Callee	GetPathName
>2142	Identifier	GetPathName
>2143	Callee	SplitPath
>2144	Identifier	SplitPath
>2145	IdentifierDeclStatement	 
>2146	IdentifierDecl	str
>2147	Identifier	str
>2148	IdentifierDeclType	CString
>2149	IfStatement	if ( m_dwStyle & BC_CTL_FOLDERSONLY )
>2150	ReturnStatement	 
>2151	CallExpression	_T ( \"\" )
>2152	ArgumentList	\"\"
>2153	Argument	\"\"
>2154	PrimaryExpression	\"\"
>2155	Callee	_T
>2156	Identifier	_T
>2157	Condition	 
>2158	BitAndExpression	m_dwStyle & BC_CTL_FOLDERSONLY
>2159	Identifier	BC_CTL_FOLDERSONLY
>2160	Identifier	m_dwStyle
>2171	FunctionDef	CBrowseCtrl 
>2172	ParameterList	 
>2173	ReturnType	CString
>2174	CompoundStatement	 
>2175	ReturnStatement	 
>2176	Identifier	str
>2177	ExpressionStatement	 
>2178	CallExpression	SplitPath ( GetPathName ( ) , NULL , NULL , NULL , NULL , & str )
>2179	ArgumentList	GetPathName ( )
>2180	Argument	& str
>2181	UnaryOp	& str
>2182	Identifier	str
>2183	UnaryOperator	&
>2184	Argument	NULL
>2185	Identifier	NULL
>2186	Argument	NULL
>2187	Identifier	NULL
>2188	Argument	NULL
>2189	Identifier	NULL
>2190	Argument	NULL
>2191	Identifier	NULL
>2192	Argument	GetPathName ( )
>2193	CallExpression	GetPathName ( )
>2194	ArgumentList	 
>2195	Callee	GetPathName
>2196	Identifier	GetPathName
>2197	Callee	SplitPath
>2198	Identifier	SplitPath
>2199	IdentifierDeclStatement	 
>2200	IdentifierDecl	str
>2201	Identifier	str
>2202	IdentifierDeclType	CString
>2203	IfStatement	if ( m_dwStyle & BC_CTL_FOLDERSONLY )
>2204	ReturnStatement	 
>2205	CallExpression	_T ( \"\" )
>2206	ArgumentList	\"\"
>2207	Argument	\"\"
>2208	PrimaryExpression	\"\"
>2209	Callee	_T
>2210	Identifier	_T
>2211	Condition	 
>2212	BitAndExpression	m_dwStyle & BC_CTL_FOLDERSONLY
>2213	Identifier	BC_CTL_FOLDERSONLY
>2214	Identifier	m_dwStyle
>2225	FunctionDef	CBrowseCtrl 
>2226	ParameterList	 
>2227	ReturnType	CString
>2228	CompoundStatement	 
>2229	ReturnStatement	 
>2230	Identifier	str
>2231	ExpressionStatement	 
>2232	CallExpression	SplitPath ( GetPathName ( ) , NULL , NULL , NULL , & str , NULL )
>2233	ArgumentList	GetPathName ( )
>2234	Argument	NULL
>2235	Identifier	NULL
>2236	Argument	& str
>2237	UnaryOp	& str
>2238	Identifier	str
>2239	UnaryOperator	&
>2240	Argument	NULL
>2241	Identifier	NULL
>2242	Argument	NULL
>2243	Identifier	NULL
>2244	Argument	NULL
>2245	Identifier	NULL
>2246	Argument	GetPathName ( )
>2247	CallExpression	GetPathName ( )
>2248	ArgumentList	 
>2249	Callee	GetPathName
>2250	Identifier	GetPathName
>2251	Callee	SplitPath
>2252	Identifier	SplitPath
>2253	IdentifierDeclStatement	 
>2254	IdentifierDecl	str
>2255	Identifier	str
>2256	IdentifierDeclType	CString
>2257	IfStatement	if ( m_dwStyle & BC_CTL_FOLDERSONLY )
>2258	ReturnStatement	 
>2259	CallExpression	_T ( \"\" )
>2260	ArgumentList	\"\"
>2261	Argument	\"\"
>2262	PrimaryExpression	\"\"
>2263	Callee	_T
>2264	Identifier	_T
>2265	Condition	 
>2266	BitAndExpression	m_dwStyle & BC_CTL_FOLDERSONLY
>2267	Identifier	BC_CTL_FOLDERSONLY
>2268	Identifier	m_dwStyle
>2279	FunctionDef	CBrowseCtrl 
>2280	ParameterList	 
>2281	ReturnType	POSITION
>2282	CompoundStatement	 
>2283	IfStatement	if ( IsEditManuallyChanged ( ) )
>2284	ElseStatement	else
>2285	ReturnStatement	 
>2286	ConditionalExpression	( m_lpszPathNames == NULL || m_lpszPathNames [ 0 ] == _T ( '\0' ) ) ? NULL 
>2287	CastExpression	( POSITION ) ( LPCTSTR ) m_lpszPathNames
>2288	CastExpression	( LPCTSTR ) m_lpszPathNames
>2289	Identifier	m_lpszPathNames
>2290	CastTarget	LPCTSTR
>2291	CastTarget	POSITION
>2292	Identifier	NULL
>2293	Condition	m_lpszPathNames == NULL || m_lpszPathNames [ 0 ] == _T ( '\0' )
>2294	OrExpression	m_lpszPathNames == NULL || m_lpszPathNames [ 0 ] == _T ( '\0' )
>2295	EqualityExpression	m_lpszPathNames [ 0 ] == _T ( '\0' )
>2296	CallExpression	_T ( '\0' )
>2297	ArgumentList	'\0'
>2298	Argument	'\0'
>2299	PrimaryExpression	'\0'
>2300	Callee	_T
>2301	Identifier	_T
>2302	ArrayIndexing	m_lpszPathNames [ 0 ]
>2303	PrimaryExpression	0
>2304	Identifier	m_lpszPathNames
>2305	EqualityExpression	m_lpszPathNames == NULL
>2306	Identifier	NULL
>2307	Identifier	m_lpszPathNames
>2308	ReturnStatement	 
>2309	ConditionalExpression	m_sEditText . IsEmpty ( ) ? NULL 
>2310	CastExpression	( POSITION ) ( LPCTSTR ) m_sEditText
>2311	CastExpression	( LPCTSTR ) m_sEditText
>2312	Identifier	m_sEditText
>2313	CastTarget	LPCTSTR
>2314	CastTarget	POSITION
>2315	Identifier	NULL
>2316	Condition	m_sEditText . IsEmpty ( )
>2317	CallExpression	m_sEditText . IsEmpty ( )
>2318	ArgumentList	 
>2319	Callee	m_sEditText . IsEmpty
>2320	MemberAccess	m_sEditText . IsEmpty
>2321	Identifier	IsEmpty
>2322	Identifier	m_sEditText
>2323	Condition	 
>2324	CallExpression	IsEditManuallyChanged ( )
>2325	ArgumentList	 
>2326	Callee	IsEditManuallyChanged
>2327	Identifier	IsEditManuallyChanged
>2338	FunctionDef	CBrowseCtrl 
>2339	ParameterList	POSITION & pos
>2340	Parameter	 
>2341	Identifier	pos
>2342	ParameterType	POSITION &
>2343	ReturnType	CString
>2344	CompoundStatement	 
>2345	IfStatement	if ( LEN == 0 )
>2346	ElseStatement	else
>2347	CompoundStatement	 
>2348	ReturnStatement	 
>2349	Identifier	p
>2350	ExpressionStatement	 
>2351	AssignmentExpr	pos = ( POSITION ) ( & p [ LEN + 1 ] )
>2352	CastExpression	( POSITION ) ( & p [ LEN + 1 ] )
>2353	UnaryOp	& p [ LEN + 1 ]
>2354	ArrayIndexing	p [ LEN + 1 ]
>2355	AdditiveExpression	LEN + 1
>2356	PrimaryExpression	1
>2357	Identifier	LEN
>2358	Identifier	p
>2359	UnaryOperator	&
>2360	CastTarget	POSITION
>2361	Identifier	pos
>2362	CompoundStatement	 
>2363	ReturnStatement	 
>2364	CallExpression	_T ( \"\" )
>2365	ArgumentList	\"\"
>2366	Argument	\"\"
>2367	PrimaryExpression	\"\"
>2368	Callee	_T
>2369	Identifier	_T
>2370	ExpressionStatement	 
>2371	AssignmentExpr	pos = NULL
>2372	Identifier	NULL
>2373	Identifier	pos
>2374	Condition	 
>2375	EqualityExpression	LEN == 0
>2376	PrimaryExpression	0
>2377	Identifier	LEN
>2378	IdentifierDeclStatement	 
>2379	IdentifierDecl	LEN = _tcslen ( p )
>2380	AssignmentExpr	LEN = _tcslen ( p )
>2381	CallExpression	_tcslen ( p )
>2382	ArgumentList	p
>2383	Argument	p
>2384	Identifier	p
>2385	Callee	_tcslen
>2386	Identifier	_tcslen
>2387	Identifier	LEN
>2388	Identifier	LEN
>2389	IdentifierDeclType	const int
>2390	IdentifierDeclStatement	 
>2391	IdentifierDecl	p = ( LPCTSTR ) pos
>2392	AssignmentExpr	p = ( LPCTSTR ) pos
>2393	CastExpression	( LPCTSTR ) pos
>2394	Identifier	pos
>2395	CastTarget	LPCTSTR
>2396	Identifier	p
>2397	Identifier	p
>2398	IdentifierDeclType	LPCTSTR
>2399	IfStatement	if ( m_lpszPathNames == NULL || m_nPathNamesLen == 0 || m_nSelCount == 0 || ( DWORD ) pos < ( DWORD ) m_lpszPathNames || ( \
>2400	CompoundStatement	 
>2401	ReturnStatement	 
>2402	CallExpression	_T ( \"\" )
>2403	ArgumentList	\"\"
>2404	Argument	\"\"
>2405	PrimaryExpression	\"\"
>2406	Callee	_T
>2407	Identifier	_T
>2408	ExpressionStatement	 
>2409	AssignmentExpr	pos = NULL
>2410	Identifier	NULL
>2411	Identifier	pos
>2412	Condition	 
>2413	OrExpression	m_lpszPathNames == NULL || m_nPathNamesLen == 0 || m_nSelCount == 0 || ( DWORD ) pos < ( DWORD ) m_lpszPathNames || ( \
>2414	OrExpression	m_nPathNamesLen == 0 || m_nSelCount == 0 || ( DWORD ) pos < ( DWORD ) m_lpszPathNames || ( DWORD ) pos >= ( \
>2415	OrExpression	m_nSelCount == 0 || ( DWORD ) pos < ( DWORD ) m_lpszPathNames || ( DWORD ) pos >= ( DWORD ) m_lpszPathNames + ( \
>2416	OrExpression	( DWORD ) pos < ( DWORD ) m_lpszPathNames || ( DWORD ) pos >= ( DWORD ) m_lpszPathNames + ( DWORD ) \
>2417	RelationalExpression	( DWORD ) pos >= ( DWORD ) m_lpszPathNames + ( DWORD ) m_nPathNamesLen
>2418	AdditiveExpression	( DWORD ) m_lpszPathNames + ( DWORD ) m_nPathNamesLen
>2419	CastExpression	( DWORD ) m_nPathNamesLen
>2420	Identifier	m_nPathNamesLen
>2421	CastTarget	DWORD
>2422	CastExpression	( DWORD ) m_lpszPathNames
>2423	Identifier	m_lpszPathNames
>2424	CastTarget	DWORD
>2425	CastExpression	( DWORD ) pos
>2426	Identifier	pos
>2427	CastTarget	DWORD
>2428	RelationalExpression	( DWORD ) pos < ( DWORD ) m_lpszPathNames
>2429	CastExpression	( DWORD ) m_lpszPathNames
>2430	Identifier	m_lpszPathNames
>2431	CastTarget	DWORD
>2432	CastExpression	( DWORD ) pos
>2433	Identifier	pos
>2434	CastTarget	DWORD
>2435	EqualityExpression	m_nSelCount == 0
>2436	PrimaryExpression	0
>2437	Identifier	m_nSelCount
>2438	EqualityExpression	m_nPathNamesLen == 0
>2439	PrimaryExpression	0
>2440	Identifier	m_nPathNamesLen
>2441	EqualityExpression	m_lpszPathNames == NULL
>2442	Identifier	NULL
>2443	Identifier	m_lpszPathNames
>2444	IfStatement	if ( IsEditManuallyChanged ( ) )
>2445	CompoundStatement	 
>2446	ReturnStatement	 
>2447	ConditionalExpression	( DWORD ) posOrig == ( DWORD ) ( LPCTSTR ) m_sEditText ? m_sEditText 
>2448	CallExpression	_T ( \"\" )
>2449	ArgumentList	\"\"
>2450	Argument	\"\"
>2451	PrimaryExpression	\"\"
>2452	Callee	_T
>2453	Identifier	_T
>2454	Identifier	m_sEditText
>2455	Condition	( DWORD ) posOrig == ( DWORD ) ( LPCTSTR ) m_sEditText
>2456	EqualityExpression	( DWORD ) posOrig == ( DWORD ) ( LPCTSTR ) m_sEditText
>2457	CastExpression	( DWORD ) ( LPCTSTR ) m_sEditText
>2458	CastExpression	( LPCTSTR ) m_sEditText
>2459	Identifier	m_sEditText
>2460	CastTarget	LPCTSTR
>2461	CastTarget	DWORD
>2462	CastExpression	( DWORD ) posOrig
>2463	Identifier	posOrig
>2464	CastTarget	DWORD
>2465	ExpressionStatement	 
>2466	AssignmentExpr	pos = NULL
>2467	Identifier	NULL
>2468	Identifier	pos
>2469	IdentifierDeclStatement	 
>2470	IdentifierDecl	posOrig = pos
>2471	AssignmentExpr	posOrig = pos
>2472	Identifier	pos
>2473	Identifier	pos
>2474	Identifier	posOrig
>2475	IdentifierDeclType	POSITION
>2476	Condition	 
>2477	CallExpression	IsEditManuallyChanged ( )
>2478	ArgumentList	 
>2479	Callee	IsEditManuallyChanged
>2480	Identifier	IsEditManuallyChanged
>2481	IfStatement	if ( pos == NULL )
>2482	ReturnStatement	 
>2483	CallExpression	_T ( \"\" )
>2484	ArgumentList	\"\"
>2485	Argument	\"\"
>2486	PrimaryExpression	\"\"
>2487	Callee	_T
>2488	Identifier	_T
>2489	Condition	 
>2490	EqualityExpression	pos == NULL
>2491	Identifier	NULL
>2492	Identifier	pos
>2510	FunctionDef	CBrowseCtrl 
>2511	ParameterList	 
>2512	ReturnType	BOOL
>2513	CompoundStatement	 
>2514	ReturnStatement	 
>2515	Identifier	m_bReadOnlyRef
>2520	FunctionDef	CBrowseCtrl 
>2521	ParameterList	const RECT & rect , CWnd * pParentWnd , UINT nID , DWORD dwBtnStyles , UINT nNotifyMessageID
>2522	Parameter	 
>2523	Identifier	nNotifyMessageID
>2524	ParameterType	UINT
>2525	Parameter	 
>2526	Identifier	dwBtnStyles
>2527	ParameterType	DWORD
>2528	Parameter	 
>2529	Identifier	nID
>2530	ParameterType	UINT
>2531	Parameter	 
>2532	Identifier	pParentWnd
>2533	ParameterType	CWnd *
>2534	Parameter	 
>2535	Identifier	rect
>2536	ParameterType	const RECT &
>2537	ReturnType	BOOL
>2538	CompoundStatement	 
>2539	ReturnStatement	 
>2540	CallExpression	CreateCtrl ( )
>2541	ArgumentList	 
>2542	Callee	CreateCtrl
>2543	Identifier	CreateCtrl
>2544	ExpressionStatement	 
>2545	AssignmentExpr	m_dwStyle = dwBtnStyles
>2546	Identifier	dwBtnStyles
>2547	Identifier	m_dwStyle
>2548	IfStatement	if ( ! CButton 
>2549	CompoundStatement	 
>2550	ReturnStatement	 
>2551	Identifier	FALSE
>2552	ExpressionStatement	 
>2553	CallExpression	ASSERT ( FALSE )
>2554	ArgumentList	FALSE
>2555	Argument	FALSE
>2556	Identifier	FALSE
>2557	Callee	ASSERT
>2558	Identifier	ASSERT
>2559	Condition	 
>2560	UnaryOp	! CButton 
>2561	CallExpression	CButton 
>2562	ArgumentList	_T ( \"\" )
>2563	Argument	nID
>2564	Identifier	nID
>2565	Argument	pParentWnd
>2566	Identifier	pParentWnd
>2567	Argument	rect
>2568	Identifier	rect
>2569	Argument	WS_CHILD | WS_VISIBLE | WS_TABSTOP | BS_PUSHBUTTON
>2570	InclusiveOrExpression	WS_CHILD | WS_VISIBLE | WS_TABSTOP | BS_PUSHBUTTON
>2571	InclusiveOrExpression	WS_VISIBLE | WS_TABSTOP | BS_PUSHBUTTON
>2572	InclusiveOrExpression	WS_TABSTOP | BS_PUSHBUTTON
>2573	Identifier	BS_PUSHBUTTON
>2574	Identifier	WS_TABSTOP
>2575	Identifier	WS_VISIBLE
>2576	Identifier	WS_CHILD
>2577	Argument	_T ( \"\" )
>2578	CallExpression	_T ( \"\" )
>2579	ArgumentList	\"\"
>2580	Argument	\"\"
>2581	PrimaryExpression	\"\"
>2582	Callee	_T
>2583	Identifier	_T
>2584	Callee	CButton 
>2585	Identifier	CButton 
>2586	UnaryOperator	!
>2587	ExpressionStatement	 
>2588	AssignmentExpr	m_nNotifyMsg = nNotifyMessageID
>2589	Identifier	nNotifyMessageID
>2590	Identifier	m_nNotifyMsg
>2591	ExpressionStatement	 
>2592	AssignmentExpr	m_bOwnCreate = TRUE
>2593	Identifier	TRUE
>2594	Identifier	m_bOwnCreate
>2595	IfStatement	if ( pParentWnd == NULL )
>2596	CompoundStatement	 
>2597	IfStatement	if ( pParentWnd == NULL )
>2598	CompoundStatement	 
>2599	ReturnStatement	 
>2600	Identifier	FALSE
>2601	ExpressionStatement	 
>2602	CallExpression	ASSERT ( FALSE )
>2603	ArgumentList	FALSE
>2604	Argument	FALSE
>2605	Identifier	FALSE
>2606	Callee	ASSERT
>2607	Identifier	ASSERT
>2608	Condition	 
>2609	EqualityExpression	pParentWnd == NULL
>2610	Identifier	NULL
>2611	Identifier	pParentWnd
>2612	ExpressionStatement	 
>2613	AssignmentExpr	pParentWnd = AfxGetMainWnd ( )
>2614	CallExpression	AfxGetMainWnd ( )
>2615	ArgumentList	 
>2616	Callee	AfxGetMainWnd
>2617	Identifier	AfxGetMainWnd
>2618	Identifier	pParentWnd
>2619	Condition	 
>2620	EqualityExpression	pParentWnd == NULL
>2621	Identifier	NULL
>2622	Identifier	pParentWnd
>2645	FunctionDef	CBrowseCtrl 
>2646	ParameterList	LPCTSTR lpszPathName
>2647	Parameter	 
>2648	Identifier	lpszPathName
>2649	ParameterType	LPCTSTR
>2650	ReturnType	void
>2651	CompoundStatement	 
>2652	IfStatement	if ( lpszPathName != NULL )
>2653	ExpressionStatement	 
>2654	AssignmentExpr	m_lpszPathNames = _tcsdup ( lpszPathName )
>2655	CallExpression	_tcsdup ( lpszPathName )
>2656	ArgumentList	lpszPathName
>2657	Argument	lpszPathName
>2658	Identifier	lpszPathName
>2659	Callee	_tcsdup
>2660	Identifier	_tcsdup
>2661	Identifier	m_lpszPathNames
>2662	Condition	 
>2663	EqualityExpression	lpszPathName != NULL
>2664	Identifier	NULL
>2665	Identifier	lpszPathName
>2666	IfStatement	if ( m_lpszPathNames != NULL )
>2667	CompoundStatement	 
>2668	ExpressionStatement	 
>2669	AssignmentExpr	m_lpszPathNames = NULL
>2670	Identifier	NULL
>2671	Identifier	m_lpszPathNames
>2672	ExpressionStatement	 
>2673	Identifier	m_lpszPathNames
>2674	Statement	 
>2675	Statement	 
>2676	Statement	 
>2677	Condition	 
>2678	EqualityExpression	m_lpszPathNames != NULL
>2679	Identifier	NULL
>2680	Identifier	m_lpszPathNames
>2681	ExpressionStatement	 
>2682	CallExpression	m_wndEdit . SetWindowText ( lpszPathName )
>2683	ArgumentList	lpszPathName
>2684	Argument	lpszPathName
>2685	Identifier	lpszPathName
>2686	Callee	m_wndEdit . SetWindowText
>2687	MemberAccess	m_wndEdit . SetWindowText
>2688	Identifier	SetWindowText
>2689	Identifier	m_wndEdit
>2690	Statement	 
>2691	Statement	 
>2692	Statement	 
>2693	Statement	 
>2694	Statement	 
>2695	Statement	 
>2696	Statement	 
>2697	Statement	 
>2698	Statement	 
>2699	Statement	 
>2708	FunctionDef	CBrowseCtrl 
>2709	ParameterList	HWND hwnd , UINT nMsg , LPARAM lParam , LPARAM lpData
>2710	Parameter	 
>2711	Identifier	lpData
>2712	ParameterType	LPARAM
>2713	Parameter	 
>2714	Identifier	lParam
>2715	ParameterType	LPARAM
>2716	Parameter	 
>2717	Identifier	nMsg
>2718	ParameterType	UINT
>2719	Parameter	 
>2720	Identifier	hwnd
>2721	ParameterType	HWND
>2722	ReturnType	int
>2723	CompoundStatement	 
>2724	ReturnStatement	 
>2725	PrimaryExpression	0
>2726	IfStatement	if ( nMsg == BFFM_INITIALIZED )
>2727	CompoundStatement	 
>2728	ExpressionStatement	 
>2729	CallExpression	SendMessage ( hwnd , BFFM_SETSELECTION , TRUE , ( LPARAM ) ( LPCTSTR ) sPathName )
>2730	ArgumentList	hwnd
>2731	Argument	( LPARAM ) ( LPCTSTR ) sPathName
>2732	CastExpression	( LPARAM ) ( LPCTSTR ) sPathName
>2733	CastExpression	( LPCTSTR ) sPathName
>2734	Identifier	sPathName
>2735	CastTarget	LPCTSTR
>2736	CastTarget	LPARAM
>2737	Argument	TRUE
>2738	Identifier	TRUE
>2739	Argument	BFFM_SETSELECTION
>2740	Identifier	BFFM_SETSELECTION
>2741	Argument	hwnd
>2742	Identifier	hwnd
>2743	Callee	SendMessage
>2744	Identifier	SendMessage
>2745	IfStatement	if ( ! sPathName . IsEmpty ( ) )
>2746	Statement	 
>2747	Condition	 
>2748	UnaryOp	! sPathName . IsEmpty ( )
>2749	CallExpression	sPathName . IsEmpty ( )
>2750	ArgumentList	 
>2751	Callee	sPathName . IsEmpty
>2752	MemberAccess	sPathName . IsEmpty
>2753	Identifier	IsEmpty
>2754	Identifier	sPathName
>2755	UnaryOperator	!
>2756	IdentifierDeclStatement	 
>2757	IdentifierDecl	sPathName = pCtrl -> GetPathName ( )
>2758	AssignmentExpr	sPathName = pCtrl -> GetPathName ( )
>2759	CallExpression	pCtrl -> GetPathName ( )
>2760	ArgumentList	 
>2761	Callee	pCtrl -> GetPathName
>2762	PtrMemberAccess	pCtrl -> GetPathName
>2763	Identifier	GetPathName
>2764	Identifier	pCtrl
>2765	Identifier	sPathName
>2766	Identifier	sPathName
>2767	IdentifierDeclType	CString
>2768	ExpressionStatement	 
>2769	CallExpression	SetWindowText ( hwnd , pCtrl -> m_sDlgTitle )
>2770	ArgumentList	hwnd
>2771	Argument	pCtrl -> m_sDlgTitle
>2772	PtrMemberAccess	pCtrl -> m_sDlgTitle
>2773	Identifier	m_sDlgTitle
>2774	Identifier	pCtrl
>2775	Argument	hwnd
>2776	Identifier	hwnd
>2777	Callee	SetWindowText
>2778	Identifier	SetWindowText
>2779	IfStatement	if ( ! pCtrl -> m_sDlgTitle . IsEmpty ( ) )
>2780	Statement	 
>2781	Condition	 
>2782	UnaryOp	! pCtrl -> m_sDlgTitle . IsEmpty ( )
>2783	CallExpression	pCtrl -> m_sDlgTitle . IsEmpty ( )
>2784	ArgumentList	 
>2785	Callee	pCtrl -> m_sDlgTitle . IsEmpty
>2786	MemberAccess	pCtrl -> m_sDlgTitle . IsEmpty
>2787	Identifier	IsEmpty
>2788	PtrMemberAccess	pCtrl -> m_sDlgTitle
>2789	Identifier	m_sDlgTitle
>2790	Identifier	pCtrl
>2791	UnaryOperator	!
>2792	Condition	 
>2793	EqualityExpression	nMsg == BFFM_INITIALIZED
>2794	Identifier	BFFM_INITIALIZED
>2795	Identifier	nMsg
>2796	IfStatement	if ( pCtrl == NULL )
>2797	ReturnStatement	 
>2798	PrimaryExpression	0
>2799	Condition	 
>2800	EqualityExpression	pCtrl == NULL
>2801	Identifier	NULL
>2802	Identifier	pCtrl
>2803	IdentifierDeclStatement	 
>2804	IdentifierDecl	* pCtrl = ( CBrowseCtrl * ) ( lpData )
>2805	AssignmentExpr	* pCtrl = ( CBrowseCtrl * ) ( lpData )
>2806	CastExpression	( CBrowseCtrl * ) ( lpData )
>2807	Identifier	lpData
>2808	CastTarget	CBrowseCtrl *
>2809	Identifier	pCtrl
>2810	Identifier	pCtrl
>2811	IdentifierDeclType	CBrowseCtrl *
>2812	ExpressionStatement	 
>2813	AssignmentExpr	lParam = 0
>2814	PrimaryExpression	0
>2815	Identifier	lParam
>2834	FunctionDef	CBrowseCtrl 
>2835	ParameterList	UINT nFlags
>2836	Parameter	 
>2837	Identifier	nFlags
>2838	ParameterType	UINT
>2839	ReturnType	void
>2840	CompoundStatement	 
>2841	ExpressionStatement	 
>2842	AssignmentExpr	m_nFolderFlags = nFlags
>2843	Identifier	nFlags
>2844	Identifier	m_nFolderFlags
>2850	FunctionDef	CBrowseCtrl 
>2851	ParameterList	 
>2852	ReturnType	UINT
>2853	CompoundStatement	 
>2854	ReturnStatement	 
>2855	Identifier	m_nFolderFlags
>2860	FunctionDef	CBrowseCtrl 
>2861	ParameterList	 
>2862	ReturnType	int
>2863	CompoundStatement	 
>2864	ReturnStatement	 
>2865	Identifier	IDOK
>2866	ExpressionStatement	 
>2867	AssignmentExpr	m_sEditText = m_lpszPathNames
>2868	Identifier	m_lpszPathNames
>2869	Identifier	m_sEditText
>2870	ExpressionStatement	 
>2871	AssignmentExpr	m_bEditChanged = FALSE
>2872	Identifier	FALSE
>2873	Identifier	m_bEditChanged
>2874	CompoundStatement	 
>2875	ExpressionStatement	 
>2876	CallExpression	m_wndEdit . SetSel ( 0 , - 1 )
>2877	ArgumentList	0
>2878	Argument	- 1
>2879	UnaryOp	- 1
>2880	PrimaryExpression	1
>2881	UnaryOperator	-
>2882	Argument	0
>2883	PrimaryExpression	0
>2884	Callee	m_wndEdit . SetSel
>2885	MemberAccess	m_wndEdit . SetSel
>2886	Identifier	SetSel
>2887	Identifier	m_wndEdit
>2888	ExpressionStatement	 
>2889	CallExpression	m_wndEdit . SetWindowText ( m_lpszPathNames )
>2890	ArgumentList	m_lpszPathNames
>2891	Argument	m_lpszPathNames
>2892	Identifier	m_lpszPathNames
>2893	Callee	m_wndEdit . SetWindowText
>2894	MemberAccess	m_wndEdit . SetWindowText
>2895	Identifier	SetWindowText
>2896	Identifier	m_wndEdit
>2897	Statement	 
>2898	Statement	 
>2899	Statement	 
>2900	Statement	 
>2901	Statement	 
>2902	Statement	 
>2903	Statement	 
>2904	Statement	 
>2905	Statement	 
>2906	Statement	 
>2907	ExpressionStatement	 
>2908	AssignmentExpr	m_bReadOnlyRef = FALSE
>2909	Identifier	FALSE
>2910	Identifier	m_bReadOnlyRef
>2911	ExpressionStatement	 
>2912	AssignmentExpr	m_nPathNamesLen = _tcslen ( m_lpszPathNames )
>2913	CallExpression	_tcslen ( m_lpszPathNames )
>2914	ArgumentList	m_lpszPathNames
>2915	Argument	m_lpszPathNames
>2916	Identifier	m_lpszPathNames
>2917	Callee	_tcslen
>2918	Identifier	_tcslen
>2919	Identifier	m_nPathNamesLen
>2920	CompoundStatement	 
>2921	ExpressionStatement	 
>2922	CallExpression	pMalloc -> Release ( )
>2923	ArgumentList	 
>2924	Callee	pMalloc -> Release
>2925	PtrMemberAccess	pMalloc -> Release
>2926	Identifier	Release
>2927	Identifier	pMalloc
>2928	ExpressionStatement	 
>2929	CallExpression	pMalloc -> Free ( pItemIDList )
>2930	ArgumentList	pItemIDList
>2931	Argument	pItemIDList
>2932	Identifier	pItemIDList
>2933	Callee	pMalloc -> Free
>2934	PtrMemberAccess	pMalloc -> Free
>2935	Identifier	Free
>2936	Identifier	pMalloc
>2937	Statement	 
>2938	Statement	 
>2939	Statement	 
>2940	Statement	 
>2941	Statement	 
>2942	Statement	 
>2943	Statement	 
>2944	Statement	 
>2945	Statement	 
>2946	Statement	 
>2947	Statement	 
>2948	Statement	 
>2949	IdentifierDeclStatement	 
>2950	IdentifierDecl	* pMalloc = NULL
>2951	AssignmentExpr	* pMalloc = NULL
>2952	Identifier	NULL
>2953	Identifier	NULL
>2954	Identifier	pMalloc
>2955	IdentifierDeclType	IMalloc *
>2956	ExpressionStatement	 
>2957	CallExpression	SHGetPathFromIDList ( pItemIDList , m_lpszPathNames )
>2958	ArgumentList	pItemIDList
>2959	Argument	m_lpszPathNames
>2960	Identifier	m_lpszPathNames
>2961	Argument	pItemIDList
>2962	Identifier	pItemIDList
>2963	Callee	SHGetPathFromIDList
>2964	Identifier	SHGetPathFromIDList
>2965	Statement	 
>2966	ExpressionStatement	 
>2967	CallExpression	memset ( m_lpszPathNames , 0 , ( MAX_PATH + 2 ) * sizeof ( TCHAR ) )
>2968	ArgumentList	m_lpszPathNames
>2969	Argument	( MAX_PATH + 2 ) * sizeof ( TCHAR )
>2970	MultiplicativeExpression	( MAX_PATH + 2 ) * sizeof ( TCHAR )
>2971	SizeofExpr	sizeof ( TCHAR )
>2972	SizeofOperand	TCHAR
>2973	Sizeof	sizeof
>2974	AdditiveExpression	MAX_PATH + 2
>2975	PrimaryExpression	2
>2976	Identifier	MAX_PATH
>2977	Argument	0
>2978	PrimaryExpression	0
>2979	Argument	m_lpszPathNames
>2980	Identifier	m_lpszPathNames
>2981	Callee	memset
>2982	Identifier	memset
>2983	ExpressionStatement	 
>2984	AssignmentExpr	m_lpszPathNames = new TCHAR [ MAX_PATH + 2 ]
>2985	AdditiveExpression	MAX_PATH + 2
>2986	PrimaryExpression	2
>2987	Identifier	MAX_PATH
>2988	Identifier	m_lpszPathNames
>2989	IfStatement	if ( m_lpszPathNames != NULL )
>2990	CompoundStatement	 
>2991	ExpressionStatement	 
>2992	AssignmentExpr	m_lpszPathNames = NULL
>2993	Identifier	NULL
>2994	Identifier	m_lpszPathNames
>2995	ExpressionStatement	 
>2996	Identifier	m_lpszPathNames
>2997	Statement	 
>2998	Statement	 
>2999	Statement	 
>3000	Condition	 
>3001	EqualityExpression	m_lpszPathNames != NULL
>3002	Identifier	NULL
>3003	Identifier	m_lpszPathNames
>3004	ExpressionStatement	 
>3005	AssignmentExpr	m_nSelCount = 1
>3006	PrimaryExpression	1
>3007	Identifier	m_nSelCount
>3008	IfStatement	if ( pItemIDList == NULL )
>3009	ReturnStatement	 
>3010	Identifier	IDCANCEL
>3011	Condition	 
>3012	EqualityExpression	pItemIDList == NULL
>3013	Identifier	NULL
>3014	Identifier	pItemIDList
>3015	ExpressionStatement	 
>3016	CallExpression	SHBrowseForFolder ( & bi )
>3017	ArgumentList	& bi
>3018	Argument	& bi
>3019	UnaryOp	& bi
>3020	Identifier	bi
>3021	UnaryOperator	&
>3022	Callee	SHBrowseForFolder
>3023	Identifier	SHBrowseForFolder
>3024	Statement	 
>3025	Statement	 
>3026	Statement	 
>3027	Statement	 
>3028	ExpressionStatement	 
>3029	AssignmentExpr	bi . lParam = ( LPARAM ) this
>3030	CastExpression	( LPARAM ) this
>3031	Identifier	this
>3032	CastTarget	LPARAM
>3033	MemberAccess	bi . lParam
>3034	Identifier	lParam
>3035	Identifier	bi
>3036	ExpressionStatement	 
>3037	AssignmentExpr	bi . lpfn = BrowseCallbackProc
>3038	Identifier	BrowseCallbackProc
>3039	MemberAccess	bi . lpfn
>3040	Identifier	lpfn
>3041	Identifier	bi
>3042	ExpressionStatement	 
>3043	AssignmentExpr	bi . ulFlags = m_nFolderFlags
>3044	Identifier	m_nFolderFlags
>3045	MemberAccess	bi . ulFlags
>3046	Identifier	ulFlags
>3047	Identifier	bi
>3048	ExpressionStatement	 
>3049	AssignmentExpr	bi . lpszTitle = m_sDlgBanner
>3050	Identifier	m_sDlgBanner
>3051	MemberAccess	bi . lpszTitle
>3052	Identifier	lpszTitle
>3053	Identifier	bi
>3054	ExpressionStatement	 
>3055	AssignmentExpr	bi . pszDisplayName = szPathName
>3056	Identifier	szPathName
>3057	MemberAccess	bi . pszDisplayName
>3058	Identifier	pszDisplayName
>3059	Identifier	bi
>3060	ExpressionStatement	 
>3061	CallExpression	GetParent ( m_hWnd )
>3062	ArgumentList	m_hWnd
>3063	Argument	m_hWnd
>3064	Identifier	m_hWnd
>3065	Callee	GetParent
>3066	Identifier	GetParent
>3067	Statement	 
>3068	Statement	 
>3069	Statement	 
>3070	Statement	 
>3071	Statement	 
>3072	ExpressionStatement	 
>3073	CallExpression	memset ( & bi , 0 , sizeof ( BROWSEINFO ) )
>3074	ArgumentList	& bi
>3075	Argument	sizeof ( BROWSEINFO )
>3076	SizeofExpr	sizeof ( BROWSEINFO )
>3077	SizeofOperand	BROWSEINFO
>3078	Sizeof	sizeof
>3079	Argument	0
>3080	PrimaryExpression	0
>3081	Argument	& bi
>3082	UnaryOp	& bi
>3083	Identifier	bi
>3084	UnaryOperator	&
>3085	Callee	memset
>3086	Identifier	memset
>3087	IdentifierDeclStatement	 
>3088	IdentifierDecl	bi
>3089	Identifier	bi
>3090	IdentifierDeclType	BROWSEINFO
>3091	IdentifierDeclStatement	 
>3092	IdentifierDecl	szPathName [ MAX_PATH + 1 ] = _T ( \"\" )
>3093	AssignmentExpr	szPathName [ MAX_PATH + 1 ] = _T ( \"\" )
>3094	CallExpression	_T ( \"\" )
>3095	ArgumentList	\"\"
>3096	Argument	\"\"
>3097	PrimaryExpression	\"\"
>3098	Callee	_T
>3099	Identifier	_T
>3100	Identifier	szPathName
>3101	AdditiveExpression	MAX_PATH + 1
>3102	PrimaryExpression	1
>3103	Identifier	MAX_PATH
>3104	Identifier	szPathName
>3105	IdentifierDeclType	TCHAR [ MAX_PATH + 1 ]
>3138	FunctionDef	CBrowseCtrl 
>3139	ParameterList	 
>3140	ReturnType	int
>3141	CompoundStatement	 
>3142	ReturnStatement	 
>3143	Identifier	IDOK
>3144	ExpressionStatement	 
>3145	AssignmentExpr	m_sEditText = m_lpszPathNames
>3146	Identifier	m_lpszPathNames
>3147	Identifier	m_sEditText
>3148	ExpressionStatement	 
>3149	AssignmentExpr	m_bEditChanged = FALSE
>3150	Identifier	FALSE
>3151	Identifier	m_bEditChanged
>3152	CompoundStatement	 
>3153	ExpressionStatement	 
>3154	CallExpression	m_wndEdit . SetSel ( 0 , - 1 )
>3155	ArgumentList	0
>3156	Argument	- 1
>3157	UnaryOp	- 1
>3158	PrimaryExpression	1
>3159	UnaryOperator	-
>3160	Argument	0
>3161	PrimaryExpression	0
>3162	Callee	m_wndEdit . SetSel
>3163	MemberAccess	m_wndEdit . SetSel
>3164	Identifier	SetSel
>3165	Identifier	m_wndEdit
>3166	ExpressionStatement	 
>3167	CallExpression	m_wndEdit . SetWindowText ( m_lpszPathNames )
>3168	ArgumentList	m_lpszPathNames
>3169	Argument	m_lpszPathNames
>3170	Identifier	m_lpszPathNames
>3171	Callee	m_wndEdit . SetWindowText
>3172	MemberAccess	m_wndEdit . SetWindowText
>3173	Identifier	SetWindowText
>3174	Identifier	m_wndEdit
>3175	Statement	 
>3176	Statement	 
>3177	Statement	 
>3178	Statement	 
>3179	Statement	 
>3180	Statement	 
>3181	Statement	 
>3182	Statement	 
>3183	Statement	 
>3184	Statement	 
>3185	ExpressionStatement	 
>3186	AssignmentExpr	m_bReadOnlyRef = dlg . GetReadOnlyPref ( )
>3187	CallExpression	dlg . GetReadOnlyPref ( )
>3188	ArgumentList	 
>3189	Callee	dlg . GetReadOnlyPref
>3190	MemberAccess	dlg . GetReadOnlyPref
>3191	Identifier	GetReadOnlyPref
>3192	Identifier	dlg
>3193	Identifier	m_bReadOnlyRef
>3194	ExpressionStatement	 
>3195	Identifier	pszLargeBuffer
>3196	Statement	 
>3197	Statement	 
>3198	Statement	 
>3199	ExpressionStatement	 
>3200	AssignmentExpr	m_lpszPathNames [ m_nPathNamesLen - 1 ] = _T ( '\0' )
>3201	CallExpression	_T ( '\0' )
>3202	ArgumentList	'\0'
>3203	Argument	'\0'
>3204	PrimaryExpression	'\0'
>3205	Callee	_T
>3206	Identifier	_T
>3207	ArrayIndexing	m_lpszPathNames [ m_nPathNamesLen - 1 ]
>3208	AdditiveExpression	m_nPathNamesLen - 1
>3209	PrimaryExpression	1
>3210	Identifier	m_nPathNamesLen
>3211	Identifier	m_lpszPathNames
>3212	WhileStatement	while ( pos != NULL )
>3213	CompoundStatement	 
>3214	ExpressionStatement	 
>3215	AssignmentExpr	lpDes = & lpDes [ str . GetLength ( ) + 1 ]
>3216	UnaryOp	& lpDes [ str . GetLength ( ) + 1 ]
>3217	ArrayIndexing	lpDes [ str . GetLength ( ) + 1 ]
>3218	AdditiveExpression	str . GetLength ( ) + 1
>3219	PrimaryExpression	1
>3220	CallExpression	str . GetLength ( )
>3221	ArgumentList	 
>3222	Callee	str . GetLength
>3223	MemberAccess	str . GetLength
>3224	Identifier	GetLength
>3225	Identifier	str
>3226	Identifier	lpDes
>3227	UnaryOperator	&
>3228	Identifier	lpDes
>3229	ExpressionStatement	 
>3230	CallExpression	_tcscpy_s ( lpDes , m_nPathNamesLen , str )
>3231	ArgumentList	lpDes
>3232	Argument	str
>3233	Identifier	str
>3234	Argument	m_nPathNamesLen
>3235	Identifier	m_nPathNamesLen
>3236	Argument	lpDes
>3237	Identifier	lpDes
>3238	Callee	_tcscpy_s
>3239	Identifier	_tcscpy_s
>3240	IdentifierDeclStatement	 
>3241	IdentifierDecl	str = dlg . GetNextPathName ( pos )
>3242	AssignmentExpr	str = dlg . GetNextPathName ( pos )
>3243	CallExpression	dlg . GetNextPathName ( pos )
>3244	ArgumentList	pos
>3245	Argument	pos
>3246	Identifier	pos
>3247	Callee	dlg . GetNextPathName
>3248	MemberAccess	dlg . GetNextPathName
>3249	Identifier	GetNextPathName
>3250	Identifier	dlg
>3251	Identifier	str
>3252	Identifier	str
>3253	IdentifierDeclType	CString
>3254	Condition	 
>3255	EqualityExpression	pos != NULL
>3256	Identifier	NULL
>3257	Identifier	pos
>3258	ExpressionStatement	 
>3259	AssignmentExpr	pos = dlg . GetStartPosition ( )
>3260	CallExpression	dlg . GetStartPosition ( )
>3261	ArgumentList	 
>3262	Callee	dlg . GetStartPosition
>3263	MemberAccess	dlg . GetStartPosition
>3264	Identifier	GetStartPosition
>3265	Identifier	dlg
>3266	Identifier	pos
>3267	IdentifierDeclStatement	 
>3268	IdentifierDecl	lpDes = m_lpszPathNames
>3269	AssignmentExpr	lpDes = m_lpszPathNames
>3270	Identifier	m_lpszPathNames
>3271	Identifier	m_lpszPathNames
>3272	Identifier	lpDes
>3273	IdentifierDeclType	LPTSTR
>3274	ExpressionStatement	 
>3275	AssignmentExpr	m_lpszPathNames = new TCHAR [ m_nPathNamesLen ]
>3276	Identifier	m_nPathNamesLen
>3277	Identifier	m_lpszPathNames
>3278	ExpressionStatement	 
>3279	IncDecOp	m_nPathNamesLen ++
>3280	IncDec	++
>3281	Identifier	m_nPathNamesLen
>3282	WhileStatement	while ( pos != NULL )
>3283	CompoundStatement	 
>3284	ExpressionStatement	 
>3285	AssignmentExpr	m_nPathNamesLen += dlg . GetNextPathName ( pos ) . GetLength ( ) + 1
>3286	AdditiveExpression	dlg . GetNextPathName ( pos ) . GetLength ( ) + 1
>3287	PrimaryExpression	1
>3288	CallExpression	dlg . GetNextPathName ( pos ) . GetLength ( )
>3289	ArgumentList	 
>3290	Callee	dlg . GetNextPathName ( pos ) . GetLength
>3291	MemberAccess	dlg . GetNextPathName ( pos ) . GetLength
>3292	Identifier	GetLength
>3293	CallExpression	dlg . GetNextPathName ( pos )
>3294	ArgumentList	pos
>3295	Argument	pos
>3296	Identifier	pos
>3297	Callee	dlg . GetNextPathName
>3298	MemberAccess	dlg . GetNextPathName
>3299	Identifier	GetNextPathName
>3300	Identifier	dlg
>3301	Identifier	m_nPathNamesLen
>3302	ExpressionStatement	 
>3303	IncDecOp	m_nSelCount ++
>3304	IncDec	++
>3305	Identifier	m_nSelCount
>3306	Condition	 
>3307	EqualityExpression	pos != NULL
>3308	Identifier	NULL
>3309	Identifier	pos
>3310	ExpressionStatement	 
>3311	AssignmentExpr	m_nPathNamesLen = 0
>3312	PrimaryExpression	0
>3313	Identifier	m_nPathNamesLen
>3314	ExpressionStatement	 
>3315	AssignmentExpr	m_nSelCount = 0
>3316	PrimaryExpression	0
>3317	Identifier	m_nSelCount
>3318	IdentifierDeclStatement	 
>3319	IdentifierDecl	pos = dlg . GetStartPosition ( )
>3320	AssignmentExpr	pos = dlg . GetStartPosition ( )
>3321	CallExpression	dlg . GetStartPosition ( )
>3322	ArgumentList	 
>3323	Callee	dlg . GetStartPosition
>3324	MemberAccess	dlg . GetStartPosition
>3325	Identifier	GetStartPosition
>3326	Identifier	dlg
>3327	Identifier	pos
>3328	Identifier	pos
>3329	IdentifierDeclType	POSITION
>3330	IfStatement	if ( m_lpszPathNames != NULL )
>3331	CompoundStatement	 
>3332	ExpressionStatement	 
>3333	AssignmentExpr	m_lpszPathNames = NULL
>3334	Identifier	NULL
>3335	Identifier	m_lpszPathNames
>3336	ExpressionStatement	 
>3337	Identifier	m_lpszPathNames
>3338	Statement	 
>3339	Statement	 
>3340	Statement	 
>3341	Condition	 
>3342	EqualityExpression	m_lpszPathNames != NULL
>3343	Identifier	NULL
>3344	Identifier	m_lpszPathNames
>3345	IfStatement	if ( dlg . DoModal ( ) != IDOK )
>3346	CompoundStatement	 
>3347	ReturnStatement	 
>3348	Identifier	IDCANCEL
>3349	ExpressionStatement	 
>3350	Identifier	pszLargeBuffer
>3351	Statement	 
>3352	Statement	 
>3353	Statement	 
>3354	Condition	 
>3355	EqualityExpression	dlg . DoModal ( ) != IDOK
>3356	Identifier	IDOK
>3357	CallExpression	dlg . DoModal ( )
>3358	ArgumentList	 
>3359	Callee	dlg . DoModal
>3360	MemberAccess	dlg . DoModal
>3361	Identifier	DoModal
>3362	Identifier	dlg
>3363	ExpressionStatement	 
>3364	AssignmentExpr	dlg . m_ofn . nMaxFile = MAX_SUM_PATHNAME
>3365	Identifier	MAX_SUM_PATHNAME
>3366	MemberAccess	dlg . m_ofn . nMaxFile
>3367	Identifier	nMaxFile
>3368	MemberAccess	dlg . m_ofn
>3369	Identifier	m_ofn
>3370	Identifier	dlg
>3371	ExpressionStatement	 
>3372	AssignmentExpr	dlg . m_ofn . lpstrFile = pszLargeBuffer
>3373	Identifier	pszLargeBuffer
>3374	MemberAccess	dlg . m_ofn . lpstrFile
>3375	Identifier	lpstrFile
>3376	MemberAccess	dlg . m_ofn
>3377	Identifier	m_ofn
>3378	Identifier	dlg
>3379	ExpressionStatement	 
>3380	AssignmentExpr	pszLargeBuffer [ 0 ] = _T ( '\0' )
>3381	CallExpression	_T ( '\0' )
>3382	ArgumentList	'\0'
>3383	Argument	'\0'
>3384	PrimaryExpression	'\0'
>3385	Callee	_T
>3386	Identifier	_T
>3387	ArrayIndexing	pszLargeBuffer [ 0 ]
>3388	PrimaryExpression	0
>3389	Identifier	pszLargeBuffer
>3390	ExpressionStatement	 
>3391	CallExpression	ASSERT ( pszLargeBuffer != NULL )
>3392	ArgumentList	pszLargeBuffer != NULL
>3393	Argument	pszLargeBuffer != NULL
>3394	EqualityExpression	pszLargeBuffer != NULL
>3395	Identifier	NULL
>3396	Identifier	pszLargeBuffer
>3397	Callee	ASSERT
>3398	Identifier	ASSERT
>3399	IdentifierDeclStatement	 
>3400	IdentifierDecl	pszLargeBuffer = new TCHAR [ MAX_SUM_PATHNAME + 1 ]
>3401	AssignmentExpr	pszLargeBuffer = new TCHAR [ MAX_SUM_PATHNAME + 1 ]
>3402	AdditiveExpression	MAX_SUM_PATHNAME + 1
>3403	PrimaryExpression	1
>3404	Identifier	MAX_SUM_PATHNAME
>3405	Identifier	pszLargeBuffer
>3406	Identifier	pszLargeBuffer
>3407	IdentifierDeclType	LPTSTR
>3408	ExpressionStatement	 
>3409	AssignmentExpr	dlg . m_ofn . lpstrTitle = m_sDlgTitle
>3410	Identifier	m_sDlgTitle
>3411	MemberAccess	dlg . m_ofn . lpstrTitle
>3412	Identifier	lpstrTitle
>3413	MemberAccess	dlg . m_ofn
>3414	Identifier	m_ofn
>3415	Identifier	dlg
>3416	ExpressionStatement	 
>3417	Statement	 
>3418	Statement	 
>3419	Statement	 
>3420	Statement	 
>3421	Statement	 
>3422	Statement	 
>3423	Statement	 
>3424	Statement	 
>3425	Statement	 
>3426	Statement	 
>3427	Statement	 
>3428	Statement	 
>3429	Statement	 
>3430	Statement	 
>3431	Statement	 
>3432	Statement	 
>3433	Statement	 
>3434	Statement	 
>3435	Statement	 
>3436	Statement	 
>3437	Statement	 
>3438	Statement	 
>3439	Statement	 
>3440	Statement	 
>3441	Statement	 
>3442	Statement	 
>3443	Statement	 
>3482	FunctionDef	CBrowseCtrl 
>3483	ParameterList	LPCTSTR lpszTitle
>3484	Parameter	 
>3485	Identifier	lpszTitle
>3486	ParameterType	LPCTSTR
>3487	ReturnType	void
>3488	CompoundStatement	 
>3489	ExpressionStatement	 
>3490	AssignmentExpr	m_sDlgTitle = lpszTitle
>3491	Identifier	lpszTitle
>3492	Identifier	m_sDlgTitle
>3498	FunctionDef	CBrowseCtrl 
>3499	ParameterList	 
>3500	ReturnType	CString
>3501	CompoundStatement	 
>3502	ReturnStatement	 
>3503	Identifier	m_sDlgTitle
>3508	FunctionDef	CBrowseCtrl 
>3509	ParameterList	LPCTSTR lpszText
>3510	Parameter	 
>3511	Identifier	lpszText
>3512	ParameterType	LPCTSTR
>3513	ReturnType	void
>3514	CompoundStatement	 
>3515	CompoundStatement	 
>3516	ExpressionStatement	 
>3517	CallExpression	RedrawWindow ( )
>3518	ArgumentList	 
>3519	Callee	RedrawWindow
>3520	Identifier	RedrawWindow
>3521	ExpressionStatement	 
>3522	CallExpression	CreateEdit ( )
>3523	ArgumentList	 
>3524	Callee	CreateEdit
>3525	Identifier	CreateEdit
>3526	ExpressionStatement	 
>3527	CallExpression	RecalculateRects ( )
>3528	ArgumentList	 
>3529	Callee	RecalculateRects
>3530	Identifier	RecalculateRects
>3531	Statement	 
>3532	Statement	 
>3533	Statement	 
>3534	Statement	 
>3535	Statement	 
>3536	Statement	 
>3537	Statement	 
>3538	Statement	 
>3539	Statement	 
>3540	Statement	 
>3541	Statement	 
>3542	Statement	 
>3543	Statement	 
>3544	Statement	 
>3545	Statement	 
>3546	Statement	 
>3547	ExpressionStatement	 
>3548	AssignmentExpr	m_sButtonText = lpszText
>3549	Identifier	lpszText
>3550	Identifier	m_sButtonText
>3556	FunctionDef	CBrowseCtrl 
>3557	ParameterList	 
>3558	ReturnType	CString
>3559	CompoundStatement	 
>3560	ReturnStatement	 
>3561	Identifier	m_sButtonText
>3566	FunctionDef	CBrowseCtrl 
>3567	ParameterList	CDC * pDC , COLORREF bkColor , const CRect & rect
>3568	Parameter	 
>3569	Identifier	rect
>3570	ParameterType	const CRect &
>3571	Parameter	 
>3572	Identifier	bkColor
>3573	ParameterType	COLORREF
>3574	Parameter	 
>3575	Identifier	pDC
>3576	ParameterType	CDC *
>3577	ReturnType	void
>3578	CompoundStatement	 
>3579	ExpressionStatement	 
>3580	CallExpression	bmp . DeleteObject ( )
>3581	ArgumentList	 
>3582	Callee	bmp . DeleteObject
>3583	MemberAccess	bmp . DeleteObject
>3584	Identifier	DeleteObject
>3585	Identifier	bmp
>3586	ExpressionStatement	 
>3587	CallExpression	pDC -> BitBlt ( rect . left , rect . top , rect . Width ( ) , rect . Height ( ) , & memDC , 0 , 0 , SRCCOPY )
>3588	ArgumentList	rect . left
>3589	Argument	SRCCOPY
>3590	Identifier	SRCCOPY
>3591	Argument	0
>3592	PrimaryExpression	0
>3593	Argument	0
>3594	PrimaryExpression	0
>3595	Argument	& memDC
>3596	UnaryOp	& memDC
>3597	Identifier	memDC
>3598	UnaryOperator	&
>3599	Argument	rect . Height ( )
>3600	CallExpression	rect . Height ( )
>3601	ArgumentList	 
>3602	Callee	rect . Height
>3603	MemberAccess	rect . Height
>3604	Identifier	Height
>3605	Identifier	rect
>3606	Argument	rect . Width ( )
>3607	CallExpression	rect . Width ( )
>3608	ArgumentList	 
>3609	Callee	rect . Width
>3610	MemberAccess	rect . Width
>3611	Identifier	Width
>3612	Identifier	rect
>3613	Argument	rect . top
>3614	MemberAccess	rect . top
>3615	Identifier	top
>3616	Identifier	rect
>3617	Argument	rect . left
>3618	MemberAccess	rect . left
>3619	Identifier	left
>3620	Identifier	rect
>3621	Callee	pDC -> BitBlt
>3622	PtrMemberAccess	pDC -> BitBlt
>3623	Identifier	BitBlt
>3624	Identifier	pDC
>3625	IfStatement	if ( GetStyle ( ) & WS_DISABLED )
>3626	ElseStatement	else
>3627	CompoundStatement	 
>3628	ExpressionStatement	 
>3629	CallExpression	memDC . TextOut ( 0 , 0 , m_sButtonText )
>3630	ArgumentList	0
>3631	Argument	m_sButtonText
>3632	Identifier	m_sButtonText
>3633	Argument	0
>3634	PrimaryExpression	0
>3635	Argument	0
>3636	PrimaryExpression	0
>3637	Callee	memDC . TextOut
>3638	MemberAccess	memDC . TextOut
>3639	Identifier	TextOut
>3640	Identifier	memDC
>3641	ExpressionStatement	 
>3642	Statement	 
>3643	Statement	 
>3644	Statement	 
>3645	Statement	 
>3646	Statement	 
>3647	Statement	 
>3648	Statement	 
>3649	Statement	 
>3650	Statement	 
>3651	Statement	 
>3652	CompoundStatement	 
>3653	ExpressionStatement	 
>3654	CallExpression	memDC . TextOut ( 0 , 0 , m_sButtonText )
>3655	ArgumentList	0
>3656	Argument	m_sButtonText
>3657	Identifier	m_sButtonText
>3658	Argument	0
>3659	PrimaryExpression	0
>3660	Argument	0
>3661	PrimaryExpression	0
>3662	Callee	memDC . TextOut
>3663	MemberAccess	memDC . TextOut
>3664	Identifier	TextOut
>3665	Identifier	memDC
>3666	ExpressionStatement	 
>3667	Statement	 
>3668	Statement	 
>3669	Statement	 
>3670	Statement	 
>3671	Statement	 
>3672	Statement	 
>3673	Statement	 
>3674	Statement	 
>3675	Statement	 
>3676	Statement	 
>3677	ExpressionStatement	 
>3678	CallExpression	memDC . TextOut ( 1 , 1 , m_sButtonText )
>3679	ArgumentList	1
>3680	Argument	m_sButtonText
>3681	Identifier	m_sButtonText
>3682	Argument	1
>3683	PrimaryExpression	1
>3684	Argument	1
>3685	PrimaryExpression	1
>3686	Callee	memDC . TextOut
>3687	MemberAccess	memDC . TextOut
>3688	Identifier	TextOut
>3689	Identifier	memDC
>3690	ExpressionStatement	 
>3691	Statement	 
>3692	Statement	 
>3693	Statement	 
>3694	Statement	 
>3695	Statement	 
>3696	Statement	 
>3697	Statement	 
>3698	Statement	 
>3699	Statement	 
>3700	Statement	 
>3701	Condition	 
>3702	BitAndExpression	GetStyle ( ) & WS_DISABLED
>3703	Identifier	WS_DISABLED
>3704	CallExpression	GetStyle ( )
>3705	ArgumentList	 
>3706	Callee	GetStyle
>3707	Identifier	GetStyle
>3708	ExpressionStatement	 
>3709	CallExpression	memDC . SetBkMode ( TRANSPARENT )
>3710	ArgumentList	TRANSPARENT
>3711	Argument	TRANSPARENT
>3712	Identifier	TRANSPARENT
>3713	Callee	memDC . SetBkMode
>3714	MemberAccess	memDC . SetBkMode
>3715	Identifier	SetBkMode
>3716	Identifier	memDC
>3717	ExpressionStatement	 
>3718	CallExpression	memDC . SelectObject ( GetFont ( ) )
>3719	ArgumentList	GetFont ( )
>3720	Argument	GetFont ( )
>3721	CallExpression	GetFont ( )
>3722	ArgumentList	 
>3723	Callee	GetFont
>3724	Identifier	GetFont
>3725	Callee	memDC . SelectObject
>3726	MemberAccess	memDC . SelectObject
>3727	Identifier	SelectObject
>3728	Identifier	memDC
>3729	ExpressionStatement	 
>3730	CallExpression	PrepareMemDC ( & memDC , & bmp , pDC , rect , bkColor )
>3731	ArgumentList	& memDC
>3732	Argument	bkColor
>3733	Identifier	bkColor
>3734	Argument	rect
>3735	Identifier	rect
>3736	Argument	pDC
>3737	Identifier	pDC
>3738	Argument	& bmp
>3739	UnaryOp	& bmp
>3740	Identifier	bmp
>3741	UnaryOperator	&
>3742	Argument	& memDC
>3743	UnaryOp	& memDC
>3744	Identifier	memDC
>3745	UnaryOperator	&
>3746	Callee	PrepareMemDC
>3747	Identifier	PrepareMemDC
>3748	IdentifierDeclStatement	 
>3749	IdentifierDecl	bmp
>3750	Identifier	bmp
>3751	IdentifierDeclType	CBitmap
>3752	IdentifierDeclStatement	 
>3753	IdentifierDecl	memDC
>3754	Identifier	memDC
>3755	IdentifierDeclType	CDC
>3756	IfStatement	if ( m_sButtonText . IsEmpty ( ) || rect . IsRectEmpty ( ) )
>3757	ReturnStatement	 
>3758	Condition	 
>3759	OrExpression	m_sButtonText . IsEmpty ( ) || rect . IsRectEmpty ( )
>3760	CallExpression	rect . IsRectEmpty ( )
>3761	ArgumentList	 
>3762	Callee	rect . IsRectEmpty
>3763	MemberAccess	rect . IsRectEmpty
>3764	Identifier	IsRectEmpty
>3765	Identifier	rect
>3766	CallExpression	m_sButtonText . IsEmpty ( )
>3767	ArgumentList	 
>3768	Callee	m_sButtonText . IsEmpty
>3769	MemberAccess	m_sButtonText . IsEmpty
>3770	Identifier	IsEmpty
>3771	Identifier	m_sButtonText
>3794	FunctionDef	CBrowseCtrl 
>3795	ParameterList	CDC * pDC , COLORREF bkColor , const CRect & rect
>3796	Parameter	 
>3797	Identifier	rect
>3798	ParameterType	const CRect &
>3799	Parameter	 
>3800	Identifier	bkColor
>3801	ParameterType	COLORREF
>3802	Parameter	 
>3803	Identifier	pDC
>3804	ParameterType	CDC *
>3805	ReturnType	void
>3806	CompoundStatement	 
>3807	ExpressionStatement	 
>3808	CallExpression	bmp . DeleteObject ( )
>3809	ArgumentList	 
>3810	Callee	bmp . DeleteObject
>3811	MemberAccess	bmp . DeleteObject
>3812	Identifier	DeleteObject
>3813	Identifier	bmp
>3814	ExpressionStatement	 
>3815	CallExpression	olivePen . DeleteObject ( )
>3816	ArgumentList	 
>3817	Callee	olivePen . DeleteObject
>3818	MemberAccess	olivePen . DeleteObject
>3819	Identifier	DeleteObject
>3820	Identifier	olivePen
>3821	ExpressionStatement	 
>3822	CallExpression	yellowPen . DeleteObject ( )
>3823	ArgumentList	 
>3824	Callee	yellowPen . DeleteObject
>3825	MemberAccess	yellowPen . DeleteObject
>3826	Identifier	DeleteObject
>3827	Identifier	yellowPen
>3828	ExpressionStatement	 
>3829	CallExpression	whitePen . DeleteObject ( )
>3830	ArgumentList	 
>3831	Callee	whitePen . DeleteObject
>3832	MemberAccess	whitePen . DeleteObject
>3833	Identifier	DeleteObject
>3834	Identifier	whitePen
>3835	ExpressionStatement	 
>3836	CallExpression	blackPen . DeleteObject ( )
>3837	ArgumentList	 
>3838	Callee	blackPen . DeleteObject
>3839	MemberAccess	blackPen . DeleteObject
>3840	Identifier	DeleteObject
>3841	Identifier	blackPen
>3842	ExpressionStatement	 
>3843	CallExpression	pDC -> BitBlt ( rect . left , rect . top , rect . Width ( ) , rect . Height ( ) , & memDC , 0 , 0 , SRCCOPY )
>3844	ArgumentList	rect . left
>3845	Argument	SRCCOPY
>3846	Identifier	SRCCOPY
>3847	Argument	0
>3848	PrimaryExpression	0
>3849	Argument	0
>3850	PrimaryExpression	0
>3851	Argument	& memDC
>3852	UnaryOp	& memDC
>3853	Identifier	memDC
>3854	UnaryOperator	&
>3855	Argument	rect . Height ( )
>3856	CallExpression	rect . Height ( )
>3857	ArgumentList	 
>3858	Callee	rect . Height
>3859	MemberAccess	rect . Height
>3860	Identifier	Height
>3861	Identifier	rect
>3862	Argument	rect . Width ( )
>3863	CallExpression	rect . Width ( )
>3864	ArgumentList	 
>3865	Callee	rect . Width
>3866	MemberAccess	rect . Width
>3867	Identifier	Width
>3868	Identifier	rect
>3869	Argument	rect . top
>3870	MemberAccess	rect . top
>3871	Identifier	top
>3872	Identifier	rect
>3873	Argument	rect . left
>3874	MemberAccess	rect . left
>3875	Identifier	left
>3876	Identifier	rect
>3877	Callee	pDC -> BitBlt
>3878	PtrMemberAccess	pDC -> BitBlt
>3879	Identifier	BitBlt
>3880	Identifier	pDC
>3881	ExpressionStatement	 
>3882	CallExpression	ld . OffsetLineTo ( 1 , 1 )
>3883	ArgumentList	1
>3884	Argument	1
>3885	PrimaryExpression	1
>3886	Argument	1
>3887	PrimaryExpression	1
>3888	Callee	ld . OffsetLineTo
>3889	MemberAccess	ld . OffsetLineTo
>3890	Identifier	OffsetLineTo
>3891	Identifier	ld
>3892	ExpressionStatement	 
>3893	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>3894	ArgumentList	1
>3895	Argument	- 1
>3896	UnaryOp	- 1
>3897	PrimaryExpression	1
>3898	UnaryOperator	-
>3899	Argument	1
>3900	PrimaryExpression	1
>3901	Callee	ld . OffsetLineTo
>3902	MemberAccess	ld . OffsetLineTo
>3903	Identifier	OffsetLineTo
>3904	Identifier	ld
>3905	ExpressionStatement	 
>3906	CallExpression	ld . OffsetLineTo ( 1 , 1 )
>3907	ArgumentList	1
>3908	Argument	1
>3909	PrimaryExpression	1
>3910	Argument	1
>3911	PrimaryExpression	1
>3912	Callee	ld . OffsetLineTo
>3913	MemberAccess	ld . OffsetLineTo
>3914	Identifier	OffsetLineTo
>3915	Identifier	ld
>3916	ExpressionStatement	 
>3917	CallExpression	ld . OffsetLineTo ( 5 , - 5 )
>3918	ArgumentList	5
>3919	Argument	- 5
>3920	UnaryOp	- 5
>3921	PrimaryExpression	5
>3922	UnaryOperator	-
>3923	Argument	5
>3924	PrimaryExpression	5
>3925	Callee	ld . OffsetLineTo
>3926	MemberAccess	ld . OffsetLineTo
>3927	Identifier	OffsetLineTo
>3928	Identifier	ld
>3929	ExpressionStatement	 
>3930	CallExpression	ld . InitOffsetMoveTo ( 2 , 11 )
>3931	ArgumentList	2
>3932	Argument	11
>3933	PrimaryExpression	11
>3934	Argument	2
>3935	PrimaryExpression	2
>3936	Callee	ld . InitOffsetMoveTo
>3937	MemberAccess	ld . InitOffsetMoveTo
>3938	Identifier	InitOffsetMoveTo
>3939	Identifier	ld
>3940	ExpressionStatement	 
>3941	CallExpression	ld . OffsetLineTo ( 3 , - 3 )
>3942	ArgumentList	3
>3943	Argument	- 3
>3944	UnaryOp	- 3
>3945	PrimaryExpression	3
>3946	UnaryOperator	-
>3947	Argument	3
>3948	PrimaryExpression	3
>3949	Callee	ld . OffsetLineTo
>3950	MemberAccess	ld . OffsetLineTo
>3951	Identifier	OffsetLineTo
>3952	Identifier	ld
>3953	ExpressionStatement	 
>3954	CallExpression	ld . InitOffsetMoveTo ( 2 , 9 )
>3955	ArgumentList	2
>3956	Argument	9
>3957	PrimaryExpression	9
>3958	Argument	2
>3959	PrimaryExpression	2
>3960	Callee	ld . InitOffsetMoveTo
>3961	MemberAccess	ld . InitOffsetMoveTo
>3962	Identifier	InitOffsetMoveTo
>3963	Identifier	ld
>3964	ExpressionStatement	 
>3965	CallExpression	ld . OffsetLineTo ( 2 , - 2 )
>3966	ArgumentList	2
>3967	Argument	- 2
>3968	UnaryOp	- 2
>3969	PrimaryExpression	2
>3970	UnaryOperator	-
>3971	Argument	2
>3972	PrimaryExpression	2
>3973	Callee	ld . OffsetLineTo
>3974	MemberAccess	ld . OffsetLineTo
>3975	Identifier	OffsetLineTo
>3976	Identifier	ld
>3977	ExpressionStatement	 
>3978	CallExpression	ld . OffsetMoveTo ( 0 , 2 )
>3979	ArgumentList	0
>3980	Argument	2
>3981	PrimaryExpression	2
>3982	Argument	0
>3983	PrimaryExpression	0
>3984	Callee	ld . OffsetMoveTo
>3985	MemberAccess	ld . OffsetMoveTo
>3986	Identifier	OffsetMoveTo
>3987	Identifier	ld
>3988	ExpressionStatement	 
>3989	CallExpression	ld . OffsetLineTo ( 0 , 0 )
>3990	ArgumentList	0
>3991	Argument	0
>3992	PrimaryExpression	0
>3993	Argument	0
>3994	PrimaryExpression	0
>3995	Callee	ld . OffsetLineTo
>3996	MemberAccess	ld . OffsetLineTo
>3997	Identifier	OffsetLineTo
>3998	Identifier	ld
>3999	ExpressionStatement	 
>4000	CallExpression	ld . InitOffsetMoveTo ( 2 , 5 )
>4001	ArgumentList	2
>4002	Argument	5
>4003	PrimaryExpression	5
>4004	Argument	2
>4005	PrimaryExpression	2
>4006	Callee	ld . InitOffsetMoveTo
>4007	MemberAccess	ld . InitOffsetMoveTo
>4008	Identifier	InitOffsetMoveTo
>4009	Identifier	ld
>4010	ExpressionStatement	 
>4011	CallExpression	memDC . SelectObject ( & whitePen )
>4012	ArgumentList	& whitePen
>4013	Argument	& whitePen
>4014	UnaryOp	& whitePen
>4015	Identifier	whitePen
>4016	UnaryOperator	&
>4017	Callee	memDC . SelectObject
>4018	MemberAccess	memDC . SelectObject
>4019	Identifier	SelectObject
>4020	Identifier	memDC
>4021	ExpressionStatement	 
>4022	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>4023	ArgumentList	1
>4024	Argument	- 1
>4025	UnaryOp	- 1
>4026	PrimaryExpression	1
>4027	UnaryOperator	-
>4028	Argument	1
>4029	PrimaryExpression	1
>4030	Callee	ld . OffsetLineTo
>4031	MemberAccess	ld . OffsetLineTo
>4032	Identifier	OffsetLineTo
>4033	Identifier	ld
>4034	ExpressionStatement	 
>4035	CallExpression	ld . OffsetLineTo ( 1 , 1 )
>4036	ArgumentList	1
>4037	Argument	1
>4038	PrimaryExpression	1
>4039	Argument	1
>4040	PrimaryExpression	1
>4041	Callee	ld . OffsetLineTo
>4042	MemberAccess	ld . OffsetLineTo
>4043	Identifier	OffsetLineTo
>4044	Identifier	ld
>4045	ExpressionStatement	 
>4046	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>4047	ArgumentList	1
>4048	Argument	- 1
>4049	UnaryOp	- 1
>4050	PrimaryExpression	1
>4051	UnaryOperator	-
>4052	Argument	1
>4053	PrimaryExpression	1
>4054	Callee	ld . OffsetLineTo
>4055	MemberAccess	ld . OffsetLineTo
>4056	Identifier	OffsetLineTo
>4057	Identifier	ld
>4058	ExpressionStatement	 
>4059	CallExpression	ld . OffsetLineTo ( 1 , 1 )
>4060	ArgumentList	1
>4061	Argument	1
>4062	PrimaryExpression	1
>4063	Argument	1
>4064	PrimaryExpression	1
>4065	Callee	ld . OffsetLineTo
>4066	MemberAccess	ld . OffsetLineTo
>4067	Identifier	OffsetLineTo
>4068	Identifier	ld
>4069	ExpressionStatement	 
>4070	CallExpression	ld . OffsetLineTo ( 4 , - 4 )
>4071	ArgumentList	4
>4072	Argument	- 4
>4073	UnaryOp	- 4
>4074	PrimaryExpression	4
>4075	UnaryOperator	-
>4076	Argument	4
>4077	PrimaryExpression	4
>4078	Callee	ld . OffsetLineTo
>4079	MemberAccess	ld . OffsetLineTo
>4080	Identifier	OffsetLineTo
>4081	Identifier	ld
>4082	ExpressionStatement	 
>4083	CallExpression	ld . InitOffsetMoveTo ( 2 , 10 )
>4084	ArgumentList	2
>4085	Argument	10
>4086	PrimaryExpression	10
>4087	Argument	2
>4088	PrimaryExpression	2
>4089	Callee	ld . InitOffsetMoveTo
>4090	MemberAccess	ld . InitOffsetMoveTo
>4091	Identifier	InitOffsetMoveTo
>4092	Identifier	ld
>4093	ExpressionStatement	 
>4094	CallExpression	ld . OffsetLineTo ( 2 , - 2 )
>4095	ArgumentList	2
>4096	Argument	- 2
>4097	UnaryOp	- 2
>4098	PrimaryExpression	2
>4099	UnaryOperator	-
>4100	Argument	2
>4101	PrimaryExpression	2
>4102	Callee	ld . OffsetLineTo
>4103	MemberAccess	ld . OffsetLineTo
>4104	Identifier	OffsetLineTo
>4105	Identifier	ld
>4106	ExpressionStatement	 
>4107	CallExpression	ld . InitOffsetMoveTo ( 2 , 8 )
>4108	ArgumentList	2
>4109	Argument	8
>4110	PrimaryExpression	8
>4111	Argument	2
>4112	PrimaryExpression	2
>4113	Callee	ld . InitOffsetMoveTo
>4114	MemberAccess	ld . InitOffsetMoveTo
>4115	Identifier	InitOffsetMoveTo
>4116	Identifier	ld
>4117	ExpressionStatement	 
>4118	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>4119	ArgumentList	1
>4120	Argument	- 1
>4121	UnaryOp	- 1
>4122	PrimaryExpression	1
>4123	UnaryOperator	-
>4124	Argument	1
>4125	PrimaryExpression	1
>4126	Callee	ld . OffsetLineTo
>4127	MemberAccess	ld . OffsetLineTo
>4128	Identifier	OffsetLineTo
>4129	Identifier	ld
>4130	ExpressionStatement	 
>4131	CallExpression	ld . InitOffsetMoveTo ( 2 , 6 )
>4132	ArgumentList	2
>4133	Argument	6
>4134	PrimaryExpression	6
>4135	Argument	2
>4136	PrimaryExpression	2
>4137	Callee	ld . InitOffsetMoveTo
>4138	MemberAccess	ld . InitOffsetMoveTo
>4139	Identifier	InitOffsetMoveTo
>4140	Identifier	ld
>4141	ExpressionStatement	 
>4142	CallExpression	memDC . SelectObject ( & yellowPen )
>4143	ArgumentList	& yellowPen
>4144	Argument	& yellowPen
>4145	UnaryOp	& yellowPen
>4146	Identifier	yellowPen
>4147	UnaryOperator	&
>4148	Callee	memDC . SelectObject
>4149	MemberAccess	memDC . SelectObject
>4150	Identifier	SelectObject
>4151	Identifier	memDC
>4152	ForStatement	for ( i = 0 ; i < 4 ; i ++ )
>4153	CompoundStatement	 
>4154	ExpressionStatement	 
>4155	CallExpression	ld . OffsetMoveTo ( - 9 , 1 )
>4156	ArgumentList	- 9
>4157	Argument	1
>4158	PrimaryExpression	1
>4159	Argument	- 9
>4160	UnaryOp	- 9
>4161	PrimaryExpression	9
>4162	UnaryOperator	-
>4163	Callee	ld . OffsetMoveTo
>4164	MemberAccess	ld . OffsetMoveTo
>4165	Identifier	OffsetMoveTo
>4166	Identifier	ld
>4167	ExpressionStatement	 
>4168	CallExpression	ld . OffsetLineTo ( 8 , 0 )
>4169	ArgumentList	8
>4170	Argument	0
>4171	PrimaryExpression	0
>4172	Argument	8
>4173	PrimaryExpression	8
>4174	Callee	ld . OffsetLineTo
>4175	MemberAccess	ld . OffsetLineTo
>4176	Identifier	OffsetLineTo
>4177	Identifier	ld
>4178	IncDecOp	 
>4179	IncDec	++
>4180	Identifier	i
>4181	Condition	 
>4182	RelationalExpression	i < 4
>4183	PrimaryExpression	4
>4184	Identifier	i
>4185	ForInit	 
>4186	AssignmentExpr	i = 0
>4187	PrimaryExpression	0
>4188	Identifier	i
>4189	ExpressionStatement	 
>4190	CallExpression	ld . InitOffsetMoveTo ( 6 , 9 )
>4191	ArgumentList	6
>4192	Argument	9
>4193	PrimaryExpression	9
>4194	Argument	6
>4195	PrimaryExpression	6
>4196	Callee	ld . InitOffsetMoveTo
>4197	MemberAccess	ld . InitOffsetMoveTo
>4198	Identifier	InitOffsetMoveTo
>4199	Identifier	ld
>4200	ExpressionStatement	 
>4201	CallExpression	memDC . SelectObject ( & olivePen )
>4202	ArgumentList	& olivePen
>4203	Argument	& olivePen
>4204	UnaryOp	& olivePen
>4205	Identifier	olivePen
>4206	UnaryOperator	&
>4207	Callee	memDC . SelectObject
>4208	MemberAccess	memDC . SelectObject
>4209	Identifier	SelectObject
>4210	Identifier	memDC
>4211	ExpressionStatement	 
>4212	CallExpression	ld . OffsetLineTo ( - 2 , 0 )
>4213	ArgumentList	- 2
>4214	Argument	0
>4215	PrimaryExpression	0
>4216	Argument	- 2
>4217	UnaryOp	- 2
>4218	PrimaryExpression	2
>4219	UnaryOperator	-
>4220	Callee	ld . OffsetLineTo
>4221	MemberAccess	ld . OffsetLineTo
>4222	Identifier	OffsetLineTo
>4223	Identifier	ld
>4224	ExpressionStatement	 
>4225	CallExpression	ld . OffsetLineTo ( 0 , 2 )
>4226	ArgumentList	0
>4227	Argument	2
>4228	PrimaryExpression	2
>4229	Argument	0
>4230	PrimaryExpression	0
>4231	Callee	ld . OffsetLineTo
>4232	MemberAccess	ld . OffsetLineTo
>4233	Identifier	OffsetLineTo
>4234	Identifier	ld
>4235	ExpressionStatement	 
>4236	CallExpression	ld . OffsetMoveTo ( 1 , - 1 )
>4237	ArgumentList	1
>4238	Argument	- 1
>4239	UnaryOp	- 1
>4240	PrimaryExpression	1
>4241	UnaryOperator	-
>4242	Argument	1
>4243	PrimaryExpression	1
>4244	Callee	ld . OffsetMoveTo
>4245	MemberAccess	ld . OffsetMoveTo
>4246	Identifier	OffsetMoveTo
>4247	Identifier	ld
>4248	ExpressionStatement	 
>4249	CallExpression	ld . OffsetLineTo ( 2 , 2 )
>4250	ArgumentList	2
>4251	Argument	2
>4252	PrimaryExpression	2
>4253	Argument	2
>4254	PrimaryExpression	2
>4255	Callee	ld . OffsetLineTo
>4256	MemberAccess	ld . OffsetLineTo
>4257	Identifier	OffsetLineTo
>4258	Identifier	ld
>4259	ExpressionStatement	 
>4260	CallExpression	ld . OffsetLineTo ( 2 , 0 )
>4261	ArgumentList	2
>4262	Argument	0
>4263	PrimaryExpression	0
>4264	Argument	2
>4265	PrimaryExpression	2
>4266	Callee	ld . OffsetLineTo
>4267	MemberAccess	ld . OffsetLineTo
>4268	Identifier	OffsetLineTo
>4269	Identifier	ld
>4270	ExpressionStatement	 
>4271	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>4272	ArgumentList	1
>4273	Argument	- 1
>4274	UnaryOp	- 1
>4275	PrimaryExpression	1
>4276	UnaryOperator	-
>4277	Argument	1
>4278	PrimaryExpression	1
>4279	Callee	ld . OffsetLineTo
>4280	MemberAccess	ld . OffsetLineTo
>4281	Identifier	OffsetLineTo
>4282	Identifier	ld
>4283	ExpressionStatement	 
>4284	CallExpression	ld . InitOffsetMoveTo ( 9 , 2 )
>4285	ArgumentList	9
>4286	Argument	2
>4287	PrimaryExpression	2
>4288	Argument	9
>4289	PrimaryExpression	9
>4290	Callee	ld . InitOffsetMoveTo
>4291	MemberAccess	ld . InitOffsetMoveTo
>4292	Identifier	InitOffsetMoveTo
>4293	Identifier	ld
>4294	ExpressionStatement	 
>4295	CallExpression	ld . OffsetLineTo ( 0 , 2 )
>4296	ArgumentList	0
>4297	Argument	2
>4298	PrimaryExpression	2
>4299	Argument	0
>4300	PrimaryExpression	0
>4301	Callee	ld . OffsetLineTo
>4302	MemberAccess	ld . OffsetLineTo
>4303	Identifier	OffsetLineTo
>4304	Identifier	ld
>4305	ExpressionStatement	 
>4306	CallExpression	ld . OffsetLineTo ( 6 , 0 )
>4307	ArgumentList	6
>4308	Argument	0
>4309	PrimaryExpression	0
>4310	Argument	6
>4311	PrimaryExpression	6
>4312	Callee	ld . OffsetLineTo
>4313	MemberAccess	ld . OffsetLineTo
>4314	Identifier	OffsetLineTo
>4315	Identifier	ld
>4316	ExpressionStatement	 
>4317	CallExpression	ld . OffsetLineTo ( 1 , 1 )
>4318	ArgumentList	1
>4319	Argument	1
>4320	PrimaryExpression	1
>4321	Argument	1
>4322	PrimaryExpression	1
>4323	Callee	ld . OffsetLineTo
>4324	MemberAccess	ld . OffsetLineTo
>4325	Identifier	OffsetLineTo
>4326	Identifier	ld
>4327	ExpressionStatement	 
>4328	CallExpression	ld . OffsetLineTo ( 2 , 0 )
>4329	ArgumentList	2
>4330	Argument	0
>4331	PrimaryExpression	0
>4332	Argument	2
>4333	PrimaryExpression	2
>4334	Callee	ld . OffsetLineTo
>4335	MemberAccess	ld . OffsetLineTo
>4336	Identifier	OffsetLineTo
>4337	Identifier	ld
>4338	ExpressionStatement	 
>4339	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>4340	ArgumentList	1
>4341	Argument	- 1
>4342	UnaryOp	- 1
>4343	PrimaryExpression	1
>4344	UnaryOperator	-
>4345	Argument	1
>4346	PrimaryExpression	1
>4347	Callee	ld . OffsetLineTo
>4348	MemberAccess	ld . OffsetLineTo
>4349	Identifier	OffsetLineTo
>4350	Identifier	ld
>4351	ExpressionStatement	 
>4352	CallExpression	ld . OffsetLineTo ( 0 , - 8 )
>4353	ArgumentList	0
>4354	Argument	- 8
>4355	UnaryOp	- 8
>4356	PrimaryExpression	8
>4357	UnaryOperator	-
>4358	Argument	0
>4359	PrimaryExpression	0
>4360	Callee	ld . OffsetLineTo
>4361	MemberAccess	ld . OffsetLineTo
>4362	Identifier	OffsetLineTo
>4363	Identifier	ld
>4364	ExpressionStatement	 
>4365	CallExpression	ld . OffsetLineTo ( - 5 , 5 )
>4366	ArgumentList	- 5
>4367	Argument	5
>4368	PrimaryExpression	5
>4369	Argument	- 5
>4370	UnaryOp	- 5
>4371	PrimaryExpression	5
>4372	UnaryOperator	-
>4373	Callee	ld . OffsetLineTo
>4374	MemberAccess	ld . OffsetLineTo
>4375	Identifier	OffsetLineTo
>4376	Identifier	ld
>4377	ExpressionStatement	 
>4378	CallExpression	ld . OffsetLineTo ( - 9 , 0 )
>4379	ArgumentList	- 9
>4380	Argument	0
>4381	PrimaryExpression	0
>4382	Argument	- 9
>4383	UnaryOp	- 9
>4384	PrimaryExpression	9
>4385	UnaryOperator	-
>4386	Callee	ld . OffsetLineTo
>4387	MemberAccess	ld . OffsetLineTo
>4388	Identifier	OffsetLineTo
>4389	Identifier	ld
>4390	ExpressionStatement	 
>4391	CallExpression	ld . OffsetLineTo ( 0 , - 1 )
>4392	ArgumentList	0
>4393	Argument	- 1
>4394	UnaryOp	- 1
>4395	PrimaryExpression	1
>4396	UnaryOperator	-
>4397	Argument	0
>4398	PrimaryExpression	0
>4399	Callee	ld . OffsetLineTo
>4400	MemberAccess	ld . OffsetLineTo
>4401	Identifier	OffsetLineTo
>4402	Identifier	ld
>4403	ExpressionStatement	 
>4404	CallExpression	ld . OffsetLineTo ( 4 , - 4 )
>4405	ArgumentList	4
>4406	Argument	- 4
>4407	UnaryOp	- 4
>4408	PrimaryExpression	4
>4409	UnaryOperator	-
>4410	Argument	4
>4411	PrimaryExpression	4
>4412	Callee	ld . OffsetLineTo
>4413	MemberAccess	ld . OffsetLineTo
>4414	Identifier	OffsetLineTo
>4415	Identifier	ld
>4416	ExpressionStatement	 
>4417	CallExpression	ld . OffsetLineTo ( 10 , 0 )
>4418	ArgumentList	10
>4419	Argument	0
>4420	PrimaryExpression	0
>4421	Argument	10
>4422	PrimaryExpression	10
>4423	Callee	ld . OffsetLineTo
>4424	MemberAccess	ld . OffsetLineTo
>4425	Identifier	OffsetLineTo
>4426	Identifier	ld
>4427	ExpressionStatement	 
>4428	CallExpression	ld . InitOffsetMoveTo ( 1 , 13 )
>4429	ArgumentList	1
>4430	Argument	13
>4431	PrimaryExpression	13
>4432	Argument	1
>4433	PrimaryExpression	1
>4434	Callee	ld . InitOffsetMoveTo
>4435	MemberAccess	ld . InitOffsetMoveTo
>4436	Identifier	InitOffsetMoveTo
>4437	Identifier	ld
>4438	ExpressionStatement	 
>4439	CallExpression	memDC . SelectObject ( & blackPen )
>4440	ArgumentList	& blackPen
>4441	Argument	& blackPen
>4442	UnaryOp	& blackPen
>4443	Identifier	blackPen
>4444	UnaryOperator	&
>4445	Callee	memDC . SelectObject
>4446	MemberAccess	memDC . SelectObject
>4447	Identifier	SelectObject
>4448	Identifier	memDC
>4449	ExpressionStatement	 
>4450	CallExpression	olivePen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_DARK 
>4451	ArgumentList	PS_SOLID
>4452	Argument	DISABLED ? BC_COLOR_DARK 
>4453	ConditionalExpression	DISABLED ? BC_COLOR_DARK 
>4454	Identifier	BC_COLOR_OLIVE
>4455	Identifier	BC_COLOR_DARK
>4456	Condition	DISABLED
>4457	Identifier	DISABLED
>4458	Argument	1
>4459	PrimaryExpression	1
>4460	Argument	PS_SOLID
>4461	Identifier	PS_SOLID
>4462	Callee	olivePen . CreatePen
>4463	MemberAccess	olivePen . CreatePen
>4464	Identifier	CreatePen
>4465	Identifier	olivePen
>4466	ExpressionStatement	 
>4467	CallExpression	yellowPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_GRAY 
>4468	ArgumentList	PS_SOLID
>4469	Argument	DISABLED ? BC_COLOR_GRAY 
>4470	ConditionalExpression	DISABLED ? BC_COLOR_GRAY 
>4471	Identifier	BC_COLOR_YELLOW
>4472	Identifier	BC_COLOR_GRAY
>4473	Condition	DISABLED
>4474	Identifier	DISABLED
>4475	Argument	1
>4476	PrimaryExpression	1
>4477	Argument	PS_SOLID
>4478	Identifier	PS_SOLID
>4479	Callee	yellowPen . CreatePen
>4480	MemberAccess	yellowPen . CreatePen
>4481	Identifier	CreatePen
>4482	Identifier	yellowPen
>4483	ExpressionStatement	 
>4484	CallExpression	whitePen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_WHITE 
>4485	ArgumentList	PS_SOLID
>4486	Argument	DISABLED ? BC_COLOR_WHITE 
>4487	ConditionalExpression	DISABLED ? BC_COLOR_WHITE 
>4488	Identifier	BC_COLOR_WHITE
>4489	Identifier	BC_COLOR_WHITE
>4490	Condition	DISABLED
>4491	Identifier	DISABLED
>4492	Argument	1
>4493	PrimaryExpression	1
>4494	Argument	PS_SOLID
>4495	Identifier	PS_SOLID
>4496	Callee	whitePen . CreatePen
>4497	MemberAccess	whitePen . CreatePen
>4498	Identifier	CreatePen
>4499	Identifier	whitePen
>4500	ExpressionStatement	 
>4501	CallExpression	blackPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_DARK 
>4502	ArgumentList	PS_SOLID
>4503	Argument	DISABLED ? BC_COLOR_DARK 
>4504	ConditionalExpression	DISABLED ? BC_COLOR_DARK 
>4505	Identifier	BC_COLOR_BLACK
>4506	Identifier	BC_COLOR_DARK
>4507	Condition	DISABLED
>4508	Identifier	DISABLED
>4509	Argument	1
>4510	PrimaryExpression	1
>4511	Argument	PS_SOLID
>4512	Identifier	PS_SOLID
>4513	Callee	blackPen . CreatePen
>4514	MemberAccess	blackPen . CreatePen
>4515	Identifier	CreatePen
>4516	Identifier	blackPen
>4517	IdentifierDeclStatement	 
>4518	IdentifierDecl	olivePen
>4519	Identifier	olivePen
>4520	IdentifierDeclType	CPen
>4521	IdentifierDecl	yellowPen
>4522	Identifier	yellowPen
>4523	IdentifierDeclType	CPen
>4524	IdentifierDecl	whitePen
>4525	Identifier	whitePen
>4526	IdentifierDeclType	CPen
>4527	IdentifierDecl	blackPen
>4528	Identifier	blackPen
>4529	IdentifierDeclType	CPen
>4530	IdentifierDeclStatement	 
>4531	IdentifierDecl	i = 0
>4532	AssignmentExpr	i = 0
>4533	PrimaryExpression	0
>4534	Identifier	i
>4535	Identifier	i
>4536	IdentifierDeclType	int
>4537	IdentifierDeclStatement	 
>4538	IdentifierDecl	DISABLED = ( GetStyle ( ) & WS_DISABLED ) != 0
>4539	AssignmentExpr	DISABLED = ( GetStyle ( ) & WS_DISABLED ) != 0
>4540	EqualityExpression	( GetStyle ( ) & WS_DISABLED ) != 0
>4541	PrimaryExpression	0
>4542	BitAndExpression	GetStyle ( ) & WS_DISABLED
>4543	Identifier	WS_DISABLED
>4544	CallExpression	GetStyle ( )
>4545	ArgumentList	 
>4546	Callee	GetStyle
>4547	Identifier	GetStyle
>4548	Identifier	DISABLED
>4549	Identifier	DISABLED
>4550	IdentifierDeclType	const BOOL
>4551	IdentifierDeclStatement	 
>4552	IdentifierDecl	ld ( & memDC )
>4553	UnaryOp	& memDC
>4554	Identifier	memDC
>4555	UnaryOperator	&
>4556	Identifier	ld
>4557	IdentifierDeclType	CLineDraw
>4558	ExpressionStatement	 
>4559	CallExpression	PrepareMemDC ( & memDC , & bmp , pDC , rect , bkColor )
>4560	ArgumentList	& memDC
>4561	Argument	bkColor
>4562	Identifier	bkColor
>4563	Argument	rect
>4564	Identifier	rect
>4565	Argument	pDC
>4566	Identifier	pDC
>4567	Argument	& bmp
>4568	UnaryOp	& bmp
>4569	Identifier	bmp
>4570	UnaryOperator	&
>4571	Argument	& memDC
>4572	UnaryOp	& memDC
>4573	Identifier	memDC
>4574	UnaryOperator	&
>4575	Callee	PrepareMemDC
>4576	Identifier	PrepareMemDC
>4577	IdentifierDeclStatement	 
>4578	IdentifierDecl	bmp
>4579	Identifier	bmp
>4580	IdentifierDeclType	CBitmap
>4581	IdentifierDeclStatement	 
>4582	IdentifierDecl	memDC
>4583	Identifier	memDC
>4584	IdentifierDeclType	CDC
>4620	FunctionDef	CBrowseCtrl 
>4621	ParameterList	CDC * pDC , COLORREF bkColor , const CRect & rect
>4622	Parameter	 
>4623	Identifier	rect
>4624	ParameterType	const CRect &
>4625	Parameter	 
>4626	Identifier	bkColor
>4627	ParameterType	COLORREF
>4628	Parameter	 
>4629	Identifier	pDC
>4630	ParameterType	CDC *
>4631	ReturnType	void
>4632	CompoundStatement	 
>4633	ExpressionStatement	 
>4634	CallExpression	bmp . DeleteObject ( )
>4635	ArgumentList	 
>4636	Callee	bmp . DeleteObject
>4637	MemberAccess	bmp . DeleteObject
>4638	Identifier	DeleteObject
>4639	Identifier	bmp
>4640	ExpressionStatement	 
>4641	CallExpression	grayPen . DeleteObject ( )
>4642	ArgumentList	 
>4643	Callee	grayPen . DeleteObject
>4644	MemberAccess	grayPen . DeleteObject
>4645	Identifier	DeleteObject
>4646	Identifier	grayPen
>4647	ExpressionStatement	 
>4648	CallExpression	darkPen . DeleteObject ( )
>4649	ArgumentList	 
>4650	Callee	darkPen . DeleteObject
>4651	MemberAccess	darkPen . DeleteObject
>4652	Identifier	DeleteObject
>4653	Identifier	darkPen
>4654	ExpressionStatement	 
>4655	CallExpression	yellowPen . DeleteObject ( )
>4656	ArgumentList	 
>4657	Callee	yellowPen . DeleteObject
>4658	MemberAccess	yellowPen . DeleteObject
>4659	Identifier	DeleteObject
>4660	Identifier	yellowPen
>4661	ExpressionStatement	 
>4662	CallExpression	whitePen . DeleteObject ( )
>4663	ArgumentList	 
>4664	Callee	whitePen . DeleteObject
>4665	MemberAccess	whitePen . DeleteObject
>4666	Identifier	DeleteObject
>4667	Identifier	whitePen
>4668	ExpressionStatement	 
>4669	CallExpression	blackPen . DeleteObject ( )
>4670	ArgumentList	 
>4671	Callee	blackPen . DeleteObject
>4672	MemberAccess	blackPen . DeleteObject
>4673	Identifier	DeleteObject
>4674	Identifier	blackPen
>4675	ExpressionStatement	 
>4676	CallExpression	pDC -> BitBlt ( rect . left , rect . top , rect . Width ( ) , rect . Height ( ) , & memDC , 0 , 0 , SRCCOPY )
>4677	ArgumentList	rect . left
>4678	Argument	SRCCOPY
>4679	Identifier	SRCCOPY
>4680	Argument	0
>4681	PrimaryExpression	0
>4682	Argument	0
>4683	PrimaryExpression	0
>4684	Argument	& memDC
>4685	UnaryOp	& memDC
>4686	Identifier	memDC
>4687	UnaryOperator	&
>4688	Argument	rect . Height ( )
>4689	CallExpression	rect . Height ( )
>4690	ArgumentList	 
>4691	Callee	rect . Height
>4692	MemberAccess	rect . Height
>4693	Identifier	Height
>4694	Identifier	rect
>4695	Argument	rect . Width ( )
>4696	CallExpression	rect . Width ( )
>4697	ArgumentList	 
>4698	Callee	rect . Width
>4699	MemberAccess	rect . Width
>4700	Identifier	Width
>4701	Identifier	rect
>4702	Argument	rect . top
>4703	MemberAccess	rect . top
>4704	Identifier	top
>4705	Identifier	rect
>4706	Argument	rect . left
>4707	MemberAccess	rect . left
>4708	Identifier	left
>4709	Identifier	rect
>4710	Callee	pDC -> BitBlt
>4711	PtrMemberAccess	pDC -> BitBlt
>4712	Identifier	BitBlt
>4713	Identifier	pDC
>4714	ForStatement	for ( i = 0 ; i < 5 ; i ++ )
>4715	CompoundStatement	 
>4716	IfStatement	if ( i == 0 )
>4717	ElseStatement	else
>4718	IfStatement	if ( i == 3 )
>4719	ElseStatement	else
>4720	IfStatement	if ( i == 4 )
>4721	ElseStatement	else
>4722	ExpressionStatement	 
>4723	CallExpression	ld . OffsetLineTo ( - 2 , - 2 )
>4724	ArgumentList	- 2
>4725	Argument	- 2
>4726	UnaryOp	- 2
>4727	PrimaryExpression	2
>4728	UnaryOperator	-
>4729	Argument	- 2
>4730	UnaryOp	- 2
>4731	PrimaryExpression	2
>4732	UnaryOperator	-
>4733	Callee	ld . OffsetLineTo
>4734	MemberAccess	ld . OffsetLineTo
>4735	Identifier	OffsetLineTo
>4736	Identifier	ld
>4737	ExpressionStatement	 
>4738	CallExpression	ld . OffsetLineTo ( 1 , 1 )
>4739	ArgumentList	1
>4740	Argument	1
>4741	PrimaryExpression	1
>4742	Argument	1
>4743	PrimaryExpression	1
>4744	Callee	ld . OffsetLineTo
>4745	MemberAccess	ld . OffsetLineTo
>4746	Identifier	OffsetLineTo
>4747	Identifier	ld
>4748	Condition	 
>4749	EqualityExpression	i == 4
>4750	PrimaryExpression	4
>4751	Identifier	i
>4752	ExpressionStatement	 
>4753	CallExpression	ld . OffsetLineTo ( 0 , 0 )
>4754	ArgumentList	0
>4755	Argument	0
>4756	PrimaryExpression	0
>4757	Argument	0
>4758	PrimaryExpression	0
>4759	Callee	ld . OffsetLineTo
>4760	MemberAccess	ld . OffsetLineTo
>4761	Identifier	OffsetLineTo
>4762	Identifier	ld
>4763	Condition	 
>4764	EqualityExpression	i == 3
>4765	PrimaryExpression	3
>4766	Identifier	i
>4767	ExpressionStatement	 
>4768	CallExpression	ld . OffsetLineTo ( - 1 , - 1 )
>4769	ArgumentList	- 1
>4770	Argument	- 1
>4771	UnaryOp	- 1
>4772	PrimaryExpression	1
>4773	UnaryOperator	-
>4774	Argument	- 1
>4775	UnaryOp	- 1
>4776	PrimaryExpression	1
>4777	UnaryOperator	-
>4778	Callee	ld . OffsetLineTo
>4779	MemberAccess	ld . OffsetLineTo
>4780	Identifier	OffsetLineTo
>4781	Identifier	ld
>4782	Condition	 
>4783	EqualityExpression	i == 0
>4784	PrimaryExpression	0
>4785	Identifier	i
>4786	ExpressionStatement	 
>4787	CallExpression	ld . InitOffsetMoveTo ( 4 + i * 2 , 5 )
>4788	ArgumentList	4 + i * 2
>4789	Argument	5
>4790	PrimaryExpression	5
>4791	Argument	4 + i * 2
>4792	AdditiveExpression	4 + i * 2
>4793	MultiplicativeExpression	i * 2
>4794	PrimaryExpression	2
>4795	Identifier	i
>4796	PrimaryExpression	4
>4797	Callee	ld . InitOffsetMoveTo
>4798	MemberAccess	ld . InitOffsetMoveTo
>4799	Identifier	InitOffsetMoveTo
>4800	Identifier	ld
>4801	IncDecOp	 
>4802	IncDec	++
>4803	Identifier	i
>4804	Condition	 
>4805	RelationalExpression	i < 5
>4806	PrimaryExpression	5
>4807	Identifier	i
>4808	ForInit	 
>4809	AssignmentExpr	i = 0
>4810	PrimaryExpression	0
>4811	Identifier	i
>4812	ExpressionStatement	 
>4813	CallExpression	memDC . SelectObject ( & yellowPen )
>4814	ArgumentList	& yellowPen
>4815	Argument	& yellowPen
>4816	UnaryOp	& yellowPen
>4817	Identifier	yellowPen
>4818	UnaryOperator	&
>4819	Callee	memDC . SelectObject
>4820	MemberAccess	memDC . SelectObject
>4821	Identifier	SelectObject
>4822	Identifier	memDC
>4823	ExpressionStatement	 
>4824	CallExpression	ld . OffsetLineTo ( 0 , 0 )
>4825	ArgumentList	0
>4826	Argument	0
>4827	PrimaryExpression	0
>4828	Argument	0
>4829	PrimaryExpression	0
>4830	Callee	ld . OffsetLineTo
>4831	MemberAccess	ld . OffsetLineTo
>4832	Identifier	OffsetLineTo
>4833	Identifier	ld
>4834	ExpressionStatement	 
>4835	CallExpression	ld . OffsetMoveTo ( 0 , 2 )
>4836	ArgumentList	0
>4837	Argument	2
>4838	PrimaryExpression	2
>4839	Argument	0
>4840	PrimaryExpression	0
>4841	Callee	ld . OffsetMoveTo
>4842	MemberAccess	ld . OffsetMoveTo
>4843	Identifier	OffsetMoveTo
>4844	Identifier	ld
>4845	ExpressionStatement	 
>4846	CallExpression	ld . OffsetLineTo ( 0 , 0 )
>4847	ArgumentList	0
>4848	Argument	0
>4849	PrimaryExpression	0
>4850	Argument	0
>4851	PrimaryExpression	0
>4852	Callee	ld . OffsetLineTo
>4853	MemberAccess	ld . OffsetLineTo
>4854	Identifier	OffsetLineTo
>4855	Identifier	ld
>4856	ExpressionStatement	 
>4857	CallExpression	ld . OffsetMoveTo ( 2 , 0 )
>4858	ArgumentList	2
>4859	Argument	0
>4860	PrimaryExpression	0
>4861	Argument	2
>4862	PrimaryExpression	2
>4863	Callee	ld . OffsetMoveTo
>4864	MemberAccess	ld . OffsetMoveTo
>4865	Identifier	OffsetMoveTo
>4866	Identifier	ld
>4867	ExpressionStatement	 
>4868	CallExpression	ld . OffsetLineTo ( 0 , 0 )
>4869	ArgumentList	0
>4870	Argument	0
>4871	PrimaryExpression	0
>4872	Argument	0
>4873	PrimaryExpression	0
>4874	Callee	ld . OffsetLineTo
>4875	MemberAccess	ld . OffsetLineTo
>4876	Identifier	OffsetLineTo
>4877	Identifier	ld
>4878	ExpressionStatement	 
>4879	CallExpression	ld . InitOffsetMoveTo ( 11 , 5 )
>4880	ArgumentList	11
>4881	Argument	5
>4882	PrimaryExpression	5
>4883	Argument	11
>4884	PrimaryExpression	11
>4885	Callee	ld . InitOffsetMoveTo
>4886	MemberAccess	ld . InitOffsetMoveTo
>4887	Identifier	InitOffsetMoveTo
>4888	Identifier	ld
>4889	ForStatement	for ( i = 0 ; i < 3 ; i ++ )
>4890	CompoundStatement	 
>4891	ExpressionStatement	 
>4892	CallExpression	ld . OffsetLineTo ( 2 , 2 )
>4893	ArgumentList	2
>4894	Argument	2
>4895	PrimaryExpression	2
>4896	Argument	2
>4897	PrimaryExpression	2
>4898	Callee	ld . OffsetLineTo
>4899	MemberAccess	ld . OffsetLineTo
>4900	Identifier	OffsetLineTo
>4901	Identifier	ld
>4902	ExpressionStatement	 
>4903	CallExpression	ld . InitOffsetMoveTo ( 3 + i * 2 , 3 )
>4904	ArgumentList	3 + i * 2
>4905	Argument	3
>4906	PrimaryExpression	3
>4907	Argument	3 + i * 2
>4908	AdditiveExpression	3 + i * 2
>4909	MultiplicativeExpression	i * 2
>4910	PrimaryExpression	2
>4911	Identifier	i
>4912	PrimaryExpression	3
>4913	Callee	ld . InitOffsetMoveTo
>4914	MemberAccess	ld . InitOffsetMoveTo
>4915	Identifier	InitOffsetMoveTo
>4916	Identifier	ld
>4917	IncDecOp	 
>4918	IncDec	++
>4919	Identifier	i
>4920	Condition	 
>4921	RelationalExpression	i < 3
>4922	PrimaryExpression	3
>4923	Identifier	i
>4924	ForInit	 
>4925	AssignmentExpr	i = 0
>4926	PrimaryExpression	0
>4927	Identifier	i
>4928	ExpressionStatement	 
>4929	CallExpression	ld . OffsetLineTo ( 0 , 0 )
>4930	ArgumentList	0
>4931	Argument	0
>4932	PrimaryExpression	0
>4933	Argument	0
>4934	PrimaryExpression	0
>4935	Callee	ld . OffsetLineTo
>4936	MemberAccess	ld . OffsetLineTo
>4937	Identifier	OffsetLineTo
>4938	Identifier	ld
>4939	ExpressionStatement	 
>4940	CallExpression	ld . InitOffsetMoveTo ( 3 , 5 )
>4941	ArgumentList	3
>4942	Argument	5
>4943	PrimaryExpression	5
>4944	Argument	3
>4945	PrimaryExpression	3
>4946	Callee	ld . InitOffsetMoveTo
>4947	MemberAccess	ld . InitOffsetMoveTo
>4948	Identifier	InitOffsetMoveTo
>4949	Identifier	ld
>4950	ExpressionStatement	 
>4951	CallExpression	memDC . SelectObject ( & grayPen )
>4952	ArgumentList	& grayPen
>4953	Argument	& grayPen
>4954	UnaryOp	& grayPen
>4955	Identifier	grayPen
>4956	UnaryOperator	&
>4957	Callee	memDC . SelectObject
>4958	MemberAccess	memDC . SelectObject
>4959	Identifier	SelectObject
>4960	Identifier	memDC
>4961	ExpressionStatement	 
>4962	CallExpression	ld . OffsetLineTo ( 4 , 0 )
>4963	ArgumentList	4
>4964	Argument	0
>4965	PrimaryExpression	0
>4966	Argument	4
>4967	PrimaryExpression	4
>4968	Callee	ld . OffsetLineTo
>4969	MemberAccess	ld . OffsetLineTo
>4970	Identifier	OffsetLineTo
>4971	Identifier	ld
>4972	ExpressionStatement	 
>4973	CallExpression	ld . OffsetLineTo ( 2 , 2 )
>4974	ArgumentList	2
>4975	Argument	2
>4976	PrimaryExpression	2
>4977	Argument	2
>4978	PrimaryExpression	2
>4979	Callee	ld . OffsetLineTo
>4980	MemberAccess	ld . OffsetLineTo
>4981	Identifier	OffsetLineTo
>4982	Identifier	ld
>4983	ExpressionStatement	 
>4984	CallExpression	ld . OffsetLineTo ( 4 , 0 )
>4985	ArgumentList	4
>4986	Argument	0
>4987	PrimaryExpression	0
>4988	Argument	4
>4989	PrimaryExpression	4
>4990	Callee	ld . OffsetLineTo
>4991	MemberAccess	ld . OffsetLineTo
>4992	Identifier	OffsetLineTo
>4993	Identifier	ld
>4994	ExpressionStatement	 
>4995	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>4996	ArgumentList	1
>4997	Argument	- 1
>4998	UnaryOp	- 1
>4999	PrimaryExpression	1
>5000	UnaryOperator	-
>5001	Argument	1
>5002	PrimaryExpression	1
>5003	Callee	ld . OffsetLineTo
>5004	MemberAccess	ld . OffsetLineTo
>5005	Identifier	OffsetLineTo
>5006	Identifier	ld
>5007	ExpressionStatement	 
>5008	CallExpression	ld . OffsetLineTo ( 0 , - 2 )
>5009	ArgumentList	0
>5010	Argument	- 2
>5011	UnaryOp	- 2
>5012	PrimaryExpression	2
>5013	UnaryOperator	-
>5014	Argument	0
>5015	PrimaryExpression	0
>5016	Callee	ld . OffsetLineTo
>5017	MemberAccess	ld . OffsetLineTo
>5018	Identifier	OffsetLineTo
>5019	Identifier	ld
>5020	ExpressionStatement	 
>5021	CallExpression	ld . InitOffsetMoveTo ( 2 , 5 )
>5022	ArgumentList	2
>5023	Argument	5
>5024	PrimaryExpression	5
>5025	Argument	2
>5026	PrimaryExpression	2
>5027	Callee	ld . InitOffsetMoveTo
>5028	MemberAccess	ld . InitOffsetMoveTo
>5029	Identifier	InitOffsetMoveTo
>5030	Identifier	ld
>5031	ExpressionStatement	 
>5032	CallExpression	memDC . SelectObject ( & whitePen )
>5033	ArgumentList	& whitePen
>5034	Argument	& whitePen
>5035	UnaryOp	& whitePen
>5036	Identifier	whitePen
>5037	UnaryOperator	&
>5038	Callee	memDC . SelectObject
>5039	MemberAccess	memDC . SelectObject
>5040	Identifier	SelectObject
>5041	Identifier	memDC
>5042	ExpressionStatement	 
>5043	CallExpression	ld . OffsetLineTo ( 0 , 7 )
>5044	ArgumentList	0
>5045	Argument	7
>5046	PrimaryExpression	7
>5047	Argument	0
>5048	PrimaryExpression	0
>5049	Callee	ld . OffsetLineTo
>5050	MemberAccess	ld . OffsetLineTo
>5051	Identifier	OffsetLineTo
>5052	Identifier	ld
>5053	ExpressionStatement	 
>5054	CallExpression	ld . OffsetLineTo ( 5 , 0 )
>5055	ArgumentList	5
>5056	Argument	0
>5057	PrimaryExpression	0
>5058	Argument	5
>5059	PrimaryExpression	5
>5060	Callee	ld . OffsetLineTo
>5061	MemberAccess	ld . OffsetLineTo
>5062	Identifier	OffsetLineTo
>5063	Identifier	ld
>5064	ExpressionStatement	 
>5065	CallExpression	ld . OffsetLineTo ( 2 , 2 )
>5066	ArgumentList	2
>5067	Argument	2
>5068	PrimaryExpression	2
>5069	Argument	2
>5070	PrimaryExpression	2
>5071	Callee	ld . OffsetLineTo
>5072	MemberAccess	ld . OffsetLineTo
>5073	Identifier	OffsetLineTo
>5074	Identifier	ld
>5075	ExpressionStatement	 
>5076	CallExpression	ld . OffsetLineTo ( 4 , 0 )
>5077	ArgumentList	4
>5078	Argument	0
>5079	PrimaryExpression	0
>5080	Argument	4
>5081	PrimaryExpression	4
>5082	Callee	ld . OffsetLineTo
>5083	MemberAccess	ld . OffsetLineTo
>5084	Identifier	OffsetLineTo
>5085	Identifier	ld
>5086	ExpressionStatement	 
>5087	CallExpression	ld . OffsetLineTo ( 2 , - 2 )
>5088	ArgumentList	2
>5089	Argument	- 2
>5090	UnaryOp	- 2
>5091	PrimaryExpression	2
>5092	UnaryOperator	-
>5093	Argument	2
>5094	PrimaryExpression	2
>5095	Callee	ld . OffsetLineTo
>5096	MemberAccess	ld . OffsetLineTo
>5097	Identifier	OffsetLineTo
>5098	Identifier	ld
>5099	ExpressionStatement	 
>5100	CallExpression	ld . OffsetLineTo ( 0 , - 2 )
>5101	ArgumentList	0
>5102	Argument	- 2
>5103	UnaryOp	- 2
>5104	PrimaryExpression	2
>5105	UnaryOperator	-
>5106	Argument	0
>5107	PrimaryExpression	0
>5108	Callee	ld . OffsetLineTo
>5109	MemberAccess	ld . OffsetLineTo
>5110	Identifier	OffsetLineTo
>5111	Identifier	ld
>5112	ExpressionStatement	 
>5113	CallExpression	ld . InitOffsetMoveTo ( 1 , 5 )
>5114	ArgumentList	1
>5115	Argument	5
>5116	PrimaryExpression	5
>5117	Argument	1
>5118	PrimaryExpression	1
>5119	Callee	ld . InitOffsetMoveTo
>5120	MemberAccess	ld . InitOffsetMoveTo
>5121	Identifier	InitOffsetMoveTo
>5122	Identifier	ld
>5123	ExpressionStatement	 
>5124	CallExpression	memDC . SelectObject ( & darkPen )
>5125	ArgumentList	& darkPen
>5126	Argument	& darkPen
>5127	UnaryOp	& darkPen
>5128	Identifier	darkPen
>5129	UnaryOperator	&
>5130	Callee	memDC . SelectObject
>5131	MemberAccess	memDC . SelectObject
>5132	Identifier	SelectObject
>5133	Identifier	memDC
>5134	ForStatement	for ( i = 0 ; i < 5 ; i ++ )
>5135	CompoundStatement	 
>5136	IfStatement	if ( i == 4 )
>5137	ElseStatement	else
>5138	ExpressionStatement	 
>5139	CallExpression	ld . OffsetLineTo ( 3 , 3 )
>5140	ArgumentList	3
>5141	Argument	3
>5142	PrimaryExpression	3
>5143	Argument	3
>5144	PrimaryExpression	3
>5145	Callee	ld . OffsetLineTo
>5146	MemberAccess	ld . OffsetLineTo
>5147	Identifier	OffsetLineTo
>5148	Identifier	ld
>5149	ExpressionStatement	 
>5150	CallExpression	ld . OffsetLineTo ( 0 , 0 )
>5151	ArgumentList	0
>5152	Argument	0
>5153	PrimaryExpression	0
>5154	Argument	0
>5155	PrimaryExpression	0
>5156	Callee	ld . OffsetLineTo
>5157	MemberAccess	ld . OffsetLineTo
>5158	Identifier	OffsetLineTo
>5159	Identifier	ld
>5160	Condition	 
>5161	EqualityExpression	i == 4
>5162	PrimaryExpression	4
>5163	Identifier	i
>5164	ExpressionStatement	 
>5165	CallExpression	ld . InitOffsetMoveTo ( 3 + i * 2 , 8 )
>5166	ArgumentList	3 + i * 2
>5167	Argument	8
>5168	PrimaryExpression	8
>5169	Argument	3 + i * 2
>5170	AdditiveExpression	3 + i * 2
>5171	MultiplicativeExpression	i * 2
>5172	PrimaryExpression	2
>5173	Identifier	i
>5174	PrimaryExpression	3
>5175	Callee	ld . InitOffsetMoveTo
>5176	MemberAccess	ld . InitOffsetMoveTo
>5177	Identifier	InitOffsetMoveTo
>5178	Identifier	ld
>5179	IncDecOp	 
>5180	IncDec	++
>5181	Identifier	i
>5182	Condition	 
>5183	RelationalExpression	i < 5
>5184	PrimaryExpression	5
>5185	Identifier	i
>5186	ForInit	 
>5187	AssignmentExpr	i = 0
>5188	PrimaryExpression	0
>5189	Identifier	i
>5190	ExpressionStatement	 
>5191	CallExpression	ld . OffsetLineTo ( 1 , 1 )
>5192	ArgumentList	1
>5193	Argument	1
>5194	PrimaryExpression	1
>5195	Argument	1
>5196	PrimaryExpression	1
>5197	Callee	ld . OffsetLineTo
>5198	MemberAccess	ld . OffsetLineTo
>5199	Identifier	OffsetLineTo
>5200	Identifier	ld
>5201	ExpressionStatement	 
>5202	CallExpression	ld . InitOffsetMoveTo ( 3 , 10 )
>5203	ArgumentList	3
>5204	Argument	10
>5205	PrimaryExpression	10
>5206	Argument	3
>5207	PrimaryExpression	3
>5208	Callee	ld . InitOffsetMoveTo
>5209	MemberAccess	ld . InitOffsetMoveTo
>5210	Identifier	InitOffsetMoveTo
>5211	Identifier	ld
>5212	ExpressionStatement	 
>5213	CallExpression	memDC . SelectObject ( & yellowPen )
>5214	ArgumentList	& yellowPen
>5215	Argument	& yellowPen
>5216	UnaryOp	& yellowPen
>5217	Identifier	yellowPen
>5218	UnaryOperator	&
>5219	Callee	memDC . SelectObject
>5220	MemberAccess	memDC . SelectObject
>5221	Identifier	SelectObject
>5222	Identifier	memDC
>5223	ForStatement	for ( i = 0 ; i < 5 ; i ++ )
>5224	CompoundStatement	 
>5225	IfStatement	if ( i == 4 )
>5226	ElseStatement	else
>5227	ExpressionStatement	 
>5228	CallExpression	ld . OffsetLineTo ( 3 , 3 )
>5229	ArgumentList	3
>5230	Argument	3
>5231	PrimaryExpression	3
>5232	Argument	3
>5233	PrimaryExpression	3
>5234	Callee	ld . OffsetLineTo
>5235	MemberAccess	ld . OffsetLineTo
>5236	Identifier	OffsetLineTo
>5237	Identifier	ld
>5238	ExpressionStatement	 
>5239	CallExpression	ld . OffsetLineTo ( 2 , 2 )
>5240	ArgumentList	2
>5241	Argument	2
>5242	PrimaryExpression	2
>5243	Argument	2
>5244	PrimaryExpression	2
>5245	Callee	ld . OffsetLineTo
>5246	MemberAccess	ld . OffsetLineTo
>5247	Identifier	OffsetLineTo
>5248	Identifier	ld
>5249	Condition	 
>5250	EqualityExpression	i == 4
>5251	PrimaryExpression	4
>5252	Identifier	i
>5253	ExpressionStatement	 
>5254	CallExpression	ld . InitOffsetMoveTo ( i * 2 + 2 , 8 )
>5255	ArgumentList	i * 2 + 2
>5256	Argument	8
>5257	PrimaryExpression	8
>5258	Argument	i * 2 + 2
>5259	AdditiveExpression	i * 2 + 2
>5260	PrimaryExpression	2
>5261	MultiplicativeExpression	i * 2
>5262	PrimaryExpression	2
>5263	Identifier	i
>5264	Callee	ld . InitOffsetMoveTo
>5265	MemberAccess	ld . InitOffsetMoveTo
>5266	Identifier	InitOffsetMoveTo
>5267	Identifier	ld
>5268	IncDecOp	 
>5269	IncDec	++
>5270	Identifier	i
>5271	Condition	 
>5272	RelationalExpression	i < 5
>5273	PrimaryExpression	5
>5274	Identifier	i
>5275	ForInit	 
>5276	AssignmentExpr	i = 0
>5277	PrimaryExpression	0
>5278	Identifier	i
>5279	ExpressionStatement	 
>5280	CallExpression	ld . OffsetLineTo ( 3 , 3 )
>5281	ArgumentList	3
>5282	Argument	3
>5283	PrimaryExpression	3
>5284	Argument	3
>5285	PrimaryExpression	3
>5286	Callee	ld . OffsetLineTo
>5287	MemberAccess	ld . OffsetLineTo
>5288	Identifier	OffsetLineTo
>5289	Identifier	ld
>5290	ExpressionStatement	 
>5291	CallExpression	ld . InitOffsetMoveTo ( 2 , 8 )
>5292	ArgumentList	2
>5293	Argument	8
>5294	PrimaryExpression	8
>5295	Argument	2
>5296	PrimaryExpression	2
>5297	Callee	ld . InitOffsetMoveTo
>5298	MemberAccess	ld . InitOffsetMoveTo
>5299	Identifier	InitOffsetMoveTo
>5300	Identifier	ld
>5301	ExpressionStatement	 
>5302	CallExpression	memDC . SelectObject ( & grayPen )
>5303	ArgumentList	& grayPen
>5304	Argument	& grayPen
>5305	UnaryOp	& grayPen
>5306	Identifier	grayPen
>5307	UnaryOperator	&
>5308	Callee	memDC . SelectObject
>5309	MemberAccess	memDC . SelectObject
>5310	Identifier	SelectObject
>5311	Identifier	memDC
>5312	ExpressionStatement	 
>5313	CallExpression	ld . OffsetLineTo ( - 1 , 1 )
>5314	ArgumentList	- 1
>5315	Argument	1
>5316	PrimaryExpression	1
>5317	Argument	- 1
>5318	UnaryOp	- 1
>5319	PrimaryExpression	1
>5320	UnaryOperator	-
>5321	Callee	ld . OffsetLineTo
>5322	MemberAccess	ld . OffsetLineTo
>5323	Identifier	OffsetLineTo
>5324	Identifier	ld
>5325	ExpressionStatement	 
>5326	CallExpression	ld . OffsetMoveTo ( 2 , 1 )
>5327	ArgumentList	2
>5328	Argument	1
>5329	PrimaryExpression	1
>5330	Argument	2
>5331	PrimaryExpression	2
>5332	Callee	ld . OffsetMoveTo
>5333	MemberAccess	ld . OffsetMoveTo
>5334	Identifier	OffsetMoveTo
>5335	Identifier	ld
>5336	ExpressionStatement	 
>5337	CallExpression	ld . OffsetLineTo ( - 1 , 1 )
>5338	ArgumentList	- 1
>5339	Argument	1
>5340	PrimaryExpression	1
>5341	Argument	- 1
>5342	UnaryOp	- 1
>5343	PrimaryExpression	1
>5344	UnaryOperator	-
>5345	Callee	ld . OffsetLineTo
>5346	MemberAccess	ld . OffsetLineTo
>5347	Identifier	OffsetLineTo
>5348	Identifier	ld
>5349	ExpressionStatement	 
>5350	CallExpression	ld . OffsetLineTo ( 12 , 0 )
>5351	ArgumentList	12
>5352	Argument	0
>5353	PrimaryExpression	0
>5354	Argument	12
>5355	PrimaryExpression	12
>5356	Callee	ld . OffsetLineTo
>5357	MemberAccess	ld . OffsetLineTo
>5358	Identifier	OffsetLineTo
>5359	Identifier	ld
>5360	ExpressionStatement	 
>5361	CallExpression	ld . OffsetLineTo ( 0 , - 1 )
>5362	ArgumentList	0
>5363	Argument	- 1
>5364	UnaryOp	- 1
>5365	PrimaryExpression	1
>5366	UnaryOperator	-
>5367	Argument	0
>5368	PrimaryExpression	0
>5369	Callee	ld . OffsetLineTo
>5370	MemberAccess	ld . OffsetLineTo
>5371	Identifier	OffsetLineTo
>5372	Identifier	ld
>5373	ExpressionStatement	 
>5374	CallExpression	ld . OffsetLineTo ( - 2 , - 5 )
>5375	ArgumentList	- 2
>5376	Argument	- 5
>5377	UnaryOp	- 5
>5378	PrimaryExpression	5
>5379	UnaryOperator	-
>5380	Argument	- 2
>5381	UnaryOp	- 2
>5382	PrimaryExpression	2
>5383	UnaryOperator	-
>5384	Callee	ld . OffsetLineTo
>5385	MemberAccess	ld . OffsetLineTo
>5386	Identifier	OffsetLineTo
>5387	Identifier	ld
>5388	ExpressionStatement	 
>5389	CallExpression	ld . OffsetLineTo ( - 11 , 0 )
>5390	ArgumentList	- 11
>5391	Argument	0
>5392	PrimaryExpression	0
>5393	Argument	- 11
>5394	UnaryOp	- 11
>5395	PrimaryExpression	11
>5396	UnaryOperator	-
>5397	Callee	ld . OffsetLineTo
>5398	MemberAccess	ld . OffsetLineTo
>5399	Identifier	OffsetLineTo
>5400	Identifier	ld
>5401	ExpressionStatement	 
>5402	CallExpression	ld . OffsetLineTo ( 0 , 1 )
>5403	ArgumentList	0
>5404	Argument	1
>5405	PrimaryExpression	1
>5406	Argument	0
>5407	PrimaryExpression	0
>5408	Callee	ld . OffsetLineTo
>5409	MemberAccess	ld . OffsetLineTo
>5410	Identifier	OffsetLineTo
>5411	Identifier	ld
>5412	ExpressionStatement	 
>5413	CallExpression	ld . InitOffsetMoveTo ( 13 , 11 )
>5414	ArgumentList	13
>5415	Argument	11
>5416	PrimaryExpression	11
>5417	Argument	13
>5418	PrimaryExpression	13
>5419	Callee	ld . InitOffsetMoveTo
>5420	MemberAccess	ld . InitOffsetMoveTo
>5421	Identifier	InitOffsetMoveTo
>5422	Identifier	ld
>5423	ExpressionStatement	 
>5424	CallExpression	memDC . SelectObject ( & darkPen )
>5425	ArgumentList	& darkPen
>5426	Argument	& darkPen
>5427	UnaryOp	& darkPen
>5428	Identifier	darkPen
>5429	UnaryOperator	&
>5430	Callee	memDC . SelectObject
>5431	MemberAccess	memDC . SelectObject
>5432	Identifier	SelectObject
>5433	Identifier	memDC
>5434	ExpressionStatement	 
>5435	CallExpression	ld . OffsetLineTo ( 9 , 0 )
>5436	ArgumentList	9
>5437	Argument	0
>5438	PrimaryExpression	0
>5439	Argument	9
>5440	PrimaryExpression	9
>5441	Callee	ld . OffsetLineTo
>5442	MemberAccess	ld . OffsetLineTo
>5443	Identifier	OffsetLineTo
>5444	Identifier	ld
>5445	ExpressionStatement	 
>5446	CallExpression	ld . OffsetLineTo ( - 2 , - 5 )
>5447	ArgumentList	- 2
>5448	Argument	- 5
>5449	UnaryOp	- 5
>5450	PrimaryExpression	5
>5451	UnaryOperator	-
>5452	Argument	- 2
>5453	UnaryOp	- 2
>5454	PrimaryExpression	2
>5455	UnaryOperator	-
>5456	Callee	ld . OffsetLineTo
>5457	MemberAccess	ld . OffsetLineTo
>5458	Identifier	OffsetLineTo
>5459	Identifier	ld
>5460	ExpressionStatement	 
>5461	CallExpression	ld . InitOffsetMoveTo ( 3 , 12 )
>5462	ArgumentList	3
>5463	Argument	12
>5464	PrimaryExpression	12
>5465	Argument	3
>5466	PrimaryExpression	3
>5467	Callee	ld . InitOffsetMoveTo
>5468	MemberAccess	ld . InitOffsetMoveTo
>5469	Identifier	InitOffsetMoveTo
>5470	Identifier	ld
>5471	ExpressionStatement	 
>5472	CallExpression	memDC . SelectObject ( & whitePen )
>5473	ArgumentList	& whitePen
>5474	Argument	& whitePen
>5475	UnaryOp	& whitePen
>5476	Identifier	whitePen
>5477	UnaryOperator	&
>5478	Callee	memDC . SelectObject
>5479	MemberAccess	memDC . SelectObject
>5480	Identifier	SelectObject
>5481	Identifier	memDC
>5482	ExpressionStatement	 
>5483	CallExpression	ld . OffsetLineTo ( - 2 , - 5 )
>5484	ArgumentList	- 2
>5485	Argument	- 5
>5486	UnaryOp	- 5
>5487	PrimaryExpression	5
>5488	UnaryOperator	-
>5489	Argument	- 2
>5490	UnaryOp	- 2
>5491	PrimaryExpression	2
>5492	UnaryOperator	-
>5493	Callee	ld . OffsetLineTo
>5494	MemberAccess	ld . OffsetLineTo
>5495	Identifier	OffsetLineTo
>5496	Identifier	ld
>5497	ExpressionStatement	 
>5498	CallExpression	ld . OffsetMoveTo ( 11 , - 1 )
>5499	ArgumentList	11
>5500	Argument	- 1
>5501	UnaryOp	- 1
>5502	PrimaryExpression	1
>5503	UnaryOperator	-
>5504	Argument	11
>5505	PrimaryExpression	11
>5506	Callee	ld . OffsetMoveTo
>5507	MemberAccess	ld . OffsetMoveTo
>5508	Identifier	OffsetMoveTo
>5509	Identifier	ld
>5510	ExpressionStatement	 
>5511	CallExpression	ld . OffsetLineTo ( - 12 , 0 )
>5512	ArgumentList	- 12
>5513	Argument	0
>5514	PrimaryExpression	0
>5515	Argument	- 12
>5516	UnaryOp	- 12
>5517	PrimaryExpression	12
>5518	UnaryOperator	-
>5519	Callee	ld . OffsetLineTo
>5520	MemberAccess	ld . OffsetLineTo
>5521	Identifier	OffsetLineTo
>5522	Identifier	ld
>5523	ExpressionStatement	 
>5524	CallExpression	ld . OffsetLineTo ( 0 , 9 )
>5525	ArgumentList	0
>5526	Argument	9
>5527	PrimaryExpression	9
>5528	Argument	0
>5529	PrimaryExpression	0
>5530	Callee	ld . OffsetLineTo
>5531	MemberAccess	ld . OffsetLineTo
>5532	Identifier	OffsetLineTo
>5533	Identifier	ld
>5534	ExpressionStatement	 
>5535	CallExpression	ld . InitOffsetMoveTo ( 15 , 4 )
>5536	ArgumentList	15
>5537	Argument	4
>5538	PrimaryExpression	4
>5539	Argument	15
>5540	PrimaryExpression	15
>5541	Callee	ld . InitOffsetMoveTo
>5542	MemberAccess	ld . InitOffsetMoveTo
>5543	Identifier	InitOffsetMoveTo
>5544	Identifier	ld
>5545	ExpressionStatement	 
>5546	CallExpression	memDC . SelectObject ( & blackPen )
>5547	ArgumentList	& blackPen
>5548	Argument	& blackPen
>5549	UnaryOp	& blackPen
>5550	Identifier	blackPen
>5551	UnaryOperator	&
>5552	Callee	memDC . SelectObject
>5553	MemberAccess	memDC . SelectObject
>5554	Identifier	SelectObject
>5555	Identifier	memDC
>5556	ExpressionStatement	 
>5557	CallExpression	grayPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_GRAY 
>5558	ArgumentList	PS_SOLID
>5559	Argument	DISABLED ? BC_COLOR_GRAY 
>5560	ConditionalExpression	DISABLED ? BC_COLOR_GRAY 
>5561	Identifier	BC_COLOR_GRAY
>5562	Identifier	BC_COLOR_GRAY
>5563	Condition	DISABLED
>5564	Identifier	DISABLED
>5565	Argument	1
>5566	PrimaryExpression	1
>5567	Argument	PS_SOLID
>5568	Identifier	PS_SOLID
>5569	Callee	grayPen . CreatePen
>5570	MemberAccess	grayPen . CreatePen
>5571	Identifier	CreatePen
>5572	Identifier	grayPen
>5573	ExpressionStatement	 
>5574	CallExpression	darkPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_DARK 
>5575	ArgumentList	PS_SOLID
>5576	Argument	DISABLED ? BC_COLOR_DARK 
>5577	ConditionalExpression	DISABLED ? BC_COLOR_DARK 
>5578	Identifier	BC_COLOR_DARK
>5579	Identifier	BC_COLOR_DARK
>5580	Condition	DISABLED
>5581	Identifier	DISABLED
>5582	Argument	1
>5583	PrimaryExpression	1
>5584	Argument	PS_SOLID
>5585	Identifier	PS_SOLID
>5586	Callee	darkPen . CreatePen
>5587	MemberAccess	darkPen . CreatePen
>5588	Identifier	CreatePen
>5589	Identifier	darkPen
>5590	ExpressionStatement	 
>5591	CallExpression	yellowPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_GRAY 
>5592	ArgumentList	PS_SOLID
>5593	Argument	DISABLED ? BC_COLOR_GRAY 
>5594	ConditionalExpression	DISABLED ? BC_COLOR_GRAY 
>5595	Identifier	BC_COLOR_YELLOW
>5596	Identifier	BC_COLOR_GRAY
>5597	Condition	DISABLED
>5598	Identifier	DISABLED
>5599	Argument	1
>5600	PrimaryExpression	1
>5601	Argument	PS_SOLID
>5602	Identifier	PS_SOLID
>5603	Callee	yellowPen . CreatePen
>5604	MemberAccess	yellowPen . CreatePen
>5605	Identifier	CreatePen
>5606	Identifier	yellowPen
>5607	ExpressionStatement	 
>5608	CallExpression	whitePen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_WHITE 
>5609	ArgumentList	PS_SOLID
>5610	Argument	DISABLED ? BC_COLOR_WHITE 
>5611	ConditionalExpression	DISABLED ? BC_COLOR_WHITE 
>5612	Identifier	BC_COLOR_WHITE
>5613	Identifier	BC_COLOR_WHITE
>5614	Condition	DISABLED
>5615	Identifier	DISABLED
>5616	Argument	1
>5617	PrimaryExpression	1
>5618	Argument	PS_SOLID
>5619	Identifier	PS_SOLID
>5620	Callee	whitePen . CreatePen
>5621	MemberAccess	whitePen . CreatePen
>5622	Identifier	CreatePen
>5623	Identifier	whitePen
>5624	ExpressionStatement	 
>5625	CallExpression	blackPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_DARK 
>5626	ArgumentList	PS_SOLID
>5627	Argument	DISABLED ? BC_COLOR_DARK 
>5628	ConditionalExpression	DISABLED ? BC_COLOR_DARK 
>5629	Identifier	BC_COLOR_BLACK
>5630	Identifier	BC_COLOR_DARK
>5631	Condition	DISABLED
>5632	Identifier	DISABLED
>5633	Argument	1
>5634	PrimaryExpression	1
>5635	Argument	PS_SOLID
>5636	Identifier	PS_SOLID
>5637	Callee	blackPen . CreatePen
>5638	MemberAccess	blackPen . CreatePen
>5639	Identifier	CreatePen
>5640	Identifier	blackPen
>5641	IdentifierDeclStatement	 
>5642	IdentifierDecl	grayPen
>5643	Identifier	grayPen
>5644	IdentifierDeclType	CPen
>5645	IdentifierDecl	darkPen
>5646	Identifier	darkPen
>5647	IdentifierDeclType	CPen
>5648	IdentifierDecl	yellowPen
>5649	Identifier	yellowPen
>5650	IdentifierDeclType	CPen
>5651	IdentifierDecl	whitePen
>5652	Identifier	whitePen
>5653	IdentifierDeclType	CPen
>5654	IdentifierDecl	blackPen
>5655	Identifier	blackPen
>5656	IdentifierDeclType	CPen
>5657	IdentifierDeclStatement	 
>5658	IdentifierDecl	i = 0
>5659	AssignmentExpr	i = 0
>5660	PrimaryExpression	0
>5661	Identifier	i
>5662	Identifier	i
>5663	IdentifierDeclType	int
>5664	IdentifierDeclStatement	 
>5665	IdentifierDecl	DISABLED = ( GetStyle ( ) & WS_DISABLED ) != 0
>5666	AssignmentExpr	DISABLED = ( GetStyle ( ) & WS_DISABLED ) != 0
>5667	EqualityExpression	( GetStyle ( ) & WS_DISABLED ) != 0
>5668	PrimaryExpression	0
>5669	BitAndExpression	GetStyle ( ) & WS_DISABLED
>5670	Identifier	WS_DISABLED
>5671	CallExpression	GetStyle ( )
>5672	ArgumentList	 
>5673	Callee	GetStyle
>5674	Identifier	GetStyle
>5675	Identifier	DISABLED
>5676	Identifier	DISABLED
>5677	IdentifierDeclType	const BOOL
>5678	IdentifierDeclStatement	 
>5679	IdentifierDecl	ld ( & memDC )
>5680	UnaryOp	& memDC
>5681	Identifier	memDC
>5682	UnaryOperator	&
>5683	Identifier	ld
>5684	IdentifierDeclType	CLineDraw
>5685	ExpressionStatement	 
>5686	CallExpression	PrepareMemDC ( & memDC , & bmp , pDC , rect , bkColor )
>5687	ArgumentList	& memDC
>5688	Argument	bkColor
>5689	Identifier	bkColor
>5690	Argument	rect
>5691	Identifier	rect
>5692	Argument	pDC
>5693	Identifier	pDC
>5694	Argument	& bmp
>5695	UnaryOp	& bmp
>5696	Identifier	bmp
>5697	UnaryOperator	&
>5698	Argument	& memDC
>5699	UnaryOp	& memDC
>5700	Identifier	memDC
>5701	UnaryOperator	&
>5702	Callee	PrepareMemDC
>5703	Identifier	PrepareMemDC
>5704	IdentifierDeclStatement	 
>5705	IdentifierDecl	bmp
>5706	Identifier	bmp
>5707	IdentifierDeclType	CBitmap
>5708	IdentifierDeclStatement	 
>5709	IdentifierDecl	memDC
>5710	Identifier	memDC
>5711	IdentifierDeclType	CDC
>5748	FunctionDef	CBrowseCtrl 
>5749	ParameterList	CDC * pDC , COLORREF bkColor , const CRect & rect
>5750	Parameter	 
>5751	Identifier	rect
>5752	ParameterType	const CRect &
>5753	Parameter	 
>5754	Identifier	bkColor
>5755	ParameterType	COLORREF
>5756	Parameter	 
>5757	Identifier	pDC
>5758	ParameterType	CDC *
>5759	ReturnType	void
>5760	CompoundStatement	 
>5761	ExpressionStatement	 
>5762	CallExpression	bmp . DeleteObject ( )
>5763	ArgumentList	 
>5764	Callee	bmp . DeleteObject
>5765	MemberAccess	bmp . DeleteObject
>5766	Identifier	DeleteObject
>5767	Identifier	bmp
>5768	ExpressionStatement	 
>5769	CallExpression	navyPen . DeleteObject ( )
>5770	ArgumentList	 
>5771	Callee	navyPen . DeleteObject
>5772	MemberAccess	navyPen . DeleteObject
>5773	Identifier	DeleteObject
>5774	Identifier	navyPen
>5775	ExpressionStatement	 
>5776	CallExpression	bluePen . DeleteObject ( )
>5777	ArgumentList	 
>5778	Callee	bluePen . DeleteObject
>5779	MemberAccess	bluePen . DeleteObject
>5780	Identifier	DeleteObject
>5781	Identifier	bluePen
>5782	ExpressionStatement	 
>5783	CallExpression	cyanPen . DeleteObject ( )
>5784	ArgumentList	 
>5785	Callee	cyanPen . DeleteObject
>5786	MemberAccess	cyanPen . DeleteObject
>5787	Identifier	DeleteObject
>5788	Identifier	cyanPen
>5789	ExpressionStatement	 
>5790	CallExpression	olivePen . DeleteObject ( )
>5791	ArgumentList	 
>5792	Callee	olivePen . DeleteObject
>5793	MemberAccess	olivePen . DeleteObject
>5794	Identifier	DeleteObject
>5795	Identifier	olivePen
>5796	ExpressionStatement	 
>5797	CallExpression	grayPen . DeleteObject ( )
>5798	ArgumentList	 
>5799	Callee	grayPen . DeleteObject
>5800	MemberAccess	grayPen . DeleteObject
>5801	Identifier	DeleteObject
>5802	Identifier	grayPen
>5803	ExpressionStatement	 
>5804	CallExpression	darkPen . DeleteObject ( )
>5805	ArgumentList	 
>5806	Callee	darkPen . DeleteObject
>5807	MemberAccess	darkPen . DeleteObject
>5808	Identifier	DeleteObject
>5809	Identifier	darkPen
>5810	ExpressionStatement	 
>5811	CallExpression	yellowPen . DeleteObject ( )
>5812	ArgumentList	 
>5813	Callee	yellowPen . DeleteObject
>5814	MemberAccess	yellowPen . DeleteObject
>5815	Identifier	DeleteObject
>5816	Identifier	yellowPen
>5817	ExpressionStatement	 
>5818	CallExpression	whitePen . DeleteObject ( )
>5819	ArgumentList	 
>5820	Callee	whitePen . DeleteObject
>5821	MemberAccess	whitePen . DeleteObject
>5822	Identifier	DeleteObject
>5823	Identifier	whitePen
>5824	ExpressionStatement	 
>5825	CallExpression	blackPen . DeleteObject ( )
>5826	ArgumentList	 
>5827	Callee	blackPen . DeleteObject
>5828	MemberAccess	blackPen . DeleteObject
>5829	Identifier	DeleteObject
>5830	Identifier	blackPen
>5831	ExpressionStatement	 
>5832	CallExpression	pDC -> BitBlt ( rect . left , rect . top , rect . Width ( ) , rect . Height ( ) , & memDC , 0 , 0 , SRCCOPY )
>5833	ArgumentList	rect . left
>5834	Argument	SRCCOPY
>5835	Identifier	SRCCOPY
>5836	Argument	0
>5837	PrimaryExpression	0
>5838	Argument	0
>5839	PrimaryExpression	0
>5840	Argument	& memDC
>5841	UnaryOp	& memDC
>5842	Identifier	memDC
>5843	UnaryOperator	&
>5844	Argument	rect . Height ( )
>5845	CallExpression	rect . Height ( )
>5846	ArgumentList	 
>5847	Callee	rect . Height
>5848	MemberAccess	rect . Height
>5849	Identifier	Height
>5850	Identifier	rect
>5851	Argument	rect . Width ( )
>5852	CallExpression	rect . Width ( )
>5853	ArgumentList	 
>5854	Callee	rect . Width
>5855	MemberAccess	rect . Width
>5856	Identifier	Width
>5857	Identifier	rect
>5858	Argument	rect . top
>5859	MemberAccess	rect . top
>5860	Identifier	top
>5861	Identifier	rect
>5862	Argument	rect . left
>5863	MemberAccess	rect . left
>5864	Identifier	left
>5865	Identifier	rect
>5866	Callee	pDC -> BitBlt
>5867	PtrMemberAccess	pDC -> BitBlt
>5868	Identifier	BitBlt
>5869	Identifier	pDC
>5870	ExpressionStatement	 
>5871	CallExpression	ld . OffsetLineTo ( - 3 , - 3 )
>5872	ArgumentList	- 3
>5873	Argument	- 3
>5874	UnaryOp	- 3
>5875	PrimaryExpression	3
>5876	UnaryOperator	-
>5877	Argument	- 3
>5878	UnaryOp	- 3
>5879	PrimaryExpression	3
>5880	UnaryOperator	-
>5881	Callee	ld . OffsetLineTo
>5882	MemberAccess	ld . OffsetLineTo
>5883	Identifier	OffsetLineTo
>5884	Identifier	ld
>5885	ExpressionStatement	 
>5886	CallExpression	ld . OffsetLineTo ( 0 , - 1 )
>5887	ArgumentList	0
>5888	Argument	- 1
>5889	UnaryOp	- 1
>5890	PrimaryExpression	1
>5891	UnaryOperator	-
>5892	Argument	0
>5893	PrimaryExpression	0
>5894	Callee	ld . OffsetLineTo
>5895	MemberAccess	ld . OffsetLineTo
>5896	Identifier	OffsetLineTo
>5897	Identifier	ld
>5898	ExpressionStatement	 
>5899	CallExpression	ld . OffsetLineTo ( 4 , 4 )
>5900	ArgumentList	4
>5901	Argument	4
>5902	PrimaryExpression	4
>5903	Argument	4
>5904	PrimaryExpression	4
>5905	Callee	ld . OffsetLineTo
>5906	MemberAccess	ld . OffsetLineTo
>5907	Identifier	OffsetLineTo
>5908	Identifier	ld
>5909	ExpressionStatement	 
>5910	CallExpression	ld . InitOffsetMoveTo ( 9 , 10 )
>5911	ArgumentList	9
>5912	Argument	10
>5913	PrimaryExpression	10
>5914	Argument	9
>5915	PrimaryExpression	9
>5916	Callee	ld . InitOffsetMoveTo
>5917	MemberAccess	ld . InitOffsetMoveTo
>5918	Identifier	InitOffsetMoveTo
>5919	Identifier	ld
>5920	ExpressionStatement	 
>5921	CallExpression	memDC . SelectObject ( & bluePen )
>5922	ArgumentList	& bluePen
>5923	Argument	& bluePen
>5924	UnaryOp	& bluePen
>5925	Identifier	bluePen
>5926	UnaryOperator	&
>5927	Callee	memDC . SelectObject
>5928	MemberAccess	memDC . SelectObject
>5929	Identifier	SelectObject
>5930	Identifier	memDC
>5931	ExpressionStatement	 
>5932	CallExpression	ld . OffsetLineTo ( 3 , 3 )
>5933	ArgumentList	3
>5934	Argument	3
>5935	PrimaryExpression	3
>5936	Argument	3
>5937	PrimaryExpression	3
>5938	Callee	ld . OffsetLineTo
>5939	MemberAccess	ld . OffsetLineTo
>5940	Identifier	OffsetLineTo
>5941	Identifier	ld
>5942	ExpressionStatement	 
>5943	CallExpression	ld . InitOffsetMoveTo ( 8 , 11 )
>5944	ArgumentList	8
>5945	Argument	11
>5946	PrimaryExpression	11
>5947	Argument	8
>5948	PrimaryExpression	8
>5949	Callee	ld . InitOffsetMoveTo
>5950	MemberAccess	ld . InitOffsetMoveTo
>5951	Identifier	InitOffsetMoveTo
>5952	Identifier	ld
>5953	ExpressionStatement	 
>5954	CallExpression	memDC . SelectObject ( & navyPen )
>5955	ArgumentList	& navyPen
>5956	Argument	& navyPen
>5957	UnaryOp	& navyPen
>5958	Identifier	navyPen
>5959	UnaryOperator	&
>5960	Callee	memDC . SelectObject
>5961	MemberAccess	memDC . SelectObject
>5962	Identifier	SelectObject
>5963	Identifier	memDC
>5964	ExpressionStatement	 
>5965	CallExpression	ld . OffsetLineTo ( 3 , 3 )
>5966	ArgumentList	3
>5967	Argument	3
>5968	PrimaryExpression	3
>5969	Argument	3
>5970	PrimaryExpression	3
>5971	Callee	ld . OffsetLineTo
>5972	MemberAccess	ld . OffsetLineTo
>5973	Identifier	OffsetLineTo
>5974	Identifier	ld
>5975	ExpressionStatement	 
>5976	CallExpression	ld . InitOffsetMoveTo ( 9 , 11 )
>5977	ArgumentList	9
>5978	Argument	11
>5979	PrimaryExpression	11
>5980	Argument	9
>5981	PrimaryExpression	9
>5982	Callee	ld . InitOffsetMoveTo
>5983	MemberAccess	ld . InitOffsetMoveTo
>5984	Identifier	InitOffsetMoveTo
>5985	Identifier	ld
>5986	ExpressionStatement	 
>5987	CallExpression	ld . OffsetLineTo ( - 1 , 1 )
>5988	ArgumentList	- 1
>5989	Argument	1
>5990	PrimaryExpression	1
>5991	Argument	- 1
>5992	UnaryOp	- 1
>5993	PrimaryExpression	1
>5994	UnaryOperator	-
>5995	Callee	ld . OffsetLineTo
>5996	MemberAccess	ld . OffsetLineTo
>5997	Identifier	OffsetLineTo
>5998	Identifier	ld
>5999	ExpressionStatement	 
>6000	CallExpression	ld . OffsetLineTo ( - 1 , - 1 )
>6001	ArgumentList	- 1
>6002	Argument	- 1
>6003	UnaryOp	- 1
>6004	PrimaryExpression	1
>6005	UnaryOperator	-
>6006	Argument	- 1
>6007	UnaryOp	- 1
>6008	PrimaryExpression	1
>6009	UnaryOperator	-
>6010	Callee	ld . OffsetLineTo
>6011	MemberAccess	ld . OffsetLineTo
>6012	Identifier	OffsetLineTo
>6013	Identifier	ld
>6014	ExpressionStatement	 
>6015	CallExpression	ld . OffsetLineTo ( 2 , - 2 )
>6016	ArgumentList	2
>6017	Argument	- 2
>6018	UnaryOp	- 2
>6019	PrimaryExpression	2
>6020	UnaryOperator	-
>6021	Argument	2
>6022	PrimaryExpression	2
>6023	Callee	ld . OffsetLineTo
>6024	MemberAccess	ld . OffsetLineTo
>6025	Identifier	OffsetLineTo
>6026	Identifier	ld
>6027	ExpressionStatement	 
>6028	CallExpression	ld . OffsetLineTo ( 2 , 2 )
>6029	ArgumentList	2
>6030	Argument	2
>6031	PrimaryExpression	2
>6032	Argument	2
>6033	PrimaryExpression	2
>6034	Callee	ld . OffsetLineTo
>6035	MemberAccess	ld . OffsetLineTo
>6036	Identifier	OffsetLineTo
>6037	Identifier	ld
>6038	ExpressionStatement	 
>6039	CallExpression	ld . OffsetLineTo ( - 2 , 2 )
>6040	ArgumentList	- 2
>6041	Argument	2
>6042	PrimaryExpression	2
>6043	Argument	- 2
>6044	UnaryOp	- 2
>6045	PrimaryExpression	2
>6046	UnaryOperator	-
>6047	Callee	ld . OffsetLineTo
>6048	MemberAccess	ld . OffsetLineTo
>6049	Identifier	OffsetLineTo
>6050	Identifier	ld
>6051	ExpressionStatement	 
>6052	CallExpression	ld . InitOffsetMoveTo ( 5 , 5 )
>6053	ArgumentList	5
>6054	Argument	5
>6055	PrimaryExpression	5
>6056	Argument	5
>6057	PrimaryExpression	5
>6058	Callee	ld . InitOffsetMoveTo
>6059	MemberAccess	ld . InitOffsetMoveTo
>6060	Identifier	InitOffsetMoveTo
>6061	Identifier	ld
>6062	ExpressionStatement	 
>6063	CallExpression	memDC . SelectObject ( & cyanPen )
>6064	ArgumentList	& cyanPen
>6065	Argument	& cyanPen
>6066	UnaryOp	& cyanPen
>6067	Identifier	cyanPen
>6068	UnaryOperator	&
>6069	Callee	memDC . SelectObject
>6070	MemberAccess	memDC . SelectObject
>6071	Identifier	SelectObject
>6072	Identifier	memDC
>6073	ExpressionStatement	 
>6074	CallExpression	ld . OffsetLineTo ( - 6 , 0 )
>6075	ArgumentList	- 6
>6076	Argument	0
>6077	PrimaryExpression	0
>6078	Argument	- 6
>6079	UnaryOp	- 6
>6080	PrimaryExpression	6
>6081	UnaryOperator	-
>6082	Callee	ld . OffsetLineTo
>6083	MemberAccess	ld . OffsetLineTo
>6084	Identifier	OffsetLineTo
>6085	Identifier	ld
>6086	ExpressionStatement	 
>6087	CallExpression	ld . OffsetMoveTo ( - 1 , 4 )
>6088	ArgumentList	- 1
>6089	Argument	4
>6090	PrimaryExpression	4
>6091	Argument	- 1
>6092	UnaryOp	- 1
>6093	PrimaryExpression	1
>6094	UnaryOperator	-
>6095	Callee	ld . OffsetMoveTo
>6096	MemberAccess	ld . OffsetMoveTo
>6097	Identifier	OffsetMoveTo
>6098	Identifier	ld
>6099	ExpressionStatement	 
>6100	CallExpression	ld . OffsetLineTo ( 0 , - 2 )
>6101	ArgumentList	0
>6102	Argument	- 2
>6103	UnaryOp	- 2
>6104	PrimaryExpression	2
>6105	UnaryOperator	-
>6106	Argument	0
>6107	PrimaryExpression	0
>6108	Callee	ld . OffsetLineTo
>6109	MemberAccess	ld . OffsetLineTo
>6110	Identifier	OffsetLineTo
>6111	Identifier	ld
>6112	ExpressionStatement	 
>6113	CallExpression	ld . OffsetLineTo ( - 1 , 0 )
>6114	ArgumentList	- 1
>6115	Argument	0
>6116	PrimaryExpression	0
>6117	Argument	- 1
>6118	UnaryOp	- 1
>6119	PrimaryExpression	1
>6120	UnaryOperator	-
>6121	Callee	ld . OffsetLineTo
>6122	MemberAccess	ld . OffsetLineTo
>6123	Identifier	OffsetLineTo
>6124	Identifier	ld
>6125	ExpressionStatement	 
>6126	CallExpression	ld . OffsetLineTo ( - 2 , - 2 )
>6127	ArgumentList	- 2
>6128	Argument	- 2
>6129	UnaryOp	- 2
>6130	PrimaryExpression	2
>6131	UnaryOperator	-
>6132	Argument	- 2
>6133	UnaryOp	- 2
>6134	PrimaryExpression	2
>6135	UnaryOperator	-
>6136	Callee	ld . OffsetLineTo
>6137	MemberAccess	ld . OffsetLineTo
>6138	Identifier	OffsetLineTo
>6139	Identifier	ld
>6140	ExpressionStatement	 
>6141	CallExpression	ld . OffsetLineTo ( - 1 , 0 )
>6142	ArgumentList	- 1
>6143	Argument	0
>6144	PrimaryExpression	0
>6145	Argument	- 1
>6146	UnaryOp	- 1
>6147	PrimaryExpression	1
>6148	UnaryOperator	-
>6149	Callee	ld . OffsetLineTo
>6150	MemberAccess	ld . OffsetLineTo
>6151	Identifier	OffsetLineTo
>6152	Identifier	ld
>6153	ExpressionStatement	 
>6154	CallExpression	ld . OffsetLineTo ( 0 , 8 )
>6155	ArgumentList	0
>6156	Argument	8
>6157	PrimaryExpression	8
>6158	Argument	0
>6159	PrimaryExpression	0
>6160	Callee	ld . OffsetLineTo
>6161	MemberAccess	ld . OffsetLineTo
>6162	Identifier	OffsetLineTo
>6163	Identifier	ld
>6164	ExpressionStatement	 
>6165	CallExpression	ld . InitOffsetMoveTo ( 13 , 3 )
>6166	ArgumentList	13
>6167	Argument	3
>6168	PrimaryExpression	3
>6169	Argument	13
>6170	PrimaryExpression	13
>6171	Callee	ld . InitOffsetMoveTo
>6172	MemberAccess	ld . InitOffsetMoveTo
>6173	Identifier	InitOffsetMoveTo
>6174	Identifier	ld
>6175	ExpressionStatement	 
>6176	CallExpression	memDC . SelectObject ( & olivePen )
>6177	ArgumentList	& olivePen
>6178	Argument	& olivePen
>6179	UnaryOp	& olivePen
>6180	Identifier	olivePen
>6181	UnaryOperator	&
>6182	Callee	memDC . SelectObject
>6183	MemberAccess	memDC . SelectObject
>6184	Identifier	SelectObject
>6185	Identifier	memDC
>6186	ExpressionStatement	 
>6187	CallExpression	ld . OffsetLineTo ( - 3 , 3 )
>6188	ArgumentList	- 3
>6189	Argument	3
>6190	PrimaryExpression	3
>6191	Argument	- 3
>6192	UnaryOp	- 3
>6193	PrimaryExpression	3
>6194	UnaryOperator	-
>6195	Callee	ld . OffsetLineTo
>6196	MemberAccess	ld . OffsetLineTo
>6197	Identifier	OffsetLineTo
>6198	Identifier	ld
>6199	ExpressionStatement	 
>6200	CallExpression	ld . OffsetMoveTo ( 2 , 0 )
>6201	ArgumentList	2
>6202	Argument	0
>6203	PrimaryExpression	0
>6204	Argument	2
>6205	PrimaryExpression	2
>6206	Callee	ld . OffsetMoveTo
>6207	MemberAccess	ld . OffsetMoveTo
>6208	Identifier	OffsetMoveTo
>6209	Identifier	ld
>6210	ExpressionStatement	 
>6211	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>6212	ArgumentList	1
>6213	Argument	- 1
>6214	UnaryOp	- 1
>6215	PrimaryExpression	1
>6216	UnaryOperator	-
>6217	Argument	1
>6218	PrimaryExpression	1
>6219	Callee	ld . OffsetLineTo
>6220	MemberAccess	ld . OffsetLineTo
>6221	Identifier	OffsetLineTo
>6222	Identifier	ld
>6223	ExpressionStatement	 
>6224	CallExpression	ld . InitOffsetMoveTo ( 3 , 6 )
>6225	ArgumentList	3
>6226	Argument	6
>6227	PrimaryExpression	6
>6228	Argument	3
>6229	PrimaryExpression	3
>6230	Callee	ld . InitOffsetMoveTo
>6231	MemberAccess	ld . InitOffsetMoveTo
>6232	Identifier	InitOffsetMoveTo
>6233	Identifier	ld
>6234	ExpressionStatement	 
>6235	CallExpression	ld . OffsetLineTo ( 11 , 0 )
>6236	ArgumentList	11
>6237	Argument	0
>6238	PrimaryExpression	0
>6239	Argument	11
>6240	PrimaryExpression	11
>6241	Callee	ld . OffsetLineTo
>6242	MemberAccess	ld . OffsetLineTo
>6243	Identifier	OffsetLineTo
>6244	Identifier	ld
>6245	ExpressionStatement	 
>6246	CallExpression	ld . OffsetLineTo ( 0 , - 7 )
>6247	ArgumentList	0
>6248	Argument	- 7
>6249	UnaryOp	- 7
>6250	PrimaryExpression	7
>6251	UnaryOperator	-
>6252	Argument	0
>6253	PrimaryExpression	0
>6254	Callee	ld . OffsetLineTo
>6255	MemberAccess	ld . OffsetLineTo
>6256	Identifier	OffsetLineTo
>6257	Identifier	ld
>6258	ExpressionStatement	 
>6259	CallExpression	ld . InitOffsetMoveTo ( 1 , 10 )
>6260	ArgumentList	1
>6261	Argument	10
>6262	PrimaryExpression	10
>6263	Argument	1
>6264	PrimaryExpression	1
>6265	Callee	ld . InitOffsetMoveTo
>6266	MemberAccess	ld . InitOffsetMoveTo
>6267	Identifier	InitOffsetMoveTo
>6268	Identifier	ld
>6269	ExpressionStatement	 
>6270	CallExpression	memDC . SelectObject ( & whitePen )
>6271	ArgumentList	& whitePen
>6272	Argument	& whitePen
>6273	UnaryOp	& whitePen
>6274	Identifier	whitePen
>6275	UnaryOperator	&
>6276	Callee	memDC . SelectObject
>6277	MemberAccess	memDC . SelectObject
>6278	Identifier	SelectObject
>6279	Identifier	memDC
>6280	ExpressionStatement	 
>6281	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>6282	ArgumentList	1
>6283	Argument	- 1
>6284	UnaryOp	- 1
>6285	PrimaryExpression	1
>6286	UnaryOperator	-
>6287	Argument	1
>6288	PrimaryExpression	1
>6289	Callee	ld . OffsetLineTo
>6290	MemberAccess	ld . OffsetLineTo
>6291	Identifier	OffsetLineTo
>6292	Identifier	ld
>6293	ExpressionStatement	 
>6294	CallExpression	ld . OffsetMoveTo ( 0 , - 4 )
>6295	ArgumentList	0
>6296	Argument	- 4
>6297	UnaryOp	- 4
>6298	PrimaryExpression	4
>6299	UnaryOperator	-
>6300	Argument	0
>6301	PrimaryExpression	0
>6302	Callee	ld . OffsetMoveTo
>6303	MemberAccess	ld . OffsetMoveTo
>6304	Identifier	OffsetMoveTo
>6305	Identifier	ld
>6306	ExpressionStatement	 
>6307	CallExpression	ld . OffsetLineTo ( - 1 , - 1 )
>6308	ArgumentList	- 1
>6309	Argument	- 1
>6310	UnaryOp	- 1
>6311	PrimaryExpression	1
>6312	UnaryOperator	-
>6313	Argument	- 1
>6314	UnaryOp	- 1
>6315	PrimaryExpression	1
>6316	UnaryOperator	-
>6317	Callee	ld . OffsetLineTo
>6318	MemberAccess	ld . OffsetLineTo
>6319	Identifier	OffsetLineTo
>6320	Identifier	ld
>6321	ExpressionStatement	 
>6322	CallExpression	ld . OffsetLineTo ( - 4 , 4 )
>6323	ArgumentList	- 4
>6324	Argument	4
>6325	PrimaryExpression	4
>6326	Argument	- 4
>6327	UnaryOp	- 4
>6328	PrimaryExpression	4
>6329	UnaryOperator	-
>6330	Callee	ld . OffsetLineTo
>6331	MemberAccess	ld . OffsetLineTo
>6332	Identifier	OffsetLineTo
>6333	Identifier	ld
>6334	ExpressionStatement	 
>6335	CallExpression	ld . OffsetMoveTo ( 0 , - 2 )
>6336	ArgumentList	0
>6337	Argument	- 2
>6338	UnaryOp	- 2
>6339	PrimaryExpression	2
>6340	UnaryOperator	-
>6341	Argument	0
>6342	PrimaryExpression	0
>6343	Callee	ld . OffsetMoveTo
>6344	MemberAccess	ld . OffsetMoveTo
>6345	Identifier	OffsetMoveTo
>6346	Identifier	ld
>6347	ExpressionStatement	 
>6348	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>6349	ArgumentList	1
>6350	Argument	- 1
>6351	UnaryOp	- 1
>6352	PrimaryExpression	1
>6353	UnaryOperator	-
>6354	Argument	1
>6355	PrimaryExpression	1
>6356	Callee	ld . OffsetLineTo
>6357	MemberAccess	ld . OffsetLineTo
>6358	Identifier	OffsetLineTo
>6359	Identifier	ld
>6360	ExpressionStatement	 
>6361	CallExpression	ld . OffsetMoveTo ( - 2 , - 1 )
>6362	ArgumentList	- 2
>6363	Argument	- 1
>6364	UnaryOp	- 1
>6365	PrimaryExpression	1
>6366	UnaryOperator	-
>6367	Argument	- 2
>6368	UnaryOp	- 2
>6369	PrimaryExpression	2
>6370	UnaryOperator	-
>6371	Callee	ld . OffsetMoveTo
>6372	MemberAccess	ld . OffsetMoveTo
>6373	Identifier	OffsetMoveTo
>6374	Identifier	ld
>6375	ExpressionStatement	 
>6376	CallExpression	ld . OffsetLineTo ( 0 , 0 )
>6377	ArgumentList	0
>6378	Argument	0
>6379	PrimaryExpression	0
>6380	Argument	0
>6381	PrimaryExpression	0
>6382	Callee	ld . OffsetLineTo
>6383	MemberAccess	ld . OffsetLineTo
>6384	Identifier	OffsetLineTo
>6385	Identifier	ld
>6386	ExpressionStatement	 
>6387	CallExpression	ld . OffsetMoveTo ( - 4 , 1 )
>6388	ArgumentList	- 4
>6389	Argument	1
>6390	PrimaryExpression	1
>6391	Argument	- 4
>6392	UnaryOp	- 4
>6393	PrimaryExpression	4
>6394	UnaryOperator	-
>6395	Callee	ld . OffsetMoveTo
>6396	MemberAccess	ld . OffsetMoveTo
>6397	Identifier	OffsetMoveTo
>6398	Identifier	ld
>6399	ExpressionStatement	 
>6400	CallExpression	ld . OffsetLineTo ( 2 , 2 )
>6401	ArgumentList	2
>6402	Argument	2
>6403	PrimaryExpression	2
>6404	Argument	2
>6405	PrimaryExpression	2
>6406	Callee	ld . OffsetLineTo
>6407	MemberAccess	ld . OffsetLineTo
>6408	Identifier	OffsetLineTo
>6409	Identifier	ld
>6410	ExpressionStatement	 
>6411	CallExpression	ld . OffsetMoveTo ( - 1 , 3 )
>6412	ArgumentList	- 1
>6413	Argument	3
>6414	PrimaryExpression	3
>6415	Argument	- 1
>6416	UnaryOp	- 1
>6417	PrimaryExpression	1
>6418	UnaryOperator	-
>6419	Callee	ld . OffsetMoveTo
>6420	MemberAccess	ld . OffsetMoveTo
>6421	Identifier	OffsetMoveTo
>6422	Identifier	ld
>6423	ExpressionStatement	 
>6424	CallExpression	ld . OffsetLineTo ( - 1 , - 1 )
>6425	ArgumentList	- 1
>6426	Argument	- 1
>6427	UnaryOp	- 1
>6428	PrimaryExpression	1
>6429	UnaryOperator	-
>6430	Argument	- 1
>6431	UnaryOp	- 1
>6432	PrimaryExpression	1
>6433	UnaryOperator	-
>6434	Callee	ld . OffsetLineTo
>6435	MemberAccess	ld . OffsetLineTo
>6436	Identifier	OffsetLineTo
>6437	Identifier	ld
>6438	ExpressionStatement	 
>6439	CallExpression	ld . OffsetMoveTo ( 0 , - 2 )
>6440	ArgumentList	0
>6441	Argument	- 2
>6442	UnaryOp	- 2
>6443	PrimaryExpression	2
>6444	UnaryOperator	-
>6445	Argument	0
>6446	PrimaryExpression	0
>6447	Callee	ld . OffsetMoveTo
>6448	MemberAccess	ld . OffsetMoveTo
>6449	Identifier	OffsetMoveTo
>6450	Identifier	ld
>6451	ExpressionStatement	 
>6452	CallExpression	ld . OffsetLineTo ( 7 , 7 )
>6453	ArgumentList	7
>6454	Argument	7
>6455	PrimaryExpression	7
>6456	Argument	7
>6457	PrimaryExpression	7
>6458	Callee	ld . OffsetLineTo
>6459	MemberAccess	ld . OffsetLineTo
>6460	Identifier	OffsetLineTo
>6461	Identifier	ld
>6462	ForStatement	for ( i = 0 ; i < 5 ; i ++ , q = - q )
>6463	ExpressionStatement	 
>6464	CallExpression	ld . OffsetLineTo ( 1 , q )
>6465	ArgumentList	1
>6466	Argument	q
>6467	Identifier	q
>6468	Argument	1
>6469	PrimaryExpression	1
>6470	Callee	ld . OffsetLineTo
>6471	MemberAccess	ld . OffsetLineTo
>6472	Identifier	OffsetLineTo
>6473	Identifier	ld
>6474	Expression	 
>6475	AssignmentExpr	q = - q
>6476	UnaryOp	- q
>6477	Identifier	q
>6478	UnaryOperator	-
>6479	Identifier	q
>6480	IncDecOp	i ++
>6481	IncDec	++
>6482	Identifier	i
>6483	Condition	 
>6484	RelationalExpression	i < 5
>6485	PrimaryExpression	5
>6486	Identifier	i
>6487	ForInit	 
>6488	AssignmentExpr	i = 0
>6489	PrimaryExpression	0
>6490	Identifier	i
>6491	IdentifierDeclStatement	 
>6492	IdentifierDecl	q = - 1
>6493	AssignmentExpr	q = - 1
>6494	UnaryOp	- 1
>6495	PrimaryExpression	1
>6496	UnaryOperator	-
>6497	Identifier	q
>6498	Identifier	q
>6499	IdentifierDeclType	int
>6500	ExpressionStatement	 
>6501	CallExpression	ld . InitOffsetMoveTo ( 1 , 2 )
>6502	ArgumentList	1
>6503	Argument	2
>6504	PrimaryExpression	2
>6505	Argument	1
>6506	PrimaryExpression	1
>6507	Callee	ld . InitOffsetMoveTo
>6508	MemberAccess	ld . InitOffsetMoveTo
>6509	Identifier	InitOffsetMoveTo
>6510	Identifier	ld
>6511	ExpressionStatement	 
>6512	CallExpression	memDC . SelectObject ( & grayPen )
>6513	ArgumentList	& grayPen
>6514	Argument	& grayPen
>6515	UnaryOp	& grayPen
>6516	Identifier	grayPen
>6517	UnaryOperator	&
>6518	Callee	memDC . SelectObject
>6519	MemberAccess	memDC . SelectObject
>6520	Identifier	SelectObject
>6521	Identifier	memDC
>6522	ExpressionStatement	 
>6523	CallExpression	ld . OffsetLineTo ( 0 , 0 )
>6524	ArgumentList	0
>6525	Argument	0
>6526	PrimaryExpression	0
>6527	Argument	0
>6528	PrimaryExpression	0
>6529	Callee	ld . OffsetLineTo
>6530	MemberAccess	ld . OffsetLineTo
>6531	Identifier	OffsetLineTo
>6532	Identifier	ld
>6533	ExpressionStatement	 
>6534	CallExpression	ld . OffsetMoveTo ( 2 , 0 )
>6535	ArgumentList	2
>6536	Argument	0
>6537	PrimaryExpression	0
>6538	Argument	2
>6539	PrimaryExpression	2
>6540	Callee	ld . OffsetMoveTo
>6541	MemberAccess	ld . OffsetMoveTo
>6542	Identifier	OffsetMoveTo
>6543	Identifier	ld
>6544	ExpressionStatement	 
>6545	CallExpression	ld . OffsetLineTo ( - 2 , - 2 )
>6546	ArgumentList	- 2
>6547	Argument	- 2
>6548	UnaryOp	- 2
>6549	PrimaryExpression	2
>6550	UnaryOperator	-
>6551	Argument	- 2
>6552	UnaryOp	- 2
>6553	PrimaryExpression	2
>6554	UnaryOperator	-
>6555	Callee	ld . OffsetLineTo
>6556	MemberAccess	ld . OffsetLineTo
>6557	Identifier	OffsetLineTo
>6558	Identifier	ld
>6559	ExpressionStatement	 
>6560	CallExpression	ld . OffsetMoveTo ( 0 , - 4 )
>6561	ArgumentList	0
>6562	Argument	- 4
>6563	UnaryOp	- 4
>6564	PrimaryExpression	4
>6565	UnaryOperator	-
>6566	Argument	0
>6567	PrimaryExpression	0
>6568	Callee	ld . OffsetMoveTo
>6569	MemberAccess	ld . OffsetMoveTo
>6570	Identifier	OffsetMoveTo
>6571	Identifier	ld
>6572	ExpressionStatement	 
>6573	CallExpression	ld . OffsetLineTo ( 2 , 2 )
>6574	ArgumentList	2
>6575	Argument	2
>6576	PrimaryExpression	2
>6577	Argument	2
>6578	PrimaryExpression	2
>6579	Callee	ld . OffsetLineTo
>6580	MemberAccess	ld . OffsetLineTo
>6581	Identifier	OffsetLineTo
>6582	Identifier	ld
>6583	ExpressionStatement	 
>6584	CallExpression	ld . OffsetMoveTo ( - 2 , 0 )
>6585	ArgumentList	- 2
>6586	Argument	0
>6587	PrimaryExpression	0
>6588	Argument	- 2
>6589	UnaryOp	- 2
>6590	PrimaryExpression	2
>6591	UnaryOperator	-
>6592	Callee	ld . OffsetMoveTo
>6593	MemberAccess	ld . OffsetMoveTo
>6594	Identifier	OffsetMoveTo
>6595	Identifier	ld
>6596	ExpressionStatement	 
>6597	CallExpression	ld . OffsetLineTo ( 7 , 7 )
>6598	ArgumentList	7
>6599	Argument	7
>6600	PrimaryExpression	7
>6601	Argument	7
>6602	PrimaryExpression	7
>6603	Callee	ld . OffsetLineTo
>6604	MemberAccess	ld . OffsetLineTo
>6605	Identifier	OffsetLineTo
>6606	Identifier	ld
>6607	ExpressionStatement	 
>6608	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>6609	ArgumentList	1
>6610	Argument	- 1
>6611	UnaryOp	- 1
>6612	PrimaryExpression	1
>6613	UnaryOperator	-
>6614	Argument	1
>6615	PrimaryExpression	1
>6616	Callee	ld . OffsetLineTo
>6617	MemberAccess	ld . OffsetLineTo
>6618	Identifier	OffsetLineTo
>6619	Identifier	ld
>6620	ExpressionStatement	 
>6621	CallExpression	ld . OffsetLineTo ( 1 , 1 )
>6622	ArgumentList	1
>6623	Argument	1
>6624	PrimaryExpression	1
>6625	Argument	1
>6626	PrimaryExpression	1
>6627	Callee	ld . OffsetLineTo
>6628	MemberAccess	ld . OffsetLineTo
>6629	Identifier	OffsetLineTo
>6630	Identifier	ld
>6631	ExpressionStatement	 
>6632	CallExpression	ld . OffsetLineTo ( 1 , - 1 )
>6633	ArgumentList	1
>6634	Argument	- 1
>6635	UnaryOp	- 1
>6636	PrimaryExpression	1
>6637	UnaryOperator	-
>6638	Argument	1
>6639	PrimaryExpression	1
>6640	Callee	ld . OffsetLineTo
>6641	MemberAccess	ld . OffsetLineTo
>6642	Identifier	OffsetLineTo
>6643	Identifier	ld
>6644	ExpressionStatement	 
>6645	CallExpression	ld . OffsetLineTo ( 0 , - 2 )
>6646	ArgumentList	0
>6647	Argument	- 2
>6648	UnaryOp	- 2
>6649	PrimaryExpression	2
>6650	UnaryOperator	-
>6651	Argument	0
>6652	PrimaryExpression	0
>6653	Callee	ld . OffsetLineTo
>6654	MemberAccess	ld . OffsetLineTo
>6655	Identifier	OffsetLineTo
>6656	Identifier	ld
>6657	ExpressionStatement	 
>6658	CallExpression	ld . InitOffsetMoveTo ( 2 , 4 )
>6659	ArgumentList	2
>6660	Argument	4
>6661	PrimaryExpression	4
>6662	Argument	2
>6663	PrimaryExpression	2
>6664	Callee	ld . InitOffsetMoveTo
>6665	MemberAccess	ld . InitOffsetMoveTo
>6666	Identifier	InitOffsetMoveTo
>6667	Identifier	ld
>6668	ExpressionStatement	 
>6669	CallExpression	ld . OffsetLineTo ( 0 , 0 )
>6670	ArgumentList	0
>6671	Argument	0
>6672	PrimaryExpression	0
>6673	Argument	0
>6674	PrimaryExpression	0
>6675	Callee	ld . OffsetLineTo
>6676	MemberAccess	ld . OffsetLineTo
>6677	Identifier	OffsetLineTo
>6678	Identifier	ld
>6679	ExpressionStatement	 
>6680	CallExpression	ld . InitOffsetMoveTo ( 2 , 10 )
>6681	ArgumentList	2
>6682	Argument	10
>6683	PrimaryExpression	10
>6684	Argument	2
>6685	PrimaryExpression	2
>6686	Callee	ld . InitOffsetMoveTo
>6687	MemberAccess	ld . InitOffsetMoveTo
>6688	Identifier	InitOffsetMoveTo
>6689	Identifier	ld
>6690	ExpressionStatement	 
>6691	CallExpression	memDC . SelectObject ( & yellowPen )
>6692	ArgumentList	& yellowPen
>6693	Argument	& yellowPen
>6694	UnaryOp	& yellowPen
>6695	Identifier	yellowPen
>6696	UnaryOperator	&
>6697	Callee	memDC . SelectObject
>6698	MemberAccess	memDC . SelectObject
>6699	Identifier	SelectObject
>6700	Identifier	memDC
>6701	ExpressionStatement	 
>6702	CallExpression	ld . OffsetLineTo ( - 2 , - 2 )
>6703	ArgumentList	- 2
>6704	Argument	- 2
>6705	UnaryOp	- 2
>6706	PrimaryExpression	2
>6707	UnaryOperator	-
>6708	Argument	- 2
>6709	UnaryOp	- 2
>6710	PrimaryExpression	2
>6711	UnaryOperator	-
>6712	Callee	ld . OffsetLineTo
>6713	MemberAccess	ld . OffsetLineTo
>6714	Identifier	OffsetLineTo
>6715	Identifier	ld
>6716	ExpressionStatement	 
>6717	CallExpression	ld . OffsetLineTo ( 0 , - 2 )
>6718	ArgumentList	0
>6719	Argument	- 2
>6720	UnaryOp	- 2
>6721	PrimaryExpression	2
>6722	UnaryOperator	-
>6723	Argument	0
>6724	PrimaryExpression	0
>6725	Callee	ld . OffsetLineTo
>6726	MemberAccess	ld . OffsetLineTo
>6727	Identifier	OffsetLineTo
>6728	Identifier	ld
>6729	ExpressionStatement	 
>6730	CallExpression	ld . OffsetLineTo ( 2 , - 2 )
>6731	ArgumentList	2
>6732	Argument	- 2
>6733	UnaryOp	- 2
>6734	PrimaryExpression	2
>6735	UnaryOperator	-
>6736	Argument	2
>6737	PrimaryExpression	2
>6738	Callee	ld . OffsetLineTo
>6739	MemberAccess	ld . OffsetLineTo
>6740	Identifier	OffsetLineTo
>6741	Identifier	ld
>6742	ExpressionStatement	 
>6743	CallExpression	ld . OffsetLineTo ( 1 , 0 )
>6744	ArgumentList	1
>6745	Argument	0
>6746	PrimaryExpression	0
>6747	Argument	1
>6748	PrimaryExpression	1
>6749	Callee	ld . OffsetLineTo
>6750	MemberAccess	ld . OffsetLineTo
>6751	Identifier	OffsetLineTo
>6752	Identifier	ld
>6753	ExpressionStatement	 
>6754	CallExpression	ld . OffsetMoveTo ( 4 , - 2 )
>6755	ArgumentList	4
>6756	Argument	- 2
>6757	UnaryOp	- 2
>6758	PrimaryExpression	2
>6759	UnaryOperator	-
>6760	Argument	4
>6761	PrimaryExpression	4
>6762	Callee	ld . OffsetMoveTo
>6763	MemberAccess	ld . OffsetMoveTo
>6764	Identifier	OffsetMoveTo
>6765	Identifier	ld
>6766	ExpressionStatement	 
>6767	CallExpression	ld . OffsetLineTo ( - 7 , 0 )
>6768	ArgumentList	- 7
>6769	Argument	0
>6770	PrimaryExpression	0
>6771	Argument	- 7
>6772	UnaryOp	- 7
>6773	PrimaryExpression	7
>6774	UnaryOperator	-
>6775	Callee	ld . OffsetLineTo
>6776	MemberAccess	ld . OffsetLineTo
>6777	Identifier	OffsetLineTo
>6778	Identifier	ld
>6779	ExpressionStatement	 
>6780	CallExpression	ld . OffsetMoveTo ( - 4 , - 3 )
>6781	ArgumentList	- 4
>6782	Argument	- 3
>6783	UnaryOp	- 3
>6784	PrimaryExpression	3
>6785	UnaryOperator	-
>6786	Argument	- 4
>6787	UnaryOp	- 4
>6788	PrimaryExpression	4
>6789	UnaryOperator	-
>6790	Callee	ld . OffsetMoveTo
>6791	MemberAccess	ld . OffsetMoveTo
>6792	Identifier	OffsetMoveTo
>6793	Identifier	ld
>6794	ExpressionStatement	 
>6795	CallExpression	ld . OffsetLineTo ( - 1 , 0 )
>6796	ArgumentList	- 1
>6797	Argument	0
>6798	PrimaryExpression	0
>6799	Argument	- 1
>6800	UnaryOp	- 1
>6801	PrimaryExpression	1
>6802	UnaryOperator	-
>6803	Callee	ld . OffsetLineTo
>6804	MemberAccess	ld . OffsetLineTo
>6805	Identifier	OffsetLineTo
>6806	Identifier	ld
>6807	ExpressionStatement	 
>6808	CallExpression	ld . OffsetLineTo ( - 1 , 1 )
>6809	ArgumentList	- 1
>6810	Argument	1
>6811	PrimaryExpression	1
>6812	Argument	- 1
>6813	UnaryOp	- 1
>6814	PrimaryExpression	1
>6815	UnaryOperator	-
>6816	Callee	ld . OffsetLineTo
>6817	MemberAccess	ld . OffsetLineTo
>6818	Identifier	OffsetLineTo
>6819	Identifier	ld
>6820	ExpressionStatement	 
>6821	CallExpression	ld . OffsetLineTo ( 0 , 1 )
>6822	ArgumentList	0
>6823	Argument	1
>6824	PrimaryExpression	1
>6825	Argument	0
>6826	PrimaryExpression	0
>6827	Callee	ld . OffsetLineTo
>6828	MemberAccess	ld . OffsetLineTo
>6829	Identifier	OffsetLineTo
>6830	Identifier	ld
>6831	ExpressionStatement	 
>6832	CallExpression	ld . OffsetLineTo ( 1 , 1 )
>6833	ArgumentList	1
>6834	Argument	1
>6835	PrimaryExpression	1
>6836	Argument	1
>6837	PrimaryExpression	1
>6838	Callee	ld . OffsetLineTo
>6839	MemberAccess	ld . OffsetLineTo
>6840	Identifier	OffsetLineTo
>6841	Identifier	ld
>6842	ExpressionStatement	 
>6843	CallExpression	ld . OffsetLineTo ( - 1 , 1 )
>6844	ArgumentList	- 1
>6845	Argument	1
>6846	PrimaryExpression	1
>6847	Argument	- 1
>6848	UnaryOp	- 1
>6849	PrimaryExpression	1
>6850	UnaryOperator	-
>6851	Callee	ld . OffsetLineTo
>6852	MemberAccess	ld . OffsetLineTo
>6853	Identifier	OffsetLineTo
>6854	Identifier	ld
>6855	ExpressionStatement	 
>6856	CallExpression	ld . OffsetLineTo ( 0 , 8 )
>6857	ArgumentList	0
>6858	Argument	8
>6859	PrimaryExpression	8
>6860	Argument	0
>6861	PrimaryExpression	0
>6862	Callee	ld . OffsetLineTo
>6863	MemberAccess	ld . OffsetLineTo
>6864	Identifier	OffsetLineTo
>6865	Identifier	ld
>6866	ExpressionStatement	 
>6867	CallExpression	ld . InitOffsetMoveTo ( 14 , 3 )
>6868	ArgumentList	14
>6869	Argument	3
>6870	PrimaryExpression	3
>6871	Argument	14
>6872	PrimaryExpression	14
>6873	Callee	ld . InitOffsetMoveTo
>6874	MemberAccess	ld . InitOffsetMoveTo
>6875	Identifier	InitOffsetMoveTo
>6876	Identifier	ld
>6877	ExpressionStatement	 
>6878	CallExpression	memDC . SelectObject ( & blackPen )
>6879	ArgumentList	& blackPen
>6880	Argument	& blackPen
>6881	UnaryOp	& blackPen
>6882	Identifier	blackPen
>6883	UnaryOperator	&
>6884	Callee	memDC . SelectObject
>6885	MemberAccess	memDC . SelectObject
>6886	Identifier	SelectObject
>6887	Identifier	memDC
>6888	ExpressionStatement	 
>6889	CallExpression	ld . OffsetLineTo ( 2 , 2 )
>6890	ArgumentList	2
>6891	Argument	2
>6892	PrimaryExpression	2
>6893	Argument	2
>6894	PrimaryExpression	2
>6895	Callee	ld . OffsetLineTo
>6896	MemberAccess	ld . OffsetLineTo
>6897	Identifier	OffsetLineTo
>6898	Identifier	ld
>6899	ExpressionStatement	 
>6900	CallExpression	ld . OffsetLineTo ( 3 , 0 )
>6901	ArgumentList	3
>6902	Argument	0
>6903	PrimaryExpression	0
>6904	Argument	3
>6905	PrimaryExpression	3
>6906	Callee	ld . OffsetLineTo
>6907	MemberAccess	ld . OffsetLineTo
>6908	Identifier	OffsetLineTo
>6909	Identifier	ld
>6910	ExpressionStatement	 
>6911	CallExpression	ld . OffsetLineTo ( 2 , - 2 )
>6912	ArgumentList	2
>6913	Argument	- 2
>6914	UnaryOp	- 2
>6915	PrimaryExpression	2
>6916	UnaryOperator	-
>6917	Argument	2
>6918	PrimaryExpression	2
>6919	Callee	ld . OffsetLineTo
>6920	MemberAccess	ld . OffsetLineTo
>6921	Identifier	OffsetLineTo
>6922	Identifier	ld
>6923	ExpressionStatement	 
>6924	CallExpression	ld . OffsetLineTo ( 0 , - 2 )
>6925	ArgumentList	0
>6926	Argument	- 2
>6927	UnaryOp	- 2
>6928	PrimaryExpression	2
>6929	UnaryOperator	-
>6930	Argument	0
>6931	PrimaryExpression	0
>6932	Callee	ld . OffsetLineTo
>6933	MemberAccess	ld . OffsetLineTo
>6934	Identifier	OffsetLineTo
>6935	Identifier	ld
>6936	ExpressionStatement	 
>6937	CallExpression	ld . OffsetLineTo ( - 2 , - 2 )
>6938	ArgumentList	- 2
>6939	Argument	- 2
>6940	UnaryOp	- 2
>6941	PrimaryExpression	2
>6942	UnaryOperator	-
>6943	Argument	- 2
>6944	UnaryOp	- 2
>6945	PrimaryExpression	2
>6946	UnaryOperator	-
>6947	Callee	ld . OffsetLineTo
>6948	MemberAccess	ld . OffsetLineTo
>6949	Identifier	OffsetLineTo
>6950	Identifier	ld
>6951	ExpressionStatement	 
>6952	CallExpression	ld . OffsetLineTo ( - 3 , 0 )
>6953	ArgumentList	- 3
>6954	Argument	0
>6955	PrimaryExpression	0
>6956	Argument	- 3
>6957	UnaryOp	- 3
>6958	PrimaryExpression	3
>6959	UnaryOperator	-
>6960	Callee	ld . OffsetLineTo
>6961	MemberAccess	ld . OffsetLineTo
>6962	Identifier	OffsetLineTo
>6963	Identifier	ld
>6964	ExpressionStatement	 
>6965	CallExpression	ld . OffsetLineTo ( - 1 , 1 )
>6966	ArgumentList	- 1
>6967	Argument	1
>6968	PrimaryExpression	1
>6969	Argument	- 1
>6970	UnaryOp	- 1
>6971	PrimaryExpression	1
>6972	UnaryOperator	-
>6973	Callee	ld . OffsetLineTo
>6974	MemberAccess	ld . OffsetLineTo
>6975	Identifier	OffsetLineTo
>6976	Identifier	ld
>6977	ExpressionStatement	 
>6978	CallExpression	ld . InitOffsetMoveTo ( 8 , 9 )
>6979	ArgumentList	8
>6980	Argument	9
>6981	PrimaryExpression	9
>6982	Argument	8
>6983	PrimaryExpression	8
>6984	Callee	ld . InitOffsetMoveTo
>6985	MemberAccess	ld . InitOffsetMoveTo
>6986	Identifier	InitOffsetMoveTo
>6987	Identifier	ld
>6988	ExpressionStatement	 
>6989	CallExpression	ld . OffsetLineTo ( 5 , 0 )
>6990	ArgumentList	5
>6991	Argument	0
>6992	PrimaryExpression	0
>6993	Argument	5
>6994	PrimaryExpression	5
>6995	Callee	ld . OffsetLineTo
>6996	MemberAccess	ld . OffsetLineTo
>6997	Identifier	OffsetLineTo
>6998	Identifier	ld
>6999	ExpressionStatement	 
>7000	CallExpression	ld . OffsetLineTo ( 2 , 2 )
>7001	ArgumentList	2
>7002	Argument	2
>7003	PrimaryExpression	2
>7004	Argument	2
>7005	PrimaryExpression	2
>7006	Callee	ld . OffsetLineTo
>7007	MemberAccess	ld . OffsetLineTo
>7008	Identifier	OffsetLineTo
>7009	Identifier	ld
>7010	ExpressionStatement	 
>7011	CallExpression	ld . OffsetLineTo ( 4 , 0 )
>7012	ArgumentList	4
>7013	Argument	0
>7014	PrimaryExpression	0
>7015	Argument	4
>7016	PrimaryExpression	4
>7017	Callee	ld . OffsetLineTo
>7018	MemberAccess	ld . OffsetLineTo
>7019	Identifier	OffsetLineTo
>7020	Identifier	ld
>7021	ExpressionStatement	 
>7022	CallExpression	ld . OffsetLineTo ( 2 , - 2 )
>7023	ArgumentList	2
>7024	Argument	- 2
>7025	UnaryOp	- 2
>7026	PrimaryExpression	2
>7027	UnaryOperator	-
>7028	Argument	2
>7029	PrimaryExpression	2
>7030	Callee	ld . OffsetLineTo
>7031	MemberAccess	ld . OffsetLineTo
>7032	Identifier	OffsetLineTo
>7033	Identifier	ld
>7034	ExpressionStatement	 
>7035	CallExpression	ld . OffsetLineTo ( 0 , - 9 )
>7036	ArgumentList	0
>7037	Argument	- 9
>7038	UnaryOp	- 9
>7039	PrimaryExpression	9
>7040	UnaryOperator	-
>7041	Argument	0
>7042	PrimaryExpression	0
>7043	Callee	ld . OffsetLineTo
>7044	MemberAccess	ld . OffsetLineTo
>7045	Identifier	OffsetLineTo
>7046	Identifier	ld
>7047	ExpressionStatement	 
>7048	CallExpression	ld . InitOffsetMoveTo ( 0 , 11 )
>7049	ArgumentList	0
>7050	Argument	11
>7051	PrimaryExpression	11
>7052	Argument	0
>7053	PrimaryExpression	0
>7054	Callee	ld . InitOffsetMoveTo
>7055	MemberAccess	ld . InitOffsetMoveTo
>7056	Identifier	InitOffsetMoveTo
>7057	Identifier	ld
>7058	ExpressionStatement	 
>7059	CallExpression	memDC . SelectObject ( & darkPen )
>7060	ArgumentList	& darkPen
>7061	Argument	& darkPen
>7062	UnaryOp	& darkPen
>7063	Identifier	darkPen
>7064	UnaryOperator	&
>7065	Callee	memDC . SelectObject
>7066	MemberAccess	memDC . SelectObject
>7067	Identifier	SelectObject
>7068	Identifier	memDC
>7069	ExpressionStatement	 
>7070	CallExpression	navyPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_DARK 
>7071	ArgumentList	PS_SOLID
>7072	Argument	DISABLED ? BC_COLOR_DARK 
>7073	ConditionalExpression	DISABLED ? BC_COLOR_DARK 
>7074	Identifier	BC_COLOR_NAVY
>7075	Identifier	BC_COLOR_DARK
>7076	Condition	DISABLED
>7077	Identifier	DISABLED
>7078	Argument	1
>7079	PrimaryExpression	1
>7080	Argument	PS_SOLID
>7081	Identifier	PS_SOLID
>7082	Callee	navyPen . CreatePen
>7083	MemberAccess	navyPen . CreatePen
>7084	Identifier	CreatePen
>7085	Identifier	navyPen
>7086	ExpressionStatement	 
>7087	CallExpression	bluePen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_DARK 
>7088	ArgumentList	PS_SOLID
>7089	Argument	DISABLED ? BC_COLOR_DARK 
>7090	ConditionalExpression	DISABLED ? BC_COLOR_DARK 
>7091	Identifier	BC_COLOR_BLUE
>7092	Identifier	BC_COLOR_DARK
>7093	Condition	DISABLED
>7094	Identifier	DISABLED
>7095	Argument	1
>7096	PrimaryExpression	1
>7097	Argument	PS_SOLID
>7098	Identifier	PS_SOLID
>7099	Callee	bluePen . CreatePen
>7100	MemberAccess	bluePen . CreatePen
>7101	Identifier	CreatePen
>7102	Identifier	bluePen
>7103	ExpressionStatement	 
>7104	CallExpression	cyanPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_WHITE 
>7105	ArgumentList	PS_SOLID
>7106	Argument	DISABLED ? BC_COLOR_WHITE 
>7107	ConditionalExpression	DISABLED ? BC_COLOR_WHITE 
>7108	Identifier	BC_COLOR_CYAN
>7109	Identifier	BC_COLOR_WHITE
>7110	Condition	DISABLED
>7111	Identifier	DISABLED
>7112	Argument	1
>7113	PrimaryExpression	1
>7114	Argument	PS_SOLID
>7115	Identifier	PS_SOLID
>7116	Callee	cyanPen . CreatePen
>7117	MemberAccess	cyanPen . CreatePen
>7118	Identifier	CreatePen
>7119	Identifier	cyanPen
>7120	ExpressionStatement	 
>7121	CallExpression	olivePen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_GRAY 
>7122	ArgumentList	PS_SOLID
>7123	Argument	DISABLED ? BC_COLOR_GRAY 
>7124	ConditionalExpression	DISABLED ? BC_COLOR_GRAY 
>7125	Identifier	BC_COLOR_OLIVE
>7126	Identifier	BC_COLOR_GRAY
>7127	Condition	DISABLED
>7128	Identifier	DISABLED
>7129	Argument	1
>7130	PrimaryExpression	1
>7131	Argument	PS_SOLID
>7132	Identifier	PS_SOLID
>7133	Callee	olivePen . CreatePen
>7134	MemberAccess	olivePen . CreatePen
>7135	Identifier	CreatePen
>7136	Identifier	olivePen
>7137	ExpressionStatement	 
>7138	CallExpression	grayPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_GRAY 
>7139	ArgumentList	PS_SOLID
>7140	Argument	DISABLED ? BC_COLOR_GRAY 
>7141	ConditionalExpression	DISABLED ? BC_COLOR_GRAY 
>7142	Identifier	BC_COLOR_GRAY
>7143	Identifier	BC_COLOR_GRAY
>7144	Condition	DISABLED
>7145	Identifier	DISABLED
>7146	Argument	1
>7147	PrimaryExpression	1
>7148	Argument	PS_SOLID
>7149	Identifier	PS_SOLID
>7150	Callee	grayPen . CreatePen
>7151	MemberAccess	grayPen . CreatePen
>7152	Identifier	CreatePen
>7153	Identifier	grayPen
>7154	ExpressionStatement	 
>7155	CallExpression	darkPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_DARK 
>7156	ArgumentList	PS_SOLID
>7157	Argument	DISABLED ? BC_COLOR_DARK 
>7158	ConditionalExpression	DISABLED ? BC_COLOR_DARK 
>7159	Identifier	BC_COLOR_DARK
>7160	Identifier	BC_COLOR_DARK
>7161	Condition	DISABLED
>7162	Identifier	DISABLED
>7163	Argument	1
>7164	PrimaryExpression	1
>7165	Argument	PS_SOLID
>7166	Identifier	PS_SOLID
>7167	Callee	darkPen . CreatePen
>7168	MemberAccess	darkPen . CreatePen
>7169	Identifier	CreatePen
>7170	Identifier	darkPen
>7171	ExpressionStatement	 
>7172	CallExpression	yellowPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_GRAY 
>7173	ArgumentList	PS_SOLID
>7174	Argument	DISABLED ? BC_COLOR_GRAY 
>7175	ConditionalExpression	DISABLED ? BC_COLOR_GRAY 
>7176	Identifier	BC_COLOR_YELLOW
>7177	Identifier	BC_COLOR_GRAY
>7178	Condition	DISABLED
>7179	Identifier	DISABLED
>7180	Argument	1
>7181	PrimaryExpression	1
>7182	Argument	PS_SOLID
>7183	Identifier	PS_SOLID
>7184	Callee	yellowPen . CreatePen
>7185	MemberAccess	yellowPen . CreatePen
>7186	Identifier	CreatePen
>7187	Identifier	yellowPen
>7188	ExpressionStatement	 
>7189	CallExpression	whitePen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_WHITE 
>7190	ArgumentList	PS_SOLID
>7191	Argument	DISABLED ? BC_COLOR_WHITE 
>7192	ConditionalExpression	DISABLED ? BC_COLOR_WHITE 
>7193	Identifier	BC_COLOR_WHITE
>7194	Identifier	BC_COLOR_WHITE
>7195	Condition	DISABLED
>7196	Identifier	DISABLED
>7197	Argument	1
>7198	PrimaryExpression	1
>7199	Argument	PS_SOLID
>7200	Identifier	PS_SOLID
>7201	Callee	whitePen . CreatePen
>7202	MemberAccess	whitePen . CreatePen
>7203	Identifier	CreatePen
>7204	Identifier	whitePen
>7205	ExpressionStatement	 
>7206	CallExpression	blackPen . CreatePen ( PS_SOLID , 1 , DISABLED ? BC_COLOR_DARK 
>7207	ArgumentList	PS_SOLID
>7208	Argument	DISABLED ? BC_COLOR_DARK 
>7209	ConditionalExpression	DISABLED ? BC_COLOR_DARK 
>7210	Identifier	BC_COLOR_BLACK
>7211	Identifier	BC_COLOR_DARK
>7212	Condition	DISABLED
>7213	Identifier	DISABLED
>7214	Argument	1
>7215	PrimaryExpression	1
>7216	Argument	PS_SOLID
>7217	Identifier	PS_SOLID
>7218	Callee	blackPen . CreatePen
>7219	MemberAccess	blackPen . CreatePen
>7220	Identifier	CreatePen
>7221	Identifier	blackPen
>7222	IdentifierDeclStatement	 
>7223	IdentifierDecl	navyPen
>7224	Identifier	navyPen
>7225	IdentifierDeclType	CPen
>7226	IdentifierDecl	bluePen
>7227	Identifier	bluePen
>7228	IdentifierDeclType	CPen
>7229	IdentifierDecl	cyanPen
>7230	Identifier	cyanPen
>7231	IdentifierDeclType	CPen
>7232	IdentifierDecl	olivePen
>7233	Identifier	olivePen
>7234	IdentifierDeclType	CPen
>7235	IdentifierDecl	grayPen
>7236	Identifier	grayPen
>7237	IdentifierDeclType	CPen
>7238	IdentifierDecl	darkPen
>7239	Identifier	darkPen
>7240	IdentifierDeclType	CPen
>7241	IdentifierDecl	yellowPen
>7242	Identifier	yellowPen
>7243	IdentifierDeclType	CPen
>7244	IdentifierDecl	whitePen
>7245	Identifier	whitePen
>7246	IdentifierDeclType	CPen
>7247	IdentifierDecl	blackPen
>7248	Identifier	blackPen
>7249	IdentifierDeclType	CPen
>7250	IdentifierDeclStatement	 
>7251	IdentifierDecl	i = 0
>7252	AssignmentExpr	i = 0
>7253	PrimaryExpression	0
>7254	Identifier	i
>7255	Identifier	i
>7256	IdentifierDeclType	int
>7257	IdentifierDeclStatement	 
>7258	IdentifierDecl	DISABLED = ( GetStyle ( ) & WS_DISABLED ) != 0
>7259	AssignmentExpr	DISABLED = ( GetStyle ( ) & WS_DISABLED ) != 0
>7260	EqualityExpression	( GetStyle ( ) & WS_DISABLED ) != 0
>7261	PrimaryExpression	0
>7262	BitAndExpression	GetStyle ( ) & WS_DISABLED
>7263	Identifier	WS_DISABLED
>7264	CallExpression	GetStyle ( )
>7265	ArgumentList	 
>7266	Callee	GetStyle
>7267	Identifier	GetStyle
>7268	Identifier	DISABLED
>7269	Identifier	DISABLED
>7270	IdentifierDeclType	const BOOL
>7271	IdentifierDeclStatement	 
>7272	IdentifierDecl	ld ( & memDC )
>7273	UnaryOp	& memDC
>7274	Identifier	memDC
>7275	UnaryOperator	&
>7276	Identifier	ld
>7277	IdentifierDeclType	CLineDraw
>7278	ExpressionStatement	 
>7279	CallExpression	PrepareMemDC ( & memDC , & bmp , pDC , rect , bkColor )
>7280	ArgumentList	& memDC
>7281	Argument	bkColor
>7282	Identifier	bkColor
>7283	Argument	rect
>7284	Identifier	rect
>7285	Argument	pDC
>7286	Identifier	pDC
>7287	Argument	& bmp
>7288	UnaryOp	& bmp
>7289	Identifier	bmp
>7290	UnaryOperator	&
>7291	Argument	& memDC
>7292	UnaryOp	& memDC
>7293	Identifier	memDC
>7294	UnaryOperator	&
>7295	Callee	PrepareMemDC
>7296	Identifier	PrepareMemDC
>7297	IdentifierDeclStatement	 
>7298	IdentifierDecl	bmp
>7299	Identifier	bmp
>7300	IdentifierDeclType	CBitmap
>7301	IdentifierDeclStatement	 
>7302	IdentifierDecl	memDC
>7303	Identifier	memDC
>7304	IdentifierDeclType	CDC
>7354	FunctionDef	CBrowseCtrl 
>7355	ParameterList	int x , int y
>7356	Parameter	 
>7357	Identifier	y
>7358	ParameterType	int
>7359	Parameter	 
>7360	Identifier	x
>7361	ParameterType	int
>7362	ReturnType	void
>7363	CompoundStatement	 
>7364	ExpressionStatement	 
>7365	CallExpression	RecalculateRects ( TRUE )
>7366	ArgumentList	TRUE
>7367	Argument	TRUE
>7368	Identifier	TRUE
>7369	Callee	RecalculateRects
>7370	Identifier	RecalculateRects
>7371	ExpressionStatement	 
>7372	CallExpression	CButton 
>7373	ArgumentList	x
>7374	Argument	y
>7375	Identifier	y
>7376	Argument	x
>7377	Identifier	x
>7378	Callee	CButton 
>7379	Identifier	CButton 
>7386	FunctionDef	CBrowseCtrl 
>7387	ParameterList	UINT nType , int cx , int cy
>7388	Parameter	 
>7389	Identifier	cy
>7390	ParameterType	int
>7391	Parameter	 
>7392	Identifier	cx
>7393	ParameterType	int
>7394	Parameter	 
>7395	Identifier	nType
>7396	ParameterType	UINT
>7397	ReturnType	void
>7398	CompoundStatement	 
>7399	ExpressionStatement	 
>7400	CallExpression	RecalculateRects ( TRUE )
>7401	ArgumentList	TRUE
>7402	Argument	TRUE
>7403	Identifier	TRUE
>7404	Callee	RecalculateRects
>7405	Identifier	RecalculateRects
>7406	ExpressionStatement	 
>7407	CallExpression	CButton 
>7408	ArgumentList	nType
>7409	Argument	cy
>7410	Identifier	cy
>7411	Argument	cx
>7412	Identifier	cx
>7413	Argument	nType
>7414	Identifier	nType
>7415	Callee	CButton 
>7416	Identifier	CButton 
>7424	FunctionDef	CBrowseCtrl 
>7425	ParameterList	BOOL bMoveEdit
>7426	Parameter	 
>7427	Identifier	bMoveEdit
>7428	ParameterType	BOOL
>7429	ReturnType	void
>7430	CompoundStatement	 
>7431	ExpressionStatement	 
>7432	CallExpression	m_wndEdit . MoveWindow ( & m_rcEdit , TRUE )
>7433	ArgumentList	& m_rcEdit
>7434	Argument	TRUE
>7435	Identifier	TRUE
>7436	Argument	& m_rcEdit
>7437	UnaryOp	& m_rcEdit
>7438	Identifier	m_rcEdit
>7439	UnaryOperator	&
>7440	Callee	m_wndEdit . MoveWindow
>7441	MemberAccess	m_wndEdit . MoveWindow
>7442	Identifier	MoveWindow
>7443	Identifier	m_wndEdit
>7444	Statement	 
>7445	Statement	 
>7446	Statement	 
>7447	Statement	 
>7448	Statement	 
>7449	Statement	 
>7450	Statement	 
>7451	Statement	 
>7452	Statement	 
>7453	Statement	 
>7454	Statement	 
>7455	Statement	 
>7456	IfStatement	if ( m_dwStyle & BC_BTN_LEFT )
>7457	ElseStatement	else
>7458	ExpressionStatement	 
>7459	AssignmentExpr	m_rcEdit . right = m_rcButton . left
>7460	MemberAccess	m_rcButton . left
>7461	Identifier	left
>7462	Identifier	m_rcButton
>7463	MemberAccess	m_rcEdit . right
>7464	Identifier	right
>7465	Identifier	m_rcEdit
>7466	ExpressionStatement	 
>7467	AssignmentExpr	m_rcEdit . left = m_rcButton . right
>7468	MemberAccess	m_rcButton . right
>7469	Identifier	right
>7470	Identifier	m_rcButton
>7471	MemberAccess	m_rcEdit . left
>7472	Identifier	left
>7473	Identifier	m_rcEdit
>7474	Condition	 
>7475	BitAndExpression	m_dwStyle & BC_BTN_LEFT
>7476	Identifier	BC_BTN_LEFT
>7477	Identifier	m_dwStyle
>7478	ExpressionStatement	 
>7479	AssignmentExpr	m_rcEdit = rcClient
>7480	Identifier	rcClient
>7481	Identifier	m_rcEdit
>7482	IfStatement	if ( rcBtn . Width ( ) > netSize . cx )
>7483	ElseStatement	else
>7484	ExpressionStatement	 
>7485	AssignmentExpr	m_rcContent . right = rcBtn . right
>7486	MemberAccess	rcBtn . right
>7487	Identifier	right
>7488	Identifier	rcBtn
>7489	MemberAccess	m_rcContent . right
>7490	Identifier	right
>7491	Identifier	m_rcContent
>7492	ExpressionStatement	 
>7493	CallExpression	m_rcContent . OffsetRect ( ( rcBtn . Width ( ) - netSize . cx ) / 2 , 0 )
>7494	ArgumentList	( rcBtn . Width ( ) - netSize . cx ) / 2
>7495	Argument	0
>7496	PrimaryExpression	0
>7497	Argument	( rcBtn . Width ( ) - netSize . cx ) / 2
>7498	MultiplicativeExpression	( rcBtn . Width ( ) - netSize . cx ) / 2
>7499	PrimaryExpression	2
>7500	AdditiveExpression	rcBtn . Width ( ) - netSize . cx
>7501	MemberAccess	netSize . cx
>7502	Identifier	cx
>7503	Identifier	netSize
>7504	CallExpression	rcBtn . Width ( )
>7505	ArgumentList	 
>7506	Callee	rcBtn . Width
>7507	MemberAccess	rcBtn . Width
>7508	Identifier	Width
>7509	Identifier	rcBtn
>7510	Callee	m_rcContent . OffsetRect
>7511	MemberAccess	m_rcContent . OffsetRect
>7512	Identifier	OffsetRect
>7513	Identifier	m_rcContent
>7514	Condition	 
>7515	RelationalExpression	rcBtn . Width ( ) > netSize . cx
>7516	MemberAccess	netSize . cx
>7517	Identifier	cx
>7518	Identifier	netSize
>7519	CallExpression	rcBtn . Width ( )
>7520	ArgumentList	 
>7521	Callee	rcBtn . Width
>7522	MemberAccess	rcBtn . Width
>7523	Identifier	Width
>7524	Identifier	rcBtn
>7525	IfStatement	if ( rcBtn . Height ( ) > netSize . cy )
>7526	ElseStatement	else
>7527	ExpressionStatement	 
>7528	AssignmentExpr	m_rcContent . bottom = rcBtn . bottom
>7529	MemberAccess	rcBtn . bottom
>7530	Identifier	bottom
>7531	Identifier	rcBtn
>7532	MemberAccess	m_rcContent . bottom
>7533	Identifier	bottom
>7534	Identifier	m_rcContent
>7535	ExpressionStatement	 
>7536	CallExpression	m_rcContent . OffsetRect ( 0 , ( rcBtn . Height ( ) - netSize . cy ) / 2 )
>7537	ArgumentList	0
>7538	Argument	( rcBtn . Height ( ) - netSize . cy ) / 2
>7539	MultiplicativeExpression	( rcBtn . Height ( ) - netSize . cy ) / 2
>7540	PrimaryExpression	2
>7541	AdditiveExpression	rcBtn . Height ( ) - netSize . cy
>7542	MemberAccess	netSize . cy
>7543	Identifier	cy
>7544	Identifier	netSize
>7545	CallExpression	rcBtn . Height ( )
>7546	ArgumentList	 
>7547	Callee	rcBtn . Height
>7548	MemberAccess	rcBtn . Height
>7549	Identifier	Height
>7550	Identifier	rcBtn
>7551	Argument	0
>7552	PrimaryExpression	0
>7553	Callee	m_rcContent . OffsetRect
>7554	MemberAccess	m_rcContent . OffsetRect
>7555	Identifier	OffsetRect
>7556	Identifier	m_rcContent
>7557	Condition	 
>7558	RelationalExpression	rcBtn . Height ( ) > netSize . cy
>7559	MemberAccess	netSize . cy
>7560	Identifier	cy
>7561	Identifier	netSize
>7562	CallExpression	rcBtn . Height ( )
>7563	ArgumentList	 
>7564	Callee	rcBtn . Height
>7565	MemberAccess	rcBtn . Height
>7566	Identifier	Height
>7567	Identifier	rcBtn
>7568	ExpressionStatement	 
>7569	AssignmentExpr	m_rcContent = CRect ( rcBtn . TopLeft ( ) , netSize )
>7570	CallExpression	CRect ( rcBtn . TopLeft ( ) , netSize )
>7571	ArgumentList	rcBtn . TopLeft ( )
>7572	Argument	netSize
>7573	Identifier	netSize
>7574	Argument	rcBtn . TopLeft ( )
>7575	CallExpression	rcBtn . TopLeft ( )
>7576	ArgumentList	 
>7577	Callee	rcBtn . TopLeft
>7578	MemberAccess	rcBtn . TopLeft
>7579	Identifier	TopLeft
>7580	Identifier	rcBtn
>7581	Callee	CRect
>7582	Identifier	CRect
>7583	Identifier	m_rcContent
>7584	ExpressionStatement	 
>7585	CallExpression	rcBtn . DeflateRect ( BTN_EDGE , BTN_EDGE )
>7586	ArgumentList	BTN_EDGE
>7587	Argument	BTN_EDGE
>7588	Identifier	BTN_EDGE
>7589	Argument	BTN_EDGE
>7590	Identifier	BTN_EDGE
>7591	Callee	rcBtn . DeflateRect
>7592	MemberAccess	rcBtn . DeflateRect
>7593	Identifier	DeflateRect
>7594	Identifier	rcBtn
>7595	IdentifierDeclStatement	 
>7596	IdentifierDecl	rcBtn = m_rcButton
>7597	AssignmentExpr	rcBtn = m_rcButton
>7598	Identifier	m_rcButton
>7599	Identifier	m_rcButton
>7600	Identifier	rcBtn
>7601	IdentifierDeclType	CRect
>7602	IfStatement	if ( m_rcButton . Width ( ) > nReqWidth )
>7603	CompoundStatement	 
>7604	IfStatement	if ( m_dwStyle & BC_BTN_LEFT )
>7605	ElseStatement	else
>7606	ExpressionStatement	 
>7607	AssignmentExpr	m_rcButton . left = m_rcButton . right - nReqWidth
>7608	AdditiveExpression	m_rcButton . right - nReqWidth
>7609	Identifier	nReqWidth
>7610	MemberAccess	m_rcButton . right
>7611	Identifier	right
>7612	Identifier	m_rcButton
>7613	MemberAccess	m_rcButton . left
>7614	Identifier	left
>7615	Identifier	m_rcButton
>7616	ExpressionStatement	 
>7617	AssignmentExpr	m_rcButton . right = m_rcButton . left + nReqWidth
>7618	AdditiveExpression	m_rcButton . left + nReqWidth
>7619	Identifier	nReqWidth
>7620	MemberAccess	m_rcButton . left
>7621	Identifier	left
>7622	Identifier	m_rcButton
>7623	MemberAccess	m_rcButton . right
>7624	Identifier	right
>7625	Identifier	m_rcButton
>7626	Condition	 
>7627	BitAndExpression	m_dwStyle & BC_BTN_LEFT
>7628	Identifier	BC_BTN_LEFT
>7629	Identifier	m_dwStyle
>7630	Condition	 
>7631	RelationalExpression	m_rcButton . Width ( ) > nReqWidth
>7632	Identifier	nReqWidth
>7633	CallExpression	m_rcButton . Width ( )
>7634	ArgumentList	 
>7635	Callee	m_rcButton . Width
>7636	MemberAccess	m_rcButton . Width
>7637	Identifier	Width
>7638	Identifier	m_rcButton
>7639	ExpressionStatement	 
>7640	AssignmentExpr	nReqWidth += WIDTH_SPACE
>7641	Identifier	WIDTH_SPACE
>7642	Identifier	nReqWidth
>7643	IfStatement	if ( nReqWidth < ICON_WIDTH )
>7644	ExpressionStatement	 
>7645	AssignmentExpr	nReqWidth = ICON_WIDTH
>7646	Identifier	ICON_WIDTH
>7647	Identifier	nReqWidth
>7648	Condition	 
>7649	RelationalExpression	nReqWidth < ICON_WIDTH
>7650	Identifier	ICON_WIDTH
>7651	Identifier	nReqWidth
>7652	IfStatement	if ( ( m_dwStyle & BC_BTN_ICON ) == 0 )
>7653	CompoundStatement	 
>7654	ExpressionStatement	 
>7655	AssignmentExpr	nReqWidth = netSize . cx
>7656	MemberAccess	netSize . cx
>7657	Identifier	cx
>7658	Identifier	netSize
>7659	Identifier	nReqWidth
>7660	ExpressionStatement	 
>7661	AssignmentExpr	netSize = dc . GetTextExtent ( m_sButtonText )
>7662	CallExpression	dc . GetTextExtent ( m_sButtonText )
>7663	ArgumentList	m_sButtonText
>7664	Argument	m_sButtonText
>7665	Identifier	m_sButtonText
>7666	Callee	dc . GetTextExtent
>7667	MemberAccess	dc . GetTextExtent
>7668	Identifier	GetTextExtent
>7669	Identifier	dc
>7670	Identifier	netSize
>7671	ExpressionStatement	 
>7672	CallExpression	dc . SelectObject ( GetFont ( ) )
>7673	ArgumentList	GetFont ( )
>7674	Argument	GetFont ( )
>7675	CallExpression	GetFont ( )
>7676	ArgumentList	 
>7677	Callee	GetFont
>7678	Identifier	GetFont
>7679	Callee	dc . SelectObject
>7680	MemberAccess	dc . SelectObject
>7681	Identifier	SelectObject
>7682	Identifier	dc
>7683	IdentifierDeclStatement	 
>7684	IdentifierDecl	dc ( this )
>7685	Identifier	this
>7686	Identifier	dc
>7687	IdentifierDeclType	CClientDC
>7688	Condition	 
>7689	EqualityExpression	( m_dwStyle & BC_BTN_ICON ) == 0
>7690	PrimaryExpression	0
>7691	BitAndExpression	m_dwStyle & BC_BTN_ICON
>7692	Identifier	BC_BTN_ICON
>7693	Identifier	m_dwStyle
>7694	IdentifierDeclStatement	 
>7695	IdentifierDecl	nReqWidth = ICON_WIDTH
>7696	AssignmentExpr	nReqWidth = ICON_WIDTH
>7697	Identifier	ICON_WIDTH
>7698	Identifier	ICON_WIDTH
>7699	Identifier	nReqWidth
>7700	IdentifierDeclType	int
>7701	IdentifierDeclStatement	 
>7702	IdentifierDecl	netSize ( ICON_WIDTH , ICON_HEIGHT )
>7703	Expression	ICON_WIDTH , ICON_HEIGHT
>7704	Identifier	ICON_HEIGHT
>7705	Identifier	ICON_WIDTH
>7706	Identifier	netSize
>7707	IdentifierDeclType	CSize
>7708	ExpressionStatement	 
>7709	AssignmentExpr	m_rcButton = rcClient
>7710	Identifier	rcClient
>7711	Identifier	m_rcButton
>7712	ExpressionStatement	 
>7713	CallExpression	GetClientRect ( & rcClient )
>7714	ArgumentList	& rcClient
>7715	Argument	& rcClient
>7716	UnaryOp	& rcClient
>7717	Identifier	rcClient
>7718	UnaryOperator	&
>7719	Callee	GetClientRect
>7720	Identifier	GetClientRect
>7721	IdentifierDeclStatement	 
>7722	IdentifierDecl	rcClient
>7723	Identifier	rcClient
>7724	IdentifierDeclType	CRect
>7725	ExpressionStatement	 
>7726	Statement	 
>7727	Statement	 
>7728	Statement	 
>7729	Statement	 
>7730	Statement	 
>7731	Statement	 
>7732	Statement	 
>7733	Statement	 
>7774	FunctionDef	CBrowseCtrl 
>7775	ParameterList	 
>7776	ReturnType	BOOL
>7777	CompoundStatement	 
>7778	ReturnStatement	 
>7779	AndExpression	m_bEditChanged && m_sEditText . CompareNoCase ( CString ( m_lpszPathNames ) ) != 0
>7780	EqualityExpression	m_sEditText . CompareNoCase ( CString ( m_lpszPathNames ) ) != 0
>7781	PrimaryExpression	0
>7782	CallExpression	m_sEditText . CompareNoCase ( CString ( m_lpszPathNames ) )
>7783	ArgumentList	CString ( m_lpszPathNames )
>7784	Argument	CString ( m_lpszPathNames )
>7785	CallExpression	CString ( m_lpszPathNames )
>7786	ArgumentList	m_lpszPathNames
>7787	Argument	m_lpszPathNames
>7788	Identifier	m_lpszPathNames
>7789	Callee	CString
>7790	Identifier	CString
>7791	Callee	m_sEditText . CompareNoCase
>7792	MemberAccess	m_sEditText . CompareNoCase
>7793	Identifier	CompareNoCase
>7794	Identifier	m_sEditText
>7795	Identifier	m_bEditChanged
>7804	FunctionDef	CBrowseCtrl 
>7805	ParameterList	LPCTSTR lpszBanner
>7806	Parameter	 
>7807	Identifier	lpszBanner
>7808	ParameterType	LPCTSTR
>7809	ReturnType	void
>7810	CompoundStatement	 
>7811	ExpressionStatement	 
>7812	AssignmentExpr	m_sDlgBanner = lpszBanner
>7813	Identifier	lpszBanner
>7814	Identifier	m_sDlgBanner
>7820	FunctionDef	CBrowseCtrl 
>7821	ParameterList	 
>7822	ReturnType	CString
>7823	CompoundStatement	 
>7824	ReturnStatement	 
>7825	Identifier	m_sDlgBanner
>7830	FunctionDef	CBrowseCtrl 
>7831	ParameterList	DWORD dwRemove , DWORD dwAdd
>7832	Parameter	 
>7833	Identifier	dwAdd
>7834	ParameterType	DWORD
>7835	Parameter	 
>7836	Identifier	dwRemove
>7837	ParameterType	DWORD
>7838	ReturnType	void
>7839	CompoundStatement	 
>7840	ExpressionStatement	 
>7841	CallExpression	SetButtonStyle ( dwStyle )
>7842	ArgumentList	dwStyle
>7843	Argument	dwStyle
>7844	Identifier	dwStyle
>7845	Callee	SetButtonStyle
>7846	Identifier	SetButtonStyle
>7847	ExpressionStatement	 
>7848	AssignmentExpr	dwStyle |= dwAdd
>7849	Identifier	dwAdd
>7850	Identifier	dwStyle
>7851	ExpressionStatement	 
>7852	AssignmentExpr	dwStyle &= ~dwRemove
>7853	Identifier	~dwRemove
>7854	Identifier	dwStyle
>7855	IdentifierDeclStatement	 
>7856	IdentifierDecl	dwStyle = m_dwStyle
>7857	AssignmentExpr	dwStyle = m_dwStyle
>7858	Identifier	m_dwStyle
>7859	Identifier	m_dwStyle
>7860	Identifier	dwStyle
>7861	IdentifierDeclType	DWORD
>7870	FunctionDef	CBrowseCtrl 
>7871	ParameterList	CDC * pMemDC , CBitmap * pBmp , CDC * pSrcDC , const CRect & srcRect , COLORREF bkColor
>7872	Parameter	 
>7873	Identifier	bkColor
>7874	ParameterType	COLORREF
>7875	Parameter	 
>7876	Identifier	srcRect
>7877	ParameterType	const CRect &
>7878	Parameter	 
>7879	Identifier	pSrcDC
>7880	ParameterType	CDC *
>7881	Parameter	 
>7882	Identifier	pBmp
>7883	ParameterType	CBitmap *
>7884	Parameter	 
>7885	Identifier	pMemDC
>7886	ParameterType	CDC *
>7887	ReturnType	void
>7888	CompoundStatement	 
>7889	ExpressionStatement	 
>7890	CallExpression	pMemDC -> FillSolidRect ( CRect ( 0 , 0 , srcRect . Width ( ) , srcRect . Height ( ) ) , bkColor )
>7891	ArgumentList	CRect ( 0 , 0 , srcRect . Width ( ) , srcRect . Height ( ) )
>7892	Argument	bkColor
>7893	Identifier	bkColor
>7894	Argument	CRect ( 0 , 0 , srcRect . Width ( ) , srcRect . Height ( ) )
>7895	CallExpression	CRect ( 0 , 0 , srcRect . Width ( ) , srcRect . Height ( ) )
>7896	ArgumentList	0
>7897	Argument	srcRect . Height ( )
>7898	CallExpression	srcRect . Height ( )
>7899	ArgumentList	 
>7900	Callee	srcRect . Height
>7901	MemberAccess	srcRect . Height
>7902	Identifier	Height
>7903	Identifier	srcRect
>7904	Argument	srcRect . Width ( )
>7905	CallExpression	srcRect . Width ( )
>7906	ArgumentList	 
>7907	Callee	srcRect . Width
>7908	MemberAccess	srcRect . Width
>7909	Identifier	Width
>7910	Identifier	srcRect
>7911	Argument	0
>7912	PrimaryExpression	0
>7913	Argument	0
>7914	PrimaryExpression	0
>7915	Callee	CRect
>7916	Identifier	CRect
>7917	Callee	pMemDC -> FillSolidRect
>7918	PtrMemberAccess	pMemDC -> FillSolidRect
>7919	Identifier	FillSolidRect
>7920	Identifier	pMemDC
>7921	ExpressionStatement	 
>7922	CallExpression	pMemDC -> SelectObject ( pBmp )
>7923	ArgumentList	pBmp
>7924	Argument	pBmp
>7925	Identifier	pBmp
>7926	Callee	pMemDC -> SelectObject
>7927	PtrMemberAccess	pMemDC -> SelectObject
>7928	Identifier	SelectObject
>7929	Identifier	pMemDC
>7930	ExpressionStatement	 
>7931	CallExpression	pBmp -> CreateCompatibleBitmap ( pSrcDC , srcRect . Width ( ) , srcRect . Height ( ) )
>7932	ArgumentList	pSrcDC
>7933	Argument	srcRect . Height ( )
>7934	CallExpression	srcRect . Height ( )
>7935	ArgumentList	 
>7936	Callee	srcRect . Height
>7937	MemberAccess	srcRect . Height
>7938	Identifier	Height
>7939	Identifier	srcRect
>7940	Argument	srcRect . Width ( )
>7941	CallExpression	srcRect . Width ( )
>7942	ArgumentList	 
>7943	Callee	srcRect . Width
>7944	MemberAccess	srcRect . Width
>7945	Identifier	Width
>7946	Identifier	srcRect
>7947	Argument	pSrcDC
>7948	Identifier	pSrcDC
>7949	Callee	pBmp -> CreateCompatibleBitmap
>7950	PtrMemberAccess	pBmp -> CreateCompatibleBitmap
>7951	Identifier	CreateCompatibleBitmap
>7952	Identifier	pBmp
>7953	ExpressionStatement	 
>7954	CallExpression	pMemDC -> CreateCompatibleDC ( pSrcDC )
>7955	ArgumentList	pSrcDC
>7956	Argument	pSrcDC
>7957	Identifier	pSrcDC
>7958	Callee	pMemDC -> CreateCompatibleDC
>7959	PtrMemberAccess	pMemDC -> CreateCompatibleDC
>7960	Identifier	CreateCompatibleDC
>7961	Identifier	pMemDC
>7973	FunctionDef	CBrowseCtrl 
>7974	ParameterList	LPCTSTR lpszPathName , CString * pStrDrvLetter , CString * pStrFolder , CString * pStrFileName , CString * pStrFileTitle , \
>7975	Parameter	 
>7976	Identifier	pStrFileExt
>7977	ParameterType	CString *
>7978	Parameter	 
>7979	Identifier	pStrFileTitle
>7980	ParameterType	CString *
>7981	Parameter	 
>7982	Identifier	pStrFileName
>7983	ParameterType	CString *
>7984	Parameter	 
>7985	Identifier	pStrFolder
>7986	ParameterType	CString *
>7987	Parameter	 
>7988	Identifier	pStrDrvLetter
>7989	ParameterType	CString *
>7990	Parameter	 
>7991	Identifier	lpszPathName
>7992	ParameterType	LPCTSTR
>7993	ReturnType	BOOL
>7994	CompoundStatement	 
>7995	ReturnStatement	 
>7996	Identifier	TRUE
>7997	IfStatement	if ( pStrFileExt != NULL )
>7998	CompoundStatement	 
>7999	ExpressionStatement	 
>8000	CallExpression	pStrFileExt -> TrimLeft ( _T ( '.' ) )
>8001	ArgumentList	_T ( '.' )
>8002	Argument	_T ( '.' )
>8003	CallExpression	_T ( '.' )
>8004	ArgumentList	'.'
>8005	Argument	'.'
>8006	PrimaryExpression	'.'
>8007	Callee	_T
>8008	Identifier	_T
>8009	Callee	pStrFileExt -> TrimLeft
>8010	PtrMemberAccess	pStrFileExt -> TrimLeft
>8011	Identifier	TrimLeft
>8012	Identifier	pStrFileExt
>8013	ExpressionStatement	 
>8014	AssignmentExpr	* pStrFileExt = szExt
>8015	Identifier	szExt
>8016	UnaryOp	* pStrFileExt
>8017	Identifier	pStrFileExt
>8018	UnaryOperator	*
>8019	Condition	 
>8020	EqualityExpression	pStrFileExt != NULL
>8021	Identifier	NULL
>8022	Identifier	pStrFileExt
>8023	IfStatement	if ( pStrFileTitle != NULL )
>8024	ExpressionStatement	 
>8025	AssignmentExpr	* pStrFileTitle = szName
>8026	Identifier	szName
>8027	UnaryOp	* pStrFileTitle
>8028	Identifier	pStrFileTitle
>8029	UnaryOperator	*
>8030	Condition	 
>8031	EqualityExpression	pStrFileTitle != NULL
>8032	Identifier	NULL
>8033	Identifier	pStrFileTitle
>8034	IfStatement	if ( pStrFileName != NULL )
>8035	ExpressionStatement	 
>8036	AssignmentExpr	* pStrFileName = CString ( szName ) + szExt
>8037	AdditiveExpression	CString ( szName ) + szExt
>8038	Identifier	szExt
>8039	CallExpression	CString ( szName )
>8040	ArgumentList	szName
>8041	Argument	szName
>8042	Identifier	szName
>8043	Callee	CString
>8044	Identifier	CString
>8045	UnaryOp	* pStrFileName
>8046	Identifier	pStrFileName
>8047	UnaryOperator	*
>8048	Condition	 
>8049	EqualityExpression	pStrFileName != NULL
>8050	Identifier	NULL
>8051	Identifier	pStrFileName
>8052	IfStatement	if ( pStrFolder != NULL )
>8053	CompoundStatement	 
>8054	ExpressionStatement	 
>8055	CallExpression	pStrFolder -> TrimRight ( _T ( '/' ) )
>8056	ArgumentList	_T ( '/' )
>8057	Argument	_T ( '/' )
>8058	CallExpression	_T ( '/' )
>8059	ArgumentList	'/'
>8060	Argument	'/'
>8061	PrimaryExpression	'/'
>8062	Callee	_T
>8063	Identifier	_T
>8064	Callee	pStrFolder -> TrimRight
>8065	PtrMemberAccess	pStrFolder -> TrimRight
>8066	Identifier	TrimRight
>8067	Identifier	pStrFolder
>8068	ExpressionStatement	 
>8069	CallExpression	pStrFolder -> TrimRight ( _T ( '\\' ) )
>8070	ArgumentList	_T ( '\\' )
>8071	Argument	_T ( '\\' )
>8072	CallExpression	_T ( '\\' )
>8073	ArgumentList	'\\'
>8074	Argument	'\\'
>8075	PrimaryExpression	'\\'
>8076	Callee	_T
>8077	Identifier	_T
>8078	Callee	pStrFolder -> TrimRight
>8079	PtrMemberAccess	pStrFolder -> TrimRight
>8080	Identifier	TrimRight
>8081	Identifier	pStrFolder
>8082	ExpressionStatement	 
>8083	AssignmentExpr	* pStrFolder = CString ( szDrv ) + szDir
>8084	AdditiveExpression	CString ( szDrv ) + szDir
>8085	Identifier	szDir
>8086	CallExpression	CString ( szDrv )
>8087	ArgumentList	szDrv
>8088	Argument	szDrv
>8089	Identifier	szDrv
>8090	Callee	CString
>8091	Identifier	CString
>8092	UnaryOp	* pStrFolder
>8093	Identifier	pStrFolder
>8094	UnaryOperator	*
>8095	Condition	 
>8096	EqualityExpression	pStrFolder != NULL
>8097	Identifier	NULL
>8098	Identifier	pStrFolder
>8099	IfStatement	if ( pStrDrvLetter != NULL )
>8100	ExpressionStatement	 
>8101	AssignmentExpr	* pStrDrvLetter = szDrv
>8102	Identifier	szDrv
>8103	UnaryOp	* pStrDrvLetter
>8104	Identifier	pStrDrvLetter
>8105	UnaryOperator	*
>8106	Condition	 
>8107	EqualityExpression	pStrDrvLetter != NULL
>8108	Identifier	NULL
>8109	Identifier	pStrDrvLetter
>8110	ExpressionStatement	 
>8111	Expression	szFullPath , szDrv , szDir , szName , szExt
>8112	Expression	szDrv , szDir , szName , szExt
>8113	Expression	szDir , szName , szExt
>8114	Expression	szName , szExt
>8115	Identifier	szExt
>8116	Identifier	szName
>8117	Identifier	szDir
>8118	Identifier	szDrv
>8119	Identifier	szFullPath
>8120	Statement	 
>8121	Statement	 
>8122	Statement	 
>8123	IdentifierDeclStatement	 
>8124	IdentifierDecl	szExt [ FULL_LEN + 1 ] = _T ( \"\" )
>8125	AssignmentExpr	szExt [ FULL_LEN + 1 ] = _T ( \"\" )
>8126	CallExpression	_T ( \"\" )
>8127	ArgumentList	\"\"
>8128	Argument	\"\"
>8129	PrimaryExpression	\"\"
>8130	Callee	_T
>8131	Identifier	_T
>8132	Identifier	szExt
>8133	AdditiveExpression	FULL_LEN + 1
>8134	PrimaryExpression	1
>8135	Identifier	FULL_LEN
>8136	Identifier	szExt
>8137	IdentifierDeclType	TCHAR [ FULL_LEN + 1 ]
>8138	IdentifierDeclStatement	 
>8139	IdentifierDecl	szName [ FULL_LEN + 1 ] = _T ( \"\" )
>8140	AssignmentExpr	szName [ FULL_LEN + 1 ] = _T ( \"\" )
>8141	CallExpression	_T ( \"\" )
>8142	ArgumentList	\"\"
>8143	Argument	\"\"
>8144	PrimaryExpression	\"\"
>8145	Callee	_T
>8146	Identifier	_T
>8147	Identifier	szName
>8148	AdditiveExpression	FULL_LEN + 1
>8149	PrimaryExpression	1
>8150	Identifier	FULL_LEN
>8151	Identifier	szName
>8152	IdentifierDeclType	TCHAR [ FULL_LEN + 1 ]
>8153	IdentifierDeclStatement	 
>8154	IdentifierDecl	szDir [ FULL_LEN + 1 ] = _T ( \"\" )
>8155	AssignmentExpr	szDir [ FULL_LEN + 1 ] = _T ( \"\" )
>8156	CallExpression	_T ( \"\" )
>8157	ArgumentList	\"\"
>8158	Argument	\"\"
>8159	PrimaryExpression	\"\"
>8160	Callee	_T
>8161	Identifier	_T
>8162	Identifier	szDir
>8163	AdditiveExpression	FULL_LEN + 1
>8164	PrimaryExpression	1
>8165	Identifier	FULL_LEN
>8166	Identifier	szDir
>8167	IdentifierDeclType	TCHAR [ FULL_LEN + 1 ]
>8168	IdentifierDeclStatement	 
>8169	IdentifierDecl	szDrv [ _MAX_DRIVE + 1 ] = _T ( \"\" )
>8170	AssignmentExpr	szDrv [ _MAX_DRIVE + 1 ] = _T ( \"\" )
>8171	CallExpression	_T ( \"\" )
>8172	ArgumentList	\"\"
>8173	Argument	\"\"
>8174	PrimaryExpression	\"\"
>8175	Callee	_T
>8176	Identifier	_T
>8177	Identifier	szDrv
>8178	AdditiveExpression	_MAX_DRIVE + 1
>8179	PrimaryExpression	1
>8180	Identifier	_MAX_DRIVE
>8181	Identifier	szDrv
>8182	IdentifierDeclType	TCHAR [ _MAX_DRIVE + 1 ]
>8183	IfStatement	if ( _tfullpath ( szFullPath , lpszPathName , FULL_LEN ) == NULL )
>8184	ReturnStatement	 
>8185	Identifier	FALSE
>8186	Condition	 
>8187	EqualityExpression	_tfullpath ( szFullPath , lpszPathName , FULL_LEN ) == NULL
>8188	Identifier	NULL
>8189	CallExpression	_tfullpath ( szFullPath , lpszPathName , FULL_LEN )
>8190	ArgumentList	szFullPath
>8191	Argument	FULL_LEN
>8192	Identifier	FULL_LEN
>8193	Argument	lpszPathName
>8194	Identifier	lpszPathName
>8195	Argument	szFullPath
>8196	Identifier	szFullPath
>8197	Callee	_tfullpath
>8198	Identifier	_tfullpath
>8199	IdentifierDeclStatement	 
>8200	IdentifierDecl	szFullPath [ FULL_LEN + 1 ] = _T ( \"\" )
>8201	AssignmentExpr	szFullPath [ FULL_LEN + 1 ] = _T ( \"\" )
>8202	CallExpression	_T ( \"\" )
>8203	ArgumentList	\"\"
>8204	Argument	\"\"
>8205	PrimaryExpression	\"\"
>8206	Callee	_T
>8207	Identifier	_T
>8208	Identifier	szFullPath
>8209	AdditiveExpression	FULL_LEN + 1
>8210	PrimaryExpression	1
>8211	Identifier	FULL_LEN
>8212	Identifier	szFullPath
>8213	IdentifierDeclType	TCHAR [ FULL_LEN + 1 ]
>8214	IdentifierDeclStatement	 
>8215	IdentifierDecl	FULL_LEN = 2048
>8216	AssignmentExpr	FULL_LEN = 2048
>8217	PrimaryExpression	2048
>8218	Identifier	FULL_LEN
>8219	Identifier	FULL_LEN
>8220	IdentifierDeclType	const int
>8247	FunctionDef	CBrowseCtrl 
>8248	ParameterList	 
>8249	ReturnType	CString
>8250	CompoundStatement	 
>8251	ReturnStatement	 
>8252	Identifier	str
>8253	ExpressionStatement	 
>8254	CallExpression	SplitPath ( GetPathName ( ) , & str , NULL , NULL , NULL , NULL )
>8255	ArgumentList	GetPathName ( )
>8256	Argument	NULL
>8257	Identifier	NULL
>8258	Argument	NULL
>8259	Identifier	NULL
>8260	Argument	NULL
>8261	Identifier	NULL
>8262	Argument	NULL
>8263	Identifier	NULL
>8264	Argument	& str
>8265	UnaryOp	& str
>8266	Identifier	str
>8267	UnaryOperator	&
>8268	Argument	GetPathName ( )
>8269	CallExpression	GetPathName ( )
>8270	ArgumentList	 
>8271	Callee	GetPathName
>8272	Identifier	GetPathName
>8273	Callee	SplitPath
>8274	Identifier	SplitPath
>8275	IdentifierDeclStatement	 
>8276	IdentifierDecl	str
>8277	Identifier	str
>8278	IdentifierDeclType	CString
>8286	FunctionDef	CBrowseCtrl 
>8287	ParameterList	 
>8288	ReturnType	CString
>8289	CompoundStatement	 
>8290	ReturnStatement	 
>8291	Identifier	str
>8292	ExpressionStatement	 
>8293	CallExpression	SplitPath ( GetPathName ( ) , NULL , & str , NULL , NULL , NULL )
>8294	ArgumentList	GetPathName ( )
>8295	Argument	NULL
>8296	Identifier	NULL
>8297	Argument	NULL
>8298	Identifier	NULL
>8299	Argument	NULL
>8300	Identifier	NULL
>8301	Argument	& str
>8302	UnaryOp	& str
>8303	Identifier	str
>8304	UnaryOperator	&
>8305	Argument	NULL
>8306	Identifier	NULL
>8307	Argument	GetPathName ( )
>8308	CallExpression	GetPathName ( )
>8309	ArgumentList	 
>8310	Callee	GetPathName
>8311	Identifier	GetPathName
>8312	Callee	SplitPath
>8313	Identifier	SplitPath
>8314	IdentifierDeclStatement	 
>8315	IdentifierDecl	str
>8316	Identifier	str
>8317	IdentifierDeclType	CString
>8318	IfStatement	if ( m_dwStyle & BC_CTL_FOLDERSONLY )
>8319	ReturnStatement	 
>8320	CallExpression	GetPathName ( )
>8321	ArgumentList	 
>8322	Callee	GetPathName
>8323	Identifier	GetPathName
>8324	Condition	 
>8325	BitAndExpression	m_dwStyle & BC_CTL_FOLDERSONLY
>8326	Identifier	BC_CTL_FOLDERSONLY
>8327	Identifier	m_dwStyle
>8337	FunctionDef	CBrowseCtrl 
>8338	ParameterList	BOOL bEnable
>8339	Parameter	 
>8340	Identifier	bEnable
>8341	ParameterType	BOOL
>8342	ReturnType	void
>8343	CompoundStatement	 
>8344	ExpressionStatement	 
>8345	CallExpression	RedrawWindow ( )
>8346	ArgumentList	 
>8347	Callee	RedrawWindow
>8348	Identifier	RedrawWindow
>8349	Statement	 
>8350	Statement	 
>8351	Statement	 
>8352	Statement	 
>8353	Statement	 
>8354	Statement	 
>8355	Statement	 
>8356	Statement	 
>8357	ExpressionStatement	 
>8358	CallExpression	m_wndEdit . EnableWindow ( bEnable )
>8359	ArgumentList	bEnable
>8360	Argument	bEnable
>8361	Identifier	bEnable
>8362	Callee	m_wndEdit . EnableWindow
>8363	MemberAccess	m_wndEdit . EnableWindow
>8364	Identifier	EnableWindow
>8365	Identifier	m_wndEdit
>8366	Statement	 
>8367	Statement	 
>8368	Statement	 
>8369	Statement	 
>8370	Statement	 
>8371	Statement	 
>8372	Statement	 
>8373	Statement	 
>8374	Statement	 
>8375	Statement	 
>8376	ExpressionStatement	 
>8377	CallExpression	CButton 
>8378	ArgumentList	bEnable
>8379	Argument	bEnable
>8380	Identifier	bEnable
>8381	Callee	CButton 
>8382	Identifier	CButton 
>8388	FunctionDef	CBrowseCtrl 
>8389	ParameterList	UINT nChar , UINT nRepCnt , UINT nFlags
>8390	Parameter	 
>8391	Identifier	nFlags
>8392	ParameterType	UINT
>8393	Parameter	 
>8394	Identifier	nRepCnt
>8395	ParameterType	UINT
>8396	Parameter	 
>8397	Identifier	nChar
>8398	ParameterType	UINT
>8399	ReturnType	void
>8400	CompoundStatement	 
>8401	IfStatement	if ( nChar == VK_SPACE )
>8402	CompoundStatement	 
>8403	ExpressionStatement	 
>8404	CallExpression	RedrawWindow ( )
>8405	ArgumentList	 
>8406	Callee	RedrawWindow
>8407	Identifier	RedrawWindow
>8408	ExpressionStatement	 
>8409	AssignmentExpr	m_bBtnPushed = TRUE
>8410	Identifier	TRUE
>8411	Identifier	m_bBtnPushed
>8412	Condition	 
>8413	EqualityExpression	nChar == VK_SPACE
>8414	Identifier	VK_SPACE
>8415	Identifier	nChar
>8416	ExpressionStatement	 
>8417	CallExpression	CButton 
>8418	ArgumentList	nChar
>8419	Argument	nFlags
>8420	Identifier	nFlags
>8421	Argument	nRepCnt
>8422	Identifier	nRepCnt
>8423	Argument	nChar
>8424	Identifier	nChar
>8425	Callee	CButton 
>8426	Identifier	CButton 
>8436	FunctionDef	CBrowseCtrl 
>8437	ParameterList	UINT nChar , UINT nRepCnt , UINT nFlags
>8438	Parameter	 
>8439	Identifier	nFlags
>8440	ParameterType	UINT
>8441	Parameter	 
>8442	Identifier	nRepCnt
>8443	ParameterType	UINT
>8444	Parameter	 
>8445	Identifier	nChar
>8446	ParameterType	UINT
>8447	ReturnType	void
>8448	CompoundStatement	 
>8449	IfStatement	if ( nChar == VK_SPACE )
>8450	CompoundStatement	 
>8451	ExpressionStatement	 
>8452	CallExpression	OnButtonClicked ( )
>8453	ArgumentList	 
>8454	Callee	OnButtonClicked
>8455	Identifier	OnButtonClicked
>8456	ExpressionStatement	 
>8457	CallExpression	RedrawWindow ( )
>8458	ArgumentList	 
>8459	Callee	RedrawWindow
>8460	Identifier	RedrawWindow
>8461	ExpressionStatement	 
>8462	AssignmentExpr	m_bBtnPushed = FALSE
>8463	Identifier	FALSE
>8464	Identifier	m_bBtnPushed
>8465	Condition	 
>8466	EqualityExpression	nChar == VK_SPACE
>8467	Identifier	VK_SPACE
>8468	Identifier	nChar
>8469	ExpressionStatement	 
>8470	CallExpression	CButton 
>8471	ArgumentList	nChar
>8472	Argument	nFlags
>8473	Identifier	nFlags
>8474	Argument	nRepCnt
>8475	Identifier	nRepCnt
>8476	Argument	nChar
>8477	Identifier	nChar
>8478	Callee	CButton 
>8479	Identifier	CButton 
>8489	FunctionDef	CBrowseCtrl 
>8490	ParameterList	 
>8491	ReturnType	void
>8492	CompoundStatement	 
>8493	ExpressionStatement	 
>8494	CallExpression	pParent -> PostMessage ( WM_COMMAND , MAKEWPARAM ( GetDlgCtrlID ( ) , 0 ) , ( LPARAM ) NULL )
>8495	ArgumentList	WM_COMMAND
>8496	Argument	( LPARAM ) NULL
>8497	CastExpression	( LPARAM ) NULL
>8498	Identifier	NULL
>8499	CastTarget	LPARAM
>8500	Argument	MAKEWPARAM ( GetDlgCtrlID ( ) , 0 )
>8501	CallExpression	MAKEWPARAM ( GetDlgCtrlID ( ) , 0 )
>8502	ArgumentList	GetDlgCtrlID ( )
>8503	Argument	0
>8504	PrimaryExpression	0
>8505	Argument	GetDlgCtrlID ( )
>8506	CallExpression	GetDlgCtrlID ( )
>8507	ArgumentList	 
>8508	Callee	GetDlgCtrlID
>8509	Identifier	GetDlgCtrlID
>8510	Callee	MAKEWPARAM
>8511	Identifier	MAKEWPARAM
>8512	Argument	WM_COMMAND
>8513	Identifier	WM_COMMAND
>8514	Callee	pParent -> PostMessage
>8515	PtrMemberAccess	pParent -> PostMessage
>8516	Identifier	PostMessage
>8517	Identifier	pParent
>8518	Statement	 
>8519	Statement	 
>8520	Statement	 
>8521	Statement	 
>8522	Statement	 
>8523	Statement	 
>8524	Statement	 
>8525	Statement	 
>8526	Statement	 
>8527	Statement	 
>8528	Statement	 
>8529	Statement	 
>8530	Statement	 
>8531	Statement	 
>8532	IdentifierDeclStatement	 
>8533	IdentifierDecl	* pParent = GetParent ( )
>8534	AssignmentExpr	* pParent = GetParent ( )
>8535	CallExpression	GetParent ( )
>8536	ArgumentList	 
>8537	Callee	GetParent
>8538	Identifier	GetParent
>8539	Identifier	pParent
>8540	Identifier	pParent
>8541	IdentifierDeclType	CWnd *
>8542	ExpressionStatement	 
>8543	CallExpression	DoModal ( )
>8544	ArgumentList	 
>8545	Callee	DoModal
>8546	Identifier	DoModal
>8556	FunctionDef	CBrowseCtrl 
>8557	ParameterList	CFont * pFont , BOOL bRedraw
>8558	Parameter	 
>8559	Identifier	bRedraw
>8560	ParameterType	BOOL
>8561	Parameter	 
>8562	Identifier	pFont
>8563	ParameterType	CFont *
>8564	ReturnType	void
>8565	CompoundStatement	 
>8566	ExpressionStatement	 
>8567	CallExpression	m_wndEdit . SetFont ( pFont , bRedraw )
>8568	ArgumentList	pFont
>8569	Argument	bRedraw
>8570	Identifier	bRedraw
>8571	Argument	pFont
>8572	Identifier	pFont
>8573	Callee	m_wndEdit . SetFont
>8574	MemberAccess	m_wndEdit . SetFont
>8575	Identifier	SetFont
>8576	Identifier	m_wndEdit
>8583	FunctionDef	CBrowseCtrl 
>8584	ParameterList	BOOL bEnabled
>8585	Parameter	 
>8586	Identifier	bEnabled
>8587	ParameterType	BOOL
>8588	ReturnType	void
>8589	CompoundStatement	 
>8590	ExpressionStatement	 
>8591	CallExpression	CButton 
>8592	ArgumentList	bEnabled
>8593	Argument	bEnabled
>8594	Identifier	bEnabled
>8595	Callee	CButton 
>8596	Identifier	CButton 
>8597	ExpressionStatement	 
>8598	CallExpression	m_wndEdit . EnableWindow ( bEnabled )
>8599	ArgumentList	bEnabled
>8600	Argument	bEnabled
>8601	Identifier	bEnabled
>8602	Callee	m_wndEdit . EnableWindow
>8603	MemberAccess	m_wndEdit . EnableWindow
>8604	Identifier	EnableWindow
>8605	Identifier	m_wndEdit
<6=15,14,7
<7=11,8
<8=10,9
<11=13,12
<15=36,25,16
<16=17
<17=21,18
<18=19
<19=20
<21=22
<22=24,23
<25=26
<26=32,27
<27=30,28
<28=29
<30=31
<32=33
<33=35,34
<36=37
<37=39,38
<48=57,56,49
<49=53,50
<50=52,51
<53=55,54
<57=67,58
<58=59
<59=63,60
<60=61
<61=62
<63=64
<64=66,65
<67=68
<68=74,69
<69=72,70
<70=71
<72=73
<74=75
<75=77,76
<85=94,93,86
<86=90,87
<87=89,88
<90=92,91
<94=133,124,108,95
<95=96
<96=104,97
<97=102,98
<98=99
<99=101,100
<102=103
<104=105
<105=107,106
<108=109
<109=115,110
<110=111
<111=112
<112=114,113
<115=116
<116=118,117
<118=120,119
<120=121
<121=123,122
<124=125
<125=129,126
<126=127
<127=128
<129=130
<130=132,131
<133=134
<134=140,135
<135=138,136
<136=137
<138=139
<140=141
<141=143,142
<164=166,165
<166=258,254,250,246,242,238,234,230,226,217,208,204,200,188,184,175,171,167
<167=168
<168=170,169
<171=172
<172=174,173
<175=176
<176=183,177
<177=181,178
<178=179
<179=180
<181=182
<184=185
<185=187,186
<188=189
<189=199,190
<190=198,191
<191=197,192
<192=196,193
<193=195,194
<200=201
<201=203,202
<204=205
<205=207,206
<208=209
<209=216,210
<210=214,211
<211=212
<212=213
<214=215
<217=218
<218=225,219
<219=223,220
<220=221
<221=222
<223=224
<226=227
<227=229,228
<230=231
<231=233,232
<234=235
<235=237,236
<238=239
<239=241,240
<242=243
<243=245,244
<246=247
<247=249,248
<250=251
<251=253,252
<254=255
<255=257,256
<258=259
<259=263,260
<260=262,261
<297=299,298
<299=304,303,302,300
<300=301
<304=306,305
<306=307
<307=309,308
<315=318,317,316
<318=319
<319=334,320
<320=325,321
<321=322
<322=324,323
<325=326
<326=330,327
<327=328
<328=329
<330=331
<331=333,332
<334=335
<335=339,336
<336=338,337
<339=341,340
<352=355,354,353
<355=366,356
<356=362,357
<357=358
<358=360,359
<360=361
<362=363
<363=365,364
<366=367
<367=369,368
<369=370
<375=381,380,376
<376=377
<377=379,378
<381=382
<382=412,383
<383=408,407,406,405,404,403,402,401,400,384
<384=395,390,385
<385=386
<386=388,387
<388=389
<390=391
<391=393,392
<393=394
<395=396
<396=398,397
<398=399
<408=409
<409=411,410
<412=413
<413=415,414
<421=424,423,422
<424=425
<425=426
<431=434,433,432
<434=545,544,543,542,541,540,539,538,537,535,530,515,503,485,463,448,437,435
<435=436
<437=438
<438=446,439
<439=444,442,440
<440=441
<442=443
<444=445
<446=447
<448=449
<449=459,450
<450=457,455,453,451
<451=452
<453=454
<455=456
<457=458
<459=460
<460=462,461
<463=474,464
<464=467,465
<465=466
<467=468
<468=472,469
<469=470
<470=471
<472=473
<474=475
<475=484,476
<476=480,477
<477=478
<478=479
<480=481
<481=483,482
<485=496,486
<486=489,487
<487=488
<489=490
<490=494,491
<491=492
<492=493
<494=495
<496=497
<497=502,498
<498=500,499
<500=501
<503=504
<504=513,505
<505=506
<506=507
<507=511,508
<508=509
<509=510
<511=512
<513=514
<515=523,516
<516=517
<517=521,518
<518=519
<519=520
<521=522
<523=524
<524=526,525
<526=527
<527=529,528
<530=531
<531=533,532
<533=534
<535=536
<563=566,565,564
<566=692,691,690,689,688,681,670,663,649,567
<567=645,583,568
<568=569
<569=570
<570=571
<571=581,572
<572=577,575,573
<573=574
<575=576
<577=578
<578=580,579
<581=582
<583=584
<584=641,627,585
<585=586
<586=623,609,587
<587=588
<588=605,591,589
<589=590
<591=592
<592=593
<593=603,594
<594=599,597,595
<595=596
<597=598
<599=600
<600=602,601
<603=604
<605=606
<606=608,607
<609=610
<610=611
<611=621,612
<612=617,615,613
<613=614
<615=616
<617=618
<618=620,619
<621=622
<623=624
<624=626,625
<627=628
<628=629
<629=639,630
<630=635,633,631
<631=632
<633=634
<635=636
<636=638,637
<639=640
<641=642
<642=644,643
<645=646
<646=648,647
<649=661,650
<650=651
<651=657,652
<652=655,653
<653=654
<655=656
<657=658
<658=660,659
<661=662
<663=664
<664=669,668,665
<665=667,666
<670=671
<671=679,672
<672=675,673
<673=674
<675=676
<676=678,677
<679=680
<681=682
<682=686,683
<683=684
<684=685
<686=687
<692=693
<693=696,695,694
<712=718,717,713
<713=714
<714=716,715
<718=773,730,719
<719=720
<720=728,721
<721=726,724,722
<722=723
<724=725
<726=727
<728=729
<730=763,731
<731=756,749,736,732
<732=733
<733=735,734
<736=737
<737=745,738
<738=743,739
<739=740
<740=742,741
<743=744
<745=746
<746=748,747
<749=750
<750=752,751
<752=753
<753=755,754
<756=757
<757=761,758
<758=759
<759=760
<761=762
<763=764
<764=770,765
<765=769,766
<766=768,767
<770=772,771
<773=774
<774=778,775
<775=776
<776=777
<778=779
<790=793,792,791
<793=794
<794=795
<795=803,796
<796=801,797
<797=798
<798=800,799
<801=802
<803=804
<804=806,805
<811=814,813,812
<814=815
<815=816
<816=826,817
<817=822,818
<818=819
<819=821,820
<822=823
<823=825,824
<826=827
<827=829,828
<834=837,836,835
<837=892,888,869,844,840,838
<838=839
<840=841
<841=843,842
<844=865,845
<845=846
<846=858,847
<847=856,852,848
<848=849
<849=851,850
<852=853
<853=855,854
<856=857
<858=859
<859=861,860
<861=863,862
<863=864
<865=866
<866=868,867
<869=870
<870=887,886,871
<871=885,872
<872=881,877,873
<873=875,874
<875=876
<877=879,878
<879=880
<881=882
<882=884,883
<888=889
<889=891,890
<892=895,893
<893=894
<895=896
<912=915,914,913
<915=916
<916=917
<922=931,930,923
<923=927,924
<924=926,925
<927=929,928
<931=962,937,932
<932=933
<933=935,934
<935=936
<937=953,938
<938=948,943,939
<939=940
<940=942,941
<943=944
<944=946,945
<946=947
<948=949
<949=951,950
<951=952
<953=954
<954=958,955
<955=956
<956=957
<958=959
<959=961,960
<962=963
<963=969,964
<964=967,965
<965=966
<967=968
<969=970
<980=989,988,981
<981=985,982
<982=984,983
<985=987,986
<989=1032,990
<990=1025,991
<991=1020,1016,1007,992
<992=998,993
<993=994
<994=996,995
<996=997
<998=999
<999=1003,1000
<1000=1001
<1001=1002
<1003=1004
<1004=1006,1005
<1007=1008
<1008=1014,1009
<1009=1010
<1010=1011
<1011=1013,1012
<1014=1015
<1016=1017
<1017=1019,1018
<1020=1021
<1021=1023,1022
<1023=1024
<1025=1026
<1026=1028,1027
<1028=1030,1029
<1030=1031
<1032=1033
<1033=1039,1034
<1034=1037,1035
<1035=1036
<1037=1038
<1039=1040
<1053=1062,1061,1054
<1054=1058,1055
<1055=1057,1056
<1058=1060,1059
<1062=1237,1224,1063
<1063=1220,1172,1064
<1064=1065
<1065=1066
<1066=1168,1118,1067
<1067=1068
<1068=1117,1116,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1105,1104,1103,1102,1101,1100,1099,1088,1087,1086,1085,1084,1083,1082,1081,1080,1079,1078,1077,1076,1075,1074,1073,1072,1071,1070,1069
<1088=1089
<1089=1095,1090
<1090=1093,1091
<1091=1092
<1093=1094
<1095=1096
<1096=1098,1097
<1118=1167,1166,1165,1164,1163,1162,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,1151,1150,1149,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,1121,1120,1119
<1138=1139
<1139=1145,1140
<1140=1143,1141
<1141=1142
<1143=1144
<1145=1146
<1146=1148,1147
<1168=1169
<1169=1171,1170
<1172=1173
<1173=1218,1198,1174
<1174=1175
<1175=1194,1193,1192,1191,1190,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,1179,1178,1177,1176
<1194=1196,1195
<1196=1197
<1198=1217,1216,1215,1214,1213,1212,1211,1210,1209,1208,1207,1206,1205,1204,1203,1202,1201,1200,1199
<1218=1219
<1220=1221
<1221=1223,1222
<1224=1225
<1225=1233,1226
<1226=1229,1227
<1227=1228
<1229=1230
<1230=1232,1231
<1233=1234
<1234=1236,1235
<1237=1238
<1238=1243,1242,1239
<1239=1241,1240
<1256=1262,1261,1257
<1257=1258
<1258=1260,1259
<1262=1291,1270,1263
<1263=1264
<1264=1268,1265
<1265=1266
<1266=1267
<1268=1269
<1270=1279,1271
<1271=1274,1272
<1272=1273
<1274=1275
<1275=1277,1276
<1277=1278
<1279=1280
<1280=1286,1281
<1281=1283,1282
<1283=1285,1284
<1286=1288,1287
<1288=1290,1289
<1291=1292
<1292=1296,1293
<1293=1294
<1294=1295
<1296=1297
<1297=1299,1298
<1312=1318,1317,1313
<1313=1314
<1314=1316,1315
<1318=1326,1319
<1319=1320
<1320=1324,1321
<1321=1322
<1322=1323
<1324=1325
<1326=1439,1375,1327
<1327=1328
<1328=1371,1329
<1329=1330
<1330=1362,1348,1331
<1331=1332
<1332=1333
<1333=1344,1334
<1334=1340,1335
<1335=1336
<1336=1338,1337
<1338=1339
<1340=1341
<1341=1343,1342
<1344=1345
<1345=1347,1346
<1348=1349
<1349=1360,1350
<1350=1356,1351
<1351=1352
<1352=1354,1353
<1354=1355
<1356=1357
<1357=1359,1358
<1360=1361
<1362=1363
<1363=1367,1364
<1364=1366,1365
<1367=1369,1368
<1369=1370
<1371=1372
<1372=1374,1373
<1375=1376
<1376=1437,1377
<1377=1433,1432,1423,1416,1407,1378
<1378=1396,1379
<1379=1389,1385,1380
<1380=1381
<1381=1383,1382
<1383=1384
<1385=1386
<1386=1388,1387
<1389=1390
<1390=1394,1391
<1391=1392
<1392=1393
<1394=1395
<1396=1397
<1397=1406,1398
<1398=1402,1399
<1399=1400
<1400=1401
<1402=1403
<1403=1405,1404
<1407=1408
<1408=1414,1409
<1409=1410
<1410=1411
<1411=1413,1412
<1414=1415
<1416=1417
<1417=1422,1421,1418
<1418=1420,1419
<1423=1424
<1424=1430,1425
<1425=1426
<1426=1427
<1427=1429,1428
<1430=1431
<1433=1434
<1434=1436,1435
<1437=1438
<1439=1440
<1440=1442,1441
<1461=1464,1463,1462
<1464=1491,1484,1477,1470,1465
<1465=1466
<1466=1468,1467
<1468=1469
<1470=1471
<1471=1473,1472
<1473=1474
<1474=1476,1475
<1477=1478
<1478=1480,1479
<1480=1481
<1481=1483,1482
<1484=1485
<1485=1489,1486
<1486=1487
<1487=1488
<1489=1490
<1491=1492
<1492=1496,1493
<1493=1494
<1494=1495
<1496=1497
<1505=1514,1513,1506
<1506=1510,1507
<1507=1509,1508
<1510=1512,1511
<1514=1562,1515
<1515=1549,1516
<1516=1545,1533,1522,1517
<1517=1518
<1518=1520,1519
<1520=1521
<1522=1523
<1523=1531,1524
<1524=1529,1527,1525
<1525=1526
<1527=1528
<1529=1530
<1531=1532
<1533=1538,1534
<1534=1535
<1535=1537,1536
<1538=1539
<1539=1541,1540
<1541=1543,1542
<1543=1544
<1545=1546
<1546=1548,1547
<1549=1550
<1550=1559,1551
<1551=1555,1552
<1552=1553
<1553=1554
<1555=1556
<1556=1558,1557
<1559=1561,1560
<1562=1563
<1563=1569,1564
<1564=1567,1565
<1565=1566
<1567=1568
<1569=1570
<1585=1588,1587,1586
<1588=1589
<1589=1590
<1590=1596,1591
<1591=1592
<1592=1593
<1593=1595,1594
<1596=1597
<1602=1605,1604,1603
<1605=1611,1606
<1606=1607
<1607=1609,1608
<1609=1610
<1611=1612
<1612=1614,1613
<1620=1626,1625,1621
<1621=1622
<1622=1624,1623
<1626=1648,1647,1646,1645,1644,1643,1642,1641,1640,1627
<1627=1628
<1628=1636,1629
<1629=1634,1632,1630
<1630=1631
<1632=1633
<1634=1635
<1636=1637
<1637=1639,1638
<1648=1649
<1649=1651,1650
<1660=1666,1665,1661
<1661=1662
<1662=1664,1663
<1666=1667
<1667=1668
<1668=1672,1669
<1669=1670
<1670=1671
<1672=1673
<1678=1687,1686,1679
<1679=1683,1680
<1680=1682,1681
<1683=1685,1684
<1687=1708,1695,1688
<1688=1689
<1689=1693,1690
<1690=1691
<1691=1692
<1693=1694
<1695=1696
<1696=1706,1697
<1697=1704,1702,1700,1698
<1698=1699
<1700=1701
<1702=1703
<1704=1705
<1706=1707
<1708=1711,1709
<1709=1710
<1711=1712
<1712=1714,1713
<1723=1729,1728,1724
<1724=1725
<1725=1727,1726
<1729=1730
<1730=1731
<1731=1736,1732
<1732=1734,1733
<1734=1735
<1742=1745,1744,1743
<1745=1921,1920,1919,1918,1917,1916,1915,1914,1913,1903,1899,1898,1897,1896,1895,1894,1893,1892,1891,1890,1889,1872,1859,1848,1836,1830,1789,1778,1766,1757,1748,1746
<1746=1747
<1748=1749
<1749=1753,1750
<1750=1751
<1751=1752
<1753=1754
<1754=1756,1755
<1757=1758
<1758=1762,1759
<1759=1760
<1760=1761
<1762=1763
<1763=1765,1764
<1766=1767
<1767=1774,1768
<1768=1769
<1769=1770
<1770=1772,1771
<1772=1773
<1774=1775
<1775=1777,1776
<1778=1779
<1779=1785,1780
<1780=1783,1781
<1781=1782
<1783=1784
<1785=1786
<1786=1788,1787
<1789=1800,1790
<1790=1793,1791
<1791=1792
<1793=1794
<1794=1798,1795
<1795=1796
<1796=1797
<1798=1799
<1800=1801
<1801=1829,1802
<1802=1825,1803
<1803=1823,1816,1814,1812,1810,1808,1806,1804
<1804=1805
<1806=1807
<1808=1809
<1810=1811
<1812=1813
<1814=1815
<1816=1817
<1817=1821,1818
<1818=1819
<1819=1820
<1821=1822
<1823=1824
<1825=1826
<1826=1828,1827
<1830=1831
<1831=1833,1832
<1833=1835,1834
<1836=1841,1837
<1837=1838
<1838=1840,1839
<1841=1842
<1842=1844,1843
<1844=1846,1845
<1846=1847
<1848=1853,1849
<1849=1850
<1850=1852,1851
<1853=1854
<1854=1856,1855
<1856=1858,1857
<1859=1860
<1860=1871,1870,1861
<1861=1869,1862
<1862=1868,1863
<1863=1867,1864
<1864=1866,1865
<1872=1880,1873
<1873=1874
<1874=1876,1875
<1876=1877
<1877=1879,1878
<1880=1881
<1881=1885,1882
<1882=1883
<1883=1884
<1885=1886
<1886=1888,1887
<1899=1900
<1900=1902,1901
<1903=1906,1904
<1904=1905
<1906=1907
<1907=1911,1908
<1908=1909
<1909=1910
<1911=1912
<1949=1955,1954,1950
<1950=1951
<1951=1953,1952
<1955=1956
<1956=1957
<1957=1959,1958
<1965=1968,1967,1966
<1968=1969
<1969=1970
<1975=1981,1980,1976
<1976=1977
<1977=1979,1978
<1981=1982
<1982=1983
<1983=1985,1984
<1991=1994,1993,1992
<1994=1995
<1995=1996
<2001=2007,2006,2002
<2002=2003
<2003=2005,2004
<2007=2008
<2008=2009
<2009=2011,2010
<2017=2020,2019,2018
<2020=2021
<2021=2022
<2027=2033,2032,2028
<2028=2029
<2029=2031,2030
<2033=2034
<2034=2035
<2035=2039,2036
<2036=2038,2037
<2046=2049,2048,2047
<2049=2050
<2050=2051
<2056=2062,2061,2057
<2057=2058
<2058=2060,2059
<2062=2063
<2063=2064
<2064=2066,2065
<2072=2075,2074,2073
<2075=2076
<2076=2077
<2082=2085,2084,2083
<2085=2086
<2086=2087
<2092=2095,2094,2093
<2095=2096
<2096=2097
<2097=2105,2104,2098
<2098=2102,2099
<2099=2100
<2100=2101
<2102=2103
<2105=2106
<2106=2108,2107
<2108=2109
<2117=2120,2119,2118
<2120=2149,2145,2123,2121
<2121=2122
<2123=2124
<2124=2143,2125
<2125=2138,2136,2134,2130,2128,2126
<2126=2127
<2128=2129
<2130=2131
<2131=2133,2132
<2134=2135
<2136=2137
<2138=2139
<2139=2141,2140
<2141=2142
<2143=2144
<2145=2146
<2146=2148,2147
<2149=2157,2150
<2150=2151
<2151=2155,2152
<2152=2153
<2153=2154
<2155=2156
<2157=2158
<2158=2160,2159
<2171=2174,2173,2172
<2174=2203,2199,2177,2175
<2175=2176
<2177=2178
<2178=2197,2179
<2179=2192,2190,2188,2186,2184,2180
<2180=2181
<2181=2183,2182
<2184=2185
<2186=2187
<2188=2189
<2190=2191
<2192=2193
<2193=2195,2194
<2195=2196
<2197=2198
<2199=2200
<2200=2202,2201
<2203=2211,2204
<2204=2205
<2205=2209,2206
<2206=2207
<2207=2208
<2209=2210
<2211=2212
<2212=2214,2213
<2225=2228,2227,2226
<2228=2257,2253,2231,2229
<2229=2230
<2231=2232
<2232=2251,2233
<2233=2246,2244,2242,2240,2236,2234
<2234=2235
<2236=2237
<2237=2239,2238
<2240=2241
<2242=2243
<2244=2245
<2246=2247
<2247=2249,2248
<2249=2250
<2251=2252
<2253=2254
<2254=2256,2255
<2257=2265,2258
<2258=2259
<2259=2263,2260
<2260=2261
<2261=2262
<2263=2264
<2265=2266
<2266=2268,2267
<2279=2282,2281,2280
<2282=2283
<2283=2323,2308,2284
<2284=2285
<2285=2286
<2286=2293,2292,2287
<2287=2291,2288
<2288=2290,2289
<2293=2294
<2294=2305,2295
<2295=2302,2296
<2296=2300,2297
<2297=2298
<2298=2299
<2300=2301
<2302=2304,2303
<2305=2307,2306
<2308=2309
<2309=2316,2315,2310
<2310=2314,2311
<2311=2313,2312
<2316=2317
<2317=2319,2318
<2319=2320
<2320=2322,2321
<2323=2324
<2324=2326,2325
<2326=2327
<2338=2344,2343,2339
<2339=2340
<2340=2342,2341
<2344=2481,2444,2399,2390,2378,2345
<2345=2374,2362,2346
<2346=2347
<2347=2350,2348
<2348=2349
<2350=2351
<2351=2361,2352
<2352=2360,2353
<2353=2359,2354
<2354=2358,2355
<2355=2357,2356
<2362=2370,2363
<2363=2364
<2364=2368,2365
<2365=2366
<2366=2367
<2368=2369
<2370=2371
<2371=2373,2372
<2374=2375
<2375=2377,2376
<2378=2379
<2379=2389,2388,2380
<2380=2387,2381
<2381=2385,2382
<2382=2383
<2383=2384
<2385=2386
<2390=2391
<2391=2398,2397,2392
<2392=2396,2393
<2393=2395,2394
<2399=2412,2400
<2400=2408,2401
<2401=2402
<2402=2406,2403
<2403=2404
<2404=2405
<2406=2407
<2408=2409
<2409=2411,2410
<2412=2413
<2413=2441,2414
<2414=2438,2415
<2415=2435,2416
<2416=2428,2417
<2417=2425,2418
<2418=2422,2419
<2419=2421,2420
<2422=2424,2423
<2425=2427,2426
<2428=2432,2429
<2429=2431,2430
<2432=2434,2433
<2435=2437,2436
<2438=2440,2439
<2441=2443,2442
<2444=2476,2445
<2445=2469,2465,2446
<2446=2447
<2447=2455,2454,2448
<2448=2452,2449
<2449=2450
<2450=2451
<2452=2453
<2455=2456
<2456=2462,2457
<2457=2461,2458
<2458=2460,2459
<2462=2464,2463
<2465=2466
<2466=2468,2467
<2469=2470
<2470=2475,2474,2471
<2471=2473,2472
<2476=2477
<2477=2479,2478
<2479=2480
<2481=2489,2482
<2482=2483
<2483=2487,2484
<2484=2485
<2485=2486
<2487=2488
<2489=2490
<2490=2492,2491
<2510=2513,2512,2511
<2513=2514
<2514=2515
<2520=2538,2537,2521
<2521=2534,2531,2528,2525,2522
<2522=2524,2523
<2525=2527,2526
<2528=2530,2529
<2531=2533,2532
<2534=2536,2535
<2538=2595,2591,2587,2548,2544,2539
<2539=2540
<2540=2542,2541
<2542=2543
<2544=2545
<2545=2547,2546
<2548=2559,2549
<2549=2552,2550
<2550=2551
<2552=2553
<2553=2557,2554
<2554=2555
<2555=2556
<2557=2558
<2559=2560
<2560=2586,2561
<2561=2584,2562
<2562=2577,2569,2567,2565,2563
<2563=2564
<2565=2566
<2567=2568
<2569=2570
<2570=2576,2571
<2571=2575,2572
<2572=2574,2573
<2577=2578
<2578=2582,2579
<2579=2580
<2580=2581
<2582=2583
<2584=2585
<2587=2588
<2588=2590,2589
<2591=2592
<2592=2594,2593
<2595=2619,2596
<2596=2612,2597
<2597=2608,2598
<2598=2601,2599
<2599=2600
<2601=2602
<2602=2606,2603
<2603=2604
<2604=2605
<2606=2607
<2608=2609
<2609=2611,2610
<2612=2613
<2613=2618,2614
<2614=2616,2615
<2616=2617
<2619=2620
<2620=2622,2621
<2645=2651,2650,2646
<2646=2647
<2647=2649,2648
<2651=2699,2698,2697,2696,2695,2694,2693,2692,2691,2690,2681,2666,2652
<2652=2662,2653
<2653=2654
<2654=2661,2655
<2655=2659,2656
<2656=2657
<2657=2658
<2659=2660
<2662=2663
<2663=2665,2664
<2666=2677,2667
<2667=2676,2675,2674,2672,2668
<2668=2669
<2669=2671,2670
<2672=2673
<2677=2678
<2678=2680,2679
<2681=2682
<2682=2686,2683
<2683=2684
<2684=2685
<2686=2687
<2687=2689,2688
<2708=2723,2722,2709
<2709=2719,2716,2713,2710
<2710=2712,2711
<2713=2715,2714
<2716=2718,2717
<2719=2721,2720
<2723=2812,2803,2796,2726,2724
<2724=2725
<2726=2792,2727
<2727=2779,2768,2756,2745,2728
<2728=2729
<2729=2743,2730
<2730=2741,2739,2737,2731
<2731=2732
<2732=2736,2733
<2733=2735,2734
<2737=2738
<2739=2740
<2741=2742
<2743=2744
<2745=2747,2746
<2747=2748
<2748=2755,2749
<2749=2751,2750
<2751=2752
<2752=2754,2753
<2756=2757
<2757=2767,2766,2758
<2758=2765,2759
<2759=2761,2760
<2761=2762
<2762=2764,2763
<2768=2769
<2769=2777,2770
<2770=2775,2771
<2771=2772
<2772=2774,2773
<2775=2776
<2777=2778
<2779=2781,2780
<2781=2782
<2782=2791,2783
<2783=2785,2784
<2785=2786
<2786=2788,2787
<2788=2790,2789
<2792=2793
<2793=2795,2794
<2796=2799,2797
<2797=2798
<2799=2800
<2800=2802,2801
<2803=2804
<2804=2811,2810,2805
<2805=2809,2806
<2806=2808,2807
<2812=2813
<2813=2815,2814
<2834=2840,2839,2835
<2835=2836
<2836=2838,2837
<2840=2841
<2841=2842
<2842=2844,2843
<2850=2853,2852,2851
<2853=2854
<2854=2855
<2860=2863,2862,2861
<2863=3091,3087,3072,3071,3070,3069,2864,2866,2870,2874,2897,2898,2899,2900,2901,2902,2903,2904,2905,2906,2907,2911,2920,2937,2938,2939,2940,2941,2942,2943,2944,2945,2946,2947,2948,2949,2956,2965,2966,2983,2989,3004,3008,3015,3024,3025,3026,3027,3028,3036,3042,3048,3054,3060,3067,3068
<2864=2865
<2866=2867
<2867=2869,2868
<2870=2871
<2871=2873,2872
<2874=2888,2875
<2875=2876
<2876=2884,2877
<2877=2882,2878
<2878=2879
<2879=2881,2880
<2882=2883
<2884=2885
<2885=2887,2886
<2888=2889
<2889=2893,2890
<2890=2891
<2891=2892
<2893=2894
<2894=2896,2895
<2907=2908
<2908=2910,2909
<2911=2912
<2912=2919,2913
<2913=2917,2914
<2914=2915
<2915=2916
<2917=2918
<2920=2928,2921
<2921=2922
<2922=2924,2923
<2924=2925
<2925=2927,2926
<2928=2929
<2929=2933,2930
<2930=2931
<2931=2932
<2933=2934
<2934=2936,2935
<2949=2950
<2950=2955,2954,2951
<2951=2953,2952
<2956=2957
<2957=2963,2958
<2958=2961,2959
<2959=2960
<2961=2962
<2963=2964
<2966=2967
<2967=2981,2968
<2968=2979,2977,2969
<2969=2970
<2970=2974,2971
<2971=2973,2972
<2974=2976,2975
<2977=2978
<2979=2980
<2981=2982
<2983=2984
<2984=2988,2985
<2985=2987,2986
<2989=3000,2990
<2990=2999,2998,2997,2995,2991
<2991=2992
<2992=2994,2993
<2995=2996
<3000=3001
<3001=3003,3002
<3004=3005
<3005=3007,3006
<3008=3011,3009
<3009=3010
<3011=3012
<3012=3014,3013
<3015=3016
<3016=3022,3017
<3017=3018
<3018=3019
<3019=3021,3020
<3022=3023
<3028=3029
<3029=3033,3030
<3030=3032,3031
<3033=3035,3034
<3036=3037
<3037=3039,3038
<3039=3041,3040
<3042=3043
<3043=3045,3044
<3045=3047,3046
<3048=3049
<3049=3051,3050
<3051=3053,3052
<3054=3055
<3055=3057,3056
<3057=3059,3058
<3060=3061
<3061=3065,3062
<3062=3063
<3063=3064
<3065=3066
<3072=3073
<3073=3085,3074
<3074=3081,3079,3075
<3075=3076
<3076=3078,3077
<3079=3080
<3081=3082
<3082=3084,3083
<3085=3086
<3087=3088
<3088=3090,3089
<3091=3092
<3092=3105,3104,3101,3093
<3093=3100,3094
<3094=3098,3095
<3095=3096
<3096=3097
<3098=3099
<3101=3103,3102
<3138=3141,3140,3139
<3141=3443,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,3431,3430,3429,3142,3144,3148,3152,3175,3176,3177,3178,3179,3180,3181,3182,3183,3184,3185,3194,3196,3197,3198,3199,3212,3258,3267,3274,3278,3282,3310,3314,3318,3330,3345,3363,3371,3379,3390,3399,3408,3416,3417,3418,3419,3420,3421,3422,3423,3424,3425,3426,3427,3428
<3142=3143
<3144=3145
<3145=3147,3146
<3148=3149
<3149=3151,3150
<3152=3166,3153
<3153=3154
<3154=3162,3155
<3155=3160,3156
<3156=3157
<3157=3159,3158
<3160=3161
<3162=3163
<3163=3165,3164
<3166=3167
<3167=3171,3168
<3168=3169
<3169=3170
<3171=3172
<3172=3174,3173
<3185=3186
<3186=3193,3187
<3187=3189,3188
<3189=3190
<3190=3192,3191
<3194=3195
<3199=3200
<3200=3207,3201
<3201=3205,3202
<3202=3203
<3203=3204
<3205=3206
<3207=3211,3208
<3208=3210,3209
<3212=3254,3213
<3213=3240,3229,3214
<3214=3215
<3215=3228,3216
<3216=3227,3217
<3217=3226,3218
<3218=3220,3219
<3220=3222,3221
<3222=3223
<3223=3225,3224
<3229=3230
<3230=3238,3231
<3231=3236,3234,3232
<3232=3233
<3234=3235
<3236=3237
<3238=3239
<3240=3241
<3241=3253,3252,3242
<3242=3251,3243
<3243=3247,3244
<3244=3245
<3245=3246
<3247=3248
<3248=3250,3249
<3254=3255
<3255=3257,3256
<3258=3259
<3259=3266,3260
<3260=3262,3261
<3262=3263
<3263=3265,3264
<3267=3268
<3268=3273,3272,3269
<3269=3271,3270
<3274=3275
<3275=3277,3276
<3278=3279
<3279=3281,3280
<3282=3306,3283
<3283=3302,3284
<3284=3285
<3285=3301,3286
<3286=3288,3287
<3288=3290,3289
<3290=3291
<3291=3293,3292
<3293=3297,3294
<3294=3295
<3295=3296
<3297=3298
<3298=3300,3299
<3302=3303
<3303=3305,3304
<3306=3307
<3307=3309,3308
<3310=3311
<3311=3313,3312
<3314=3315
<3315=3317,3316
<3318=3319
<3319=3329,3328,3320
<3320=3327,3321
<3321=3323,3322
<3323=3324
<3324=3326,3325
<3330=3341,3331
<3331=3340,3339,3338,3336,3332
<3332=3333
<3333=3335,3334
<3336=3337
<3341=3342
<3342=3344,3343
<3345=3354,3346
<3346=3353,3352,3351,3349,3347
<3347=3348
<3349=3350
<3354=3355
<3355=3357,3356
<3357=3359,3358
<3359=3360
<3360=3362,3361
<3363=3364
<3364=3366,3365
<3366=3368,3367
<3368=3370,3369
<3371=3372
<3372=3374,3373
<3374=3376,3375
<3376=3378,3377
<3379=3380
<3380=3387,3381
<3381=3385,3382
<3382=3383
<3383=3384
<3385=3386
<3387=3389,3388
<3390=3391
<3391=3397,3392
<3392=3393
<3393=3394
<3394=3396,3395
<3397=3398
<3399=3400
<3400=3407,3406,3401
<3401=3405,3402
<3402=3404,3403
<3408=3409
<3409=3411,3410
<3411=3413,3412
<3413=3415,3414
<3482=3488,3487,3483
<3483=3484
<3484=3486,3485
<3488=3489
<3489=3490
<3490=3492,3491
<3498=3501,3500,3499
<3501=3502
<3502=3503
<3508=3514,3513,3509
<3509=3510
<3510=3512,3511
<3514=3547,3546,3545,3544,3543,3542,3541,3540,3539,3538,3537,3536,3535,3534,3533,3532,3531,3515
<3515=3526,3521,3516
<3516=3517
<3517=3519,3518
<3519=3520
<3521=3522
<3522=3524,3523
<3524=3525
<3526=3527
<3527=3529,3528
<3529=3530
<3547=3548
<3548=3550,3549
<3556=3559,3558,3557
<3559=3560
<3560=3561
<3566=3578,3577,3567
<3567=3574,3571,3568
<3568=3570,3569
<3571=3573,3572
<3574=3576,3575
<3578=3756,3752,3748,3729,3717,3708,3625,3586,3579
<3579=3580
<3580=3582,3581
<3582=3583
<3583=3585,3584
<3586=3587
<3587=3621,3588
<3588=3617,3613,3606,3599,3595,3593,3591,3589
<3589=3590
<3591=3592
<3593=3594
<3595=3596
<3596=3598,3597
<3599=3600
<3600=3602,3601
<3602=3603
<3603=3605,3604
<3606=3607
<3607=3609,3608
<3609=3610
<3610=3612,3611
<3613=3614
<3614=3616,3615
<3617=3618
<3618=3620,3619
<3621=3622
<3622=3624,3623
<3625=3701,3652,3626
<3626=3627
<3627=3651,3650,3649,3648,3647,3646,3645,3644,3643,3642,3641,3628
<3628=3629
<3629=3637,3630
<3630=3635,3633,3631
<3631=3632
<3633=3634
<3635=3636
<3637=3638
<3638=3640,3639
<3652=3700,3699,3698,3697,3696,3695,3694,3693,3692,3691,3690,3677,3676,3675,3674,3673,3672,3671,3670,3669,3668,3667,3666,3653
<3653=3654
<3654=3662,3655
<3655=3660,3658,3656
<3656=3657
<3658=3659
<3660=3661
<3662=3663
<3663=3665,3664
<3677=3678
<3678=3686,3679
<3679=3684,3682,3680
<3680=3681
<3682=3683
<3684=3685
<3686=3687
<3687=3689,3688
<3701=3702
<3702=3704,3703
<3704=3706,3705
<3706=3707
<3708=3709
<3709=3713,3710
<3710=3711
<3711=3712
<3713=3714
<3714=3716,3715
<3717=3718
<3718=3725,3719
<3719=3720
<3720=3721
<3721=3723,3722
<3723=3724
<3725=3726
<3726=3728,3727
<3729=3730
<3730=3746,3731
<3731=3742,3738,3736,3734,3732
<3732=3733
<3734=3735
<3736=3737
<3738=3739
<3739=3741,3740
<3742=3743
<3743=3745,3744
<3746=3747
<3748=3749
<3749=3751,3750
<3752=3753
<3753=3755,3754
<3756=3758,3757
<3758=3759
<3759=3766,3760
<3760=3762,3761
<3762=3763
<3763=3765,3764
<3766=3768,3767
<3768=3769
<3769=3771,3770
<3794=3806,3805,3795
<3795=3802,3799,3796
<3796=3798,3797
<3799=3801,3800
<3802=3804,3803
<3806=4581,4577,4558,4551,4537,4530,4517,4500,4483,4466,4449,4438,4427,3807,3814,3821,3828,3835,3842,3881,3892,3905,3916,3929,3940,3953,3964,3977,3988,3999,4010,4021,4034,4045,4058,4069,4082,4093,4106,4117,4130,4141,4152,4189,4200,4211,4224,4235,4248,4259,4270,4283,4294,4305,4316,4327,4338,4351,4364,4377,4390,4403,4416
<3807=3808
<3808=3810,3809
<3810=3811
<3811=3813,3812
<3814=3815
<3815=3817,3816
<3817=3818
<3818=3820,3819
<3821=3822
<3822=3824,3823
<3824=3825
<3825=3827,3826
<3828=3829
<3829=3831,3830
<3831=3832
<3832=3834,3833
<3835=3836
<3836=3838,3837
<3838=3839
<3839=3841,3840
<3842=3843
<3843=3877,3844
<3844=3873,3869,3862,3855,3851,3849,3847,3845
<3845=3846
<3847=3848
<3849=3850
<3851=3852
<3852=3854,3853
<3855=3856
<3856=3858,3857
<3858=3859
<3859=3861,3860
<3862=3863
<3863=3865,3864
<3865=3866
<3866=3868,3867
<3869=3870
<3870=3872,3871
<3873=3874
<3874=3876,3875
<3877=3878
<3878=3880,3879
<3881=3882
<3882=3888,3883
<3883=3886,3884
<3884=3885
<3886=3887
<3888=3889
<3889=3891,3890
<3892=3893
<3893=3901,3894
<3894=3899,3895
<3895=3896
<3896=3898,3897
<3899=3900
<3901=3902
<3902=3904,3903
<3905=3906
<3906=3912,3907
<3907=3910,3908
<3908=3909
<3910=3911
<3912=3913
<3913=3915,3914
<3916=3917
<3917=3925,3918
<3918=3923,3919
<3919=3920
<3920=3922,3921
<3923=3924
<3925=3926
<3926=3928,3927
<3929=3930
<3930=3936,3931
<3931=3934,3932
<3932=3933
<3934=3935
<3936=3937
<3937=3939,3938
<3940=3941
<3941=3949,3942
<3942=3947,3943
<3943=3944
<3944=3946,3945
<3947=3948
<3949=3950
<3950=3952,3951
<3953=3954
<3954=3960,3955
<3955=3958,3956
<3956=3957
<3958=3959
<3960=3961
<3961=3963,3962
<3964=3965
<3965=3973,3966
<3966=3971,3967
<3967=3968
<3968=3970,3969
<3971=3972
<3973=3974
<3974=3976,3975
<3977=3978
<3978=3984,3979
<3979=3982,3980
<3980=3981
<3982=3983
<3984=3985
<3985=3987,3986
<3988=3989
<3989=3995,3990
<3990=3993,3991
<3991=3992
<3993=3994
<3995=3996
<3996=3998,3997
<3999=4000
<4000=4006,4001
<4001=4004,4002
<4002=4003
<4004=4005
<4006=4007
<4007=4009,4008
<4010=4011
<4011=4017,4012
<4012=4013
<4013=4014
<4014=4016,4015
<4017=4018
<4018=4020,4019
<4021=4022
<4022=4030,4023
<4023=4028,4024
<4024=4025
<4025=4027,4026
<4028=4029
<4030=4031
<4031=4033,4032
<4034=4035
<4035=4041,4036
<4036=4039,4037
<4037=4038
<4039=4040
<4041=4042
<4042=4044,4043
<4045=4046
<4046=4054,4047
<4047=4052,4048
<4048=4049
<4049=4051,4050
<4052=4053
<4054=4055
<4055=4057,4056
<4058=4059
<4059=4065,4060
<4060=4063,4061
<4061=4062
<4063=4064
<4065=4066
<4066=4068,4067
<4069=4070
<4070=4078,4071
<4071=4076,4072
<4072=4073
<4073=4075,4074
<4076=4077
<4078=4079
<4079=4081,4080
<4082=4083
<4083=4089,4084
<4084=4087,4085
<4085=4086
<4087=4088
<4089=4090
<4090=4092,4091
<4093=4094
<4094=4102,4095
<4095=4100,4096
<4096=4097
<4097=4099,4098
<4100=4101
<4102=4103
<4103=4105,4104
<4106=4107
<4107=4113,4108
<4108=4111,4109
<4109=4110
<4111=4112
<4113=4114
<4114=4116,4115
<4117=4118
<4118=4126,4119
<4119=4124,4120
<4120=4121
<4121=4123,4122
<4124=4125
<4126=4127
<4127=4129,4128
<4130=4131
<4131=4137,4132
<4132=4135,4133
<4133=4134
<4135=4136
<4137=4138
<4138=4140,4139
<4141=4142
<4142=4148,4143
<4143=4144
<4144=4145
<4145=4147,4146
<4148=4149
<4149=4151,4150
<4152=4185,4181,4178,4153
<4153=4167,4154
<4154=4155
<4155=4163,4156
<4156=4159,4157
<4157=4158
<4159=4160
<4160=4162,4161
<4163=4164
<4164=4166,4165
<4167=4168
<4168=4174,4169
<4169=4172,4170
<4170=4171
<4172=4173
<4174=4175
<4175=4177,4176
<4178=4180,4179
<4181=4182
<4182=4184,4183
<4185=4186
<4186=4188,4187
<4189=4190
<4190=4196,4191
<4191=4194,4192
<4192=4193
<4194=4195
<4196=4197
<4197=4199,4198
<4200=4201
<4201=4207,4202
<4202=4203
<4203=4204
<4204=4206,4205
<4207=4208
<4208=4210,4209
<4211=4212
<4212=4220,4213
<4213=4216,4214
<4214=4215
<4216=4217
<4217=4219,4218
<4220=4221
<4221=4223,4222
<4224=4225
<4225=4231,4226
<4226=4229,4227
<4227=4228
<4229=4230
<4231=4232
<4232=4234,4233
<4235=4236
<4236=4244,4237
<4237=4242,4238
<4238=4239
<4239=4241,4240
<4242=4243
<4244=4245
<4245=4247,4246
<4248=4249
<4249=4255,4250
<4250=4253,4251
<4251=4252
<4253=4254
<4255=4256
<4256=4258,4257
<4259=4260
<4260=4266,4261
<4261=4264,4262
<4262=4263
<4264=4265
<4266=4267
<4267=4269,4268
<4270=4271
<4271=4279,4272
<4272=4277,4273
<4273=4274
<4274=4276,4275
<4277=4278
<4279=4280
<4280=4282,4281
<4283=4284
<4284=4290,4285
<4285=4288,4286
<4286=4287
<4288=4289
<4290=4291
<4291=4293,4292
<4294=4295
<4295=4301,4296
<4296=4299,4297
<4297=4298
<4299=4300
<4301=4302
<4302=4304,4303
<4305=4306
<4306=4312,4307
<4307=4310,4308
<4308=4309
<4310=4311
<4312=4313
<4313=4315,4314
<4316=4317
<4317=4323,4318
<4318=4321,4319
<4319=4320
<4321=4322
<4323=4324
<4324=4326,4325
<4327=4328
<4328=4334,4329
<4329=4332,4330
<4330=4331
<4332=4333
<4334=4335
<4335=4337,4336
<4338=4339
<4339=4347,4340
<4340=4345,4341
<4341=4342
<4342=4344,4343
<4345=4346
<4347=4348
<4348=4350,4349
<4351=4352
<4352=4360,4353
<4353=4358,4354
<4354=4355
<4355=4357,4356
<4358=4359
<4360=4361
<4361=4363,4362
<4364=4365
<4365=4373,4366
<4366=4369,4367
<4367=4368
<4369=4370
<4370=4372,4371
<4373=4374
<4374=4376,4375
<4377=4378
<4378=4386,4379
<4379=4382,4380
<4380=4381
<4382=4383
<4383=4385,4384
<4386=4387
<4387=4389,4388
<4390=4391
<4391=4399,4392
<4392=4397,4393
<4393=4394
<4394=4396,4395
<4397=4398
<4399=4400
<4400=4402,4401
<4403=4404
<4404=4412,4405
<4405=4410,4406
<4406=4407
<4407=4409,4408
<4410=4411
<4412=4413
<4413=4415,4414
<4416=4417
<4417=4423,4418
<4418=4421,4419
<4419=4420
<4421=4422
<4423=4424
<4424=4426,4425
<4427=4428
<4428=4434,4429
<4429=4432,4430
<4430=4431
<4432=4433
<4434=4435
<4435=4437,4436
<4438=4439
<4439=4445,4440
<4440=4441
<4441=4442
<4442=4444,4443
<4445=4446
<4446=4448,4447
<4449=4450
<4450=4462,4451
<4451=4460,4458,4452
<4452=4453
<4453=4456,4455,4454
<4456=4457
<4458=4459
<4460=4461
<4462=4463
<4463=4465,4464
<4466=4467
<4467=4479,4468
<4468=4477,4475,4469
<4469=4470
<4470=4473,4472,4471
<4473=4474
<4475=4476
<4477=4478
<4479=4480
<4480=4482,4481
<4483=4484
<4484=4496,4485
<4485=4494,4492,4486
<4486=4487
<4487=4490,4489,4488
<4490=4491
<4492=4493
<4494=4495
<4496=4497
<4497=4499,4498
<4500=4501
<4501=4513,4502
<4502=4511,4509,4503
<4503=4504
<4504=4507,4506,4505
<4507=4508
<4509=4510
<4511=4512
<4513=4514
<4514=4516,4515
<4517=4527,4524,4521,4518
<4518=4520,4519
<4521=4523,4522
<4524=4526,4525
<4527=4529,4528
<4530=4531
<4531=4536,4535,4532
<4532=4534,4533
<4537=4538
<4538=4550,4549,4539
<4539=4548,4540
<4540=4542,4541
<4542=4544,4543
<4544=4546,4545
<4546=4547
<4551=4552
<4552=4557,4556,4553
<4553=4555,4554
<4558=4559
<4559=4575,4560
<4560=4571,4567,4565,4563,4561
<4561=4562
<4563=4564
<4565=4566
<4567=4568
<4568=4570,4569
<4571=4572
<4572=4574,4573
<4575=4576
<4577=4578
<4578=4580,4579
<4581=4582
<4582=4584,4583
<4620=4632,4631,4621
<4621=4628,4625,4622
<4622=4624,4623
<4625=4627,4626
<4628=4630,4629
<4632=5708,5704,5685,5678,5664,5657,5641,5624,5607,5590,5573,5556,5545,5534,5523,5510,5497,5482,5471,5460,5445,5434,5423,5412,4633,4640,4647,4654,4661,4668,4675,4714,4812,4823,4834,4845,4856,4867,4878,4889,4928,4939,4950,4961,4972,4983,4994,5007,5020,5031,5042,5053,5064,5075,5086,5099,5112,5123,5134,5190,5201,5212,5223,5279,5290,5301,5312,5325,5336,5349,5360,5373,5388,5401
<4633=4634
<4634=4636,4635
<4636=4637
<4637=4639,4638
<4640=4641
<4641=4643,4642
<4643=4644
<4644=4646,4645
<4647=4648
<4648=4650,4649
<4650=4651
<4651=4653,4652
<4654=4655
<4655=4657,4656
<4657=4658
<4658=4660,4659
<4661=4662
<4662=4664,4663
<4664=4665
<4665=4667,4666
<4668=4669
<4669=4671,4670
<4671=4672
<4672=4674,4673
<4675=4676
<4676=4710,4677
<4677=4706,4702,4695,4688,4684,4682,4680,4678
<4678=4679
<4680=4681
<4682=4683
<4684=4685
<4685=4687,4686
<4688=4689
<4689=4691,4690
<4691=4692
<4692=4694,4693
<4695=4696
<4696=4698,4697
<4698=4699
<4699=4701,4700
<4702=4703
<4703=4705,4704
<4706=4707
<4707=4709,4708
<4710=4711
<4711=4713,4712
<4714=4808,4804,4801,4715
<4715=4786,4716
<4716=4782,4767,4717
<4717=4718
<4718=4763,4752,4719
<4719=4720
<4720=4748,4737,4721
<4721=4722
<4722=4723
<4723=4733,4724
<4724=4729,4725
<4725=4726
<4726=4728,4727
<4729=4730
<4730=4732,4731
<4733=4734
<4734=4736,4735
<4737=4738
<4738=4744,4739
<4739=4742,4740
<4740=4741
<4742=4743
<4744=4745
<4745=4747,4746
<4748=4749
<4749=4751,4750
<4752=4753
<4753=4759,4754
<4754=4757,4755
<4755=4756
<4757=4758
<4759=4760
<4760=4762,4761
<4763=4764
<4764=4766,4765
<4767=4768
<4768=4778,4769
<4769=4774,4770
<4770=4771
<4771=4773,4772
<4774=4775
<4775=4777,4776
<4778=4779
<4779=4781,4780
<4782=4783
<4783=4785,4784
<4786=4787
<4787=4797,4788
<4788=4791,4789
<4789=4790
<4791=4792
<4792=4796,4793
<4793=4795,4794
<4797=4798
<4798=4800,4799
<4801=4803,4802
<4804=4805
<4805=4807,4806
<4808=4809
<4809=4811,4810
<4812=4813
<4813=4819,4814
<4814=4815
<4815=4816
<4816=4818,4817
<4819=4820
<4820=4822,4821
<4823=4824
<4824=4830,4825
<4825=4828,4826
<4826=4827
<4828=4829
<4830=4831
<4831=4833,4832
<4834=4835
<4835=4841,4836
<4836=4839,4837
<4837=4838
<4839=4840
<4841=4842
<4842=4844,4843
<4845=4846
<4846=4852,4847
<4847=4850,4848
<4848=4849
<4850=4851
<4852=4853
<4853=4855,4854
<4856=4857
<4857=4863,4858
<4858=4861,4859
<4859=4860
<4861=4862
<4863=4864
<4864=4866,4865
<4867=4868
<4868=4874,4869
<4869=4872,4870
<4870=4871
<4872=4873
<4874=4875
<4875=4877,4876
<4878=4879
<4879=4885,4880
<4880=4883,4881
<4881=4882
<4883=4884
<4885=4886
<4886=4888,4887
<4889=4924,4920,4917,4890
<4890=4902,4891
<4891=4892
<4892=4898,4893
<4893=4896,4894
<4894=4895
<4896=4897
<4898=4899
<4899=4901,4900
<4902=4903
<4903=4913,4904
<4904=4907,4905
<4905=4906
<4907=4908
<4908=4912,4909
<4909=4911,4910
<4913=4914
<4914=4916,4915
<4917=4919,4918
<4920=4921
<4921=4923,4922
<4924=4925
<4925=4927,4926
<4928=4929
<4929=4935,4930
<4930=4933,4931
<4931=4932
<4933=4934
<4935=4936
<4936=4938,4937
<4939=4940
<4940=4946,4941
<4941=4944,4942
<4942=4943
<4944=4945
<4946=4947
<4947=4949,4948
<4950=4951
<4951=4957,4952
<4952=4953
<4953=4954
<4954=4956,4955
<4957=4958
<4958=4960,4959
<4961=4962
<4962=4968,4963
<4963=4966,4964
<4964=4965
<4966=4967
<4968=4969
<4969=4971,4970
<4972=4973
<4973=4979,4974
<4974=4977,4975
<4975=4976
<4977=4978
<4979=4980
<4980=4982,4981
<4983=4984
<4984=4990,4985
<4985=4988,4986
<4986=4987
<4988=4989
<4990=4991
<4991=4993,4992
<4994=4995
<4995=5003,4996
<4996=5001,4997
<4997=4998
<4998=5000,4999
<5001=5002
<5003=5004
<5004=5006,5005
<5007=5008
<5008=5016,5009
<5009=5014,5010
<5010=5011
<5011=5013,5012
<5014=5015
<5016=5017
<5017=5019,5018
<5020=5021
<5021=5027,5022
<5022=5025,5023
<5023=5024
<5025=5026
<5027=5028
<5028=5030,5029
<5031=5032
<5032=5038,5033
<5033=5034
<5034=5035
<5035=5037,5036
<5038=5039
<5039=5041,5040
<5042=5043
<5043=5049,5044
<5044=5047,5045
<5045=5046
<5047=5048
<5049=5050
<5050=5052,5051
<5053=5054
<5054=5060,5055
<5055=5058,5056
<5056=5057
<5058=5059
<5060=5061
<5061=5063,5062
<5064=5065
<5065=5071,5066
<5066=5069,5067
<5067=5068
<5069=5070
<5071=5072
<5072=5074,5073
<5075=5076
<5076=5082,5077
<5077=5080,5078
<5078=5079
<5080=5081
<5082=5083
<5083=5085,5084
<5086=5087
<5087=5095,5088
<5088=5093,5089
<5089=5090
<5090=5092,5091
<5093=5094
<5095=5096
<5096=5098,5097
<5099=5100
<5100=5108,5101
<5101=5106,5102
<5102=5103
<5103=5105,5104
<5106=5107
<5108=5109
<5109=5111,5110
<5112=5113
<5113=5119,5114
<5114=5117,5115
<5115=5116
<5117=5118
<5119=5120
<5120=5122,5121
<5123=5124
<5124=5130,5125
<5125=5126
<5126=5127
<5127=5129,5128
<5130=5131
<5131=5133,5132
<5134=5186,5182,5179,5135
<5135=5164,5136
<5136=5160,5149,5137
<5137=5138
<5138=5139
<5139=5145,5140
<5140=5143,5141
<5141=5142
<5143=5144
<5145=5146
<5146=5148,5147
<5149=5150
<5150=5156,5151
<5151=5154,5152
<5152=5153
<5154=5155
<5156=5157
<5157=5159,5158
<5160=5161
<5161=5163,5162
<5164=5165
<5165=5175,5166
<5166=5169,5167
<5167=5168
<5169=5170
<5170=5174,5171
<5171=5173,5172
<5175=5176
<5176=5178,5177
<5179=5181,5180
<5182=5183
<5183=5185,5184
<5186=5187
<5187=5189,5188
<5190=5191
<5191=5197,5192
<5192=5195,5193
<5193=5194
<5195=5196
<5197=5198
<5198=5200,5199
<5201=5202
<5202=5208,5203
<5203=5206,5204
<5204=5205
<5206=5207
<5208=5209
<5209=5211,5210
<5212=5213
<5213=5219,5214
<5214=5215
<5215=5216
<5216=5218,5217
<5219=5220
<5220=5222,5221
<5223=5275,5271,5268,5224
<5224=5253,5225
<5225=5249,5238,5226
<5226=5227
<5227=5228
<5228=5234,5229
<5229=5232,5230
<5230=5231
<5232=5233
<5234=5235
<5235=5237,5236
<5238=5239
<5239=5245,5240
<5240=5243,5241
<5241=5242
<5243=5244
<5245=5246
<5246=5248,5247
<5249=5250
<5250=5252,5251
<5253=5254
<5254=5264,5255
<5255=5258,5256
<5256=5257
<5258=5259
<5259=5261,5260
<5261=5263,5262
<5264=5265
<5265=5267,5266
<5268=5270,5269
<5271=5272
<5272=5274,5273
<5275=5276
<5276=5278,5277
<5279=5280
<5280=5286,5281
<5281=5284,5282
<5282=5283
<5284=5285
<5286=5287
<5287=5289,5288
<5290=5291
<5291=5297,5292
<5292=5295,5293
<5293=5294
<5295=5296
<5297=5298
<5298=5300,5299
<5301=5302
<5302=5308,5303
<5303=5304
<5304=5305
<5305=5307,5306
<5308=5309
<5309=5311,5310
<5312=5313
<5313=5321,5314
<5314=5317,5315
<5315=5316
<5317=5318
<5318=5320,5319
<5321=5322
<5322=5324,5323
<5325=5326
<5326=5332,5327
<5327=5330,5328
<5328=5329
<5330=5331
<5332=5333
<5333=5335,5334
<5336=5337
<5337=5345,5338
<5338=5341,5339
<5339=5340
<5341=5342
<5342=5344,5343
<5345=5346
<5346=5348,5347
<5349=5350
<5350=5356,5351
<5351=5354,5352
<5352=5353
<5354=5355
<5356=5357
<5357=5359,5358
<5360=5361
<5361=5369,5362
<5362=5367,5363
<5363=5364
<5364=5366,5365
<5367=5368
<5369=5370
<5370=5372,5371
<5373=5374
<5374=5384,5375
<5375=5380,5376
<5376=5377
<5377=5379,5378
<5380=5381
<5381=5383,5382
<5384=5385
<5385=5387,5386
<5388=5389
<5389=5397,5390
<5390=5393,5391
<5391=5392
<5393=5394
<5394=5396,5395
<5397=5398
<5398=5400,5399
<5401=5402
<5402=5408,5403
<5403=5406,5404
<5404=5405
<5406=5407
<5408=5409
<5409=5411,5410
<5412=5413
<5413=5419,5414
<5414=5417,5415
<5415=5416
<5417=5418
<5419=5420
<5420=5422,5421
<5423=5424
<5424=5430,5425
<5425=5426
<5426=5427
<5427=5429,5428
<5430=5431
<5431=5433,5432
<5434=5435
<5435=5441,5436
<5436=5439,5437
<5437=5438
<5439=5440
<5441=5442
<5442=5444,5443
<5445=5446
<5446=5456,5447
<5447=5452,5448
<5448=5449
<5449=5451,5450
<5452=5453
<5453=5455,5454
<5456=5457
<5457=5459,5458
<5460=5461
<5461=5467,5462
<5462=5465,5463
<5463=5464
<5465=5466
<5467=5468
<5468=5470,5469
<5471=5472
<5472=5478,5473
<5473=5474
<5474=5475
<5475=5477,5476
<5478=5479
<5479=5481,5480
<5482=5483
<5483=5493,5484
<5484=5489,5485
<5485=5486
<5486=5488,5487
<5489=5490
<5490=5492,5491
<5493=5494
<5494=5496,5495
<5497=5498
<5498=5506,5499
<5499=5504,5500
<5500=5501
<5501=5503,5502
<5504=5505
<5506=5507
<5507=5509,5508
<5510=5511
<5511=5519,5512
<5512=5515,5513
<5513=5514
<5515=5516
<5516=5518,5517
<5519=5520
<5520=5522,5521
<5523=5524
<5524=5530,5525
<5525=5528,5526
<5526=5527
<5528=5529
<5530=5531
<5531=5533,5532
<5534=5535
<5535=5541,5536
<5536=5539,5537
<5537=5538
<5539=5540
<5541=5542
<5542=5544,5543
<5545=5546
<5546=5552,5547
<5547=5548
<5548=5549
<5549=5551,5550
<5552=5553
<5553=5555,5554
<5556=5557
<5557=5569,5558
<5558=5567,5565,5559
<5559=5560
<5560=5563,5562,5561
<5563=5564
<5565=5566
<5567=5568
<5569=5570
<5570=5572,5571
<5573=5574
<5574=5586,5575
<5575=5584,5582,5576
<5576=5577
<5577=5580,5579,5578
<5580=5581
<5582=5583
<5584=5585
<5586=5587
<5587=5589,5588
<5590=5591
<5591=5603,5592
<5592=5601,5599,5593
<5593=5594
<5594=5597,5596,5595
<5597=5598
<5599=5600
<5601=5602
<5603=5604
<5604=5606,5605
<5607=5608
<5608=5620,5609
<5609=5618,5616,5610
<5610=5611
<5611=5614,5613,5612
<5614=5615
<5616=5617
<5618=5619
<5620=5621
<5621=5623,5622
<5624=5625
<5625=5637,5626
<5626=5635,5633,5627
<5627=5628
<5628=5631,5630,5629
<5631=5632
<5633=5634
<5635=5636
<5637=5638
<5638=5640,5639
<5641=5654,5651,5648,5645,5642
<5642=5644,5643
<5645=5647,5646
<5648=5650,5649
<5651=5653,5652
<5654=5656,5655
<5657=5658
<5658=5663,5662,5659
<5659=5661,5660
<5664=5665
<5665=5677,5676,5666
<5666=5675,5667
<5667=5669,5668
<5669=5671,5670
<5671=5673,5672
<5673=5674
<5678=5679
<5679=5684,5683,5680
<5680=5682,5681
<5685=5686
<5686=5702,5687
<5687=5698,5694,5692,5690,5688
<5688=5689
<5690=5691
<5692=5693
<5694=5695
<5695=5697,5696
<5698=5699
<5699=5701,5700
<5702=5703
<5704=5705
<5705=5707,5706
<5708=5709
<5709=5711,5710
<5748=5760,5759,5749
<5749=5756,5753,5750
<5750=5752,5751
<5753=5755,5754
<5756=5758,5757
<5760=7301,7297,7278,7271,7257,7250,7222,7205,7188,7171,7154,7137,7120,7103,7086,7069,7058,7047,7034,7021,7010,6999,6988,6977,6964,6951,6936,6923,6910,6899,6888,6877,6866,6855,6842,6831,6820,6807,6794,6779,6766,6753,6742,6729,6716,6701,6690,6679,6668,6657,6644,6631,6620,6607,6596,6583,6572,6559,6544,6533,6522,6511,6500,6491,6462,6451,6438,6423,6410,6399,6386,6375,6360,6347,5761,5768,5775,5782,5789,5796,5803,5810,5817,5824,5831,5870,5885,5898,5909,5920,5931,5942,5953,5964,5975,5986,5999,6014,6027,6038,6051,6062,6073,6086,6099,6112,6125,6140,6153,6164,6175,6186,6199,6210,6223,6234,6245,6258,6269,6280,6293,6306,6321,6334
<5761=5762
<5762=5764,5763
<5764=5765
<5765=5767,5766
<5768=5769
<5769=5771,5770
<5771=5772
<5772=5774,5773
<5775=5776
<5776=5778,5777
<5778=5779
<5779=5781,5780
<5782=5783
<5783=5785,5784
<5785=5786
<5786=5788,5787
<5789=5790
<5790=5792,5791
<5792=5793
<5793=5795,5794
<5796=5797
<5797=5799,5798
<5799=5800
<5800=5802,5801
<5803=5804
<5804=5806,5805
<5806=5807
<5807=5809,5808
<5810=5811
<5811=5813,5812
<5813=5814
<5814=5816,5815
<5817=5818
<5818=5820,5819
<5820=5821
<5821=5823,5822
<5824=5825
<5825=5827,5826
<5827=5828
<5828=5830,5829
<5831=5832
<5832=5866,5833
<5833=5862,5858,5851,5844,5840,5838,5836,5834
<5834=5835
<5836=5837
<5838=5839
<5840=5841
<5841=5843,5842
<5844=5845
<5845=5847,5846
<5847=5848
<5848=5850,5849
<5851=5852
<5852=5854,5853
<5854=5855
<5855=5857,5856
<5858=5859
<5859=5861,5860
<5862=5863
<5863=5865,5864
<5866=5867
<5867=5869,5868
<5870=5871
<5871=5881,5872
<5872=5877,5873
<5873=5874
<5874=5876,5875
<5877=5878
<5878=5880,5879
<5881=5882
<5882=5884,5883
<5885=5886
<5886=5894,5887
<5887=5892,5888
<5888=5889
<5889=5891,5890
<5892=5893
<5894=5895
<5895=5897,5896
<5898=5899
<5899=5905,5900
<5900=5903,5901
<5901=5902
<5903=5904
<5905=5906
<5906=5908,5907
<5909=5910
<5910=5916,5911
<5911=5914,5912
<5912=5913
<5914=5915
<5916=5917
<5917=5919,5918
<5920=5921
<5921=5927,5922
<5922=5923
<5923=5924
<5924=5926,5925
<5927=5928
<5928=5930,5929
<5931=5932
<5932=5938,5933
<5933=5936,5934
<5934=5935
<5936=5937
<5938=5939
<5939=5941,5940
<5942=5943
<5943=5949,5944
<5944=5947,5945
<5945=5946
<5947=5948
<5949=5950
<5950=5952,5951
<5953=5954
<5954=5960,5955
<5955=5956
<5956=5957
<5957=5959,5958
<5960=5961
<5961=5963,5962
<5964=5965
<5965=5971,5966
<5966=5969,5967
<5967=5968
<5969=5970
<5971=5972
<5972=5974,5973
<5975=5976
<5976=5982,5977
<5977=5980,5978
<5978=5979
<5980=5981
<5982=5983
<5983=5985,5984
<5986=5987
<5987=5995,5988
<5988=5991,5989
<5989=5990
<5991=5992
<5992=5994,5993
<5995=5996
<5996=5998,5997
<5999=6000
<6000=6010,6001
<6001=6006,6002
<6002=6003
<6003=6005,6004
<6006=6007
<6007=6009,6008
<6010=6011
<6011=6013,6012
<6014=6015
<6015=6023,6016
<6016=6021,6017
<6017=6018
<6018=6020,6019
<6021=6022
<6023=6024
<6024=6026,6025
<6027=6028
<6028=6034,6029
<6029=6032,6030
<6030=6031
<6032=6033
<6034=6035
<6035=6037,6036
<6038=6039
<6039=6047,6040
<6040=6043,6041
<6041=6042
<6043=6044
<6044=6046,6045
<6047=6048
<6048=6050,6049
<6051=6052
<6052=6058,6053
<6053=6056,6054
<6054=6055
<6056=6057
<6058=6059
<6059=6061,6060
<6062=6063
<6063=6069,6064
<6064=6065
<6065=6066
<6066=6068,6067
<6069=6070
<6070=6072,6071
<6073=6074
<6074=6082,6075
<6075=6078,6076
<6076=6077
<6078=6079
<6079=6081,6080
<6082=6083
<6083=6085,6084
<6086=6087
<6087=6095,6088
<6088=6091,6089
<6089=6090
<6091=6092
<6092=6094,6093
<6095=6096
<6096=6098,6097
<6099=6100
<6100=6108,6101
<6101=6106,6102
<6102=6103
<6103=6105,6104
<6106=6107
<6108=6109
<6109=6111,6110
<6112=6113
<6113=6121,6114
<6114=6117,6115
<6115=6116
<6117=6118
<6118=6120,6119
<6121=6122
<6122=6124,6123
<6125=6126
<6126=6136,6127
<6127=6132,6128
<6128=6129
<6129=6131,6130
<6132=6133
<6133=6135,6134
<6136=6137
<6137=6139,6138
<6140=6141
<6141=6149,6142
<6142=6145,6143
<6143=6144
<6145=6146
<6146=6148,6147
<6149=6150
<6150=6152,6151
<6153=6154
<6154=6160,6155
<6155=6158,6156
<6156=6157
<6158=6159
<6160=6161
<6161=6163,6162
<6164=6165
<6165=6171,6166
<6166=6169,6167
<6167=6168
<6169=6170
<6171=6172
<6172=6174,6173
<6175=6176
<6176=6182,6177
<6177=6178
<6178=6179
<6179=6181,6180
<6182=6183
<6183=6185,6184
<6186=6187
<6187=6195,6188
<6188=6191,6189
<6189=6190
<6191=6192
<6192=6194,6193
<6195=6196
<6196=6198,6197
<6199=6200
<6200=6206,6201
<6201=6204,6202
<6202=6203
<6204=6205
<6206=6207
<6207=6209,6208
<6210=6211
<6211=6219,6212
<6212=6217,6213
<6213=6214
<6214=6216,6215
<6217=6218
<6219=6220
<6220=6222,6221
<6223=6224
<6224=6230,6225
<6225=6228,6226
<6226=6227
<6228=6229
<6230=6231
<6231=6233,6232
<6234=6235
<6235=6241,6236
<6236=6239,6237
<6237=6238
<6239=6240
<6241=6242
<6242=6244,6243
<6245=6246
<6246=6254,6247
<6247=6252,6248
<6248=6249
<6249=6251,6250
<6252=6253
<6254=6255
<6255=6257,6256
<6258=6259
<6259=6265,6260
<6260=6263,6261
<6261=6262
<6263=6264
<6265=6266
<6266=6268,6267
<6269=6270
<6270=6276,6271
<6271=6272
<6272=6273
<6273=6275,6274
<6276=6277
<6277=6279,6278
<6280=6281
<6281=6289,6282
<6282=6287,6283
<6283=6284
<6284=6286,6285
<6287=6288
<6289=6290
<6290=6292,6291
<6293=6294
<6294=6302,6295
<6295=6300,6296
<6296=6297
<6297=6299,6298
<6300=6301
<6302=6303
<6303=6305,6304
<6306=6307
<6307=6317,6308
<6308=6313,6309
<6309=6310
<6310=6312,6311
<6313=6314
<6314=6316,6315
<6317=6318
<6318=6320,6319
<6321=6322
<6322=6330,6323
<6323=6326,6324
<6324=6325
<6326=6327
<6327=6329,6328
<6330=6331
<6331=6333,6332
<6334=6335
<6335=6343,6336
<6336=6341,6337
<6337=6338
<6338=6340,6339
<6341=6342
<6343=6344
<6344=6346,6345
<6347=6348
<6348=6356,6349
<6349=6354,6350
<6350=6351
<6351=6353,6352
<6354=6355
<6356=6357
<6357=6359,6358
<6360=6361
<6361=6371,6362
<6362=6367,6363
<6363=6364
<6364=6366,6365
<6367=6368
<6368=6370,6369
<6371=6372
<6372=6374,6373
<6375=6376
<6376=6382,6377
<6377=6380,6378
<6378=6379
<6380=6381
<6382=6383
<6383=6385,6384
<6386=6387
<6387=6395,6388
<6388=6391,6389
<6389=6390
<6391=6392
<6392=6394,6393
<6395=6396
<6396=6398,6397
<6399=6400
<6400=6406,6401
<6401=6404,6402
<6402=6403
<6404=6405
<6406=6407
<6407=6409,6408
<6410=6411
<6411=6419,6412
<6412=6415,6413
<6413=6414
<6415=6416
<6416=6418,6417
<6419=6420
<6420=6422,6421
<6423=6424
<6424=6434,6425
<6425=6430,6426
<6426=6427
<6427=6429,6428
<6430=6431
<6431=6433,6432
<6434=6435
<6435=6437,6436
<6438=6439
<6439=6447,6440
<6440=6445,6441
<6441=6442
<6442=6444,6443
<6445=6446
<6447=6448
<6448=6450,6449
<6451=6452
<6452=6458,6453
<6453=6456,6454
<6454=6455
<6456=6457
<6458=6459
<6459=6461,6460
<6462=6487,6483,6474,6463
<6463=6464
<6464=6470,6465
<6465=6468,6466
<6466=6467
<6468=6469
<6470=6471
<6471=6473,6472
<6474=6480,6475
<6475=6479,6476
<6476=6478,6477
<6480=6482,6481
<6483=6484
<6484=6486,6485
<6487=6488
<6488=6490,6489
<6491=6492
<6492=6499,6498,6493
<6493=6497,6494
<6494=6496,6495
<6500=6501
<6501=6507,6502
<6502=6505,6503
<6503=6504
<6505=6506
<6507=6508
<6508=6510,6509
<6511=6512
<6512=6518,6513
<6513=6514
<6514=6515
<6515=6517,6516
<6518=6519
<6519=6521,6520
<6522=6523
<6523=6529,6524
<6524=6527,6525
<6525=6526
<6527=6528
<6529=6530
<6530=6532,6531
<6533=6534
<6534=6540,6535
<6535=6538,6536
<6536=6537
<6538=6539
<6540=6541
<6541=6543,6542
<6544=6545
<6545=6555,6546
<6546=6551,6547
<6547=6548
<6548=6550,6549
<6551=6552
<6552=6554,6553
<6555=6556
<6556=6558,6557
<6559=6560
<6560=6568,6561
<6561=6566,6562
<6562=6563
<6563=6565,6564
<6566=6567
<6568=6569
<6569=6571,6570
<6572=6573
<6573=6579,6574
<6574=6577,6575
<6575=6576
<6577=6578
<6579=6580
<6580=6582,6581
<6583=6584
<6584=6592,6585
<6585=6588,6586
<6586=6587
<6588=6589
<6589=6591,6590
<6592=6593
<6593=6595,6594
<6596=6597
<6597=6603,6598
<6598=6601,6599
<6599=6600
<6601=6602
<6603=6604
<6604=6606,6605
<6607=6608
<6608=6616,6609
<6609=6614,6610
<6610=6611
<6611=6613,6612
<6614=6615
<6616=6617
<6617=6619,6618
<6620=6621
<6621=6627,6622
<6622=6625,6623
<6623=6624
<6625=6626
<6627=6628
<6628=6630,6629
<6631=6632
<6632=6640,6633
<6633=6638,6634
<6634=6635
<6635=6637,6636
<6638=6639
<6640=6641
<6641=6643,6642
<6644=6645
<6645=6653,6646
<6646=6651,6647
<6647=6648
<6648=6650,6649
<6651=6652
<6653=6654
<6654=6656,6655
<6657=6658
<6658=6664,6659
<6659=6662,6660
<6660=6661
<6662=6663
<6664=6665
<6665=6667,6666
<6668=6669
<6669=6675,6670
<6670=6673,6671
<6671=6672
<6673=6674
<6675=6676
<6676=6678,6677
<6679=6680
<6680=6686,6681
<6681=6684,6682
<6682=6683
<6684=6685
<6686=6687
<6687=6689,6688
<6690=6691
<6691=6697,6692
<6692=6693
<6693=6694
<6694=6696,6695
<6697=6698
<6698=6700,6699
<6701=6702
<6702=6712,6703
<6703=6708,6704
<6704=6705
<6705=6707,6706
<6708=6709
<6709=6711,6710
<6712=6713
<6713=6715,6714
<6716=6717
<6717=6725,6718
<6718=6723,6719
<6719=6720
<6720=6722,6721
<6723=6724
<6725=6726
<6726=6728,6727
<6729=6730
<6730=6738,6731
<6731=6736,6732
<6732=6733
<6733=6735,6734
<6736=6737
<6738=6739
<6739=6741,6740
<6742=6743
<6743=6749,6744
<6744=6747,6745
<6745=6746
<6747=6748
<6749=6750
<6750=6752,6751
<6753=6754
<6754=6762,6755
<6755=6760,6756
<6756=6757
<6757=6759,6758
<6760=6761
<6762=6763
<6763=6765,6764
<6766=6767
<6767=6775,6768
<6768=6771,6769
<6769=6770
<6771=6772
<6772=6774,6773
<6775=6776
<6776=6778,6777
<6779=6780
<6780=6790,6781
<6781=6786,6782
<6782=6783
<6783=6785,6784
<6786=6787
<6787=6789,6788
<6790=6791
<6791=6793,6792
<6794=6795
<6795=6803,6796
<6796=6799,6797
<6797=6798
<6799=6800
<6800=6802,6801
<6803=6804
<6804=6806,6805
<6807=6808
<6808=6816,6809
<6809=6812,6810
<6810=6811
<6812=6813
<6813=6815,6814
<6816=6817
<6817=6819,6818
<6820=6821
<6821=6827,6822
<6822=6825,6823
<6823=6824
<6825=6826
<6827=6828
<6828=6830,6829
<6831=6832
<6832=6838,6833
<6833=6836,6834
<6834=6835
<6836=6837
<6838=6839
<6839=6841,6840
<6842=6843
<6843=6851,6844
<6844=6847,6845
<6845=6846
<6847=6848
<6848=6850,6849
<6851=6852
<6852=6854,6853
<6855=6856
<6856=6862,6857
<6857=6860,6858
<6858=6859
<6860=6861
<6862=6863
<6863=6865,6864
<6866=6867
<6867=6873,6868
<6868=6871,6869
<6869=6870
<6871=6872
<6873=6874
<6874=6876,6875
<6877=6878
<6878=6884,6879
<6879=6880
<6880=6881
<6881=6883,6882
<6884=6885
<6885=6887,6886
<6888=6889
<6889=6895,6890
<6890=6893,6891
<6891=6892
<6893=6894
<6895=6896
<6896=6898,6897
<6899=6900
<6900=6906,6901
<6901=6904,6902
<6902=6903
<6904=6905
<6906=6907
<6907=6909,6908
<6910=6911
<6911=6919,6912
<6912=6917,6913
<6913=6914
<6914=6916,6915
<6917=6918
<6919=6920
<6920=6922,6921
<6923=6924
<6924=6932,6925
<6925=6930,6926
<6926=6927
<6927=6929,6928
<6930=6931
<6932=6933
<6933=6935,6934
<6936=6937
<6937=6947,6938
<6938=6943,6939
<6939=6940
<6940=6942,6941
<6943=6944
<6944=6946,6945
<6947=6948
<6948=6950,6949
<6951=6952
<6952=6960,6953
<6953=6956,6954
<6954=6955
<6956=6957
<6957=6959,6958
<6960=6961
<6961=6963,6962
<6964=6965
<6965=6973,6966
<6966=6969,6967
<6967=6968
<6969=6970
<6970=6972,6971
<6973=6974
<6974=6976,6975
<6977=6978
<6978=6984,6979
<6979=6982,6980
<6980=6981
<6982=6983
<6984=6985
<6985=6987,6986
<6988=6989
<6989=6995,6990
<6990=6993,6991
<6991=6992
<6993=6994
<6995=6996
<6996=6998,6997
<6999=7000
<7000=7006,7001
<7001=7004,7002
<7002=7003
<7004=7005
<7006=7007
<7007=7009,7008
<7010=7011
<7011=7017,7012
<7012=7015,7013
<7013=7014
<7015=7016
<7017=7018
<7018=7020,7019
<7021=7022
<7022=7030,7023
<7023=7028,7024
<7024=7025
<7025=7027,7026
<7028=7029
<7030=7031
<7031=7033,7032
<7034=7035
<7035=7043,7036
<7036=7041,7037
<7037=7038
<7038=7040,7039
<7041=7042
<7043=7044
<7044=7046,7045
<7047=7048
<7048=7054,7049
<7049=7052,7050
<7050=7051
<7052=7053
<7054=7055
<7055=7057,7056
<7058=7059
<7059=7065,7060
<7060=7061
<7061=7062
<7062=7064,7063
<7065=7066
<7066=7068,7067
<7069=7070
<7070=7082,7071
<7071=7080,7078,7072
<7072=7073
<7073=7076,7075,7074
<7076=7077
<7078=7079
<7080=7081
<7082=7083
<7083=7085,7084
<7086=7087
<7087=7099,7088
<7088=7097,7095,7089
<7089=7090
<7090=7093,7092,7091
<7093=7094
<7095=7096
<7097=7098
<7099=7100
<7100=7102,7101
<7103=7104
<7104=7116,7105
<7105=7114,7112,7106
<7106=7107
<7107=7110,7109,7108
<7110=7111
<7112=7113
<7114=7115
<7116=7117
<7117=7119,7118
<7120=7121
<7121=7133,7122
<7122=7131,7129,7123
<7123=7124
<7124=7127,7126,7125
<7127=7128
<7129=7130
<7131=7132
<7133=7134
<7134=7136,7135
<7137=7138
<7138=7150,7139
<7139=7148,7146,7140
<7140=7141
<7141=7144,7143,7142
<7144=7145
<7146=7147
<7148=7149
<7150=7151
<7151=7153,7152
<7154=7155
<7155=7167,7156
<7156=7165,7163,7157
<7157=7158
<7158=7161,7160,7159
<7161=7162
<7163=7164
<7165=7166
<7167=7168
<7168=7170,7169
<7171=7172
<7172=7184,7173
<7173=7182,7180,7174
<7174=7175
<7175=7178,7177,7176
<7178=7179
<7180=7181
<7182=7183
<7184=7185
<7185=7187,7186
<7188=7189
<7189=7201,7190
<7190=7199,7197,7191
<7191=7192
<7192=7195,7194,7193
<7195=7196
<7197=7198
<7199=7200
<7201=7202
<7202=7204,7203
<7205=7206
<7206=7218,7207
<7207=7216,7214,7208
<7208=7209
<7209=7212,7211,7210
<7212=7213
<7214=7215
<7216=7217
<7218=7219
<7219=7221,7220
<7222=7247,7244,7241,7238,7235,7232,7229,7226,7223
<7223=7225,7224
<7226=7228,7227
<7229=7231,7230
<7232=7234,7233
<7235=7237,7236
<7238=7240,7239
<7241=7243,7242
<7244=7246,7245
<7247=7249,7248
<7250=7251
<7251=7256,7255,7252
<7252=7254,7253
<7257=7258
<7258=7270,7269,7259
<7259=7268,7260
<7260=7262,7261
<7262=7264,7263
<7264=7266,7265
<7266=7267
<7271=7272
<7272=7277,7276,7273
<7273=7275,7274
<7278=7279
<7279=7295,7280
<7280=7291,7287,7285,7283,7281
<7281=7282
<7283=7284
<7285=7286
<7287=7288
<7288=7290,7289
<7291=7292
<7292=7294,7293
<7295=7296
<7297=7298
<7298=7300,7299
<7301=7302
<7302=7304,7303
<7354=7363,7362,7355
<7355=7359,7356
<7356=7358,7357
<7359=7361,7360
<7363=7371,7364
<7364=7365
<7365=7369,7366
<7366=7367
<7367=7368
<7369=7370
<7371=7372
<7372=7378,7373
<7373=7376,7374
<7374=7375
<7376=7377
<7378=7379
<7386=7398,7397,7387
<7387=7394,7391,7388
<7388=7390,7389
<7391=7393,7392
<7394=7396,7395
<7398=7406,7399
<7399=7400
<7400=7404,7401
<7401=7402
<7402=7403
<7404=7405
<7406=7407
<7407=7415,7408
<7408=7413,7411,7409
<7409=7410
<7411=7412
<7413=7414
<7415=7416
<7424=7430,7429,7425
<7425=7426
<7426=7428,7427
<7430=7733,7732,7731,7730,7729,7728,7727,7726,7725,7721,7712,7708,7701,7694,7652,7643,7639,7602,7595,7584,7568,7525,7482,7478,7456,7455,7454,7453,7452,7451,7450,7449,7448,7447,7446,7445,7444,7431
<7431=7432
<7432=7440,7433
<7433=7436,7434
<7434=7435
<7436=7437
<7437=7439,7438
<7440=7441
<7441=7443,7442
<7456=7474,7466,7457
<7457=7458
<7458=7459
<7459=7463,7460
<7460=7462,7461
<7463=7465,7464
<7466=7467
<7467=7471,7468
<7468=7470,7469
<7471=7473,7472
<7474=7475
<7475=7477,7476
<7478=7479
<7479=7481,7480
<7482=7514,7492,7483
<7483=7484
<7484=7485
<7485=7489,7486
<7486=7488,7487
<7489=7491,7490
<7492=7493
<7493=7510,7494
<7494=7497,7495
<7495=7496
<7497=7498
<7498=7500,7499
<7500=7504,7501
<7501=7503,7502
<7504=7506,7505
<7506=7507
<7507=7509,7508
<7510=7511
<7511=7513,7512
<7514=7515
<7515=7519,7516
<7516=7518,7517
<7519=7521,7520
<7521=7522
<7522=7524,7523
<7525=7557,7535,7526
<7526=7527
<7527=7528
<7528=7532,7529
<7529=7531,7530
<7532=7534,7533
<7535=7536
<7536=7553,7537
<7537=7551,7538
<7538=7539
<7539=7541,7540
<7541=7545,7542
<7542=7544,7543
<7545=7547,7546
<7547=7548
<7548=7550,7549
<7551=7552
<7553=7554
<7554=7556,7555
<7557=7558
<7558=7562,7559
<7559=7561,7560
<7562=7564,7563
<7564=7565
<7565=7567,7566
<7568=7569
<7569=7583,7570
<7570=7581,7571
<7571=7574,7572
<7572=7573
<7574=7575
<7575=7577,7576
<7577=7578
<7578=7580,7579
<7581=7582
<7584=7585
<7585=7591,7586
<7586=7589,7587
<7587=7588
<7589=7590
<7591=7592
<7592=7594,7593
<7595=7596
<7596=7601,7600,7597
<7597=7599,7598
<7602=7630,7603
<7603=7604
<7604=7626,7616,7605
<7605=7606
<7606=7607
<7607=7613,7608
<7608=7610,7609
<7610=7612,7611
<7613=7615,7614
<7616=7617
<7617=7623,7618
<7618=7620,7619
<7620=7622,7621
<7623=7625,7624
<7626=7627
<7627=7629,7628
<7630=7631
<7631=7633,7632
<7633=7635,7634
<7635=7636
<7636=7638,7637
<7639=7640
<7640=7642,7641
<7643=7648,7644
<7644=7645
<7645=7647,7646
<7648=7649
<7649=7651,7650
<7652=7688,7653
<7653=7683,7671,7660,7654
<7654=7655
<7655=7659,7656
<7656=7658,7657
<7660=7661
<7661=7670,7662
<7662=7666,7663
<7663=7664
<7664=7665
<7666=7667
<7667=7669,7668
<7671=7672
<7672=7679,7673
<7673=7674
<7674=7675
<7675=7677,7676
<7677=7678
<7679=7680
<7680=7682,7681
<7683=7684
<7684=7687,7686,7685
<7688=7689
<7689=7691,7690
<7691=7693,7692
<7694=7695
<7695=7700,7699,7696
<7696=7698,7697
<7701=7702
<7702=7707,7706,7703
<7703=7705,7704
<7708=7709
<7709=7711,7710
<7712=7713
<7713=7719,7714
<7714=7715
<7715=7716
<7716=7718,7717
<7719=7720
<7721=7722
<7722=7724,7723
<7774=7777,7776,7775
<7777=7778
<7778=7779
<7779=7795,7780
<7780=7782,7781
<7782=7791,7783
<7783=7784
<7784=7785
<7785=7789,7786
<7786=7787
<7787=7788
<7789=7790
<7791=7792
<7792=7794,7793
<7804=7810,7809,7805
<7805=7806
<7806=7808,7807
<7810=7811
<7811=7812
<7812=7814,7813
<7820=7823,7822,7821
<7823=7824
<7824=7825
<7830=7839,7838,7831
<7831=7835,7832
<7832=7834,7833
<7835=7837,7836
<7839=7855,7851,7847,7840
<7840=7841
<7841=7845,7842
<7842=7843
<7843=7844
<7845=7846
<7847=7848
<7848=7850,7849
<7851=7852
<7852=7854,7853
<7855=7856
<7856=7861,7860,7857
<7857=7859,7858
<7870=7888,7887,7871
<7871=7884,7881,7878,7875,7872
<7872=7874,7873
<7875=7877,7876
<7878=7880,7879
<7881=7883,7882
<7884=7886,7885
<7888=7953,7930,7921,7889
<7889=7890
<7890=7917,7891
<7891=7894,7892
<7892=7893
<7894=7895
<7895=7915,7896
<7896=7913,7911,7904,7897
<7897=7898
<7898=7900,7899
<7900=7901
<7901=7903,7902
<7904=7905
<7905=7907,7906
<7907=7908
<7908=7910,7909
<7911=7912
<7913=7914
<7915=7916
<7917=7918
<7918=7920,7919
<7921=7922
<7922=7926,7923
<7923=7924
<7924=7925
<7926=7927
<7927=7929,7928
<7930=7931
<7931=7949,7932
<7932=7947,7940,7933
<7933=7934
<7934=7936,7935
<7936=7937
<7937=7939,7938
<7940=7941
<7941=7943,7942
<7943=7944
<7944=7946,7945
<7947=7948
<7949=7950
<7950=7952,7951
<7953=7954
<7954=7958,7955
<7955=7956
<7956=7957
<7958=7959
<7959=7961,7960
<7973=7994,7993,7974
<7974=7990,7987,7984,7981,7978,7975
<7975=7977,7976
<7978=7980,7979
<7981=7983,7982
<7984=7986,7985
<7987=7989,7988
<7990=7992,7991
<7994=8214,8199,8183,8168,8153,8138,8123,8122,8121,8120,8110,8099,8052,8034,8023,7997,7995
<7995=7996
<7997=8019,7998
<7998=8013,7999
<7999=8000
<8000=8009,8001
<8001=8002
<8002=8003
<8003=8007,8004
<8004=8005
<8005=8006
<8007=8008
<8009=8010
<8010=8012,8011
<8013=8014
<8014=8016,8015
<8016=8018,8017
<8019=8020
<8020=8022,8021
<8023=8030,8024
<8024=8025
<8025=8027,8026
<8027=8029,8028
<8030=8031
<8031=8033,8032
<8034=8048,8035
<8035=8036
<8036=8045,8037
<8037=8039,8038
<8039=8043,8040
<8040=8041
<8041=8042
<8043=8044
<8045=8047,8046
<8048=8049
<8049=8051,8050
<8052=8095,8053
<8053=8082,8068,8054
<8054=8055
<8055=8064,8056
<8056=8057
<8057=8058
<8058=8062,8059
<8059=8060
<8060=8061
<8062=8063
<8064=8065
<8065=8067,8066
<8068=8069
<8069=8078,8070
<8070=8071
<8071=8072
<8072=8076,8073
<8073=8074
<8074=8075
<8076=8077
<8078=8079
<8079=8081,8080
<8082=8083
<8083=8092,8084
<8084=8086,8085
<8086=8090,8087
<8087=8088
<8088=8089
<8090=8091
<8092=8094,8093
<8095=8096
<8096=8098,8097
<8099=8106,8100
<8100=8101
<8101=8103,8102
<8103=8105,8104
<8106=8107
<8107=8109,8108
<8110=8111
<8111=8119,8112
<8112=8118,8113
<8113=8117,8114
<8114=8116,8115
<8123=8124
<8124=8137,8136,8133,8125
<8125=8132,8126
<8126=8130,8127
<8127=8128
<8128=8129
<8130=8131
<8133=8135,8134
<8138=8139
<8139=8152,8151,8148,8140
<8140=8147,8141
<8141=8145,8142
<8142=8143
<8143=8144
<8145=8146
<8148=8150,8149
<8153=8154
<8154=8167,8166,8163,8155
<8155=8162,8156
<8156=8160,8157
<8157=8158
<8158=8159
<8160=8161
<8163=8165,8164
<8168=8169
<8169=8182,8181,8178,8170
<8170=8177,8171
<8171=8175,8172
<8172=8173
<8173=8174
<8175=8176
<8178=8180,8179
<8183=8186,8184
<8184=8185
<8186=8187
<8187=8189,8188
<8189=8197,8190
<8190=8195,8193,8191
<8191=8192
<8193=8194
<8195=8196
<8197=8198
<8199=8200
<8200=8213,8212,8209,8201
<8201=8208,8202
<8202=8206,8203
<8203=8204
<8204=8205
<8206=8207
<8209=8211,8210
<8214=8215
<8215=8220,8219,8216
<8216=8218,8217
<8247=8250,8249,8248
<8250=8275,8253,8251
<8251=8252
<8253=8254
<8254=8273,8255
<8255=8268,8264,8262,8260,8258,8256
<8256=8257
<8258=8259
<8260=8261
<8262=8263
<8264=8265
<8265=8267,8266
<8268=8269
<8269=8271,8270
<8271=8272
<8273=8274
<8275=8276
<8276=8278,8277
<8286=8289,8288,8287
<8289=8318,8314,8292,8290
<8290=8291
<8292=8293
<8293=8312,8294
<8294=8307,8305,8301,8299,8297,8295
<8295=8296
<8297=8298
<8299=8300
<8301=8302
<8302=8304,8303
<8305=8306
<8307=8308
<8308=8310,8309
<8310=8311
<8312=8313
<8314=8315
<8315=8317,8316
<8318=8324,8319
<8319=8320
<8320=8322,8321
<8322=8323
<8324=8325
<8325=8327,8326
<8337=8343,8342,8338
<8338=8339
<8339=8341,8340
<8343=8376,8375,8374,8373,8372,8371,8370,8369,8368,8367,8366,8357,8356,8355,8354,8353,8352,8351,8350,8349,8344
<8344=8345
<8345=8347,8346
<8347=8348
<8357=8358
<8358=8362,8359
<8359=8360
<8360=8361
<8362=8363
<8363=8365,8364
<8376=8377
<8377=8381,8378
<8378=8379
<8379=8380
<8381=8382
<8388=8400,8399,8389
<8389=8396,8393,8390
<8390=8392,8391
<8393=8395,8394
<8396=8398,8397
<8400=8416,8401
<8401=8412,8402
<8402=8408,8403
<8403=8404
<8404=8406,8405
<8406=8407
<8408=8409
<8409=8411,8410
<8412=8413
<8413=8415,8414
<8416=8417
<8417=8425,8418
<8418=8423,8421,8419
<8419=8420
<8421=8422
<8423=8424
<8425=8426
<8436=8448,8447,8437
<8437=8444,8441,8438
<8438=8440,8439
<8441=8443,8442
<8444=8446,8445
<8448=8469,8449
<8449=8465,8450
<8450=8461,8456,8451
<8451=8452
<8452=8454,8453
<8454=8455
<8456=8457
<8457=8459,8458
<8459=8460
<8461=8462
<8462=8464,8463
<8465=8466
<8466=8468,8467
<8469=8470
<8470=8478,8471
<8471=8476,8474,8472
<8472=8473
<8474=8475
<8476=8477
<8478=8479
<8489=8492,8491,8490
<8492=8542,8532,8531,8530,8529,8528,8527,8526,8525,8524,8523,8522,8521,8520,8519,8518,8493
<8493=8494
<8494=8514,8495
<8495=8512,8500,8496
<8496=8497
<8497=8499,8498
<8500=8501
<8501=8510,8502
<8502=8505,8503
<8503=8504
<8505=8506
<8506=8508,8507
<8508=8509
<8510=8511
<8512=8513
<8514=8515
<8515=8517,8516
<8532=8533
<8533=8541,8540,8534
<8534=8539,8535
<8535=8537,8536
<8537=8538
<8542=8543
<8543=8545,8544
<8545=8546
<8556=8565,8564,8557
<8557=8561,8558
<8558=8560,8559
<8561=8563,8562
<8565=8566
<8566=8567
<8567=8573,8568
<8568=8571,8569
<8569=8570
<8571=8572
<8573=8574
<8574=8576,8575
<8583=8589,8588,8584
<8584=8585
<8585=8587,8586
<8589=8597,8590
<8590=8591
<8591=8595,8592
<8592=8593
<8593=8594
<8595=8596
<8597=8598
<8598=8602,8599
<8599=8600
<8600=8601
<8602=8603
<8603=8605,8604
