>3	FunctionDef	zero (int * * a , int m , int n)
>4	ParameterList	int * * a , int m , int n
>5	Parameter	 
>6	Identifier	n
>7	ParameterType	int
>8	Parameter	 
>9	Identifier	m
>10	ParameterType	int
>11	Parameter	 
>12	Identifier	a
>13	ParameterType	int * *
>14	ReturnType	void
>15	CompoundStatement	 
>16	ForStatement	for ( int i = 0 ; i < m ; ++ i )
>17	ForStatement	for ( int j = 0 ; j < n ; ++ j )
>18	IfStatement	if ( row [ i ] || col [ j ] )
>19	ExpressionStatement	 
>20	AssignmentExpr	a [ i ] [ j ] = 0
>21	PrimaryExpression	0
>22	ArrayIndexing	a [ i ] [ j ]
>23	Identifier	j
>24	ArrayIndexing	a [ i ]
>25	Identifier	i
>26	Identifier	a
>27	Condition	 
>28	OrExpression	row [ i ] || col [ j ]
>29	ArrayIndexing	col [ j ]
>30	Identifier	j
>31	Identifier	col
>32	ArrayIndexing	row [ i ]
>33	Identifier	i
>34	Identifier	row
>35	UnaryExpression	 
>36	Identifier	j
>37	IncDec	++
>38	Condition	 
>39	RelationalExpression	j < n
>40	Identifier	n
>41	Identifier	j
>42	ForInit	 
>43	IdentifierDeclStatement	int j = 0 ;
>44	IdentifierDecl	j = 0
>45	AssignmentExpr	j = 0
>46	PrimaryExpression	0
>47	Identifier	j
>48	Identifier	j
>49	IdentifierDeclType	int
>50	UnaryExpression	 
>51	Identifier	i
>52	IncDec	++
>53	Condition	 
>54	RelationalExpression	i < m
>55	Identifier	m
>56	Identifier	i
>57	ForInit	 
>58	IdentifierDeclStatement	int i = 0 ;
>59	IdentifierDecl	i = 0
>60	AssignmentExpr	i = 0
>61	PrimaryExpression	0
>62	Identifier	i
>63	Identifier	i
>64	IdentifierDeclType	int
>65	ForStatement	for ( int i = 0 ; i < m ; ++ i )
>66	ForStatement	for ( int j = 0 ; j < n ; ++ j )
>67	IfStatement	if ( a [ i ] [ j ] == 0 )
>68	CompoundStatement	 
>69	ExpressionStatement	 
>70	AssignmentExpr	col [ j ] = true
>71	Identifier	true
>72	ArrayIndexing	col [ j ]
>73	Identifier	j
>74	Identifier	col
>75	ExpressionStatement	 
>76	AssignmentExpr	row [ i ] = true
>77	Identifier	true
>78	ArrayIndexing	row [ i ]
>79	Identifier	i
>80	Identifier	row
>81	Condition	 
>82	EqualityExpression	a [ i ] [ j ] == 0
>83	PrimaryExpression	0
>84	ArrayIndexing	a [ i ] [ j ]
>85	Identifier	j
>86	ArrayIndexing	a [ i ]
>87	Identifier	i
>88	Identifier	a
>89	UnaryExpression	 
>90	Identifier	j
>91	IncDec	++
>92	Condition	 
>93	RelationalExpression	j < n
>94	Identifier	n
>95	Identifier	j
>96	ForInit	 
>97	IdentifierDeclStatement	int j = 0 ;
>98	IdentifierDecl	j = 0
>99	AssignmentExpr	j = 0
>100	PrimaryExpression	0
>101	Identifier	j
>102	Identifier	j
>103	IdentifierDeclType	int
>104	UnaryExpression	 
>105	Identifier	i
>106	IncDec	++
>107	Condition	 
>108	RelationalExpression	i < m
>109	Identifier	m
>110	Identifier	i
>111	ForInit	 
>112	IdentifierDeclStatement	int i = 0 ;
>113	IdentifierDecl	i = 0
>114	AssignmentExpr	i = 0
>115	PrimaryExpression	0
>116	Identifier	i
>117	Identifier	i
>118	IdentifierDeclType	int
>119	ExpressionStatement	 
>120	CallExpression	memset ( col , false , sizeof ( col ) )
>121	ArgumentList	col
>122	Argument	sizeof ( col )
>123	SizeofExpr	sizeof ( col )
>124	SizeofOperand	col
>125	Sizeof	sizeof
>126	Argument	false
>127	Identifier	false
>128	Argument	col
>129	Identifier	col
>130	Callee	memset
>131	Identifier	memset
>132	ExpressionStatement	 
>133	CallExpression	memset ( row , false , sizeof ( row ) )
>134	ArgumentList	row
>135	Argument	sizeof ( row )
>136	SizeofExpr	sizeof ( row )
>137	SizeofOperand	row
>138	Sizeof	sizeof
>139	Argument	false
>140	Identifier	false
>141	Argument	row
>142	Identifier	row
>143	Callee	memset
>144	Identifier	memset
>145	IdentifierDeclStatement	 
>146	IdentifierDecl	col [ n ]
>147	Identifier	n
>148	Identifier	col
>149	IdentifierDeclType	bool [ n ]
>150	IdentifierDecl	row [ m ]
>151	Identifier	m
>152	Identifier	row
>153	IdentifierDeclType	bool [ m ]
>173	FunctionDef	main ()
>174	ParameterList	 
>175	ReturnType	int
>176	CompoundStatement	 
>177	ReturnStatement	 
>178	PrimaryExpression	0
>179	ExpressionStatement	 
>180	CallExpression	fclose ( stdin )
>181	ArgumentList	stdin
>182	Argument	stdin
>183	Identifier	stdin
>184	Callee	fclose
>185	Identifier	fclose
>186	ForStatement	for ( int i = 0 ; i < m ; ++ i )
>187	CompoundStatement	 
>188	ExpressionStatement	 
>189	ShiftExpression	cout << endl
>190	Identifier	endl
>191	Identifier	cout
>192	ForStatement	for ( int j = 0 ; j < n ; ++ j )
>193	ExpressionStatement	 
>194	ShiftExpression	cout << a [ i ] [ j ] << \" \"
>195	ShiftExpression	a [ i ] [ j ] << \" \"
>196	PrimaryExpression	\" \"
>197	ArrayIndexing	a [ i ] [ j ]
>198	Identifier	j
>199	ArrayIndexing	a [ i ]
>200	Identifier	i
>201	Identifier	a
>202	Identifier	cout
>203	UnaryExpression	 
>204	Identifier	j
>205	IncDec	++
>206	Condition	 
>207	RelationalExpression	j < n
>208	Identifier	n
>209	Identifier	j
>210	ForInit	 
>211	IdentifierDeclStatement	int j = 0 ;
>212	IdentifierDecl	j = 0
>213	AssignmentExpr	j = 0
>214	PrimaryExpression	0
>215	Identifier	j
>216	Identifier	j
>217	IdentifierDeclType	int
>218	UnaryExpression	 
>219	Identifier	i
>220	IncDec	++
>221	Condition	 
>222	RelationalExpression	i < m
>223	Identifier	m
>224	Identifier	i
>225	ForInit	 
>226	IdentifierDeclStatement	int i = 0 ;
>227	IdentifierDecl	i = 0
>228	AssignmentExpr	i = 0
>229	PrimaryExpression	0
>230	Identifier	i
>231	Identifier	i
>232	IdentifierDeclType	int
>233	ExpressionStatement	 
>234	CallExpression	zero ( a , m , n )
>235	ArgumentList	a
>236	Argument	n
>237	Identifier	n
>238	Argument	m
>239	Identifier	m
>240	Argument	a
>241	Identifier	a
>242	Callee	zero
>243	Identifier	zero
>244	ExpressionStatement	 
>245	ShiftExpression	cout << endl
>246	Identifier	endl
>247	Identifier	cout
>248	ForStatement	for ( int i = 0 ; i < m ; ++ i )
>249	CompoundStatement	 
>250	ExpressionStatement	 
>251	ShiftExpression	cout << endl
>252	Identifier	endl
>253	Identifier	cout
>254	ForStatement	for ( int j = 0 ; j < n ; ++ j )
>255	ExpressionStatement	 
>256	ShiftExpression	cout << a [ i ] [ j ] << \" \"
>257	ShiftExpression	a [ i ] [ j ] << \" \"
>258	PrimaryExpression	\" \"
>259	ArrayIndexing	a [ i ] [ j ]
>260	Identifier	j
>261	ArrayIndexing	a [ i ]
>262	Identifier	i
>263	Identifier	a
>264	Identifier	cout
>265	UnaryExpression	 
>266	Identifier	j
>267	IncDec	++
>268	Condition	 
>269	RelationalExpression	j < n
>270	Identifier	n
>271	Identifier	j
>272	ForInit	 
>273	IdentifierDeclStatement	int j = 0 ;
>274	IdentifierDecl	j = 0
>275	AssignmentExpr	j = 0
>276	PrimaryExpression	0
>277	Identifier	j
>278	Identifier	j
>279	IdentifierDeclType	int
>280	UnaryExpression	 
>281	Identifier	i
>282	IncDec	++
>283	Condition	 
>284	RelationalExpression	i < m
>285	Identifier	m
>286	Identifier	i
>287	ForInit	 
>288	IdentifierDeclStatement	int i = 0 ;
>289	IdentifierDecl	i = 0
>290	AssignmentExpr	i = 0
>291	PrimaryExpression	0
>292	Identifier	i
>293	Identifier	i
>294	IdentifierDeclType	int
>295	ForStatement	for ( int i = 0 ; i < m ; ++ i )
>296	ForStatement	for ( int j = 0 ; j < n ; ++ j )
>297	ExpressionStatement	 
>298	ShiftExpression	cin >> a [ i ] [ j ]
>299	ArrayIndexing	a [ i ] [ j ]
>300	Identifier	j
>301	ArrayIndexing	a [ i ]
>302	Identifier	i
>303	Identifier	a
>304	Identifier	cin
>305	UnaryExpression	 
>306	Identifier	j
>307	IncDec	++
>308	Condition	 
>309	RelationalExpression	j < n
>310	Identifier	n
>311	Identifier	j
>312	ForInit	 
>313	IdentifierDeclStatement	int j = 0 ;
>314	IdentifierDecl	j = 0
>315	AssignmentExpr	j = 0
>316	PrimaryExpression	0
>317	Identifier	j
>318	Identifier	j
>319	IdentifierDeclType	int
>320	UnaryExpression	 
>321	Identifier	i
>322	IncDec	++
>323	Condition	 
>324	RelationalExpression	i < m
>325	Identifier	m
>326	Identifier	i
>327	ForInit	 
>328	IdentifierDeclStatement	int i = 0 ;
>329	IdentifierDecl	i = 0
>330	AssignmentExpr	i = 0
>331	PrimaryExpression	0
>332	Identifier	i
>333	Identifier	i
>334	IdentifierDeclType	int
>335	ForStatement	for ( int i = 0 ; i < m ; ++ i )
>336	ExpressionStatement	 
>337	AssignmentExpr	a [ i ] = new int [ n ]
>338	Identifier	n
>339	ArrayIndexing	a [ i ]
>340	Identifier	i
>341	Identifier	a
>342	UnaryExpression	 
>343	Identifier	i
>344	IncDec	++
>345	Condition	 
>346	RelationalExpression	i < m
>347	Identifier	m
>348	Identifier	i
>349	ForInit	 
>350	IdentifierDeclStatement	int i = 0 ;
>351	IdentifierDecl	i = 0
>352	AssignmentExpr	i = 0
>353	PrimaryExpression	0
>354	Identifier	i
>355	Identifier	i
>356	IdentifierDeclType	int
>357	ExpressionStatement	 
>358	Statement	 
>359	Statement	 
>360	Statement	 
>361	Statement	 
>362	Statement	 
>363	Statement	 
>364	Statement	 
>365	Statement	 
>366	IdentifierDeclStatement	 
>367	IdentifierDecl	* * a
>368	Identifier	a
>369	IdentifierDeclType	int * *
>370	ExpressionStatement	 
>371	ShiftExpression	cin >> m >> n
>372	ShiftExpression	m >> n
>373	Identifier	n
>374	Identifier	m
>375	Identifier	cin
>376	IdentifierDeclStatement	 
>377	IdentifierDecl	n
>378	Identifier	n
>379	IdentifierDeclType	int
>380	IdentifierDecl	m
>381	Identifier	m
>382	IdentifierDeclType	int
>383	ExpressionStatement	 
>384	CallExpression	freopen ( \"1.7.in\" , \"r\" , stdin )
>385	ArgumentList	\"1.7.in\"
>386	Argument	stdin
>387	Identifier	stdin
>388	Argument	\"r\"
>389	PrimaryExpression	\"r\"
>390	Argument	\"1.7.in\"
>391	PrimaryExpression	\"1.7.in\"
>392	Callee	freopen
>393	Identifier	freopen
<3=15,14,4
<4=11,8,5
<5=7,6
<8=10,9
<11=13,12
<15=145,132,119,65,16
<16=57,53,50,17
<17=42,38,35,18
<18=27,19
<19=20
<20=22,21
<22=24,23
<24=26,25
<27=28
<28=32,29
<29=31,30
<32=34,33
<35=37,36
<38=39
<39=41,40
<42=43
<43=44
<44=49,48,45
<45=47,46
<50=52,51
<53=54
<54=56,55
<57=58
<58=59
<59=64,63,60
<60=62,61
<65=111,107,104,66
<66=96,92,89,67
<67=81,68
<68=75,69
<69=70
<70=72,71
<72=74,73
<75=76
<76=78,77
<78=80,79
<81=82
<82=84,83
<84=86,85
<86=88,87
<89=91,90
<92=93
<93=95,94
<96=97
<97=98
<98=103,102,99
<99=101,100
<104=106,105
<107=108
<108=110,109
<111=112
<112=113
<113=118,117,114
<114=116,115
<119=120
<120=130,121
<121=128,126,122
<122=123
<123=125,124
<126=127
<128=129
<130=131
<132=133
<133=143,134
<134=141,139,135
<135=136
<136=138,137
<139=140
<141=142
<143=144
<145=150,146
<146=149,148,147
<150=153,152,151
<173=176,175,174
<176=383,376,370,366,365,364,363,362,361,360,359,358,357,335,295,248,244,233,186,179,177
<177=178
<179=180
<180=184,181
<181=182
<182=183
<184=185
<186=225,221,218,187
<187=192,188
<188=189
<189=191,190
<192=210,206,203,193
<193=194
<194=202,195
<195=197,196
<197=199,198
<199=201,200
<203=205,204
<206=207
<207=209,208
<210=211
<211=212
<212=217,216,213
<213=215,214
<218=220,219
<221=222
<222=224,223
<225=226
<226=227
<227=232,231,228
<228=230,229
<233=234
<234=242,235
<235=240,238,236
<236=237
<238=239
<240=241
<242=243
<244=245
<245=247,246
<248=287,283,280,249
<249=254,250
<250=251
<251=253,252
<254=272,268,265,255
<255=256
<256=264,257
<257=259,258
<259=261,260
<261=263,262
<265=267,266
<268=269
<269=271,270
<272=273
<273=274
<274=279,278,275
<275=277,276
<280=282,281
<283=284
<284=286,285
<287=288
<288=289
<289=294,293,290
<290=292,291
<295=327,323,320,296
<296=312,308,305,297
<297=298
<298=304,299
<299=301,300
<301=303,302
<305=307,306
<308=309
<309=311,310
<312=313
<313=314
<314=319,318,315
<315=317,316
<320=322,321
<323=324
<324=326,325
<327=328
<328=329
<329=334,333,330
<330=332,331
<335=349,345,342,336
<336=337
<337=339,338
<339=341,340
<342=344,343
<345=346
<346=348,347
<349=350
<350=351
<351=356,355,352
<352=354,353
<366=367
<367=369,368
<370=371
<371=375,372
<372=374,373
<376=380,377
<377=379,378
<380=382,381
<383=384
<384=392,385
<385=390,388,386
<386=387
<388=389
<390=391
<392=393
