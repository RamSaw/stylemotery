>3	FunctionDef	packGetLoc (const std 
>4	ParameterList	const std 
>5	Parameter	 
>6	Identifier	size
>7	ParameterType	int *
>8	Parameter	 
>9	Identifier	location
>10	ParameterType	long int *
>11	Parameter	 
>12	Identifier	file
>13	ParameterType	const std 
>14	Parameter	 
>15	Identifier	pack
>16	ParameterType	const std 
>17	ReturnType	define LOC_UNIT long int void
>18	CompoundStatement	 
>19	ReturnStatement	 
>20	ExpressionStatement	 
>21	CallExpression	_close ( fd )
>22	ArgumentList	fd
>23	Argument	fd
>24	Identifier	fd
>25	Callee	_close
>26	Identifier	_close
>27	ForStatement	for ( int i = 0 ; i < numFiles ; i ++ )
>28	CompoundStatement	 
>29	ExpressionStatement	 
>30	CallExpression	free ( name )
>31	ArgumentList	name
>32	Argument	name
>33	Identifier	name
>34	Callee	free
>35	Identifier	free
>36	IfStatement	if ( nocasecmp ( file , std 
>37	CompoundStatement	 
>38	ReturnStatement	 
>39	ExpressionStatement	 
>40	AssignmentExpr	* size = fileSize
>41	Identifier	fileSize
>42	UnaryOp	* size
>43	Identifier	size
>44	UnaryOperator	*
>45	ExpressionStatement	 
>46	AssignmentExpr	* location = loc + sizeof ( int ) + sizeof ( int ) + nameSize
>47	AdditiveExpression	loc + sizeof ( int ) + sizeof ( int ) + nameSize
>48	AdditiveExpression	sizeof ( int ) + sizeof ( int ) + nameSize
>49	AdditiveExpression	sizeof ( int ) + nameSize
>50	Identifier	nameSize
>51	SizeofExpr	sizeof ( int )
>52	SizeofOperand	int
>53	Sizeof	sizeof
>54	SizeofExpr	sizeof ( int )
>55	SizeofOperand	int
>56	Sizeof	sizeof
>57	Identifier	loc
>58	UnaryOp	* location
>59	Identifier	location
>60	UnaryOperator	*
>61	ExpressionStatement	 
>62	CallExpression	_close ( fd )
>63	ArgumentList	fd
>64	Argument	fd
>65	Identifier	fd
>66	Callee	_close
>67	Identifier	_close
>68	ExpressionStatement	 
>69	CallExpression	free ( name )
>70	ArgumentList	name
>71	Argument	name
>72	Identifier	name
>73	Callee	free
>74	Identifier	free
>75	ExpressionStatement	 
>76	CallExpression	_read ( fd , buffer , fileSize )
>77	ArgumentList	fd
>78	Argument	fileSize
>79	Identifier	fileSize
>80	Argument	buffer
>81	Identifier	buffer
>82	Argument	fd
>83	Identifier	fd
>84	Callee	_read
>85	Identifier	_read
>86	IdentifierDeclStatement	 
>87	IdentifierDecl	* buffer = ( char * ) malloc ( fileSize )
>88	AssignmentExpr	* buffer = ( char * ) malloc ( fileSize )
>89	CastExpression	( char * ) malloc ( fileSize )
>90	CallExpression	malloc ( fileSize )
>91	ArgumentList	fileSize
>92	Argument	fileSize
>93	Identifier	fileSize
>94	Callee	malloc
>95	Identifier	malloc
>96	CastTarget	char *
>97	Identifier	buffer
>98	Identifier	buffer
>99	IdentifierDeclType	char *
>100	Condition	 
>101	EqualityExpression	nocasecmp ( file , std 
>102	PrimaryExpression	0
>103	CallExpression	nocasecmp ( file , std 
>104	ArgumentList	file
>105	Argument	std 
>106	CallExpression	std 
>107	ArgumentList	name
>108	Argument	name
>109	Identifier	name
>110	Callee	std 
>111	Identifier	std 
>112	Argument	file
>113	Identifier	file
>114	Callee	nocasecmp
>115	Identifier	nocasecmp
>116	ExpressionStatement	 
>117	AssignmentExpr	name [ nameSize ] = '\0'
>118	PrimaryExpression	'\0'
>119	ArrayIndexing	name [ nameSize ]
>120	Identifier	nameSize
>121	Identifier	name
>122	ExpressionStatement	 
>123	CallExpression	_read ( fd , name , nameSize )
>124	ArgumentList	fd
>125	Argument	nameSize
>126	Identifier	nameSize
>127	Argument	name
>128	Identifier	name
>129	Argument	fd
>130	Identifier	fd
>131	Callee	_read
>132	Identifier	_read
>133	IdentifierDeclStatement	 
>134	IdentifierDecl	* name = ( char * ) malloc ( nameSize + 1 )
>135	AssignmentExpr	* name = ( char * ) malloc ( nameSize + 1 )
>136	CastExpression	( char * ) malloc ( nameSize + 1 )
>137	CallExpression	malloc ( nameSize + 1 )
>138	ArgumentList	nameSize + 1
>139	Argument	nameSize + 1
>140	AdditiveExpression	nameSize + 1
>141	PrimaryExpression	1
>142	Identifier	nameSize
>143	Callee	malloc
>144	Identifier	malloc
>145	CastTarget	char *
>146	Identifier	name
>147	Identifier	name
>148	IdentifierDeclType	char *
>149	ExpressionStatement	 
>150	CallExpression	_read ( fd , & nameSize , sizeof ( int ) )
>151	ArgumentList	fd
>152	Argument	sizeof ( int )
>153	SizeofExpr	sizeof ( int )
>154	SizeofOperand	int
>155	Sizeof	sizeof
>156	Argument	& nameSize
>157	UnaryOp	& nameSize
>158	Identifier	nameSize
>159	UnaryOperator	&
>160	Argument	fd
>161	Identifier	fd
>162	Callee	_read
>163	Identifier	_read
>164	ExpressionStatement	 
>165	CallExpression	_read ( fd , & fileSize , sizeof ( int ) )
>166	ArgumentList	fd
>167	Argument	sizeof ( int )
>168	SizeofExpr	sizeof ( int )
>169	SizeofOperand	int
>170	Sizeof	sizeof
>171	Argument	& fileSize
>172	UnaryOp	& fileSize
>173	Identifier	fileSize
>174	UnaryOperator	&
>175	Argument	fd
>176	Identifier	fd
>177	Callee	_read
>178	Identifier	_read
>179	ExpressionStatement	 
>180	CallExpression	_lseek ( fd , loc , SEEK_SET )
>181	ArgumentList	fd
>182	Argument	SEEK_SET
>183	Identifier	SEEK_SET
>184	Argument	loc
>185	Identifier	loc
>186	Argument	fd
>187	Identifier	fd
>188	Callee	_lseek
>189	Identifier	_lseek
>190	ExpressionStatement	 
>191	CallExpression	_read ( fd , & loc , sizeof ( LOC_UNIT ) )
>192	ArgumentList	fd
>193	Argument	sizeof ( LOC_UNIT )
>194	SizeofExpr	sizeof ( LOC_UNIT )
>195	SizeofOperand	LOC_UNIT
>196	Sizeof	sizeof
>197	Argument	& loc
>198	UnaryOp	& loc
>199	Identifier	loc
>200	UnaryOperator	&
>201	Argument	fd
>202	Identifier	fd
>203	Callee	_read
>204	Identifier	_read
>205	ExpressionStatement	 
>206	CallExpression	_lseek ( fd , ( i * sizeof ( LOC_UNIT ) ) + sizeof ( int ) , SEEK_SET )
>207	ArgumentList	fd
>208	Argument	SEEK_SET
>209	Identifier	SEEK_SET
>210	Argument	( i * sizeof ( LOC_UNIT ) ) + sizeof ( int )
>211	AdditiveExpression	( i * sizeof ( LOC_UNIT ) ) + sizeof ( int )
>212	SizeofExpr	sizeof ( int )
>213	SizeofOperand	int
>214	Sizeof	sizeof
>215	MultiplicativeExpression	i * sizeof ( LOC_UNIT )
>216	SizeofExpr	sizeof ( LOC_UNIT )
>217	SizeofOperand	LOC_UNIT
>218	Sizeof	sizeof
>219	Identifier	i
>220	Argument	fd
>221	Identifier	fd
>222	Callee	_lseek
>223	Identifier	_lseek
>224	IncDecOp	 
>225	IncDec	++
>226	Identifier	i
>227	Condition	 
>228	RelationalExpression	i < numFiles
>229	Identifier	numFiles
>230	Identifier	i
>231	ForInit	 
>232	IdentifierDeclStatement	int i = 0 ;
>233	IdentifierDecl	i = 0
>234	AssignmentExpr	i = 0
>235	PrimaryExpression	0
>236	Identifier	i
>237	Identifier	i
>238	IdentifierDeclType	int
>239	ExpressionStatement	 
>240	CallExpression	_read ( fd , & numFiles , sizeof ( int ) )
>241	ArgumentList	fd
>242	Argument	sizeof ( int )
>243	SizeofExpr	sizeof ( int )
>244	SizeofOperand	int
>245	Sizeof	sizeof
>246	Argument	& numFiles
>247	UnaryOp	& numFiles
>248	Identifier	numFiles
>249	UnaryOperator	&
>250	Argument	fd
>251	Identifier	fd
>252	Callee	_read
>253	Identifier	_read
>254	IdentifierDeclStatement	 
>255	IdentifierDecl	loc
>256	Identifier	loc
>257	IdentifierDeclType	LOC_UNIT
>258	IdentifierDeclStatement	 
>259	IdentifierDecl	fileSize
>260	Identifier	fileSize
>261	IdentifierDeclType	int
>262	IdentifierDecl	nameSize
>263	Identifier	nameSize
>264	IdentifierDeclType	int
>265	IdentifierDecl	numFiles
>266	Identifier	numFiles
>267	IdentifierDeclType	int
>268	IdentifierDeclStatement	 
>269	IdentifierDecl	fd = _open ( pack . c_str ( ) , O_RDONLY )
>270	AssignmentExpr	fd = _open ( pack . c_str ( ) , O_RDONLY )
>271	CallExpression	_open ( pack . c_str ( ) , O_RDONLY )
>272	ArgumentList	pack . c_str ( )
>273	Argument	O_RDONLY
>274	Identifier	O_RDONLY
>275	Argument	pack . c_str ( )
>276	CallExpression	pack . c_str ( )
>277	ArgumentList	 
>278	Callee	pack . c_str
>279	MemberAccess	pack . c_str
>280	Identifier	c_str
>281	Identifier	pack
>282	Callee	_open
>283	Identifier	_open
>284	Identifier	fd
>285	Identifier	fd
>286	IdentifierDeclType	int
>287	ExpressionStatement	 
>288	AssignmentExpr	* size = 0
>289	PrimaryExpression	0
>290	UnaryOp	* size
>291	Identifier	size
>292	UnaryOperator	*
>293	ExpressionStatement	 
>294	AssignmentExpr	* location = 0
>295	PrimaryExpression	0
>296	UnaryOp	* location
>297	Identifier	location
>298	UnaryOperator	*
>329	FunctionDef	packReadInfo (const char * pack)
>330	ParameterList	const char * pack
>331	Parameter	 
>332	Identifier	pack
>333	ParameterType	const char *
>334	ReturnType	void
>335	CompoundStatement	 
>336	ExpressionStatement	 
>337	CallExpression	_close ( fd )
>338	ArgumentList	fd
>339	Argument	fd
>340	Identifier	fd
>341	Callee	_close
>342	Identifier	_close
>343	ForStatement	for ( int i = 0 ; i < numFiles ; i ++ )
>344	CompoundStatement	 
>345	ExpressionStatement	 
>346	CallExpression	free ( name )
>347	ArgumentList	name
>348	Argument	name
>349	Identifier	name
>350	Callee	free
>351	Identifier	free
>352	ExpressionStatement	 
>353	AssignmentExpr	name [ nameSize ] = '\0'
>354	PrimaryExpression	'\0'
>355	ArrayIndexing	name [ nameSize ]
>356	Identifier	nameSize
>357	Identifier	name
>358	ExpressionStatement	 
>359	CallExpression	_read ( fd , name , nameSize )
>360	ArgumentList	fd
>361	Argument	nameSize
>362	Identifier	nameSize
>363	Argument	name
>364	Identifier	name
>365	Argument	fd
>366	Identifier	fd
>367	Callee	_read
>368	Identifier	_read
>369	IdentifierDeclStatement	 
>370	IdentifierDecl	* name = ( char * ) malloc ( nameSize + 1 )
>371	AssignmentExpr	* name = ( char * ) malloc ( nameSize + 1 )
>372	CastExpression	( char * ) malloc ( nameSize + 1 )
>373	CallExpression	malloc ( nameSize + 1 )
>374	ArgumentList	nameSize + 1
>375	Argument	nameSize + 1
>376	AdditiveExpression	nameSize + 1
>377	PrimaryExpression	1
>378	Identifier	nameSize
>379	Callee	malloc
>380	Identifier	malloc
>381	CastTarget	char *
>382	Identifier	name
>383	Identifier	name
>384	IdentifierDeclType	char *
>385	ExpressionStatement	 
>386	CallExpression	_read ( fd , & nameSize , sizeof ( int ) )
>387	ArgumentList	fd
>388	Argument	sizeof ( int )
>389	SizeofExpr	sizeof ( int )
>390	SizeofOperand	int
>391	Sizeof	sizeof
>392	Argument	& nameSize
>393	UnaryOp	& nameSize
>394	Identifier	nameSize
>395	UnaryOperator	&
>396	Argument	fd
>397	Identifier	fd
>398	Callee	_read
>399	Identifier	_read
>400	ExpressionStatement	 
>401	CallExpression	_read ( fd , & fileSize , sizeof ( int ) )
>402	ArgumentList	fd
>403	Argument	sizeof ( int )
>404	SizeofExpr	sizeof ( int )
>405	SizeofOperand	int
>406	Sizeof	sizeof
>407	Argument	& fileSize
>408	UnaryOp	& fileSize
>409	Identifier	fileSize
>410	UnaryOperator	&
>411	Argument	fd
>412	Identifier	fd
>413	Callee	_read
>414	Identifier	_read
>415	ExpressionStatement	 
>416	CallExpression	_lseek ( fd , loc , SEEK_SET )
>417	ArgumentList	fd
>418	Argument	SEEK_SET
>419	Identifier	SEEK_SET
>420	Argument	loc
>421	Identifier	loc
>422	Argument	fd
>423	Identifier	fd
>424	Callee	_lseek
>425	Identifier	_lseek
>426	ExpressionStatement	 
>427	CallExpression	_read ( fd , & loc , sizeof ( LOC_UNIT ) )
>428	ArgumentList	fd
>429	Argument	sizeof ( LOC_UNIT )
>430	SizeofExpr	sizeof ( LOC_UNIT )
>431	SizeofOperand	LOC_UNIT
>432	Sizeof	sizeof
>433	Argument	& loc
>434	UnaryOp	& loc
>435	Identifier	loc
>436	UnaryOperator	&
>437	Argument	fd
>438	Identifier	fd
>439	Callee	_read
>440	Identifier	_read
>441	ExpressionStatement	 
>442	CallExpression	_lseek ( fd , ( i * sizeof ( LOC_UNIT ) ) + sizeof ( int ) , SEEK_SET )
>443	ArgumentList	fd
>444	Argument	SEEK_SET
>445	Identifier	SEEK_SET
>446	Argument	( i * sizeof ( LOC_UNIT ) ) + sizeof ( int )
>447	AdditiveExpression	( i * sizeof ( LOC_UNIT ) ) + sizeof ( int )
>448	SizeofExpr	sizeof ( int )
>449	SizeofOperand	int
>450	Sizeof	sizeof
>451	MultiplicativeExpression	i * sizeof ( LOC_UNIT )
>452	SizeofExpr	sizeof ( LOC_UNIT )
>453	SizeofOperand	LOC_UNIT
>454	Sizeof	sizeof
>455	Identifier	i
>456	Argument	fd
>457	Identifier	fd
>458	Callee	_lseek
>459	Identifier	_lseek
>460	IncDecOp	 
>461	IncDec	++
>462	Identifier	i
>463	Condition	 
>464	RelationalExpression	i < numFiles
>465	Identifier	numFiles
>466	Identifier	i
>467	ForInit	 
>468	IdentifierDeclStatement	int i = 0 ;
>469	IdentifierDecl	i = 0
>470	AssignmentExpr	i = 0
>471	PrimaryExpression	0
>472	Identifier	i
>473	Identifier	i
>474	IdentifierDeclType	int
>475	ExpressionStatement	 
>476	CallExpression	_read ( fd , & numFiles , sizeof ( int ) )
>477	ArgumentList	fd
>478	Argument	sizeof ( int )
>479	SizeofExpr	sizeof ( int )
>480	SizeofOperand	int
>481	Sizeof	sizeof
>482	Argument	& numFiles
>483	UnaryOp	& numFiles
>484	Identifier	numFiles
>485	UnaryOperator	&
>486	Argument	fd
>487	Identifier	fd
>488	Callee	_read
>489	Identifier	_read
>490	IdentifierDeclStatement	 
>491	IdentifierDecl	loc
>492	Identifier	loc
>493	IdentifierDeclType	LOC_UNIT
>494	IdentifierDeclStatement	 
>495	IdentifierDecl	fileSize
>496	Identifier	fileSize
>497	IdentifierDeclType	int
>498	IdentifierDecl	nameSize
>499	Identifier	nameSize
>500	IdentifierDeclType	int
>501	IdentifierDecl	numFiles
>502	Identifier	numFiles
>503	IdentifierDeclType	int
>504	IdentifierDeclStatement	 
>505	IdentifierDecl	fd = _open ( pack , O_RDONLY )
>506	AssignmentExpr	fd = _open ( pack , O_RDONLY )
>507	CallExpression	_open ( pack , O_RDONLY )
>508	ArgumentList	pack
>509	Argument	O_RDONLY
>510	Identifier	O_RDONLY
>511	Argument	pack
>512	Identifier	pack
>513	Callee	_open
>514	Identifier	_open
>515	Identifier	fd
>516	Identifier	fd
>517	IdentifierDeclType	int
>518	ExpressionStatement	 
>519	CallExpression	debugLog ( \"pack read info\" )
>520	ArgumentList	\"pack read info\"
>521	Argument	\"pack read info\"
>522	PrimaryExpression	\"pack read info\"
>523	Callee	debugLog
>524	Identifier	debugLog
<3=18,17,4
<4=14,11,8,5
<5=7,6
<8=10,9
<11=13,12
<14=16,15
<18=293,287,268,258,254,239,27,20,19
<20=21
<21=25,22
<22=23
<23=24
<25=26
<27=231,227,224,28
<28=205,190,179,164,149,133,122,116,36,29
<29=30
<30=34,31
<31=32
<32=33
<34=35
<36=100,37
<37=86,75,68,61,45,39,38
<39=40
<40=42,41
<42=44,43
<45=46
<46=58,47
<47=57,48
<48=54,49
<49=51,50
<51=53,52
<54=56,55
<58=60,59
<61=62
<62=66,63
<63=64
<64=65
<66=67
<68=69
<69=73,70
<70=71
<71=72
<73=74
<75=76
<76=84,77
<77=82,80,78
<78=79
<80=81
<82=83
<84=85
<86=87
<87=99,98,88
<88=97,89
<89=96,90
<90=94,91
<91=92
<92=93
<94=95
<100=101
<101=103,102
<103=114,104
<104=112,105
<105=106
<106=110,107
<107=108
<108=109
<110=111
<112=113
<114=115
<116=117
<117=119,118
<119=121,120
<122=123
<123=131,124
<124=129,127,125
<125=126
<127=128
<129=130
<131=132
<133=134
<134=148,147,135
<135=146,136
<136=145,137
<137=143,138
<138=139
<139=140
<140=142,141
<143=144
<149=150
<150=162,151
<151=160,156,152
<152=153
<153=155,154
<156=157
<157=159,158
<160=161
<162=163
<164=165
<165=177,166
<166=175,171,167
<167=168
<168=170,169
<171=172
<172=174,173
<175=176
<177=178
<179=180
<180=188,181
<181=186,184,182
<182=183
<184=185
<186=187
<188=189
<190=191
<191=203,192
<192=201,197,193
<193=194
<194=196,195
<197=198
<198=200,199
<201=202
<203=204
<205=206
<206=222,207
<207=220,210,208
<208=209
<210=211
<211=215,212
<212=214,213
<215=219,216
<216=218,217
<220=221
<222=223
<224=226,225
<227=228
<228=230,229
<231=232
<232=233
<233=238,237,234
<234=236,235
<239=240
<240=252,241
<241=250,246,242
<242=243
<243=245,244
<246=247
<247=249,248
<250=251
<252=253
<254=255
<255=257,256
<258=265,262,259
<259=261,260
<262=264,263
<265=267,266
<268=269
<269=286,285,270
<270=284,271
<271=282,272
<272=275,273
<273=274
<275=276
<276=278,277
<278=279
<279=281,280
<282=283
<287=288
<288=290,289
<290=292,291
<293=294
<294=296,295
<296=298,297
<329=335,334,330
<330=331
<331=333,332
<335=518,504,494,490,475,343,336
<336=337
<337=341,338
<338=339
<339=340
<341=342
<343=467,463,460,344
<344=441,426,415,400,385,369,358,352,345
<345=346
<346=350,347
<347=348
<348=349
<350=351
<352=353
<353=355,354
<355=357,356
<358=359
<359=367,360
<360=365,363,361
<361=362
<363=364
<365=366
<367=368
<369=370
<370=384,383,371
<371=382,372
<372=381,373
<373=379,374
<374=375
<375=376
<376=378,377
<379=380
<385=386
<386=398,387
<387=396,392,388
<388=389
<389=391,390
<392=393
<393=395,394
<396=397
<398=399
<400=401
<401=413,402
<402=411,407,403
<403=404
<404=406,405
<407=408
<408=410,409
<411=412
<413=414
<415=416
<416=424,417
<417=422,420,418
<418=419
<420=421
<422=423
<424=425
<426=427
<427=439,428
<428=437,433,429
<429=430
<430=432,431
<433=434
<434=436,435
<437=438
<439=440
<441=442
<442=458,443
<443=456,446,444
<444=445
<446=447
<447=451,448
<448=450,449
<451=455,452
<452=454,453
<456=457
<458=459
<460=462,461
<463=464
<464=466,465
<467=468
<468=469
<469=474,473,470
<470=472,471
<475=476
<476=488,477
<477=486,482,478
<478=479
<479=481,480
<482=483
<483=485,484
<486=487
<488=489
<490=491
<491=493,492
<494=501,498,495
<495=497,496
<498=500,499
<501=503,502
<504=505
<505=517,516,506
<506=515,507
<507=513,508
<508=511,509
<509=510
<511=512
<513=514
<518=519
<519=523,520
<520=521
<521=522
<523=524
