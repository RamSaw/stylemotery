>3	FunctionDef	main (int argc , char * argv [ ])
>4	ParameterList	int argc , char * argv [ ]
>5	Parameter	 
>6	Identifier	argv
>7	ParameterType	char * [ ]
>8	Parameter	 
>9	Identifier	argc
>10	ParameterType	int
>11	ReturnType	int
>12	CompoundStatement	 
>13	ReturnStatement	 
>14	PrimaryExpression	0
>15	IfStatement	if ( fs 
>16	ElseStatement	else
>17	CompoundStatement	 
>18	ExpressionStatement	 
>19	ShiftExpression	std 
>20	ShiftExpression	\"\nFound
>21	ShiftExpression	p << \"\n\"
>22	PrimaryExpression	\"\n\"
>23	Identifier	p
>24	PrimaryExpression	\"\nFound
>25	Identifier	std 
>26	CompoundStatement	 
>27	ExpressionStatement	 
>28	ShiftExpression	std 
>29	ShiftExpression	\"\n\" << file_count << \" files\n\" << dir_count << \" directories\n\" << other_count << \" others\n\" << err_\
>30	ShiftExpression	file_count << \" files\n\" << dir_count << \" directories\n\" << other_count << \" others\n\" << err_count << \" \
>31	ShiftExpression	\" files\n\" << dir_count << \" directories\n\" << other_count << \" others\n\" << err_count << \" errors\n\"\
>32	ShiftExpression	dir_count << \" directories\n\" << other_count << \" others\n\" << err_count << \" errors\n\"
>33	ShiftExpression	\" directories\n\" << other_count << \" others\n\" << err_count << \" errors\n\"
>34	ShiftExpression	other_count << \" others\n\" << err_count << \" errors\n\"
>35	ShiftExpression	\" others\n\" << err_count << \" errors\n\"
>36	ShiftExpression	err_count << \" errors\n\"
>37	PrimaryExpression	\" errors\n\"
>38	Identifier	err_count
>39	PrimaryExpression	\" others\n\"
>40	Identifier	other_count
>41	PrimaryExpression	\" directories\n\"
>42	Identifier	dir_count
>43	PrimaryExpression	\" files\n\"
>44	Identifier	file_count
>45	PrimaryExpression	\"\n\"
>46	Identifier	std 
>47	ForStatement	for ( fs 
>48	CompoundStatement	 
>49	BlockStarter	 
>50	CompoundStatement	 
>51	ExpressionStatement	std 
>52	ShiftExpression	std 
>53	ShiftExpression	dir_itr -> path ( ) . filename ( ) << \" \" << ex . what ( ) << std 
>54	ShiftExpression	\" \" << ex . what ( ) << std 
>55	ShiftExpression	ex . what ( ) << std 
>56	Identifier	std 
>57	CallExpression	ex . what ( )
>58	ArgumentList	 
>59	Callee	ex . what
>60	MemberAccess	ex . what
>61	Identifier	what
>62	Identifier	ex
>63	PrimaryExpression	\" \"
>64	CallExpression	dir_itr -> path ( ) . filename ( )
>65	ArgumentList	 
>66	Callee	dir_itr -> path ( ) . filename
>67	MemberAccess	dir_itr -> path ( ) . filename
>68	Identifier	filename
>69	CallExpression	dir_itr -> path ( )
>70	ArgumentList	 
>71	Callee	dir_itr -> path
>72	PtrMemberAccess	dir_itr -> path
>73	Identifier	path
>74	Identifier	dir_itr
>75	Identifier	std 
>76	ExpressionStatement	++ err_count
>77	UnaryExpression	++ err_count
>78	Identifier	err_count
>79	IncDec	++
>80	Identifier	ex
>81	BlockStarter	 
>82	CompoundStatement	 
>83	IfStatement	if ( fs 
>84	ElseStatement	else
>85	IfStatement	if ( fs 
>86	ElseStatement	else
>87	CompoundStatement	 
>88	ExpressionStatement	std 
>89	ShiftExpression	std 
>90	ShiftExpression	dir_itr -> path ( ) . filename ( ) << \" [other]\n\"
>91	PrimaryExpression	\" [other]\n\"
>92	CallExpression	dir_itr -> path ( ) . filename ( )
>93	ArgumentList	 
>94	Callee	dir_itr -> path ( ) . filename
>95	MemberAccess	dir_itr -> path ( ) . filename
>96	Identifier	filename
>97	CallExpression	dir_itr -> path ( )
>98	ArgumentList	 
>99	Callee	dir_itr -> path
>100	PtrMemberAccess	dir_itr -> path
>101	Identifier	path
>102	Identifier	dir_itr
>103	Identifier	std 
>104	ExpressionStatement	++ other_count
>105	UnaryExpression	++ other_count
>106	Identifier	other_count
>107	IncDec	++
>108	CompoundStatement	 
>109	ExpressionStatement	std 
>110	ShiftExpression	std 
>111	ShiftExpression	dir_itr -> path ( ) . filename ( ) << \"\n\"
>112	PrimaryExpression	\"\n\"
>113	CallExpression	dir_itr -> path ( ) . filename ( )
>114	ArgumentList	 
>115	Callee	dir_itr -> path ( ) . filename
>116	MemberAccess	dir_itr -> path ( ) . filename
>117	Identifier	filename
>118	CallExpression	dir_itr -> path ( )
>119	ArgumentList	 
>120	Callee	dir_itr -> path
>121	PtrMemberAccess	dir_itr -> path
>122	Identifier	path
>123	Identifier	dir_itr
>124	Identifier	std 
>125	ExpressionStatement	++ file_count
>126	UnaryExpression	++ file_count
>127	Identifier	file_count
>128	IncDec	++
>129	Condition	fs 
>130	CallExpression	fs 
>131	ArgumentList	dir_itr -> status ( )
>132	Argument	dir_itr -> status ( )
>133	CallExpression	dir_itr -> status ( )
>134	ArgumentList	 
>135	Callee	dir_itr -> status
>136	PtrMemberAccess	dir_itr -> status
>137	Identifier	status
>138	Identifier	dir_itr
>139	Callee	fs 
>140	Identifier	fs 
>141	CompoundStatement	 
>142	ExpressionStatement	std 
>143	ShiftExpression	std 
>144	ShiftExpression	dir_itr -> path ( ) . filename ( ) << \" [directory]\n\"
>145	PrimaryExpression	\" [directory]\n\"
>146	CallExpression	dir_itr -> path ( ) . filename ( )
>147	ArgumentList	 
>148	Callee	dir_itr -> path ( ) . filename
>149	MemberAccess	dir_itr -> path ( ) . filename
>150	Identifier	filename
>151	CallExpression	dir_itr -> path ( )
>152	ArgumentList	 
>153	Callee	dir_itr -> path
>154	PtrMemberAccess	dir_itr -> path
>155	Identifier	path
>156	Identifier	dir_itr
>157	Identifier	std 
>158	ExpressionStatement	++ dir_count
>159	UnaryExpression	++ dir_count
>160	Identifier	dir_count
>161	IncDec	++
>162	Condition	fs 
>163	CallExpression	fs 
>164	ArgumentList	dir_itr -> status ( )
>165	Argument	dir_itr -> status ( )
>166	CallExpression	dir_itr -> status ( )
>167	ArgumentList	 
>168	Callee	dir_itr -> status
>169	PtrMemberAccess	dir_itr -> status
>170	Identifier	status
>171	Identifier	dir_itr
>172	Callee	fs 
>173	Identifier	fs 
>174	UnaryExpression	 
>175	Identifier	dir_itr
>176	IncDec	++
>177	Condition	 
>178	EqualityExpression	dir_itr != end_iter
>179	Identifier	end_iter
>180	Identifier	dir_itr
>181	ForInit	 
>182	IdentifierDeclStatement	fs 
>183	IdentifierDecl	dir_itr ( p )
>184	Identifier	p
>185	Identifier	dir_itr
>186	IdentifierDeclType	fs 
>187	IdentifierDeclStatement	 
>188	IdentifierDecl	end_iter
>189	Identifier	end_iter
>190	IdentifierDeclType	fs 
>191	ExpressionStatement	 
>192	ShiftExpression	std 
>193	ShiftExpression	\"\nIn directory
>194	ShiftExpression	p << \"\n\n\"
>195	PrimaryExpression	\"\n\n\"
>196	Identifier	p
>197	PrimaryExpression	\"\nIn directory
>198	Identifier	std 
>199	Condition	 
>200	CallExpression	fs 
>201	ArgumentList	p
>202	Argument	p
>203	Identifier	p
>204	Callee	fs 
>205	Identifier	fs 
>206	IfStatement	if ( ! fs 
>207	CompoundStatement	 
>208	ReturnStatement	 
>209	PrimaryExpression	1
>210	ExpressionStatement	 
>211	ShiftExpression	std 
>212	ShiftExpression	\"\nNot found
>213	ShiftExpression	p << std 
>214	Identifier	std 
>215	Identifier	p
>216	PrimaryExpression	\"\nNot found
>217	Identifier	std 
>218	Condition	 
>219	UnaryOp	! fs 
>220	CallExpression	fs 
>221	ArgumentList	p
>222	Argument	p
>223	Identifier	p
>224	Callee	fs 
>225	Identifier	fs 
>226	UnaryOperator	!
>227	IdentifierDeclStatement	 
>228	IdentifierDecl	err_count = 0
>229	AssignmentExpr	err_count = 0
>230	PrimaryExpression	0
>231	Identifier	err_count
>232	Identifier	err_count
>233	IdentifierDeclType	unsigned long
>234	IdentifierDeclStatement	 
>235	IdentifierDecl	other_count = 0
>236	AssignmentExpr	other_count = 0
>237	PrimaryExpression	0
>238	Identifier	other_count
>239	Identifier	other_count
>240	IdentifierDeclType	unsigned long
>241	IdentifierDeclStatement	 
>242	IdentifierDecl	dir_count = 0
>243	AssignmentExpr	dir_count = 0
>244	PrimaryExpression	0
>245	Identifier	dir_count
>246	Identifier	dir_count
>247	IdentifierDeclType	unsigned long
>248	IdentifierDeclStatement	 
>249	IdentifierDecl	file_count = 0
>250	AssignmentExpr	file_count = 0
>251	PrimaryExpression	0
>252	Identifier	file_count
>253	Identifier	file_count
>254	IdentifierDeclType	unsigned long
>255	IfStatement	if ( argc > 1 )
>256	ElseStatement	else
>257	ExpressionStatement	 
>258	ShiftExpression	std 
>259	ShiftExpression	\"\nusage
>260	Identifier	std 
>261	PrimaryExpression	\"\nusage
>262	Identifier	std 
>263	ExpressionStatement	 
>264	AssignmentExpr	p = fs 
>265	CallExpression	fs 
>266	ArgumentList	argv [ 1 ]
>267	Argument	argv [ 1 ]
>268	ArrayIndexing	argv [ 1 ]
>269	PrimaryExpression	1
>270	Identifier	argv
>271	Callee	fs 
>272	Identifier	fs 
>273	Identifier	p
>274	Condition	 
>275	RelationalExpression	argc > 1
>276	PrimaryExpression	1
>277	Identifier	argc
>278	IdentifierDeclStatement	 
>279	IdentifierDecl	p ( fs 
>280	CallExpression	fs 
>281	ArgumentList	 
>282	Callee	fs 
>283	Identifier	fs 
>284	Identifier	p
>285	IdentifierDeclType	fs 
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=278,255,248,241,234,227,206,15,13
<13=14
<15=199,26,16
<16=17
<17=18
<18=19
<19=25,20
<20=24,21
<21=23,22
<26=191,187,47,27
<27=28
<28=46,29
<29=45,30
<30=44,31
<31=43,32
<32=42,33
<33=41,34
<34=40,35
<35=39,36
<36=38,37
<47=181,177,174,48
<48=81,49
<49=80,50
<50=76,51
<51=52
<52=75,53
<53=64,54
<54=63,55
<55=57,56
<57=59,58
<59=60
<60=62,61
<64=66,65
<66=67
<67=69,68
<69=71,70
<71=72
<72=74,73
<76=77
<77=79,78
<81=82
<82=83
<83=162,141,84
<84=85
<85=129,108,86
<86=87
<87=104,88
<88=89
<89=103,90
<90=92,91
<92=94,93
<94=95
<95=97,96
<97=99,98
<99=100
<100=102,101
<104=105
<105=107,106
<108=125,109
<109=110
<110=124,111
<111=113,112
<113=115,114
<115=116
<116=118,117
<118=120,119
<120=121
<121=123,122
<125=126
<126=128,127
<129=130
<130=139,131
<131=132
<132=133
<133=135,134
<135=136
<136=138,137
<139=140
<141=158,142
<142=143
<143=157,144
<144=146,145
<146=148,147
<148=149
<149=151,150
<151=153,152
<153=154
<154=156,155
<158=159
<159=161,160
<162=163
<163=172,164
<164=165
<165=166
<166=168,167
<168=169
<169=171,170
<172=173
<174=176,175
<177=178
<178=180,179
<181=182
<182=183
<183=186,185,184
<187=188
<188=190,189
<191=192
<192=198,193
<193=197,194
<194=196,195
<199=200
<200=204,201
<201=202
<202=203
<204=205
<206=218,207
<207=210,208
<208=209
<210=211
<211=217,212
<212=216,213
<213=215,214
<218=219
<219=226,220
<220=224,221
<221=222
<222=223
<224=225
<227=228
<228=233,232,229
<229=231,230
<234=235
<235=240,239,236
<236=238,237
<241=242
<242=247,246,243
<243=245,244
<248=249
<249=254,253,250
<250=252,251
<255=274,263,256
<256=257
<257=258
<258=262,259
<259=261,260
<263=264
<264=273,265
<265=271,266
<266=267
<267=268
<268=270,269
<271=272
<274=275
<275=277,276
<278=279
<279=285,284,280
<280=282,281
<282=283
