>3	FunctionDef	usage ()
>4	ParameterList	 
>5	ReturnType	void
>6	CompoundStatement	 
>7	ExpressionStatement	 
>8	ShiftExpression	cerr << \"OPTIONS
>9	ShiftExpression	\"OPTIONS
>10	ShiftExpression	\"  -inLabels <ext>   
>11	ShiftExpression	\"  -outImages <ext>  
>12	ShiftExpression	\"  -x                
>13	ShiftExpression	DRWN_STANDARD_OPTIONS_USAGE << endl
>14	Identifier	endl
>15	Identifier	DRWN_STANDARD_OPTIONS_USAGE
>16	PrimaryExpression	\"  -x                
>17	PrimaryExpression	\"  -outImages <ext>  
>18	PrimaryExpression	\"  -inLabels <ext>   
>19	PrimaryExpression	\"OPTIONS
>20	Identifier	cerr
>21	ExpressionStatement	 
>22	ShiftExpression	cerr << \"USAGE
>23	PrimaryExpression	\"USAGE
>24	Identifier	cerr
>25	ExpressionStatement	 
>26	ShiftExpression	cerr << DRWN_USAGE_HEADER << endl
>27	ShiftExpression	DRWN_USAGE_HEADER << endl
>28	Identifier	endl
>29	Identifier	DRWN_USAGE_HEADER
>30	Identifier	cerr
>34	FunctionDef	main (int argc , char * argv [ ])
>35	ParameterList	int argc , char * argv [ ]
>36	Parameter	 
>37	Identifier	argv
>38	ParameterType	char * [ ]
>39	Parameter	 
>40	Identifier	argc
>41	ParameterType	int
>42	ReturnType	int
>43	CompoundStatement	 
>44	ReturnStatement	 
>45	PrimaryExpression	0
>46	ExpressionStatement	 
>47	CallExpression	drwnCodeProfiler 
>48	ArgumentList	 
>49	Callee	drwnCodeProfiler 
>50	Identifier	drwnCodeProfiler 
>51	ExpressionStatement	 
>52	CallExpression	drwnCodeProfiler 
>53	ArgumentList	drwnCodeProfiler 
>54	Argument	drwnCodeProfiler 
>55	CallExpression	drwnCodeProfiler 
>56	ArgumentList	\"main\"
>57	Argument	\"main\"
>58	PrimaryExpression	\"main\"
>59	Callee	drwnCodeProfiler 
>60	Identifier	drwnCodeProfiler 
>61	Callee	drwnCodeProfiler 
>62	Identifier	drwnCodeProfiler 
>63	IfStatement	if ( bVisualize && ( baseNames . size ( ) == 1 ) )
>64	CompoundStatement	 
>65	ExpressionStatement	 
>66	CallExpression	cv 
>67	ArgumentList	- 1
>68	Argument	- 1
>69	UnaryOp	- 1
>70	PrimaryExpression	1
>71	UnaryOperator	-
>72	Callee	cv 
>73	Identifier	cv 
>74	Condition	 
>75	AndExpression	bVisualize && ( baseNames . size ( ) == 1 )
>76	EqualityExpression	baseNames . size ( ) == 1
>77	PrimaryExpression	1
>78	CallExpression	baseNames . size ( )
>79	ArgumentList	 
>80	Callee	baseNames . size
>81	MemberAccess	baseNames . size
>82	Identifier	size
>83	Identifier	baseNames
>84	Identifier	bVisualize
>85	ForStatement	for ( int i = 0 ; i < ( int ) baseNames . size ( ) ; i ++ )
>86	CompoundStatement	 
>87	IfStatement	if ( outImageExt != NULL )
>88	CompoundStatement	 
>89	ExpressionStatement	 
>90	CallExpression	cv 
>91	ArgumentList	filename
>92	Argument	canvas
>93	Identifier	canvas
>94	Argument	filename
>95	Identifier	filename
>96	Callee	cv 
>97	Identifier	cv 
>98	IdentifierDeclStatement	 
>99	IdentifierDecl	filename = gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] ) + string ( outImageExt )
>100	AssignmentExpr	filename = gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] ) + string ( outImageExt )
>101	AdditiveExpression	gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] ) + string ( outImageExt )
>102	CallExpression	string ( outImageExt )
>103	ArgumentList	outImageExt
>104	Argument	outImageExt
>105	Identifier	outImageExt
>106	Callee	string
>107	Identifier	string
>108	CallExpression	gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] )
>109	ArgumentList	\"outputDir\"
>110	Argument	baseNames [ i ]
>111	ArrayIndexing	baseNames [ i ]
>112	Identifier	i
>113	Identifier	baseNames
>114	Argument	\"outputDir\"
>115	PrimaryExpression	\"outputDir\"
>116	Callee	gMultiSegConfig . filebase
>117	MemberAccess	gMultiSegConfig . filebase
>118	Identifier	filebase
>119	Identifier	gMultiSegConfig
>120	Identifier	filename
>121	Identifier	filename
>122	IdentifierDeclType	const string
>123	Condition	 
>124	EqualityExpression	outImageExt != NULL
>125	Identifier	NULL
>126	Identifier	outImageExt
>127	IfStatement	if ( bVisualize )
>128	CompoundStatement	 
>129	ExpressionStatement	 
>130	CallExpression	cv 
>131	ArgumentList	100
>132	Argument	100
>133	PrimaryExpression	100
>134	Callee	cv 
>135	Identifier	cv 
>136	ExpressionStatement	 
>137	CallExpression	cv 
>138	ArgumentList	string ( WINDOW_NAME )
>139	Argument	canvas
>140	Identifier	canvas
>141	Argument	string ( WINDOW_NAME )
>142	CallExpression	string ( WINDOW_NAME )
>143	ArgumentList	WINDOW_NAME
>144	Argument	WINDOW_NAME
>145	Identifier	WINDOW_NAME
>146	Callee	string
>147	Identifier	string
>148	Callee	cv 
>149	Identifier	cv 
>150	ExpressionStatement	 
>151	CallExpression	cv 
>152	ArgumentList	string ( WINDOW_NAME )
>153	Argument	string ( WINDOW_NAME )
>154	CallExpression	string ( WINDOW_NAME )
>155	ArgumentList	WINDOW_NAME
>156	Argument	WINDOW_NAME
>157	Identifier	WINDOW_NAME
>158	Callee	string
>159	Identifier	string
>160	Callee	cv 
>161	Identifier	cv 
>162	Condition	 
>163	Identifier	bVisualize
>164	IfStatement	if ( bVisualize || ( outImageExt != NULL ) )
>165	CompoundStatement	 
>166	ExpressionStatement	 
>167	AssignmentExpr	canvas = drwnMultiSegVis 
>168	CallExpression	drwnMultiSegVis 
>169	ArgumentList	instance
>170	Argument	instance
>171	Identifier	instance
>172	Callee	drwnMultiSegVis 
>173	Identifier	drwnMultiSegVis 
>174	Identifier	canvas
>175	Condition	 
>176	OrExpression	bVisualize || ( outImageExt != NULL )
>177	EqualityExpression	outImageExt != NULL
>178	Identifier	NULL
>179	Identifier	outImageExt
>180	Identifier	bVisualize
>181	IdentifierDeclStatement	 
>182	IdentifierDecl	canvas
>183	Identifier	canvas
>184	IdentifierDeclType	cv 
>185	ExpressionStatement	 
>186	CallExpression	drwnReadMatrix ( instance . pixelLabels , lblFilename . c_str ( ) )
>187	ArgumentList	instance . pixelLabels
>188	Argument	lblFilename . c_str ( )
>189	CallExpression	lblFilename . c_str ( )
>190	ArgumentList	 
>191	Callee	lblFilename . c_str
>192	MemberAccess	lblFilename . c_str
>193	Identifier	c_str
>194	Identifier	lblFilename
>195	Argument	instance . pixelLabels
>196	MemberAccess	instance . pixelLabels
>197	Identifier	pixelLabels
>198	Identifier	instance
>199	Callee	drwnReadMatrix
>200	Identifier	drwnReadMatrix
>201	IdentifierDeclStatement	 
>202	IdentifierDecl	lblFilename = gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] ) + string ( inLabelExt )
>203	AssignmentExpr	lblFilename = gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] ) + string ( inLabelExt )
>204	AdditiveExpression	gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] ) + string ( inLabelExt )
>205	CallExpression	string ( inLabelExt )
>206	ArgumentList	inLabelExt
>207	Argument	inLabelExt
>208	Identifier	inLabelExt
>209	Callee	string
>210	Identifier	string
>211	CallExpression	gMultiSegConfig . filebase ( \"outputDir\" , baseNames [ i ] )
>212	ArgumentList	\"outputDir\"
>213	Argument	baseNames [ i ]
>214	ArrayIndexing	baseNames [ i ]
>215	Identifier	i
>216	Identifier	baseNames
>217	Argument	\"outputDir\"
>218	PrimaryExpression	\"outputDir\"
>219	Callee	gMultiSegConfig . filebase
>220	MemberAccess	gMultiSegConfig . filebase
>221	Identifier	filebase
>222	Identifier	gMultiSegConfig
>223	Identifier	lblFilename
>224	Identifier	lblFilename
>225	IdentifierDeclType	const string
>226	IdentifierDeclStatement	 
>227	IdentifierDecl	instance ( imgFilename . c_str ( ) )
>228	CallExpression	imgFilename . c_str ( )
>229	ArgumentList	 
>230	Callee	imgFilename . c_str
>231	MemberAccess	imgFilename . c_str
>232	Identifier	c_str
>233	Identifier	imgFilename
>234	Identifier	instance
>235	IdentifierDeclType	drwnSegImageInstance
>236	IdentifierDeclStatement	 
>237	IdentifierDecl	imgFilename = gMultiSegConfig . filename ( \"imgDir\" , baseNames [ i ] , \"imgExt\" )
>238	AssignmentExpr	imgFilename = gMultiSegConfig . filename ( \"imgDir\" , baseNames [ i ] , \"imgExt\" )
>239	CallExpression	gMultiSegConfig . filename ( \"imgDir\" , baseNames [ i ] , \"imgExt\" )
>240	ArgumentList	\"imgDir\"
>241	Argument	\"imgExt\"
>242	PrimaryExpression	\"imgExt\"
>243	Argument	baseNames [ i ]
>244	ArrayIndexing	baseNames [ i ]
>245	Identifier	i
>246	Identifier	baseNames
>247	Argument	\"imgDir\"
>248	PrimaryExpression	\"imgDir\"
>249	Callee	gMultiSegConfig . filename
>250	MemberAccess	gMultiSegConfig . filename
>251	Identifier	filename
>252	Identifier	gMultiSegConfig
>253	Identifier	imgFilename
>254	Identifier	imgFilename
>255	IdentifierDeclType	const string
>256	IncDecOp	 
>257	IncDec	++
>258	Identifier	i
>259	Condition	 
>260	RelationalExpression	i < ( int ) baseNames . size ( )
>261	CastExpression	( int ) baseNames . size ( )
>262	CallExpression	baseNames . size ( )
>263	ArgumentList	 
>264	Callee	baseNames . size
>265	MemberAccess	baseNames . size
>266	Identifier	size
>267	Identifier	baseNames
>268	CastTarget	int
>269	Identifier	i
>270	ForInit	 
>271	IdentifierDeclStatement	int i = 0 ;
>272	IdentifierDecl	i = 0
>273	AssignmentExpr	i = 0
>274	PrimaryExpression	0
>275	Identifier	i
>276	Identifier	i
>277	IdentifierDeclType	int
>278	IfStatement	if ( drwnFileExists ( imageList ) )
>279	ElseStatement	else
>280	CompoundStatement	 
>281	ExpressionStatement	 
>282	CallExpression	baseNames . push_back ( string ( imageList ) )
>283	ArgumentList	string ( imageList )
>284	Argument	string ( imageList )
>285	CallExpression	string ( imageList )
>286	ArgumentList	imageList
>287	Argument	imageList
>288	Identifier	imageList
>289	Callee	string
>290	Identifier	string
>291	Callee	baseNames . push_back
>292	MemberAccess	baseNames . push_back
>293	Identifier	push_back
>294	Identifier	baseNames
>295	ExpressionStatement	 
>296	CallExpression	DRWN_LOG_MESSAGE ( \"Processing single image \" << imageList << \"...\" )
>297	ArgumentList	\"Processing single image \" << imageList << \"...\"
>298	Argument	\"Processing single image \" << imageList << \"...\"
>299	ShiftExpression	\"Processing single image \" << imageList << \"...\"
>300	ShiftExpression	imageList << \"...\"
>301	PrimaryExpression	\"...\"
>302	Identifier	imageList
>303	PrimaryExpression	\"Processing single image \"
>304	Callee	DRWN_LOG_MESSAGE
>305	Identifier	DRWN_LOG_MESSAGE
>306	CompoundStatement	 
>307	ExpressionStatement	 
>308	CallExpression	DRWN_LOG_MESSAGE ( \"...read \" << baseNames . size ( ) << \" images\" )
>309	ArgumentList	\"...read \" << baseNames . size ( ) << \" images\"
>310	Argument	\"...read \" << baseNames . size ( ) << \" images\"
>311	ShiftExpression	\"...read \" << baseNames . size ( ) << \" images\"
>312	ShiftExpression	baseNames . size ( ) << \" images\"
>313	PrimaryExpression	\" images\"
>314	CallExpression	baseNames . size ( )
>315	ArgumentList	 
>316	Callee	baseNames . size
>317	MemberAccess	baseNames . size
>318	Identifier	size
>319	Identifier	baseNames
>320	PrimaryExpression	\"...read \"
>321	Callee	DRWN_LOG_MESSAGE
>322	Identifier	DRWN_LOG_MESSAGE
>323	ExpressionStatement	 
>324	AssignmentExpr	baseNames = drwnReadFile ( imageList )
>325	CallExpression	drwnReadFile ( imageList )
>326	ArgumentList	imageList
>327	Argument	imageList
>328	Identifier	imageList
>329	Callee	drwnReadFile
>330	Identifier	drwnReadFile
>331	Identifier	baseNames
>332	ExpressionStatement	 
>333	CallExpression	DRWN_LOG_MESSAGE ( \"Reading image list from \" << imageList << \"...\" )
>334	ArgumentList	\"Reading image list from \" << imageList << \"...\"
>335	Argument	\"Reading image list from \" << imageList << \"...\"
>336	ShiftExpression	\"Reading image list from \" << imageList << \"...\"
>337	ShiftExpression	imageList << \"...\"
>338	PrimaryExpression	\"...\"
>339	Identifier	imageList
>340	PrimaryExpression	\"Reading image list from \"
>341	Callee	DRWN_LOG_MESSAGE
>342	Identifier	DRWN_LOG_MESSAGE
>343	Condition	 
>344	CallExpression	drwnFileExists ( imageList )
>345	ArgumentList	imageList
>346	Argument	imageList
>347	Identifier	imageList
>348	Callee	drwnFileExists
>349	Identifier	drwnFileExists
>350	IdentifierDeclStatement	 
>351	IdentifierDecl	baseNames
>352	Identifier	baseNames
>353	IdentifierDeclType	vector < string >
>354	IdentifierDeclStatement	 
>355	IdentifierDecl	* imageList = DRWN_CMDLINE_ARGV [ 0 ]
>356	AssignmentExpr	* imageList = DRWN_CMDLINE_ARGV [ 0 ]
>357	ArrayIndexing	DRWN_CMDLINE_ARGV [ 0 ]
>358	PrimaryExpression	0
>359	Identifier	DRWN_CMDLINE_ARGV
>360	Identifier	imageList
>361	Identifier	imageList
>362	IdentifierDeclType	const char *
>363	ExpressionStatement	 
>364	CallExpression	drwnCodeProfiler 
>365	ArgumentList	drwnCodeProfiler 
>366	Argument	drwnCodeProfiler 
>367	CallExpression	drwnCodeProfiler 
>368	ArgumentList	\"main\"
>369	Argument	\"main\"
>370	PrimaryExpression	\"main\"
>371	Callee	drwnCodeProfiler 
>372	Identifier	drwnCodeProfiler 
>373	Callee	drwnCodeProfiler 
>374	Identifier	drwnCodeProfiler 
>375	IfStatement	if ( DRWN_CMDLINE_ARGC != 1 )
>376	CompoundStatement	 
>377	ReturnStatement	 
>378	UnaryOp	- 1
>379	PrimaryExpression	1
>380	UnaryOperator	-
>381	ExpressionStatement	 
>382	CallExpression	usage ( )
>383	ArgumentList	 
>384	Callee	usage
>385	Identifier	usage
>386	Condition	 
>387	EqualityExpression	DRWN_CMDLINE_ARGC != 1
>388	PrimaryExpression	1
>389	Identifier	DRWN_CMDLINE_ARGC
>390	ExpressionStatement	 
>391	CallExpression	DRWN_END_CMDLINE_PROCESSING ( usage ( ) )
>392	ArgumentList	usage ( )
>393	Argument	usage ( )
>394	CallExpression	usage ( )
>395	ArgumentList	 
>396	Callee	usage
>397	Identifier	usage
>398	Callee	DRWN_END_CMDLINE_PROCESSING
>399	Identifier	DRWN_END_CMDLINE_PROCESSING
>400	Statement	 
>401	Statement	 
>402	Statement	 
>403	Statement	 
>404	Statement	 
>405	Statement	 
>406	Statement	 
>407	Statement	 
>408	Statement	 
>409	Statement	 
>410	Statement	 
>411	Statement	 
>412	Statement	 
>413	Statement	 
>414	Statement	 
>415	Statement	 
>416	Statement	 
>417	Statement	 
>418	Statement	 
>419	Statement	 
>420	Statement	 
>421	Statement	 
>422	Statement	 
>423	Statement	 
>424	IdentifierDeclStatement	 
>425	IdentifierDecl	bVisualize = false
>426	AssignmentExpr	bVisualize = false
>427	Identifier	false
>428	Identifier	false
>429	Identifier	bVisualize
>430	IdentifierDeclType	bool
>431	IdentifierDeclStatement	 
>432	IdentifierDecl	* outImageExt = NULL
>433	AssignmentExpr	* outImageExt = NULL
>434	Identifier	NULL
>435	Identifier	NULL
>436	Identifier	outImageExt
>437	IdentifierDeclType	const char *
>438	IdentifierDeclStatement	 
>439	IdentifierDecl	* inLabelExt = \".txt\"
>440	AssignmentExpr	* inLabelExt = \".txt\"
>441	PrimaryExpression	\".txt\"
>442	Identifier	inLabelExt
>443	Identifier	inLabelExt
>444	IdentifierDeclType	const char *
<3=6,5,4
<6=25,21,7
<7=8
<8=20,9
<9=19,10
<10=18,11
<11=17,12
<12=16,13
<13=15,14
<21=22
<22=24,23
<25=26
<26=30,27
<27=29,28
<34=43,42,35
<35=39,36
<36=38,37
<39=41,40
<43=438,431,424,423,422,421,420,419,418,417,416,415,414,413,412,411,410,409,408,407,406,405,404,403,402,401,400,390,375,363,354,350,278,85,63,51,46,44
<44=45
<46=47
<47=49,48
<49=50
<51=52
<52=61,53
<53=54
<54=55
<55=59,56
<56=57
<57=58
<59=60
<61=62
<63=74,64
<64=65
<65=66
<66=72,67
<67=68
<68=69
<69=71,70
<72=73
<74=75
<75=84,76
<76=78,77
<78=80,79
<80=81
<81=83,82
<85=270,259,256,86
<86=236,226,201,185,181,164,127,87
<87=123,88
<88=98,89
<89=90
<90=96,91
<91=94,92
<92=93
<94=95
<96=97
<98=99
<99=122,121,100
<100=120,101
<101=108,102
<102=106,103
<103=104
<104=105
<106=107
<108=116,109
<109=114,110
<110=111
<111=113,112
<114=115
<116=117
<117=119,118
<123=124
<124=126,125
<127=162,128
<128=150,136,129
<129=130
<130=134,131
<131=132
<132=133
<134=135
<136=137
<137=148,138
<138=141,139
<139=140
<141=142
<142=146,143
<143=144
<144=145
<146=147
<148=149
<150=151
<151=160,152
<152=153
<153=154
<154=158,155
<155=156
<156=157
<158=159
<160=161
<162=163
<164=175,165
<165=166
<166=167
<167=174,168
<168=172,169
<169=170
<170=171
<172=173
<175=176
<176=180,177
<177=179,178
<181=182
<182=184,183
<185=186
<186=199,187
<187=195,188
<188=189
<189=191,190
<191=192
<192=194,193
<195=196
<196=198,197
<199=200
<201=202
<202=225,224,203
<203=223,204
<204=211,205
<205=209,206
<206=207
<207=208
<209=210
<211=219,212
<212=217,213
<213=214
<214=216,215
<217=218
<219=220
<220=222,221
<226=227
<227=235,234,228
<228=230,229
<230=231
<231=233,232
<236=237
<237=255,254,238
<238=253,239
<239=249,240
<240=247,243,241
<241=242
<243=244
<244=246,245
<247=248
<249=250
<250=252,251
<256=258,257
<259=260
<260=269,261
<261=268,262
<262=264,263
<264=265
<265=267,266
<270=271
<271=272
<272=277,276,273
<273=275,274
<278=343,306,279
<279=280
<280=295,281
<281=282
<282=291,283
<283=284
<284=285
<285=289,286
<286=287
<287=288
<289=290
<291=292
<292=294,293
<295=296
<296=304,297
<297=298
<298=299
<299=303,300
<300=302,301
<304=305
<306=332,323,307
<307=308
<308=321,309
<309=310
<310=311
<311=320,312
<312=314,313
<314=316,315
<316=317
<317=319,318
<321=322
<323=324
<324=331,325
<325=329,326
<326=327
<327=328
<329=330
<332=333
<333=341,334
<334=335
<335=336
<336=340,337
<337=339,338
<341=342
<343=344
<344=348,345
<345=346
<346=347
<348=349
<350=351
<351=353,352
<354=355
<355=362,361,356
<356=360,357
<357=359,358
<363=364
<364=373,365
<365=366
<366=367
<367=371,368
<368=369
<369=370
<371=372
<373=374
<375=386,376
<376=381,377
<377=378
<378=380,379
<381=382
<382=384,383
<384=385
<386=387
<387=389,388
<390=391
<391=398,392
<392=393
<393=394
<394=396,395
<396=397
<398=399
<424=425
<425=430,429,426
<426=428,427
<431=432
<432=437,436,433
<433=435,434
<438=439
<439=444,443,440
<440=442,441
