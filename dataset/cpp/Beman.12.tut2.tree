>3	FunctionDef	main (int argc , char * argv [ ])
>4	ParameterList	int argc , char * argv [ ]
>5	Parameter	 
>6	Identifier	argv
>7	ParameterType	char * [ ]
>8	Parameter	 
>9	Identifier	argc
>10	ParameterType	int
>11	ReturnType	int
>12	CompoundStatement	 
>13	ReturnStatement	 
>14	PrimaryExpression	0
>15	IfStatement	if ( exists ( p ) )
>16	ElseStatement	else
>17	ExpressionStatement	 
>18	ShiftExpression	cout << p << \" does not exist\n\"
>19	ShiftExpression	p << \" does not exist\n\"
>20	PrimaryExpression	\" does not exist\n\"
>21	Identifier	p
>22	Identifier	cout
>23	CompoundStatement	 
>24	IfStatement	if ( is_regular_file ( p ) )
>25	ElseStatement	else
>26	IfStatement	if ( is_directory ( p ) )
>27	ElseStatement	else
>28	ExpressionStatement	 
>29	ShiftExpression	cout << p << \" exists, but is neither a regular file nor a directory\n\"
>30	ShiftExpression	p << \" exists, but is neither a regular file nor a directory\n\"
>31	PrimaryExpression	\" exists, but is neither a regular file nor a directory\n\"
>32	Identifier	p
>33	Identifier	cout
>34	ExpressionStatement	 
>35	ShiftExpression	cout << p << \" is a directory\n\"
>36	ShiftExpression	p << \" is a directory\n\"
>37	PrimaryExpression	\" is a directory\n\"
>38	Identifier	p
>39	Identifier	cout
>40	Condition	 
>41	CallExpression	is_directory ( p )
>42	ArgumentList	p
>43	Argument	p
>44	Identifier	p
>45	Callee	is_directory
>46	Identifier	is_directory
>47	ExpressionStatement	 
>48	ShiftExpression	cout << p << \" size is \" << file_size ( p ) << '\n'
>49	ShiftExpression	p << \" size is \" << file_size ( p ) << '\n'
>50	ShiftExpression	\" size is \" << file_size ( p ) << '\n'
>51	ShiftExpression	file_size ( p ) << '\n'
>52	PrimaryExpression	'\n'
>53	CallExpression	file_size ( p )
>54	ArgumentList	p
>55	Argument	p
>56	Identifier	p
>57	Callee	file_size
>58	Identifier	file_size
>59	PrimaryExpression	\" size is \"
>60	Identifier	p
>61	Identifier	cout
>62	Condition	 
>63	CallExpression	is_regular_file ( p )
>64	ArgumentList	p
>65	Argument	p
>66	Identifier	p
>67	Callee	is_regular_file
>68	Identifier	is_regular_file
>69	Condition	 
>70	CallExpression	exists ( p )
>71	ArgumentList	p
>72	Argument	p
>73	Identifier	p
>74	Callee	exists
>75	Identifier	exists
>76	IdentifierDeclStatement	 
>77	IdentifierDecl	p ( argv [ 1 ] )
>78	ArrayIndexing	argv [ 1 ]
>79	PrimaryExpression	1
>80	Identifier	argv
>81	Identifier	p
>82	IdentifierDeclType	path
>83	IfStatement	if ( argc < 2 )
>84	CompoundStatement	 
>85	ReturnStatement	 
>86	PrimaryExpression	1
>87	ExpressionStatement	 
>88	ShiftExpression	cout << \"Usage
>89	PrimaryExpression	\"Usage
>90	Identifier	cout
>91	Condition	 
>92	RelationalExpression	argc < 2
>93	PrimaryExpression	2
>94	Identifier	argc
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=83,76,15,13
<13=14
<15=69,23,16
<16=17
<17=18
<18=22,19
<19=21,20
<23=24
<24=62,47,25
<25=26
<26=40,34,27
<27=28
<28=29
<29=33,30
<30=32,31
<34=35
<35=39,36
<36=38,37
<40=41
<41=45,42
<42=43
<43=44
<45=46
<47=48
<48=61,49
<49=60,50
<50=59,51
<51=53,52
<53=57,54
<54=55
<55=56
<57=58
<62=63
<63=67,64
<64=65
<65=66
<67=68
<69=70
<70=74,71
<71=72
<72=73
<74=75
<76=77
<77=82,81,78
<78=80,79
<83=91,84
<84=87,85
<85=86
<87=88
<88=90,89
<91=92
<92=94,93
