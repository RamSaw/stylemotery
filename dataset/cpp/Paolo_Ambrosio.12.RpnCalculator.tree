>6	FunctionDef	push (string arg)
>7	ParameterList	string arg
>8	Parameter	 
>9	Identifier	arg
>10	ParameterType	string
>11	ReturnType	void
>12	CompoundStatement	 
>13	IfStatement	if ( arg == \"+\" )
>14	ElseStatement	else
>15	IfStatement	if ( arg == \"-\" )
>16	ElseStatement	else
>17	IfStatement	if ( arg == \"*\" )
>18	ElseStatement	else
>19	IfStatement	if ( arg == \"/\" )
>20	ElseStatement	else
>21	CompoundStatement	 
>22	ExpressionStatement	 
>23	CallExpression	push ( value )
>24	ArgumentList	value
>25	Argument	value
>26	Identifier	value
>27	Callee	push
>28	Identifier	push
>29	IdentifierDeclStatement	 
>30	IdentifierDecl	value = boost 
>31	AssignmentExpr	value = boost 
>32	RelationalExpression	boost 
>33	RelationalExpression	double > ( arg )
>34	Identifier	arg
>35	Identifier	double
>36	Identifier	boost 
>37	Identifier	value
>38	Identifier	value
>39	IdentifierDeclType	double
>40	CompoundStatement	 
>41	ExpressionStatement	 
>42	CallExpression	push ( pop ( ) - denominator )
>43	ArgumentList	pop ( ) - denominator
>44	Argument	pop ( ) - denominator
>45	AdditiveExpression	pop ( ) - denominator
>46	Identifier	denominator
>47	CallExpression	pop ( )
>48	ArgumentList	 
>49	Callee	pop
>50	Identifier	pop
>51	Callee	push
>52	Identifier	push
>53	IdentifierDeclStatement	 
>54	IdentifierDecl	denominator = pop ( )
>55	AssignmentExpr	denominator = pop ( )
>56	CallExpression	pop ( )
>57	ArgumentList	 
>58	Callee	pop
>59	Identifier	pop
>60	Identifier	denominator
>61	Identifier	denominator
>62	IdentifierDeclType	double
>63	Condition	 
>64	EqualityExpression	arg == \"/\"
>65	PrimaryExpression	\"/\"
>66	Identifier	arg
>67	CompoundStatement	 
>68	ExpressionStatement	 
>69	CallExpression	push ( pop ( ) * pop ( ) )
>70	ArgumentList	pop ( ) * pop ( )
>71	Argument	pop ( ) * pop ( )
>72	MultiplicativeExpression	pop ( ) * pop ( )
>73	CallExpression	pop ( )
>74	ArgumentList	 
>75	Callee	pop
>76	Identifier	pop
>77	CallExpression	pop ( )
>78	ArgumentList	 
>79	Callee	pop
>80	Identifier	pop
>81	Callee	push
>82	Identifier	push
>83	Condition	 
>84	EqualityExpression	arg == \"*\"
>85	PrimaryExpression	\"*\"
>86	Identifier	arg
>87	CompoundStatement	 
>88	ExpressionStatement	 
>89	CallExpression	push ( pop ( ) - subtrahend )
>90	ArgumentList	pop ( ) - subtrahend
>91	Argument	pop ( ) - subtrahend
>92	AdditiveExpression	pop ( ) - subtrahend
>93	Identifier	subtrahend
>94	CallExpression	pop ( )
>95	ArgumentList	 
>96	Callee	pop
>97	Identifier	pop
>98	Callee	push
>99	Identifier	push
>100	IdentifierDeclStatement	 
>101	IdentifierDecl	subtrahend = pop ( )
>102	AssignmentExpr	subtrahend = pop ( )
>103	CallExpression	pop ( )
>104	ArgumentList	 
>105	Callee	pop
>106	Identifier	pop
>107	Identifier	subtrahend
>108	Identifier	subtrahend
>109	IdentifierDeclType	double
>110	Condition	 
>111	EqualityExpression	arg == \"-\"
>112	PrimaryExpression	\"-\"
>113	Identifier	arg
>114	CompoundStatement	 
>115	ExpressionStatement	 
>116	CallExpression	push ( pop ( ) + pop ( ) )
>117	ArgumentList	pop ( ) + pop ( )
>118	Argument	pop ( ) + pop ( )
>119	AdditiveExpression	pop ( ) + pop ( )
>120	CallExpression	pop ( )
>121	ArgumentList	 
>122	Callee	pop
>123	Identifier	pop
>124	CallExpression	pop ( )
>125	ArgumentList	 
>126	Callee	pop
>127	Identifier	pop
>128	Callee	push
>129	Identifier	push
>130	Condition	 
>131	EqualityExpression	arg == \"+\"
>132	PrimaryExpression	\"+\"
>133	Identifier	arg
>144	FunctionDef	pi ()
>145	ParameterList	 
>146	ReturnType	void
>147	CompoundStatement	 
>148	ExpressionStatement	 
>149	Statement	 
>150	Statement	 
>151	Statement	 
>152	Statement	 
>153	Statement	 
>154	Statement	 
>155	Statement	 
>156	Statement	 
>157	Statement	 
>158	Statement	 
>159	Statement	 
>160	Statement	 
>161	Statement	 
>162	Statement	 
>163	Statement	 
>164	Statement	 
>165	Statement	 
>169	FunctionDef	value ()
>170	ParameterList	 
>171	ReturnType	double
>172	CompoundStatement	 
>173	ReturnStatement	 
>174	CallExpression	stack . back ( )
>175	ArgumentList	 
>176	Callee	stack . back
>177	MemberAccess	stack . back
>178	Identifier	back
>179	Identifier	stack
>185	FunctionDef	pop ()
>186	ParameterList	 
>187	ReturnType	double
>188	CompoundStatement	 
>189	ReturnStatement	 
>190	Identifier	v
>191	ExpressionStatement	 
>192	CallExpression	stack . pop_back ( )
>193	ArgumentList	 
>194	Callee	stack . pop_back
>195	MemberAccess	stack . pop_back
>196	Identifier	pop_back
>197	Identifier	stack
>198	IdentifierDeclStatement	 
>199	IdentifierDecl	v = stack . back ( )
>200	AssignmentExpr	v = stack . back ( )
>201	CallExpression	stack . back ( )
>202	ArgumentList	 
>203	Callee	stack . back
>204	MemberAccess	stack . back
>205	Identifier	back
>206	Identifier	stack
>207	Identifier	v
>208	Identifier	v
>209	IdentifierDeclType	double
>216	FunctionDef	push (double v)
>217	ParameterList	double v
>218	Parameter	 
>219	Identifier	v
>220	ParameterType	double
>221	ReturnType	void
>222	CompoundStatement	 
>223	ExpressionStatement	 
>224	CallExpression	stack . push_back ( v )
>225	ArgumentList	v
>226	Argument	v
>227	Identifier	v
>228	Callee	stack . push_back
>229	MemberAccess	stack . push_back
>230	Identifier	push_back
>231	Identifier	stack
<6=12,11,7
<7=8
<8=10,9
<12=13
<13=130,114,14
<14=15
<15=110,87,16
<16=17
<17=83,67,18
<18=19
<19=63,40,20
<20=21
<21=29,22
<22=23
<23=27,24
<24=25
<25=26
<27=28
<29=30
<30=39,38,31
<31=37,32
<32=36,33
<33=35,34
<40=53,41
<41=42
<42=51,43
<43=44
<44=45
<45=47,46
<47=49,48
<49=50
<51=52
<53=54
<54=62,61,55
<55=60,56
<56=58,57
<58=59
<63=64
<64=66,65
<67=68
<68=69
<69=81,70
<70=71
<71=72
<72=77,73
<73=75,74
<75=76
<77=79,78
<79=80
<81=82
<83=84
<84=86,85
<87=100,88
<88=89
<89=98,90
<90=91
<91=92
<92=94,93
<94=96,95
<96=97
<98=99
<100=101
<101=109,108,102
<102=107,103
<103=105,104
<105=106
<110=111
<111=113,112
<114=115
<115=116
<116=128,117
<117=118
<118=119
<119=124,120
<120=122,121
<122=123
<124=126,125
<126=127
<128=129
<130=131
<131=133,132
<144=147,146,145
<147=165,164,163,162,161,160,159,158,157,156,155,154,153,152,151,150,149,148
<169=172,171,170
<172=173
<173=174
<174=176,175
<176=177
<177=179,178
<185=188,187,186
<188=198,191,189
<189=190
<191=192
<192=194,193
<194=195
<195=197,196
<198=199
<199=209,208,200
<200=207,201
<201=203,202
<203=204
<204=206,205
<216=222,221,217
<217=218
<218=220,219
<222=223
<223=224
<224=228,225
<225=226
<226=227
<228=229
<229=231,230
