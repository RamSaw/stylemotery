>3	FunctionDef	usage ()
>4	ParameterList	 
>5	ReturnType	void
>6	CompoundStatement	 
>7	ExpressionStatement	 
>8	CallExpression	mexPrintf ( \"\n\" )
>9	ArgumentList	\"\n\"
>10	Argument	\"\n\"
>11	PrimaryExpression	\"\n\"
>12	Callee	mexPrintf
>13	Identifier	mexPrintf
>14	ExpressionStatement	 
>15	CallExpression	mexPrintf ( \"USAGE
>16	ArgumentList	\"USAGE
>17	Argument	\"USAGE
>18	PrimaryExpression	\"USAGE
>19	Callee	mexPrintf
>20	Identifier	mexPrintf
>21	ExpressionStatement	 
>22	CallExpression	mexPrintf ( \"\n\" )
>23	ArgumentList	\"\n\"
>24	Argument	\"\n\"
>25	PrimaryExpression	\"\n\"
>26	Callee	mexPrintf
>27	Identifier	mexPrintf
>28	ExpressionStatement	 
>29	CallExpression	mexPrintf ( DRWN_USAGE_HEADER )
>30	ArgumentList	DRWN_USAGE_HEADER
>31	Argument	DRWN_USAGE_HEADER
>32	Identifier	DRWN_USAGE_HEADER
>33	Callee	mexPrintf
>34	Identifier	mexPrintf
>39	FunctionDef	mexFunction (int nlhs , mxArray * plhs [ ] , int nrhs , const mxArray * prhs [ ])
>40	ParameterList	int nlhs , mxArray * plhs [ ] , int nrhs , const mxArray * prhs [ ]
>41	Parameter	 
>42	Identifier	prhs
>43	ParameterType	const mxArray * [ ]
>44	Parameter	 
>45	Identifier	nrhs
>46	ParameterType	int
>47	Parameter	 
>48	Identifier	plhs
>49	ParameterType	mxArray * [ ]
>50	Parameter	 
>51	Identifier	nlhs
>52	ParameterType	int
>53	ReturnType	void
>54	CompoundStatement	 
>55	ExpressionStatement	 
>56	CallExpression	drwnCodeProfiler 
>57	ArgumentList	 
>58	Callee	drwnCodeProfiler 
>59	Identifier	drwnCodeProfiler 
>60	ExpressionStatement	 
>61	CallExpression	drwnCodeProfiler 
>62	ArgumentList	drwnCodeProfiler 
>63	Argument	drwnCodeProfiler 
>64	CallExpression	drwnCodeProfiler 
>65	ArgumentList	\"mex\"
>66	Argument	\"mex\"
>67	PrimaryExpression	\"mex\"
>68	Callee	drwnCodeProfiler 
>69	Identifier	drwnCodeProfiler 
>70	Callee	drwnCodeProfiler 
>71	Identifier	drwnCodeProfiler 
>72	ForStatement	for ( map < string , string > 
>73	CompoundStatement	 
>74	ExpressionStatement	 
>75	CallExpression	DRWN_LOG_VERBOSE ( it -> first << \" = \" << it -> second )
>76	ArgumentList	it -> first << \" = \" << it -> second
>77	Argument	it -> first << \" = \" << it -> second
>78	ShiftExpression	it -> first << \" = \" << it -> second
>79	ShiftExpression	\" = \" << it -> second
>80	PtrMemberAccess	it -> second
>81	Identifier	second
>82	Identifier	it
>83	PrimaryExpression	\" = \"
>84	PtrMemberAccess	it -> first
>85	Identifier	first
>86	Identifier	it
>87	Callee	DRWN_LOG_VERBOSE
>88	Identifier	DRWN_LOG_VERBOSE
>89	UnaryExpression	 
>90	Identifier	it
>91	IncDec	++
>92	Condition	 
>93	EqualityExpression	it != options . end ( )
>94	CallExpression	options . end ( )
>95	ArgumentList	 
>96	Callee	options . end
>97	MemberAccess	options . end
>98	Identifier	end
>99	Identifier	options
>100	Identifier	it
>101	ForInit	 
>102	IdentifierDeclStatement	map < string , string > 
>103	IdentifierDecl	it = options . begin ( )
>104	AssignmentExpr	it = options . begin ( )
>105	CallExpression	options . begin ( )
>106	ArgumentList	 
>107	Callee	options . begin
>108	MemberAccess	options . begin
>109	Identifier	begin
>110	Identifier	options
>111	Identifier	it
>112	Identifier	it
>113	IdentifierDeclType	map < string , string > 
>114	ExpressionStatement	 
>115	CallExpression	drwnCodeProfiler 
>116	ArgumentList	drwnCodeProfiler 
>117	Argument	drwnCodeProfiler 
>118	CallExpression	drwnCodeProfiler 
>119	ArgumentList	\"mex\"
>120	Argument	\"mex\"
>121	PrimaryExpression	\"mex\"
>122	Callee	drwnCodeProfiler 
>123	Identifier	drwnCodeProfiler 
>124	Callee	drwnCodeProfiler 
>125	Identifier	drwnCodeProfiler 
>126	ExpressionStatement	 
>127	AssignmentExpr	drwnCodeProfiler 
>128	EqualityExpression	atoi ( options [ string ( \"profile\" ) ] . c_str ( ) ) != 0
>129	PrimaryExpression	0
>130	CallExpression	atoi ( options [ string ( \"profile\" ) ] . c_str ( ) )
>131	ArgumentList	options [ string ( \"profile\" ) ] . c_str ( )
>132	Argument	options [ string ( \"profile\" ) ] . c_str ( )
>133	CallExpression	options [ string ( \"profile\" ) ] . c_str ( )
>134	ArgumentList	 
>135	Callee	options [ string ( \"profile\" ) ] . c_str
>136	MemberAccess	options [ string ( \"profile\" ) ] . c_str
>137	Identifier	c_str
>138	ArrayIndexing	options [ string ( \"profile\" ) ]
>139	CallExpression	string ( \"profile\" )
>140	ArgumentList	\"profile\"
>141	Argument	\"profile\"
>142	PrimaryExpression	\"profile\"
>143	Callee	string
>144	Identifier	string
>145	Identifier	options
>146	Callee	atoi
>147	Identifier	atoi
>148	Identifier	drwnCodeProfiler 
>149	IfStatement	if ( atoi ( options [ string ( \"verbose\" ) ] . c_str ( ) ) != 0 )
>150	CompoundStatement	 
>151	ExpressionStatement	 
>152	CallExpression	drwnLogger 
>153	ArgumentList	DRWN_LL_VERBOSE
>154	Argument	DRWN_LL_VERBOSE
>155	Identifier	DRWN_LL_VERBOSE
>156	Callee	drwnLogger 
>157	Identifier	drwnLogger 
>158	Condition	 
>159	EqualityExpression	atoi ( options [ string ( \"verbose\" ) ] . c_str ( ) ) != 0
>160	PrimaryExpression	0
>161	CallExpression	atoi ( options [ string ( \"verbose\" ) ] . c_str ( ) )
>162	ArgumentList	options [ string ( \"verbose\" ) ] . c_str ( )
>163	Argument	options [ string ( \"verbose\" ) ] . c_str ( )
>164	CallExpression	options [ string ( \"verbose\" ) ] . c_str ( )
>165	ArgumentList	 
>166	Callee	options [ string ( \"verbose\" ) ] . c_str
>167	MemberAccess	options [ string ( \"verbose\" ) ] . c_str
>168	Identifier	c_str
>169	ArrayIndexing	options [ string ( \"verbose\" ) ]
>170	CallExpression	string ( \"verbose\" )
>171	ArgumentList	\"verbose\"
>172	Argument	\"verbose\"
>173	PrimaryExpression	\"verbose\"
>174	Callee	string
>175	Identifier	string
>176	Identifier	options
>177	Callee	atoi
>178	Identifier	atoi
>179	IfStatement	if ( nrhs == 2 )
>180	CompoundStatement	 
>181	ExpressionStatement	 
>182	CallExpression	drwnMatlabUtils 
>183	ArgumentList	prhs [ 1 ]
>184	Argument	options
>185	Identifier	options
>186	Argument	prhs [ 1 ]
>187	ArrayIndexing	prhs [ 1 ]
>188	PrimaryExpression	1
>189	Identifier	prhs
>190	Callee	drwnMatlabUtils 
>191	Identifier	drwnMatlabUtils 
>192	Condition	 
>193	EqualityExpression	nrhs == 2
>194	PrimaryExpression	2
>195	Identifier	nrhs
>196	ExpressionStatement	 
>197	AssignmentExpr	options [ string ( \"profile\" ) ] = string ( \"0\" )
>198	CallExpression	string ( \"0\" )
>199	ArgumentList	\"0\"
>200	Argument	\"0\"
>201	PrimaryExpression	\"0\"
>202	Callee	string
>203	Identifier	string
>204	ArrayIndexing	options [ string ( \"profile\" ) ]
>205	CallExpression	string ( \"profile\" )
>206	ArgumentList	\"profile\"
>207	Argument	\"profile\"
>208	PrimaryExpression	\"profile\"
>209	Callee	string
>210	Identifier	string
>211	Identifier	options
>212	ExpressionStatement	 
>213	AssignmentExpr	options [ string ( \"verbose\" ) ] = string ( \"0\" )
>214	CallExpression	string ( \"0\" )
>215	ArgumentList	\"0\"
>216	Argument	\"0\"
>217	PrimaryExpression	\"0\"
>218	Callee	string
>219	Identifier	string
>220	ArrayIndexing	options [ string ( \"verbose\" ) ]
>221	CallExpression	string ( \"verbose\" )
>222	ArgumentList	\"verbose\"
>223	Argument	\"verbose\"
>224	PrimaryExpression	\"verbose\"
>225	Callee	string
>226	Identifier	string
>227	Identifier	options
>228	IdentifierDeclStatement	 
>229	IdentifierDecl	options
>230	Identifier	options
>231	IdentifierDeclType	map < string , string >
>232	IfStatement	if ( ( nrhs != 1 ) && ( nrhs != 2 ) )
>233	CompoundStatement	 
>234	ExpressionStatement	 
>235	CallExpression	mexErrMsgTxt ( \"incorrect number of input arguments\" )
>236	ArgumentList	\"incorrect number of input arguments\"
>237	Argument	\"incorrect number of input arguments\"
>238	PrimaryExpression	\"incorrect number of input arguments\"
>239	Callee	mexErrMsgTxt
>240	Identifier	mexErrMsgTxt
>241	ExpressionStatement	 
>242	CallExpression	usage ( )
>243	ArgumentList	 
>244	Callee	usage
>245	Identifier	usage
>246	Condition	 
>247	AndExpression	( nrhs != 1 ) && ( nrhs != 2 )
>248	EqualityExpression	nrhs != 2
>249	PrimaryExpression	2
>250	Identifier	nrhs
>251	EqualityExpression	nrhs != 1
>252	PrimaryExpression	1
>253	Identifier	nrhs
>254	IfStatement	if ( nrhs == 0 )
>255	CompoundStatement	 
>256	ReturnStatement	 
>257	ExpressionStatement	 
>258	CallExpression	usage ( )
>259	ArgumentList	 
>260	Callee	usage
>261	Identifier	usage
>262	Condition	 
>263	EqualityExpression	nrhs == 0
>264	PrimaryExpression	0
>265	Identifier	nrhs
>266	ExpressionStatement	 
>267	CallExpression	drwnMatlabUtils 
>268	ArgumentList	 
>269	Callee	drwnMatlabUtils 
>270	Identifier	drwnMatlabUtils 
<3=6,5,4
<6=28,21,14,7
<7=8
<8=12,9
<9=10
<10=11
<12=13
<14=15
<15=19,16
<16=17
<17=18
<19=20
<21=22
<22=26,23
<23=24
<24=25
<26=27
<28=29
<29=33,30
<30=31
<31=32
<33=34
<39=54,53,40
<40=50,47,44,41
<41=43,42
<44=46,45
<47=49,48
<50=52,51
<54=266,254,232,228,212,196,179,149,126,114,72,60,55
<55=56
<56=58,57
<58=59
<60=61
<61=70,62
<62=63
<63=64
<64=68,65
<65=66
<66=67
<68=69
<70=71
<72=101,92,89,73
<73=74
<74=75
<75=87,76
<76=77
<77=78
<78=84,79
<79=83,80
<80=82,81
<84=86,85
<87=88
<89=91,90
<92=93
<93=100,94
<94=96,95
<96=97
<97=99,98
<101=102
<102=103
<103=113,112,104
<104=111,105
<105=107,106
<107=108
<108=110,109
<114=115
<115=124,116
<116=117
<117=118
<118=122,119
<119=120
<120=121
<122=123
<124=125
<126=127
<127=148,128
<128=130,129
<130=146,131
<131=132
<132=133
<133=135,134
<135=136
<136=138,137
<138=145,139
<139=143,140
<140=141
<141=142
<143=144
<146=147
<149=158,150
<150=151
<151=152
<152=156,153
<153=154
<154=155
<156=157
<158=159
<159=161,160
<161=177,162
<162=163
<163=164
<164=166,165
<166=167
<167=169,168
<169=176,170
<170=174,171
<171=172
<172=173
<174=175
<177=178
<179=192,180
<180=181
<181=182
<182=190,183
<183=186,184
<184=185
<186=187
<187=189,188
<190=191
<192=193
<193=195,194
<196=197
<197=204,198
<198=202,199
<199=200
<200=201
<202=203
<204=211,205
<205=209,206
<206=207
<207=208
<209=210
<212=213
<213=220,214
<214=218,215
<215=216
<216=217
<218=219
<220=227,221
<221=225,222
<222=223
<223=224
<225=226
<228=229
<229=231,230
<232=246,233
<233=241,234
<234=235
<235=239,236
<236=237
<237=238
<239=240
<241=242
<242=244,243
<244=245
<246=247
<247=251,248
<248=250,249
<251=253,252
<254=262,255
<255=257,256
<257=258
<258=260,259
<260=261
<262=263
<263=265,264
<266=267
<267=269,268
<269=270
