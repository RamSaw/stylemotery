>7	FunctionDef	print_help ()
>8	ParameterList	 
>9	ReturnType	void
>10	CompoundStatement	 
>11	ExpressionStatement	 
>12	ShiftExpression	std 
>13	ShiftExpression	\"osmium_serdump OSMFILE DIR\n\" << \"Serialize content of OSMFILE into data file in DIR.\n\" << \"\nOptions
>14	ShiftExpression	\"Serialize content of OSMFILE into data file in DIR.\n\" << \"\nOptions
>15	ShiftExpression	\"\nOptions
>16	PrimaryExpression	\"  -h, --help       This help message\n\"
>17	PrimaryExpression	\"\nOptions
>18	PrimaryExpression	\"Serialize content of OSMFILE into data file in DIR.\n\"
>19	PrimaryExpression	\"osmium_serdump OSMFILE DIR\n\"
>20	Identifier	std 
>24	FunctionDef	main (int argc , char * argv [ ])
>25	ParameterList	int argc , char * argv [ ]
>26	Parameter	 
>27	Identifier	argv
>28	ParameterType	char * [ ]
>29	Parameter	 
>30	Identifier	argc
>31	ParameterType	int
>32	ReturnType	int
>33	CompoundStatement	 
>34	CompoundStatement	 
>35	ExpressionStatement	 
>36	CallExpression	close ( fd )
>37	ArgumentList	fd
>38	Argument	fd
>39	Identifier	fd
>40	Callee	close
>41	Identifier	close
>42	ExpressionStatement	 
>43	CallExpression	map_relation2relation . dump_as_list ( fd )
>44	ArgumentList	fd
>45	Argument	fd
>46	Identifier	fd
>47	Callee	map_relation2relation . dump_as_list
>48	MemberAccess	map_relation2relation . dump_as_list
>49	Identifier	dump_as_list
>50	Identifier	map_relation2relation
>51	IfStatement	if ( fd < 0 )
>52	CompoundStatement	 
>53	ExpressionStatement	 
>54	CallExpression	exit ( 2 )
>55	ArgumentList	2
>56	Argument	2
>57	PrimaryExpression	2
>58	Callee	exit
>59	Identifier	exit
>60	ExpressionStatement	 
>61	ShiftExpression	std 
>62	ShiftExpression	\"Can't open rel->rel map file '\" << index_file << \"'
>63	ShiftExpression	index_file << \"'
>64	ShiftExpression	\"'
>65	ShiftExpression	strerror ( errno ) << \"\n\"
>66	PrimaryExpression	\"\n\"
>67	CallExpression	strerror ( errno )
>68	ArgumentList	errno
>69	Argument	errno
>70	Identifier	errno
>71	Callee	strerror
>72	Identifier	strerror
>73	PrimaryExpression	\"'
>74	Identifier	index_file
>75	PrimaryExpression	\"Can't open rel->rel map file '\"
>76	Identifier	std 
>77	Condition	 
>78	RelationalExpression	fd < 0
>79	PrimaryExpression	0
>80	Identifier	fd
>81	ExpressionStatement	 
>82	CallExpression	open ( index_file . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0666 )
>83	ArgumentList	index_file . c_str ( )
>84	Argument	0666
>85	PrimaryExpression	0666
>86	Argument	O_WRONLY | O_CREAT | O_TRUNC
>87	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC
>88	InclusiveOrExpression	O_CREAT | O_TRUNC
>89	Identifier	O_TRUNC
>90	Identifier	O_CREAT
>91	Identifier	O_WRONLY
>92	Argument	index_file . c_str ( )
>93	CallExpression	index_file . c_str ( )
>94	ArgumentList	 
>95	Callee	index_file . c_str
>96	MemberAccess	index_file . c_str
>97	Identifier	c_str
>98	Identifier	index_file
>99	Callee	open
>100	Identifier	open
>101	Statement	 
>102	Statement	 
>103	Statement	 
>104	Statement	 
>105	IdentifierDeclStatement	 
>106	IdentifierDecl	index_file ( dir + \"/rel2rel.map\" )
>107	AdditiveExpression	dir + \"/rel2rel.map\"
>108	PrimaryExpression	\"/rel2rel.map\"
>109	Identifier	dir
>110	Identifier	index_file
>111	IdentifierDeclType	std 
>112	ExpressionStatement	 
>113	CallExpression	map_relation2relation . sort ( )
>114	ArgumentList	 
>115	Callee	map_relation2relation . sort
>116	MemberAccess	map_relation2relation . sort
>117	Identifier	sort
>118	Identifier	map_relation2relation
>119	CompoundStatement	 
>120	ExpressionStatement	 
>121	CallExpression	close ( fd )
>122	ArgumentList	fd
>123	Argument	fd
>124	Identifier	fd
>125	Callee	close
>126	Identifier	close
>127	ExpressionStatement	 
>128	CallExpression	map_way2relation . dump_as_list ( fd )
>129	ArgumentList	fd
>130	Argument	fd
>131	Identifier	fd
>132	Callee	map_way2relation . dump_as_list
>133	MemberAccess	map_way2relation . dump_as_list
>134	Identifier	dump_as_list
>135	Identifier	map_way2relation
>136	IfStatement	if ( fd < 0 )
>137	CompoundStatement	 
>138	ExpressionStatement	 
>139	CallExpression	exit ( 2 )
>140	ArgumentList	2
>141	Argument	2
>142	PrimaryExpression	2
>143	Callee	exit
>144	Identifier	exit
>145	ExpressionStatement	 
>146	ShiftExpression	std 
>147	ShiftExpression	\"Can't open way->rel map file '\" << index_file << \"'
>148	ShiftExpression	index_file << \"'
>149	ShiftExpression	\"'
>150	ShiftExpression	strerror ( errno ) << \"\n\"
>151	PrimaryExpression	\"\n\"
>152	CallExpression	strerror ( errno )
>153	ArgumentList	errno
>154	Argument	errno
>155	Identifier	errno
>156	Callee	strerror
>157	Identifier	strerror
>158	PrimaryExpression	\"'
>159	Identifier	index_file
>160	PrimaryExpression	\"Can't open way->rel map file '\"
>161	Identifier	std 
>162	Condition	 
>163	RelationalExpression	fd < 0
>164	PrimaryExpression	0
>165	Identifier	fd
>166	ExpressionStatement	 
>167	CallExpression	open ( index_file . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0666 )
>168	ArgumentList	index_file . c_str ( )
>169	Argument	0666
>170	PrimaryExpression	0666
>171	Argument	O_WRONLY | O_CREAT | O_TRUNC
>172	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC
>173	InclusiveOrExpression	O_CREAT | O_TRUNC
>174	Identifier	O_TRUNC
>175	Identifier	O_CREAT
>176	Identifier	O_WRONLY
>177	Argument	index_file . c_str ( )
>178	CallExpression	index_file . c_str ( )
>179	ArgumentList	 
>180	Callee	index_file . c_str
>181	MemberAccess	index_file . c_str
>182	Identifier	c_str
>183	Identifier	index_file
>184	Callee	open
>185	Identifier	open
>186	Statement	 
>187	Statement	 
>188	Statement	 
>189	Statement	 
>190	IdentifierDeclStatement	 
>191	IdentifierDecl	index_file ( dir + \"/way2rel.map\" )
>192	AdditiveExpression	dir + \"/way2rel.map\"
>193	PrimaryExpression	\"/way2rel.map\"
>194	Identifier	dir
>195	Identifier	index_file
>196	IdentifierDeclType	std 
>197	ExpressionStatement	 
>198	CallExpression	map_way2relation . sort ( )
>199	ArgumentList	 
>200	Callee	map_way2relation . sort
>201	MemberAccess	map_way2relation . sort
>202	Identifier	sort
>203	Identifier	map_way2relation
>204	CompoundStatement	 
>205	ExpressionStatement	 
>206	CallExpression	close ( fd )
>207	ArgumentList	fd
>208	Argument	fd
>209	Identifier	fd
>210	Callee	close
>211	Identifier	close
>212	ExpressionStatement	 
>213	CallExpression	map_node2relation . dump_as_list ( fd )
>214	ArgumentList	fd
>215	Argument	fd
>216	Identifier	fd
>217	Callee	map_node2relation . dump_as_list
>218	MemberAccess	map_node2relation . dump_as_list
>219	Identifier	dump_as_list
>220	Identifier	map_node2relation
>221	IfStatement	if ( fd < 0 )
>222	CompoundStatement	 
>223	ExpressionStatement	 
>224	CallExpression	exit ( 2 )
>225	ArgumentList	2
>226	Argument	2
>227	PrimaryExpression	2
>228	Callee	exit
>229	Identifier	exit
>230	ExpressionStatement	 
>231	ShiftExpression	std 
>232	ShiftExpression	\"Can't open node->rel map file '\" << index_file << \"'
>233	ShiftExpression	index_file << \"'
>234	ShiftExpression	\"'
>235	ShiftExpression	strerror ( errno ) << \"\n\"
>236	PrimaryExpression	\"\n\"
>237	CallExpression	strerror ( errno )
>238	ArgumentList	errno
>239	Argument	errno
>240	Identifier	errno
>241	Callee	strerror
>242	Identifier	strerror
>243	PrimaryExpression	\"'
>244	Identifier	index_file
>245	PrimaryExpression	\"Can't open node->rel map file '\"
>246	Identifier	std 
>247	Condition	 
>248	RelationalExpression	fd < 0
>249	PrimaryExpression	0
>250	Identifier	fd
>251	ExpressionStatement	 
>252	CallExpression	open ( index_file . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0666 )
>253	ArgumentList	index_file . c_str ( )
>254	Argument	0666
>255	PrimaryExpression	0666
>256	Argument	O_WRONLY | O_CREAT | O_TRUNC
>257	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC
>258	InclusiveOrExpression	O_CREAT | O_TRUNC
>259	Identifier	O_TRUNC
>260	Identifier	O_CREAT
>261	Identifier	O_WRONLY
>262	Argument	index_file . c_str ( )
>263	CallExpression	index_file . c_str ( )
>264	ArgumentList	 
>265	Callee	index_file . c_str
>266	MemberAccess	index_file . c_str
>267	Identifier	c_str
>268	Identifier	index_file
>269	Callee	open
>270	Identifier	open
>271	Statement	 
>272	Statement	 
>273	Statement	 
>274	Statement	 
>275	IdentifierDeclStatement	 
>276	IdentifierDecl	index_file ( dir + \"/node2rel.map\" )
>277	AdditiveExpression	dir + \"/node2rel.map\"
>278	PrimaryExpression	\"/node2rel.map\"
>279	Identifier	dir
>280	Identifier	index_file
>281	IdentifierDeclType	std 
>282	ExpressionStatement	 
>283	CallExpression	map_node2relation . sort ( )
>284	ArgumentList	 
>285	Callee	map_node2relation . sort
>286	MemberAccess	map_node2relation . sort
>287	Identifier	sort
>288	Identifier	map_node2relation
>289	CompoundStatement	 
>290	ExpressionStatement	 
>291	CallExpression	close ( fd )
>292	ArgumentList	fd
>293	Argument	fd
>294	Identifier	fd
>295	Callee	close
>296	Identifier	close
>297	ExpressionStatement	 
>298	CallExpression	map_node2way . dump_as_list ( fd )
>299	ArgumentList	fd
>300	Argument	fd
>301	Identifier	fd
>302	Callee	map_node2way . dump_as_list
>303	MemberAccess	map_node2way . dump_as_list
>304	Identifier	dump_as_list
>305	Identifier	map_node2way
>306	IfStatement	if ( fd < 0 )
>307	CompoundStatement	 
>308	ExpressionStatement	 
>309	CallExpression	exit ( 2 )
>310	ArgumentList	2
>311	Argument	2
>312	PrimaryExpression	2
>313	Callee	exit
>314	Identifier	exit
>315	ExpressionStatement	 
>316	ShiftExpression	std 
>317	ShiftExpression	\"Can't open node->way map file '\" << index_file << \"'
>318	ShiftExpression	index_file << \"'
>319	ShiftExpression	\"'
>320	ShiftExpression	strerror ( errno ) << \"\n\"
>321	PrimaryExpression	\"\n\"
>322	CallExpression	strerror ( errno )
>323	ArgumentList	errno
>324	Argument	errno
>325	Identifier	errno
>326	Callee	strerror
>327	Identifier	strerror
>328	PrimaryExpression	\"'
>329	Identifier	index_file
>330	PrimaryExpression	\"Can't open node->way map file '\"
>331	Identifier	std 
>332	Condition	 
>333	RelationalExpression	fd < 0
>334	PrimaryExpression	0
>335	Identifier	fd
>336	ExpressionStatement	 
>337	CallExpression	open ( index_file . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0666 )
>338	ArgumentList	index_file . c_str ( )
>339	Argument	0666
>340	PrimaryExpression	0666
>341	Argument	O_WRONLY | O_CREAT | O_TRUNC
>342	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC
>343	InclusiveOrExpression	O_CREAT | O_TRUNC
>344	Identifier	O_TRUNC
>345	Identifier	O_CREAT
>346	Identifier	O_WRONLY
>347	Argument	index_file . c_str ( )
>348	CallExpression	index_file . c_str ( )
>349	ArgumentList	 
>350	Callee	index_file . c_str
>351	MemberAccess	index_file . c_str
>352	Identifier	c_str
>353	Identifier	index_file
>354	Callee	open
>355	Identifier	open
>356	Statement	 
>357	Statement	 
>358	Statement	 
>359	Statement	 
>360	IdentifierDeclStatement	 
>361	IdentifierDecl	index_file ( dir + \"/node2way.map\" )
>362	AdditiveExpression	dir + \"/node2way.map\"
>363	PrimaryExpression	\"/node2way.map\"
>364	Identifier	dir
>365	Identifier	index_file
>366	IdentifierDeclType	std 
>367	ExpressionStatement	 
>368	CallExpression	map_node2way . sort ( )
>369	ArgumentList	 
>370	Callee	map_node2way . sort
>371	MemberAccess	map_node2way . sort
>372	Identifier	sort
>373	Identifier	map_node2way
>374	CompoundStatement	 
>375	ExpressionStatement	 
>376	CallExpression	close ( fd )
>377	ArgumentList	fd
>378	Argument	fd
>379	Identifier	fd
>380	Callee	close
>381	Identifier	close
>382	ExpressionStatement	 
>383	CallExpression	relation_index . dump_as_list ( fd )
>384	ArgumentList	fd
>385	Argument	fd
>386	Identifier	fd
>387	Callee	relation_index . dump_as_list
>388	MemberAccess	relation_index . dump_as_list
>389	Identifier	dump_as_list
>390	Identifier	relation_index
>391	IfStatement	if ( fd < 0 )
>392	CompoundStatement	 
>393	ExpressionStatement	 
>394	CallExpression	exit ( 2 )
>395	ArgumentList	2
>396	Argument	2
>397	PrimaryExpression	2
>398	Callee	exit
>399	Identifier	exit
>400	ExpressionStatement	 
>401	ShiftExpression	std 
>402	ShiftExpression	\"Can't open relations index file '\" << index_file << \"'
>403	ShiftExpression	index_file << \"'
>404	ShiftExpression	\"'
>405	ShiftExpression	strerror ( errno ) << \"\n\"
>406	PrimaryExpression	\"\n\"
>407	CallExpression	strerror ( errno )
>408	ArgumentList	errno
>409	Argument	errno
>410	Identifier	errno
>411	Callee	strerror
>412	Identifier	strerror
>413	PrimaryExpression	\"'
>414	Identifier	index_file
>415	PrimaryExpression	\"Can't open relations index file '\"
>416	Identifier	std 
>417	Condition	 
>418	RelationalExpression	fd < 0
>419	PrimaryExpression	0
>420	Identifier	fd
>421	ExpressionStatement	 
>422	CallExpression	open ( index_file . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0666 )
>423	ArgumentList	index_file . c_str ( )
>424	Argument	0666
>425	PrimaryExpression	0666
>426	Argument	O_WRONLY | O_CREAT | O_TRUNC
>427	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC
>428	InclusiveOrExpression	O_CREAT | O_TRUNC
>429	Identifier	O_TRUNC
>430	Identifier	O_CREAT
>431	Identifier	O_WRONLY
>432	Argument	index_file . c_str ( )
>433	CallExpression	index_file . c_str ( )
>434	ArgumentList	 
>435	Callee	index_file . c_str
>436	MemberAccess	index_file . c_str
>437	Identifier	c_str
>438	Identifier	index_file
>439	Callee	open
>440	Identifier	open
>441	Statement	 
>442	Statement	 
>443	Statement	 
>444	Statement	 
>445	IdentifierDeclStatement	 
>446	IdentifierDecl	index_file ( dir + \"/relations.idx\" )
>447	AdditiveExpression	dir + \"/relations.idx\"
>448	PrimaryExpression	\"/relations.idx\"
>449	Identifier	dir
>450	Identifier	index_file
>451	IdentifierDeclType	std 
>452	CompoundStatement	 
>453	ExpressionStatement	 
>454	CallExpression	close ( fd )
>455	ArgumentList	fd
>456	Argument	fd
>457	Identifier	fd
>458	Callee	close
>459	Identifier	close
>460	ExpressionStatement	 
>461	CallExpression	way_index . dump_as_list ( fd )
>462	ArgumentList	fd
>463	Argument	fd
>464	Identifier	fd
>465	Callee	way_index . dump_as_list
>466	MemberAccess	way_index . dump_as_list
>467	Identifier	dump_as_list
>468	Identifier	way_index
>469	IfStatement	if ( fd < 0 )
>470	CompoundStatement	 
>471	ExpressionStatement	 
>472	CallExpression	exit ( 2 )
>473	ArgumentList	2
>474	Argument	2
>475	PrimaryExpression	2
>476	Callee	exit
>477	Identifier	exit
>478	ExpressionStatement	 
>479	ShiftExpression	std 
>480	ShiftExpression	\"Can't open ways index file '\" << index_file << \"'
>481	ShiftExpression	index_file << \"'
>482	ShiftExpression	\"'
>483	ShiftExpression	strerror ( errno ) << \"\n\"
>484	PrimaryExpression	\"\n\"
>485	CallExpression	strerror ( errno )
>486	ArgumentList	errno
>487	Argument	errno
>488	Identifier	errno
>489	Callee	strerror
>490	Identifier	strerror
>491	PrimaryExpression	\"'
>492	Identifier	index_file
>493	PrimaryExpression	\"Can't open ways index file '\"
>494	Identifier	std 
>495	Condition	 
>496	RelationalExpression	fd < 0
>497	PrimaryExpression	0
>498	Identifier	fd
>499	ExpressionStatement	 
>500	CallExpression	open ( index_file . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0666 )
>501	ArgumentList	index_file . c_str ( )
>502	Argument	0666
>503	PrimaryExpression	0666
>504	Argument	O_WRONLY | O_CREAT | O_TRUNC
>505	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC
>506	InclusiveOrExpression	O_CREAT | O_TRUNC
>507	Identifier	O_TRUNC
>508	Identifier	O_CREAT
>509	Identifier	O_WRONLY
>510	Argument	index_file . c_str ( )
>511	CallExpression	index_file . c_str ( )
>512	ArgumentList	 
>513	Callee	index_file . c_str
>514	MemberAccess	index_file . c_str
>515	Identifier	c_str
>516	Identifier	index_file
>517	Callee	open
>518	Identifier	open
>519	Statement	 
>520	Statement	 
>521	Statement	 
>522	Statement	 
>523	IdentifierDeclStatement	 
>524	IdentifierDecl	index_file ( dir + \"/ways.idx\" )
>525	AdditiveExpression	dir + \"/ways.idx\"
>526	PrimaryExpression	\"/ways.idx\"
>527	Identifier	dir
>528	Identifier	index_file
>529	IdentifierDeclType	std 
>530	CompoundStatement	 
>531	ExpressionStatement	 
>532	CallExpression	close ( fd )
>533	ArgumentList	fd
>534	Argument	fd
>535	Identifier	fd
>536	Callee	close
>537	Identifier	close
>538	ExpressionStatement	 
>539	CallExpression	node_index . dump_as_list ( fd )
>540	ArgumentList	fd
>541	Argument	fd
>542	Identifier	fd
>543	Callee	node_index . dump_as_list
>544	MemberAccess	node_index . dump_as_list
>545	Identifier	dump_as_list
>546	Identifier	node_index
>547	IfStatement	if ( fd < 0 )
>548	CompoundStatement	 
>549	ExpressionStatement	 
>550	CallExpression	exit ( 2 )
>551	ArgumentList	2
>552	Argument	2
>553	PrimaryExpression	2
>554	Callee	exit
>555	Identifier	exit
>556	ExpressionStatement	 
>557	ShiftExpression	std 
>558	ShiftExpression	\"Can't open nodes index file '\" << index_file << \"'
>559	ShiftExpression	index_file << \"'
>560	ShiftExpression	\"'
>561	ShiftExpression	strerror ( errno ) << \"\n\"
>562	PrimaryExpression	\"\n\"
>563	CallExpression	strerror ( errno )
>564	ArgumentList	errno
>565	Argument	errno
>566	Identifier	errno
>567	Callee	strerror
>568	Identifier	strerror
>569	PrimaryExpression	\"'
>570	Identifier	index_file
>571	PrimaryExpression	\"Can't open nodes index file '\"
>572	Identifier	std 
>573	Condition	 
>574	RelationalExpression	fd < 0
>575	PrimaryExpression	0
>576	Identifier	fd
>577	ExpressionStatement	 
>578	CallExpression	open ( index_file . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0666 )
>579	ArgumentList	index_file . c_str ( )
>580	Argument	0666
>581	PrimaryExpression	0666
>582	Argument	O_WRONLY | O_CREAT | O_TRUNC
>583	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC
>584	InclusiveOrExpression	O_CREAT | O_TRUNC
>585	Identifier	O_TRUNC
>586	Identifier	O_CREAT
>587	Identifier	O_WRONLY
>588	Argument	index_file . c_str ( )
>589	CallExpression	index_file . c_str ( )
>590	ArgumentList	 
>591	Callee	index_file . c_str
>592	MemberAccess	index_file . c_str
>593	Identifier	c_str
>594	Identifier	index_file
>595	Callee	open
>596	Identifier	open
>597	Statement	 
>598	Statement	 
>599	Statement	 
>600	Statement	 
>601	IdentifierDeclStatement	 
>602	IdentifierDecl	index_file ( dir + \"/nodes.idx\" )
>603	AdditiveExpression	dir + \"/nodes.idx\"
>604	PrimaryExpression	\"/nodes.idx\"
>605	Identifier	dir
>606	Identifier	index_file
>607	IdentifierDeclType	std 
>608	ExpressionStatement	 
>609	CallExpression	reader . close ( )
>610	ArgumentList	 
>611	Callee	reader . close
>612	MemberAccess	reader . close
>613	Identifier	close
>614	Identifier	reader
>615	WhileStatement	while ( osmium 
>616	CompoundStatement	 
>617	ExpressionStatement	 
>618	CallExpression	osmium 
>619	ArgumentList	buffer
>620	Argument	object_relations_handler
>621	Identifier	object_relations_handler
>622	Argument	buffer
>623	Identifier	buffer
>624	Callee	osmium 
>625	Identifier	osmium 
>626	ExpressionStatement	 
>627	CallExpression	disk_store_handler ( buffer )
>628	ArgumentList	buffer
>629	Argument	buffer
>630	Identifier	buffer
>631	Callee	disk_store_handler
>632	Identifier	disk_store_handler
>633	Condition	 
>634	CallExpression	reader . read ( )
>635	ArgumentList	 
>636	Callee	reader . read
>637	MemberAccess	reader . read
>638	Identifier	read
>639	Identifier	reader
>640	Identifier	buffer
>641	IdentifierDeclStatement	 
>642	IdentifierDecl	reader ( argv [ 1 ] )
>643	ArrayIndexing	argv [ 1 ]
>644	PrimaryExpression	1
>645	Identifier	argv
>646	Identifier	reader
>647	IdentifierDeclType	osmium 
>648	IdentifierDeclStatement	 
>649	IdentifierDecl	object_relations_handler ( map_node2way , map_node2relation , map_way2relation , map_relation2relation )
>650	Expression	map_node2way , map_node2relation , map_way2relation , map_relation2relation
>651	Expression	map_node2relation , map_way2relation , map_relation2relation
>652	Expression	map_way2relation , map_relation2relation
>653	Identifier	map_relation2relation
>654	Identifier	map_way2relation
>655	Identifier	map_node2relation
>656	Identifier	map_node2way
>657	Identifier	object_relations_handler
>658	IdentifierDeclType	osmium 
>659	IdentifierDeclStatement	 
>660	IdentifierDecl	map_relation2relation
>661	Identifier	map_relation2relation
>662	IdentifierDeclType	map_type
>663	IdentifierDeclStatement	 
>664	IdentifierDecl	map_way2relation
>665	Identifier	map_way2relation
>666	IdentifierDeclType	map_type
>667	IdentifierDeclStatement	 
>668	IdentifierDecl	map_node2relation
>669	Identifier	map_node2relation
>670	IdentifierDeclType	map_type
>671	IdentifierDeclStatement	 
>672	IdentifierDecl	map_node2way
>673	Identifier	map_node2way
>674	IdentifierDeclType	map_type
>675	IdentifierDeclStatement	 
>676	IdentifierDecl	disk_store_handler ( data_fd , node_index , way_index , relation_index )
>677	Expression	data_fd , node_index , way_index , relation_index
>678	Expression	node_index , way_index , relation_index
>679	Expression	way_index , relation_index
>680	Identifier	relation_index
>681	Identifier	way_index
>682	Identifier	node_index
>683	Identifier	data_fd
>684	Identifier	disk_store_handler
>685	IdentifierDeclType	osmium 
>686	IdentifierDeclStatement	 
>687	IdentifierDecl	relation_index
>688	Identifier	relation_index
>689	IdentifierDeclType	offset_index_type
>690	IdentifierDeclStatement	 
>691	IdentifierDecl	way_index
>692	Identifier	way_index
>693	IdentifierDeclType	offset_index_type
>694	IdentifierDeclStatement	 
>695	IdentifierDecl	node_index
>696	Identifier	node_index
>697	IdentifierDeclType	offset_index_type
>698	IfStatement	if ( data_fd < 0 )
>699	CompoundStatement	 
>700	ExpressionStatement	 
>701	CallExpression	exit ( 2 )
>702	ArgumentList	2
>703	Argument	2
>704	PrimaryExpression	2
>705	Callee	exit
>706	Identifier	exit
>707	ExpressionStatement	 
>708	ShiftExpression	std 
>709	ShiftExpression	\"Can't open data file '\" << data_file << \"'
>710	ShiftExpression	data_file << \"'
>711	ShiftExpression	\"'
>712	ShiftExpression	strerror ( errno ) << \"\n\"
>713	PrimaryExpression	\"\n\"
>714	CallExpression	strerror ( errno )
>715	ArgumentList	errno
>716	Argument	errno
>717	Identifier	errno
>718	Callee	strerror
>719	Identifier	strerror
>720	PrimaryExpression	\"'
>721	Identifier	data_file
>722	PrimaryExpression	\"Can't open data file '\"
>723	Identifier	std 
>724	Condition	 
>725	RelationalExpression	data_fd < 0
>726	PrimaryExpression	0
>727	Identifier	data_fd
>728	ExpressionStatement	 
>729	CallExpression	open ( data_file . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0666 )
>730	ArgumentList	data_file . c_str ( )
>731	Argument	0666
>732	PrimaryExpression	0666
>733	Argument	O_WRONLY | O_CREAT | O_TRUNC
>734	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC
>735	InclusiveOrExpression	O_CREAT | O_TRUNC
>736	Identifier	O_TRUNC
>737	Identifier	O_CREAT
>738	Identifier	O_WRONLY
>739	Argument	data_file . c_str ( )
>740	CallExpression	data_file . c_str ( )
>741	ArgumentList	 
>742	Callee	data_file . c_str
>743	MemberAccess	data_file . c_str
>744	Identifier	c_str
>745	Identifier	data_file
>746	Callee	open
>747	Identifier	open
>748	Statement	 
>749	Statement	 
>750	Statement	 
>751	Statement	 
>752	IdentifierDeclStatement	 
>753	IdentifierDecl	data_file ( dir + \"/data.osm.ser\" )
>754	AdditiveExpression	dir + \"/data.osm.ser\"
>755	PrimaryExpression	\"/data.osm.ser\"
>756	Identifier	dir
>757	Identifier	data_file
>758	IdentifierDeclType	std 
>759	IfStatement	if ( result == - 1 && errno != EEXIST )
>760	CompoundStatement	 
>761	ExpressionStatement	 
>762	CallExpression	exit ( 2 )
>763	ArgumentList	2
>764	Argument	2
>765	PrimaryExpression	2
>766	Callee	exit
>767	Identifier	exit
>768	ExpressionStatement	 
>769	ShiftExpression	std 
>770	ShiftExpression	\"Problem creating directory '\" << dir << \"'
>771	ShiftExpression	dir << \"'
>772	ShiftExpression	\"'
>773	ShiftExpression	strerror ( errno ) << \"\n\"
>774	PrimaryExpression	\"\n\"
>775	CallExpression	strerror ( errno )
>776	ArgumentList	errno
>777	Argument	errno
>778	Identifier	errno
>779	Callee	strerror
>780	Identifier	strerror
>781	PrimaryExpression	\"'
>782	Identifier	dir
>783	PrimaryExpression	\"Problem creating directory '\"
>784	Identifier	std 
>785	Condition	 
>786	AndExpression	result == - 1 && errno != EEXIST
>787	EqualityExpression	errno != EEXIST
>788	Identifier	EEXIST
>789	Identifier	errno
>790	EqualityExpression	result == - 1
>791	UnaryOp	- 1
>792	PrimaryExpression	1
>793	UnaryOperator	-
>794	Identifier	result
>795	ExpressionStatement	 
>796	CallExpression	mkdir ( dir . c_str ( ) , 0777 )
>797	ArgumentList	dir . c_str ( )
>798	Argument	0777
>799	PrimaryExpression	0777
>800	Argument	dir . c_str ( )
>801	CallExpression	dir . c_str ( )
>802	ArgumentList	 
>803	Callee	dir . c_str
>804	MemberAccess	dir . c_str
>805	Identifier	c_str
>806	Identifier	dir
>807	Callee	mkdir
>808	Identifier	mkdir
>809	Statement	 
>810	Statement	 
>811	Statement	 
>812	Statement	 
>813	IdentifierDeclStatement	 
>814	IdentifierDecl	dir ( argv [ optind + 1 ] )
>815	ArrayIndexing	argv [ optind + 1 ]
>816	AdditiveExpression	optind + 1
>817	PrimaryExpression	1
>818	Identifier	optind
>819	Identifier	argv
>820	Identifier	dir
>821	IdentifierDeclType	std 
>822	IfStatement	if ( remaining_args != 2 )
>823	CompoundStatement	 
>824	ExpressionStatement	 
>825	CallExpression	exit ( 2 )
>826	ArgumentList	2
>827	Argument	2
>828	PrimaryExpression	2
>829	Callee	exit
>830	Identifier	exit
>831	ExpressionStatement	 
>832	ShiftExpression	std 
>833	ShiftExpression	\"Usage
>834	ShiftExpression	argv [ 0 ] << \" OSMFILE DIR\n\"
>835	PrimaryExpression	\" OSMFILE DIR\n\"
>836	ArrayIndexing	argv [ 0 ]
>837	PrimaryExpression	0
>838	Identifier	argv
>839	PrimaryExpression	\"Usage
>840	Identifier	std 
>841	Condition	 
>842	EqualityExpression	remaining_args != 2
>843	PrimaryExpression	2
>844	Identifier	remaining_args
>845	IdentifierDeclStatement	 
>846	IdentifierDecl	remaining_args = argc - optind
>847	AssignmentExpr	remaining_args = argc - optind
>848	AdditiveExpression	argc - optind
>849	Identifier	optind
>850	Identifier	argc
>851	Identifier	remaining_args
>852	Identifier	remaining_args
>853	IdentifierDeclType	int
>854	WhileStatement	while ( true )
>855	CompoundStatement	 
>856	SwitchStatement	switch ( c )
>857	CompoundStatement	 
>858	ExpressionStatement	 
>859	CallExpression	exit ( 2 )
>860	ArgumentList	2
>861	Argument	2
>862	PrimaryExpression	2
>863	Callee	exit
>864	Identifier	exit
>865	Label	 
>866	Identifier	default
>867	ExpressionStatement	 
>868	CallExpression	exit ( 0 )
>869	ArgumentList	0
>870	Argument	0
>871	PrimaryExpression	0
>872	Callee	exit
>873	Identifier	exit
>874	ExpressionStatement	 
>875	CallExpression	print_help ( )
>876	ArgumentList	 
>877	Callee	print_help
>878	Identifier	print_help
>879	Label	 
>880	Condition	 
>881	Identifier	c
>882	IfStatement	if ( c == - 1 )
>883	CompoundStatement	 
>884	BreakStatement	 
>885	Condition	 
>886	EqualityExpression	c == - 1
>887	UnaryOp	- 1
>888	PrimaryExpression	1
>889	UnaryOperator	-
>890	Identifier	c
>891	IdentifierDeclStatement	 
>892	IdentifierDecl	c = getopt_long ( argc , argv , \"h\" , long_options , 0 )
>893	AssignmentExpr	c = getopt_long ( argc , argv , \"h\" , long_options , 0 )
>894	CallExpression	getopt_long ( argc , argv , \"h\" , long_options , 0 )
>895	ArgumentList	argc
>896	Argument	0
>897	PrimaryExpression	0
>898	Argument	long_options
>899	Identifier	long_options
>900	Argument	\"h\"
>901	PrimaryExpression	\"h\"
>902	Argument	argv
>903	Identifier	argv
>904	Argument	argc
>905	Identifier	argc
>906	Callee	getopt_long
>907	Identifier	getopt_long
>908	Identifier	c
>909	Identifier	c
>910	IdentifierDeclType	int
>911	Condition	 
>912	Identifier	true
>913	IdentifierDeclStatement	 
>914	IdentifierDecl	long_options [ ] = { { \"help\" , no_argument , 0 , 'h' } , { 0 , 0 , 0 , 0 } }
>915	AssignmentExpr	long_options [ ] = { { \"help\" , no_argument , 0 , 'h' } , { 0 , 0 , 0 , 0 } }
>916	InitializerList	\"help\"
>917	InitializerList	0
>918	PrimaryExpression	0
>919	PrimaryExpression	0
>920	PrimaryExpression	0
>921	PrimaryExpression	0
>922	InitializerList	\"help\"
>923	PrimaryExpression	'h'
>924	PrimaryExpression	0
>925	Identifier	no_argument
>926	PrimaryExpression	\"help\"
>927	Identifier	long_options
>928	Identifier	long_options
>929	IdentifierDeclType	struct option [ ]
>930	Statement	 
>931	ExpressionStatement	 
>932	CallExpression	std 
>933	ArgumentList	false
>934	Argument	false
>935	Identifier	false
>936	Callee	std 
>937	Identifier	std 
<7=10,9,8
<10=11
<11=12
<12=20,13
<13=19,14
<14=18,15
<15=17,16
<24=33,32,25
<25=29,26
<26=28,27
<29=31,30
<33=931,930,913,854,845,822,813,812,811,810,809,795,759,752,751,750,749,748,728,698,694,690,686,675,671,667,663,659,648,641,615,608,530,452,374,289,204,119,34
<34=112,105,104,103,102,101,81,51,42,35
<35=36
<36=40,37
<37=38
<38=39
<40=41
<42=43
<43=47,44
<44=45
<45=46
<47=48
<48=50,49
<51=77,52
<52=60,53
<53=54
<54=58,55
<55=56
<56=57
<58=59
<60=61
<61=76,62
<62=75,63
<63=74,64
<64=73,65
<65=67,66
<67=71,68
<68=69
<69=70
<71=72
<77=78
<78=80,79
<81=82
<82=99,83
<83=92,86,84
<84=85
<86=87
<87=91,88
<88=90,89
<92=93
<93=95,94
<95=96
<96=98,97
<99=100
<105=106
<106=111,110,107
<107=109,108
<112=113
<113=115,114
<115=116
<116=118,117
<119=197,190,189,188,187,186,166,136,127,120
<120=121
<121=125,122
<122=123
<123=124
<125=126
<127=128
<128=132,129
<129=130
<130=131
<132=133
<133=135,134
<136=162,137
<137=145,138
<138=139
<139=143,140
<140=141
<141=142
<143=144
<145=146
<146=161,147
<147=160,148
<148=159,149
<149=158,150
<150=152,151
<152=156,153
<153=154
<154=155
<156=157
<162=163
<163=165,164
<166=167
<167=184,168
<168=177,171,169
<169=170
<171=172
<172=176,173
<173=175,174
<177=178
<178=180,179
<180=181
<181=183,182
<184=185
<190=191
<191=196,195,192
<192=194,193
<197=198
<198=200,199
<200=201
<201=203,202
<204=282,275,274,273,272,271,251,221,212,205
<205=206
<206=210,207
<207=208
<208=209
<210=211
<212=213
<213=217,214
<214=215
<215=216
<217=218
<218=220,219
<221=247,222
<222=230,223
<223=224
<224=228,225
<225=226
<226=227
<228=229
<230=231
<231=246,232
<232=245,233
<233=244,234
<234=243,235
<235=237,236
<237=241,238
<238=239
<239=240
<241=242
<247=248
<248=250,249
<251=252
<252=269,253
<253=262,256,254
<254=255
<256=257
<257=261,258
<258=260,259
<262=263
<263=265,264
<265=266
<266=268,267
<269=270
<275=276
<276=281,280,277
<277=279,278
<282=283
<283=285,284
<285=286
<286=288,287
<289=367,360,359,358,357,356,336,306,297,290
<290=291
<291=295,292
<292=293
<293=294
<295=296
<297=298
<298=302,299
<299=300
<300=301
<302=303
<303=305,304
<306=332,307
<307=315,308
<308=309
<309=313,310
<310=311
<311=312
<313=314
<315=316
<316=331,317
<317=330,318
<318=329,319
<319=328,320
<320=322,321
<322=326,323
<323=324
<324=325
<326=327
<332=333
<333=335,334
<336=337
<337=354,338
<338=347,341,339
<339=340
<341=342
<342=346,343
<343=345,344
<347=348
<348=350,349
<350=351
<351=353,352
<354=355
<360=361
<361=366,365,362
<362=364,363
<367=368
<368=370,369
<370=371
<371=373,372
<374=445,444,443,442,441,421,391,382,375
<375=376
<376=380,377
<377=378
<378=379
<380=381
<382=383
<383=387,384
<384=385
<385=386
<387=388
<388=390,389
<391=417,392
<392=400,393
<393=394
<394=398,395
<395=396
<396=397
<398=399
<400=401
<401=416,402
<402=415,403
<403=414,404
<404=413,405
<405=407,406
<407=411,408
<408=409
<409=410
<411=412
<417=418
<418=420,419
<421=422
<422=439,423
<423=432,426,424
<424=425
<426=427
<427=431,428
<428=430,429
<432=433
<433=435,434
<435=436
<436=438,437
<439=440
<445=446
<446=451,450,447
<447=449,448
<452=523,522,521,520,519,499,469,460,453
<453=454
<454=458,455
<455=456
<456=457
<458=459
<460=461
<461=465,462
<462=463
<463=464
<465=466
<466=468,467
<469=495,470
<470=478,471
<471=472
<472=476,473
<473=474
<474=475
<476=477
<478=479
<479=494,480
<480=493,481
<481=492,482
<482=491,483
<483=485,484
<485=489,486
<486=487
<487=488
<489=490
<495=496
<496=498,497
<499=500
<500=517,501
<501=510,504,502
<502=503
<504=505
<505=509,506
<506=508,507
<510=511
<511=513,512
<513=514
<514=516,515
<517=518
<523=524
<524=529,528,525
<525=527,526
<530=601,600,599,598,597,577,547,538,531
<531=532
<532=536,533
<533=534
<534=535
<536=537
<538=539
<539=543,540
<540=541
<541=542
<543=544
<544=546,545
<547=573,548
<548=556,549
<549=550
<550=554,551
<551=552
<552=553
<554=555
<556=557
<557=572,558
<558=571,559
<559=570,560
<560=569,561
<561=563,562
<563=567,564
<564=565
<565=566
<567=568
<573=574
<574=576,575
<577=578
<578=595,579
<579=588,582,580
<580=581
<582=583
<583=587,584
<584=586,585
<588=589
<589=591,590
<591=592
<592=594,593
<595=596
<601=602
<602=607,606,603
<603=605,604
<608=609
<609=611,610
<611=612
<612=614,613
<615=633,616
<616=626,617
<617=618
<618=624,619
<619=622,620
<620=621
<622=623
<624=625
<626=627
<627=631,628
<628=629
<629=630
<631=632
<633=640,634
<634=636,635
<636=637
<637=639,638
<641=642
<642=647,646,643
<643=645,644
<648=649
<649=658,657,650
<650=656,651
<651=655,652
<652=654,653
<659=660
<660=662,661
<663=664
<664=666,665
<667=668
<668=670,669
<671=672
<672=674,673
<675=676
<676=685,684,677
<677=683,678
<678=682,679
<679=681,680
<686=687
<687=689,688
<690=691
<691=693,692
<694=695
<695=697,696
<698=724,699
<699=707,700
<700=701
<701=705,702
<702=703
<703=704
<705=706
<707=708
<708=723,709
<709=722,710
<710=721,711
<711=720,712
<712=714,713
<714=718,715
<715=716
<716=717
<718=719
<724=725
<725=727,726
<728=729
<729=746,730
<730=739,733,731
<731=732
<733=734
<734=738,735
<735=737,736
<739=740
<740=742,741
<742=743
<743=745,744
<746=747
<752=753
<753=758,757,754
<754=756,755
<759=785,760
<760=768,761
<761=762
<762=766,763
<763=764
<764=765
<766=767
<768=769
<769=784,770
<770=783,771
<771=782,772
<772=781,773
<773=775,774
<775=779,776
<776=777
<777=778
<779=780
<785=786
<786=790,787
<787=789,788
<790=794,791
<791=793,792
<795=796
<796=807,797
<797=800,798
<798=799
<800=801
<801=803,802
<803=804
<804=806,805
<807=808
<813=814
<814=821,820,815
<815=819,816
<816=818,817
<822=841,823
<823=831,824
<824=825
<825=829,826
<826=827
<827=828
<829=830
<831=832
<832=840,833
<833=839,834
<834=836,835
<836=838,837
<841=842
<842=844,843
<845=846
<846=853,852,847
<847=851,848
<848=850,849
<854=911,855
<855=891,882,856
<856=880,857
<857=879,874,867,865,858
<858=859
<859=863,860
<860=861
<861=862
<863=864
<865=866
<867=868
<868=872,869
<869=870
<870=871
<872=873
<874=875
<875=877,876
<877=878
<880=881
<882=885,883
<883=884
<885=886
<886=890,887
<887=889,888
<891=892
<892=910,909,893
<893=908,894
<894=906,895
<895=904,902,900,898,896
<896=897
<898=899
<900=901
<902=903
<904=905
<906=907
<911=912
<913=914
<914=929,928,915
<915=927,916
<916=922,917
<917=921,920,919,918
<922=926,925,924,923
<931=932
<932=936,933
<933=934
<934=935
<936=937
