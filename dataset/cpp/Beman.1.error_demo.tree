>3	FunctionDef	report_system_error (const system_error & ex)
>4	ParameterList	const system_error & ex
>5	Parameter	 
>6	Identifier	ex
>7	ParameterType	const system_error &
>8	ReturnType	void
>9	CompoundStatement	 
>10	ExpressionStatement	 
>11	ShiftExpression	cout << \" threw system_error
>12	ShiftExpression	\" threw system_error
>13	ShiftExpression	\"    ex.code().value() is \" << ex . code ( ) . value ( ) << '\n' << \"    ex.code().category().name() \
>14	ShiftExpression	ex . code ( ) . value ( ) << '\n' << \"    ex.code().category().name() is \" << ex . code ( ) . category ( ) \
>15	ShiftExpression	'\n' << \"    ex.code().category().name() is \" << ex . code ( ) . category ( ) . name ( ) << '\n' << \"    \
>16	ShiftExpression	\"    ex.code().category().name() is \" << ex . code ( ) . category ( ) . name ( ) << '\n' << \"    ex.what() \
>17	ShiftExpression	ex . code ( ) . category ( ) . name ( ) << '\n' << \"    ex.what() is \" << ex . what ( ) << '\n'
>18	ShiftExpression	'\n' << \"    ex.what() is \" << ex . what ( ) << '\n'
>19	ShiftExpression	\"    ex.what() is \" << ex . what ( ) << '\n'
>20	ShiftExpression	ex . what ( ) << '\n'
>21	PrimaryExpression	'\n'
>22	CallExpression	ex . what ( )
>23	ArgumentList	 
>24	Callee	ex . what
>25	MemberAccess	ex . what
>26	Identifier	what
>27	Identifier	ex
>28	PrimaryExpression	\"    ex.what() is \"
>29	PrimaryExpression	'\n'
>30	CallExpression	ex . code ( ) . category ( ) . name ( )
>31	ArgumentList	 
>32	Callee	ex . code ( ) . category ( ) . name
>33	MemberAccess	ex . code ( ) . category ( ) . name
>34	Identifier	name
>35	CallExpression	ex . code ( ) . category ( )
>36	ArgumentList	 
>37	Callee	ex . code ( ) . category
>38	MemberAccess	ex . code ( ) . category
>39	Identifier	category
>40	CallExpression	ex . code ( )
>41	ArgumentList	 
>42	Callee	ex . code
>43	MemberAccess	ex . code
>44	Identifier	code
>45	Identifier	ex
>46	PrimaryExpression	\"    ex.code().category().name() is \"
>47	PrimaryExpression	'\n'
>48	CallExpression	ex . code ( ) . value ( )
>49	ArgumentList	 
>50	Callee	ex . code ( ) . value
>51	MemberAccess	ex . code ( ) . value
>52	Identifier	value
>53	CallExpression	ex . code ( )
>54	ArgumentList	 
>55	Callee	ex . code
>56	MemberAccess	ex . code
>57	Identifier	code
>58	Identifier	ex
>59	PrimaryExpression	\"    ex.code().value() is \"
>60	PrimaryExpression	\" threw system_error
>61	Identifier	cout
>68	FunctionDef	report_filesystem_error (const system_error & ex)
>69	ParameterList	const system_error & ex
>70	Parameter	 
>71	Identifier	ex
>72	ParameterType	const system_error &
>73	ReturnType	void
>74	CompoundStatement	 
>75	ExpressionStatement	 
>76	ShiftExpression	cout << \"  threw filesystem_error exception
>77	ShiftExpression	\"  threw filesystem_error exception
>78	ShiftExpression	\"    ex.code().value() is \" << ex . code ( ) . value ( ) << '\n' << \"    ex.code().category().name() \
>79	ShiftExpression	ex . code ( ) . value ( ) << '\n' << \"    ex.code().category().name() is \" << ex . code ( ) . category ( ) \
>80	ShiftExpression	'\n' << \"    ex.code().category().name() is \" << ex . code ( ) . category ( ) . name ( ) << '\n' << \"    \
>81	ShiftExpression	\"    ex.code().category().name() is \" << ex . code ( ) . category ( ) . name ( ) << '\n' << \"    ex.what() \
>82	ShiftExpression	ex . code ( ) . category ( ) . name ( ) << '\n' << \"    ex.what() is \" << ex . what ( ) << '\n'
>83	ShiftExpression	'\n' << \"    ex.what() is \" << ex . what ( ) << '\n'
>84	ShiftExpression	\"    ex.what() is \" << ex . what ( ) << '\n'
>85	ShiftExpression	ex . what ( ) << '\n'
>86	PrimaryExpression	'\n'
>87	CallExpression	ex . what ( )
>88	ArgumentList	 
>89	Callee	ex . what
>90	MemberAccess	ex . what
>91	Identifier	what
>92	Identifier	ex
>93	PrimaryExpression	\"    ex.what() is \"
>94	PrimaryExpression	'\n'
>95	CallExpression	ex . code ( ) . category ( ) . name ( )
>96	ArgumentList	 
>97	Callee	ex . code ( ) . category ( ) . name
>98	MemberAccess	ex . code ( ) . category ( ) . name
>99	Identifier	name
>100	CallExpression	ex . code ( ) . category ( )
>101	ArgumentList	 
>102	Callee	ex . code ( ) . category
>103	MemberAccess	ex . code ( ) . category
>104	Identifier	category
>105	CallExpression	ex . code ( )
>106	ArgumentList	 
>107	Callee	ex . code
>108	MemberAccess	ex . code
>109	Identifier	code
>110	Identifier	ex
>111	PrimaryExpression	\"    ex.code().category().name() is \"
>112	PrimaryExpression	'\n'
>113	CallExpression	ex . code ( ) . value ( )
>114	ArgumentList	 
>115	Callee	ex . code ( ) . value
>116	MemberAccess	ex . code ( ) . value
>117	Identifier	value
>118	CallExpression	ex . code ( )
>119	ArgumentList	 
>120	Callee	ex . code
>121	MemberAccess	ex . code
>122	Identifier	code
>123	Identifier	ex
>124	PrimaryExpression	\"    ex.code().value() is \"
>125	PrimaryExpression	\"  threw filesystem_error exception
>126	Identifier	cout
>133	FunctionDef	report_status (fs 
>134	ParameterList	fs 
>135	Parameter	 
>136	Identifier	s
>137	ParameterType	fs 
>138	ReturnType	void
>139	CompoundStatement	 
>140	SwitchStatement	switch ( s . type ( ) )
>141	CompoundStatement	 
>142	ExpressionStatement	 
>143	ShiftExpression	cout << \"not a valid enumeration constant\n\"
>144	PrimaryExpression	\"not a valid enumeration constant\n\"
>145	Identifier	cout
>146	Label	 
>147	Identifier	default
>148	BreakStatement	 
>149	ExpressionStatement	 
>150	ShiftExpression	cout << \"type_unknown\n\"
>151	PrimaryExpression	\"type_unknown\n\"
>152	Identifier	cout
>153	Label	 
>154	Identifier	fs 
>155	BreakStatement	 
>156	ExpressionStatement	 
>157	ShiftExpression	cout << \"socket_file\n\"
>158	PrimaryExpression	\"socket_file\n\"
>159	Identifier	cout
>160	Label	 
>161	Identifier	fs 
>162	BreakStatement	 
>163	ExpressionStatement	 
>164	ShiftExpression	cout << \"fifo_file\n\"
>165	PrimaryExpression	\"fifo_file\n\"
>166	Identifier	cout
>167	Label	 
>168	Identifier	fs 
>169	BreakStatement	 
>170	ExpressionStatement	 
>171	ShiftExpression	cout << \"character_file\n\"
>172	PrimaryExpression	\"character_file\n\"
>173	Identifier	cout
>174	Label	 
>175	Identifier	fs 
>176	BreakStatement	 
>177	ExpressionStatement	 
>178	ShiftExpression	cout << \"block_file\n\"
>179	PrimaryExpression	\"block_file\n\"
>180	Identifier	cout
>181	Label	 
>182	Identifier	fs 
>183	BreakStatement	 
>184	ExpressionStatement	 
>185	ShiftExpression	cout << \"symlink_file\n\"
>186	PrimaryExpression	\"symlink_file\n\"
>187	Identifier	cout
>188	Label	 
>189	Identifier	fs 
>190	BreakStatement	 
>191	ExpressionStatement	 
>192	ShiftExpression	cout << \"directory_file\n\"
>193	PrimaryExpression	\"directory_file\n\"
>194	Identifier	cout
>195	Label	 
>196	Identifier	fs 
>197	BreakStatement	 
>198	ExpressionStatement	 
>199	ShiftExpression	cout << \"regular_file\n\"
>200	PrimaryExpression	\"regular_file\n\"
>201	Identifier	cout
>202	Label	 
>203	Identifier	fs 
>204	BreakStatement	 
>205	ExpressionStatement	 
>206	ShiftExpression	cout << \"file_not_found\n\"
>207	PrimaryExpression	\"file_not_found\n\"
>208	Identifier	cout
>209	Label	 
>210	Identifier	fs 
>211	BreakStatement	 
>212	ExpressionStatement	 
>213	ShiftExpression	cout << \"status_error\n\"
>214	PrimaryExpression	\"status_error\n\"
>215	Identifier	cout
>216	Label	 
>217	Identifier	fs 
>218	Condition	 
>219	CallExpression	s . type ( )
>220	ArgumentList	 
>221	Callee	s . type
>222	MemberAccess	s . type
>223	Identifier	type
>224	Identifier	s
>225	ExpressionStatement	 
>226	ShiftExpression	cout << \"  file_status
>227	PrimaryExpression	\"  file_status
>228	Identifier	cout
>234	FunctionDef	report_error_code (const error_code & ec)
>235	ParameterList	const error_code & ec
>236	Parameter	 
>237	Identifier	ec
>238	ParameterType	const error_code &
>239	ReturnType	void
>240	CompoundStatement	 
>241	ExpressionStatement	 
>242	ShiftExpression	cout << \"  ec
>243	ShiftExpression	\"  ec
>244	ShiftExpression	\"    value() is \" << ec . value ( ) << '\n' << \"    category().name() is \" << ec . category ( ) . name ( ) << '\n' << \"    \
>245	ShiftExpression	ec . value ( ) << '\n' << \"    category().name() is \" << ec . category ( ) . name ( ) << '\n' << \"    \
>246	ShiftExpression	'\n' << \"    category().name() is \" << ec . category ( ) . name ( ) << '\n' << \"    message() is \" << \
>247	ShiftExpression	\"    category().name() is \" << ec . category ( ) . name ( ) << '\n' << \"    message() is \" << ec . message ( ) << '\n'
>248	ShiftExpression	ec . category ( ) . name ( ) << '\n' << \"    message() is \" << ec . message ( ) << '\n'
>249	ShiftExpression	'\n' << \"    message() is \" << ec . message ( ) << '\n'
>250	ShiftExpression	\"    message() is \" << ec . message ( ) << '\n'
>251	ShiftExpression	ec . message ( ) << '\n'
>252	PrimaryExpression	'\n'
>253	CallExpression	ec . message ( )
>254	ArgumentList	 
>255	Callee	ec . message
>256	MemberAccess	ec . message
>257	Identifier	message
>258	Identifier	ec
>259	PrimaryExpression	\"    message() is \"
>260	PrimaryExpression	'\n'
>261	CallExpression	ec . category ( ) . name ( )
>262	ArgumentList	 
>263	Callee	ec . category ( ) . name
>264	MemberAccess	ec . category ( ) . name
>265	Identifier	name
>266	CallExpression	ec . category ( )
>267	ArgumentList	 
>268	Callee	ec . category
>269	MemberAccess	ec . category
>270	Identifier	category
>271	Identifier	ec
>272	PrimaryExpression	\"    category().name() is \"
>273	PrimaryExpression	'\n'
>274	CallExpression	ec . value ( )
>275	ArgumentList	 
>276	Callee	ec . value
>277	MemberAccess	ec . value
>278	Identifier	value
>279	Identifier	ec
>280	PrimaryExpression	\"    value() is \"
>281	PrimaryExpression	\"  ec
>282	Identifier	cout
>290	FunctionDef	main (int argc , char * argv [ ])
>291	ParameterList	int argc , char * argv [ ]
>292	Parameter	 
>293	Identifier	argv
>294	ParameterType	char * [ ]
>295	Parameter	 
>296	Identifier	argc
>297	ParameterType	int
>298	ReturnType	int
>299	CompoundStatement	 
>300	ReturnStatement	 
>301	PrimaryExpression	0
>302	ExpressionStatement	 
>303	CallExpression	report_error_code ( ec )
>304	ArgumentList	ec
>305	Argument	ec
>306	Identifier	ec
>307	Callee	report_error_code
>308	Identifier	report_error_code
>309	ExpressionStatement	 
>310	ShiftExpression	cout << ( di == fs 
>311	ShiftExpression	( di == fs 
>312	PrimaryExpression	\" to the end iterator\n\"
>313	ConditionalExpression	di == fs 
>314	PrimaryExpression	\"  Not equal\"
>315	PrimaryExpression	\"  Equal\"
>316	Condition	di == fs 
>317	EqualityExpression	di == fs 
>318	CallExpression	fs 
>319	ArgumentList	 
>320	Callee	fs 
>321	Identifier	fs 
>322	Identifier	di
>323	Identifier	cout
>324	ExpressionStatement	 
>325	AssignmentExpr	di = fs 
>326	CallExpression	fs 
>327	ArgumentList	p
>328	Argument	ec
>329	Identifier	ec
>330	Argument	p
>331	Identifier	p
>332	Callee	fs 
>333	Identifier	fs 
>334	Identifier	di
>335	ExpressionStatement	 
>336	ShiftExpression	cout << \"\ndirectory_iterator(\\"\" << p . string ( ) << \"\\", ec);\n\"
>337	ShiftExpression	\"\ndirectory_iterator(\\"\" << p . string ( ) << \"\\", ec);\n\"
>338	ShiftExpression	p . string ( ) << \"\\", ec);\n\"
>339	PrimaryExpression	\"\\", ec);\n\"
>340	CallExpression	p . string ( )
>341	ArgumentList	 
>342	Callee	p . string
>343	MemberAccess	p . string
>344	Identifier	string
>345	Identifier	p
>346	PrimaryExpression	\"\ndirectory_iterator(\\"\"
>347	Identifier	cout
>348	IfStatement	if ( ! threw_exception )
>349	CompoundStatement	 
>350	ExpressionStatement	 
>351	ShiftExpression	cout << \"  Did not throw exception\n\" << ( di == fs 
>352	ShiftExpression	\"  Did not throw exception\n\" << ( di == fs 
>353	ShiftExpression	( di == fs 
>354	PrimaryExpression	\" to the end iterator\n\"
>355	ConditionalExpression	di == fs 
>356	PrimaryExpression	\"  Not equal\"
>357	PrimaryExpression	\"  Equal\"
>358	Condition	di == fs 
>359	EqualityExpression	di == fs 
>360	CallExpression	fs 
>361	ArgumentList	 
>362	Callee	fs 
>363	Identifier	fs 
>364	Identifier	di
>365	PrimaryExpression	\"  Did not throw exception\n\"
>366	Identifier	cout
>367	Condition	 
>368	UnaryOp	! threw_exception
>369	Identifier	threw_exception
>370	UnaryOperator	!
>371	BlockStarter	 
>372	CompoundStatement	 
>373	ExpressionStatement	threw_exception = true
>374	AssignmentExpr	threw_exception = true
>375	Identifier	true
>376	Identifier	threw_exception
>377	ExpressionStatement	report_filesystem_error ( ex )
>378	CallExpression	report_filesystem_error ( ex )
>379	ArgumentList	ex
>380	Argument	ex
>381	Identifier	ex
>382	Callee	report_filesystem_error
>383	Identifier	report_filesystem_error
>384	Identifier	ex
>385	BlockStarter	 
>386	CompoundStatement	 
>387	ExpressionStatement	di = fs 
>388	AssignmentExpr	di = fs 
>389	CallExpression	fs 
>390	ArgumentList	p
>391	Argument	p
>392	Identifier	p
>393	Callee	fs 
>394	Identifier	fs 
>395	Identifier	di
>396	ExpressionStatement	 
>397	AssignmentExpr	threw_exception = false
>398	Identifier	false
>399	Identifier	threw_exception
>400	ExpressionStatement	 
>401	ShiftExpression	cout << \"\ndirectory_iterator(\\"\" << p . string ( ) << \"\\");\n\"
>402	ShiftExpression	\"\ndirectory_iterator(\\"\" << p . string ( ) << \"\\");\n\"
>403	ShiftExpression	p . string ( ) << \"\\");\n\"
>404	PrimaryExpression	\"\\");\n\"
>405	CallExpression	p . string ( )
>406	ArgumentList	 
>407	Callee	p . string
>408	MemberAccess	p . string
>409	Identifier	string
>410	Identifier	p
>411	PrimaryExpression	\"\ndirectory_iterator(\\"\"
>412	Identifier	cout
>413	IfStatement	if ( ! threw_exception )
>414	CompoundStatement	 
>415	ExpressionStatement	 
>416	ShiftExpression	cout << \"  Did not throw exception\n\" << \"  Returns
>417	ShiftExpression	\"  Did not throw exception\n\" << \"  Returns
>418	ShiftExpression	\"  Returns
>419	ShiftExpression	( b ? \"true\" 
>420	PrimaryExpression	'\n'
>421	ConditionalExpression	b ? \"true\" 
>422	PrimaryExpression	\"false\"
>423	PrimaryExpression	\"true\"
>424	Condition	b
>425	Identifier	b
>426	PrimaryExpression	\"  Returns
>427	PrimaryExpression	\"  Did not throw exception\n\"
>428	Identifier	cout
>429	Condition	 
>430	UnaryOp	! threw_exception
>431	Identifier	threw_exception
>432	UnaryOperator	!
>433	BlockStarter	 
>434	CompoundStatement	 
>435	ExpressionStatement	threw_exception = true
>436	AssignmentExpr	threw_exception = true
>437	Identifier	true
>438	Identifier	threw_exception
>439	ExpressionStatement	report_filesystem_error ( ex )
>440	CallExpression	report_filesystem_error ( ex )
>441	ArgumentList	ex
>442	Argument	ex
>443	Identifier	ex
>444	Callee	report_filesystem_error
>445	Identifier	report_filesystem_error
>446	Identifier	ex
>447	BlockStarter	 
>448	CompoundStatement	 
>449	ExpressionStatement	b = fs 
>450	AssignmentExpr	b = fs 
>451	CallExpression	fs 
>452	ArgumentList	p
>453	Argument	p
>454	Identifier	p
>455	Callee	fs 
>456	Identifier	fs 
>457	Identifier	b
>458	ExpressionStatement	 
>459	AssignmentExpr	threw_exception = false
>460	Identifier	false
>461	Identifier	threw_exception
>462	ExpressionStatement	 
>463	ShiftExpression	cout << \"\nexists(\\"\" << p . string ( ) << \"\\");\n\"
>464	ShiftExpression	\"\nexists(\\"\" << p . string ( ) << \"\\");\n\"
>465	ShiftExpression	p . string ( ) << \"\\");\n\"
>466	PrimaryExpression	\"\\");\n\"
>467	CallExpression	p . string ( )
>468	ArgumentList	 
>469	Callee	p . string
>470	MemberAccess	p . string
>471	Identifier	string
>472	Identifier	p
>473	PrimaryExpression	\"\nexists(\\"\"
>474	Identifier	cout
>475	ExpressionStatement	 
>476	CallExpression	report_error_code ( ec )
>477	ArgumentList	ec
>478	Argument	ec
>479	Identifier	ec
>480	Callee	report_error_code
>481	Identifier	report_error_code
>482	ExpressionStatement	 
>483	CallExpression	report_status ( s )
>484	ArgumentList	s
>485	Argument	s
>486	Identifier	s
>487	Callee	report_status
>488	Identifier	report_status
>489	ExpressionStatement	 
>490	AssignmentExpr	s = fs 
>491	CallExpression	fs 
>492	ArgumentList	p
>493	Argument	ec
>494	Identifier	ec
>495	Argument	p
>496	Identifier	p
>497	Callee	fs 
>498	Identifier	fs 
>499	Identifier	s
>500	ExpressionStatement	 
>501	ShiftExpression	cout << \"\nstatus(\\"\" << p . string ( ) << \"\\", ec);\n\"
>502	ShiftExpression	\"\nstatus(\\"\" << p . string ( ) << \"\\", ec);\n\"
>503	ShiftExpression	p . string ( ) << \"\\", ec);\n\"
>504	PrimaryExpression	\"\\", ec);\n\"
>505	CallExpression	p . string ( )
>506	ArgumentList	 
>507	Callee	p . string
>508	MemberAccess	p . string
>509	Identifier	string
>510	Identifier	p
>511	PrimaryExpression	\"\nstatus(\\"\"
>512	Identifier	cout
>513	ExpressionStatement	 
>514	CallExpression	report_status ( s )
>515	ArgumentList	s
>516	Argument	s
>517	Identifier	s
>518	Callee	report_status
>519	Identifier	report_status
>520	IfStatement	if ( ! threw_exception )
>521	ExpressionStatement	 
>522	ShiftExpression	cout << \"  Did not throw exception\n\"
>523	PrimaryExpression	\"  Did not throw exception\n\"
>524	Identifier	cout
>525	Condition	 
>526	UnaryOp	! threw_exception
>527	Identifier	threw_exception
>528	UnaryOperator	!
>529	BlockStarter	 
>530	CompoundStatement	 
>531	ExpressionStatement	threw_exception = true
>532	AssignmentExpr	threw_exception = true
>533	Identifier	true
>534	Identifier	threw_exception
>535	ExpressionStatement	report_filesystem_error ( ex )
>536	CallExpression	report_filesystem_error ( ex )
>537	ArgumentList	ex
>538	Argument	ex
>539	Identifier	ex
>540	Callee	report_filesystem_error
>541	Identifier	report_filesystem_error
>542	Identifier	ex
>543	BlockStarter	 
>544	CompoundStatement	 
>545	ExpressionStatement	s = fs 
>546	AssignmentExpr	s = fs 
>547	CallExpression	fs 
>548	ArgumentList	p
>549	Argument	p
>550	Identifier	p
>551	Callee	fs 
>552	Identifier	fs 
>553	Identifier	s
>554	ExpressionStatement	 
>555	AssignmentExpr	threw_exception = false
>556	Identifier	false
>557	Identifier	threw_exception
>558	ExpressionStatement	 
>559	ShiftExpression	cout << \"\nstatus(\\"\" << p . string ( ) << \"\\");\n\"
>560	ShiftExpression	\"\nstatus(\\"\" << p . string ( ) << \"\\");\n\"
>561	ShiftExpression	p . string ( ) << \"\\");\n\"
>562	PrimaryExpression	\"\\");\n\"
>563	CallExpression	p . string ( )
>564	ArgumentList	 
>565	Callee	p . string
>566	MemberAccess	p . string
>567	Identifier	string
>568	Identifier	p
>569	PrimaryExpression	\"\nstatus(\\"\"
>570	Identifier	cout
>571	IdentifierDeclStatement	 
>572	IdentifierDecl	di
>573	Identifier	di
>574	IdentifierDeclType	fs 
>575	IdentifierDeclStatement	 
>576	IdentifierDecl	b ( false )
>577	Identifier	false
>578	Identifier	b
>579	IdentifierDeclType	bool
>580	IdentifierDeclStatement	 
>581	IdentifierDecl	s
>582	Identifier	s
>583	IdentifierDeclType	fs 
>584	IdentifierDeclStatement	 
>585	IdentifierDecl	p ( argv [ 1 ] )
>586	ArrayIndexing	argv [ 1 ]
>587	PrimaryExpression	1
>588	Identifier	argv
>589	Identifier	p
>590	IdentifierDeclType	path
>591	IdentifierDeclStatement	 
>592	IdentifierDecl	ec
>593	Identifier	ec
>594	IdentifierDeclType	error_code
>595	IfStatement	if ( argc < 2 )
>596	CompoundStatement	 
>597	ReturnStatement	 
>598	PrimaryExpression	1
>599	ExpressionStatement	 
>600	ShiftExpression	cout << \"Usage
>601	PrimaryExpression	\"Usage
>602	Identifier	cout
>603	Condition	 
>604	RelationalExpression	argc < 2
>605	PrimaryExpression	2
>606	Identifier	argc
<3=9,8,4
<4=5
<5=7,6
<9=10
<10=11
<11=61,12
<12=60,13
<13=59,14
<14=48,15
<15=47,16
<16=46,17
<17=30,18
<18=29,19
<19=28,20
<20=22,21
<22=24,23
<24=25
<25=27,26
<30=32,31
<32=33
<33=35,34
<35=37,36
<37=38
<38=40,39
<40=42,41
<42=43
<43=45,44
<48=50,49
<50=51
<51=53,52
<53=55,54
<55=56
<56=58,57
<68=74,73,69
<69=70
<70=72,71
<74=75
<75=76
<76=126,77
<77=125,78
<78=124,79
<79=113,80
<80=112,81
<81=111,82
<82=95,83
<83=94,84
<84=93,85
<85=87,86
<87=89,88
<89=90
<90=92,91
<95=97,96
<97=98
<98=100,99
<100=102,101
<102=103
<103=105,104
<105=107,106
<107=108
<108=110,109
<113=115,114
<115=116
<116=118,117
<118=120,119
<120=121
<121=123,122
<133=139,138,134
<134=135
<135=137,136
<139=225,140
<140=218,141
<141=216,212,211,209,205,204,202,198,197,195,191,190,188,184,183,181,177,176,174,170,169,167,163,162,160,156,155,153,149,148,146,142
<142=143
<143=145,144
<146=147
<149=150
<150=152,151
<153=154
<156=157
<157=159,158
<160=161
<163=164
<164=166,165
<167=168
<170=171
<171=173,172
<174=175
<177=178
<178=180,179
<181=182
<184=185
<185=187,186
<188=189
<191=192
<192=194,193
<195=196
<198=199
<199=201,200
<202=203
<205=206
<206=208,207
<209=210
<212=213
<213=215,214
<216=217
<218=219
<219=221,220
<221=222
<222=224,223
<225=226
<226=228,227
<234=240,239,235
<235=236
<236=238,237
<240=241
<241=242
<242=282,243
<243=281,244
<244=280,245
<245=274,246
<246=273,247
<247=272,248
<248=261,249
<249=260,250
<250=259,251
<251=253,252
<253=255,254
<255=256
<256=258,257
<261=263,262
<263=264
<264=266,265
<266=268,267
<268=269
<269=271,270
<274=276,275
<276=277
<277=279,278
<290=299,298,291
<291=295,292
<292=294,293
<295=297,296
<299=595,591,584,580,575,571,558,554,543,529,520,513,500,489,482,475,462,458,447,433,413,400,396,385,371,348,335,324,309,302,300
<300=301
<302=303
<303=307,304
<304=305
<305=306
<307=308
<309=310
<310=323,311
<311=313,312
<313=316,315,314
<316=317
<317=322,318
<318=320,319
<320=321
<324=325
<325=334,326
<326=332,327
<327=330,328
<328=329
<330=331
<332=333
<335=336
<336=347,337
<337=346,338
<338=340,339
<340=342,341
<342=343
<343=345,344
<348=367,349
<349=350
<350=351
<351=366,352
<352=365,353
<353=355,354
<355=358,357,356
<358=359
<359=364,360
<360=362,361
<362=363
<367=368
<368=370,369
<371=384,372
<372=377,373
<373=374
<374=376,375
<377=378
<378=382,379
<379=380
<380=381
<382=383
<385=386
<386=387
<387=388
<388=395,389
<389=393,390
<390=391
<391=392
<393=394
<396=397
<397=399,398
<400=401
<401=412,402
<402=411,403
<403=405,404
<405=407,406
<407=408
<408=410,409
<413=429,414
<414=415
<415=416
<416=428,417
<417=427,418
<418=426,419
<419=421,420
<421=424,423,422
<424=425
<429=430
<430=432,431
<433=446,434
<434=439,435
<435=436
<436=438,437
<439=440
<440=444,441
<441=442
<442=443
<444=445
<447=448
<448=449
<449=450
<450=457,451
<451=455,452
<452=453
<453=454
<455=456
<458=459
<459=461,460
<462=463
<463=474,464
<464=473,465
<465=467,466
<467=469,468
<469=470
<470=472,471
<475=476
<476=480,477
<477=478
<478=479
<480=481
<482=483
<483=487,484
<484=485
<485=486
<487=488
<489=490
<490=499,491
<491=497,492
<492=495,493
<493=494
<495=496
<497=498
<500=501
<501=512,502
<502=511,503
<503=505,504
<505=507,506
<507=508
<508=510,509
<513=514
<514=518,515
<515=516
<516=517
<518=519
<520=525,521
<521=522
<522=524,523
<525=526
<526=528,527
<529=542,530
<530=535,531
<531=532
<532=534,533
<535=536
<536=540,537
<537=538
<538=539
<540=541
<543=544
<544=545
<545=546
<546=553,547
<547=551,548
<548=549
<549=550
<551=552
<554=555
<555=557,556
<558=559
<559=570,560
<560=569,561
<561=563,562
<563=565,564
<565=566
<566=568,567
<571=572
<572=574,573
<575=576
<576=579,578,577
<580=581
<581=583,582
<584=585
<585=590,589,586
<586=588,587
<591=592
<592=594,593
<595=603,596
<596=599,597
<597=598
<599=600
<600=602,601
<603=604
<604=606,605
