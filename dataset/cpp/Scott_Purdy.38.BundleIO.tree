>3	FunctionDef	BundleIO 
>4	ParameterList	const std 
>5	Parameter	 
>6	Identifier	isInput
>7	ParameterType	bool
>8	Parameter	 
>9	Identifier	regionName
>10	ParameterType	const std 
>11	Parameter	 
>12	Identifier	label
>13	ParameterType	const std 
>14	Parameter	 
>15	Identifier	bundlePath
>16	ParameterType	const std 
>17	CompoundStatement	 
>18	ExpressionStatement	 
>19	AssignmentExpr	filePrefix_ = Path 
>20	CallExpression	Path 
>21	ArgumentList	bundlePath
>22	Argument	label + \"-\"
>23	AdditiveExpression	label + \"-\"
>24	PrimaryExpression	\"-\"
>25	Identifier	label
>26	Argument	bundlePath
>27	Identifier	bundlePath
>28	Callee	Path 
>29	Identifier	Path 
>30	Identifier	filePrefix_
>31	IfStatement	if ( ! Path 
>32	ExpressionStatement	 
>33	ShiftExpression	NTA_THROW << \"Network bundle \" << bundlePath << \" does not exist\"
>34	ShiftExpression	\"Network bundle \" << bundlePath << \" does not exist\"
>35	ShiftExpression	bundlePath << \" does not exist\"
>36	PrimaryExpression	\" does not exist\"
>37	Identifier	bundlePath
>38	PrimaryExpression	\"Network bundle \"
>39	Identifier	NTA_THROW
>40	Condition	 
>41	UnaryOp	! Path 
>42	CallExpression	Path 
>43	ArgumentList	bundlePath_
>44	Argument	bundlePath_
>45	Identifier	bundlePath_
>46	Callee	Path 
>47	Identifier	Path 
>48	UnaryOperator	!
>60	FunctionDef	BundleIO 
>61	ParameterList	 
>62	CompoundStatement	 
>63	IfStatement	if ( ostream_ )
>64	CompoundStatement	 
>65	ExpressionStatement	 
>66	AssignmentExpr	ostream_ = NULL
>67	Identifier	NULL
>68	Identifier	ostream_
>69	ExpressionStatement	 
>70	Identifier	ostream_
>71	Statement	 
>72	IfStatement	if ( ostream_ -> is_open ( ) )
>73	ExpressionStatement	 
>74	CallExpression	ostream_ -> close ( )
>75	ArgumentList	 
>76	Callee	ostream_ -> close
>77	PtrMemberAccess	ostream_ -> close
>78	Identifier	close
>79	Identifier	ostream_
>80	Condition	 
>81	CallExpression	ostream_ -> is_open ( )
>82	ArgumentList	 
>83	Callee	ostream_ -> is_open
>84	PtrMemberAccess	ostream_ -> is_open
>85	Identifier	is_open
>86	Identifier	ostream_
>87	Condition	 
>88	Identifier	ostream_
>89	IfStatement	if ( istream_ )
>90	CompoundStatement	 
>91	ExpressionStatement	 
>92	AssignmentExpr	istream_ = NULL
>93	Identifier	NULL
>94	Identifier	istream_
>95	ExpressionStatement	 
>96	Identifier	istream_
>97	Statement	 
>98	IfStatement	if ( istream_ -> is_open ( ) )
>99	ExpressionStatement	 
>100	CallExpression	istream_ -> close ( )
>101	ArgumentList	 
>102	Callee	istream_ -> close
>103	PtrMemberAccess	istream_ -> close
>104	Identifier	close
>105	Identifier	istream_
>106	Condition	 
>107	CallExpression	istream_ -> is_open ( )
>108	ArgumentList	 
>109	Callee	istream_ -> is_open
>110	PtrMemberAccess	istream_ -> is_open
>111	Identifier	is_open
>112	Identifier	istream_
>113	Condition	 
>114	Identifier	istream_
>125	FunctionDef	BundleIO 
>126	ParameterList	const std 
>127	Parameter	 
>128	Identifier	name
>129	ParameterType	const std 
>130	ReturnType	std 
>131	CompoundStatement	 
>132	ReturnStatement	 
>133	UnaryOp	* ostream_
>134	Identifier	ostream_
>135	UnaryOperator	*
>136	IfStatement	if ( ! ostream_ -> is_open ( ) )
>137	CompoundStatement	 
>138	ExpressionStatement	 
>139	ShiftExpression	NTA_THROW << \"getOutputStream - Unable to open bundle file \" << name << \" for region \" << regionName_ << \" \
>140	ShiftExpression	\"getOutputStream - Unable to open bundle file \" << name << \" for region \" << regionName_ << \" in network \
>141	ShiftExpression	name << \" for region \" << regionName_ << \" in network bundle \" << bundlePath_
>142	ShiftExpression	\" for region \" << regionName_ << \" in network bundle \" << bundlePath_
>143	ShiftExpression	regionName_ << \" in network bundle \" << bundlePath_
>144	ShiftExpression	\" in network bundle \" << bundlePath_
>145	Identifier	bundlePath_
>146	PrimaryExpression	\" in network bundle \"
>147	Identifier	regionName_
>148	PrimaryExpression	\" for region \"
>149	Identifier	name
>150	PrimaryExpression	\"getOutputStream - Unable to open bundle file \"
>151	Identifier	NTA_THROW
>152	Condition	 
>153	UnaryOp	! ostream_ -> is_open ( )
>154	CallExpression	ostream_ -> is_open ( )
>155	ArgumentList	 
>156	Callee	ostream_ -> is_open
>157	PtrMemberAccess	ostream_ -> is_open
>158	Identifier	is_open
>159	Identifier	ostream_
>160	UnaryOperator	!
>161	ExpressionStatement	 
>162	AssignmentExpr	ostream_ = new OFStream ( getPath ( name ) . c_str ( ) , std 
>163	Expression	getPath ( name ) . c_str ( ) , std 
>164	InclusiveOrExpression	std 
>165	Identifier	std 
>166	Identifier	std 
>167	CallExpression	getPath ( name ) . c_str ( )
>168	ArgumentList	 
>169	Callee	getPath ( name ) . c_str
>170	MemberAccess	getPath ( name ) . c_str
>171	Identifier	c_str
>172	CallExpression	getPath ( name )
>173	ArgumentList	name
>174	Argument	name
>175	Identifier	name
>176	Callee	getPath
>177	Identifier	getPath
>178	Identifier	ostream_
>179	ExpressionStatement	 
>180	CallExpression	checkStreams_ ( )
>181	ArgumentList	 
>182	Callee	checkStreams_
>183	Identifier	checkStreams_
>184	ExpressionStatement	 
>185	CallExpression	NTA_CHECK ( ! isInput_ )
>186	ArgumentList	! isInput_
>187	Argument	! isInput_
>188	UnaryOp	! isInput_
>189	Identifier	isInput_
>190	UnaryOperator	!
>191	Callee	NTA_CHECK
>192	Identifier	NTA_CHECK
>205	FunctionDef	BundleIO 
>206	ParameterList	const std 
>207	Parameter	 
>208	Identifier	name
>209	ParameterType	const std 
>210	ReturnType	std 
>211	CompoundStatement	 
>212	ReturnStatement	 
>213	UnaryOp	* istream_
>214	Identifier	istream_
>215	UnaryOperator	*
>216	IfStatement	if ( ! istream_ -> is_open ( ) )
>217	CompoundStatement	 
>218	ExpressionStatement	 
>219	ShiftExpression	NTA_THROW << \"getInputStream - Unable to open bundle file \" << name << \" for region \" << regionName_ << \" \
>220	ShiftExpression	\"getInputStream - Unable to open bundle file \" << name << \" for region \" << regionName_ << \" in network \
>221	ShiftExpression	name << \" for region \" << regionName_ << \" in network bundle \" << bundlePath_
>222	ShiftExpression	\" for region \" << regionName_ << \" in network bundle \" << bundlePath_
>223	ShiftExpression	regionName_ << \" in network bundle \" << bundlePath_
>224	ShiftExpression	\" in network bundle \" << bundlePath_
>225	Identifier	bundlePath_
>226	PrimaryExpression	\" in network bundle \"
>227	Identifier	regionName_
>228	PrimaryExpression	\" for region \"
>229	Identifier	name
>230	PrimaryExpression	\"getInputStream - Unable to open bundle file \"
>231	Identifier	NTA_THROW
>232	Condition	 
>233	UnaryOp	! istream_ -> is_open ( )
>234	CallExpression	istream_ -> is_open ( )
>235	ArgumentList	 
>236	Callee	istream_ -> is_open
>237	PtrMemberAccess	istream_ -> is_open
>238	Identifier	is_open
>239	Identifier	istream_
>240	UnaryOperator	!
>241	ExpressionStatement	 
>242	AssignmentExpr	istream_ = new IFStream ( getPath ( name ) . c_str ( ) , std 
>243	Expression	getPath ( name ) . c_str ( ) , std 
>244	InclusiveOrExpression	std 
>245	Identifier	std 
>246	Identifier	std 
>247	CallExpression	getPath ( name ) . c_str ( )
>248	ArgumentList	 
>249	Callee	getPath ( name ) . c_str
>250	MemberAccess	getPath ( name ) . c_str
>251	Identifier	c_str
>252	CallExpression	getPath ( name )
>253	ArgumentList	name
>254	Argument	name
>255	Identifier	name
>256	Callee	getPath
>257	Identifier	getPath
>258	Identifier	istream_
>259	ExpressionStatement	 
>260	CallExpression	checkStreams_ ( )
>261	ArgumentList	 
>262	Callee	checkStreams_
>263	Identifier	checkStreams_
>264	ExpressionStatement	 
>265	CallExpression	NTA_CHECK ( isInput_ )
>266	ArgumentList	isInput_
>267	Argument	isInput_
>268	Identifier	isInput_
>269	Callee	NTA_CHECK
>270	Identifier	NTA_CHECK
>283	FunctionDef	BundleIO 
>284	ParameterList	const std 
>285	Parameter	 
>286	Identifier	name
>287	ParameterType	const std 
>288	ReturnType	std 
>289	CompoundStatement	 
>290	ReturnStatement	 
>291	AdditiveExpression	filePrefix_ + name
>292	Identifier	name
>293	Identifier	filePrefix_
>299	FunctionDef	BundleIO 
>300	ParameterList	 
>301	ReturnType	void
>302	CompoundStatement	 
>303	IfStatement	if ( ! isInput_ && ostream_ != NULL && ostream_ -> is_open ( ) )
>304	ExpressionStatement	 
>305	ShiftExpression	NTA_THROW << \"Internal Error
>306	PrimaryExpression	\"Internal Error
>307	Identifier	NTA_THROW
>308	Condition	 
>309	AndExpression	! isInput_ && ostream_ != NULL && ostream_ -> is_open ( )
>310	AndExpression	ostream_ != NULL && ostream_ -> is_open ( )
>311	CallExpression	ostream_ -> is_open ( )
>312	ArgumentList	 
>313	Callee	ostream_ -> is_open
>314	PtrMemberAccess	ostream_ -> is_open
>315	Identifier	is_open
>316	Identifier	ostream_
>317	EqualityExpression	ostream_ != NULL
>318	Identifier	NULL
>319	Identifier	ostream_
>320	UnaryOp	! isInput_
>321	Identifier	isInput_
>322	UnaryOperator	!
>323	IfStatement	if ( isInput_ && istream_ != NULL && istream_ -> is_open ( ) )
>324	ExpressionStatement	 
>325	ShiftExpression	NTA_THROW << \"Internal Error
>326	PrimaryExpression	\"Internal Error
>327	Identifier	NTA_THROW
>328	Condition	 
>329	AndExpression	isInput_ && istream_ != NULL && istream_ -> is_open ( )
>330	AndExpression	istream_ != NULL && istream_ -> is_open ( )
>331	CallExpression	istream_ -> is_open ( )
>332	ArgumentList	 
>333	Callee	istream_ -> is_open
>334	PtrMemberAccess	istream_ -> is_open
>335	Identifier	is_open
>336	Identifier	istream_
>337	EqualityExpression	istream_ != NULL
>338	Identifier	NULL
>339	Identifier	istream_
>340	Identifier	isInput_
<3=17,4
<4=14,11,8,5
<5=7,6
<8=10,9
<11=13,12
<14=16,15
<17=31,18
<18=19
<19=30,20
<20=28,21
<21=26,22
<22=23
<23=25,24
<26=27
<28=29
<31=40,32
<32=33
<33=39,34
<34=38,35
<35=37,36
<40=41
<41=48,42
<42=46,43
<43=44
<44=45
<46=47
<60=62,61
<62=89,63
<63=87,64
<64=72,71,69,65
<65=66
<66=68,67
<69=70
<72=80,73
<73=74
<74=76,75
<76=77
<77=79,78
<80=81
<81=83,82
<83=84
<84=86,85
<87=88
<89=113,90
<90=98,97,95,91
<91=92
<92=94,93
<95=96
<98=106,99
<99=100
<100=102,101
<102=103
<103=105,104
<106=107
<107=109,108
<109=110
<110=112,111
<113=114
<125=131,130,126
<126=127
<127=129,128
<131=184,179,161,136,132
<132=133
<133=135,134
<136=152,137
<137=138
<138=139
<139=151,140
<140=150,141
<141=149,142
<142=148,143
<143=147,144
<144=146,145
<152=153
<153=160,154
<154=156,155
<156=157
<157=159,158
<161=162
<162=178,163
<163=167,164
<164=166,165
<167=169,168
<169=170
<170=172,171
<172=176,173
<173=174
<174=175
<176=177
<179=180
<180=182,181
<182=183
<184=185
<185=191,186
<186=187
<187=188
<188=190,189
<191=192
<205=211,210,206
<206=207
<207=209,208
<211=264,259,241,216,212
<212=213
<213=215,214
<216=232,217
<217=218
<218=219
<219=231,220
<220=230,221
<221=229,222
<222=228,223
<223=227,224
<224=226,225
<232=233
<233=240,234
<234=236,235
<236=237
<237=239,238
<241=242
<242=258,243
<243=247,244
<244=246,245
<247=249,248
<249=250
<250=252,251
<252=256,253
<253=254
<254=255
<256=257
<259=260
<260=262,261
<262=263
<264=265
<265=269,266
<266=267
<267=268
<269=270
<283=289,288,284
<284=285
<285=287,286
<289=290
<290=291
<291=293,292
<299=302,301,300
<302=323,303
<303=308,304
<304=305
<305=307,306
<308=309
<309=320,310
<310=317,311
<311=313,312
<313=314
<314=316,315
<317=319,318
<320=322,321
<323=328,324
<324=325
<325=327,326
<328=329
<329=340,330
<330=337,331
<331=333,332
<333=334
<334=336,335
<337=339,338
