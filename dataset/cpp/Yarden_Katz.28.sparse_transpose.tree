>7	FunctionDef	main (int argc , char * argv [ ])
>8	ParameterList	int argc , char * argv [ ]
>9	Parameter	 
>10	Identifier	argv
>11	ParameterType	char * [ ]
>12	Parameter	 
>13	Identifier	argc
>14	ParameterType	int
>15	ReturnType	int
>16	CompoundStatement	 
>17	ReturnStatement	 
>18	PrimaryExpression	0
>19	ForStatement	for ( float density = DENSITY ; density >= MINDENSITY ; density *= 0.5 )
>20	CompoundStatement	 
>21	ExpressionStatement	 
>22	ShiftExpression	std 
>23	PrimaryExpression	\"\n\n\"
>24	Identifier	std 
>25	CompoundStatement	 
>26	ExpressionStatement	 
>27	ShiftExpression	std 
>28	ShiftExpression	\"  MTL4
>29	ShiftExpression	timer . value ( ) << endl
>30	Identifier	endl
>31	CallExpression	timer . value ( )
>32	ArgumentList	 
>33	Callee	timer . value
>34	MemberAccess	timer . value
>35	Identifier	value
>36	Identifier	timer
>37	PrimaryExpression	\"  MTL4
>38	Identifier	std 
>39	Statement	 
>40	ForStatement	for ( int k = 0 ; k < REPEAT ; ++ k )
>41	ExpressionStatement	 
>42	AssignmentExpr	m3 = trans ( m1 )
>43	CallExpression	trans ( m1 )
>44	ArgumentList	m1
>45	Argument	m1
>46	Identifier	m1
>47	Callee	trans
>48	Identifier	trans
>49	Identifier	m3
>50	UnaryExpression	 
>51	Identifier	k
>52	IncDec	++
>53	Condition	 
>54	RelationalExpression	k < REPEAT
>55	Identifier	REPEAT
>56	Identifier	k
>57	ForInit	 
>58	IdentifierDeclStatement	int k = 0 ;
>59	IdentifierDecl	k = 0
>60	AssignmentExpr	k = 0
>61	PrimaryExpression	0
>62	Identifier	k
>63	Identifier	k
>64	IdentifierDeclType	int
>65	Statement	 
>66	Statement	 
>67	ExpressionStatement	 
>68	CallExpression	eiToMtl ( sm1 , m1 )
>69	ArgumentList	sm1
>70	Argument	m1
>71	Identifier	m1
>72	Argument	sm1
>73	Identifier	sm1
>74	Callee	eiToMtl
>75	Identifier	eiToMtl
>76	IdentifierDeclStatement	 
>77	IdentifierDecl	m3 ( rows , cols )
>78	Expression	rows , cols
>79	Identifier	cols
>80	Identifier	rows
>81	Identifier	m3
>82	IdentifierDeclType	MtlSparse
>83	IdentifierDecl	m1 ( rows , cols )
>84	Expression	rows , cols
>85	Identifier	cols
>86	Identifier	rows
>87	Identifier	m1
>88	IdentifierDeclType	MtlSparse
>89	CompoundStatement	 
>90	ExpressionStatement	 
>91	ShiftExpression	std 
>92	ShiftExpression	\"  GMM
>93	ShiftExpression	timer . value ( ) << endl
>94	Identifier	endl
>95	CallExpression	timer . value ( )
>96	ArgumentList	 
>97	Callee	timer . value
>98	MemberAccess	timer . value
>99	Identifier	value
>100	Identifier	timer
>101	PrimaryExpression	\"  GMM
>102	Identifier	std 
>103	Statement	 
>104	ForStatement	for ( int k = 0 ; k < REPEAT ; ++ k )
>105	ExpressionStatement	 
>106	CallExpression	gmm 
>107	ArgumentList	gmm 
>108	Argument	m3
>109	Identifier	m3
>110	Argument	gmm 
>111	CallExpression	gmm 
>112	ArgumentList	m1
>113	Argument	m1
>114	Identifier	m1
>115	Callee	gmm 
>116	Identifier	gmm 
>117	Callee	gmm 
>118	Identifier	gmm 
>119	UnaryExpression	 
>120	Identifier	k
>121	IncDec	++
>122	Condition	 
>123	RelationalExpression	k < REPEAT
>124	Identifier	REPEAT
>125	Identifier	k
>126	ForInit	 
>127	IdentifierDeclStatement	int k = 0 ;
>128	IdentifierDecl	k = 0
>129	AssignmentExpr	k = 0
>130	PrimaryExpression	0
>131	Identifier	k
>132	Identifier	k
>133	IdentifierDeclType	int
>134	Statement	 
>135	Statement	 
>136	ExpressionStatement	 
>137	CallExpression	eiToGmm ( sm1 , m1 )
>138	ArgumentList	sm1
>139	Argument	m1
>140	Identifier	m1
>141	Argument	sm1
>142	Identifier	sm1
>143	Callee	eiToGmm
>144	Identifier	eiToGmm
>145	IdentifierDeclStatement	 
>146	IdentifierDecl	m3 ( rows , cols )
>147	Expression	rows , cols
>148	Identifier	cols
>149	Identifier	rows
>150	Identifier	m3
>151	IdentifierDeclType	GmmSparse
>152	IdentifierDecl	m1 ( rows , cols )
>153	Expression	rows , cols
>154	Identifier	cols
>155	Identifier	rows
>156	Identifier	m1
>157	IdentifierDeclType	GmmSparse
>158	IdentifierDeclStatement	 
>159	IdentifierDecl	gmmT3 ( rows , cols )
>160	Expression	rows , cols
>161	Identifier	cols
>162	Identifier	rows
>163	Identifier	gmmT3
>164	IdentifierDeclType	GmmDynSparse
>165	CompoundStatement	 
>166	ExpressionStatement	 
>167	ShiftExpression	std 
>168	ShiftExpression	\"  CSparse
>169	ShiftExpression	timer . value ( ) << endl
>170	Identifier	endl
>171	CallExpression	timer . value ( )
>172	ArgumentList	 
>173	Callee	timer . value
>174	MemberAccess	timer . value
>175	Identifier	value
>176	Identifier	timer
>177	PrimaryExpression	\"  CSparse
>178	Identifier	std 
>179	Statement	 
>180	ForStatement	for ( int k = 0 ; k < REPEAT ; ++ k )
>181	CompoundStatement	 
>182	ExpressionStatement	 
>183	CallExpression	cs_spfree ( m3 )
>184	ArgumentList	m3
>185	Argument	m3
>186	Identifier	m3
>187	Callee	cs_spfree
>188	Identifier	cs_spfree
>189	ExpressionStatement	 
>190	AssignmentExpr	m3 = cs_transpose ( m1 , 1 )
>191	CallExpression	cs_transpose ( m1 , 1 )
>192	ArgumentList	m1
>193	Argument	1
>194	PrimaryExpression	1
>195	Argument	m1
>196	Identifier	m1
>197	Callee	cs_transpose
>198	Identifier	cs_transpose
>199	Identifier	m3
>200	UnaryExpression	 
>201	Identifier	k
>202	IncDec	++
>203	Condition	 
>204	RelationalExpression	k < REPEAT
>205	Identifier	REPEAT
>206	Identifier	k
>207	ForInit	 
>208	IdentifierDeclStatement	int k = 0 ;
>209	IdentifierDecl	k = 0
>210	AssignmentExpr	k = 0
>211	PrimaryExpression	0
>212	Identifier	k
>213	Identifier	k
>214	IdentifierDeclType	int
>215	Statement	 
>216	Statement	 
>217	ExpressionStatement	 
>218	CallExpression	eiToCSparse ( sm1 , m1 )
>219	ArgumentList	sm1
>220	Argument	m1
>221	Identifier	m1
>222	Argument	sm1
>223	Identifier	sm1
>224	Callee	eiToCSparse
>225	Identifier	eiToCSparse
>226	IdentifierDeclStatement	 
>227	IdentifierDecl	* m3
>228	Identifier	m3
>229	IdentifierDeclType	cs *
>230	IdentifierDecl	* m1
>231	Identifier	m1
>232	IdentifierDeclType	cs *
>233	CompoundStatement	 
>234	ExpressionStatement	 
>235	ShiftExpression	std 
>236	ShiftExpression	\"  Eigen
>237	ShiftExpression	timer . value ( ) << endl
>238	Identifier	endl
>239	CallExpression	timer . value ( )
>240	ArgumentList	 
>241	Callee	timer . value
>242	MemberAccess	timer . value
>243	Identifier	value
>244	Identifier	timer
>245	PrimaryExpression	\"  Eigen
>246	Identifier	std 
>247	Statement	 
>248	ForStatement	for ( int k = 0 ; k < REPEAT ; ++ k )
>249	ExpressionStatement	 
>250	AssignmentExpr	sm3 = sm1 . transpose ( )
>251	CallExpression	sm1 . transpose ( )
>252	ArgumentList	 
>253	Callee	sm1 . transpose
>254	MemberAccess	sm1 . transpose
>255	Identifier	transpose
>256	Identifier	sm1
>257	Identifier	sm3
>258	UnaryExpression	 
>259	Identifier	k
>260	IncDec	++
>261	Condition	 
>262	RelationalExpression	k < REPEAT
>263	Identifier	REPEAT
>264	Identifier	k
>265	ForInit	 
>266	IdentifierDeclStatement	int k = 0 ;
>267	IdentifierDecl	k = 0
>268	AssignmentExpr	k = 0
>269	PrimaryExpression	0
>270	Identifier	k
>271	Identifier	k
>272	IdentifierDeclType	int
>273	Statement	 
>274	Statement	 
>275	ExpressionStatement	 
>276	ShiftExpression	std 
>277	ShiftExpression	\"Non zeros
>278	ShiftExpression	sm1 . nonZeros ( ) / float ( sm1 . rows ( ) * sm1 . cols ( ) ) * 100 << \"%\n\"
>279	PrimaryExpression	\"%\n\"
>280	MultiplicativeExpression	sm1 . nonZeros ( ) / float ( sm1 . rows ( ) * sm1 . cols ( ) ) * 100
>281	MultiplicativeExpression	float ( sm1 . rows ( ) * sm1 . cols ( ) ) * 100
>282	PrimaryExpression	100
>283	CallExpression	float ( sm1 . rows ( ) * sm1 . cols ( ) )
>284	ArgumentList	sm1 . rows ( ) * sm1 . cols ( )
>285	Argument	sm1 . rows ( ) * sm1 . cols ( )
>286	MultiplicativeExpression	sm1 . rows ( ) * sm1 . cols ( )
>287	CallExpression	sm1 . cols ( )
>288	ArgumentList	 
>289	Callee	sm1 . cols
>290	MemberAccess	sm1 . cols
>291	Identifier	cols
>292	Identifier	sm1
>293	CallExpression	sm1 . rows ( )
>294	ArgumentList	 
>295	Callee	sm1 . rows
>296	MemberAccess	sm1 . rows
>297	Identifier	rows
>298	Identifier	sm1
>299	Callee	float
>300	Identifier	float
>301	CallExpression	sm1 . nonZeros ( )
>302	ArgumentList	 
>303	Callee	sm1 . nonZeros
>304	MemberAccess	sm1 . nonZeros
>305	Identifier	nonZeros
>306	Identifier	sm1
>307	PrimaryExpression	\"Non zeros
>308	Identifier	std 
>309	CompoundStatement	 
>310	ExpressionStatement	 
>311	ShiftExpression	std 
>312	ShiftExpression	\"  Eigen dense
>313	ShiftExpression	timer . value ( ) << endl
>314	Identifier	endl
>315	CallExpression	timer . value ( )
>316	ArgumentList	 
>317	Callee	timer . value
>318	MemberAccess	timer . value
>319	Identifier	value
>320	Identifier	timer
>321	PrimaryExpression	\"  Eigen dense
>322	Identifier	std 
>323	Statement	 
>324	ForStatement	for ( int k = 0 ; k < REPEAT ; ++ k )
>325	ExpressionStatement	 
>326	AssignmentExpr	m3 = m1 . transpose ( )
>327	CallExpression	m1 . transpose ( )
>328	ArgumentList	 
>329	Callee	m1 . transpose
>330	MemberAccess	m1 . transpose
>331	Identifier	transpose
>332	Identifier	m1
>333	Identifier	m3
>334	UnaryExpression	 
>335	Identifier	k
>336	IncDec	++
>337	Condition	 
>338	RelationalExpression	k < REPEAT
>339	Identifier	REPEAT
>340	Identifier	k
>341	ForInit	 
>342	IdentifierDeclStatement	int k = 0 ;
>343	IdentifierDecl	k = 0
>344	AssignmentExpr	k = 0
>345	PrimaryExpression	0
>346	Identifier	k
>347	Identifier	k
>348	IdentifierDeclType	int
>349	Statement	 
>350	Statement	 
>351	ExpressionStatement	 
>352	CallExpression	eiToDense ( sm1 , m1 )
>353	ArgumentList	sm1
>354	Argument	m1
>355	Identifier	m1
>356	Argument	sm1
>357	Identifier	sm1
>358	Callee	eiToDense
>359	Identifier	eiToDense
>360	IdentifierDeclStatement	 
>361	IdentifierDecl	m3 ( rows , cols )
>362	Expression	rows , cols
>363	Identifier	cols
>364	Identifier	rows
>365	Identifier	m3
>366	IdentifierDeclType	DenseMatrix
>367	IdentifierDecl	m1 ( rows , cols )
>368	Expression	rows , cols
>369	Identifier	cols
>370	Identifier	rows
>371	Identifier	m1
>372	IdentifierDeclType	DenseMatrix
>373	ExpressionStatement	 
>374	CallExpression	fillMatrix ( density , rows , cols , sm1 )
>375	ArgumentList	density
>376	Argument	sm1
>377	Identifier	sm1
>378	Argument	cols
>379	Identifier	cols
>380	Argument	rows
>381	Identifier	rows
>382	Argument	density
>383	Identifier	density
>384	Callee	fillMatrix
>385	Identifier	fillMatrix
>386	AssignmentExpr	 
>387	PrimaryExpression	0.5
>388	Identifier	density
>389	Condition	 
>390	RelationalExpression	density >= MINDENSITY
>391	Identifier	MINDENSITY
>392	Identifier	density
>393	ForInit	 
>394	IdentifierDeclStatement	float density = DENSITY ;
>395	IdentifierDecl	density = DENSITY
>396	AssignmentExpr	density = DENSITY
>397	Identifier	DENSITY
>398	Identifier	DENSITY
>399	Identifier	density
>400	IdentifierDeclType	float
>401	IdentifierDeclStatement	 
>402	IdentifierDecl	timer
>403	Identifier	timer
>404	IdentifierDeclType	BenchTimer
>405	IdentifierDeclStatement	 
>406	IdentifierDecl	sm3 ( rows , cols )
>407	Expression	rows , cols
>408	Identifier	cols
>409	Identifier	rows
>410	Identifier	sm3
>411	IdentifierDeclType	EigenSparseMatrix
>412	IdentifierDecl	sm1 ( rows , cols )
>413	Expression	rows , cols
>414	Identifier	cols
>415	Identifier	rows
>416	Identifier	sm1
>417	IdentifierDeclType	EigenSparseMatrix
>418	IdentifierDeclStatement	 
>419	IdentifierDecl	density = DENSITY
>420	AssignmentExpr	density = DENSITY
>421	Identifier	DENSITY
>422	Identifier	DENSITY
>423	Identifier	density
>424	IdentifierDeclType	float
>425	IdentifierDeclStatement	 
>426	IdentifierDecl	cols = SIZE
>427	AssignmentExpr	cols = SIZE
>428	Identifier	SIZE
>429	Identifier	SIZE
>430	Identifier	cols
>431	IdentifierDeclType	int
>432	IdentifierDeclStatement	 
>433	IdentifierDecl	rows = SIZE
>434	AssignmentExpr	rows = SIZE
>435	Identifier	SIZE
>436	Identifier	SIZE
>437	Identifier	rows
>438	IdentifierDeclType	int
<7=16,15,8
<8=12,9
<9=11,10
<12=14,13
<16=432,425,418,405,401,19,17
<17=18
<19=393,389,386,20
<20=373,309,275,233,165,89,25,21
<21=22
<22=24,23
<25=76,67,66,65,40,39,26
<26=27
<27=38,28
<28=37,29
<29=31,30
<31=33,32
<33=34
<34=36,35
<40=57,53,50,41
<41=42
<42=49,43
<43=47,44
<44=45
<45=46
<47=48
<50=52,51
<53=54
<54=56,55
<57=58
<58=59
<59=64,63,60
<60=62,61
<67=68
<68=74,69
<69=72,70
<70=71
<72=73
<74=75
<76=83,77
<77=82,81,78
<78=80,79
<83=88,87,84
<84=86,85
<89=158,145,136,135,134,104,103,90
<90=91
<91=102,92
<92=101,93
<93=95,94
<95=97,96
<97=98
<98=100,99
<104=126,122,119,105
<105=106
<106=117,107
<107=110,108
<108=109
<110=111
<111=115,112
<112=113
<113=114
<115=116
<117=118
<119=121,120
<122=123
<123=125,124
<126=127
<127=128
<128=133,132,129
<129=131,130
<136=137
<137=143,138
<138=141,139
<139=140
<141=142
<143=144
<145=152,146
<146=151,150,147
<147=149,148
<152=157,156,153
<153=155,154
<158=159
<159=164,163,160
<160=162,161
<165=226,217,216,215,180,179,166
<166=167
<167=178,168
<168=177,169
<169=171,170
<171=173,172
<173=174
<174=176,175
<180=207,203,200,181
<181=189,182
<182=183
<183=187,184
<184=185
<185=186
<187=188
<189=190
<190=199,191
<191=197,192
<192=195,193
<193=194
<195=196
<197=198
<200=202,201
<203=204
<204=206,205
<207=208
<208=209
<209=214,213,210
<210=212,211
<217=218
<218=224,219
<219=222,220
<220=221
<222=223
<224=225
<226=230,227
<227=229,228
<230=232,231
<233=274,273,248,247,234
<234=235
<235=246,236
<236=245,237
<237=239,238
<239=241,240
<241=242
<242=244,243
<248=265,261,258,249
<249=250
<250=257,251
<251=253,252
<253=254
<254=256,255
<258=260,259
<261=262
<262=264,263
<265=266
<266=267
<267=272,271,268
<268=270,269
<275=276
<276=308,277
<277=307,278
<278=280,279
<280=301,281
<281=283,282
<283=299,284
<284=285
<285=286
<286=293,287
<287=289,288
<289=290
<290=292,291
<293=295,294
<295=296
<296=298,297
<299=300
<301=303,302
<303=304
<304=306,305
<309=360,351,350,349,324,323,310
<310=311
<311=322,312
<312=321,313
<313=315,314
<315=317,316
<317=318
<318=320,319
<324=341,337,334,325
<325=326
<326=333,327
<327=329,328
<329=330
<330=332,331
<334=336,335
<337=338
<338=340,339
<341=342
<342=343
<343=348,347,344
<344=346,345
<351=352
<352=358,353
<353=356,354
<354=355
<356=357
<358=359
<360=367,361
<361=366,365,362
<362=364,363
<367=372,371,368
<368=370,369
<373=374
<374=384,375
<375=382,380,378,376
<376=377
<378=379
<380=381
<382=383
<384=385
<386=388,387
<389=390
<390=392,391
<393=394
<394=395
<395=400,399,396
<396=398,397
<401=402
<402=404,403
<405=412,406
<406=411,410,407
<407=409,408
<412=417,416,413
<413=415,414
<418=419
<419=424,423,420
<420=422,421
<425=426
<426=431,430,427
<427=429,428
<432=433
<433=438,437,434
<434=436,435
