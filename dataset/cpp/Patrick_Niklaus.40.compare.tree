>3	FunctionDef	getTestDirectory ()
>4	ParameterList	 
>5	ReturnType	path
>6	CompoundStatement	 
>7	ReturnStatement	 
>8	Identifier	dir
>9	IfStatement	if ( ! boost 
>10	ExpressionStatement	 
>11	CallExpression	BOOST_THROW_EXCEPTION ( excp 
>12	ArgumentList	excp 
>13	Argument	excp 
>14	ShiftExpression	excp 
>15	CallExpression	excp 
>16	ArgumentList	dir . string ( )
>17	Argument	dir . string ( )
>18	CallExpression	dir . string ( )
>19	ArgumentList	 
>20	Callee	dir . string
>21	MemberAccess	dir . string
>22	Identifier	string
>23	Identifier	dir
>24	Callee	excp 
>25	Identifier	excp 
>26	CallExpression	excp 
>27	ArgumentList	 
>28	Callee	excp 
>29	Identifier	excp 
>30	Callee	BOOST_THROW_EXCEPTION
>31	Identifier	BOOST_THROW_EXCEPTION
>32	Condition	 
>33	UnaryOp	! boost 
>34	CallExpression	boost 
>35	ArgumentList	dir
>36	Argument	dir
>37	Identifier	dir
>38	Callee	boost 
>39	Identifier	boost 
>40	UnaryOperator	!
>41	IdentifierDeclStatement	 
>42	IdentifierDecl	dir = path ( TEST_DIRECTORY )
>43	AssignmentExpr	dir = path ( TEST_DIRECTORY )
>44	CallExpression	path ( TEST_DIRECTORY )
>45	ArgumentList	TEST_DIRECTORY
>46	Argument	TEST_DIRECTORY
>47	Identifier	TEST_DIRECTORY
>48	Callee	path
>49	Identifier	path
>50	Identifier	dir
>51	Identifier	dir
>52	IdentifierDeclType	path
>63	FunctionDef	getDataDirectory ()
>64	ParameterList	 
>65	ReturnType	path
>66	CompoundStatement	 
>67	ReturnStatement	 
>68	Identifier	dir
>69	IfStatement	if ( ! boost 
>70	ExpressionStatement	 
>71	CallExpression	BOOST_THROW_EXCEPTION ( excp 
>72	ArgumentList	excp 
>73	Argument	excp 
>74	ShiftExpression	excp 
>75	CallExpression	excp 
>76	ArgumentList	dir . string ( )
>77	Argument	dir . string ( )
>78	CallExpression	dir . string ( )
>79	ArgumentList	 
>80	Callee	dir . string
>81	MemberAccess	dir . string
>82	Identifier	string
>83	Identifier	dir
>84	Callee	excp 
>85	Identifier	excp 
>86	CallExpression	excp 
>87	ArgumentList	 
>88	Callee	excp 
>89	Identifier	excp 
>90	Callee	BOOST_THROW_EXCEPTION
>91	Identifier	BOOST_THROW_EXCEPTION
>92	Condition	 
>93	UnaryOp	! boost 
>94	CallExpression	boost 
>95	ArgumentList	dir
>96	Argument	dir
>97	Identifier	dir
>98	Callee	boost 
>99	Identifier	boost 
>100	UnaryOperator	!
>101	IdentifierDeclStatement	 
>102	IdentifierDecl	dir = getTestDirectory ( ) / \"data\"
>103	AssignmentExpr	dir = getTestDirectory ( ) / \"data\"
>104	MultiplicativeExpression	getTestDirectory ( ) / \"data\"
>105	PrimaryExpression	\"data\"
>106	CallExpression	getTestDirectory ( )
>107	ArgumentList	 
>108	Callee	getTestDirectory
>109	Identifier	getTestDirectory
>110	Identifier	dir
>111	Identifier	dir
>112	IdentifierDeclType	path
>122	FunctionDef	getOutputDirectory ()
>123	ParameterList	 
>124	ReturnType	path
>125	CompoundStatement	 
>126	ReturnStatement	 
>127	Identifier	dir
>128	IfStatement	if ( ! boost 
>129	ExpressionStatement	 
>130	CallExpression	BOOST_THROW_EXCEPTION ( excp 
>131	ArgumentList	excp 
>132	Argument	excp 
>133	ShiftExpression	excp 
>134	CallExpression	excp 
>135	ArgumentList	dir . string ( )
>136	Argument	dir . string ( )
>137	CallExpression	dir . string ( )
>138	ArgumentList	 
>139	Callee	dir . string
>140	MemberAccess	dir . string
>141	Identifier	string
>142	Identifier	dir
>143	Callee	excp 
>144	Identifier	excp 
>145	CallExpression	excp 
>146	ArgumentList	 
>147	Callee	excp 
>148	Identifier	excp 
>149	Callee	BOOST_THROW_EXCEPTION
>150	Identifier	BOOST_THROW_EXCEPTION
>151	Condition	 
>152	UnaryOp	! boost 
>153	CallExpression	boost 
>154	ArgumentList	dir
>155	Argument	dir
>156	Identifier	dir
>157	Callee	boost 
>158	Identifier	boost 
>159	UnaryOperator	!
>160	IdentifierDeclStatement	 
>161	IdentifierDecl	dir = getDataDirectory ( ) / \"output\"
>162	AssignmentExpr	dir = getDataDirectory ( ) / \"output\"
>163	MultiplicativeExpression	getDataDirectory ( ) / \"output\"
>164	PrimaryExpression	\"output\"
>165	CallExpression	getDataDirectory ( )
>166	ArgumentList	 
>167	Callee	getDataDirectory
>168	Identifier	getDataDirectory
>169	Identifier	dir
>170	Identifier	dir
>171	IdentifierDeclType	path
>181	FunctionDef	getInputDirectory ()
>182	ParameterList	 
>183	ReturnType	path
>184	CompoundStatement	 
>185	ReturnStatement	 
>186	Identifier	dir
>187	IfStatement	if ( ! boost 
>188	ExpressionStatement	 
>189	CallExpression	BOOST_THROW_EXCEPTION ( excp 
>190	ArgumentList	excp 
>191	Argument	excp 
>192	ShiftExpression	excp 
>193	CallExpression	excp 
>194	ArgumentList	dir . string ( )
>195	Argument	dir . string ( )
>196	CallExpression	dir . string ( )
>197	ArgumentList	 
>198	Callee	dir . string
>199	MemberAccess	dir . string
>200	Identifier	string
>201	Identifier	dir
>202	Callee	excp 
>203	Identifier	excp 
>204	CallExpression	excp 
>205	ArgumentList	 
>206	Callee	excp 
>207	Identifier	excp 
>208	Callee	BOOST_THROW_EXCEPTION
>209	Identifier	BOOST_THROW_EXCEPTION
>210	Condition	 
>211	UnaryOp	! boost 
>212	CallExpression	boost 
>213	ArgumentList	dir
>214	Argument	dir
>215	Identifier	dir
>216	Callee	boost 
>217	Identifier	boost 
>218	UnaryOperator	!
>219	IdentifierDeclStatement	 
>220	IdentifierDecl	dir = getDataDirectory ( ) / \"input\"
>221	AssignmentExpr	dir = getDataDirectory ( ) / \"input\"
>222	MultiplicativeExpression	getDataDirectory ( ) / \"input\"
>223	PrimaryExpression	\"input\"
>224	CallExpression	getDataDirectory ( )
>225	ArgumentList	 
>226	Callee	getDataDirectory
>227	Identifier	getDataDirectory
>228	Identifier	dir
>229	Identifier	dir
>230	IdentifierDeclType	path
>240	FunctionDef	getRenderedDirectory ()
>241	ParameterList	 
>242	ReturnType	path
>243	CompoundStatement	 
>244	ReturnStatement	 
>245	Identifier	dir
>246	IfStatement	if ( ! boost 
>247	ExpressionStatement	 
>248	CallExpression	boost 
>249	ArgumentList	dir
>250	Argument	dir
>251	Identifier	dir
>252	Callee	boost 
>253	Identifier	boost 
>254	Condition	 
>255	UnaryOp	! boost 
>256	CallExpression	boost 
>257	ArgumentList	dir
>258	Argument	dir
>259	Identifier	dir
>260	Callee	boost 
>261	Identifier	boost 
>262	UnaryOperator	!
>263	IdentifierDeclStatement	 
>264	IdentifierDecl	dir = getOutputDirectory ( ) / \"rendered\"
>265	AssignmentExpr	dir = getOutputDirectory ( ) / \"rendered\"
>266	MultiplicativeExpression	getOutputDirectory ( ) / \"rendered\"
>267	PrimaryExpression	\"rendered\"
>268	CallExpression	getOutputDirectory ( )
>269	ArgumentList	 
>270	Callee	getOutputDirectory
>271	Identifier	getOutputDirectory
>272	Identifier	dir
>273	Identifier	dir
>274	IdentifierDeclType	path
>281	FunctionDef	getDiffDirectory ()
>282	ParameterList	 
>283	ReturnType	path
>284	CompoundStatement	 
>285	ReturnStatement	 
>286	Identifier	dir
>287	IfStatement	if ( ! boost 
>288	ExpressionStatement	 
>289	CallExpression	boost 
>290	ArgumentList	dir
>291	Argument	dir
>292	Identifier	dir
>293	Callee	boost 
>294	Identifier	boost 
>295	Condition	 
>296	UnaryOp	! boost 
>297	CallExpression	boost 
>298	ArgumentList	dir
>299	Argument	dir
>300	Identifier	dir
>301	Callee	boost 
>302	Identifier	boost 
>303	UnaryOperator	!
>304	IdentifierDeclStatement	 
>305	IdentifierDecl	dir = getOutputDirectory ( ) / \"diff\"
>306	AssignmentExpr	dir = getOutputDirectory ( ) / \"diff\"
>307	MultiplicativeExpression	getOutputDirectory ( ) / \"diff\"
>308	PrimaryExpression	\"diff\"
>309	CallExpression	getOutputDirectory ( )
>310	ArgumentList	 
>311	Callee	getOutputDirectory
>312	Identifier	getOutputDirectory
>313	Identifier	dir
>314	Identifier	dir
>315	IdentifierDeclType	path
>322	FunctionDef	getValidDirectory ()
>323	ParameterList	 
>324	ReturnType	path
>325	CompoundStatement	 
>326	ReturnStatement	 
>327	Identifier	dir
>328	ExpressionStatement	 
>329	CallExpression	BOOST_CHECK ( boost 
>330	ArgumentList	boost 
>331	Argument	boost 
>332	CallExpression	boost 
>333	ArgumentList	dir
>334	Argument	dir
>335	Identifier	dir
>336	Callee	boost 
>337	Identifier	boost 
>338	Callee	BOOST_CHECK
>339	Identifier	BOOST_CHECK
>340	IdentifierDeclStatement	 
>341	IdentifierDecl	dir = getInputDirectory ( ) / \"valid\"
>342	AssignmentExpr	dir = getInputDirectory ( ) / \"valid\"
>343	MultiplicativeExpression	getInputDirectory ( ) / \"valid\"
>344	PrimaryExpression	\"valid\"
>345	CallExpression	getInputDirectory ( )
>346	ArgumentList	 
>347	Callee	getInputDirectory
>348	Identifier	getInputDirectory
>349	Identifier	dir
>350	Identifier	dir
>351	IdentifierDeclType	path
>358	FunctionDef	compareTile (const char * name)
>359	ParameterList	const char * name
>360	Parameter	 
>361	Identifier	name
>362	ParameterType	const char *
>363	ReturnType	void
>364	CompoundStatement	 
>365	ExpressionStatement	 
>366	CallExpression	BOOST_CHECK ( ! changed )
>367	ArgumentList	! changed
>368	Argument	! changed
>369	UnaryOp	! changed
>370	Identifier	changed
>371	UnaryOperator	!
>372	Callee	BOOST_CHECK
>373	Identifier	BOOST_CHECK
>374	ExpressionStatement	 
>375	CallExpression	cairo_surface_write_to_png ( valid_surface , diff . string ( ) . c_str ( ) )
>376	ArgumentList	valid_surface
>377	Argument	diff . string ( ) . c_str ( )
>378	CallExpression	diff . string ( ) . c_str ( )
>379	ArgumentList	 
>380	Callee	diff . string ( ) . c_str
>381	MemberAccess	diff . string ( ) . c_str
>382	Identifier	c_str
>383	CallExpression	diff . string ( )
>384	ArgumentList	 
>385	Callee	diff . string
>386	MemberAccess	diff . string
>387	Identifier	string
>388	Identifier	diff
>389	Argument	valid_surface
>390	Identifier	valid_surface
>391	Callee	cairo_surface_write_to_png
>392	Identifier	cairo_surface_write_to_png
>393	ExpressionStatement	 
>394	CallExpression	cairo_surface_flush ( valid_surface )
>395	ArgumentList	valid_surface
>396	Argument	valid_surface
>397	Identifier	valid_surface
>398	Callee	cairo_surface_flush
>399	Identifier	cairo_surface_flush
>400	ForStatement	for ( int i = 0 ; i < v_h * v_w ; i ++ )
>401	CompoundStatement	 
>402	ExpressionStatement	 
>403	AssignmentExpr	rendered_data += 4
>404	PrimaryExpression	4
>405	Identifier	rendered_data
>406	ExpressionStatement	 
>407	AssignmentExpr	valid_data += 4
>408	PrimaryExpression	4
>409	Identifier	valid_data
>410	ExpressionStatement	 
>411	AssignmentExpr	valid_data [ 3 ] = 0xFF - abs ( valid_data [ 3 ] - rendered_data [ 3 ] )
>412	AdditiveExpression	0xFF - abs ( valid_data [ 3 ] - rendered_data [ 3 ] )
>413	CallExpression	abs ( valid_data [ 3 ] - rendered_data [ 3 ] )
>414	ArgumentList	valid_data [ 3 ] - rendered_data [ 3 ]
>415	Argument	valid_data [ 3 ] - rendered_data [ 3 ]
>416	AdditiveExpression	valid_data [ 3 ] - rendered_data [ 3 ]
>417	ArrayIndexing	rendered_data [ 3 ]
>418	PrimaryExpression	3
>419	Identifier	rendered_data
>420	ArrayIndexing	valid_data [ 3 ]
>421	PrimaryExpression	3
>422	Identifier	valid_data
>423	Callee	abs
>424	Identifier	abs
>425	PrimaryExpression	0xFF
>426	ArrayIndexing	valid_data [ 3 ]
>427	PrimaryExpression	3
>428	Identifier	valid_data
>429	ExpressionStatement	 
>430	AssignmentExpr	valid_data [ 2 ] = 0xFF - abs ( valid_data [ 2 ] - rendered_data [ 2 ] )
>431	AdditiveExpression	0xFF - abs ( valid_data [ 2 ] - rendered_data [ 2 ] )
>432	CallExpression	abs ( valid_data [ 2 ] - rendered_data [ 2 ] )
>433	ArgumentList	valid_data [ 2 ] - rendered_data [ 2 ]
>434	Argument	valid_data [ 2 ] - rendered_data [ 2 ]
>435	AdditiveExpression	valid_data [ 2 ] - rendered_data [ 2 ]
>436	ArrayIndexing	rendered_data [ 2 ]
>437	PrimaryExpression	2
>438	Identifier	rendered_data
>439	ArrayIndexing	valid_data [ 2 ]
>440	PrimaryExpression	2
>441	Identifier	valid_data
>442	Callee	abs
>443	Identifier	abs
>444	PrimaryExpression	0xFF
>445	ArrayIndexing	valid_data [ 2 ]
>446	PrimaryExpression	2
>447	Identifier	valid_data
>448	ExpressionStatement	 
>449	AssignmentExpr	valid_data [ 1 ] = 0xFF - abs ( valid_data [ 1 ] - rendered_data [ 1 ] )
>450	AdditiveExpression	0xFF - abs ( valid_data [ 1 ] - rendered_data [ 1 ] )
>451	CallExpression	abs ( valid_data [ 1 ] - rendered_data [ 1 ] )
>452	ArgumentList	valid_data [ 1 ] - rendered_data [ 1 ]
>453	Argument	valid_data [ 1 ] - rendered_data [ 1 ]
>454	AdditiveExpression	valid_data [ 1 ] - rendered_data [ 1 ]
>455	ArrayIndexing	rendered_data [ 1 ]
>456	PrimaryExpression	1
>457	Identifier	rendered_data
>458	ArrayIndexing	valid_data [ 1 ]
>459	PrimaryExpression	1
>460	Identifier	valid_data
>461	Callee	abs
>462	Identifier	abs
>463	PrimaryExpression	0xFF
>464	ArrayIndexing	valid_data [ 1 ]
>465	PrimaryExpression	1
>466	Identifier	valid_data
>467	ExpressionStatement	 
>468	AssignmentExpr	valid_data [ 0 ] = 0xFF - abs ( valid_data [ 0 ] - rendered_data [ 0 ] )
>469	AdditiveExpression	0xFF - abs ( valid_data [ 0 ] - rendered_data [ 0 ] )
>470	CallExpression	abs ( valid_data [ 0 ] - rendered_data [ 0 ] )
>471	ArgumentList	valid_data [ 0 ] - rendered_data [ 0 ]
>472	Argument	valid_data [ 0 ] - rendered_data [ 0 ]
>473	AdditiveExpression	valid_data [ 0 ] - rendered_data [ 0 ]
>474	ArrayIndexing	rendered_data [ 0 ]
>475	PrimaryExpression	0
>476	Identifier	rendered_data
>477	ArrayIndexing	valid_data [ 0 ]
>478	PrimaryExpression	0
>479	Identifier	valid_data
>480	Callee	abs
>481	Identifier	abs
>482	PrimaryExpression	0xFF
>483	ArrayIndexing	valid_data [ 0 ]
>484	PrimaryExpression	0
>485	Identifier	valid_data
>486	IfStatement	if ( ! changed )
>487	ExpressionStatement	 
>488	AssignmentExpr	changed = * ( ( uint32_t * ) valid_data ) != * ( ( uint32_t * ) rendered_data )
>489	EqualityExpression	* ( ( uint32_t * ) valid_data ) != * ( ( uint32_t * ) rendered_data )
>490	UnaryOp	* ( ( uint32_t * ) rendered_data )
>491	CastExpression	( uint32_t * ) rendered_data
>492	Identifier	rendered_data
>493	CastTarget	uint32_t *
>494	UnaryOperator	*
>495	UnaryOp	* ( ( uint32_t * ) valid_data )
>496	CastExpression	( uint32_t * ) valid_data
>497	Identifier	valid_data
>498	CastTarget	uint32_t *
>499	UnaryOperator	*
>500	Identifier	changed
>501	Condition	 
>502	UnaryOp	! changed
>503	Identifier	changed
>504	UnaryOperator	!
>505	IncDecOp	 
>506	IncDec	++
>507	Identifier	i
>508	Condition	 
>509	RelationalExpression	i < v_h * v_w
>510	MultiplicativeExpression	v_h * v_w
>511	Identifier	v_w
>512	Identifier	v_h
>513	Identifier	i
>514	ForInit	 
>515	IdentifierDeclStatement	int i = 0 ;
>516	IdentifierDecl	i = 0
>517	AssignmentExpr	i = 0
>518	PrimaryExpression	0
>519	Identifier	i
>520	Identifier	i
>521	IdentifierDeclType	int
>522	IdentifierDeclStatement	 
>523	IdentifierDecl	changed = false
>524	AssignmentExpr	changed = false
>525	Identifier	false
>526	Identifier	false
>527	Identifier	changed
>528	IdentifierDeclType	bool
>529	IdentifierDeclStatement	 
>530	IdentifierDecl	* rendered_data = cairo_image_surface_get_data ( rendered_surface )
>531	AssignmentExpr	* rendered_data = cairo_image_surface_get_data ( rendered_surface )
>532	CallExpression	cairo_image_surface_get_data ( rendered_surface )
>533	ArgumentList	rendered_surface
>534	Argument	rendered_surface
>535	Identifier	rendered_surface
>536	Callee	cairo_image_surface_get_data
>537	Identifier	cairo_image_surface_get_data
>538	Identifier	rendered_data
>539	Identifier	rendered_data
>540	IdentifierDeclType	unsigned char *
>541	IdentifierDeclStatement	 
>542	IdentifierDecl	* valid_data = cairo_image_surface_get_data ( valid_surface )
>543	AssignmentExpr	* valid_data = cairo_image_surface_get_data ( valid_surface )
>544	CallExpression	cairo_image_surface_get_data ( valid_surface )
>545	ArgumentList	valid_surface
>546	Argument	valid_surface
>547	Identifier	valid_surface
>548	Callee	cairo_image_surface_get_data
>549	Identifier	cairo_image_surface_get_data
>550	Identifier	valid_data
>551	Identifier	valid_data
>552	IdentifierDeclType	unsigned char *
>553	ExpressionStatement	 
>554	CallExpression	BOOST_TEST_MESSAGE ( \" - difference
>555	ArgumentList	\" - difference
>556	Argument	\" - difference
>557	ShiftExpression	\" - difference
>558	Identifier	diff
>559	PrimaryExpression	\" - difference
>560	Callee	BOOST_TEST_MESSAGE
>561	Identifier	BOOST_TEST_MESSAGE
>562	ExpressionStatement	 
>563	CallExpression	BOOST_TEST_MESSAGE ( \"Compute
>564	ArgumentList	\"Compute
>565	Argument	\"Compute
>566	PrimaryExpression	\"Compute
>567	Callee	BOOST_TEST_MESSAGE
>568	Identifier	BOOST_TEST_MESSAGE
>569	ExpressionStatement	 
>570	CallExpression	BOOST_CHECK ( v_h == r_h && v_w == r_w )
>571	ArgumentList	v_h == r_h && v_w == r_w
>572	Argument	v_h == r_h && v_w == r_w
>573	AndExpression	v_h == r_h && v_w == r_w
>574	EqualityExpression	v_w == r_w
>575	Identifier	r_w
>576	Identifier	v_w
>577	EqualityExpression	v_h == r_h
>578	Identifier	r_h
>579	Identifier	v_h
>580	Callee	BOOST_CHECK
>581	Identifier	BOOST_CHECK
>582	IdentifierDeclStatement	 
>583	IdentifierDecl	r_w = cairo_image_surface_get_width ( rendered_surface )
>584	AssignmentExpr	r_w = cairo_image_surface_get_width ( rendered_surface )
>585	CallExpression	cairo_image_surface_get_width ( rendered_surface )
>586	ArgumentList	rendered_surface
>587	Argument	rendered_surface
>588	Identifier	rendered_surface
>589	Callee	cairo_image_surface_get_width
>590	Identifier	cairo_image_surface_get_width
>591	Identifier	r_w
>592	Identifier	r_w
>593	IdentifierDeclType	int
>594	IdentifierDeclStatement	 
>595	IdentifierDecl	r_h = cairo_image_surface_get_height ( rendered_surface )
>596	AssignmentExpr	r_h = cairo_image_surface_get_height ( rendered_surface )
>597	CallExpression	cairo_image_surface_get_height ( rendered_surface )
>598	ArgumentList	rendered_surface
>599	Argument	rendered_surface
>600	Identifier	rendered_surface
>601	Callee	cairo_image_surface_get_height
>602	Identifier	cairo_image_surface_get_height
>603	Identifier	r_h
>604	Identifier	r_h
>605	IdentifierDeclType	int
>606	IdentifierDeclStatement	 
>607	IdentifierDecl	v_w = cairo_image_surface_get_width ( valid_surface )
>608	AssignmentExpr	v_w = cairo_image_surface_get_width ( valid_surface )
>609	CallExpression	cairo_image_surface_get_width ( valid_surface )
>610	ArgumentList	valid_surface
>611	Argument	valid_surface
>612	Identifier	valid_surface
>613	Callee	cairo_image_surface_get_width
>614	Identifier	cairo_image_surface_get_width
>615	Identifier	v_w
>616	Identifier	v_w
>617	IdentifierDeclType	int
>618	IdentifierDeclStatement	 
>619	IdentifierDecl	v_h = cairo_image_surface_get_height ( valid_surface )
>620	AssignmentExpr	v_h = cairo_image_surface_get_height ( valid_surface )
>621	CallExpression	cairo_image_surface_get_height ( valid_surface )
>622	ArgumentList	valid_surface
>623	Argument	valid_surface
>624	Identifier	valid_surface
>625	Callee	cairo_image_surface_get_height
>626	Identifier	cairo_image_surface_get_height
>627	Identifier	v_h
>628	Identifier	v_h
>629	IdentifierDeclType	int
>630	IdentifierDeclStatement	 
>631	IdentifierDecl	* cr = cairo_create ( valid_surface )
>632	AssignmentExpr	* cr = cairo_create ( valid_surface )
>633	CallExpression	cairo_create ( valid_surface )
>634	ArgumentList	valid_surface
>635	Argument	valid_surface
>636	Identifier	valid_surface
>637	Callee	cairo_create
>638	Identifier	cairo_create
>639	Identifier	cr
>640	Identifier	cr
>641	IdentifierDeclType	cairo_t *
>642	IdentifierDeclStatement	 
>643	IdentifierDecl	* rendered_surface = cairo_image_surface_create_from_png ( rendered . string ( ) . c_str ( ) )
>644	AssignmentExpr	* rendered_surface = cairo_image_surface_create_from_png ( rendered . string ( ) . c_str ( ) )
>645	CallExpression	cairo_image_surface_create_from_png ( rendered . string ( ) . c_str ( ) )
>646	ArgumentList	rendered . string ( ) . c_str ( )
>647	Argument	rendered . string ( ) . c_str ( )
>648	CallExpression	rendered . string ( ) . c_str ( )
>649	ArgumentList	 
>650	Callee	rendered . string ( ) . c_str
>651	MemberAccess	rendered . string ( ) . c_str
>652	Identifier	c_str
>653	CallExpression	rendered . string ( )
>654	ArgumentList	 
>655	Callee	rendered . string
>656	MemberAccess	rendered . string
>657	Identifier	string
>658	Identifier	rendered
>659	Callee	cairo_image_surface_create_from_png
>660	Identifier	cairo_image_surface_create_from_png
>661	Identifier	rendered_surface
>662	Identifier	rendered_surface
>663	IdentifierDeclType	cairo_surface_t *
>664	ExpressionStatement	 
>665	CallExpression	BOOST_TEST_MESSAGE ( \" - rendered
>666	ArgumentList	\" - rendered
>667	Argument	\" - rendered
>668	ShiftExpression	\" - rendered
>669	Identifier	rendered
>670	PrimaryExpression	\" - rendered
>671	Callee	BOOST_TEST_MESSAGE
>672	Identifier	BOOST_TEST_MESSAGE
>673	IdentifierDeclStatement	 
>674	IdentifierDecl	* valid_surface = cairo_image_surface_create_from_png ( valid . string ( ) . c_str ( ) )
>675	AssignmentExpr	* valid_surface = cairo_image_surface_create_from_png ( valid . string ( ) . c_str ( ) )
>676	CallExpression	cairo_image_surface_create_from_png ( valid . string ( ) . c_str ( ) )
>677	ArgumentList	valid . string ( ) . c_str ( )
>678	Argument	valid . string ( ) . c_str ( )
>679	CallExpression	valid . string ( ) . c_str ( )
>680	ArgumentList	 
>681	Callee	valid . string ( ) . c_str
>682	MemberAccess	valid . string ( ) . c_str
>683	Identifier	c_str
>684	CallExpression	valid . string ( )
>685	ArgumentList	 
>686	Callee	valid . string
>687	MemberAccess	valid . string
>688	Identifier	string
>689	Identifier	valid
>690	Callee	cairo_image_surface_create_from_png
>691	Identifier	cairo_image_surface_create_from_png
>692	Identifier	valid_surface
>693	Identifier	valid_surface
>694	IdentifierDeclType	cairo_surface_t *
>695	ExpressionStatement	 
>696	CallExpression	BOOST_TEST_MESSAGE ( \" - valid
>697	ArgumentList	\" - valid
>698	Argument	\" - valid
>699	ShiftExpression	\" - valid
>700	Identifier	valid
>701	PrimaryExpression	\" - valid
>702	Callee	BOOST_TEST_MESSAGE
>703	Identifier	BOOST_TEST_MESSAGE
>704	ExpressionStatement	 
>705	CallExpression	BOOST_TEST_MESSAGE ( \"Loading images
>706	ArgumentList	\"Loading images
>707	Argument	\"Loading images
>708	PrimaryExpression	\"Loading images
>709	Callee	BOOST_TEST_MESSAGE
>710	Identifier	BOOST_TEST_MESSAGE
>711	IdentifierDeclStatement	 
>712	IdentifierDecl	diff = getDiffDirectory ( ) / file
>713	AssignmentExpr	diff = getDiffDirectory ( ) / file
>714	MultiplicativeExpression	getDiffDirectory ( ) / file
>715	Identifier	file
>716	CallExpression	getDiffDirectory ( )
>717	ArgumentList	 
>718	Callee	getDiffDirectory
>719	Identifier	getDiffDirectory
>720	Identifier	diff
>721	Identifier	diff
>722	IdentifierDeclType	path
>723	IdentifierDeclStatement	 
>724	IdentifierDecl	valid = getValidDirectory ( ) / file
>725	AssignmentExpr	valid = getValidDirectory ( ) / file
>726	MultiplicativeExpression	getValidDirectory ( ) / file
>727	Identifier	file
>728	CallExpression	getValidDirectory ( )
>729	ArgumentList	 
>730	Callee	getValidDirectory
>731	Identifier	getValidDirectory
>732	Identifier	valid
>733	Identifier	valid
>734	IdentifierDeclType	path
>735	IdentifierDeclStatement	 
>736	IdentifierDecl	rendered = getRenderedDirectory ( ) / file
>737	AssignmentExpr	rendered = getRenderedDirectory ( ) / file
>738	MultiplicativeExpression	getRenderedDirectory ( ) / file
>739	Identifier	file
>740	CallExpression	getRenderedDirectory ( )
>741	ArgumentList	 
>742	Callee	getRenderedDirectory
>743	Identifier	getRenderedDirectory
>744	Identifier	rendered
>745	Identifier	rendered
>746	IdentifierDeclType	path
>747	IdentifierDeclStatement	 
>748	IdentifierDecl	file = string ( name ) + \".png\"
>749	AssignmentExpr	file = string ( name ) + \".png\"
>750	AdditiveExpression	string ( name ) + \".png\"
>751	PrimaryExpression	\".png\"
>752	CallExpression	string ( name )
>753	ArgumentList	name
>754	Argument	name
>755	Identifier	name
>756	Callee	string
>757	Identifier	string
>758	Identifier	file
>759	Identifier	file
>760	IdentifierDeclType	string
>801	FunctionDef	compareFile (const char * name)
>802	ParameterList	const char * name
>803	Parameter	 
>804	Identifier	name
>805	ParameterType	const char *
>806	ReturnType	void
>807	CompoundStatement	 
>808	ExpressionStatement	 
>809	CallExpression	BOOST_CHECK ( ! changed )
>810	ArgumentList	! changed
>811	Argument	! changed
>812	UnaryOp	! changed
>813	Identifier	changed
>814	UnaryOperator	!
>815	Callee	BOOST_CHECK
>816	Identifier	BOOST_CHECK
>817	ForStatement	for ( unsigned i = 0 ; i < valid_size ; i ++ )
>818	IfStatement	if ( ! changed )
>819	ExpressionStatement	 
>820	AssignmentExpr	changed = ( valid_data [ i ] != rendered_data [ i ] )
>821	EqualityExpression	valid_data [ i ] != rendered_data [ i ]
>822	ArrayIndexing	rendered_data [ i ]
>823	Identifier	i
>824	Identifier	rendered_data
>825	ArrayIndexing	valid_data [ i ]
>826	Identifier	i
>827	Identifier	valid_data
>828	Identifier	changed
>829	Condition	 
>830	UnaryOp	! changed
>831	Identifier	changed
>832	UnaryOperator	!
>833	IncDecOp	 
>834	IncDec	++
>835	Identifier	i
>836	Condition	 
>837	RelationalExpression	i < valid_size
>838	Identifier	valid_size
>839	Identifier	i
>840	ForInit	 
>841	IdentifierDeclStatement	unsigned i = 0 ;
>842	IdentifierDecl	i = 0
>843	AssignmentExpr	i = 0
>844	PrimaryExpression	0
>845	Identifier	i
>846	Identifier	i
>847	IdentifierDeclType	unsigned
>848	IdentifierDeclStatement	 
>849	IdentifierDecl	changed = false
>850	AssignmentExpr	changed = false
>851	Identifier	false
>852	Identifier	false
>853	Identifier	changed
>854	IdentifierDeclType	bool
>855	ExpressionStatement	 
>856	CallExpression	rendered_file . close ( )
>857	ArgumentList	 
>858	Callee	rendered_file . close
>859	MemberAccess	rendered_file . close
>860	Identifier	close
>861	Identifier	rendered_file
>862	ExpressionStatement	 
>863	CallExpression	rendered_file . read ( ( char * ) rendered_data , rendered_size )
>864	ArgumentList	( char * ) rendered_data
>865	Argument	rendered_size
>866	Identifier	rendered_size
>867	Argument	( char * ) rendered_data
>868	CastExpression	( char * ) rendered_data
>869	Identifier	rendered_data
>870	CastTarget	char *
>871	Callee	rendered_file . read
>872	MemberAccess	rendered_file . read
>873	Identifier	read
>874	Identifier	rendered_file
>875	ExpressionStatement	 
>876	CallExpression	rendered_file . seekg ( 0 , ios 
>877	ArgumentList	0
>878	Argument	ios 
>879	Identifier	ios 
>880	Argument	0
>881	PrimaryExpression	0
>882	Callee	rendered_file . seekg
>883	MemberAccess	rendered_file . seekg
>884	Identifier	seekg
>885	Identifier	rendered_file
>886	IdentifierDeclStatement	 
>887	IdentifierDecl	* rendered_data = new unsigned char [ rendered_size ]
>888	AssignmentExpr	* rendered_data = new unsigned char [ rendered_size ]
>889	Identifier	rendered_size
>890	Identifier	rendered_size
>891	Identifier	rendered_data
>892	IdentifierDeclType	unsigned char *
>893	ExpressionStatement	 
>894	CallExpression	valid_file . close ( )
>895	ArgumentList	 
>896	Callee	valid_file . close
>897	MemberAccess	valid_file . close
>898	Identifier	close
>899	Identifier	valid_file
>900	ExpressionStatement	 
>901	CallExpression	valid_file . read ( ( char * ) valid_data , valid_size )
>902	ArgumentList	( char * ) valid_data
>903	Argument	valid_size
>904	Identifier	valid_size
>905	Argument	( char * ) valid_data
>906	CastExpression	( char * ) valid_data
>907	Identifier	valid_data
>908	CastTarget	char *
>909	Callee	valid_file . read
>910	MemberAccess	valid_file . read
>911	Identifier	read
>912	Identifier	valid_file
>913	ExpressionStatement	 
>914	CallExpression	valid_file . seekg ( 0 , ios 
>915	ArgumentList	0
>916	Argument	ios 
>917	Identifier	ios 
>918	Argument	0
>919	PrimaryExpression	0
>920	Callee	valid_file . seekg
>921	MemberAccess	valid_file . seekg
>922	Identifier	seekg
>923	Identifier	valid_file
>924	IdentifierDeclStatement	 
>925	IdentifierDecl	* valid_data = new unsigned char [ valid_size ]
>926	AssignmentExpr	* valid_data = new unsigned char [ valid_size ]
>927	Identifier	valid_size
>928	Identifier	valid_size
>929	Identifier	valid_data
>930	IdentifierDeclType	unsigned char *
>931	ExpressionStatement	 
>932	CallExpression	BOOST_TEST_MESSAGE ( \"Compute
>933	ArgumentList	\"Compute
>934	Argument	\"Compute
>935	PrimaryExpression	\"Compute
>936	Callee	BOOST_TEST_MESSAGE
>937	Identifier	BOOST_TEST_MESSAGE
>938	ExpressionStatement	 
>939	CallExpression	BOOST_CHECK ( valid_size == rendered_size )
>940	ArgumentList	valid_size == rendered_size
>941	Argument	valid_size == rendered_size
>942	EqualityExpression	valid_size == rendered_size
>943	Identifier	rendered_size
>944	Identifier	valid_size
>945	Callee	BOOST_CHECK
>946	Identifier	BOOST_CHECK
>947	IdentifierDeclStatement	 
>948	IdentifierDecl	rendered_size = rendered_file . tellg ( )
>949	AssignmentExpr	rendered_size = rendered_file . tellg ( )
>950	CallExpression	rendered_file . tellg ( )
>951	ArgumentList	 
>952	Callee	rendered_file . tellg
>953	MemberAccess	rendered_file . tellg
>954	Identifier	tellg
>955	Identifier	rendered_file
>956	Identifier	rendered_size
>957	Identifier	rendered_size
>958	IdentifierDeclType	ifstream 
>959	IdentifierDeclStatement	 
>960	IdentifierDecl	valid_size = valid_file . tellg ( )
>961	AssignmentExpr	valid_size = valid_file . tellg ( )
>962	CallExpression	valid_file . tellg ( )
>963	ArgumentList	 
>964	Callee	valid_file . tellg
>965	MemberAccess	valid_file . tellg
>966	Identifier	tellg
>967	Identifier	valid_file
>968	Identifier	valid_size
>969	Identifier	valid_size
>970	IdentifierDeclType	ifstream 
>971	ExpressionStatement	 
>972	CallExpression	BOOST_CHECK ( rendered_file . is_open ( ) )
>973	ArgumentList	rendered_file . is_open ( )
>974	Argument	rendered_file . is_open ( )
>975	CallExpression	rendered_file . is_open ( )
>976	ArgumentList	 
>977	Callee	rendered_file . is_open
>978	MemberAccess	rendered_file . is_open
>979	Identifier	is_open
>980	Identifier	rendered_file
>981	Callee	BOOST_CHECK
>982	Identifier	BOOST_CHECK
>983	ExpressionStatement	 
>984	CallExpression	BOOST_CHECK ( valid_file . is_open ( ) )
>985	ArgumentList	valid_file . is_open ( )
>986	Argument	valid_file . is_open ( )
>987	CallExpression	valid_file . is_open ( )
>988	ArgumentList	 
>989	Callee	valid_file . is_open
>990	MemberAccess	valid_file . is_open
>991	Identifier	is_open
>992	Identifier	valid_file
>993	Callee	BOOST_CHECK
>994	Identifier	BOOST_CHECK
>995	IdentifierDeclStatement	 
>996	IdentifierDecl	rendered_file ( rendered . native ( ) , ios 
>997	Expression	rendered . native ( ) , ios 
>998	InclusiveOrExpression	ios 
>999	InclusiveOrExpression	ios 
>1000	Identifier	ios 
>1001	Identifier	ios 
>1002	Identifier	ios 
>1003	CallExpression	rendered . native ( )
>1004	ArgumentList	 
>1005	Callee	rendered . native
>1006	MemberAccess	rendered . native
>1007	Identifier	native
>1008	Identifier	rendered
>1009	Identifier	rendered_file
>1010	IdentifierDeclType	ifstream
>1011	ExpressionStatement	 
>1012	CallExpression	BOOST_TEST_MESSAGE ( \" - rendered
>1013	ArgumentList	\" - rendered
>1014	Argument	\" - rendered
>1015	ShiftExpression	\" - rendered
>1016	Identifier	rendered
>1017	PrimaryExpression	\" - rendered
>1018	Callee	BOOST_TEST_MESSAGE
>1019	Identifier	BOOST_TEST_MESSAGE
>1020	IdentifierDeclStatement	 
>1021	IdentifierDecl	valid_file ( valid . native ( ) , ios 
>1022	Expression	valid . native ( ) , ios 
>1023	InclusiveOrExpression	ios 
>1024	InclusiveOrExpression	ios 
>1025	Identifier	ios 
>1026	Identifier	ios 
>1027	Identifier	ios 
>1028	CallExpression	valid . native ( )
>1029	ArgumentList	 
>1030	Callee	valid . native
>1031	MemberAccess	valid . native
>1032	Identifier	native
>1033	Identifier	valid
>1034	Identifier	valid_file
>1035	IdentifierDeclType	ifstream
>1036	ExpressionStatement	 
>1037	CallExpression	BOOST_TEST_MESSAGE ( \" - valid
>1038	ArgumentList	\" - valid
>1039	Argument	\" - valid
>1040	ShiftExpression	\" - valid
>1041	Identifier	valid
>1042	PrimaryExpression	\" - valid
>1043	Callee	BOOST_TEST_MESSAGE
>1044	Identifier	BOOST_TEST_MESSAGE
>1045	ExpressionStatement	 
>1046	CallExpression	BOOST_TEST_MESSAGE ( \"Loading images
>1047	ArgumentList	\"Loading images
>1048	Argument	\"Loading images
>1049	PrimaryExpression	\"Loading images
>1050	Callee	BOOST_TEST_MESSAGE
>1051	Identifier	BOOST_TEST_MESSAGE
>1052	ExpressionStatement	 
>1053	Identifier	std
>1054	Statement	 
>1055	Statement	 
>1056	IdentifierDeclStatement	 
>1057	IdentifierDecl	valid = getValidDirectory ( ) / file
>1058	AssignmentExpr	valid = getValidDirectory ( ) / file
>1059	MultiplicativeExpression	getValidDirectory ( ) / file
>1060	Identifier	file
>1061	CallExpression	getValidDirectory ( )
>1062	ArgumentList	 
>1063	Callee	getValidDirectory
>1064	Identifier	getValidDirectory
>1065	Identifier	valid
>1066	Identifier	valid
>1067	IdentifierDeclType	path
>1068	IdentifierDeclStatement	 
>1069	IdentifierDecl	rendered = getRenderedDirectory ( ) / file
>1070	AssignmentExpr	rendered = getRenderedDirectory ( ) / file
>1071	MultiplicativeExpression	getRenderedDirectory ( ) / file
>1072	Identifier	file
>1073	CallExpression	getRenderedDirectory ( )
>1074	ArgumentList	 
>1075	Callee	getRenderedDirectory
>1076	Identifier	getRenderedDirectory
>1077	Identifier	rendered
>1078	Identifier	rendered
>1079	IdentifierDeclType	path
>1080	IdentifierDeclStatement	 
>1081	IdentifierDecl	file = string ( name )
>1082	AssignmentExpr	file = string ( name )
>1083	CallExpression	string ( name )
>1084	ArgumentList	name
>1085	Argument	name
>1086	Identifier	name
>1087	Callee	string
>1088	Identifier	string
>1089	Identifier	file
>1090	Identifier	file
>1091	IdentifierDeclType	string
<3=6,5,4
<6=41,9,7
<7=8
<9=32,10
<10=11
<11=30,12
<12=13
<13=14
<14=26,15
<15=24,16
<16=17
<17=18
<18=20,19
<20=21
<21=23,22
<24=25
<26=28,27
<28=29
<30=31
<32=33
<33=40,34
<34=38,35
<35=36
<36=37
<38=39
<41=42
<42=52,51,43
<43=50,44
<44=48,45
<45=46
<46=47
<48=49
<63=66,65,64
<66=101,69,67
<67=68
<69=92,70
<70=71
<71=90,72
<72=73
<73=74
<74=86,75
<75=84,76
<76=77
<77=78
<78=80,79
<80=81
<81=83,82
<84=85
<86=88,87
<88=89
<90=91
<92=93
<93=100,94
<94=98,95
<95=96
<96=97
<98=99
<101=102
<102=112,111,103
<103=110,104
<104=106,105
<106=108,107
<108=109
<122=125,124,123
<125=160,128,126
<126=127
<128=151,129
<129=130
<130=149,131
<131=132
<132=133
<133=145,134
<134=143,135
<135=136
<136=137
<137=139,138
<139=140
<140=142,141
<143=144
<145=147,146
<147=148
<149=150
<151=152
<152=159,153
<153=157,154
<154=155
<155=156
<157=158
<160=161
<161=171,170,162
<162=169,163
<163=165,164
<165=167,166
<167=168
<181=184,183,182
<184=219,187,185
<185=186
<187=210,188
<188=189
<189=208,190
<190=191
<191=192
<192=204,193
<193=202,194
<194=195
<195=196
<196=198,197
<198=199
<199=201,200
<202=203
<204=206,205
<206=207
<208=209
<210=211
<211=218,212
<212=216,213
<213=214
<214=215
<216=217
<219=220
<220=230,229,221
<221=228,222
<222=224,223
<224=226,225
<226=227
<240=243,242,241
<243=263,246,244
<244=245
<246=254,247
<247=248
<248=252,249
<249=250
<250=251
<252=253
<254=255
<255=262,256
<256=260,257
<257=258
<258=259
<260=261
<263=264
<264=274,273,265
<265=272,266
<266=268,267
<268=270,269
<270=271
<281=284,283,282
<284=304,287,285
<285=286
<287=295,288
<288=289
<289=293,290
<290=291
<291=292
<293=294
<295=296
<296=303,297
<297=301,298
<298=299
<299=300
<301=302
<304=305
<305=315,314,306
<306=313,307
<307=309,308
<309=311,310
<311=312
<322=325,324,323
<325=340,328,326
<326=327
<328=329
<329=338,330
<330=331
<331=332
<332=336,333
<333=334
<334=335
<336=337
<338=339
<340=341
<341=351,350,342
<342=349,343
<343=345,344
<345=347,346
<347=348
<358=364,363,359
<359=360
<360=362,361
<364=747,735,723,711,704,695,673,664,642,630,618,606,594,582,569,562,553,541,529,522,400,393,374,365
<365=366
<366=372,367
<367=368
<368=369
<369=371,370
<372=373
<374=375
<375=391,376
<376=389,377
<377=378
<378=380,379
<380=381
<381=383,382
<383=385,384
<385=386
<386=388,387
<389=390
<391=392
<393=394
<394=398,395
<395=396
<396=397
<398=399
<400=514,508,505,401
<401=486,467,448,429,410,406,402
<402=403
<403=405,404
<406=407
<407=409,408
<410=411
<411=426,412
<412=425,413
<413=423,414
<414=415
<415=416
<416=420,417
<417=419,418
<420=422,421
<423=424
<426=428,427
<429=430
<430=445,431
<431=444,432
<432=442,433
<433=434
<434=435
<435=439,436
<436=438,437
<439=441,440
<442=443
<445=447,446
<448=449
<449=464,450
<450=463,451
<451=461,452
<452=453
<453=454
<454=458,455
<455=457,456
<458=460,459
<461=462
<464=466,465
<467=468
<468=483,469
<469=482,470
<470=480,471
<471=472
<472=473
<473=477,474
<474=476,475
<477=479,478
<480=481
<483=485,484
<486=501,487
<487=488
<488=500,489
<489=495,490
<490=494,491
<491=493,492
<495=499,496
<496=498,497
<501=502
<502=504,503
<505=507,506
<508=509
<509=513,510
<510=512,511
<514=515
<515=516
<516=521,520,517
<517=519,518
<522=523
<523=528,527,524
<524=526,525
<529=530
<530=540,539,531
<531=538,532
<532=536,533
<533=534
<534=535
<536=537
<541=542
<542=552,551,543
<543=550,544
<544=548,545
<545=546
<546=547
<548=549
<553=554
<554=560,555
<555=556
<556=557
<557=559,558
<560=561
<562=563
<563=567,564
<564=565
<565=566
<567=568
<569=570
<570=580,571
<571=572
<572=573
<573=577,574
<574=576,575
<577=579,578
<580=581
<582=583
<583=593,592,584
<584=591,585
<585=589,586
<586=587
<587=588
<589=590
<594=595
<595=605,604,596
<596=603,597
<597=601,598
<598=599
<599=600
<601=602
<606=607
<607=617,616,608
<608=615,609
<609=613,610
<610=611
<611=612
<613=614
<618=619
<619=629,628,620
<620=627,621
<621=625,622
<622=623
<623=624
<625=626
<630=631
<631=641,640,632
<632=639,633
<633=637,634
<634=635
<635=636
<637=638
<642=643
<643=663,662,644
<644=661,645
<645=659,646
<646=647
<647=648
<648=650,649
<650=651
<651=653,652
<653=655,654
<655=656
<656=658,657
<659=660
<664=665
<665=671,666
<666=667
<667=668
<668=670,669
<671=672
<673=674
<674=694,693,675
<675=692,676
<676=690,677
<677=678
<678=679
<679=681,680
<681=682
<682=684,683
<684=686,685
<686=687
<687=689,688
<690=691
<695=696
<696=702,697
<697=698
<698=699
<699=701,700
<702=703
<704=705
<705=709,706
<706=707
<707=708
<709=710
<711=712
<712=722,721,713
<713=720,714
<714=716,715
<716=718,717
<718=719
<723=724
<724=734,733,725
<725=732,726
<726=728,727
<728=730,729
<730=731
<735=736
<736=746,745,737
<737=744,738
<738=740,739
<740=742,741
<742=743
<747=748
<748=760,759,749
<749=758,750
<750=752,751
<752=756,753
<753=754
<754=755
<756=757
<801=807,806,802
<802=803
<803=805,804
<807=1080,1068,1056,1055,1054,1052,1045,1036,1020,1011,995,983,971,959,947,938,931,924,913,900,893,886,875,862,855,848,817,808
<808=809
<809=815,810
<810=811
<811=812
<812=814,813
<815=816
<817=840,836,833,818
<818=829,819
<819=820
<820=828,821
<821=825,822
<822=824,823
<825=827,826
<829=830
<830=832,831
<833=835,834
<836=837
<837=839,838
<840=841
<841=842
<842=847,846,843
<843=845,844
<848=849
<849=854,853,850
<850=852,851
<855=856
<856=858,857
<858=859
<859=861,860
<862=863
<863=871,864
<864=867,865
<865=866
<867=868
<868=870,869
<871=872
<872=874,873
<875=876
<876=882,877
<877=880,878
<878=879
<880=881
<882=883
<883=885,884
<886=887
<887=892,891,888
<888=890,889
<893=894
<894=896,895
<896=897
<897=899,898
<900=901
<901=909,902
<902=905,903
<903=904
<905=906
<906=908,907
<909=910
<910=912,911
<913=914
<914=920,915
<915=918,916
<916=917
<918=919
<920=921
<921=923,922
<924=925
<925=930,929,926
<926=928,927
<931=932
<932=936,933
<933=934
<934=935
<936=937
<938=939
<939=945,940
<940=941
<941=942
<942=944,943
<945=946
<947=948
<948=958,957,949
<949=956,950
<950=952,951
<952=953
<953=955,954
<959=960
<960=970,969,961
<961=968,962
<962=964,963
<964=965
<965=967,966
<971=972
<972=981,973
<973=974
<974=975
<975=977,976
<977=978
<978=980,979
<981=982
<983=984
<984=993,985
<985=986
<986=987
<987=989,988
<989=990
<990=992,991
<993=994
<995=996
<996=1010,1009,997
<997=1003,998
<998=1002,999
<999=1001,1000
<1003=1005,1004
<1005=1006
<1006=1008,1007
<1011=1012
<1012=1018,1013
<1013=1014
<1014=1015
<1015=1017,1016
<1018=1019
<1020=1021
<1021=1035,1034,1022
<1022=1028,1023
<1023=1027,1024
<1024=1026,1025
<1028=1030,1029
<1030=1031
<1031=1033,1032
<1036=1037
<1037=1043,1038
<1038=1039
<1039=1040
<1040=1042,1041
<1043=1044
<1045=1046
<1046=1050,1047
<1047=1048
<1048=1049
<1050=1051
<1052=1053
<1056=1057
<1057=1067,1066,1058
<1058=1065,1059
<1059=1061,1060
<1061=1063,1062
<1063=1064
<1068=1069
<1069=1079,1078,1070
<1070=1077,1071
<1071=1073,1072
<1073=1075,1074
<1075=1076
<1080=1081
<1081=1091,1090,1082
<1082=1089,1083
<1083=1087,1084
<1084=1085
<1085=1086
<1087=1088
