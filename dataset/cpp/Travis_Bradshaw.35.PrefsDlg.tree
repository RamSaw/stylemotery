>5	FunctionDef	CPrefsDlg 
>6	ParameterList	CWnd * pParent
>7	Parameter	 
>8	Identifier	pParent
>9	ParameterType	CWnd *
>10	CompoundStatement	 
>11	ExpressionStatement	 
>12	AssignmentExpr	m_nUndoLevels = 64
>13	PrimaryExpression	64
>14	Identifier	m_nUndoLevels
>15	ExpressionStatement	 
>16	AssignmentExpr	m_nShader = 0
>17	PrimaryExpression	0
>18	Identifier	m_nShader
>19	ExpressionStatement	 
>20	AssignmentExpr	m_bGLLighting = FALSE
>21	Identifier	FALSE
>22	Identifier	m_bGLLighting
>23	ExpressionStatement	 
>24	AssignmentExpr	m_bShowShaders = TRUE
>25	Identifier	TRUE
>26	Identifier	m_bShowShaders
>27	ExpressionStatement	 
>28	AssignmentExpr	m_nTextureQuality = 3
>29	PrimaryExpression	3
>30	Identifier	m_nTextureQuality
>31	ExpressionStatement	 
>32	AssignmentExpr	m_bSelectWholeEntities = TRUE
>33	Identifier	TRUE
>34	Identifier	m_bSelectWholeEntities
>35	ExpressionStatement	 
>36	AssignmentExpr	m_bSwitchClip = FALSE
>37	Identifier	FALSE
>38	Identifier	m_bSwitchClip
>39	ExpressionStatement	 
>40	AssignmentExpr	m_nTextureScale = 2
>41	PrimaryExpression	2
>42	Identifier	m_nTextureScale
>43	ExpressionStatement	 
>44	AssignmentExpr	m_nEntityShowState = 0
>45	PrimaryExpression	0
>46	Identifier	m_nEntityShowState
>47	ExpressionStatement	 
>48	AssignmentExpr	m_bSelectTerrain = TRUE
>49	Identifier	TRUE
>50	Identifier	m_bSelectTerrain
>51	ExpressionStatement	 
>52	AssignmentExpr	m_bSelectCurves = TRUE
>53	Identifier	TRUE
>54	Identifier	m_bSelectCurves
>55	ExpressionStatement	 
>56	AssignmentExpr	m_bNoStipple = FALSE
>57	Identifier	FALSE
>58	Identifier	m_bNoStipple
>59	ExpressionStatement	 
>60	AssignmentExpr	m_nShader = - 1
>61	UnaryOp	- 1
>62	PrimaryExpression	1
>63	UnaryOperator	-
>64	Identifier	m_nShader
>65	ExpressionStatement	 
>66	AssignmentExpr	m_bShowShaders = FALSE
>67	Identifier	FALSE
>68	Identifier	m_bShowShaders
>69	ExpressionStatement	 
>70	AssignmentExpr	m_bDisplayLists = TRUE
>71	Identifier	TRUE
>72	Identifier	m_bDisplayLists
>73	ExpressionStatement	 
>74	AssignmentExpr	m_bTextureScrollbar = TRUE
>75	Identifier	TRUE
>76	Identifier	m_bTextureScrollbar
>77	ExpressionStatement	 
>78	AssignmentExpr	m_bChaseMouse = FALSE
>79	Identifier	FALSE
>80	Identifier	m_bChaseMouse
>81	ExpressionStatement	 
>82	AssignmentExpr	m_bHiColorTextures = TRUE
>83	Identifier	TRUE
>84	Identifier	m_bHiColorTextures
>85	ExpressionStatement	 
>86	AssignmentExpr	m_bBuggyICD = FALSE
>87	Identifier	FALSE
>88	Identifier	m_bBuggyICD
>89	ExpressionStatement	 
>90	AssignmentExpr	m_bSGIOpenGL = FALSE
>91	Identifier	FALSE
>92	Identifier	m_bSGIOpenGL
>93	ExpressionStatement	 
>94	AssignmentExpr	m_nRotation = 0
>95	PrimaryExpression	0
>96	Identifier	m_nRotation
>97	ExpressionStatement	 
>98	AssignmentExpr	m_strUserPath = _T ( \"\" )
>99	CallExpression	_T ( \"\" )
>100	ArgumentList	\"\"
>101	Argument	\"\"
>102	PrimaryExpression	\"\"
>103	Callee	_T
>104	Identifier	_T
>105	Identifier	m_strUserPath
>106	ExpressionStatement	 
>107	AssignmentExpr	m_bNoClamp = FALSE
>108	Identifier	FALSE
>109	Identifier	m_bNoClamp
>110	ExpressionStatement	 
>111	AssignmentExpr	m_bWideToolbar = TRUE
>112	Identifier	TRUE
>113	Identifier	m_bWideToolbar
>114	ExpressionStatement	 
>115	AssignmentExpr	m_bDLLEntities = FALSE
>116	Identifier	FALSE
>117	Identifier	m_bDLLEntities
>118	ExpressionStatement	 
>119	AssignmentExpr	m_bSizePaint = FALSE
>120	Identifier	FALSE
>121	Identifier	m_bSizePaint
>122	ExpressionStatement	 
>123	AssignmentExpr	m_bZVis = FALSE
>124	Identifier	FALSE
>125	Identifier	m_bZVis
>126	ExpressionStatement	 
>127	AssignmentExpr	m_bYZVis = FALSE
>128	Identifier	FALSE
>129	Identifier	m_bYZVis
>130	ExpressionStatement	 
>131	AssignmentExpr	m_bXZVis = FALSE
>132	Identifier	FALSE
>133	Identifier	m_bXZVis
>134	ExpressionStatement	 
>135	AssignmentExpr	m_bSnapTToGrid = FALSE
>136	Identifier	FALSE
>137	Identifier	m_bSnapTToGrid
>138	ExpressionStatement	 
>139	AssignmentExpr	m_bQE4Painting = TRUE
>140	Identifier	TRUE
>141	Identifier	m_bQE4Painting
>142	ExpressionStatement	 
>143	AssignmentExpr	m_bFaceColors = FALSE
>144	Identifier	FALSE
>145	Identifier	m_bFaceColors
>146	ExpressionStatement	 
>147	AssignmentExpr	m_bTextureBar = FALSE
>148	Identifier	FALSE
>149	Identifier	m_bTextureBar
>150	ExpressionStatement	 
>151	AssignmentExpr	m_bALTEdge = FALSE
>152	Identifier	FALSE
>153	Identifier	m_bALTEdge
>154	ExpressionStatement	 
>155	AssignmentExpr	m_strWhatGame = _T ( \"Quake3\" )
>156	CallExpression	_T ( \"Quake3\" )
>157	ArgumentList	\"Quake3\"
>158	Argument	\"Quake3\"
>159	PrimaryExpression	\"Quake3\"
>160	Callee	_T
>161	Identifier	_T
>162	Identifier	m_strWhatGame
>163	ExpressionStatement	 
>164	AssignmentExpr	m_nWhatGame = 0
>165	PrimaryExpression	0
>166	Identifier	m_nWhatGame
>167	ExpressionStatement	 
>168	AssignmentExpr	m_strPrefabPath = _T ( \"\" )
>169	CallExpression	_T ( \"\" )
>170	ArgumentList	\"\"
>171	Argument	\"\"
>172	PrimaryExpression	\"\"
>173	Callee	_T
>174	Identifier	_T
>175	Identifier	m_strPrefabPath
>176	ExpressionStatement	 
>177	AssignmentExpr	m_bNewLightDraw = FALSE
>178	Identifier	FALSE
>179	Identifier	m_bNewLightDraw
>180	ExpressionStatement	 
>181	AssignmentExpr	m_bCamXYUpdate = FALSE
>182	Identifier	FALSE
>183	Identifier	m_bCamXYUpdate
>184	ExpressionStatement	 
>185	AssignmentExpr	m_nStatusSize = 10
>186	PrimaryExpression	10
>187	Identifier	m_nStatusSize
>188	ExpressionStatement	 
>189	AssignmentExpr	m_strPAKFile = _T ( \"c
>190	CallExpression	_T ( \"c
>191	ArgumentList	\"c
>192	Argument	\"c
>193	PrimaryExpression	\"c
>194	Callee	_T
>195	Identifier	_T
>196	Identifier	m_strPAKFile
>197	ExpressionStatement	 
>198	AssignmentExpr	m_bCleanTiny = FALSE
>199	Identifier	FALSE
>200	Identifier	m_bCleanTiny
>201	ExpressionStatement	 
>202	AssignmentExpr	m_fTinySize = 0.5
>203	PrimaryExpression	0.5
>204	Identifier	m_fTinySize
>205	ExpressionStatement	 
>206	AssignmentExpr	m_bSnapShots = FALSE
>207	Identifier	FALSE
>208	Identifier	m_bSnapShots
>209	ExpressionStatement	 
>210	AssignmentExpr	m_bTextureWindow = FALSE
>211	Identifier	FALSE
>212	Identifier	m_bTextureWindow
>213	ExpressionStatement	 
>214	AssignmentExpr	m_bLoadLastMap = FALSE
>215	Identifier	FALSE
>216	Identifier	m_bLoadLastMap
>217	ExpressionStatement	 
>218	AssignmentExpr	m_bPAK = FALSE
>219	Identifier	FALSE
>220	Identifier	m_bPAK
>221	ExpressionStatement	 
>222	AssignmentExpr	m_strAutoSave = _T ( \"5\" )
>223	CallExpression	_T ( \"5\" )
>224	ArgumentList	\"5\"
>225	Argument	\"5\"
>226	PrimaryExpression	\"5\"
>227	Callee	_T
>228	Identifier	_T
>229	Identifier	m_strAutoSave
>230	ExpressionStatement	 
>231	AssignmentExpr	m_bNewApplyHandling = FALSE
>232	Identifier	FALSE
>233	Identifier	m_bNewApplyHandling
>234	ExpressionStatement	 
>235	AssignmentExpr	m_bAutoSave = TRUE
>236	Identifier	TRUE
>237	Identifier	m_bAutoSave
>238	ExpressionStatement	 
>239	AssignmentExpr	m_bVertex = FALSE
>240	Identifier	FALSE
>241	Identifier	m_bVertex
>242	ExpressionStatement	 
>243	AssignmentExpr	m_bSetGame = FALSE
>244	Identifier	FALSE
>245	Identifier	m_bSetGame
>246	ExpressionStatement	 
>247	AssignmentExpr	m_bRunQuake = FALSE
>248	Identifier	FALSE
>249	Identifier	m_bRunQuake
>250	ExpressionStatement	 
>251	AssignmentExpr	m_bRightClick = FALSE
>252	Identifier	FALSE
>253	Identifier	m_bRightClick
>254	ExpressionStatement	 
>255	AssignmentExpr	m_bInternalBSP = FALSE
>256	Identifier	FALSE
>257	Identifier	m_bInternalBSP
>258	ExpressionStatement	 
>259	AssignmentExpr	m_bFace = FALSE
>260	Identifier	FALSE
>261	Identifier	m_bFace
>262	ExpressionStatement	 
>263	AssignmentExpr	m_bLoadLast = FALSE
>264	Identifier	FALSE
>265	Identifier	m_bLoadLast
>266	ExpressionStatement	 
>267	AssignmentExpr	m_nView = 0
>268	PrimaryExpression	0
>269	Identifier	m_nView
>270	ExpressionStatement	 
>271	AssignmentExpr	m_nMouse = 1
>272	PrimaryExpression	1
>273	Identifier	m_nMouse
>274	ExpressionStatement	 
>275	AssignmentExpr	m_strQuake2 = _T ( \"c
>276	CallExpression	_T ( \"c
>277	ArgumentList	\"c
>278	Argument	\"c
>279	PrimaryExpression	\"c
>280	Callee	_T
>281	Identifier	_T
>282	Identifier	m_strQuake2
>348	FunctionDef	CPrefsDlg 
>349	ParameterList	CDataExchange * pDX
>350	Parameter	 
>351	Identifier	pDX
>352	ParameterType	CDataExchange *
>353	ReturnType	void
>354	CompoundStatement	 
>355	ExpressionStatement	 
>356	CallExpression	DDV_MinMaxInt ( pDX , m_nUndoLevels , 1 , 64 )
>357	ArgumentList	pDX
>358	Argument	64
>359	PrimaryExpression	64
>360	Argument	1
>361	PrimaryExpression	1
>362	Argument	m_nUndoLevels
>363	Identifier	m_nUndoLevels
>364	Argument	pDX
>365	Identifier	pDX
>366	Callee	DDV_MinMaxInt
>367	Identifier	DDV_MinMaxInt
>368	ExpressionStatement	 
>369	CallExpression	DDX_Text ( pDX , IDC_EDIT_UNDOLEVELS , m_nUndoLevels )
>370	ArgumentList	pDX
>371	Argument	m_nUndoLevels
>372	Identifier	m_nUndoLevels
>373	Argument	IDC_EDIT_UNDOLEVELS
>374	Identifier	IDC_EDIT_UNDOLEVELS
>375	Argument	pDX
>376	Identifier	pDX
>377	Callee	DDX_Text
>378	Identifier	DDX_Text
>379	ExpressionStatement	 
>380	CallExpression	DDX_Check ( pDX , IDC_CHECK_NOSTIPPLE , m_bNoStipple )
>381	ArgumentList	pDX
>382	Argument	m_bNoStipple
>383	Identifier	m_bNoStipple
>384	Argument	IDC_CHECK_NOSTIPPLE
>385	Identifier	IDC_CHECK_NOSTIPPLE
>386	Argument	pDX
>387	Identifier	pDX
>388	Callee	DDX_Check
>389	Identifier	DDX_Check
>390	ExpressionStatement	 
>391	CallExpression	DDX_CBIndex ( pDX , IDC_COMBO_SHADERS , m_nShader )
>392	ArgumentList	pDX
>393	Argument	m_nShader
>394	Identifier	m_nShader
>395	Argument	IDC_COMBO_SHADERS
>396	Identifier	IDC_COMBO_SHADERS
>397	Argument	pDX
>398	Identifier	pDX
>399	Callee	DDX_CBIndex
>400	Identifier	DDX_CBIndex
>401	ExpressionStatement	 
>402	CallExpression	DDX_Check ( pDX , IDC_CHECK_DISPLAYLISTS , m_bDisplayLists )
>403	ArgumentList	pDX
>404	Argument	m_bDisplayLists
>405	Identifier	m_bDisplayLists
>406	Argument	IDC_CHECK_DISPLAYLISTS
>407	Identifier	IDC_CHECK_DISPLAYLISTS
>408	Argument	pDX
>409	Identifier	pDX
>410	Callee	DDX_Check
>411	Identifier	DDX_Check
>412	ExpressionStatement	 
>413	CallExpression	DDX_Check ( pDX , IDC_CHECK_TEXTURESCROLLBAR , m_bTextureScrollbar )
>414	ArgumentList	pDX
>415	Argument	m_bTextureScrollbar
>416	Identifier	m_bTextureScrollbar
>417	Argument	IDC_CHECK_TEXTURESCROLLBAR
>418	Identifier	IDC_CHECK_TEXTURESCROLLBAR
>419	Argument	pDX
>420	Identifier	pDX
>421	Callee	DDX_Check
>422	Identifier	DDX_Check
>423	ExpressionStatement	 
>424	CallExpression	DDX_Check ( pDX , IDC_CHECK_MOUSECHASE , m_bChaseMouse )
>425	ArgumentList	pDX
>426	Argument	m_bChaseMouse
>427	Identifier	m_bChaseMouse
>428	Argument	IDC_CHECK_MOUSECHASE
>429	Identifier	IDC_CHECK_MOUSECHASE
>430	Argument	pDX
>431	Identifier	pDX
>432	Callee	DDX_Check
>433	Identifier	DDX_Check
>434	ExpressionStatement	 
>435	CallExpression	DDX_Check ( pDX , IDC_CHECK_HICOLOR , m_bHiColorTextures )
>436	ArgumentList	pDX
>437	Argument	m_bHiColorTextures
>438	Identifier	m_bHiColorTextures
>439	Argument	IDC_CHECK_HICOLOR
>440	Identifier	IDC_CHECK_HICOLOR
>441	Argument	pDX
>442	Identifier	pDX
>443	Callee	DDX_Check
>444	Identifier	DDX_Check
>445	ExpressionStatement	 
>446	CallExpression	DDX_Check ( pDX , IDC_CHECK_BUGGYICD , m_bBuggyICD )
>447	ArgumentList	pDX
>448	Argument	m_bBuggyICD
>449	Identifier	m_bBuggyICD
>450	Argument	IDC_CHECK_BUGGYICD
>451	Identifier	IDC_CHECK_BUGGYICD
>452	Argument	pDX
>453	Identifier	pDX
>454	Callee	DDX_Check
>455	Identifier	DDX_Check
>456	ExpressionStatement	 
>457	CallExpression	DDX_Check ( pDX , IDC_CHECK_SGIOPENGL , m_bSGIOpenGL )
>458	ArgumentList	pDX
>459	Argument	m_bSGIOpenGL
>460	Identifier	m_bSGIOpenGL
>461	Argument	IDC_CHECK_SGIOPENGL
>462	Identifier	IDC_CHECK_SGIOPENGL
>463	Argument	pDX
>464	Identifier	pDX
>465	Callee	DDX_Check
>466	Identifier	DDX_Check
>467	ExpressionStatement	 
>468	CallExpression	DDX_Text ( pDX , IDC_EDIT_ROTATION , m_nRotation )
>469	ArgumentList	pDX
>470	Argument	m_nRotation
>471	Identifier	m_nRotation
>472	Argument	IDC_EDIT_ROTATION
>473	Identifier	IDC_EDIT_ROTATION
>474	Argument	pDX
>475	Identifier	pDX
>476	Callee	DDX_Text
>477	Identifier	DDX_Text
>478	ExpressionStatement	 
>479	CallExpression	DDX_Text ( pDX , IDC_EDIT_USERPATH , m_strUserPath )
>480	ArgumentList	pDX
>481	Argument	m_strUserPath
>482	Identifier	m_strUserPath
>483	Argument	IDC_EDIT_USERPATH
>484	Identifier	IDC_EDIT_USERPATH
>485	Argument	pDX
>486	Identifier	pDX
>487	Callee	DDX_Text
>488	Identifier	DDX_Text
>489	ExpressionStatement	 
>490	CallExpression	DDX_Check ( pDX , IDC_CHECK_NOCLAMP , m_bNoClamp )
>491	ArgumentList	pDX
>492	Argument	m_bNoClamp
>493	Identifier	m_bNoClamp
>494	Argument	IDC_CHECK_NOCLAMP
>495	Identifier	IDC_CHECK_NOCLAMP
>496	Argument	pDX
>497	Identifier	pDX
>498	Callee	DDX_Check
>499	Identifier	DDX_Check
>500	ExpressionStatement	 
>501	CallExpression	DDX_Check ( pDX , IDC_CHECK_WIDETOOLBAR , m_bWideToolbar )
>502	ArgumentList	pDX
>503	Argument	m_bWideToolbar
>504	Identifier	m_bWideToolbar
>505	Argument	IDC_CHECK_WIDETOOLBAR
>506	Identifier	IDC_CHECK_WIDETOOLBAR
>507	Argument	pDX
>508	Identifier	pDX
>509	Callee	DDX_Check
>510	Identifier	DDX_Check
>511	ExpressionStatement	 
>512	CallExpression	DDX_Check ( pDX , IDC_CHECK_DLLENTITIES , m_bDLLEntities )
>513	ArgumentList	pDX
>514	Argument	m_bDLLEntities
>515	Identifier	m_bDLLEntities
>516	Argument	IDC_CHECK_DLLENTITIES
>517	Identifier	IDC_CHECK_DLLENTITIES
>518	Argument	pDX
>519	Identifier	pDX
>520	Callee	DDX_Check
>521	Identifier	DDX_Check
>522	ExpressionStatement	 
>523	CallExpression	DDX_Check ( pDX , IDC_CHECK_SIZEPAINT , m_bSizePaint )
>524	ArgumentList	pDX
>525	Argument	m_bSizePaint
>526	Identifier	m_bSizePaint
>527	Argument	IDC_CHECK_SIZEPAINT
>528	Identifier	IDC_CHECK_SIZEPAINT
>529	Argument	pDX
>530	Identifier	pDX
>531	Callee	DDX_Check
>532	Identifier	DDX_Check
>533	ExpressionStatement	 
>534	CallExpression	DDX_Check ( pDX , IDC_CHECK_SNAPT , m_bSnapTToGrid )
>535	ArgumentList	pDX
>536	Argument	m_bSnapTToGrid
>537	Identifier	m_bSnapTToGrid
>538	Argument	IDC_CHECK_SNAPT
>539	Identifier	IDC_CHECK_SNAPT
>540	Argument	pDX
>541	Identifier	pDX
>542	Callee	DDX_Check
>543	Identifier	DDX_Check
>544	ExpressionStatement	 
>545	CallExpression	DDX_Check ( pDX , IDC_CHECK_QE4PAINTING , m_bQE4Painting )
>546	ArgumentList	pDX
>547	Argument	m_bQE4Painting
>548	Identifier	m_bQE4Painting
>549	Argument	IDC_CHECK_QE4PAINTING
>550	Identifier	IDC_CHECK_QE4PAINTING
>551	Argument	pDX
>552	Identifier	pDX
>553	Callee	DDX_Check
>554	Identifier	DDX_Check
>555	ExpressionStatement	 
>556	CallExpression	DDX_Check ( pDX , IDC_CHECK_FACECOLOR , m_bFaceColors )
>557	ArgumentList	pDX
>558	Argument	m_bFaceColors
>559	Identifier	m_bFaceColors
>560	Argument	IDC_CHECK_FACECOLOR
>561	Identifier	IDC_CHECK_FACECOLOR
>562	Argument	pDX
>563	Identifier	pDX
>564	Callee	DDX_Check
>565	Identifier	DDX_Check
>566	ExpressionStatement	 
>567	CallExpression	DDX_Check ( pDX , IDC_CHECK_TEXTURETOOLBAR , m_bTextureBar )
>568	ArgumentList	pDX
>569	Argument	m_bTextureBar
>570	Identifier	m_bTextureBar
>571	Argument	IDC_CHECK_TEXTURETOOLBAR
>572	Identifier	IDC_CHECK_TEXTURETOOLBAR
>573	Argument	pDX
>574	Identifier	pDX
>575	Callee	DDX_Check
>576	Identifier	DDX_Check
>577	ExpressionStatement	 
>578	CallExpression	DDX_Check ( pDX , IDC_CHECK_ALTDRAG , m_bALTEdge )
>579	ArgumentList	pDX
>580	Argument	m_bALTEdge
>581	Identifier	m_bALTEdge
>582	Argument	IDC_CHECK_ALTDRAG
>583	Identifier	IDC_CHECK_ALTDRAG
>584	Argument	pDX
>585	Identifier	pDX
>586	Callee	DDX_Check
>587	Identifier	DDX_Check
>588	ExpressionStatement	 
>589	CallExpression	DDX_CBString ( pDX , IDC_COMBO_WHATGAME , m_strWhatGame )
>590	ArgumentList	pDX
>591	Argument	m_strWhatGame
>592	Identifier	m_strWhatGame
>593	Argument	IDC_COMBO_WHATGAME
>594	Identifier	IDC_COMBO_WHATGAME
>595	Argument	pDX
>596	Identifier	pDX
>597	Callee	DDX_CBString
>598	Identifier	DDX_CBString
>599	ExpressionStatement	 
>600	CallExpression	DDX_Text ( pDX , IDC_EDIT_PREFABPATH , m_strPrefabPath )
>601	ArgumentList	pDX
>602	Argument	m_strPrefabPath
>603	Identifier	m_strPrefabPath
>604	Argument	IDC_EDIT_PREFABPATH
>605	Identifier	IDC_EDIT_PREFABPATH
>606	Argument	pDX
>607	Identifier	pDX
>608	Callee	DDX_Text
>609	Identifier	DDX_Text
>610	ExpressionStatement	 
>611	CallExpression	DDX_Check ( pDX , IDC_CHECK_LIGHTDRAW , m_bNewLightDraw )
>612	ArgumentList	pDX
>613	Argument	m_bNewLightDraw
>614	Identifier	m_bNewLightDraw
>615	Argument	IDC_CHECK_LIGHTDRAW
>616	Identifier	IDC_CHECK_LIGHTDRAW
>617	Argument	pDX
>618	Identifier	pDX
>619	Callee	DDX_Check
>620	Identifier	DDX_Check
>621	ExpressionStatement	 
>622	CallExpression	DDX_Check ( pDX , IDC_CHECK_CAMXYUPDATE , m_bCamXYUpdate )
>623	ArgumentList	pDX
>624	Argument	m_bCamXYUpdate
>625	Identifier	m_bCamXYUpdate
>626	Argument	IDC_CHECK_CAMXYUPDATE
>627	Identifier	IDC_CHECK_CAMXYUPDATE
>628	Argument	pDX
>629	Identifier	pDX
>630	Callee	DDX_Check
>631	Identifier	DDX_Check
>632	ExpressionStatement	 
>633	CallExpression	DDV_MinMaxInt ( pDX , m_nStatusSize , 2 , 14 )
>634	ArgumentList	pDX
>635	Argument	14
>636	PrimaryExpression	14
>637	Argument	2
>638	PrimaryExpression	2
>639	Argument	m_nStatusSize
>640	Identifier	m_nStatusSize
>641	Argument	pDX
>642	Identifier	pDX
>643	Callee	DDV_MinMaxInt
>644	Identifier	DDV_MinMaxInt
>645	ExpressionStatement	 
>646	CallExpression	DDX_Text ( pDX , IDC_EDIT_STATUSPOINTSIZE , m_nStatusSize )
>647	ArgumentList	pDX
>648	Argument	m_nStatusSize
>649	Identifier	m_nStatusSize
>650	Argument	IDC_EDIT_STATUSPOINTSIZE
>651	Identifier	IDC_EDIT_STATUSPOINTSIZE
>652	Argument	pDX
>653	Identifier	pDX
>654	Callee	DDX_Text
>655	Identifier	DDX_Text
>656	ExpressionStatement	 
>657	CallExpression	DDX_Text ( pDX , IDC_EDIT_PAKFILE , m_strPAKFile )
>658	ArgumentList	pDX
>659	Argument	m_strPAKFile
>660	Identifier	m_strPAKFile
>661	Argument	IDC_EDIT_PAKFILE
>662	Identifier	IDC_EDIT_PAKFILE
>663	Argument	pDX
>664	Identifier	pDX
>665	Callee	DDX_Text
>666	Identifier	DDX_Text
>667	ExpressionStatement	 
>668	CallExpression	DDX_Check ( pDX , IDC_CHECK_SNAPSHOTS , m_bSnapShots )
>669	ArgumentList	pDX
>670	Argument	m_bSnapShots
>671	Identifier	m_bSnapShots
>672	Argument	IDC_CHECK_SNAPSHOTS
>673	Identifier	IDC_CHECK_SNAPSHOTS
>674	Argument	pDX
>675	Identifier	pDX
>676	Callee	DDX_Check
>677	Identifier	DDX_Check
>678	ExpressionStatement	 
>679	CallExpression	DDX_Check ( pDX , IDC_CHECK_TEXTUREWINDOW , m_bTextureWindow )
>680	ArgumentList	pDX
>681	Argument	m_bTextureWindow
>682	Identifier	m_bTextureWindow
>683	Argument	IDC_CHECK_TEXTUREWINDOW
>684	Identifier	IDC_CHECK_TEXTUREWINDOW
>685	Argument	pDX
>686	Identifier	pDX
>687	Callee	DDX_Check
>688	Identifier	DDX_Check
>689	ExpressionStatement	 
>690	CallExpression	DDX_Check ( pDX , IDC_CHECK_LOADLASTMAP , m_bLoadLastMap )
>691	ArgumentList	pDX
>692	Argument	m_bLoadLastMap
>693	Identifier	m_bLoadLastMap
>694	Argument	IDC_CHECK_LOADLASTMAP
>695	Identifier	IDC_CHECK_LOADLASTMAP
>696	Argument	pDX
>697	Identifier	pDX
>698	Callee	DDX_Check
>699	Identifier	DDX_Check
>700	ExpressionStatement	 
>701	CallExpression	DDX_Check ( pDX , IDC_CHECK_PAK , m_bPAK )
>702	ArgumentList	pDX
>703	Argument	m_bPAK
>704	Identifier	m_bPAK
>705	Argument	IDC_CHECK_PAK
>706	Identifier	IDC_CHECK_PAK
>707	Argument	pDX
>708	Identifier	pDX
>709	Callee	DDX_Check
>710	Identifier	DDX_Check
>711	ExpressionStatement	 
>712	CallExpression	DDX_Text ( pDX , IDC_EDIT_AUTOSAVE , m_strAutoSave )
>713	ArgumentList	pDX
>714	Argument	m_strAutoSave
>715	Identifier	m_strAutoSave
>716	Argument	IDC_EDIT_AUTOSAVE
>717	Identifier	IDC_EDIT_AUTOSAVE
>718	Argument	pDX
>719	Identifier	pDX
>720	Callee	DDX_Text
>721	Identifier	DDX_Text
>722	ExpressionStatement	 
>723	CallExpression	DDX_Check ( pDX , IDC_CHECK_AUTOSAVE , m_bAutoSave )
>724	ArgumentList	pDX
>725	Argument	m_bAutoSave
>726	Identifier	m_bAutoSave
>727	Argument	IDC_CHECK_AUTOSAVE
>728	Identifier	IDC_CHECK_AUTOSAVE
>729	Argument	pDX
>730	Identifier	pDX
>731	Callee	DDX_Check
>732	Identifier	DDX_Check
>733	ExpressionStatement	 
>734	CallExpression	DDX_Check ( pDX , IDC_CHECK_VERTEX , m_bVertex )
>735	ArgumentList	pDX
>736	Argument	m_bVertex
>737	Identifier	m_bVertex
>738	Argument	IDC_CHECK_VERTEX
>739	Identifier	IDC_CHECK_VERTEX
>740	Argument	pDX
>741	Identifier	pDX
>742	Callee	DDX_Check
>743	Identifier	DDX_Check
>744	ExpressionStatement	 
>745	CallExpression	DDX_Check ( pDX , IDC_CHECK_SETGAME , m_bSetGame )
>746	ArgumentList	pDX
>747	Argument	m_bSetGame
>748	Identifier	m_bSetGame
>749	Argument	IDC_CHECK_SETGAME
>750	Identifier	IDC_CHECK_SETGAME
>751	Argument	pDX
>752	Identifier	pDX
>753	Callee	DDX_Check
>754	Identifier	DDX_Check
>755	ExpressionStatement	 
>756	CallExpression	DDX_Check ( pDX , IDC_CHECK_RUNQUAKE , m_bRunQuake )
>757	ArgumentList	pDX
>758	Argument	m_bRunQuake
>759	Identifier	m_bRunQuake
>760	Argument	IDC_CHECK_RUNQUAKE
>761	Identifier	IDC_CHECK_RUNQUAKE
>762	Argument	pDX
>763	Identifier	pDX
>764	Callee	DDX_Check
>765	Identifier	DDX_Check
>766	ExpressionStatement	 
>767	CallExpression	DDX_Check ( pDX , IDC_CHECK_RIGHTCLICK , m_bRightClick )
>768	ArgumentList	pDX
>769	Argument	m_bRightClick
>770	Identifier	m_bRightClick
>771	Argument	IDC_CHECK_RIGHTCLICK
>772	Identifier	IDC_CHECK_RIGHTCLICK
>773	Argument	pDX
>774	Identifier	pDX
>775	Callee	DDX_Check
>776	Identifier	DDX_Check
>777	ExpressionStatement	 
>778	CallExpression	DDX_Check ( pDX , IDC_CHECK_INTERNALBSP , m_bInternalBSP )
>779	ArgumentList	pDX
>780	Argument	m_bInternalBSP
>781	Identifier	m_bInternalBSP
>782	Argument	IDC_CHECK_INTERNALBSP
>783	Identifier	IDC_CHECK_INTERNALBSP
>784	Argument	pDX
>785	Identifier	pDX
>786	Callee	DDX_Check
>787	Identifier	DDX_Check
>788	ExpressionStatement	 
>789	CallExpression	DDX_Check ( pDX , IDC_CHECK_FACE , m_bFace )
>790	ArgumentList	pDX
>791	Argument	m_bFace
>792	Identifier	m_bFace
>793	Argument	IDC_CHECK_FACE
>794	Identifier	IDC_CHECK_FACE
>795	Argument	pDX
>796	Identifier	pDX
>797	Callee	DDX_Check
>798	Identifier	DDX_Check
>799	ExpressionStatement	 
>800	CallExpression	DDX_Check ( pDX , IDC_CHECK_LOADLAST , m_bLoadLast )
>801	ArgumentList	pDX
>802	Argument	m_bLoadLast
>803	Identifier	m_bLoadLast
>804	Argument	IDC_CHECK_LOADLAST
>805	Identifier	IDC_CHECK_LOADLAST
>806	Argument	pDX
>807	Identifier	pDX
>808	Callee	DDX_Check
>809	Identifier	DDX_Check
>810	ExpressionStatement	 
>811	CallExpression	DDX_Radio ( pDX , IDC_RADIO_VIEWTYPE , m_nView )
>812	ArgumentList	pDX
>813	Argument	m_nView
>814	Identifier	m_nView
>815	Argument	IDC_RADIO_VIEWTYPE
>816	Identifier	IDC_RADIO_VIEWTYPE
>817	Argument	pDX
>818	Identifier	pDX
>819	Callee	DDX_Radio
>820	Identifier	DDX_Radio
>821	ExpressionStatement	 
>822	CallExpression	DDX_Radio ( pDX , IDC_RADIO_MOUSE , m_nMouse )
>823	ArgumentList	pDX
>824	Argument	m_nMouse
>825	Identifier	m_nMouse
>826	Argument	IDC_RADIO_MOUSE
>827	Identifier	IDC_RADIO_MOUSE
>828	Argument	pDX
>829	Identifier	pDX
>830	Callee	DDX_Radio
>831	Identifier	DDX_Radio
>832	ExpressionStatement	 
>833	CallExpression	DDX_Text ( pDX , IDC_EDIT_QUAKE2 , m_strQuake2 )
>834	ArgumentList	pDX
>835	Argument	m_strQuake2
>836	Identifier	m_strQuake2
>837	Argument	IDC_EDIT_QUAKE2
>838	Identifier	IDC_EDIT_QUAKE2
>839	Argument	pDX
>840	Identifier	pDX
>841	Callee	DDX_Text
>842	Identifier	DDX_Text
>843	ExpressionStatement	 
>844	CallExpression	DDX_Control ( pDX , IDC_SPIN_AUTOSAVE , m_wndSpin )
>845	ArgumentList	pDX
>846	Argument	m_wndSpin
>847	Identifier	m_wndSpin
>848	Argument	IDC_SPIN_AUTOSAVE
>849	Identifier	IDC_SPIN_AUTOSAVE
>850	Argument	pDX
>851	Identifier	pDX
>852	Callee	DDX_Control
>853	Identifier	DDX_Control
>854	ExpressionStatement	 
>855	CallExpression	DDX_Control ( pDX , IDC_SLIDER_CAMSPEED , m_wndCamSpeed )
>856	ArgumentList	pDX
>857	Argument	m_wndCamSpeed
>858	Identifier	m_wndCamSpeed
>859	Argument	IDC_SLIDER_CAMSPEED
>860	Identifier	IDC_SLIDER_CAMSPEED
>861	Argument	pDX
>862	Identifier	pDX
>863	Callee	DDX_Control
>864	Identifier	DDX_Control
>865	ExpressionStatement	 
>866	CallExpression	DDX_Control ( pDX , IDC_COMBO_WHATGAME , m_wndWhatGame )
>867	ArgumentList	pDX
>868	Argument	m_wndWhatGame
>869	Identifier	m_wndWhatGame
>870	Argument	IDC_COMBO_WHATGAME
>871	Identifier	IDC_COMBO_WHATGAME
>872	Argument	pDX
>873	Identifier	pDX
>874	Callee	DDX_Control
>875	Identifier	DDX_Control
>876	ExpressionStatement	 
>877	CallExpression	DDX_Control ( pDX , IDC_SLIDER_TEXTUREQUALITY , m_wndTexturequality )
>878	ArgumentList	pDX
>879	Argument	m_wndTexturequality
>880	Identifier	m_wndTexturequality
>881	Argument	IDC_SLIDER_TEXTUREQUALITY
>882	Identifier	IDC_SLIDER_TEXTUREQUALITY
>883	Argument	pDX
>884	Identifier	pDX
>885	Callee	DDX_Control
>886	Identifier	DDX_Control
>887	ExpressionStatement	 
>888	CallExpression	DDX_Control ( pDX , IDC_SPIN_POINTSIZE , m_wndFontSpin )
>889	ArgumentList	pDX
>890	Argument	m_wndFontSpin
>891	Identifier	m_wndFontSpin
>892	Argument	IDC_SPIN_POINTSIZE
>893	Identifier	IDC_SPIN_POINTSIZE
>894	Argument	pDX
>895	Identifier	pDX
>896	Callee	DDX_Control
>897	Identifier	DDX_Control
>898	ExpressionStatement	 
>899	CallExpression	DDX_Control ( pDX , IDC_SPIN_UNDO , m_wndUndoSpin )
>900	ArgumentList	pDX
>901	Argument	m_wndUndoSpin
>902	Identifier	m_wndUndoSpin
>903	Argument	IDC_SPIN_UNDO
>904	Identifier	IDC_SPIN_UNDO
>905	Argument	pDX
>906	Identifier	pDX
>907	Callee	DDX_Control
>908	Identifier	DDX_Control
>909	ExpressionStatement	 
>910	CallExpression	CDialog 
>911	ArgumentList	pDX
>912	Argument	pDX
>913	Identifier	pDX
>914	Callee	CDialog 
>915	Identifier	CDialog 
>1015	FunctionDef	CPrefsDlg 
>1016	ParameterList	 
>1017	ReturnType	void
>1018	CompoundStatement	 
>1019	IfStatement	if ( dlg . DoModal ( ) == IDOK )
>1020	CompoundStatement	 
>1021	ExpressionStatement	 
>1022	CallExpression	UpdateData ( FALSE )
>1023	ArgumentList	FALSE
>1024	Argument	FALSE
>1025	Identifier	FALSE
>1026	Callee	UpdateData
>1027	Identifier	UpdateData
>1028	ExpressionStatement	 
>1029	AssignmentExpr	m_strQuake2 = dlg . GetPathName ( )
>1030	CallExpression	dlg . GetPathName ( )
>1031	ArgumentList	 
>1032	Callee	dlg . GetPathName
>1033	MemberAccess	dlg . GetPathName
>1034	Identifier	GetPathName
>1035	Identifier	dlg
>1036	Identifier	m_strQuake2
>1037	Condition	 
>1038	EqualityExpression	dlg . DoModal ( ) == IDOK
>1039	Identifier	IDOK
>1040	CallExpression	dlg . DoModal ( )
>1041	ArgumentList	 
>1042	Callee	dlg . DoModal
>1043	MemberAccess	dlg . DoModal
>1044	Identifier	DoModal
>1045	Identifier	dlg
>1046	IdentifierDeclStatement	 
>1047	IdentifierDecl	dlg ( true , NULL , NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"Executables (*.exe)|*.exe||\" , this )
>1048	Expression	true , NULL , NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"Executables (*.exe)|*.exe||\" , this
>1049	Expression	NULL , NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"Executables (*.exe)|*.exe||\" , this
>1050	Expression	NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"Executables (*.exe)|*.exe||\" , this
>1051	Expression	OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"Executables (*.exe)|*.exe||\" , this
>1052	Expression	\"Executables (*.exe)|*.exe||\" , this
>1053	Identifier	this
>1054	PrimaryExpression	\"Executables (*.exe)|*.exe||\"
>1055	InclusiveOrExpression	OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT
>1056	Identifier	OFN_OVERWRITEPROMPT
>1057	Identifier	OFN_HIDEREADONLY
>1058	Identifier	NULL
>1059	Identifier	NULL
>1060	Identifier	true
>1061	Identifier	dlg
>1062	IdentifierDeclType	CFileDialog
>1063	ExpressionStatement	 
>1064	CallExpression	UpdateData ( TRUE )
>1065	ArgumentList	TRUE
>1066	Argument	TRUE
>1067	Identifier	TRUE
>1068	Callee	UpdateData
>1069	Identifier	UpdateData
>1080	FunctionDef	CPrefsDlg 
>1081	ParameterList	 
>1082	ReturnType	BOOL
>1083	CompoundStatement	 
>1084	ReturnStatement	 
>1085	Identifier	TRUE
>1086	IfStatement	if ( strstr ( m_strWhatGame , \"Quake3\" ) != NULL )
>1087	ElseStatement	else
>1088	CompoundStatement	 
>1089	ExpressionStatement	 
>1090	CallExpression	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow ( TRUE )
>1091	ArgumentList	TRUE
>1092	Argument	TRUE
>1093	Identifier	TRUE
>1094	Callee	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow
>1095	PtrMemberAccess	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow
>1096	Identifier	EnableWindow
>1097	CallExpression	GetDlgItem ( IDC_CHECK_INTERNALBSP )
>1098	ArgumentList	IDC_CHECK_INTERNALBSP
>1099	Argument	IDC_CHECK_INTERNALBSP
>1100	Identifier	IDC_CHECK_INTERNALBSP
>1101	Callee	GetDlgItem
>1102	Identifier	GetDlgItem
>1103	ExpressionStatement	 
>1104	CallExpression	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow ( TRUE )
>1105	ArgumentList	TRUE
>1106	Argument	TRUE
>1107	Identifier	TRUE
>1108	Callee	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow
>1109	PtrMemberAccess	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow
>1110	Identifier	EnableWindow
>1111	CallExpression	GetDlgItem ( IDC_BTN_BROWSEPAK )
>1112	ArgumentList	IDC_BTN_BROWSEPAK
>1113	Argument	IDC_BTN_BROWSEPAK
>1114	Identifier	IDC_BTN_BROWSEPAK
>1115	Callee	GetDlgItem
>1116	Identifier	GetDlgItem
>1117	ExpressionStatement	 
>1118	CallExpression	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow ( TRUE )
>1119	ArgumentList	TRUE
>1120	Argument	TRUE
>1121	Identifier	TRUE
>1122	Callee	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow
>1123	PtrMemberAccess	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow
>1124	Identifier	EnableWindow
>1125	CallExpression	GetDlgItem ( IDC_EDIT_PAKFILE )
>1126	ArgumentList	IDC_EDIT_PAKFILE
>1127	Argument	IDC_EDIT_PAKFILE
>1128	Identifier	IDC_EDIT_PAKFILE
>1129	Callee	GetDlgItem
>1130	Identifier	GetDlgItem
>1131	CompoundStatement	 
>1132	ExpressionStatement	 
>1133	CallExpression	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow ( FALSE )
>1134	ArgumentList	FALSE
>1135	Argument	FALSE
>1136	Identifier	FALSE
>1137	Callee	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow
>1138	PtrMemberAccess	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow
>1139	Identifier	EnableWindow
>1140	CallExpression	GetDlgItem ( IDC_CHECK_INTERNALBSP )
>1141	ArgumentList	IDC_CHECK_INTERNALBSP
>1142	Argument	IDC_CHECK_INTERNALBSP
>1143	Identifier	IDC_CHECK_INTERNALBSP
>1144	Callee	GetDlgItem
>1145	Identifier	GetDlgItem
>1146	ExpressionStatement	 
>1147	CallExpression	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow ( FALSE )
>1148	ArgumentList	FALSE
>1149	Argument	FALSE
>1150	Identifier	FALSE
>1151	Callee	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow
>1152	PtrMemberAccess	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow
>1153	Identifier	EnableWindow
>1154	CallExpression	GetDlgItem ( IDC_BTN_BROWSEPAK )
>1155	ArgumentList	IDC_BTN_BROWSEPAK
>1156	Argument	IDC_BTN_BROWSEPAK
>1157	Identifier	IDC_BTN_BROWSEPAK
>1158	Callee	GetDlgItem
>1159	Identifier	GetDlgItem
>1160	ExpressionStatement	 
>1161	CallExpression	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow ( FALSE )
>1162	ArgumentList	FALSE
>1163	Argument	FALSE
>1164	Identifier	FALSE
>1165	Callee	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow
>1166	PtrMemberAccess	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow
>1167	Identifier	EnableWindow
>1168	CallExpression	GetDlgItem ( IDC_EDIT_PAKFILE )
>1169	ArgumentList	IDC_EDIT_PAKFILE
>1170	Argument	IDC_EDIT_PAKFILE
>1171	Identifier	IDC_EDIT_PAKFILE
>1172	Callee	GetDlgItem
>1173	Identifier	GetDlgItem
>1174	Condition	 
>1175	EqualityExpression	strstr ( m_strWhatGame , \"Quake3\" ) != NULL
>1176	Identifier	NULL
>1177	CallExpression	strstr ( m_strWhatGame , \"Quake3\" )
>1178	ArgumentList	m_strWhatGame
>1179	Argument	\"Quake3\"
>1180	PrimaryExpression	\"Quake3\"
>1181	Argument	m_strWhatGame
>1182	Identifier	m_strWhatGame
>1183	Callee	strstr
>1184	Identifier	strstr
>1185	ExpressionStatement	 
>1186	CallExpression	m_wndWhatGame . SelectString ( - 1 , m_strWhatGame )
>1187	ArgumentList	- 1
>1188	Argument	m_strWhatGame
>1189	Identifier	m_strWhatGame
>1190	Argument	- 1
>1191	UnaryOp	- 1
>1192	PrimaryExpression	1
>1193	UnaryOperator	-
>1194	Callee	m_wndWhatGame . SelectString
>1195	MemberAccess	m_wndWhatGame . SelectString
>1196	Identifier	SelectString
>1197	Identifier	m_wndWhatGame
>1198	ExpressionStatement	 
>1199	CallExpression	GetDlgItem ( IDC_CHECK_NOCLAMP ) -> EnableWindow ( TRUE )
>1200	ArgumentList	TRUE
>1201	Argument	TRUE
>1202	Identifier	TRUE
>1203	Callee	GetDlgItem ( IDC_CHECK_NOCLAMP ) -> EnableWindow
>1204	PtrMemberAccess	GetDlgItem ( IDC_CHECK_NOCLAMP ) -> EnableWindow
>1205	Identifier	EnableWindow
>1206	CallExpression	GetDlgItem ( IDC_CHECK_NOCLAMP )
>1207	ArgumentList	IDC_CHECK_NOCLAMP
>1208	Argument	IDC_CHECK_NOCLAMP
>1209	Identifier	IDC_CHECK_NOCLAMP
>1210	Callee	GetDlgItem
>1211	Identifier	GetDlgItem
>1212	ExpressionStatement	 
>1213	CallExpression	GetDlgItem ( IDC_CHECK_HICOLOR ) -> EnableWindow ( TRUE )
>1214	ArgumentList	TRUE
>1215	Argument	TRUE
>1216	Identifier	TRUE
>1217	Callee	GetDlgItem ( IDC_CHECK_HICOLOR ) -> EnableWindow
>1218	PtrMemberAccess	GetDlgItem ( IDC_CHECK_HICOLOR ) -> EnableWindow
>1219	Identifier	EnableWindow
>1220	CallExpression	GetDlgItem ( IDC_CHECK_HICOLOR )
>1221	ArgumentList	IDC_CHECK_HICOLOR
>1222	Argument	IDC_CHECK_HICOLOR
>1223	Identifier	IDC_CHECK_HICOLOR
>1224	Callee	GetDlgItem
>1225	Identifier	GetDlgItem
>1226	ExpressionStatement	 
>1227	CallExpression	m_wndWhatGame . AddString ( \"Quake3\" )
>1228	ArgumentList	\"Quake3\"
>1229	Argument	\"Quake3\"
>1230	PrimaryExpression	\"Quake3\"
>1231	Callee	m_wndWhatGame . AddString
>1232	MemberAccess	m_wndWhatGame . AddString
>1233	Identifier	AddString
>1234	Identifier	m_wndWhatGame
>1235	ExpressionStatement	 
>1236	CallExpression	m_wndWhatGame . AddString ( \"Quake2\" )
>1237	ArgumentList	\"Quake2\"
>1238	Argument	\"Quake2\"
>1239	PrimaryExpression	\"Quake2\"
>1240	Callee	m_wndWhatGame . AddString
>1241	MemberAccess	m_wndWhatGame . AddString
>1242	Identifier	AddString
>1243	Identifier	m_wndWhatGame
>1244	ExpressionStatement	 
>1245	CallExpression	m_wndUndoSpin . SetRange ( 1 , 64 )
>1246	ArgumentList	1
>1247	Argument	64
>1248	PrimaryExpression	64
>1249	Argument	1
>1250	PrimaryExpression	1
>1251	Callee	m_wndUndoSpin . SetRange
>1252	MemberAccess	m_wndUndoSpin . SetRange
>1253	Identifier	SetRange
>1254	Identifier	m_wndUndoSpin
>1255	ExpressionStatement	 
>1256	CallExpression	m_wndFontSpin . SetRange ( 4 , 24 )
>1257	ArgumentList	4
>1258	Argument	24
>1259	PrimaryExpression	24
>1260	Argument	4
>1261	PrimaryExpression	4
>1262	Callee	m_wndFontSpin . SetRange
>1263	MemberAccess	m_wndFontSpin . SetRange
>1264	Identifier	SetRange
>1265	Identifier	m_wndFontSpin
>1266	ExpressionStatement	 
>1267	CallExpression	this -> m_wndTexturequality . SetPos ( m_nTextureQuality )
>1268	ArgumentList	m_nTextureQuality
>1269	Argument	m_nTextureQuality
>1270	Identifier	m_nTextureQuality
>1271	Callee	this -> m_wndTexturequality . SetPos
>1272	MemberAccess	this -> m_wndTexturequality . SetPos
>1273	Identifier	SetPos
>1274	PtrMemberAccess	this -> m_wndTexturequality
>1275	Identifier	m_wndTexturequality
>1276	Identifier	this
>1277	ExpressionStatement	 
>1278	CallExpression	this -> m_wndTexturequality . SetRange ( 0 , 3 )
>1279	ArgumentList	0
>1280	Argument	3
>1281	PrimaryExpression	3
>1282	Argument	0
>1283	PrimaryExpression	0
>1284	Callee	this -> m_wndTexturequality . SetRange
>1285	MemberAccess	this -> m_wndTexturequality . SetRange
>1286	Identifier	SetRange
>1287	PtrMemberAccess	this -> m_wndTexturequality
>1288	Identifier	m_wndTexturequality
>1289	Identifier	this
>1290	ExpressionStatement	 
>1291	CallExpression	m_wndCamSpeed . SetPos ( m_nMoveSpeed )
>1292	ArgumentList	m_nMoveSpeed
>1293	Argument	m_nMoveSpeed
>1294	Identifier	m_nMoveSpeed
>1295	Callee	m_wndCamSpeed . SetPos
>1296	MemberAccess	m_wndCamSpeed . SetPos
>1297	Identifier	SetPos
>1298	Identifier	m_wndCamSpeed
>1299	ExpressionStatement	 
>1300	CallExpression	m_wndCamSpeed . SetRange ( 10 , 800 )
>1301	ArgumentList	10
>1302	Argument	800
>1303	PrimaryExpression	800
>1304	Argument	10
>1305	PrimaryExpression	10
>1306	Callee	m_wndCamSpeed . SetRange
>1307	MemberAccess	m_wndCamSpeed . SetRange
>1308	Identifier	SetRange
>1309	Identifier	m_wndCamSpeed
>1310	ExpressionStatement	 
>1311	CallExpression	m_wndSpin . SetRange ( 1 , 60 )
>1312	ArgumentList	1
>1313	Argument	60
>1314	PrimaryExpression	60
>1315	Argument	1
>1316	PrimaryExpression	1
>1317	Callee	m_wndSpin . SetRange
>1318	MemberAccess	m_wndSpin . SetRange
>1319	Identifier	SetRange
>1320	Identifier	m_wndSpin
>1321	ExpressionStatement	 
>1322	CallExpression	CDialog 
>1323	ArgumentList	 
>1324	Callee	CDialog 
>1325	Identifier	CDialog 
>1350	FunctionDef	CPrefsDlg 
>1351	ParameterList	 
>1352	ReturnType	void
>1353	CompoundStatement	 
>1354	ExpressionStatement	 
>1355	CallExpression	CDialog 
>1356	ArgumentList	 
>1357	Callee	CDialog 
>1358	Identifier	CDialog 
>1359	ExpressionStatement	 
>1360	CallExpression	Undo_SetMaxSize ( m_nUndoLevels )
>1361	ArgumentList	m_nUndoLevels
>1362	Argument	m_nUndoLevels
>1363	Identifier	m_nUndoLevels
>1364	Callee	Undo_SetMaxSize
>1365	Identifier	Undo_SetMaxSize
>1366	ExpressionStatement	 
>1367	CallExpression	Sys_UpdateWindows ( W_ALL )
>1368	ArgumentList	W_ALL
>1369	Argument	W_ALL
>1370	Identifier	W_ALL
>1371	Callee	Sys_UpdateWindows
>1372	Identifier	Sys_UpdateWindows
>1373	IfStatement	if ( g_pParentWnd )
>1374	ExpressionStatement	 
>1375	CallExpression	g_pParentWnd -> SetGridStatus ( )
>1376	ArgumentList	 
>1377	Callee	g_pParentWnd -> SetGridStatus
>1378	PtrMemberAccess	g_pParentWnd -> SetGridStatus
>1379	Identifier	SetGridStatus
>1380	Identifier	g_pParentWnd
>1381	Condition	 
>1382	Identifier	g_pParentWnd
>1383	ExpressionStatement	 
>1384	CallExpression	SavePrefs ( )
>1385	ArgumentList	 
>1386	Callee	SavePrefs
>1387	Identifier	SavePrefs
>1388	ExpressionStatement	 
>1389	AssignmentExpr	this -> m_nTextureQuality = m_wndTexturequality . GetPos ( )
>1390	CallExpression	m_wndTexturequality . GetPos ( )
>1391	ArgumentList	 
>1392	Callee	m_wndTexturequality . GetPos
>1393	MemberAccess	m_wndTexturequality . GetPos
>1394	Identifier	GetPos
>1395	Identifier	m_wndTexturequality
>1396	PtrMemberAccess	this -> m_nTextureQuality
>1397	Identifier	m_nTextureQuality
>1398	Identifier	this
>1399	ExpressionStatement	 
>1400	AssignmentExpr	m_nAngleSpeed = ( float ) m_nMoveSpeed * 0.50
>1401	MultiplicativeExpression	( float ) m_nMoveSpeed * 0.50
>1402	PrimaryExpression	0.50
>1403	CastExpression	( float ) m_nMoveSpeed
>1404	Identifier	m_nMoveSpeed
>1405	CastTarget	float
>1406	Identifier	m_nAngleSpeed
>1407	ExpressionStatement	 
>1408	AssignmentExpr	m_nMoveSpeed = m_wndCamSpeed . GetPos ( )
>1409	CallExpression	m_wndCamSpeed . GetPos ( )
>1410	ArgumentList	 
>1411	Callee	m_wndCamSpeed . GetPos
>1412	MemberAccess	m_wndCamSpeed . GetPos
>1413	Identifier	GetPos
>1414	Identifier	m_wndCamSpeed
>1415	Identifier	m_nMoveSpeed
>1431	FunctionDef	CPrefsDlg 
>1432	ParameterList	 
>1433	ReturnType	void
>1434	CompoundStatement	 
>1435	IfStatement	if ( m_bRunBefore == FALSE )
>1436	CompoundStatement	 
>1437	ExpressionStatement	 
>1438	CallExpression	SetGamePrefs ( )
>1439	ArgumentList	 
>1440	Callee	SetGamePrefs
>1441	Identifier	SetGamePrefs
>1442	Condition	 
>1443	EqualityExpression	m_bRunBefore == FALSE
>1444	Identifier	FALSE
>1445	Identifier	m_bRunBefore
>1446	ExpressionStatement	 
>1447	AssignmentExpr	m_nUndoLevels = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , UNDOLEVELS_KEY , 0 )
>1448	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , UNDOLEVELS_KEY , 0 )
>1449	ArgumentList	PREF_SECTION
>1450	Argument	0
>1451	PrimaryExpression	0
>1452	Argument	UNDOLEVELS_KEY
>1453	Identifier	UNDOLEVELS_KEY
>1454	Argument	PREF_SECTION
>1455	Identifier	PREF_SECTION
>1456	Callee	AfxGetApp ( ) -> GetProfileInt
>1457	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1458	Identifier	GetProfileInt
>1459	CallExpression	AfxGetApp ( )
>1460	ArgumentList	 
>1461	Callee	AfxGetApp
>1462	Identifier	AfxGetApp
>1463	Identifier	m_nUndoLevels
>1464	ExpressionStatement	 
>1465	AssignmentExpr	m_bNoStipple = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , NOSTIPPLE_KEY , 0 )
>1466	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , NOSTIPPLE_KEY , 0 )
>1467	ArgumentList	PREF_SECTION
>1468	Argument	0
>1469	PrimaryExpression	0
>1470	Argument	NOSTIPPLE_KEY
>1471	Identifier	NOSTIPPLE_KEY
>1472	Argument	PREF_SECTION
>1473	Identifier	PREF_SECTION
>1474	Callee	AfxGetApp ( ) -> GetProfileInt
>1475	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1476	Identifier	GetProfileInt
>1477	CallExpression	AfxGetApp ( )
>1478	ArgumentList	 
>1479	Callee	AfxGetApp
>1480	Identifier	AfxGetApp
>1481	Identifier	m_bNoStipple
>1482	ExpressionStatement	 
>1483	AssignmentExpr	m_nShader = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , LOADSHADERS_KEY , 0 )
>1484	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , LOADSHADERS_KEY , 0 )
>1485	ArgumentList	PREF_SECTION
>1486	Argument	0
>1487	PrimaryExpression	0
>1488	Argument	LOADSHADERS_KEY
>1489	Identifier	LOADSHADERS_KEY
>1490	Argument	PREF_SECTION
>1491	Identifier	PREF_SECTION
>1492	Callee	AfxGetApp ( ) -> GetProfileInt
>1493	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1494	Identifier	GetProfileInt
>1495	CallExpression	AfxGetApp ( )
>1496	ArgumentList	 
>1497	Callee	AfxGetApp
>1498	Identifier	AfxGetApp
>1499	Identifier	m_nShader
>1500	ExpressionStatement	 
>1501	AssignmentExpr	m_bGLLighting = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , GLLIGHTING_KEY , FALSE )
>1502	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , GLLIGHTING_KEY , FALSE )
>1503	ArgumentList	PREF_SECTION
>1504	Argument	FALSE
>1505	Identifier	FALSE
>1506	Argument	GLLIGHTING_KEY
>1507	Identifier	GLLIGHTING_KEY
>1508	Argument	PREF_SECTION
>1509	Identifier	PREF_SECTION
>1510	Callee	AfxGetApp ( ) -> GetProfileInt
>1511	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1512	Identifier	GetProfileInt
>1513	CallExpression	AfxGetApp ( )
>1514	ArgumentList	 
>1515	Callee	AfxGetApp
>1516	Identifier	AfxGetApp
>1517	Identifier	m_bGLLighting
>1518	ExpressionStatement	 
>1519	AssignmentExpr	m_bShowShaders = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SHOWSHADERS_KEY , TRUE )
>1520	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SHOWSHADERS_KEY , TRUE )
>1521	ArgumentList	PREF_SECTION
>1522	Argument	TRUE
>1523	Identifier	TRUE
>1524	Argument	SHOWSHADERS_KEY
>1525	Identifier	SHOWSHADERS_KEY
>1526	Argument	PREF_SECTION
>1527	Identifier	PREF_SECTION
>1528	Callee	AfxGetApp ( ) -> GetProfileInt
>1529	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1530	Identifier	GetProfileInt
>1531	CallExpression	AfxGetApp ( )
>1532	ArgumentList	 
>1533	Callee	AfxGetApp
>1534	Identifier	AfxGetApp
>1535	Identifier	m_bShowShaders
>1536	ExpressionStatement	 
>1537	AssignmentExpr	m_nTextureQuality = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TEXTUREQUALITY_KEY , 6 )
>1538	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TEXTUREQUALITY_KEY , 6 )
>1539	ArgumentList	PREF_SECTION
>1540	Argument	6
>1541	PrimaryExpression	6
>1542	Argument	TEXTUREQUALITY_KEY
>1543	Identifier	TEXTUREQUALITY_KEY
>1544	Argument	PREF_SECTION
>1545	Identifier	PREF_SECTION
>1546	Callee	AfxGetApp ( ) -> GetProfileInt
>1547	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1548	Identifier	GetProfileInt
>1549	CallExpression	AfxGetApp ( )
>1550	ArgumentList	 
>1551	Callee	AfxGetApp
>1552	Identifier	AfxGetApp
>1553	Identifier	m_nTextureQuality
>1554	ExpressionStatement	 
>1555	AssignmentExpr	m_bSelectWholeEntities = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SELWHOLEENTS_KEY , TRUE )
>1556	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SELWHOLEENTS_KEY , TRUE )
>1557	ArgumentList	PREF_SECTION
>1558	Argument	TRUE
>1559	Identifier	TRUE
>1560	Argument	SELWHOLEENTS_KEY
>1561	Identifier	SELWHOLEENTS_KEY
>1562	Argument	PREF_SECTION
>1563	Identifier	PREF_SECTION
>1564	Callee	AfxGetApp ( ) -> GetProfileInt
>1565	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1566	Identifier	GetProfileInt
>1567	CallExpression	AfxGetApp ( )
>1568	ArgumentList	 
>1569	Callee	AfxGetApp
>1570	Identifier	AfxGetApp
>1571	Identifier	m_bSelectWholeEntities
>1572	ExpressionStatement	 
>1573	AssignmentExpr	m_bSwitchClip = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SWITCHCLIP_KEY , TRUE )
>1574	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SWITCHCLIP_KEY , TRUE )
>1575	ArgumentList	PREF_SECTION
>1576	Argument	TRUE
>1577	Identifier	TRUE
>1578	Argument	SWITCHCLIP_KEY
>1579	Identifier	SWITCHCLIP_KEY
>1580	Argument	PREF_SECTION
>1581	Identifier	PREF_SECTION
>1582	Callee	AfxGetApp ( ) -> GetProfileInt
>1583	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1584	Identifier	GetProfileInt
>1585	CallExpression	AfxGetApp ( )
>1586	ArgumentList	 
>1587	Callee	AfxGetApp
>1588	Identifier	AfxGetApp
>1589	Identifier	m_bSwitchClip
>1590	ExpressionStatement	 
>1591	AssignmentExpr	m_bDisplayLists = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , DISPLAYLISTS_KEY , TRUE )
>1592	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , DISPLAYLISTS_KEY , TRUE )
>1593	ArgumentList	PREF_SECTION
>1594	Argument	TRUE
>1595	Identifier	TRUE
>1596	Argument	DISPLAYLISTS_KEY
>1597	Identifier	DISPLAYLISTS_KEY
>1598	Argument	PREF_SECTION
>1599	Identifier	PREF_SECTION
>1600	Callee	AfxGetApp ( ) -> GetProfileInt
>1601	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1602	Identifier	GetProfileInt
>1603	CallExpression	AfxGetApp ( )
>1604	ArgumentList	 
>1605	Callee	AfxGetApp
>1606	Identifier	AfxGetApp
>1607	Identifier	m_bDisplayLists
>1608	ExpressionStatement	 
>1609	AssignmentExpr	m_bTextureScrollbar = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TEXTURESCROLLBAR_KEY , TRUE )
>1610	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TEXTURESCROLLBAR_KEY , TRUE )
>1611	ArgumentList	PREF_SECTION
>1612	Argument	TRUE
>1613	Identifier	TRUE
>1614	Argument	TEXTURESCROLLBAR_KEY
>1615	Identifier	TEXTURESCROLLBAR_KEY
>1616	Argument	PREF_SECTION
>1617	Identifier	PREF_SECTION
>1618	Callee	AfxGetApp ( ) -> GetProfileInt
>1619	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1620	Identifier	GetProfileInt
>1621	CallExpression	AfxGetApp ( )
>1622	ArgumentList	 
>1623	Callee	AfxGetApp
>1624	Identifier	AfxGetApp
>1625	Identifier	m_bTextureScrollbar
>1626	ExpressionStatement	 
>1627	AssignmentExpr	m_nTextureScale = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TEXTURESCALE_KEY , 50 )
>1628	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TEXTURESCALE_KEY , 50 )
>1629	ArgumentList	PREF_SECTION
>1630	Argument	50
>1631	PrimaryExpression	50
>1632	Argument	TEXTURESCALE_KEY
>1633	Identifier	TEXTURESCALE_KEY
>1634	Argument	PREF_SECTION
>1635	Identifier	PREF_SECTION
>1636	Callee	AfxGetApp ( ) -> GetProfileInt
>1637	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1638	Identifier	GetProfileInt
>1639	CallExpression	AfxGetApp ( )
>1640	ArgumentList	 
>1641	Callee	AfxGetApp
>1642	Identifier	AfxGetApp
>1643	Identifier	m_nTextureScale
>1644	ExpressionStatement	 
>1645	AssignmentExpr	m_nEntityShowState = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , ENTITYSHOW_KEY , 0 )
>1646	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , ENTITYSHOW_KEY , 0 )
>1647	ArgumentList	PREF_SECTION
>1648	Argument	0
>1649	PrimaryExpression	0
>1650	Argument	ENTITYSHOW_KEY
>1651	Identifier	ENTITYSHOW_KEY
>1652	Argument	PREF_SECTION
>1653	Identifier	PREF_SECTION
>1654	Callee	AfxGetApp ( ) -> GetProfileInt
>1655	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1656	Identifier	GetProfileInt
>1657	CallExpression	AfxGetApp ( )
>1658	ArgumentList	 
>1659	Callee	AfxGetApp
>1660	Identifier	AfxGetApp
>1661	Identifier	m_nEntityShowState
>1662	ExpressionStatement	 
>1663	AssignmentExpr	m_bChaseMouse = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , CHASEMOUSE_KEY , 1 )
>1664	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , CHASEMOUSE_KEY , 1 )
>1665	ArgumentList	PREF_SECTION
>1666	Argument	1
>1667	PrimaryExpression	1
>1668	Argument	CHASEMOUSE_KEY
>1669	Identifier	CHASEMOUSE_KEY
>1670	Argument	PREF_SECTION
>1671	Identifier	PREF_SECTION
>1672	Callee	AfxGetApp ( ) -> GetProfileInt
>1673	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1674	Identifier	GetProfileInt
>1675	CallExpression	AfxGetApp ( )
>1676	ArgumentList	 
>1677	Callee	AfxGetApp
>1678	Identifier	AfxGetApp
>1679	Identifier	m_bChaseMouse
>1680	ExpressionStatement	 
>1681	AssignmentExpr	m_bHiColorTextures = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , HICOLOR_KEY , 1 )
>1682	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , HICOLOR_KEY , 1 )
>1683	ArgumentList	PREF_SECTION
>1684	Argument	1
>1685	PrimaryExpression	1
>1686	Argument	HICOLOR_KEY
>1687	Identifier	HICOLOR_KEY
>1688	Argument	PREF_SECTION
>1689	Identifier	PREF_SECTION
>1690	Callee	AfxGetApp ( ) -> GetProfileInt
>1691	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1692	Identifier	GetProfileInt
>1693	CallExpression	AfxGetApp ( )
>1694	ArgumentList	 
>1695	Callee	AfxGetApp
>1696	Identifier	AfxGetApp
>1697	Identifier	m_bHiColorTextures
>1698	ExpressionStatement	 
>1699	AssignmentExpr	m_bBuggyICD = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , BUGGYICD_KEY , 0 )
>1700	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , BUGGYICD_KEY , 0 )
>1701	ArgumentList	PREF_SECTION
>1702	Argument	0
>1703	PrimaryExpression	0
>1704	Argument	BUGGYICD_KEY
>1705	Identifier	BUGGYICD_KEY
>1706	Argument	PREF_SECTION
>1707	Identifier	PREF_SECTION
>1708	Callee	AfxGetApp ( ) -> GetProfileInt
>1709	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1710	Identifier	GetProfileInt
>1711	CallExpression	AfxGetApp ( )
>1712	ArgumentList	 
>1713	Callee	AfxGetApp
>1714	Identifier	AfxGetApp
>1715	Identifier	m_bBuggyICD
>1716	ExpressionStatement	 
>1717	AssignmentExpr	m_bSGIOpenGL = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SGIOPENGL_KEY , 0 )
>1718	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SGIOPENGL_KEY , 0 )
>1719	ArgumentList	PREF_SECTION
>1720	Argument	0
>1721	PrimaryExpression	0
>1722	Argument	SGIOPENGL_KEY
>1723	Identifier	SGIOPENGL_KEY
>1724	Argument	PREF_SECTION
>1725	Identifier	PREF_SECTION
>1726	Callee	AfxGetApp ( ) -> GetProfileInt
>1727	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1728	Identifier	GetProfileInt
>1729	CallExpression	AfxGetApp ( )
>1730	ArgumentList	 
>1731	Callee	AfxGetApp
>1732	Identifier	AfxGetApp
>1733	Identifier	m_bSGIOpenGL
>1734	ExpressionStatement	 
>1735	AssignmentExpr	m_nRotation = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , ROTATION_KEY , 45 )
>1736	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , ROTATION_KEY , 45 )
>1737	ArgumentList	PREF_SECTION
>1738	Argument	45
>1739	PrimaryExpression	45
>1740	Argument	ROTATION_KEY
>1741	Identifier	ROTATION_KEY
>1742	Argument	PREF_SECTION
>1743	Identifier	PREF_SECTION
>1744	Callee	AfxGetApp ( ) -> GetProfileInt
>1745	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1746	Identifier	GetProfileInt
>1747	CallExpression	AfxGetApp ( )
>1748	ArgumentList	 
>1749	Callee	AfxGetApp
>1750	Identifier	AfxGetApp
>1751	Identifier	m_nRotation
>1752	ExpressionStatement	 
>1753	AssignmentExpr	m_strUserPath = AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , USERINI_KEY , \"\" )
>1754	CallExpression	AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , USERINI_KEY , \"\" )
>1755	ArgumentList	PREF_SECTION
>1756	Argument	\"\"
>1757	PrimaryExpression	\"\"
>1758	Argument	USERINI_KEY
>1759	Identifier	USERINI_KEY
>1760	Argument	PREF_SECTION
>1761	Identifier	PREF_SECTION
>1762	Callee	AfxGetApp ( ) -> GetProfileString
>1763	PtrMemberAccess	AfxGetApp ( ) -> GetProfileString
>1764	Identifier	GetProfileString
>1765	CallExpression	AfxGetApp ( )
>1766	ArgumentList	 
>1767	Callee	AfxGetApp
>1768	Identifier	AfxGetApp
>1769	Identifier	m_strUserPath
>1770	ExpressionStatement	 
>1771	AssignmentExpr	m_strPrefabPath = AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , PREFAB_KEY , strPrefab )
>1772	CallExpression	AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , PREFAB_KEY , strPrefab )
>1773	ArgumentList	PREF_SECTION
>1774	Argument	strPrefab
>1775	Identifier	strPrefab
>1776	Argument	PREFAB_KEY
>1777	Identifier	PREFAB_KEY
>1778	Argument	PREF_SECTION
>1779	Identifier	PREF_SECTION
>1780	Callee	AfxGetApp ( ) -> GetProfileString
>1781	PtrMemberAccess	AfxGetApp ( ) -> GetProfileString
>1782	Identifier	GetProfileString
>1783	CallExpression	AfxGetApp ( )
>1784	ArgumentList	 
>1785	Callee	AfxGetApp
>1786	Identifier	AfxGetApp
>1787	Identifier	m_strPrefabPath
>1788	ExpressionStatement	 
>1789	AssignmentExpr	m_bNoClamp = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , NOCLAMP_KEY , 0 )
>1790	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , NOCLAMP_KEY , 0 )
>1791	ArgumentList	PREF_SECTION
>1792	Argument	0
>1793	PrimaryExpression	0
>1794	Argument	NOCLAMP_KEY
>1795	Identifier	NOCLAMP_KEY
>1796	Argument	PREF_SECTION
>1797	Identifier	PREF_SECTION
>1798	Callee	AfxGetApp ( ) -> GetProfileInt
>1799	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1800	Identifier	GetProfileInt
>1801	CallExpression	AfxGetApp ( )
>1802	ArgumentList	 
>1803	Callee	AfxGetApp
>1804	Identifier	AfxGetApp
>1805	Identifier	m_bNoClamp
>1806	ExpressionStatement	 
>1807	AssignmentExpr	m_bWideToolbar = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , WIDETOOLBAR_KEY , 1 )
>1808	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , WIDETOOLBAR_KEY , 1 )
>1809	ArgumentList	PREF_SECTION
>1810	Argument	1
>1811	PrimaryExpression	1
>1812	Argument	WIDETOOLBAR_KEY
>1813	Identifier	WIDETOOLBAR_KEY
>1814	Argument	PREF_SECTION
>1815	Identifier	PREF_SECTION
>1816	Callee	AfxGetApp ( ) -> GetProfileInt
>1817	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1818	Identifier	GetProfileInt
>1819	CallExpression	AfxGetApp ( )
>1820	ArgumentList	 
>1821	Callee	AfxGetApp
>1822	Identifier	AfxGetApp
>1823	Identifier	m_bWideToolbar
>1824	ExpressionStatement	 
>1825	AssignmentExpr	m_bDLLEntities = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , DLLENTITIES_KEY , 0 )
>1826	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , DLLENTITIES_KEY , 0 )
>1827	ArgumentList	PREF_SECTION
>1828	Argument	0
>1829	PrimaryExpression	0
>1830	Argument	DLLENTITIES_KEY
>1831	Identifier	DLLENTITIES_KEY
>1832	Argument	PREF_SECTION
>1833	Identifier	PREF_SECTION
>1834	Callee	AfxGetApp ( ) -> GetProfileInt
>1835	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1836	Identifier	GetProfileInt
>1837	CallExpression	AfxGetApp ( )
>1838	ArgumentList	 
>1839	Callee	AfxGetApp
>1840	Identifier	AfxGetApp
>1841	Identifier	m_bDLLEntities
>1842	ExpressionStatement	 
>1843	AssignmentExpr	m_bSizePaint = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SIZEPAINT_KEY , 0 )
>1844	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SIZEPAINT_KEY , 0 )
>1845	ArgumentList	PREF_SECTION
>1846	Argument	0
>1847	PrimaryExpression	0
>1848	Argument	SIZEPAINT_KEY
>1849	Identifier	SIZEPAINT_KEY
>1850	Argument	PREF_SECTION
>1851	Identifier	PREF_SECTION
>1852	Callee	AfxGetApp ( ) -> GetProfileInt
>1853	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1854	Identifier	GetProfileInt
>1855	CallExpression	AfxGetApp ( )
>1856	ArgumentList	 
>1857	Callee	AfxGetApp
>1858	Identifier	AfxGetApp
>1859	Identifier	m_bSizePaint
>1860	ExpressionStatement	 
>1861	AssignmentExpr	m_bZVis = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , ZVIS_KEY , 1 )
>1862	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , ZVIS_KEY , 1 )
>1863	ArgumentList	PREF_SECTION
>1864	Argument	1
>1865	PrimaryExpression	1
>1866	Argument	ZVIS_KEY
>1867	Identifier	ZVIS_KEY
>1868	Argument	PREF_SECTION
>1869	Identifier	PREF_SECTION
>1870	Callee	AfxGetApp ( ) -> GetProfileInt
>1871	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1872	Identifier	GetProfileInt
>1873	CallExpression	AfxGetApp ( )
>1874	ArgumentList	 
>1875	Callee	AfxGetApp
>1876	Identifier	AfxGetApp
>1877	Identifier	m_bZVis
>1878	ExpressionStatement	 
>1879	AssignmentExpr	m_bYZVis = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , YZVIS_KEY , 0 )
>1880	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , YZVIS_KEY , 0 )
>1881	ArgumentList	PREF_SECTION
>1882	Argument	0
>1883	PrimaryExpression	0
>1884	Argument	YZVIS_KEY
>1885	Identifier	YZVIS_KEY
>1886	Argument	PREF_SECTION
>1887	Identifier	PREF_SECTION
>1888	Callee	AfxGetApp ( ) -> GetProfileInt
>1889	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1890	Identifier	GetProfileInt
>1891	CallExpression	AfxGetApp ( )
>1892	ArgumentList	 
>1893	Callee	AfxGetApp
>1894	Identifier	AfxGetApp
>1895	Identifier	m_bYZVis
>1896	ExpressionStatement	 
>1897	AssignmentExpr	m_bXZVis = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , XZVIS_KEY , 0 )
>1898	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , XZVIS_KEY , 0 )
>1899	ArgumentList	PREF_SECTION
>1900	Argument	0
>1901	PrimaryExpression	0
>1902	Argument	XZVIS_KEY
>1903	Identifier	XZVIS_KEY
>1904	Argument	PREF_SECTION
>1905	Identifier	PREF_SECTION
>1906	Callee	AfxGetApp ( ) -> GetProfileInt
>1907	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1908	Identifier	GetProfileInt
>1909	CallExpression	AfxGetApp ( )
>1910	ArgumentList	 
>1911	Callee	AfxGetApp
>1912	Identifier	AfxGetApp
>1913	Identifier	m_bXZVis
>1914	ExpressionStatement	 
>1915	AssignmentExpr	m_bSnapTToGrid = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SNAPT_KEY , 0 )
>1916	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SNAPT_KEY , 0 )
>1917	ArgumentList	PREF_SECTION
>1918	Argument	0
>1919	PrimaryExpression	0
>1920	Argument	SNAPT_KEY
>1921	Identifier	SNAPT_KEY
>1922	Argument	PREF_SECTION
>1923	Identifier	PREF_SECTION
>1924	Callee	AfxGetApp ( ) -> GetProfileInt
>1925	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1926	Identifier	GetProfileInt
>1927	CallExpression	AfxGetApp ( )
>1928	ArgumentList	 
>1929	Callee	AfxGetApp
>1930	Identifier	AfxGetApp
>1931	Identifier	m_bSnapTToGrid
>1932	ExpressionStatement	 
>1933	AssignmentExpr	m_bQE4Painting = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , QE4PAINT_KEY , 1 )
>1934	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , QE4PAINT_KEY , 1 )
>1935	ArgumentList	PREF_SECTION
>1936	Argument	1
>1937	PrimaryExpression	1
>1938	Argument	QE4PAINT_KEY
>1939	Identifier	QE4PAINT_KEY
>1940	Argument	PREF_SECTION
>1941	Identifier	PREF_SECTION
>1942	Callee	AfxGetApp ( ) -> GetProfileInt
>1943	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1944	Identifier	GetProfileInt
>1945	CallExpression	AfxGetApp ( )
>1946	ArgumentList	 
>1947	Callee	AfxGetApp
>1948	Identifier	AfxGetApp
>1949	Identifier	m_bQE4Painting
>1950	ExpressionStatement	 
>1951	AssignmentExpr	m_bFaceColors = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , FACECOLORS_KEY , 0 )
>1952	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , FACECOLORS_KEY , 0 )
>1953	ArgumentList	PREF_SECTION
>1954	Argument	0
>1955	PrimaryExpression	0
>1956	Argument	FACECOLORS_KEY
>1957	Identifier	FACECOLORS_KEY
>1958	Argument	PREF_SECTION
>1959	Identifier	PREF_SECTION
>1960	Callee	AfxGetApp ( ) -> GetProfileInt
>1961	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1962	Identifier	GetProfileInt
>1963	CallExpression	AfxGetApp ( )
>1964	ArgumentList	 
>1965	Callee	AfxGetApp
>1966	Identifier	AfxGetApp
>1967	Identifier	m_bFaceColors
>1968	ExpressionStatement	 
>1969	AssignmentExpr	m_strWhatGame = AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , WHATGAME_KEY , \"Quake3\" )
>1970	CallExpression	AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , WHATGAME_KEY , \"Quake3\" )
>1971	ArgumentList	PREF_SECTION
>1972	Argument	\"Quake3\"
>1973	PrimaryExpression	\"Quake3\"
>1974	Argument	WHATGAME_KEY
>1975	Identifier	WHATGAME_KEY
>1976	Argument	PREF_SECTION
>1977	Identifier	PREF_SECTION
>1978	Callee	AfxGetApp ( ) -> GetProfileString
>1979	PtrMemberAccess	AfxGetApp ( ) -> GetProfileString
>1980	Identifier	GetProfileString
>1981	CallExpression	AfxGetApp ( )
>1982	ArgumentList	 
>1983	Callee	AfxGetApp
>1984	Identifier	AfxGetApp
>1985	Identifier	m_strWhatGame
>1986	ExpressionStatement	 
>1987	AssignmentExpr	m_bTextureBar = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TEXTUREBAR_KEY , 0 )
>1988	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TEXTUREBAR_KEY , 0 )
>1989	ArgumentList	PREF_SECTION
>1990	Argument	0
>1991	PrimaryExpression	0
>1992	Argument	TEXTUREBAR_KEY
>1993	Identifier	TEXTUREBAR_KEY
>1994	Argument	PREF_SECTION
>1995	Identifier	PREF_SECTION
>1996	Callee	AfxGetApp ( ) -> GetProfileInt
>1997	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>1998	Identifier	GetProfileInt
>1999	CallExpression	AfxGetApp ( )
>2000	ArgumentList	 
>2001	Callee	AfxGetApp
>2002	Identifier	AfxGetApp
>2003	Identifier	m_bTextureBar
>2004	ExpressionStatement	 
>2005	AssignmentExpr	m_bALTEdge = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , ALTEDGE_KEY , 0 )
>2006	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , ALTEDGE_KEY , 0 )
>2007	ArgumentList	PREF_SECTION
>2008	Argument	0
>2009	PrimaryExpression	0
>2010	Argument	ALTEDGE_KEY
>2011	Identifier	ALTEDGE_KEY
>2012	Argument	PREF_SECTION
>2013	Identifier	PREF_SECTION
>2014	Callee	AfxGetApp ( ) -> GetProfileInt
>2015	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2016	Identifier	GetProfileInt
>2017	CallExpression	AfxGetApp ( )
>2018	ArgumentList	 
>2019	Callee	AfxGetApp
>2020	Identifier	AfxGetApp
>2021	Identifier	m_bALTEdge
>2022	ExpressionStatement	 
>2023	AssignmentExpr	m_nCubicScale = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , CUBICSCALE_KEY , 13 )
>2024	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , CUBICSCALE_KEY , 13 )
>2025	ArgumentList	PREF_SECTION
>2026	Argument	13
>2027	PrimaryExpression	13
>2028	Argument	CUBICSCALE_KEY
>2029	Identifier	CUBICSCALE_KEY
>2030	Argument	PREF_SECTION
>2031	Identifier	PREF_SECTION
>2032	Callee	AfxGetApp ( ) -> GetProfileInt
>2033	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2034	Identifier	GetProfileInt
>2035	CallExpression	AfxGetApp ( )
>2036	ArgumentList	 
>2037	Callee	AfxGetApp
>2038	Identifier	AfxGetApp
>2039	Identifier	m_nCubicScale
>2040	ExpressionStatement	 
>2041	AssignmentExpr	m_bCubicClipping = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , CUBICCLIP_KEY , 1 )
>2042	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , CUBICCLIP_KEY , 1 )
>2043	ArgumentList	PREF_SECTION
>2044	Argument	1
>2045	PrimaryExpression	1
>2046	Argument	CUBICCLIP_KEY
>2047	Identifier	CUBICCLIP_KEY
>2048	Argument	PREF_SECTION
>2049	Identifier	PREF_SECTION
>2050	Callee	AfxGetApp ( ) -> GetProfileInt
>2051	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2052	Identifier	GetProfileInt
>2053	CallExpression	AfxGetApp ( )
>2054	ArgumentList	 
>2055	Callee	AfxGetApp
>2056	Identifier	AfxGetApp
>2057	Identifier	m_bCubicClipping
>2058	ExpressionStatement	 
>2059	AssignmentExpr	m_bNewLightDraw = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , LIGHTDRAW_KEY , 1 )
>2060	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , LIGHTDRAW_KEY , 1 )
>2061	ArgumentList	PREF_SECTION
>2062	Argument	1
>2063	PrimaryExpression	1
>2064	Argument	LIGHTDRAW_KEY
>2065	Identifier	LIGHTDRAW_KEY
>2066	Argument	PREF_SECTION
>2067	Identifier	PREF_SECTION
>2068	Callee	AfxGetApp ( ) -> GetProfileInt
>2069	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2070	Identifier	GetProfileInt
>2071	CallExpression	AfxGetApp ( )
>2072	ArgumentList	 
>2073	Callee	AfxGetApp
>2074	Identifier	AfxGetApp
>2075	Identifier	m_bNewLightDraw
>2076	ExpressionStatement	 
>2077	AssignmentExpr	m_bCamXYUpdate = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , CAMXYUPDATE_KEY , 1 )
>2078	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , CAMXYUPDATE_KEY , 1 )
>2079	ArgumentList	PREF_SECTION
>2080	Argument	1
>2081	PrimaryExpression	1
>2082	Argument	CAMXYUPDATE_KEY
>2083	Identifier	CAMXYUPDATE_KEY
>2084	Argument	PREF_SECTION
>2085	Identifier	PREF_SECTION
>2086	Callee	AfxGetApp ( ) -> GetProfileInt
>2087	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2088	Identifier	GetProfileInt
>2089	CallExpression	AfxGetApp ( )
>2090	ArgumentList	 
>2091	Callee	AfxGetApp
>2092	Identifier	AfxGetApp
>2093	Identifier	m_bCamXYUpdate
>2094	ExpressionStatement	 
>2095	AssignmentExpr	m_bSetGame = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SETGAME_KEY , 0 )
>2096	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SETGAME_KEY , 0 )
>2097	ArgumentList	PREF_SECTION
>2098	Argument	0
>2099	PrimaryExpression	0
>2100	Argument	SETGAME_KEY
>2101	Identifier	SETGAME_KEY
>2102	Argument	PREF_SECTION
>2103	Identifier	PREF_SECTION
>2104	Callee	AfxGetApp ( ) -> GetProfileInt
>2105	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2106	Identifier	GetProfileInt
>2107	CallExpression	AfxGetApp ( )
>2108	ArgumentList	 
>2109	Callee	AfxGetApp
>2110	Identifier	AfxGetApp
>2111	Identifier	m_bSetGame
>2112	ExpressionStatement	 
>2113	AssignmentExpr	m_nAngleSpeed = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , ANGLESPEED_KEY , 300 )
>2114	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , ANGLESPEED_KEY , 300 )
>2115	ArgumentList	PREF_SECTION
>2116	Argument	300
>2117	PrimaryExpression	300
>2118	Argument	ANGLESPEED_KEY
>2119	Identifier	ANGLESPEED_KEY
>2120	Argument	PREF_SECTION
>2121	Identifier	PREF_SECTION
>2122	Callee	AfxGetApp ( ) -> GetProfileInt
>2123	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2124	Identifier	GetProfileInt
>2125	CallExpression	AfxGetApp ( )
>2126	ArgumentList	 
>2127	Callee	AfxGetApp
>2128	Identifier	AfxGetApp
>2129	Identifier	m_nAngleSpeed
>2130	ExpressionStatement	 
>2131	AssignmentExpr	m_nMoveSpeed = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , MOVESPEED_KEY , 400 )
>2132	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , MOVESPEED_KEY , 400 )
>2133	ArgumentList	PREF_SECTION
>2134	Argument	400
>2135	PrimaryExpression	400
>2136	Argument	MOVESPEED_KEY
>2137	Identifier	MOVESPEED_KEY
>2138	Argument	PREF_SECTION
>2139	Identifier	PREF_SECTION
>2140	Callee	AfxGetApp ( ) -> GetProfileInt
>2141	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2142	Identifier	GetProfileInt
>2143	CallExpression	AfxGetApp ( )
>2144	ArgumentList	 
>2145	Callee	AfxGetApp
>2146	Identifier	AfxGetApp
>2147	Identifier	m_nMoveSpeed
>2148	ExpressionStatement	 
>2149	AssignmentExpr	m_nStatusSize = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , STATUS_KEY , 10 )
>2150	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , STATUS_KEY , 10 )
>2151	ArgumentList	PREF_SECTION
>2152	Argument	10
>2153	PrimaryExpression	10
>2154	Argument	STATUS_KEY
>2155	Identifier	STATUS_KEY
>2156	Argument	PREF_SECTION
>2157	Identifier	PREF_SECTION
>2158	Callee	AfxGetApp ( ) -> GetProfileInt
>2159	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2160	Identifier	GetProfileInt
>2161	CallExpression	AfxGetApp ( )
>2162	ArgumentList	 
>2163	Callee	AfxGetApp
>2164	Identifier	AfxGetApp
>2165	Identifier	m_nStatusSize
>2166	ExpressionStatement	 
>2167	AssignmentExpr	m_strPAKFile = AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , PAKFILE_KEY , PAKFILE_DEF )
>2168	CallExpression	AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , PAKFILE_KEY , PAKFILE_DEF )
>2169	ArgumentList	PREF_SECTION
>2170	Argument	PAKFILE_DEF
>2171	Identifier	PAKFILE_DEF
>2172	Argument	PAKFILE_KEY
>2173	Identifier	PAKFILE_KEY
>2174	Argument	PREF_SECTION
>2175	Identifier	PREF_SECTION
>2176	Callee	AfxGetApp ( ) -> GetProfileString
>2177	PtrMemberAccess	AfxGetApp ( ) -> GetProfileString
>2178	Identifier	GetProfileString
>2179	CallExpression	AfxGetApp ( )
>2180	ArgumentList	 
>2181	Callee	AfxGetApp
>2182	Identifier	AfxGetApp
>2183	Identifier	m_strPAKFile
>2184	ExpressionStatement	 
>2185	AssignmentExpr	m_bSnapShots = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SNAPSHOT_KEY , 0 )
>2186	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , SNAPSHOT_KEY , 0 )
>2187	ArgumentList	PREF_SECTION
>2188	Argument	0
>2189	PrimaryExpression	0
>2190	Argument	SNAPSHOT_KEY
>2191	Identifier	SNAPSHOT_KEY
>2192	Argument	PREF_SECTION
>2193	Identifier	PREF_SECTION
>2194	Callee	AfxGetApp ( ) -> GetProfileInt
>2195	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2196	Identifier	GetProfileInt
>2197	CallExpression	AfxGetApp ( )
>2198	ArgumentList	 
>2199	Callee	AfxGetApp
>2200	Identifier	AfxGetApp
>2201	Identifier	m_bSnapShots
>2202	ExpressionStatement	 
>2203	CallExpression	m_strAutoSave . Format ( \"%i\" , m_nAutoSave )
>2204	ArgumentList	\"%i\"
>2205	Argument	m_nAutoSave
>2206	Identifier	m_nAutoSave
>2207	Argument	\"%i\"
>2208	PrimaryExpression	\"%i\"
>2209	Callee	m_strAutoSave . Format
>2210	MemberAccess	m_strAutoSave . Format
>2211	Identifier	Format
>2212	Identifier	m_strAutoSave
>2213	ExpressionStatement	 
>2214	AssignmentExpr	m_nAutoSave = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , AUTOSAVETIME_KEY , 5 )
>2215	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , AUTOSAVETIME_KEY , 5 )
>2216	ArgumentList	PREF_SECTION
>2217	Argument	5
>2218	PrimaryExpression	5
>2219	Argument	AUTOSAVETIME_KEY
>2220	Identifier	AUTOSAVETIME_KEY
>2221	Argument	PREF_SECTION
>2222	Identifier	PREF_SECTION
>2223	Callee	AfxGetApp ( ) -> GetProfileInt
>2224	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2225	Identifier	GetProfileInt
>2226	CallExpression	AfxGetApp ( )
>2227	ArgumentList	 
>2228	Callee	AfxGetApp
>2229	Identifier	AfxGetApp
>2230	Identifier	m_nAutoSave
>2231	ExpressionStatement	 
>2232	AssignmentExpr	m_fTinySize = atof ( strBuff )
>2233	CallExpression	atof ( strBuff )
>2234	ArgumentList	strBuff
>2235	Argument	strBuff
>2236	Identifier	strBuff
>2237	Callee	atof
>2238	Identifier	atof
>2239	Identifier	m_fTinySize
>2240	ExpressionStatement	 
>2241	AssignmentExpr	strBuff = AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , TINYSIZE_KEY , \"0.5\" )
>2242	CallExpression	AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , TINYSIZE_KEY , \"0.5\" )
>2243	ArgumentList	PREF_SECTION
>2244	Argument	\"0.5\"
>2245	PrimaryExpression	\"0.5\"
>2246	Argument	TINYSIZE_KEY
>2247	Identifier	TINYSIZE_KEY
>2248	Argument	PREF_SECTION
>2249	Identifier	PREF_SECTION
>2250	Callee	AfxGetApp ( ) -> GetProfileString
>2251	PtrMemberAccess	AfxGetApp ( ) -> GetProfileString
>2252	Identifier	GetProfileString
>2253	CallExpression	AfxGetApp ( )
>2254	ArgumentList	 
>2255	Callee	AfxGetApp
>2256	Identifier	AfxGetApp
>2257	Identifier	strBuff
>2258	ExpressionStatement	 
>2259	AssignmentExpr	m_bCleanTiny = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TINYBRUSH_KEY , 0 )
>2260	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TINYBRUSH_KEY , 0 )
>2261	ArgumentList	PREF_SECTION
>2262	Argument	0
>2263	PrimaryExpression	0
>2264	Argument	TINYBRUSH_KEY
>2265	Identifier	TINYBRUSH_KEY
>2266	Argument	PREF_SECTION
>2267	Identifier	PREF_SECTION
>2268	Callee	AfxGetApp ( ) -> GetProfileInt
>2269	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2270	Identifier	GetProfileInt
>2271	CallExpression	AfxGetApp ( )
>2272	ArgumentList	 
>2273	Callee	AfxGetApp
>2274	Identifier	AfxGetApp
>2275	Identifier	m_bCleanTiny
>2276	ExpressionStatement	 
>2277	AssignmentExpr	m_bTextureWindow = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TEXTURE_KEY , 0 )
>2278	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TEXTURE_KEY , 0 )
>2279	ArgumentList	PREF_SECTION
>2280	Argument	0
>2281	PrimaryExpression	0
>2282	Argument	TEXTURE_KEY
>2283	Identifier	TEXTURE_KEY
>2284	Argument	PREF_SECTION
>2285	Identifier	PREF_SECTION
>2286	Callee	AfxGetApp ( ) -> GetProfileInt
>2287	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2288	Identifier	GetProfileInt
>2289	CallExpression	AfxGetApp ( )
>2290	ArgumentList	 
>2291	Callee	AfxGetApp
>2292	Identifier	AfxGetApp
>2293	Identifier	m_bTextureWindow
>2294	ExpressionStatement	 
>2295	AssignmentExpr	m_bGatewayHack = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , HACK_KEY , 0 )
>2296	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , HACK_KEY , 0 )
>2297	ArgumentList	PREF_SECTION
>2298	Argument	0
>2299	PrimaryExpression	0
>2300	Argument	HACK_KEY
>2301	Identifier	HACK_KEY
>2302	Argument	PREF_SECTION
>2303	Identifier	PREF_SECTION
>2304	Callee	AfxGetApp ( ) -> GetProfileInt
>2305	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2306	Identifier	GetProfileInt
>2307	CallExpression	AfxGetApp ( )
>2308	ArgumentList	 
>2309	Callee	AfxGetApp
>2310	Identifier	AfxGetApp
>2311	Identifier	m_bGatewayHack
>2312	ExpressionStatement	 
>2313	AssignmentExpr	m_bLoadLastMap = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , LOADLASTMAP_KEY , 0 )
>2314	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , LOADLASTMAP_KEY , 0 )
>2315	ArgumentList	PREF_SECTION
>2316	Argument	0
>2317	PrimaryExpression	0
>2318	Argument	LOADLASTMAP_KEY
>2319	Identifier	LOADLASTMAP_KEY
>2320	Argument	PREF_SECTION
>2321	Identifier	PREF_SECTION
>2322	Callee	AfxGetApp ( ) -> GetProfileInt
>2323	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2324	Identifier	GetProfileInt
>2325	CallExpression	AfxGetApp ( )
>2326	ArgumentList	 
>2327	Callee	AfxGetApp
>2328	Identifier	AfxGetApp
>2329	Identifier	m_bLoadLastMap
>2330	ExpressionStatement	 
>2331	AssignmentExpr	m_bNewApplyHandling = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , NEWAPPLY_KEY , 0 )
>2332	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , NEWAPPLY_KEY , 0 )
>2333	ArgumentList	PREF_SECTION
>2334	Argument	0
>2335	PrimaryExpression	0
>2336	Argument	NEWAPPLY_KEY
>2337	Identifier	NEWAPPLY_KEY
>2338	Argument	PREF_SECTION
>2339	Identifier	PREF_SECTION
>2340	Callee	AfxGetApp ( ) -> GetProfileInt
>2341	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2342	Identifier	GetProfileInt
>2343	CallExpression	AfxGetApp ( )
>2344	ArgumentList	 
>2345	Callee	AfxGetApp
>2346	Identifier	AfxGetApp
>2347	Identifier	m_bNewApplyHandling
>2348	ExpressionStatement	 
>2349	AssignmentExpr	m_bPAK = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , PAK_KEY , 1 )
>2350	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , PAK_KEY , 1 )
>2351	ArgumentList	PREF_SECTION
>2352	Argument	1
>2353	PrimaryExpression	1
>2354	Argument	PAK_KEY
>2355	Identifier	PAK_KEY
>2356	Argument	PREF_SECTION
>2357	Identifier	PREF_SECTION
>2358	Callee	AfxGetApp ( ) -> GetProfileInt
>2359	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2360	Identifier	GetProfileInt
>2361	CallExpression	AfxGetApp ( )
>2362	ArgumentList	 
>2363	Callee	AfxGetApp
>2364	Identifier	AfxGetApp
>2365	Identifier	m_bPAK
>2366	ExpressionStatement	 
>2367	AssignmentExpr	m_bAutoSave = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , AUTOSAVE_KEY , 1 )
>2368	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , AUTOSAVE_KEY , 1 )
>2369	ArgumentList	PREF_SECTION
>2370	Argument	1
>2371	PrimaryExpression	1
>2372	Argument	AUTOSAVE_KEY
>2373	Identifier	AUTOSAVE_KEY
>2374	Argument	PREF_SECTION
>2375	Identifier	PREF_SECTION
>2376	Callee	AfxGetApp ( ) -> GetProfileInt
>2377	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2378	Identifier	GetProfileInt
>2379	CallExpression	AfxGetApp ( )
>2380	ArgumentList	 
>2381	Callee	AfxGetApp
>2382	Identifier	AfxGetApp
>2383	Identifier	m_bAutoSave
>2384	ExpressionStatement	 
>2385	AssignmentExpr	m_bVertex = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , VERTEX_KEY , 1 )
>2386	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , VERTEX_KEY , 1 )
>2387	ArgumentList	PREF_SECTION
>2388	Argument	1
>2389	PrimaryExpression	1
>2390	Argument	VERTEX_KEY
>2391	Identifier	VERTEX_KEY
>2392	Argument	PREF_SECTION
>2393	Identifier	PREF_SECTION
>2394	Callee	AfxGetApp ( ) -> GetProfileInt
>2395	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2396	Identifier	GetProfileInt
>2397	CallExpression	AfxGetApp ( )
>2398	ArgumentList	 
>2399	Callee	AfxGetApp
>2400	Identifier	AfxGetApp
>2401	Identifier	m_bVertex
>2402	ExpressionStatement	 
>2403	AssignmentExpr	m_bRightClick = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , RCLICK_KEY , 1 )
>2404	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , RCLICK_KEY , 1 )
>2405	ArgumentList	PREF_SECTION
>2406	Argument	1
>2407	PrimaryExpression	1
>2408	Argument	RCLICK_KEY
>2409	Identifier	RCLICK_KEY
>2410	Argument	PREF_SECTION
>2411	Identifier	PREF_SECTION
>2412	Callee	AfxGetApp ( ) -> GetProfileInt
>2413	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2414	Identifier	GetProfileInt
>2415	CallExpression	AfxGetApp ( )
>2416	ArgumentList	 
>2417	Callee	AfxGetApp
>2418	Identifier	AfxGetApp
>2419	Identifier	m_bRightClick
>2420	ExpressionStatement	 
>2421	AssignmentExpr	m_bInternalBSP = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , BSP_KEY , 0 )
>2422	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , BSP_KEY , 0 )
>2423	ArgumentList	PREF_SECTION
>2424	Argument	0
>2425	PrimaryExpression	0
>2426	Argument	BSP_KEY
>2427	Identifier	BSP_KEY
>2428	Argument	PREF_SECTION
>2429	Identifier	PREF_SECTION
>2430	Callee	AfxGetApp ( ) -> GetProfileInt
>2431	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2432	Identifier	GetProfileInt
>2433	CallExpression	AfxGetApp ( )
>2434	ArgumentList	 
>2435	Callee	AfxGetApp
>2436	Identifier	AfxGetApp
>2437	Identifier	m_bInternalBSP
>2438	ExpressionStatement	 
>2439	AssignmentExpr	m_bFace = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , FACE_KEY , 1 )
>2440	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , FACE_KEY , 1 )
>2441	ArgumentList	PREF_SECTION
>2442	Argument	1
>2443	PrimaryExpression	1
>2444	Argument	FACE_KEY
>2445	Identifier	FACE_KEY
>2446	Argument	PREF_SECTION
>2447	Identifier	PREF_SECTION
>2448	Callee	AfxGetApp ( ) -> GetProfileInt
>2449	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2450	Identifier	GetProfileInt
>2451	CallExpression	AfxGetApp ( )
>2452	ArgumentList	 
>2453	Callee	AfxGetApp
>2454	Identifier	AfxGetApp
>2455	Identifier	m_bFace
>2456	ExpressionStatement	 
>2457	AssignmentExpr	m_bRunBefore = AfxGetApp ( ) -> GetProfileInt ( INTERNAL_SECTION , RUN_KEY , RUN_DEF )
>2458	CallExpression	AfxGetApp ( ) -> GetProfileInt ( INTERNAL_SECTION , RUN_KEY , RUN_DEF )
>2459	ArgumentList	INTERNAL_SECTION
>2460	Argument	RUN_DEF
>2461	Identifier	RUN_DEF
>2462	Argument	RUN_KEY
>2463	Identifier	RUN_KEY
>2464	Argument	INTERNAL_SECTION
>2465	Identifier	INTERNAL_SECTION
>2466	Callee	AfxGetApp ( ) -> GetProfileInt
>2467	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2468	Identifier	GetProfileInt
>2469	CallExpression	AfxGetApp ( )
>2470	ArgumentList	 
>2471	Callee	AfxGetApp
>2472	Identifier	AfxGetApp
>2473	Identifier	m_bRunBefore
>2474	ExpressionStatement	 
>2475	AssignmentExpr	m_bLoadLast = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , LOADLAST_KEY , LOADLAST_DEF )
>2476	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , LOADLAST_KEY , LOADLAST_DEF )
>2477	ArgumentList	PREF_SECTION
>2478	Argument	LOADLAST_DEF
>2479	Identifier	LOADLAST_DEF
>2480	Argument	LOADLAST_KEY
>2481	Identifier	LOADLAST_KEY
>2482	Argument	PREF_SECTION
>2483	Identifier	PREF_SECTION
>2484	Callee	AfxGetApp ( ) -> GetProfileInt
>2485	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2486	Identifier	GetProfileInt
>2487	CallExpression	AfxGetApp ( )
>2488	ArgumentList	 
>2489	Callee	AfxGetApp
>2490	Identifier	AfxGetApp
>2491	Identifier	m_bLoadLast
>2492	ExpressionStatement	 
>2493	AssignmentExpr	m_strLastMap = AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , LASTMAP_KEY , \"\" )
>2494	CallExpression	AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , LASTMAP_KEY , \"\" )
>2495	ArgumentList	PREF_SECTION
>2496	Argument	\"\"
>2497	PrimaryExpression	\"\"
>2498	Argument	LASTMAP_KEY
>2499	Identifier	LASTMAP_KEY
>2500	Argument	PREF_SECTION
>2501	Identifier	PREF_SECTION
>2502	Callee	AfxGetApp ( ) -> GetProfileString
>2503	PtrMemberAccess	AfxGetApp ( ) -> GetProfileString
>2504	Identifier	GetProfileString
>2505	CallExpression	AfxGetApp ( )
>2506	ArgumentList	 
>2507	Callee	AfxGetApp
>2508	Identifier	AfxGetApp
>2509	Identifier	m_strLastMap
>2510	ExpressionStatement	 
>2511	AssignmentExpr	m_strLastProject = AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , LASTPROJ_KEY , \"\" )
>2512	CallExpression	AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , LASTPROJ_KEY , \"\" )
>2513	ArgumentList	PREF_SECTION
>2514	Argument	\"\"
>2515	PrimaryExpression	\"\"
>2516	Argument	LASTPROJ_KEY
>2517	Identifier	LASTPROJ_KEY
>2518	Argument	PREF_SECTION
>2519	Identifier	PREF_SECTION
>2520	Callee	AfxGetApp ( ) -> GetProfileString
>2521	PtrMemberAccess	AfxGetApp ( ) -> GetProfileString
>2522	Identifier	GetProfileString
>2523	CallExpression	AfxGetApp ( )
>2524	ArgumentList	 
>2525	Callee	AfxGetApp
>2526	Identifier	AfxGetApp
>2527	Identifier	m_strLastProject
>2528	ExpressionStatement	 
>2529	AssignmentExpr	m_bRotateLock = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , RLOCK_KEY , TLOCK_DEF )
>2530	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , RLOCK_KEY , TLOCK_DEF )
>2531	ArgumentList	PREF_SECTION
>2532	Argument	TLOCK_DEF
>2533	Identifier	TLOCK_DEF
>2534	Argument	RLOCK_KEY
>2535	Identifier	RLOCK_KEY
>2536	Argument	PREF_SECTION
>2537	Identifier	PREF_SECTION
>2538	Callee	AfxGetApp ( ) -> GetProfileInt
>2539	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2540	Identifier	GetProfileInt
>2541	CallExpression	AfxGetApp ( )
>2542	ArgumentList	 
>2543	Callee	AfxGetApp
>2544	Identifier	AfxGetApp
>2545	Identifier	m_bRotateLock
>2546	ExpressionStatement	 
>2547	AssignmentExpr	m_bTextureLock = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TLOCK_KEY , TLOCK_DEF )
>2548	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , TLOCK_KEY , TLOCK_DEF )
>2549	ArgumentList	PREF_SECTION
>2550	Argument	TLOCK_DEF
>2551	Identifier	TLOCK_DEF
>2552	Argument	TLOCK_KEY
>2553	Identifier	TLOCK_KEY
>2554	Argument	PREF_SECTION
>2555	Identifier	PREF_SECTION
>2556	Callee	AfxGetApp ( ) -> GetProfileInt
>2557	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2558	Identifier	GetProfileInt
>2559	CallExpression	AfxGetApp ( )
>2560	ArgumentList	 
>2561	Callee	AfxGetApp
>2562	Identifier	AfxGetApp
>2563	Identifier	m_bTextureLock
>2564	ExpressionStatement	 
>2565	AssignmentExpr	m_bRunQuake = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , RUNQ2_KEY , RUNQ2_DEF )
>2566	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , RUNQ2_KEY , RUNQ2_DEF )
>2567	ArgumentList	PREF_SECTION
>2568	Argument	RUNQ2_DEF
>2569	Identifier	RUNQ2_DEF
>2570	Argument	RUNQ2_KEY
>2571	Identifier	RUNQ2_KEY
>2572	Argument	PREF_SECTION
>2573	Identifier	PREF_SECTION
>2574	Callee	AfxGetApp ( ) -> GetProfileInt
>2575	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2576	Identifier	GetProfileInt
>2577	CallExpression	AfxGetApp ( )
>2578	ArgumentList	 
>2579	Callee	AfxGetApp
>2580	Identifier	AfxGetApp
>2581	Identifier	m_bRunQuake
>2582	ExpressionStatement	 
>2583	AssignmentExpr	m_strQuake2 = AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , Q2_KEY , Q2_DEF )
>2584	CallExpression	AfxGetApp ( ) -> GetProfileString ( PREF_SECTION , Q2_KEY , Q2_DEF )
>2585	ArgumentList	PREF_SECTION
>2586	Argument	Q2_DEF
>2587	Identifier	Q2_DEF
>2588	Argument	Q2_KEY
>2589	Identifier	Q2_KEY
>2590	Argument	PREF_SECTION
>2591	Identifier	PREF_SECTION
>2592	Callee	AfxGetApp ( ) -> GetProfileString
>2593	PtrMemberAccess	AfxGetApp ( ) -> GetProfileString
>2594	Identifier	GetProfileString
>2595	CallExpression	AfxGetApp ( )
>2596	ArgumentList	 
>2597	Callee	AfxGetApp
>2598	Identifier	AfxGetApp
>2599	Identifier	m_strQuake2
>2600	ExpressionStatement	 
>2601	AssignmentExpr	m_nView = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , WINDOW_KEY , WINDOW_DEF )
>2602	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , WINDOW_KEY , WINDOW_DEF )
>2603	ArgumentList	PREF_SECTION
>2604	Argument	WINDOW_DEF
>2605	Identifier	WINDOW_DEF
>2606	Argument	WINDOW_KEY
>2607	Identifier	WINDOW_KEY
>2608	Argument	PREF_SECTION
>2609	Identifier	PREF_SECTION
>2610	Callee	AfxGetApp ( ) -> GetProfileInt
>2611	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2612	Identifier	GetProfileInt
>2613	CallExpression	AfxGetApp ( )
>2614	ArgumentList	 
>2615	Callee	AfxGetApp
>2616	Identifier	AfxGetApp
>2617	Identifier	m_nView
>2618	IfStatement	if ( m_nMouse == 0 )
>2619	ElseStatement	else
>2620	ExpressionStatement	 
>2621	AssignmentExpr	m_nMouseButtons = 3
>2622	PrimaryExpression	3
>2623	Identifier	m_nMouseButtons
>2624	ExpressionStatement	 
>2625	AssignmentExpr	m_nMouseButtons = 2
>2626	PrimaryExpression	2
>2627	Identifier	m_nMouseButtons
>2628	Condition	 
>2629	EqualityExpression	m_nMouse == 0
>2630	PrimaryExpression	0
>2631	Identifier	m_nMouse
>2632	ExpressionStatement	 
>2633	AssignmentExpr	m_nMouse = AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , MOUSE_KEY , MOUSE_DEF )
>2634	CallExpression	AfxGetApp ( ) -> GetProfileInt ( PREF_SECTION , MOUSE_KEY , MOUSE_DEF )
>2635	ArgumentList	PREF_SECTION
>2636	Argument	MOUSE_DEF
>2637	Identifier	MOUSE_DEF
>2638	Argument	MOUSE_KEY
>2639	Identifier	MOUSE_KEY
>2640	Argument	PREF_SECTION
>2641	Identifier	PREF_SECTION
>2642	Callee	AfxGetApp ( ) -> GetProfileInt
>2643	PtrMemberAccess	AfxGetApp ( ) -> GetProfileInt
>2644	Identifier	GetProfileInt
>2645	CallExpression	AfxGetApp ( )
>2646	ArgumentList	 
>2647	Callee	AfxGetApp
>2648	Identifier	AfxGetApp
>2649	Identifier	m_nMouse
>2650	ExpressionStatement	 
>2651	AssignmentExpr	strPrefab += \"Prefabs\\\"
>2652	PrimaryExpression	\"Prefabs\\\"
>2653	Identifier	strPrefab
>2654	ExpressionStatement	 
>2655	CallExpression	AddSlash ( strPrefab )
>2656	ArgumentList	strPrefab
>2657	Argument	strPrefab
>2658	Identifier	strPrefab
>2659	Callee	AddSlash
>2660	Identifier	AddSlash
>2661	IdentifierDeclStatement	 
>2662	IdentifierDecl	strPrefab = g_strAppPath
>2663	AssignmentExpr	strPrefab = g_strAppPath
>2664	Identifier	g_strAppPath
>2665	Identifier	g_strAppPath
>2666	Identifier	strPrefab
>2667	IdentifierDeclType	CString
>2668	IdentifierDeclStatement	 
>2669	IdentifierDecl	strBuff
>2670	Identifier	strBuff
>2671	IdentifierDeclType	CString
>2827	FunctionDef	CPrefsDlg 
>2828	ParameterList	 
>2829	ReturnType	void
>2830	CompoundStatement	 
>2831	ExpressionStatement	 
>2832	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , UNDOLEVELS_KEY , m_nUndoLevels )
>2833	ArgumentList	PREF_SECTION
>2834	Argument	m_nUndoLevels
>2835	Identifier	m_nUndoLevels
>2836	Argument	UNDOLEVELS_KEY
>2837	Identifier	UNDOLEVELS_KEY
>2838	Argument	PREF_SECTION
>2839	Identifier	PREF_SECTION
>2840	Callee	AfxGetApp ( ) -> WriteProfileInt
>2841	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>2842	Identifier	WriteProfileInt
>2843	CallExpression	AfxGetApp ( )
>2844	ArgumentList	 
>2845	Callee	AfxGetApp
>2846	Identifier	AfxGetApp
>2847	ExpressionStatement	 
>2848	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , NOSTIPPLE_KEY , m_bNoStipple )
>2849	ArgumentList	PREF_SECTION
>2850	Argument	m_bNoStipple
>2851	Identifier	m_bNoStipple
>2852	Argument	NOSTIPPLE_KEY
>2853	Identifier	NOSTIPPLE_KEY
>2854	Argument	PREF_SECTION
>2855	Identifier	PREF_SECTION
>2856	Callee	AfxGetApp ( ) -> WriteProfileInt
>2857	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>2858	Identifier	WriteProfileInt
>2859	CallExpression	AfxGetApp ( )
>2860	ArgumentList	 
>2861	Callee	AfxGetApp
>2862	Identifier	AfxGetApp
>2863	ExpressionStatement	 
>2864	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , LOADSHADERS_KEY , m_nShader )
>2865	ArgumentList	PREF_SECTION
>2866	Argument	m_nShader
>2867	Identifier	m_nShader
>2868	Argument	LOADSHADERS_KEY
>2869	Identifier	LOADSHADERS_KEY
>2870	Argument	PREF_SECTION
>2871	Identifier	PREF_SECTION
>2872	Callee	AfxGetApp ( ) -> WriteProfileInt
>2873	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>2874	Identifier	WriteProfileInt
>2875	CallExpression	AfxGetApp ( )
>2876	ArgumentList	 
>2877	Callee	AfxGetApp
>2878	Identifier	AfxGetApp
>2879	ExpressionStatement	 
>2880	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , GLLIGHTING_KEY , m_bGLLighting )
>2881	ArgumentList	PREF_SECTION
>2882	Argument	m_bGLLighting
>2883	Identifier	m_bGLLighting
>2884	Argument	GLLIGHTING_KEY
>2885	Identifier	GLLIGHTING_KEY
>2886	Argument	PREF_SECTION
>2887	Identifier	PREF_SECTION
>2888	Callee	AfxGetApp ( ) -> WriteProfileInt
>2889	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>2890	Identifier	WriteProfileInt
>2891	CallExpression	AfxGetApp ( )
>2892	ArgumentList	 
>2893	Callee	AfxGetApp
>2894	Identifier	AfxGetApp
>2895	ExpressionStatement	 
>2896	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , SHOWSHADERS_KEY , m_bShowShaders )
>2897	ArgumentList	PREF_SECTION
>2898	Argument	m_bShowShaders
>2899	Identifier	m_bShowShaders
>2900	Argument	SHOWSHADERS_KEY
>2901	Identifier	SHOWSHADERS_KEY
>2902	Argument	PREF_SECTION
>2903	Identifier	PREF_SECTION
>2904	Callee	AfxGetApp ( ) -> WriteProfileInt
>2905	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>2906	Identifier	WriteProfileInt
>2907	CallExpression	AfxGetApp ( )
>2908	ArgumentList	 
>2909	Callee	AfxGetApp
>2910	Identifier	AfxGetApp
>2911	ExpressionStatement	 
>2912	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , TEXTUREQUALITY_KEY , m_nTextureQuality )
>2913	ArgumentList	PREF_SECTION
>2914	Argument	m_nTextureQuality
>2915	Identifier	m_nTextureQuality
>2916	Argument	TEXTUREQUALITY_KEY
>2917	Identifier	TEXTUREQUALITY_KEY
>2918	Argument	PREF_SECTION
>2919	Identifier	PREF_SECTION
>2920	Callee	AfxGetApp ( ) -> WriteProfileInt
>2921	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>2922	Identifier	WriteProfileInt
>2923	CallExpression	AfxGetApp ( )
>2924	ArgumentList	 
>2925	Callee	AfxGetApp
>2926	Identifier	AfxGetApp
>2927	ExpressionStatement	 
>2928	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , SELWHOLEENTS_KEY , m_bSelectWholeEntities )
>2929	ArgumentList	PREF_SECTION
>2930	Argument	m_bSelectWholeEntities
>2931	Identifier	m_bSelectWholeEntities
>2932	Argument	SELWHOLEENTS_KEY
>2933	Identifier	SELWHOLEENTS_KEY
>2934	Argument	PREF_SECTION
>2935	Identifier	PREF_SECTION
>2936	Callee	AfxGetApp ( ) -> WriteProfileInt
>2937	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>2938	Identifier	WriteProfileInt
>2939	CallExpression	AfxGetApp ( )
>2940	ArgumentList	 
>2941	Callee	AfxGetApp
>2942	Identifier	AfxGetApp
>2943	ExpressionStatement	 
>2944	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , SWITCHCLIP_KEY , m_bSwitchClip )
>2945	ArgumentList	PREF_SECTION
>2946	Argument	m_bSwitchClip
>2947	Identifier	m_bSwitchClip
>2948	Argument	SWITCHCLIP_KEY
>2949	Identifier	SWITCHCLIP_KEY
>2950	Argument	PREF_SECTION
>2951	Identifier	PREF_SECTION
>2952	Callee	AfxGetApp ( ) -> WriteProfileInt
>2953	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>2954	Identifier	WriteProfileInt
>2955	CallExpression	AfxGetApp ( )
>2956	ArgumentList	 
>2957	Callee	AfxGetApp
>2958	Identifier	AfxGetApp
>2959	ExpressionStatement	 
>2960	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , DISPLAYLISTS_KEY , m_bDisplayLists )
>2961	ArgumentList	PREF_SECTION
>2962	Argument	m_bDisplayLists
>2963	Identifier	m_bDisplayLists
>2964	Argument	DISPLAYLISTS_KEY
>2965	Identifier	DISPLAYLISTS_KEY
>2966	Argument	PREF_SECTION
>2967	Identifier	PREF_SECTION
>2968	Callee	AfxGetApp ( ) -> WriteProfileInt
>2969	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>2970	Identifier	WriteProfileInt
>2971	CallExpression	AfxGetApp ( )
>2972	ArgumentList	 
>2973	Callee	AfxGetApp
>2974	Identifier	AfxGetApp
>2975	ExpressionStatement	 
>2976	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , TEXTURESCROLLBAR_KEY , m_bTextureScrollbar )
>2977	ArgumentList	PREF_SECTION
>2978	Argument	m_bTextureScrollbar
>2979	Identifier	m_bTextureScrollbar
>2980	Argument	TEXTURESCROLLBAR_KEY
>2981	Identifier	TEXTURESCROLLBAR_KEY
>2982	Argument	PREF_SECTION
>2983	Identifier	PREF_SECTION
>2984	Callee	AfxGetApp ( ) -> WriteProfileInt
>2985	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>2986	Identifier	WriteProfileInt
>2987	CallExpression	AfxGetApp ( )
>2988	ArgumentList	 
>2989	Callee	AfxGetApp
>2990	Identifier	AfxGetApp
>2991	ExpressionStatement	 
>2992	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , TEXTURESCALE_KEY , m_nTextureScale )
>2993	ArgumentList	PREF_SECTION
>2994	Argument	m_nTextureScale
>2995	Identifier	m_nTextureScale
>2996	Argument	TEXTURESCALE_KEY
>2997	Identifier	TEXTURESCALE_KEY
>2998	Argument	PREF_SECTION
>2999	Identifier	PREF_SECTION
>3000	Callee	AfxGetApp ( ) -> WriteProfileInt
>3001	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3002	Identifier	WriteProfileInt
>3003	CallExpression	AfxGetApp ( )
>3004	ArgumentList	 
>3005	Callee	AfxGetApp
>3006	Identifier	AfxGetApp
>3007	ExpressionStatement	 
>3008	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , ENTITYSHOW_KEY , m_nEntityShowState )
>3009	ArgumentList	PREF_SECTION
>3010	Argument	m_nEntityShowState
>3011	Identifier	m_nEntityShowState
>3012	Argument	ENTITYSHOW_KEY
>3013	Identifier	ENTITYSHOW_KEY
>3014	Argument	PREF_SECTION
>3015	Identifier	PREF_SECTION
>3016	Callee	AfxGetApp ( ) -> WriteProfileInt
>3017	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3018	Identifier	WriteProfileInt
>3019	CallExpression	AfxGetApp ( )
>3020	ArgumentList	 
>3021	Callee	AfxGetApp
>3022	Identifier	AfxGetApp
>3023	ExpressionStatement	 
>3024	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , CHASEMOUSE_KEY , m_bChaseMouse )
>3025	ArgumentList	PREF_SECTION
>3026	Argument	m_bChaseMouse
>3027	Identifier	m_bChaseMouse
>3028	Argument	CHASEMOUSE_KEY
>3029	Identifier	CHASEMOUSE_KEY
>3030	Argument	PREF_SECTION
>3031	Identifier	PREF_SECTION
>3032	Callee	AfxGetApp ( ) -> WriteProfileInt
>3033	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3034	Identifier	WriteProfileInt
>3035	CallExpression	AfxGetApp ( )
>3036	ArgumentList	 
>3037	Callee	AfxGetApp
>3038	Identifier	AfxGetApp
>3039	ExpressionStatement	 
>3040	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , HICOLOR_KEY , m_bHiColorTextures )
>3041	ArgumentList	PREF_SECTION
>3042	Argument	m_bHiColorTextures
>3043	Identifier	m_bHiColorTextures
>3044	Argument	HICOLOR_KEY
>3045	Identifier	HICOLOR_KEY
>3046	Argument	PREF_SECTION
>3047	Identifier	PREF_SECTION
>3048	Callee	AfxGetApp ( ) -> WriteProfileInt
>3049	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3050	Identifier	WriteProfileInt
>3051	CallExpression	AfxGetApp ( )
>3052	ArgumentList	 
>3053	Callee	AfxGetApp
>3054	Identifier	AfxGetApp
>3055	ExpressionStatement	 
>3056	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , BUGGYICD_KEY , m_bBuggyICD )
>3057	ArgumentList	PREF_SECTION
>3058	Argument	m_bBuggyICD
>3059	Identifier	m_bBuggyICD
>3060	Argument	BUGGYICD_KEY
>3061	Identifier	BUGGYICD_KEY
>3062	Argument	PREF_SECTION
>3063	Identifier	PREF_SECTION
>3064	Callee	AfxGetApp ( ) -> WriteProfileInt
>3065	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3066	Identifier	WriteProfileInt
>3067	CallExpression	AfxGetApp ( )
>3068	ArgumentList	 
>3069	Callee	AfxGetApp
>3070	Identifier	AfxGetApp
>3071	ExpressionStatement	 
>3072	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , SGIOPENGL_KEY , m_bSGIOpenGL )
>3073	ArgumentList	PREF_SECTION
>3074	Argument	m_bSGIOpenGL
>3075	Identifier	m_bSGIOpenGL
>3076	Argument	SGIOPENGL_KEY
>3077	Identifier	SGIOPENGL_KEY
>3078	Argument	PREF_SECTION
>3079	Identifier	PREF_SECTION
>3080	Callee	AfxGetApp ( ) -> WriteProfileInt
>3081	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3082	Identifier	WriteProfileInt
>3083	CallExpression	AfxGetApp ( )
>3084	ArgumentList	 
>3085	Callee	AfxGetApp
>3086	Identifier	AfxGetApp
>3087	ExpressionStatement	 
>3088	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , ROTATION_KEY , m_nRotation )
>3089	ArgumentList	PREF_SECTION
>3090	Argument	m_nRotation
>3091	Identifier	m_nRotation
>3092	Argument	ROTATION_KEY
>3093	Identifier	ROTATION_KEY
>3094	Argument	PREF_SECTION
>3095	Identifier	PREF_SECTION
>3096	Callee	AfxGetApp ( ) -> WriteProfileInt
>3097	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3098	Identifier	WriteProfileInt
>3099	CallExpression	AfxGetApp ( )
>3100	ArgumentList	 
>3101	Callee	AfxGetApp
>3102	Identifier	AfxGetApp
>3103	ExpressionStatement	 
>3104	CallExpression	AfxGetApp ( ) -> WriteProfileString ( PREF_SECTION , USERINI_KEY , m_strUserPath )
>3105	ArgumentList	PREF_SECTION
>3106	Argument	m_strUserPath
>3107	Identifier	m_strUserPath
>3108	Argument	USERINI_KEY
>3109	Identifier	USERINI_KEY
>3110	Argument	PREF_SECTION
>3111	Identifier	PREF_SECTION
>3112	Callee	AfxGetApp ( ) -> WriteProfileString
>3113	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileString
>3114	Identifier	WriteProfileString
>3115	CallExpression	AfxGetApp ( )
>3116	ArgumentList	 
>3117	Callee	AfxGetApp
>3118	Identifier	AfxGetApp
>3119	ExpressionStatement	 
>3120	CallExpression	AfxGetApp ( ) -> WriteProfileString ( PREF_SECTION , PREFAB_KEY , m_strPrefabPath )
>3121	ArgumentList	PREF_SECTION
>3122	Argument	m_strPrefabPath
>3123	Identifier	m_strPrefabPath
>3124	Argument	PREFAB_KEY
>3125	Identifier	PREFAB_KEY
>3126	Argument	PREF_SECTION
>3127	Identifier	PREF_SECTION
>3128	Callee	AfxGetApp ( ) -> WriteProfileString
>3129	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileString
>3130	Identifier	WriteProfileString
>3131	CallExpression	AfxGetApp ( )
>3132	ArgumentList	 
>3133	Callee	AfxGetApp
>3134	Identifier	AfxGetApp
>3135	ExpressionStatement	 
>3136	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , NOCLAMP_KEY , m_bNoClamp )
>3137	ArgumentList	PREF_SECTION
>3138	Argument	m_bNoClamp
>3139	Identifier	m_bNoClamp
>3140	Argument	NOCLAMP_KEY
>3141	Identifier	NOCLAMP_KEY
>3142	Argument	PREF_SECTION
>3143	Identifier	PREF_SECTION
>3144	Callee	AfxGetApp ( ) -> WriteProfileInt
>3145	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3146	Identifier	WriteProfileInt
>3147	CallExpression	AfxGetApp ( )
>3148	ArgumentList	 
>3149	Callee	AfxGetApp
>3150	Identifier	AfxGetApp
>3151	ExpressionStatement	 
>3152	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , WIDETOOLBAR_KEY , m_bWideToolbar )
>3153	ArgumentList	PREF_SECTION
>3154	Argument	m_bWideToolbar
>3155	Identifier	m_bWideToolbar
>3156	Argument	WIDETOOLBAR_KEY
>3157	Identifier	WIDETOOLBAR_KEY
>3158	Argument	PREF_SECTION
>3159	Identifier	PREF_SECTION
>3160	Callee	AfxGetApp ( ) -> WriteProfileInt
>3161	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3162	Identifier	WriteProfileInt
>3163	CallExpression	AfxGetApp ( )
>3164	ArgumentList	 
>3165	Callee	AfxGetApp
>3166	Identifier	AfxGetApp
>3167	ExpressionStatement	 
>3168	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , DLLENTITIES_KEY , m_bDLLEntities )
>3169	ArgumentList	PREF_SECTION
>3170	Argument	m_bDLLEntities
>3171	Identifier	m_bDLLEntities
>3172	Argument	DLLENTITIES_KEY
>3173	Identifier	DLLENTITIES_KEY
>3174	Argument	PREF_SECTION
>3175	Identifier	PREF_SECTION
>3176	Callee	AfxGetApp ( ) -> WriteProfileInt
>3177	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3178	Identifier	WriteProfileInt
>3179	CallExpression	AfxGetApp ( )
>3180	ArgumentList	 
>3181	Callee	AfxGetApp
>3182	Identifier	AfxGetApp
>3183	ExpressionStatement	 
>3184	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , SIZEPAINT_KEY , m_bSizePaint )
>3185	ArgumentList	PREF_SECTION
>3186	Argument	m_bSizePaint
>3187	Identifier	m_bSizePaint
>3188	Argument	SIZEPAINT_KEY
>3189	Identifier	SIZEPAINT_KEY
>3190	Argument	PREF_SECTION
>3191	Identifier	PREF_SECTION
>3192	Callee	AfxGetApp ( ) -> WriteProfileInt
>3193	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3194	Identifier	WriteProfileInt
>3195	CallExpression	AfxGetApp ( )
>3196	ArgumentList	 
>3197	Callee	AfxGetApp
>3198	Identifier	AfxGetApp
>3199	ExpressionStatement	 
>3200	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , ZVIS_KEY , m_bZVis )
>3201	ArgumentList	PREF_SECTION
>3202	Argument	m_bZVis
>3203	Identifier	m_bZVis
>3204	Argument	ZVIS_KEY
>3205	Identifier	ZVIS_KEY
>3206	Argument	PREF_SECTION
>3207	Identifier	PREF_SECTION
>3208	Callee	AfxGetApp ( ) -> WriteProfileInt
>3209	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3210	Identifier	WriteProfileInt
>3211	CallExpression	AfxGetApp ( )
>3212	ArgumentList	 
>3213	Callee	AfxGetApp
>3214	Identifier	AfxGetApp
>3215	ExpressionStatement	 
>3216	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , YZVIS_KEY , m_bYZVis )
>3217	ArgumentList	PREF_SECTION
>3218	Argument	m_bYZVis
>3219	Identifier	m_bYZVis
>3220	Argument	YZVIS_KEY
>3221	Identifier	YZVIS_KEY
>3222	Argument	PREF_SECTION
>3223	Identifier	PREF_SECTION
>3224	Callee	AfxGetApp ( ) -> WriteProfileInt
>3225	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3226	Identifier	WriteProfileInt
>3227	CallExpression	AfxGetApp ( )
>3228	ArgumentList	 
>3229	Callee	AfxGetApp
>3230	Identifier	AfxGetApp
>3231	ExpressionStatement	 
>3232	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , XZVIS_KEY , m_bXZVis )
>3233	ArgumentList	PREF_SECTION
>3234	Argument	m_bXZVis
>3235	Identifier	m_bXZVis
>3236	Argument	XZVIS_KEY
>3237	Identifier	XZVIS_KEY
>3238	Argument	PREF_SECTION
>3239	Identifier	PREF_SECTION
>3240	Callee	AfxGetApp ( ) -> WriteProfileInt
>3241	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3242	Identifier	WriteProfileInt
>3243	CallExpression	AfxGetApp ( )
>3244	ArgumentList	 
>3245	Callee	AfxGetApp
>3246	Identifier	AfxGetApp
>3247	ExpressionStatement	 
>3248	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , SNAPT_KEY , m_bSnapTToGrid )
>3249	ArgumentList	PREF_SECTION
>3250	Argument	m_bSnapTToGrid
>3251	Identifier	m_bSnapTToGrid
>3252	Argument	SNAPT_KEY
>3253	Identifier	SNAPT_KEY
>3254	Argument	PREF_SECTION
>3255	Identifier	PREF_SECTION
>3256	Callee	AfxGetApp ( ) -> WriteProfileInt
>3257	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3258	Identifier	WriteProfileInt
>3259	CallExpression	AfxGetApp ( )
>3260	ArgumentList	 
>3261	Callee	AfxGetApp
>3262	Identifier	AfxGetApp
>3263	ExpressionStatement	 
>3264	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , QE4PAINT_KEY , m_bQE4Painting )
>3265	ArgumentList	PREF_SECTION
>3266	Argument	m_bQE4Painting
>3267	Identifier	m_bQE4Painting
>3268	Argument	QE4PAINT_KEY
>3269	Identifier	QE4PAINT_KEY
>3270	Argument	PREF_SECTION
>3271	Identifier	PREF_SECTION
>3272	Callee	AfxGetApp ( ) -> WriteProfileInt
>3273	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3274	Identifier	WriteProfileInt
>3275	CallExpression	AfxGetApp ( )
>3276	ArgumentList	 
>3277	Callee	AfxGetApp
>3278	Identifier	AfxGetApp
>3279	ExpressionStatement	 
>3280	CallExpression	AfxGetApp ( ) -> WriteProfileString ( PREF_SECTION , WHATGAME_KEY , m_strWhatGame )
>3281	ArgumentList	PREF_SECTION
>3282	Argument	m_strWhatGame
>3283	Identifier	m_strWhatGame
>3284	Argument	WHATGAME_KEY
>3285	Identifier	WHATGAME_KEY
>3286	Argument	PREF_SECTION
>3287	Identifier	PREF_SECTION
>3288	Callee	AfxGetApp ( ) -> WriteProfileString
>3289	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileString
>3290	Identifier	WriteProfileString
>3291	CallExpression	AfxGetApp ( )
>3292	ArgumentList	 
>3293	Callee	AfxGetApp
>3294	Identifier	AfxGetApp
>3295	ExpressionStatement	 
>3296	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , FACECOLORS_KEY , m_bFaceColors )
>3297	ArgumentList	PREF_SECTION
>3298	Argument	m_bFaceColors
>3299	Identifier	m_bFaceColors
>3300	Argument	FACECOLORS_KEY
>3301	Identifier	FACECOLORS_KEY
>3302	Argument	PREF_SECTION
>3303	Identifier	PREF_SECTION
>3304	Callee	AfxGetApp ( ) -> WriteProfileInt
>3305	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3306	Identifier	WriteProfileInt
>3307	CallExpression	AfxGetApp ( )
>3308	ArgumentList	 
>3309	Callee	AfxGetApp
>3310	Identifier	AfxGetApp
>3311	ExpressionStatement	 
>3312	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , TEXTUREBAR_KEY , m_bTextureBar )
>3313	ArgumentList	PREF_SECTION
>3314	Argument	m_bTextureBar
>3315	Identifier	m_bTextureBar
>3316	Argument	TEXTUREBAR_KEY
>3317	Identifier	TEXTUREBAR_KEY
>3318	Argument	PREF_SECTION
>3319	Identifier	PREF_SECTION
>3320	Callee	AfxGetApp ( ) -> WriteProfileInt
>3321	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3322	Identifier	WriteProfileInt
>3323	CallExpression	AfxGetApp ( )
>3324	ArgumentList	 
>3325	Callee	AfxGetApp
>3326	Identifier	AfxGetApp
>3327	ExpressionStatement	 
>3328	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , ALTEDGE_KEY , m_bALTEdge )
>3329	ArgumentList	PREF_SECTION
>3330	Argument	m_bALTEdge
>3331	Identifier	m_bALTEdge
>3332	Argument	ALTEDGE_KEY
>3333	Identifier	ALTEDGE_KEY
>3334	Argument	PREF_SECTION
>3335	Identifier	PREF_SECTION
>3336	Callee	AfxGetApp ( ) -> WriteProfileInt
>3337	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3338	Identifier	WriteProfileInt
>3339	CallExpression	AfxGetApp ( )
>3340	ArgumentList	 
>3341	Callee	AfxGetApp
>3342	Identifier	AfxGetApp
>3343	ExpressionStatement	 
>3344	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , CUBICSCALE_KEY , m_nCubicScale )
>3345	ArgumentList	PREF_SECTION
>3346	Argument	m_nCubicScale
>3347	Identifier	m_nCubicScale
>3348	Argument	CUBICSCALE_KEY
>3349	Identifier	CUBICSCALE_KEY
>3350	Argument	PREF_SECTION
>3351	Identifier	PREF_SECTION
>3352	Callee	AfxGetApp ( ) -> WriteProfileInt
>3353	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3354	Identifier	WriteProfileInt
>3355	CallExpression	AfxGetApp ( )
>3356	ArgumentList	 
>3357	Callee	AfxGetApp
>3358	Identifier	AfxGetApp
>3359	ExpressionStatement	 
>3360	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , CUBICCLIP_KEY , m_bCubicClipping )
>3361	ArgumentList	PREF_SECTION
>3362	Argument	m_bCubicClipping
>3363	Identifier	m_bCubicClipping
>3364	Argument	CUBICCLIP_KEY
>3365	Identifier	CUBICCLIP_KEY
>3366	Argument	PREF_SECTION
>3367	Identifier	PREF_SECTION
>3368	Callee	AfxGetApp ( ) -> WriteProfileInt
>3369	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3370	Identifier	WriteProfileInt
>3371	CallExpression	AfxGetApp ( )
>3372	ArgumentList	 
>3373	Callee	AfxGetApp
>3374	Identifier	AfxGetApp
>3375	ExpressionStatement	 
>3376	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , ANGLESPEED_KEY , m_nAngleSpeed )
>3377	ArgumentList	PREF_SECTION
>3378	Argument	m_nAngleSpeed
>3379	Identifier	m_nAngleSpeed
>3380	Argument	ANGLESPEED_KEY
>3381	Identifier	ANGLESPEED_KEY
>3382	Argument	PREF_SECTION
>3383	Identifier	PREF_SECTION
>3384	Callee	AfxGetApp ( ) -> WriteProfileInt
>3385	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3386	Identifier	WriteProfileInt
>3387	CallExpression	AfxGetApp ( )
>3388	ArgumentList	 
>3389	Callee	AfxGetApp
>3390	Identifier	AfxGetApp
>3391	ExpressionStatement	 
>3392	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , MOVESPEED_KEY , m_nMoveSpeed )
>3393	ArgumentList	PREF_SECTION
>3394	Argument	m_nMoveSpeed
>3395	Identifier	m_nMoveSpeed
>3396	Argument	MOVESPEED_KEY
>3397	Identifier	MOVESPEED_KEY
>3398	Argument	PREF_SECTION
>3399	Identifier	PREF_SECTION
>3400	Callee	AfxGetApp ( ) -> WriteProfileInt
>3401	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3402	Identifier	WriteProfileInt
>3403	CallExpression	AfxGetApp ( )
>3404	ArgumentList	 
>3405	Callee	AfxGetApp
>3406	Identifier	AfxGetApp
>3407	ExpressionStatement	 
>3408	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , LIGHTDRAW_KEY , m_bNewLightDraw )
>3409	ArgumentList	PREF_SECTION
>3410	Argument	m_bNewLightDraw
>3411	Identifier	m_bNewLightDraw
>3412	Argument	LIGHTDRAW_KEY
>3413	Identifier	LIGHTDRAW_KEY
>3414	Argument	PREF_SECTION
>3415	Identifier	PREF_SECTION
>3416	Callee	AfxGetApp ( ) -> WriteProfileInt
>3417	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3418	Identifier	WriteProfileInt
>3419	CallExpression	AfxGetApp ( )
>3420	ArgumentList	 
>3421	Callee	AfxGetApp
>3422	Identifier	AfxGetApp
>3423	ExpressionStatement	 
>3424	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , CAMXYUPDATE_KEY , m_bCamXYUpdate )
>3425	ArgumentList	PREF_SECTION
>3426	Argument	m_bCamXYUpdate
>3427	Identifier	m_bCamXYUpdate
>3428	Argument	CAMXYUPDATE_KEY
>3429	Identifier	CAMXYUPDATE_KEY
>3430	Argument	PREF_SECTION
>3431	Identifier	PREF_SECTION
>3432	Callee	AfxGetApp ( ) -> WriteProfileInt
>3433	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3434	Identifier	WriteProfileInt
>3435	CallExpression	AfxGetApp ( )
>3436	ArgumentList	 
>3437	Callee	AfxGetApp
>3438	Identifier	AfxGetApp
>3439	ExpressionStatement	 
>3440	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , SETGAME_KEY , m_bSetGame )
>3441	ArgumentList	PREF_SECTION
>3442	Argument	m_bSetGame
>3443	Identifier	m_bSetGame
>3444	Argument	SETGAME_KEY
>3445	Identifier	SETGAME_KEY
>3446	Argument	PREF_SECTION
>3447	Identifier	PREF_SECTION
>3448	Callee	AfxGetApp ( ) -> WriteProfileInt
>3449	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3450	Identifier	WriteProfileInt
>3451	CallExpression	AfxGetApp ( )
>3452	ArgumentList	 
>3453	Callee	AfxGetApp
>3454	Identifier	AfxGetApp
>3455	ExpressionStatement	 
>3456	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , STATUS_KEY , m_nStatusSize )
>3457	ArgumentList	PREF_SECTION
>3458	Argument	m_nStatusSize
>3459	Identifier	m_nStatusSize
>3460	Argument	STATUS_KEY
>3461	Identifier	STATUS_KEY
>3462	Argument	PREF_SECTION
>3463	Identifier	PREF_SECTION
>3464	Callee	AfxGetApp ( ) -> WriteProfileInt
>3465	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3466	Identifier	WriteProfileInt
>3467	CallExpression	AfxGetApp ( )
>3468	ArgumentList	 
>3469	Callee	AfxGetApp
>3470	Identifier	AfxGetApp
>3471	ExpressionStatement	 
>3472	CallExpression	AfxGetApp ( ) -> WriteProfileString ( PREF_SECTION , PAKFILE_KEY , m_strPAKFile )
>3473	ArgumentList	PREF_SECTION
>3474	Argument	m_strPAKFile
>3475	Identifier	m_strPAKFile
>3476	Argument	PAKFILE_KEY
>3477	Identifier	PAKFILE_KEY
>3478	Argument	PREF_SECTION
>3479	Identifier	PREF_SECTION
>3480	Callee	AfxGetApp ( ) -> WriteProfileString
>3481	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileString
>3482	Identifier	WriteProfileString
>3483	CallExpression	AfxGetApp ( )
>3484	ArgumentList	 
>3485	Callee	AfxGetApp
>3486	Identifier	AfxGetApp
>3487	ExpressionStatement	 
>3488	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , SNAPSHOT_KEY , m_bSnapShots )
>3489	ArgumentList	PREF_SECTION
>3490	Argument	m_bSnapShots
>3491	Identifier	m_bSnapShots
>3492	Argument	SNAPSHOT_KEY
>3493	Identifier	SNAPSHOT_KEY
>3494	Argument	PREF_SECTION
>3495	Identifier	PREF_SECTION
>3496	Callee	AfxGetApp ( ) -> WriteProfileInt
>3497	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3498	Identifier	WriteProfileInt
>3499	CallExpression	AfxGetApp ( )
>3500	ArgumentList	 
>3501	Callee	AfxGetApp
>3502	Identifier	AfxGetApp
>3503	ExpressionStatement	 
>3504	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , AUTOSAVETIME_KEY , m_nAutoSave )
>3505	ArgumentList	PREF_SECTION
>3506	Argument	m_nAutoSave
>3507	Identifier	m_nAutoSave
>3508	Argument	AUTOSAVETIME_KEY
>3509	Identifier	AUTOSAVETIME_KEY
>3510	Argument	PREF_SECTION
>3511	Identifier	PREF_SECTION
>3512	Callee	AfxGetApp ( ) -> WriteProfileInt
>3513	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3514	Identifier	WriteProfileInt
>3515	CallExpression	AfxGetApp ( )
>3516	ArgumentList	 
>3517	Callee	AfxGetApp
>3518	Identifier	AfxGetApp
>3519	ExpressionStatement	 
>3520	AssignmentExpr	m_nAutoSave = atoi ( m_strAutoSave )
>3521	CallExpression	atoi ( m_strAutoSave )
>3522	ArgumentList	m_strAutoSave
>3523	Argument	m_strAutoSave
>3524	Identifier	m_strAutoSave
>3525	Callee	atoi
>3526	Identifier	atoi
>3527	Identifier	m_nAutoSave
>3528	ExpressionStatement	 
>3529	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , TEXTURE_KEY , m_bTextureWindow )
>3530	ArgumentList	PREF_SECTION
>3531	Argument	m_bTextureWindow
>3532	Identifier	m_bTextureWindow
>3533	Argument	TEXTURE_KEY
>3534	Identifier	TEXTURE_KEY
>3535	Argument	PREF_SECTION
>3536	Identifier	PREF_SECTION
>3537	Callee	AfxGetApp ( ) -> WriteProfileInt
>3538	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3539	Identifier	WriteProfileInt
>3540	CallExpression	AfxGetApp ( )
>3541	ArgumentList	 
>3542	Callee	AfxGetApp
>3543	Identifier	AfxGetApp
>3544	ExpressionStatement	 
>3545	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , LOADLASTMAP_KEY , m_bLoadLastMap )
>3546	ArgumentList	PREF_SECTION
>3547	Argument	m_bLoadLastMap
>3548	Identifier	m_bLoadLastMap
>3549	Argument	LOADLASTMAP_KEY
>3550	Identifier	LOADLASTMAP_KEY
>3551	Argument	PREF_SECTION
>3552	Identifier	PREF_SECTION
>3553	Callee	AfxGetApp ( ) -> WriteProfileInt
>3554	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3555	Identifier	WriteProfileInt
>3556	CallExpression	AfxGetApp ( )
>3557	ArgumentList	 
>3558	Callee	AfxGetApp
>3559	Identifier	AfxGetApp
>3560	ExpressionStatement	 
>3561	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , PAK_KEY , m_bPAK )
>3562	ArgumentList	PREF_SECTION
>3563	Argument	m_bPAK
>3564	Identifier	m_bPAK
>3565	Argument	PAK_KEY
>3566	Identifier	PAK_KEY
>3567	Argument	PREF_SECTION
>3568	Identifier	PREF_SECTION
>3569	Callee	AfxGetApp ( ) -> WriteProfileInt
>3570	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3571	Identifier	WriteProfileInt
>3572	CallExpression	AfxGetApp ( )
>3573	ArgumentList	 
>3574	Callee	AfxGetApp
>3575	Identifier	AfxGetApp
>3576	ExpressionStatement	 
>3577	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , AUTOSAVE_KEY , m_bAutoSave )
>3578	ArgumentList	PREF_SECTION
>3579	Argument	m_bAutoSave
>3580	Identifier	m_bAutoSave
>3581	Argument	AUTOSAVE_KEY
>3582	Identifier	AUTOSAVE_KEY
>3583	Argument	PREF_SECTION
>3584	Identifier	PREF_SECTION
>3585	Callee	AfxGetApp ( ) -> WriteProfileInt
>3586	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3587	Identifier	WriteProfileInt
>3588	CallExpression	AfxGetApp ( )
>3589	ArgumentList	 
>3590	Callee	AfxGetApp
>3591	Identifier	AfxGetApp
>3592	ExpressionStatement	 
>3593	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , VERTEX_KEY , m_bVertex )
>3594	ArgumentList	PREF_SECTION
>3595	Argument	m_bVertex
>3596	Identifier	m_bVertex
>3597	Argument	VERTEX_KEY
>3598	Identifier	VERTEX_KEY
>3599	Argument	PREF_SECTION
>3600	Identifier	PREF_SECTION
>3601	Callee	AfxGetApp ( ) -> WriteProfileInt
>3602	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3603	Identifier	WriteProfileInt
>3604	CallExpression	AfxGetApp ( )
>3605	ArgumentList	 
>3606	Callee	AfxGetApp
>3607	Identifier	AfxGetApp
>3608	ExpressionStatement	 
>3609	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , RCLICK_KEY , m_bRightClick )
>3610	ArgumentList	PREF_SECTION
>3611	Argument	m_bRightClick
>3612	Identifier	m_bRightClick
>3613	Argument	RCLICK_KEY
>3614	Identifier	RCLICK_KEY
>3615	Argument	PREF_SECTION
>3616	Identifier	PREF_SECTION
>3617	Callee	AfxGetApp ( ) -> WriteProfileInt
>3618	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3619	Identifier	WriteProfileInt
>3620	CallExpression	AfxGetApp ( )
>3621	ArgumentList	 
>3622	Callee	AfxGetApp
>3623	Identifier	AfxGetApp
>3624	ExpressionStatement	 
>3625	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , BSP_KEY , m_bInternalBSP )
>3626	ArgumentList	PREF_SECTION
>3627	Argument	m_bInternalBSP
>3628	Identifier	m_bInternalBSP
>3629	Argument	BSP_KEY
>3630	Identifier	BSP_KEY
>3631	Argument	PREF_SECTION
>3632	Identifier	PREF_SECTION
>3633	Callee	AfxGetApp ( ) -> WriteProfileInt
>3634	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3635	Identifier	WriteProfileInt
>3636	CallExpression	AfxGetApp ( )
>3637	ArgumentList	 
>3638	Callee	AfxGetApp
>3639	Identifier	AfxGetApp
>3640	ExpressionStatement	 
>3641	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , FACE_KEY , m_bFace )
>3642	ArgumentList	PREF_SECTION
>3643	Argument	m_bFace
>3644	Identifier	m_bFace
>3645	Argument	FACE_KEY
>3646	Identifier	FACE_KEY
>3647	Argument	PREF_SECTION
>3648	Identifier	PREF_SECTION
>3649	Callee	AfxGetApp ( ) -> WriteProfileInt
>3650	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3651	Identifier	WriteProfileInt
>3652	CallExpression	AfxGetApp ( )
>3653	ArgumentList	 
>3654	Callee	AfxGetApp
>3655	Identifier	AfxGetApp
>3656	ExpressionStatement	 
>3657	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( INTERNAL_SECTION , RUN_KEY , m_bRunBefore )
>3658	ArgumentList	INTERNAL_SECTION
>3659	Argument	m_bRunBefore
>3660	Identifier	m_bRunBefore
>3661	Argument	RUN_KEY
>3662	Identifier	RUN_KEY
>3663	Argument	INTERNAL_SECTION
>3664	Identifier	INTERNAL_SECTION
>3665	Callee	AfxGetApp ( ) -> WriteProfileInt
>3666	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3667	Identifier	WriteProfileInt
>3668	CallExpression	AfxGetApp ( )
>3669	ArgumentList	 
>3670	Callee	AfxGetApp
>3671	Identifier	AfxGetApp
>3672	ExpressionStatement	 
>3673	CallExpression	AfxGetApp ( ) -> WriteProfileString ( PREF_SECTION , LASTMAP_KEY , m_strLastMap )
>3674	ArgumentList	PREF_SECTION
>3675	Argument	m_strLastMap
>3676	Identifier	m_strLastMap
>3677	Argument	LASTMAP_KEY
>3678	Identifier	LASTMAP_KEY
>3679	Argument	PREF_SECTION
>3680	Identifier	PREF_SECTION
>3681	Callee	AfxGetApp ( ) -> WriteProfileString
>3682	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileString
>3683	Identifier	WriteProfileString
>3684	CallExpression	AfxGetApp ( )
>3685	ArgumentList	 
>3686	Callee	AfxGetApp
>3687	Identifier	AfxGetApp
>3688	ExpressionStatement	 
>3689	CallExpression	AfxGetApp ( ) -> WriteProfileString ( PREF_SECTION , LASTPROJ_KEY , m_strLastProject )
>3690	ArgumentList	PREF_SECTION
>3691	Argument	m_strLastProject
>3692	Identifier	m_strLastProject
>3693	Argument	LASTPROJ_KEY
>3694	Identifier	LASTPROJ_KEY
>3695	Argument	PREF_SECTION
>3696	Identifier	PREF_SECTION
>3697	Callee	AfxGetApp ( ) -> WriteProfileString
>3698	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileString
>3699	Identifier	WriteProfileString
>3700	CallExpression	AfxGetApp ( )
>3701	ArgumentList	 
>3702	Callee	AfxGetApp
>3703	Identifier	AfxGetApp
>3704	ExpressionStatement	 
>3705	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , LOADLAST_KEY , m_bLoadLast )
>3706	ArgumentList	PREF_SECTION
>3707	Argument	m_bLoadLast
>3708	Identifier	m_bLoadLast
>3709	Argument	LOADLAST_KEY
>3710	Identifier	LOADLAST_KEY
>3711	Argument	PREF_SECTION
>3712	Identifier	PREF_SECTION
>3713	Callee	AfxGetApp ( ) -> WriteProfileInt
>3714	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3715	Identifier	WriteProfileInt
>3716	CallExpression	AfxGetApp ( )
>3717	ArgumentList	 
>3718	Callee	AfxGetApp
>3719	Identifier	AfxGetApp
>3720	ExpressionStatement	 
>3721	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , RLOCK_KEY , m_bRotateLock )
>3722	ArgumentList	PREF_SECTION
>3723	Argument	m_bRotateLock
>3724	Identifier	m_bRotateLock
>3725	Argument	RLOCK_KEY
>3726	Identifier	RLOCK_KEY
>3727	Argument	PREF_SECTION
>3728	Identifier	PREF_SECTION
>3729	Callee	AfxGetApp ( ) -> WriteProfileInt
>3730	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3731	Identifier	WriteProfileInt
>3732	CallExpression	AfxGetApp ( )
>3733	ArgumentList	 
>3734	Callee	AfxGetApp
>3735	Identifier	AfxGetApp
>3736	ExpressionStatement	 
>3737	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , TLOCK_KEY , m_bTextureLock )
>3738	ArgumentList	PREF_SECTION
>3739	Argument	m_bTextureLock
>3740	Identifier	m_bTextureLock
>3741	Argument	TLOCK_KEY
>3742	Identifier	TLOCK_KEY
>3743	Argument	PREF_SECTION
>3744	Identifier	PREF_SECTION
>3745	Callee	AfxGetApp ( ) -> WriteProfileInt
>3746	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3747	Identifier	WriteProfileInt
>3748	CallExpression	AfxGetApp ( )
>3749	ArgumentList	 
>3750	Callee	AfxGetApp
>3751	Identifier	AfxGetApp
>3752	ExpressionStatement	 
>3753	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , RUNQ2_KEY , m_bRunQuake )
>3754	ArgumentList	PREF_SECTION
>3755	Argument	m_bRunQuake
>3756	Identifier	m_bRunQuake
>3757	Argument	RUNQ2_KEY
>3758	Identifier	RUNQ2_KEY
>3759	Argument	PREF_SECTION
>3760	Identifier	PREF_SECTION
>3761	Callee	AfxGetApp ( ) -> WriteProfileInt
>3762	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3763	Identifier	WriteProfileInt
>3764	CallExpression	AfxGetApp ( )
>3765	ArgumentList	 
>3766	Callee	AfxGetApp
>3767	Identifier	AfxGetApp
>3768	ExpressionStatement	 
>3769	CallExpression	AfxGetApp ( ) -> WriteProfileString ( PREF_SECTION , Q2_KEY , m_strQuake2 )
>3770	ArgumentList	PREF_SECTION
>3771	Argument	m_strQuake2
>3772	Identifier	m_strQuake2
>3773	Argument	Q2_KEY
>3774	Identifier	Q2_KEY
>3775	Argument	PREF_SECTION
>3776	Identifier	PREF_SECTION
>3777	Callee	AfxGetApp ( ) -> WriteProfileString
>3778	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileString
>3779	Identifier	WriteProfileString
>3780	CallExpression	AfxGetApp ( )
>3781	ArgumentList	 
>3782	Callee	AfxGetApp
>3783	Identifier	AfxGetApp
>3784	ExpressionStatement	 
>3785	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , WINDOW_KEY , m_nView )
>3786	ArgumentList	PREF_SECTION
>3787	Argument	m_nView
>3788	Identifier	m_nView
>3789	Argument	WINDOW_KEY
>3790	Identifier	WINDOW_KEY
>3791	Argument	PREF_SECTION
>3792	Identifier	PREF_SECTION
>3793	Callee	AfxGetApp ( ) -> WriteProfileInt
>3794	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3795	Identifier	WriteProfileInt
>3796	CallExpression	AfxGetApp ( )
>3797	ArgumentList	 
>3798	Callee	AfxGetApp
>3799	Identifier	AfxGetApp
>3800	IfStatement	if ( m_nMouse == 0 )
>3801	ElseStatement	else
>3802	ExpressionStatement	 
>3803	AssignmentExpr	m_nMouseButtons = 3
>3804	PrimaryExpression	3
>3805	Identifier	m_nMouseButtons
>3806	ExpressionStatement	 
>3807	AssignmentExpr	m_nMouseButtons = 2
>3808	PrimaryExpression	2
>3809	Identifier	m_nMouseButtons
>3810	Condition	 
>3811	EqualityExpression	m_nMouse == 0
>3812	PrimaryExpression	0
>3813	Identifier	m_nMouse
>3814	ExpressionStatement	 
>3815	CallExpression	AfxGetApp ( ) -> WriteProfileInt ( PREF_SECTION , MOUSE_KEY , m_nMouse )
>3816	ArgumentList	PREF_SECTION
>3817	Argument	m_nMouse
>3818	Identifier	m_nMouse
>3819	Argument	MOUSE_KEY
>3820	Identifier	MOUSE_KEY
>3821	Argument	PREF_SECTION
>3822	Identifier	PREF_SECTION
>3823	Callee	AfxGetApp ( ) -> WriteProfileInt
>3824	PtrMemberAccess	AfxGetApp ( ) -> WriteProfileInt
>3825	Identifier	WriteProfileInt
>3826	CallExpression	AfxGetApp ( )
>3827	ArgumentList	 
>3828	Callee	AfxGetApp
>3829	Identifier	AfxGetApp
>3830	IfStatement	if ( GetSafeHwnd ( ) )
>3831	ExpressionStatement	 
>3832	CallExpression	UpdateData ( TRUE )
>3833	ArgumentList	TRUE
>3834	Argument	TRUE
>3835	Identifier	TRUE
>3836	Callee	UpdateData
>3837	Identifier	UpdateData
>3838	Condition	 
>3839	CallExpression	GetSafeHwnd ( )
>3840	ArgumentList	 
>3841	Callee	GetSafeHwnd
>3842	Identifier	GetSafeHwnd
>3976	FunctionDef	CPrefsDlg 
>3977	ParameterList	 
>3978	ReturnType	void
>3979	CompoundStatement	 
>3980	IfStatement	if ( dlg . DoModal ( ) == IDOK )
>3981	CompoundStatement	 
>3982	ExpressionStatement	 
>3983	CallExpression	UpdateData ( FALSE )
>3984	ArgumentList	FALSE
>3985	Argument	FALSE
>3986	Identifier	FALSE
>3987	Callee	UpdateData
>3988	Identifier	UpdateData
>3989	ExpressionStatement	 
>3990	AssignmentExpr	m_strPAKFile = dlg . GetPathName ( )
>3991	CallExpression	dlg . GetPathName ( )
>3992	ArgumentList	 
>3993	Callee	dlg . GetPathName
>3994	MemberAccess	dlg . GetPathName
>3995	Identifier	GetPathName
>3996	Identifier	dlg
>3997	Identifier	m_strPAKFile
>3998	Condition	 
>3999	EqualityExpression	dlg . DoModal ( ) == IDOK
>4000	Identifier	IDOK
>4001	CallExpression	dlg . DoModal ( )
>4002	ArgumentList	 
>4003	Callee	dlg . DoModal
>4004	MemberAccess	dlg . DoModal
>4005	Identifier	DoModal
>4006	Identifier	dlg
>4007	IdentifierDeclStatement	 
>4008	IdentifierDecl	dlg ( true , NULL , NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"PAK files (*.pak)|*.pak||\" , this )
>4009	Expression	true , NULL , NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"PAK files (*.pak)|*.pak||\" , this
>4010	Expression	NULL , NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"PAK files (*.pak)|*.pak||\" , this
>4011	Expression	NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"PAK files (*.pak)|*.pak||\" , this
>4012	Expression	OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"PAK files (*.pak)|*.pak||\" , this
>4013	Expression	\"PAK files (*.pak)|*.pak||\" , this
>4014	Identifier	this
>4015	PrimaryExpression	\"PAK files (*.pak)|*.pak||\"
>4016	InclusiveOrExpression	OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT
>4017	Identifier	OFN_OVERWRITEPROMPT
>4018	Identifier	OFN_HIDEREADONLY
>4019	Identifier	NULL
>4020	Identifier	NULL
>4021	Identifier	true
>4022	Identifier	dlg
>4023	IdentifierDeclType	CFileDialog
>4024	ExpressionStatement	 
>4025	CallExpression	UpdateData ( TRUE )
>4026	ArgumentList	TRUE
>4027	Argument	TRUE
>4028	Identifier	TRUE
>4029	Callee	UpdateData
>4030	Identifier	UpdateData
>4041	FunctionDef	CPrefsDlg 
>4042	ParameterList	 
>4043	ReturnType	void
>4044	CompoundStatement	 
>4045	IfStatement	if ( pidlBrowse )
>4046	CompoundStatement	 
>4047	ExpressionStatement	 
>4048	CallExpression	UpdateData ( FALSE )
>4049	ArgumentList	FALSE
>4050	Argument	FALSE
>4051	Identifier	FALSE
>4052	Callee	UpdateData
>4053	Identifier	UpdateData
>4054	ExpressionStatement	 
>4055	AssignmentExpr	m_strPrefabPath = strPath
>4056	Identifier	strPath
>4057	Identifier	m_strPrefabPath
>4058	ExpressionStatement	 
>4059	CallExpression	AddSlash ( strPath )
>4060	ArgumentList	strPath
>4061	Argument	strPath
>4062	Identifier	strPath
>4063	Callee	AddSlash
>4064	Identifier	AddSlash
>4065	ExpressionStatement	 
>4066	CallExpression	strPath . ReleaseBuffer ( )
>4067	ArgumentList	 
>4068	Callee	strPath . ReleaseBuffer
>4069	MemberAccess	strPath . ReleaseBuffer
>4070	Identifier	ReleaseBuffer
>4071	Identifier	strPath
>4072	ExpressionStatement	 
>4073	CallExpression	SHGetPathFromIDList ( pidlBrowse , p )
>4074	ArgumentList	pidlBrowse
>4075	Argument	p
>4076	Identifier	p
>4077	Argument	pidlBrowse
>4078	Identifier	pidlBrowse
>4079	Callee	SHGetPathFromIDList
>4080	Identifier	SHGetPathFromIDList
>4081	Condition	 
>4082	Identifier	pidlBrowse
>4083	ExpressionStatement	 
>4084	AssignmentExpr	pidlBrowse = SHBrowseForFolder ( & bi )
>4085	CallExpression	SHBrowseForFolder ( & bi )
>4086	ArgumentList	& bi
>4087	Argument	& bi
>4088	UnaryOp	& bi
>4089	Identifier	bi
>4090	UnaryOperator	&
>4091	Callee	SHBrowseForFolder
>4092	Identifier	SHBrowseForFolder
>4093	Identifier	pidlBrowse
>4094	IdentifierDeclStatement	 
>4095	IdentifierDecl	pidlBrowse
>4096	Identifier	pidlBrowse
>4097	IdentifierDeclType	LPITEMIDLIST
>4098	ExpressionStatement	 
>4099	AssignmentExpr	bi . iImage = 0
>4100	PrimaryExpression	0
>4101	MemberAccess	bi . iImage
>4102	Identifier	iImage
>4103	Identifier	bi
>4104	ExpressionStatement	 
>4105	AssignmentExpr	bi . lParam = NULL
>4106	Identifier	NULL
>4107	MemberAccess	bi . lParam
>4108	Identifier	lParam
>4109	Identifier	bi
>4110	ExpressionStatement	 
>4111	AssignmentExpr	bi . lpfn = NULL
>4112	Identifier	NULL
>4113	MemberAccess	bi . lpfn
>4114	Identifier	lpfn
>4115	Identifier	bi
>4116	ExpressionStatement	 
>4117	AssignmentExpr	bi . ulFlags = 0
>4118	PrimaryExpression	0
>4119	MemberAccess	bi . ulFlags
>4120	Identifier	ulFlags
>4121	Identifier	bi
>4122	ExpressionStatement	 
>4123	AssignmentExpr	bi . lpszTitle = \"Load textures from path\"
>4124	PrimaryExpression	\"Load textures from path\"
>4125	MemberAccess	bi . lpszTitle
>4126	Identifier	lpszTitle
>4127	Identifier	bi
>4128	ExpressionStatement	 
>4129	AssignmentExpr	bi . pszDisplayName = p
>4130	Identifier	p
>4131	MemberAccess	bi . pszDisplayName
>4132	Identifier	pszDisplayName
>4133	Identifier	bi
>4134	ExpressionStatement	 
>4135	AssignmentExpr	bi . pidlRoot = NULL
>4136	Identifier	NULL
>4137	MemberAccess	bi . pidlRoot
>4138	Identifier	pidlRoot
>4139	Identifier	bi
>4140	ExpressionStatement	 
>4141	AssignmentExpr	bi . hwndOwner = GetSafeHwnd ( )
>4142	CallExpression	GetSafeHwnd ( )
>4143	ArgumentList	 
>4144	Callee	GetSafeHwnd
>4145	Identifier	GetSafeHwnd
>4146	MemberAccess	bi . hwndOwner
>4147	Identifier	hwndOwner
>4148	Identifier	bi
>4149	IdentifierDeclStatement	 
>4150	IdentifierDecl	* p = strPath . GetBuffer ( MAX_PATH + 1 )
>4151	AssignmentExpr	* p = strPath . GetBuffer ( MAX_PATH + 1 )
>4152	CallExpression	strPath . GetBuffer ( MAX_PATH + 1 )
>4153	ArgumentList	MAX_PATH + 1
>4154	Argument	MAX_PATH + 1
>4155	AdditiveExpression	MAX_PATH + 1
>4156	PrimaryExpression	1
>4157	Identifier	MAX_PATH
>4158	Callee	strPath . GetBuffer
>4159	MemberAccess	strPath . GetBuffer
>4160	Identifier	GetBuffer
>4161	Identifier	strPath
>4162	Identifier	p
>4163	Identifier	p
>4164	IdentifierDeclType	char *
>4165	IdentifierDeclStatement	 
>4166	IdentifierDecl	strPath
>4167	Identifier	strPath
>4168	IdentifierDeclType	CString
>4169	IdentifierDeclStatement	 
>4170	IdentifierDecl	bi
>4171	Identifier	bi
>4172	IdentifierDeclType	BROWSEINFO
>4173	ExpressionStatement	 
>4174	CallExpression	UpdateData ( TRUE )
>4175	ArgumentList	TRUE
>4176	Argument	TRUE
>4177	Identifier	TRUE
>4178	Callee	UpdateData
>4179	Identifier	UpdateData
>4204	FunctionDef	CPrefsDlg 
>4205	ParameterList	 
>4206	ReturnType	void
>4207	CompoundStatement	 
>4208	IfStatement	if ( dlg . DoModal ( ) == IDOK )
>4209	CompoundStatement	 
>4210	ExpressionStatement	 
>4211	CallExpression	UpdateData ( FALSE )
>4212	ArgumentList	FALSE
>4213	Argument	FALSE
>4214	Identifier	FALSE
>4215	Callee	UpdateData
>4216	Identifier	UpdateData
>4217	ExpressionStatement	 
>4218	AssignmentExpr	m_strUserPath = dlg . GetPathName ( )
>4219	CallExpression	dlg . GetPathName ( )
>4220	ArgumentList	 
>4221	Callee	dlg . GetPathName
>4222	MemberAccess	dlg . GetPathName
>4223	Identifier	GetPathName
>4224	Identifier	dlg
>4225	Identifier	m_strUserPath
>4226	Condition	 
>4227	EqualityExpression	dlg . DoModal ( ) == IDOK
>4228	Identifier	IDOK
>4229	CallExpression	dlg . DoModal ( )
>4230	ArgumentList	 
>4231	Callee	dlg . DoModal
>4232	MemberAccess	dlg . DoModal
>4233	Identifier	DoModal
>4234	Identifier	dlg
>4235	IdentifierDeclStatement	 
>4236	IdentifierDecl	dlg ( true , NULL , NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"INI files (*.ini)|*.ini||\" , this )
>4237	Expression	true , NULL , NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"INI files (*.ini)|*.ini||\" , this
>4238	Expression	NULL , NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"INI files (*.ini)|*.ini||\" , this
>4239	Expression	NULL , OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"INI files (*.ini)|*.ini||\" , this
>4240	Expression	OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT , \"INI files (*.ini)|*.ini||\" , this
>4241	Expression	\"INI files (*.ini)|*.ini||\" , this
>4242	Identifier	this
>4243	PrimaryExpression	\"INI files (*.ini)|*.ini||\"
>4244	InclusiveOrExpression	OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT
>4245	Identifier	OFN_OVERWRITEPROMPT
>4246	Identifier	OFN_HIDEREADONLY
>4247	Identifier	NULL
>4248	Identifier	NULL
>4249	Identifier	true
>4250	Identifier	dlg
>4251	IdentifierDeclType	CFileDialog
>4252	ExpressionStatement	 
>4253	CallExpression	UpdateData ( TRUE )
>4254	ArgumentList	TRUE
>4255	Argument	TRUE
>4256	Identifier	TRUE
>4257	Callee	UpdateData
>4258	Identifier	UpdateData
>4269	FunctionDef	CPrefsDlg 
>4270	ParameterList	 
>4271	ReturnType	void
>4272	CompoundStatement	 
>4273	ExpressionStatement	 
>4274	CallExpression	SetGamePrefs ( )
>4275	ArgumentList	 
>4276	Callee	SetGamePrefs
>4277	Identifier	SetGamePrefs
>4278	IfStatement	if ( n >= 0 )
>4279	CompoundStatement	 
>4280	ExpressionStatement	 
>4281	CallExpression	m_wndWhatGame . GetLBText ( n , m_strWhatGame )
>4282	ArgumentList	n
>4283	Argument	m_strWhatGame
>4284	Identifier	m_strWhatGame
>4285	Argument	n
>4286	Identifier	n
>4287	Callee	m_wndWhatGame . GetLBText
>4288	MemberAccess	m_wndWhatGame . GetLBText
>4289	Identifier	GetLBText
>4290	Identifier	m_wndWhatGame
>4291	Condition	 
>4292	RelationalExpression	n >= 0
>4293	PrimaryExpression	0
>4294	Identifier	n
>4295	IdentifierDeclStatement	 
>4296	IdentifierDecl	n = m_wndWhatGame . GetCurSel ( )
>4297	AssignmentExpr	n = m_wndWhatGame . GetCurSel ( )
>4298	CallExpression	m_wndWhatGame . GetCurSel ( )
>4299	ArgumentList	 
>4300	Callee	m_wndWhatGame . GetCurSel
>4301	MemberAccess	m_wndWhatGame . GetCurSel
>4302	Identifier	GetCurSel
>4303	Identifier	m_wndWhatGame
>4304	Identifier	n
>4305	Identifier	n
>4306	IdentifierDeclType	int
>4314	FunctionDef	CPrefsDlg 
>4315	ParameterList	 
>4316	ReturnType	void
>4317	CompoundStatement	 
>4318	ExpressionStatement	 
>4319	CallExpression	SavePrefs ( )
>4320	ArgumentList	 
>4321	Callee	SavePrefs
>4322	Identifier	SavePrefs
>4323	IfStatement	if ( strstr ( m_strWhatGame , \"Quake3\" ) != NULL )
>4324	ElseStatement	else
>4325	CompoundStatement	 
>4326	IfStatement	if ( GetSafeHwnd ( ) )
>4327	CompoundStatement	 
>4328	ExpressionStatement	 
>4329	CallExpression	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow ( TRUE )
>4330	ArgumentList	TRUE
>4331	Argument	TRUE
>4332	Identifier	TRUE
>4333	Callee	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow
>4334	PtrMemberAccess	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow
>4335	Identifier	EnableWindow
>4336	CallExpression	GetDlgItem ( IDC_CHECK_INTERNALBSP )
>4337	ArgumentList	IDC_CHECK_INTERNALBSP
>4338	Argument	IDC_CHECK_INTERNALBSP
>4339	Identifier	IDC_CHECK_INTERNALBSP
>4340	Callee	GetDlgItem
>4341	Identifier	GetDlgItem
>4342	ExpressionStatement	 
>4343	CallExpression	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow ( TRUE )
>4344	ArgumentList	TRUE
>4345	Argument	TRUE
>4346	Identifier	TRUE
>4347	Callee	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow
>4348	PtrMemberAccess	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow
>4349	Identifier	EnableWindow
>4350	CallExpression	GetDlgItem ( IDC_BTN_BROWSEPAK )
>4351	ArgumentList	IDC_BTN_BROWSEPAK
>4352	Argument	IDC_BTN_BROWSEPAK
>4353	Identifier	IDC_BTN_BROWSEPAK
>4354	Callee	GetDlgItem
>4355	Identifier	GetDlgItem
>4356	ExpressionStatement	 
>4357	CallExpression	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow ( TRUE )
>4358	ArgumentList	TRUE
>4359	Argument	TRUE
>4360	Identifier	TRUE
>4361	Callee	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow
>4362	PtrMemberAccess	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow
>4363	Identifier	EnableWindow
>4364	CallExpression	GetDlgItem ( IDC_EDIT_PAKFILE )
>4365	ArgumentList	IDC_EDIT_PAKFILE
>4366	Argument	IDC_EDIT_PAKFILE
>4367	Identifier	IDC_EDIT_PAKFILE
>4368	Callee	GetDlgItem
>4369	Identifier	GetDlgItem
>4370	Condition	 
>4371	CallExpression	GetSafeHwnd ( )
>4372	ArgumentList	 
>4373	Callee	GetSafeHwnd
>4374	Identifier	GetSafeHwnd
>4375	ExpressionStatement	 
>4376	AssignmentExpr	m_strPAKFile = PAKFILE_DEF
>4377	Identifier	PAKFILE_DEF
>4378	Identifier	m_strPAKFile
>4379	ExpressionStatement	 
>4380	AssignmentExpr	m_bWideToolbar = FALSE
>4381	Identifier	FALSE
>4382	Identifier	m_bWideToolbar
>4383	ExpressionStatement	 
>4384	AssignmentExpr	m_bHiColorTextures = FALSE
>4385	Identifier	FALSE
>4386	Identifier	m_bHiColorTextures
>4387	CompoundStatement	 
>4388	IfStatement	if ( GetSafeHwnd ( ) )
>4389	CompoundStatement	 
>4390	ExpressionStatement	 
>4391	CallExpression	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow ( FALSE )
>4392	ArgumentList	FALSE
>4393	Argument	FALSE
>4394	Identifier	FALSE
>4395	Callee	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow
>4396	PtrMemberAccess	GetDlgItem ( IDC_CHECK_INTERNALBSP ) -> EnableWindow
>4397	Identifier	EnableWindow
>4398	CallExpression	GetDlgItem ( IDC_CHECK_INTERNALBSP )
>4399	ArgumentList	IDC_CHECK_INTERNALBSP
>4400	Argument	IDC_CHECK_INTERNALBSP
>4401	Identifier	IDC_CHECK_INTERNALBSP
>4402	Callee	GetDlgItem
>4403	Identifier	GetDlgItem
>4404	ExpressionStatement	 
>4405	CallExpression	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow ( FALSE )
>4406	ArgumentList	FALSE
>4407	Argument	FALSE
>4408	Identifier	FALSE
>4409	Callee	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow
>4410	PtrMemberAccess	GetDlgItem ( IDC_BTN_BROWSEPAK ) -> EnableWindow
>4411	Identifier	EnableWindow
>4412	CallExpression	GetDlgItem ( IDC_BTN_BROWSEPAK )
>4413	ArgumentList	IDC_BTN_BROWSEPAK
>4414	Argument	IDC_BTN_BROWSEPAK
>4415	Identifier	IDC_BTN_BROWSEPAK
>4416	Callee	GetDlgItem
>4417	Identifier	GetDlgItem
>4418	ExpressionStatement	 
>4419	CallExpression	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow ( FALSE )
>4420	ArgumentList	FALSE
>4421	Argument	FALSE
>4422	Identifier	FALSE
>4423	Callee	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow
>4424	PtrMemberAccess	GetDlgItem ( IDC_EDIT_PAKFILE ) -> EnableWindow
>4425	Identifier	EnableWindow
>4426	CallExpression	GetDlgItem ( IDC_EDIT_PAKFILE )
>4427	ArgumentList	IDC_EDIT_PAKFILE
>4428	Argument	IDC_EDIT_PAKFILE
>4429	Identifier	IDC_EDIT_PAKFILE
>4430	Callee	GetDlgItem
>4431	Identifier	GetDlgItem
>4432	Condition	 
>4433	CallExpression	GetSafeHwnd ( )
>4434	ArgumentList	 
>4435	Callee	GetSafeHwnd
>4436	Identifier	GetSafeHwnd
>4437	ExpressionStatement	 
>4438	AssignmentExpr	m_bInternalBSP = FALSE
>4439	Identifier	FALSE
>4440	Identifier	m_bInternalBSP
>4441	ExpressionStatement	 
>4442	AssignmentExpr	m_strPAKFile = \"PK3 files are loaded from the baseq3 path\"
>4443	PrimaryExpression	\"PK3 files are loaded from the baseq3 path\"
>4444	Identifier	m_strPAKFile
>4445	ExpressionStatement	 
>4446	AssignmentExpr	m_bWideToolbar = TRUE
>4447	Identifier	TRUE
>4448	Identifier	m_bWideToolbar
>4449	ExpressionStatement	 
>4450	AssignmentExpr	m_bHiColorTextures = TRUE
>4451	Identifier	TRUE
>4452	Identifier	m_bHiColorTextures
>4453	Condition	 
>4454	EqualityExpression	strstr ( m_strWhatGame , \"Quake3\" ) != NULL
>4455	Identifier	NULL
>4456	CallExpression	strstr ( m_strWhatGame , \"Quake3\" )
>4457	ArgumentList	m_strWhatGame
>4458	Argument	\"Quake3\"
>4459	PrimaryExpression	\"Quake3\"
>4460	Argument	m_strWhatGame
>4461	Identifier	m_strWhatGame
>4462	Callee	strstr
>4463	Identifier	strstr
<5=10,6
<6=7
<7=9,8
<10=274,270,266,262,258,254,250,246,242,238,11,15,19,23,27,31,35,39,43,47,51,55,59,65,69,73,77,81,85,89,93,97,106,110,114,118,122,126,130,134,138,142,146,150,154,163,167,176,180,184,188,197,201,205,209,213,217,221,230,234
<11=12
<12=14,13
<15=16
<16=18,17
<19=20
<20=22,21
<23=24
<24=26,25
<27=28
<28=30,29
<31=32
<32=34,33
<35=36
<36=38,37
<39=40
<40=42,41
<43=44
<44=46,45
<47=48
<48=50,49
<51=52
<52=54,53
<55=56
<56=58,57
<59=60
<60=64,61
<61=63,62
<65=66
<66=68,67
<69=70
<70=72,71
<73=74
<74=76,75
<77=78
<78=80,79
<81=82
<82=84,83
<85=86
<86=88,87
<89=90
<90=92,91
<93=94
<94=96,95
<97=98
<98=105,99
<99=103,100
<100=101
<101=102
<103=104
<106=107
<107=109,108
<110=111
<111=113,112
<114=115
<115=117,116
<118=119
<119=121,120
<122=123
<123=125,124
<126=127
<127=129,128
<130=131
<131=133,132
<134=135
<135=137,136
<138=139
<139=141,140
<142=143
<143=145,144
<146=147
<147=149,148
<150=151
<151=153,152
<154=155
<155=162,156
<156=160,157
<157=158
<158=159
<160=161
<163=164
<164=166,165
<167=168
<168=175,169
<169=173,170
<170=171
<171=172
<173=174
<176=177
<177=179,178
<180=181
<181=183,182
<184=185
<185=187,186
<188=189
<189=196,190
<190=194,191
<191=192
<192=193
<194=195
<197=198
<198=200,199
<201=202
<202=204,203
<205=206
<206=208,207
<209=210
<210=212,211
<213=214
<214=216,215
<217=218
<218=220,219
<221=222
<222=229,223
<223=227,224
<224=225
<225=226
<227=228
<230=231
<231=233,232
<234=235
<235=237,236
<238=239
<239=241,240
<242=243
<243=245,244
<246=247
<247=249,248
<250=251
<251=253,252
<254=255
<255=257,256
<258=259
<259=261,260
<262=263
<263=265,264
<266=267
<267=269,268
<270=271
<271=273,272
<274=275
<275=282,276
<276=280,277
<277=278
<278=279
<280=281
<348=354,353,349
<349=350
<350=351,352
<354=909,355,368,379,390,401,412,423,434,445,456,467,478,489,500,511,522,533,544,555,566,577,588,599,610,621,632,645,656,667,678,689,700,711,722,733,744,755,766,777,788,799,810,821,832,843,854,865,876,887,898
<355=356
<356=366,357
<357=364,362,360,358
<358=359
<360=361
<362=363
<364=365
<366=367
<368=369
<369=377,370
<370=375,373,371
<371=372
<373=374
<375=376
<377=378
<379=380
<380=388,381
<381=386,384,382
<382=383
<384=385
<386=387
<388=389
<390=391
<391=399,392
<392=397,395,393
<393=394
<395=396
<397=398
<399=400
<401=402
<402=410,403
<403=408,406,404
<404=405
<406=407
<408=409
<410=411
<412=413
<413=421,414
<414=419,417,415
<415=416
<417=418
<419=420
<421=422
<423=424
<424=432,425
<425=430,428,426
<426=427
<428=429
<430=431
<432=433
<434=435
<435=443,436
<436=441,439,437
<437=438
<439=440
<441=442
<443=444
<445=446
<446=454,447
<447=452,450,448
<448=449
<450=451
<452=453
<454=455
<456=457
<457=465,458
<458=463,461,459
<459=460
<461=462
<463=464
<465=466
<467=468
<468=476,469
<469=474,472,470
<470=471
<472=473
<474=475
<476=477
<478=479
<479=487,480
<480=485,483,481
<481=482
<483=484
<485=486
<487=488
<489=490
<490=498,491
<491=496,494,492
<492=493
<494=495
<496=497
<498=499
<500=501
<501=509,502
<502=507,505,503
<503=504
<505=506
<507=508
<509=510
<511=512
<512=520,513
<513=518,516,514
<514=515
<516=517
<518=519
<520=521
<522=523
<523=531,524
<524=529,527,525
<525=526
<527=528
<529=530
<531=532
<533=534
<534=542,535
<535=540,538,536
<536=537
<538=539
<540=541
<542=543
<544=545
<545=553,546
<546=551,549,547
<547=548
<549=550
<551=552
<553=554
<555=556
<556=564,557
<557=562,560,558
<558=559
<560=561
<562=563
<564=565
<566=567
<567=575,568
<568=573,571,569
<569=570
<571=572
<573=574
<575=576
<577=578
<578=586,579
<579=584,582,580
<580=581
<582=583
<584=585
<586=587
<588=589
<589=597,590
<590=595,593,591
<591=592
<593=594
<595=596
<597=598
<599=600
<600=608,601
<601=606,604,602
<602=603
<604=605
<606=607
<608=609
<610=611
<611=619,612
<612=617,615,613
<613=614
<615=616
<617=618
<619=620
<621=622
<622=630,623
<623=628,626,624
<624=625
<626=627
<628=629
<630=631
<632=633
<633=643,634
<634=641,639,637,635
<635=636
<637=638
<639=640
<641=642
<643=644
<645=646
<646=654,647
<647=652,650,648
<648=649
<650=651
<652=653
<654=655
<656=657
<657=665,658
<658=663,661,659
<659=660
<661=662
<663=664
<665=666
<667=668
<668=676,669
<669=674,672,670
<670=671
<672=673
<674=675
<676=677
<678=679
<679=687,680
<680=685,683,681
<681=682
<683=684
<685=686
<687=688
<689=690
<690=698,691
<691=696,694,692
<692=693
<694=695
<696=697
<698=699
<700=701
<701=709,702
<702=707,705,703
<703=704
<705=706
<707=708
<709=710
<711=712
<712=720,713
<713=718,716,714
<714=715
<716=717
<718=719
<720=721
<722=723
<723=731,724
<724=729,727,725
<725=726
<727=728
<729=730
<731=732
<733=734
<734=742,735
<735=740,738,736
<736=737
<738=739
<740=741
<742=743
<744=745
<745=753,746
<746=751,749,747
<747=748
<749=750
<751=752
<753=754
<755=756
<756=764,757
<757=762,760,758
<758=759
<760=761
<762=763
<764=765
<766=767
<767=775,768
<768=773,771,769
<769=770
<771=772
<773=774
<775=776
<777=778
<778=786,779
<779=784,782,780
<780=781
<782=783
<784=785
<786=787
<788=789
<789=797,790
<790=795,793,791
<791=792
<793=794
<795=796
<797=798
<799=800
<800=808,801
<801=806,804,802
<802=803
<804=805
<806=807
<808=809
<810=811
<811=819,812
<812=817,815,813
<813=814
<815=816
<817=818
<819=820
<821=822
<822=830,823
<823=828,826,824
<824=825
<826=827
<828=829
<830=831
<832=833
<833=841,834
<834=839,837,835
<835=836
<837=838
<839=840
<841=842
<843=844
<844=852,845
<845=850,848,846
<846=847
<848=849
<850=851
<852=853
<854=855
<855=863,856
<856=861,859,857
<857=858
<859=860
<861=862
<863=864
<865=866
<866=874,867
<867=872,870,868
<868=869
<870=871
<872=873
<874=875
<876=877
<877=885,878
<878=883,881,879
<879=880
<881=882
<883=884
<885=886
<887=888
<888=896,889
<889=894,892,890
<890=891
<892=893
<894=895
<896=897
<898=899
<899=907,900
<900=905,903,901
<901=902
<903=904
<905=906
<907=908
<909=910
<910=914,911
<911=912
<912=913
<914=915
<1015=1018,1017,1016
<1018=1063,1046,1019
<1019=1037,1020
<1020=1028,1021
<1021=1022
<1022=1026,1023
<1023=1024
<1024=1025
<1026=1027
<1028=1029
<1029=1036,1030
<1030=1032,1031
<1032=1033
<1033=1035,1034
<1037=1038
<1038=1040,1039
<1040=1042,1041
<1042=1043
<1043=1045,1044
<1046=1047
<1047=1062,1061,1048
<1048=1060,1049
<1049=1059,1050
<1050=1058,1051
<1051=1055,1052
<1052=1054,1053
<1055=1057,1056
<1063=1064
<1064=1068,1065
<1065=1066
<1066=1067
<1068=1069
<1080=1083,1082,1081
<1083=1321,1310,1299,1290,1277,1266,1255,1244,1235,1226,1212,1198,1185,1086,1084
<1084=1085
<1086=1174,1131,1087
<1087=1088
<1088=1117,1103,1089
<1089=1090
<1090=1094,1091
<1091=1092
<1092=1093
<1094=1095
<1095=1097,1096
<1097=1101,1098
<1098=1099
<1099=1100
<1101=1102
<1103=1104
<1104=1108,1105
<1105=1106
<1106=1107
<1108=1109
<1109=1111,1110
<1111=1115,1112
<1112=1113
<1113=1114
<1115=1116
<1117=1118
<1118=1122,1119
<1119=1120
<1120=1121
<1122=1123
<1123=1125,1124
<1125=1129,1126
<1126=1127
<1127=1128
<1129=1130
<1131=1160,1146,1132
<1132=1133
<1133=1137,1134
<1134=1135
<1135=1136
<1137=1138
<1138=1140,1139
<1140=1144,1141
<1141=1142
<1142=1143
<1144=1145
<1146=1147
<1147=1151,1148
<1148=1149
<1149=1150
<1151=1152
<1152=1154,1153
<1154=1158,1155
<1155=1156
<1156=1157
<1158=1159
<1160=1161
<1161=1165,1162
<1162=1163
<1163=1164
<1165=1166
<1166=1168,1167
<1168=1172,1169
<1169=1170
<1170=1171
<1172=1173
<1174=1175
<1175=1177,1176
<1177=1183,1178
<1178=1181,1179
<1179=1180
<1181=1182
<1183=1184
<1185=1186
<1186=1194,1187
<1187=1190,1188
<1188=1189
<1190=1191
<1191=1193,1192
<1194=1195
<1195=1197,1196
<1198=1199
<1199=1203,1200
<1200=1201
<1201=1202
<1203=1204
<1204=1206,1205
<1206=1210,1207
<1207=1208
<1208=1209
<1210=1211
<1212=1213
<1213=1217,1214
<1214=1215
<1215=1216
<1217=1218
<1218=1220,1219
<1220=1224,1221
<1221=1222
<1222=1223
<1224=1225
<1226=1227
<1227=1231,1228
<1228=1229
<1229=1230
<1231=1232
<1232=1234,1233
<1235=1236
<1236=1240,1237
<1237=1238
<1238=1239
<1240=1241
<1241=1243,1242
<1244=1245
<1245=1251,1246
<1246=1249,1247
<1247=1248
<1249=1250
<1251=1252
<1252=1254,1253
<1255=1256
<1256=1262,1257
<1257=1260,1258
<1258=1259
<1260=1261
<1262=1263
<1263=1265,1264
<1266=1267
<1267=1271,1268
<1268=1269
<1269=1270
<1271=1272
<1272=1274,1273
<1274=1276,1275
<1277=1278
<1278=1284,1279
<1279=1282,1280
<1280=1281
<1282=1283
<1284=1285
<1285=1287,1286
<1287=1289,1288
<1290=1291
<1291=1295,1292
<1292=1293
<1293=1294
<1295=1296
<1296=1298,1297
<1299=1300
<1300=1306,1301
<1301=1304,1302
<1302=1303
<1304=1305
<1306=1307
<1307=1309,1308
<1310=1311
<1311=1317,1312
<1312=1315,1313
<1313=1314
<1315=1316
<1317=1318
<1318=1320,1319
<1321=1322
<1322=1324,1323
<1324=1325
<1350=1353,1352,1351
<1353=1407,1399,1388,1383,1373,1366,1359,1354
<1354=1355
<1355=1357,1356
<1357=1358
<1359=1360
<1360=1364,1361
<1361=1362
<1362=1363
<1364=1365
<1366=1367
<1367=1371,1368
<1368=1369
<1369=1370
<1371=1372
<1373=1381,1374
<1374=1375
<1375=1377,1376
<1377=1378
<1378=1380,1379
<1381=1382
<1383=1384
<1384=1386,1385
<1386=1387
<1388=1389
<1389=1396,1390
<1390=1392,1391
<1392=1393
<1393=1395,1394
<1396=1398,1397
<1399=1400
<1400=1406,1401
<1401=1403,1402
<1403=1405,1404
<1407=1408
<1408=1415,1409
<1409=1411,1410
<1411=1412
<1412=1414,1413
<1431=1434,1433,1432
<1434=2668,2661,2654,2650,2632,2618,2600,2582,2564,2546,2528,2510,2492,2474,2456,2438,2420,2402,2384,2366,2348,2330,2312,1435,1446,1464,1482,1500,1518,1536,1554,1572,1590,1608,1626,1644,1662,1680,1698,1716,1734,1752,1770,1788,1806,1824,1842,1860,1878,1896,1914,1932,1950,1968,1986,2004,2022,2040,2058,2076,2094,2112,2130,2148,2166,2184,2202,2213,2231,2240,2258,2276,2294
<1435=1442,1436
<1436=1437
<1437=1438
<1438=1440,1439
<1440=1441
<1442=1443
<1443=1445,1444
<1446=1447
<1447=1463,1448
<1448=1456,1449
<1449=1454,1452,1450
<1450=1451
<1452=1453
<1454=1455
<1456=1457
<1457=1459,1458
<1459=1461,1460
<1461=1462
<1464=1465
<1465=1481,1466
<1466=1474,1467
<1467=1472,1470,1468
<1468=1469
<1470=1471
<1472=1473
<1474=1475
<1475=1477,1476
<1477=1479,1478
<1479=1480
<1482=1483
<1483=1499,1484
<1484=1492,1485
<1485=1490,1488,1486
<1486=1487
<1488=1489
<1490=1491
<1492=1493
<1493=1495,1494
<1495=1497,1496
<1497=1498
<1500=1501
<1501=1517,1502
<1502=1510,1503
<1503=1508,1506,1504
<1504=1505
<1506=1507
<1508=1509
<1510=1511
<1511=1513,1512
<1513=1515,1514
<1515=1516
<1518=1519
<1519=1535,1520
<1520=1528,1521
<1521=1526,1524,1522
<1522=1523
<1524=1525
<1526=1527
<1528=1529
<1529=1531,1530
<1531=1533,1532
<1533=1534
<1536=1537
<1537=1553,1538
<1538=1546,1539
<1539=1544,1542,1540
<1540=1541
<1542=1543
<1544=1545
<1546=1547
<1547=1549,1548
<1549=1551,1550
<1551=1552
<1554=1555
<1555=1571,1556
<1556=1564,1557
<1557=1562,1560,1558
<1558=1559
<1560=1561
<1562=1563
<1564=1565
<1565=1567,1566
<1567=1569,1568
<1569=1570
<1572=1573
<1573=1589,1574
<1574=1582,1575
<1575=1580,1578,1576
<1576=1577
<1578=1579
<1580=1581
<1582=1583
<1583=1585,1584
<1585=1587,1586
<1587=1588
<1590=1591
<1591=1607,1592
<1592=1600,1593
<1593=1598,1596,1594
<1594=1595
<1596=1597
<1598=1599
<1600=1601
<1601=1603,1602
<1603=1605,1604
<1605=1606
<1608=1609
<1609=1625,1610
<1610=1618,1611
<1611=1616,1614,1612
<1612=1613
<1614=1615
<1616=1617
<1618=1619
<1619=1621,1620
<1621=1623,1622
<1623=1624
<1626=1627
<1627=1643,1628
<1628=1636,1629
<1629=1634,1632,1630
<1630=1631
<1632=1633
<1634=1635
<1636=1637
<1637=1639,1638
<1639=1641,1640
<1641=1642
<1644=1645
<1645=1661,1646
<1646=1654,1647
<1647=1652,1650,1648
<1648=1649
<1650=1651
<1652=1653
<1654=1655
<1655=1657,1656
<1657=1659,1658
<1659=1660
<1662=1663
<1663=1679,1664
<1664=1672,1665
<1665=1670,1668,1666
<1666=1667
<1668=1669
<1670=1671
<1672=1673
<1673=1675,1674
<1675=1677,1676
<1677=1678
<1680=1681
<1681=1697,1682
<1682=1690,1683
<1683=1688,1686,1684
<1684=1685
<1686=1687
<1688=1689
<1690=1691
<1691=1693,1692
<1693=1695,1694
<1695=1696
<1698=1699
<1699=1715,1700
<1700=1708,1701
<1701=1706,1704,1702
<1702=1703
<1704=1705
<1706=1707
<1708=1709
<1709=1711,1710
<1711=1713,1712
<1713=1714
<1716=1717
<1717=1733,1718
<1718=1726,1719
<1719=1724,1722,1720
<1720=1721
<1722=1723
<1724=1725
<1726=1727
<1727=1729,1728
<1729=1731,1730
<1731=1732
<1734=1735
<1735=1751,1736
<1736=1744,1737
<1737=1742,1740,1738
<1738=1739
<1740=1741
<1742=1743
<1744=1745
<1745=1747,1746
<1747=1749,1748
<1749=1750
<1752=1753
<1753=1769,1754
<1754=1762,1755
<1755=1760,1758,1756
<1756=1757
<1758=1759
<1760=1761
<1762=1763
<1763=1765,1764
<1765=1767,1766
<1767=1768
<1770=1771
<1771=1787,1772
<1772=1780,1773
<1773=1778,1776,1774
<1774=1775
<1776=1777
<1778=1779
<1780=1781
<1781=1783,1782
<1783=1785,1784
<1785=1786
<1788=1789
<1789=1805,1790
<1790=1798,1791
<1791=1796,1794,1792
<1792=1793
<1794=1795
<1796=1797
<1798=1799
<1799=1801,1800
<1801=1803,1802
<1803=1804
<1806=1807
<1807=1823,1808
<1808=1816,1809
<1809=1814,1812,1810
<1810=1811
<1812=1813
<1814=1815
<1816=1817
<1817=1819,1818
<1819=1821,1820
<1821=1822
<1824=1825
<1825=1841,1826
<1826=1834,1827
<1827=1832,1830,1828
<1828=1829
<1830=1831
<1832=1833
<1834=1835
<1835=1837,1836
<1837=1839,1838
<1839=1840
<1842=1843
<1843=1859,1844
<1844=1852,1845
<1845=1850,1848,1846
<1846=1847
<1848=1849
<1850=1851
<1852=1853
<1853=1855,1854
<1855=1857,1856
<1857=1858
<1860=1861
<1861=1877,1862
<1862=1870,1863
<1863=1868,1866,1864
<1864=1865
<1866=1867
<1868=1869
<1870=1871
<1871=1873,1872
<1873=1875,1874
<1875=1876
<1878=1879
<1879=1895,1880
<1880=1888,1881
<1881=1886,1884,1882
<1882=1883
<1884=1885
<1886=1887
<1888=1889
<1889=1891,1890
<1891=1893,1892
<1893=1894
<1896=1897
<1897=1913,1898
<1898=1906,1899
<1899=1904,1902,1900
<1900=1901
<1902=1903
<1904=1905
<1906=1907
<1907=1909,1908
<1909=1911,1910
<1911=1912
<1914=1915
<1915=1931,1916
<1916=1924,1917
<1917=1922,1920,1918
<1918=1919
<1920=1921
<1922=1923
<1924=1925
<1925=1927,1926
<1927=1929,1928
<1929=1930
<1932=1933
<1933=1949,1934
<1934=1942,1935
<1935=1940,1938,1936
<1936=1937
<1938=1939
<1940=1941
<1942=1943
<1943=1945,1944
<1945=1947,1946
<1947=1948
<1950=1951
<1951=1967,1952
<1952=1960,1953
<1953=1958,1956,1954
<1954=1955
<1956=1957
<1958=1959
<1960=1961
<1961=1963,1962
<1963=1965,1964
<1965=1966
<1968=1969
<1969=1985,1970
<1970=1978,1971
<1971=1976,1974,1972
<1972=1973
<1974=1975
<1976=1977
<1978=1979
<1979=1981,1980
<1981=1983,1982
<1983=1984
<1986=1987
<1987=2003,1988
<1988=1996,1989
<1989=1994,1992,1990
<1990=1991
<1992=1993
<1994=1995
<1996=1997
<1997=1999,1998
<1999=2001,2000
<2001=2002
<2004=2005
<2005=2021,2006
<2006=2014,2007
<2007=2012,2010,2008
<2008=2009
<2010=2011
<2012=2013
<2014=2015
<2015=2017,2016
<2017=2019,2018
<2019=2020
<2022=2023
<2023=2039,2024
<2024=2032,2025
<2025=2030,2028,2026
<2026=2027
<2028=2029
<2030=2031
<2032=2033
<2033=2035,2034
<2035=2037,2036
<2037=2038
<2040=2041
<2041=2057,2042
<2042=2050,2043
<2043=2048,2046,2044
<2044=2045
<2046=2047
<2048=2049
<2050=2051
<2051=2053,2052
<2053=2055,2054
<2055=2056
<2058=2059
<2059=2075,2060
<2060=2068,2061
<2061=2066,2064,2062
<2062=2063
<2064=2065
<2066=2067
<2068=2069
<2069=2071,2070
<2071=2073,2072
<2073=2074
<2076=2077
<2077=2093,2078
<2078=2086,2079
<2079=2084,2082,2080
<2080=2081
<2082=2083
<2084=2085
<2086=2087
<2087=2089,2088
<2089=2091,2090
<2091=2092
<2094=2095
<2095=2111,2096
<2096=2104,2097
<2097=2102,2100,2098
<2098=2099
<2100=2101
<2102=2103
<2104=2105
<2105=2107,2106
<2107=2109,2108
<2109=2110
<2112=2113
<2113=2129,2114
<2114=2122,2115
<2115=2120,2118,2116
<2116=2117
<2118=2119
<2120=2121
<2122=2123
<2123=2125,2124
<2125=2127,2126
<2127=2128
<2130=2131
<2131=2147,2132
<2132=2140,2133
<2133=2138,2136,2134
<2134=2135
<2136=2137
<2138=2139
<2140=2141
<2141=2143,2142
<2143=2145,2144
<2145=2146
<2148=2149
<2149=2165,2150
<2150=2158,2151
<2151=2156,2154,2152
<2152=2153
<2154=2155
<2156=2157
<2158=2159
<2159=2161,2160
<2161=2163,2162
<2163=2164
<2166=2167
<2167=2183,2168
<2168=2176,2169
<2169=2174,2172,2170
<2170=2171
<2172=2173
<2174=2175
<2176=2177
<2177=2179,2178
<2179=2181,2180
<2181=2182
<2184=2185
<2185=2201,2186
<2186=2194,2187
<2187=2192,2190,2188
<2188=2189
<2190=2191
<2192=2193
<2194=2195
<2195=2197,2196
<2197=2199,2198
<2199=2200
<2202=2203
<2203=2209,2204
<2204=2207,2205
<2205=2206
<2207=2208
<2209=2210
<2210=2212,2211
<2213=2214
<2214=2230,2215
<2215=2223,2216
<2216=2221,2219,2217
<2217=2218
<2219=2220
<2221=2222
<2223=2224
<2224=2226,2225
<2226=2228,2227
<2228=2229
<2231=2232
<2232=2239,2233
<2233=2237,2234
<2234=2235
<2235=2236
<2237=2238
<2240=2241
<2241=2257,2242
<2242=2250,2243
<2243=2248,2246,2244
<2244=2245
<2246=2247
<2248=2249
<2250=2251
<2251=2253,2252
<2253=2255,2254
<2255=2256
<2258=2259
<2259=2275,2260
<2260=2268,2261
<2261=2266,2264,2262
<2262=2263
<2264=2265
<2266=2267
<2268=2269
<2269=2271,2270
<2271=2273,2272
<2273=2274
<2276=2277
<2277=2293,2278
<2278=2286,2279
<2279=2284,2282,2280
<2280=2281
<2282=2283
<2284=2285
<2286=2287
<2287=2289,2288
<2289=2291,2290
<2291=2292
<2294=2295
<2295=2311,2296
<2296=2304,2297
<2297=2302,2300,2298
<2298=2299
<2300=2301
<2302=2303
<2304=2305
<2305=2307,2306
<2307=2309,2308
<2309=2310
<2312=2313
<2313=2329,2314
<2314=2322,2315
<2315=2320,2318,2316
<2316=2317
<2318=2319
<2320=2321
<2322=2323
<2323=2325,2324
<2325=2327,2326
<2327=2328
<2330=2331
<2331=2347,2332
<2332=2340,2333
<2333=2338,2336,2334
<2334=2335
<2336=2337
<2338=2339
<2340=2341
<2341=2343,2342
<2343=2345,2344
<2345=2346
<2348=2349
<2349=2365,2350
<2350=2358,2351
<2351=2356,2354,2352
<2352=2353
<2354=2355
<2356=2357
<2358=2359
<2359=2361,2360
<2361=2363,2362
<2363=2364
<2366=2367
<2367=2383,2368
<2368=2376,2369
<2369=2374,2372,2370
<2370=2371
<2372=2373
<2374=2375
<2376=2377
<2377=2379,2378
<2379=2381,2380
<2381=2382
<2384=2385
<2385=2401,2386
<2386=2394,2387
<2387=2392,2390,2388
<2388=2389
<2390=2391
<2392=2393
<2394=2395
<2395=2397,2396
<2397=2399,2398
<2399=2400
<2402=2403
<2403=2419,2404
<2404=2412,2405
<2405=2410,2408,2406
<2406=2407
<2408=2409
<2410=2411
<2412=2413
<2413=2415,2414
<2415=2417,2416
<2417=2418
<2420=2421
<2421=2437,2422
<2422=2430,2423
<2423=2428,2426,2424
<2424=2425
<2426=2427
<2428=2429
<2430=2431
<2431=2433,2432
<2433=2435,2434
<2435=2436
<2438=2439
<2439=2455,2440
<2440=2448,2441
<2441=2446,2444,2442
<2442=2443
<2444=2445
<2446=2447
<2448=2449
<2449=2451,2450
<2451=2453,2452
<2453=2454
<2456=2457
<2457=2473,2458
<2458=2466,2459
<2459=2464,2462,2460
<2460=2461
<2462=2463
<2464=2465
<2466=2467
<2467=2469,2468
<2469=2471,2470
<2471=2472
<2474=2475
<2475=2491,2476
<2476=2484,2477
<2477=2482,2480,2478
<2478=2479
<2480=2481
<2482=2483
<2484=2485
<2485=2487,2486
<2487=2489,2488
<2489=2490
<2492=2493
<2493=2509,2494
<2494=2502,2495
<2495=2500,2498,2496
<2496=2497
<2498=2499
<2500=2501
<2502=2503
<2503=2505,2504
<2505=2507,2506
<2507=2508
<2510=2511
<2511=2527,2512
<2512=2520,2513
<2513=2518,2516,2514
<2514=2515
<2516=2517
<2518=2519
<2520=2521
<2521=2523,2522
<2523=2525,2524
<2525=2526
<2528=2529
<2529=2545,2530
<2530=2538,2531
<2531=2536,2534,2532
<2532=2533
<2534=2535
<2536=2537
<2538=2539
<2539=2541,2540
<2541=2543,2542
<2543=2544
<2546=2547
<2547=2563,2548
<2548=2556,2549
<2549=2554,2552,2550
<2550=2551
<2552=2553
<2554=2555
<2556=2557
<2557=2559,2558
<2559=2561,2560
<2561=2562
<2564=2565
<2565=2581,2566
<2566=2574,2567
<2567=2572,2570,2568
<2568=2569
<2570=2571
<2572=2573
<2574=2575
<2575=2577,2576
<2577=2579,2578
<2579=2580
<2582=2583
<2583=2599,2584
<2584=2592,2585
<2585=2590,2588,2586
<2586=2587
<2588=2589
<2590=2591
<2592=2593
<2593=2595,2594
<2595=2597,2596
<2597=2598
<2600=2601
<2601=2617,2602
<2602=2610,2603
<2603=2608,2606,2604
<2604=2605
<2606=2607
<2608=2609
<2610=2611
<2611=2613,2612
<2613=2615,2614
<2615=2616
<2618=2628,2624,2619
<2619=2620
<2620=2621
<2621=2623,2622
<2624=2625
<2625=2627,2626
<2628=2629
<2629=2631,2630
<2632=2633
<2633=2649,2634
<2634=2642,2635
<2635=2640,2638,2636
<2636=2637
<2638=2639
<2640=2641
<2642=2643
<2643=2645,2644
<2645=2647,2646
<2647=2648
<2650=2651
<2651=2653,2652
<2654=2655
<2655=2659,2656
<2656=2657
<2657=2658
<2659=2660
<2661=2662
<2662=2667,2666,2663
<2663=2665,2664
<2668=2669
<2669=2671,2670
<2827=2830,2829,2828
<2830=3830,3814,3800,3784,3768,3752,3736,3720,3704,3688,3672,3656,3640,3624,2831,2847,2863,2879,2895,2911,2927,2943,2959,2975,2991,3007,3023,3039,3055,3071,3087,3103,3119,3135,3151,3167,3183,3199,3215,3231,3247,3263,3279,3295,3311,3327,3343,3359,3375,3391,3407,3423,3439,3455,3471,3487,3503,3519,3528,3544,3560,3576,3592,3608
<2831=2832
<2832=2840,2833
<2833=2838,2836,2834
<2834=2835
<2836=2837
<2838=2839
<2840=2841
<2841=2843,2842
<2843=2845,2844
<2845=2846
<2847=2848
<2848=2856,2849
<2849=2854,2852,2850
<2850=2851
<2852=2853
<2854=2855
<2856=2857
<2857=2859,2858
<2859=2861,2860
<2861=2862
<2863=2864
<2864=2872,2865
<2865=2870,2868,2866
<2866=2867
<2868=2869
<2870=2871
<2872=2873
<2873=2875,2874
<2875=2877,2876
<2877=2878
<2879=2880
<2880=2888,2881
<2881=2886,2884,2882
<2882=2883
<2884=2885
<2886=2887
<2888=2889
<2889=2891,2890
<2891=2893,2892
<2893=2894
<2895=2896
<2896=2904,2897
<2897=2902,2900,2898
<2898=2899
<2900=2901
<2902=2903
<2904=2905
<2905=2907,2906
<2907=2909,2908
<2909=2910
<2911=2912
<2912=2920,2913
<2913=2918,2916,2914
<2914=2915
<2916=2917
<2918=2919
<2920=2921
<2921=2923,2922
<2923=2925,2924
<2925=2926
<2927=2928
<2928=2936,2929
<2929=2934,2932,2930
<2930=2931
<2932=2933
<2934=2935
<2936=2937
<2937=2939,2938
<2939=2941,2940
<2941=2942
<2943=2944
<2944=2952,2945
<2945=2950,2948,2946
<2946=2947
<2948=2949
<2950=2951
<2952=2953
<2953=2955,2954
<2955=2957,2956
<2957=2958
<2959=2960
<2960=2968,2961
<2961=2966,2964,2962
<2962=2963
<2964=2965
<2966=2967
<2968=2969
<2969=2971,2970
<2971=2973,2972
<2973=2974
<2975=2976
<2976=2984,2977
<2977=2982,2980,2978
<2978=2979
<2980=2981
<2982=2983
<2984=2985
<2985=2987,2986
<2987=2989,2988
<2989=2990
<2991=2992
<2992=3000,2993
<2993=2998,2996,2994
<2994=2995
<2996=2997
<2998=2999
<3000=3001
<3001=3003,3002
<3003=3005,3004
<3005=3006
<3007=3008
<3008=3016,3009
<3009=3014,3012,3010
<3010=3011
<3012=3013
<3014=3015
<3016=3017
<3017=3019,3018
<3019=3021,3020
<3021=3022
<3023=3024
<3024=3032,3025
<3025=3030,3028,3026
<3026=3027
<3028=3029
<3030=3031
<3032=3033
<3033=3035,3034
<3035=3037,3036
<3037=3038
<3039=3040
<3040=3048,3041
<3041=3046,3044,3042
<3042=3043
<3044=3045
<3046=3047
<3048=3049
<3049=3051,3050
<3051=3053,3052
<3053=3054
<3055=3056
<3056=3064,3057
<3057=3062,3060,3058
<3058=3059
<3060=3061
<3062=3063
<3064=3065
<3065=3067,3066
<3067=3069,3068
<3069=3070
<3071=3072
<3072=3080,3073
<3073=3078,3076,3074
<3074=3075
<3076=3077
<3078=3079
<3080=3081
<3081=3083,3082
<3083=3085,3084
<3085=3086
<3087=3088
<3088=3096,3089
<3089=3094,3092,3090
<3090=3091
<3092=3093
<3094=3095
<3096=3097
<3097=3099,3098
<3099=3101,3100
<3101=3102
<3103=3104
<3104=3112,3105
<3105=3110,3108,3106
<3106=3107
<3108=3109
<3110=3111
<3112=3113
<3113=3115,3114
<3115=3117,3116
<3117=3118
<3119=3120
<3120=3128,3121
<3121=3126,3124,3122
<3122=3123
<3124=3125
<3126=3127
<3128=3129
<3129=3131,3130
<3131=3133,3132
<3133=3134
<3135=3136
<3136=3144,3137
<3137=3142,3140,3138
<3138=3139
<3140=3141
<3142=3143
<3144=3145
<3145=3147,3146
<3147=3149,3148
<3149=3150
<3151=3152
<3152=3160,3153
<3153=3158,3156,3154
<3154=3155
<3156=3157
<3158=3159
<3160=3161
<3161=3163,3162
<3163=3165,3164
<3165=3166
<3167=3168
<3168=3176,3169
<3169=3174,3172,3170
<3170=3171
<3172=3173
<3174=3175
<3176=3177
<3177=3179,3178
<3179=3181,3180
<3181=3182
<3183=3184
<3184=3192,3185
<3185=3190,3188,3186
<3186=3187
<3188=3189
<3190=3191
<3192=3193
<3193=3195,3194
<3195=3197,3196
<3197=3198
<3199=3200
<3200=3208,3201
<3201=3206,3204,3202
<3202=3203
<3204=3205
<3206=3207
<3208=3209
<3209=3211,3210
<3211=3213,3212
<3213=3214
<3215=3216
<3216=3224,3217
<3217=3222,3220,3218
<3218=3219
<3220=3221
<3222=3223
<3224=3225
<3225=3227,3226
<3227=3229,3228
<3229=3230
<3231=3232
<3232=3240,3233
<3233=3238,3236,3234
<3234=3235
<3236=3237
<3238=3239
<3240=3241
<3241=3243,3242
<3243=3245,3244
<3245=3246
<3247=3248
<3248=3256,3249
<3249=3254,3252,3250
<3250=3251
<3252=3253
<3254=3255
<3256=3257
<3257=3259,3258
<3259=3261,3260
<3261=3262
<3263=3264
<3264=3272,3265
<3265=3270,3268,3266
<3266=3267
<3268=3269
<3270=3271
<3272=3273
<3273=3275,3274
<3275=3277,3276
<3277=3278
<3279=3280
<3280=3288,3281
<3281=3286,3284,3282
<3282=3283
<3284=3285
<3286=3287
<3288=3289
<3289=3291,3290
<3291=3293,3292
<3293=3294
<3295=3296
<3296=3304,3297
<3297=3302,3300,3298
<3298=3299
<3300=3301
<3302=3303
<3304=3305
<3305=3307,3306
<3307=3309,3308
<3309=3310
<3311=3312
<3312=3320,3313
<3313=3318,3316,3314
<3314=3315
<3316=3317
<3318=3319
<3320=3321
<3321=3323,3322
<3323=3325,3324
<3325=3326
<3327=3328
<3328=3336,3329
<3329=3334,3332,3330
<3330=3331
<3332=3333
<3334=3335
<3336=3337
<3337=3339,3338
<3339=3341,3340
<3341=3342
<3343=3344
<3344=3352,3345
<3345=3350,3348,3346
<3346=3347
<3348=3349
<3350=3351
<3352=3353
<3353=3355,3354
<3355=3357,3356
<3357=3358
<3359=3360
<3360=3368,3361
<3361=3366,3364,3362
<3362=3363
<3364=3365
<3366=3367
<3368=3369
<3369=3371,3370
<3371=3373,3372
<3373=3374
<3375=3376
<3376=3384,3377
<3377=3382,3380,3378
<3378=3379
<3380=3381
<3382=3383
<3384=3385
<3385=3387,3386
<3387=3389,3388
<3389=3390
<3391=3392
<3392=3400,3393
<3393=3398,3396,3394
<3394=3395
<3396=3397
<3398=3399
<3400=3401
<3401=3403,3402
<3403=3405,3404
<3405=3406
<3407=3408
<3408=3416,3409
<3409=3414,3412,3410
<3410=3411
<3412=3413
<3414=3415
<3416=3417
<3417=3419,3418
<3419=3421,3420
<3421=3422
<3423=3424
<3424=3432,3425
<3425=3430,3428,3426
<3426=3427
<3428=3429
<3430=3431
<3432=3433
<3433=3435,3434
<3435=3437,3436
<3437=3438
<3439=3440
<3440=3448,3441
<3441=3446,3444,3442
<3442=3443
<3444=3445
<3446=3447
<3448=3449
<3449=3451,3450
<3451=3453,3452
<3453=3454
<3455=3456
<3456=3464,3457
<3457=3462,3460,3458
<3458=3459
<3460=3461
<3462=3463
<3464=3465
<3465=3467,3466
<3467=3469,3468
<3469=3470
<3471=3472
<3472=3480,3473
<3473=3478,3476,3474
<3474=3475
<3476=3477
<3478=3479
<3480=3481
<3481=3483,3482
<3483=3485,3484
<3485=3486
<3487=3488
<3488=3496,3489
<3489=3494,3492,3490
<3490=3491
<3492=3493
<3494=3495
<3496=3497
<3497=3499,3498
<3499=3501,3500
<3501=3502
<3503=3504
<3504=3512,3505
<3505=3510,3508,3506
<3506=3507
<3508=3509
<3510=3511
<3512=3513
<3513=3515,3514
<3515=3517,3516
<3517=3518
<3519=3520
<3520=3527,3521
<3521=3525,3522
<3522=3523
<3523=3524
<3525=3526
<3528=3529
<3529=3537,3530
<3530=3535,3533,3531
<3531=3532
<3533=3534
<3535=3536
<3537=3538
<3538=3540,3539
<3540=3542,3541
<3542=3543
<3544=3545
<3545=3553,3546
<3546=3551,3549,3547
<3547=3548
<3549=3550
<3551=3552
<3553=3554
<3554=3556,3555
<3556=3558,3557
<3558=3559
<3560=3561
<3561=3569,3562
<3562=3567,3565,3563
<3563=3564
<3565=3566
<3567=3568
<3569=3570
<3570=3572,3571
<3572=3574,3573
<3574=3575
<3576=3577
<3577=3585,3578
<3578=3583,3581,3579
<3579=3580
<3581=3582
<3583=3584
<3585=3586
<3586=3588,3587
<3588=3590,3589
<3590=3591
<3592=3593
<3593=3601,3594
<3594=3599,3597,3595
<3595=3596
<3597=3598
<3599=3600
<3601=3602
<3602=3604,3603
<3604=3606,3605
<3606=3607
<3608=3609
<3609=3617,3610
<3610=3615,3613,3611
<3611=3612
<3613=3614
<3615=3616
<3617=3618
<3618=3620,3619
<3620=3622,3621
<3622=3623
<3624=3625
<3625=3633,3626
<3626=3631,3629,3627
<3627=3628
<3629=3630
<3631=3632
<3633=3634
<3634=3636,3635
<3636=3638,3637
<3638=3639
<3640=3641
<3641=3649,3642
<3642=3647,3645,3643
<3643=3644
<3645=3646
<3647=3648
<3649=3650
<3650=3652,3651
<3652=3654,3653
<3654=3655
<3656=3657
<3657=3665,3658
<3658=3663,3661,3659
<3659=3660
<3661=3662
<3663=3664
<3665=3666
<3666=3668,3667
<3668=3670,3669
<3670=3671
<3672=3673
<3673=3681,3674
<3674=3679,3677,3675
<3675=3676
<3677=3678
<3679=3680
<3681=3682
<3682=3684,3683
<3684=3686,3685
<3686=3687
<3688=3689
<3689=3697,3690
<3690=3695,3693,3691
<3691=3692
<3693=3694
<3695=3696
<3697=3698
<3698=3700,3699
<3700=3702,3701
<3702=3703
<3704=3705
<3705=3713,3706
<3706=3711,3709,3707
<3707=3708
<3709=3710
<3711=3712
<3713=3714
<3714=3716,3715
<3716=3718,3717
<3718=3719
<3720=3721
<3721=3729,3722
<3722=3727,3725,3723
<3723=3724
<3725=3726
<3727=3728
<3729=3730
<3730=3732,3731
<3732=3734,3733
<3734=3735
<3736=3737
<3737=3745,3738
<3738=3743,3741,3739
<3739=3740
<3741=3742
<3743=3744
<3745=3746
<3746=3748,3747
<3748=3750,3749
<3750=3751
<3752=3753
<3753=3761,3754
<3754=3759,3757,3755
<3755=3756
<3757=3758
<3759=3760
<3761=3762
<3762=3764,3763
<3764=3766,3765
<3766=3767
<3768=3769
<3769=3777,3770
<3770=3775,3773,3771
<3771=3772
<3773=3774
<3775=3776
<3777=3778
<3778=3780,3779
<3780=3782,3781
<3782=3783
<3784=3785
<3785=3793,3786
<3786=3791,3789,3787
<3787=3788
<3789=3790
<3791=3792
<3793=3794
<3794=3796,3795
<3796=3798,3797
<3798=3799
<3800=3810,3806,3801
<3801=3802
<3802=3803
<3803=3805,3804
<3806=3807
<3807=3809,3808
<3810=3811
<3811=3813,3812
<3814=3815
<3815=3823,3816
<3816=3821,3819,3817
<3817=3818
<3819=3820
<3821=3822
<3823=3824
<3824=3826,3825
<3826=3828,3827
<3828=3829
<3830=3838,3831
<3831=3832
<3832=3836,3833
<3833=3834
<3834=3835
<3836=3837
<3838=3839
<3839=3841,3840
<3841=3842
<3976=3979,3978,3977
<3979=4024,4007,3980
<3980=3998,3981
<3981=3989,3982
<3982=3983
<3983=3987,3984
<3984=3985
<3985=3986
<3987=3988
<3989=3990
<3990=3997,3991
<3991=3993,3992
<3993=3994
<3994=3996,3995
<3998=3999
<3999=4001,4000
<4001=4003,4002
<4003=4004
<4004=4006,4005
<4007=4008
<4008=4023,4022,4009
<4009=4021,4010
<4010=4020,4011
<4011=4019,4012
<4012=4016,4013
<4013=4015,4014
<4016=4018,4017
<4024=4025
<4025=4029,4026
<4026=4027
<4027=4028
<4029=4030
<4041=4044,4043,4042
<4044=4173,4169,4165,4149,4140,4134,4128,4122,4116,4110,4104,4098,4094,4083,4045
<4045=4081,4046
<4046=4072,4065,4058,4054,4047
<4047=4048
<4048=4052,4049
<4049=4050
<4050=4051
<4052=4053
<4054=4055
<4055=4057,4056
<4058=4059
<4059=4063,4060
<4060=4061
<4061=4062
<4063=4064
<4065=4066
<4066=4068,4067
<4068=4069
<4069=4071,4070
<4072=4073
<4073=4079,4074
<4074=4077,4075
<4075=4076
<4077=4078
<4079=4080
<4081=4082
<4083=4084
<4084=4093,4085
<4085=4091,4086
<4086=4087
<4087=4088
<4088=4090,4089
<4091=4092
<4094=4095
<4095=4097,4096
<4098=4099
<4099=4101,4100
<4101=4103,4102
<4104=4105
<4105=4107,4106
<4107=4109,4108
<4110=4111
<4111=4113,4112
<4113=4115,4114
<4116=4117
<4117=4119,4118
<4119=4121,4120
<4122=4123
<4123=4125,4124
<4125=4127,4126
<4128=4129
<4129=4131,4130
<4131=4133,4132
<4134=4135
<4135=4137,4136
<4137=4139,4138
<4140=4141
<4141=4146,4142
<4142=4144,4143
<4144=4145
<4146=4148,4147
<4149=4150
<4150=4164,4163,4151
<4151=4162,4152
<4152=4158,4153
<4153=4154
<4154=4155
<4155=4157,4156
<4158=4159
<4159=4161,4160
<4165=4166
<4166=4168,4167
<4169=4170
<4170=4172,4171
<4173=4174
<4174=4178,4175
<4175=4176
<4176=4177
<4178=4179
<4204=4207,4206,4205
<4207=4252,4235,4208
<4208=4226,4209
<4209=4217,4210
<4210=4211
<4211=4215,4212
<4212=4213
<4213=4214
<4215=4216
<4217=4218
<4218=4225,4219
<4219=4221,4220
<4221=4222
<4222=4224,4223
<4226=4227
<4227=4229,4228
<4229=4231,4230
<4231=4232
<4232=4234,4233
<4235=4236
<4236=4251,4250,4237
<4237=4249,4238
<4238=4248,4239
<4239=4247,4240
<4240=4244,4241
<4241=4243,4242
<4244=4246,4245
<4252=4253
<4253=4257,4254
<4254=4255
<4255=4256
<4257=4258
<4269=4272,4271,4270
<4272=4295,4278,4273
<4273=4274
<4274=4276,4275
<4276=4277
<4278=4291,4279
<4279=4280
<4280=4281
<4281=4287,4282
<4282=4285,4283
<4283=4284
<4285=4286
<4287=4288
<4288=4290,4289
<4291=4292
<4292=4294,4293
<4295=4296
<4296=4306,4305,4297
<4297=4304,4298
<4298=4300,4299
<4300=4301
<4301=4303,4302
<4314=4317,4316,4315
<4317=4323,4318
<4318=4319
<4319=4321,4320
<4321=4322
<4323=4453,4387,4324
<4324=4325
<4325=4383,4379,4375,4326
<4326=4370,4327
<4327=4356,4342,4328
<4328=4329
<4329=4333,4330
<4330=4331
<4331=4332
<4333=4334
<4334=4336,4335
<4336=4340,4337
<4337=4338
<4338=4339
<4340=4341
<4342=4343
<4343=4347,4344
<4344=4345
<4345=4346
<4347=4348
<4348=4350,4349
<4350=4354,4351
<4351=4352
<4352=4353
<4354=4355
<4356=4357
<4357=4361,4358
<4358=4359
<4359=4360
<4361=4362
<4362=4364,4363
<4364=4368,4365
<4365=4366
<4366=4367
<4368=4369
<4370=4371
<4371=4373,4372
<4373=4374
<4375=4376
<4376=4378,4377
<4379=4380
<4380=4382,4381
<4383=4384
<4384=4386,4385
<4387=4449,4445,4441,4437,4388
<4388=4432,4389
<4389=4418,4404,4390
<4390=4391
<4391=4395,4392
<4392=4393
<4393=4394
<4395=4396
<4396=4398,4397
<4398=4402,4399
<4399=4400
<4400=4401
<4402=4403
<4404=4405
<4405=4409,4406
<4406=4407
<4407=4408
<4409=4410
<4410=4412,4411
<4412=4416,4413
<4413=4414
<4414=4415
<4416=4417
<4418=4419
<4419=4423,4420
<4420=4421
<4421=4422
<4423=4424
<4424=4426,4425
<4426=4430,4427
<4427=4428
<4428=4429
<4430=4431
<4432=4433
<4433=4435,4434
<4435=4436
<4437=4438
<4438=4440,4439
<4441=4442
<4442=4444,4443
<4445=4446
<4446=4448,4447
<4449=4450
<4450=4452,4451
<4453=4454
<4454=4456,4455
<4456=4462,4457
<4457=4460,4458
<4458=4459
<4460=4461
<4462=4463
