>10	FunctionDef	SqlLogMod 
>11	ParameterList	 
>12	ReturnType	void
>13	CompoundStatement	 
>14	ExpressionStatement	 
>15	CallExpression	AddCommand ( \"RegisterClient\" , static_cast < CModCommand 
>16	ArgumentList	\"RegisterClient\"
>17	Argument	\"Registers the current client, so the buffer is automaticaly saved on disconnect\"
>18	PrimaryExpression	\"Registers the current client, so the buffer is automaticaly saved on disconnect\"
>19	Argument	\"clientid\"
>20	PrimaryExpression	\"clientid\"
>21	Argument	static_cast < CModCommand 
>22	RelationalExpression	static_cast < CModCommand 
>23	RelationalExpression	CModCommand 
>24	UnaryOp	& SqlLogMod 
>25	Identifier	SqlLogMod 
>26	UnaryOperator	&
>27	Identifier	CModCommand 
>28	Identifier	static_cast
>29	Argument	\"RegisterClient\"
>30	PrimaryExpression	\"RegisterClient\"
>31	Callee	AddCommand
>32	Identifier	AddCommand
>33	ExpressionStatement	 
>34	CallExpression	AddCommand ( \"RequestClientLog\" , static_cast < CModCommand 
>35	ArgumentList	\"RequestClientLog\"
>36	Argument	\"Replays all channels of the current network to the requesting client\"
>37	PrimaryExpression	\"Replays all channels of the current network to the requesting client\"
>38	Argument	\"clientid\"
>39	PrimaryExpression	\"clientid\"
>40	Argument	static_cast < CModCommand 
>41	RelationalExpression	static_cast < CModCommand 
>42	RelationalExpression	CModCommand 
>43	UnaryOp	& SqlLogMod 
>44	Identifier	SqlLogMod 
>45	UnaryOperator	&
>46	Identifier	CModCommand 
>47	Identifier	static_cast
>48	Argument	\"RequestClientLog\"
>49	PrimaryExpression	\"RequestClientLog\"
>50	Callee	AddCommand
>51	Identifier	AddCommand
>52	ExpressionStatement	 
>53	CallExpression	AddCommand ( \"UpdateClientTime\" , static_cast < CModCommand 
>54	ArgumentList	\"UpdateClientTime\"
>55	Argument	\"Saves the current time as last log output for the given clientid\"
>56	PrimaryExpression	\"Saves the current time as last log output for the given clientid\"
>57	Argument	\"clientid\"
>58	PrimaryExpression	\"clientid\"
>59	Argument	static_cast < CModCommand 
>60	RelationalExpression	static_cast < CModCommand 
>61	RelationalExpression	CModCommand 
>62	UnaryOp	& SqlLogMod 
>63	Identifier	SqlLogMod 
>64	UnaryOperator	&
>65	Identifier	CModCommand 
>66	Identifier	static_cast
>67	Argument	\"UpdateClientTime\"
>68	PrimaryExpression	\"UpdateClientTime\"
>69	Callee	AddCommand
>70	Identifier	AddCommand
>71	ExpressionStatement	 
>72	CallExpression	AddCommand ( \"GetPrivMsgs\" , static_cast < CModCommand 
>73	ArgumentList	\"GetPrivMsgs\"
>74	Argument	\"Dumps your private messages on this network. Optionaly with a timestamp since when.\"
>75	PrimaryExpression	\"Dumps your private messages on this network. Optionaly with a timestamp since when.\"
>76	Argument	\"[since]\"
>77	PrimaryExpression	\"[since]\"
>78	Argument	static_cast < CModCommand 
>79	RelationalExpression	static_cast < CModCommand 
>80	RelationalExpression	CModCommand 
>81	UnaryOp	& SqlLogMod 
>82	Identifier	SqlLogMod 
>83	UnaryOperator	&
>84	Identifier	CModCommand 
>85	Identifier	static_cast
>86	Argument	\"GetPrivMsgs\"
>87	PrimaryExpression	\"GetPrivMsgs\"
>88	Callee	AddCommand
>89	Identifier	AddCommand
>90	ExpressionStatement	 
>91	CallExpression	AddCommand ( \"GetChannel\" , static_cast < CModCommand 
>92	ArgumentList	\"GetChannel\"
>93	Argument	\"Dumps the requested channel on this network. Optionaly with a timestamp since when.\"
>94	PrimaryExpression	\"Dumps the requested channel on this network. Optionaly with a timestamp since when.\"
>95	Argument	\"channel [since]\"
>96	PrimaryExpression	\"channel [since]\"
>97	Argument	static_cast < CModCommand 
>98	RelationalExpression	static_cast < CModCommand 
>99	RelationalExpression	CModCommand 
>100	UnaryOp	& SqlLogMod 
>101	Identifier	SqlLogMod 
>102	UnaryOperator	&
>103	Identifier	CModCommand 
>104	Identifier	static_cast
>105	Argument	\"GetChannel\"
>106	PrimaryExpression	\"GetChannel\"
>107	Callee	AddCommand
>108	Identifier	AddCommand
>109	ExpressionStatement	 
>110	CallExpression	AddHelpCommand ( )
>111	ArgumentList	 
>112	Callee	AddHelpCommand
>113	Identifier	AddHelpCommand
>114	ExpressionStatement	 
>115	AssignmentExpr	p = new SqlLogMod_private ( )
>116	UnaryExpression	new SqlLogMod_private ( )
>117	Identifier	p
>129	FunctionDef	SqlLogMod 
>130	ParameterList	 
>131	ReturnType	int64_t
>132	CompoundStatement	 
>133	ReturnStatement	 
>134	CastExpression	( int64_t ) t
>135	Identifier	t
>136	CastTarget	int64_t
>137	ExpressionStatement	 
>138	CallExpression	time ( & t )
>139	ArgumentList	& t
>140	Argument	& t
>141	UnaryOp	& t
>142	Identifier	t
>143	UnaryOperator	&
>144	Callee	time
>145	Identifier	time
>146	IdentifierDeclStatement	 
>147	IdentifierDecl	t
>148	Identifier	t
>149	IdentifierDeclType	time_t
>155	FunctionDef	SqlLogMod 
>156	ParameterList	 
>157	ReturnType	CString
>158	CompoundStatement	 
>159	ReturnStatement	 
>160	ConditionalExpression	GetNetwork ( ) ? GetNetwork ( ) -> GetName ( ) 
>161	PrimaryExpression	\"znc\"
>162	CallExpression	GetNetwork ( ) -> GetName ( )
>163	ArgumentList	 
>164	Callee	GetNetwork ( ) -> GetName
>165	PtrMemberAccess	GetNetwork ( ) -> GetName
>166	Identifier	GetName
>167	CallExpression	GetNetwork ( )
>168	ArgumentList	 
>169	Callee	GetNetwork
>170	Identifier	GetNetwork
>171	Condition	GetNetwork ( )
>172	CallExpression	GetNetwork ( )
>173	ArgumentList	 
>174	Callee	GetNetwork
>175	Identifier	GetNetwork
>182	FunctionDef	SqlLogMod 
>183	ParameterList	 
>184	ReturnType	CString
>185	CompoundStatement	 
>186	ReturnStatement	 
>187	AdditiveExpression	pServer -> GetName ( ) + \" \" + sSSL + CString ( pServer -> GetPort ( ) )
>188	AdditiveExpression	\" \" + sSSL + CString ( pServer -> GetPort ( ) )
>189	AdditiveExpression	sSSL + CString ( pServer -> GetPort ( ) )
>190	CallExpression	CString ( pServer -> GetPort ( ) )
>191	ArgumentList	pServer -> GetPort ( )
>192	Argument	pServer -> GetPort ( )
>193	CallExpression	pServer -> GetPort ( )
>194	ArgumentList	 
>195	Callee	pServer -> GetPort
>196	PtrMemberAccess	pServer -> GetPort
>197	Identifier	GetPort
>198	Identifier	pServer
>199	Callee	CString
>200	Identifier	CString
>201	Identifier	sSSL
>202	PrimaryExpression	\" \"
>203	CallExpression	pServer -> GetName ( )
>204	ArgumentList	 
>205	Callee	pServer -> GetName
>206	PtrMemberAccess	pServer -> GetName
>207	Identifier	GetName
>208	Identifier	pServer
>209	IfStatement	if ( pServer -> IsSSL ( ) )
>210	ExpressionStatement	 
>211	AssignmentExpr	sSSL = \"+\"
>212	PrimaryExpression	\"+\"
>213	Identifier	sSSL
>214	Condition	 
>215	CallExpression	pServer -> IsSSL ( )
>216	ArgumentList	 
>217	Callee	pServer -> IsSSL
>218	PtrMemberAccess	pServer -> IsSSL
>219	Identifier	IsSSL
>220	Identifier	pServer
>221	IfStatement	if ( ! pServer )
>222	ReturnStatement	 
>223	PrimaryExpression	\"(no server)\"
>224	Condition	 
>225	UnaryOp	! pServer
>226	Identifier	pServer
>227	UnaryOperator	!
>228	IdentifierDeclStatement	 
>229	IdentifierDecl	sSSL
>230	Identifier	sSSL
>231	IdentifierDeclType	CString
>232	IdentifierDeclStatement	 
>233	IdentifierDecl	* pServer = GetNetwork ( ) -> GetCurrentServer ( )
>234	AssignmentExpr	* pServer = GetNetwork ( ) -> GetCurrentServer ( )
>235	CallExpression	GetNetwork ( ) -> GetCurrentServer ( )
>236	ArgumentList	 
>237	Callee	GetNetwork ( ) -> GetCurrentServer
>238	PtrMemberAccess	GetNetwork ( ) -> GetCurrentServer
>239	Identifier	GetCurrentServer
>240	CallExpression	GetNetwork ( )
>241	ArgumentList	 
>242	Callee	GetNetwork
>243	Identifier	GetNetwork
>244	Identifier	pServer
>245	Identifier	pServer
>246	IdentifierDeclType	CServer *
>260	FunctionDef	SqlLogMod 
>261	ParameterList	bool mask
>262	Parameter	 
>263	Identifier	mask
>264	ParameterType	bool
>265	ReturnType	CString
>266	CompoundStatement	 
>267	ReturnStatement	 
>268	Identifier	res
>269	IfStatement	if ( mask )
>270	ExpressionStatement	 
>271	AssignmentExpr	res += \"!yourself@znc\"
>272	PrimaryExpression	\"!yourself@znc\"
>273	Identifier	res
>274	Condition	 
>275	Identifier	mask
>276	IdentifierDeclStatement	 
>277	IdentifierDecl	res = GetUser ( ) ? GetUser ( ) -> GetNick ( ) 
>278	AssignmentExpr	res = GetUser ( ) ? GetUser ( ) -> GetNick ( ) 
>279	ConditionalExpression	GetUser ( ) ? GetUser ( ) -> GetNick ( ) 
>280	PrimaryExpression	\"unknown\"
>281	CallExpression	GetUser ( ) -> GetNick ( )
>282	ArgumentList	 
>283	Callee	GetUser ( ) -> GetNick
>284	PtrMemberAccess	GetUser ( ) -> GetNick
>285	Identifier	GetNick
>286	CallExpression	GetUser ( )
>287	ArgumentList	 
>288	Callee	GetUser
>289	Identifier	GetUser
>290	Condition	GetUser ( )
>291	CallExpression	GetUser ( )
>292	ArgumentList	 
>293	Callee	GetUser
>294	Identifier	GetUser
>295	Identifier	res
>296	Identifier	res
>297	IdentifierDeclType	CString
>306	FunctionDef	SqlLogMod 
>307	ParameterList	 
>308	ReturnType	CString
>309	CompoundStatement	 
>310	ReturnStatement	 
>311	ConditionalExpression	GetUser ( ) ? GetUser ( ) -> GetUserName ( ) 
>312	PrimaryExpression	\"global\"
>313	CallExpression	GetUser ( ) -> GetUserName ( )
>314	ArgumentList	 
>315	Callee	GetUser ( ) -> GetUserName
>316	PtrMemberAccess	GetUser ( ) -> GetUserName
>317	Identifier	GetUserName
>318	CallExpression	GetUser ( )
>319	ArgumentList	 
>320	Callee	GetUser
>321	Identifier	GetUser
>322	Condition	GetUser ( )
>323	CallExpression	GetUser ( )
>324	ArgumentList	 
>325	Callee	GetUser
>326	Identifier	GetUser
>333	FunctionDef	SqlLogMod 
>334	ParameterList	const std 
>335	Parameter	 
>336	Identifier	e
>337	ParameterType	const std 
>338	ReturnType	void
>339	CompoundStatement	 
>340	IfStatement	if ( msg != p -> lastException )
>341	CompoundStatement	 
>342	ExpressionStatement	 
>343	CallExpression	AddTimer ( cb , timerName , 15 * 60 , 1 )
>344	ArgumentList	cb
>345	Argument	1
>346	PrimaryExpression	1
>347	Argument	15 * 60
>348	MultiplicativeExpression	15 * 60
>349	PrimaryExpression	60
>350	PrimaryExpression	15
>351	Argument	timerName
>352	Identifier	timerName
>353	Argument	cb
>354	Identifier	cb
>355	Callee	AddTimer
>356	Identifier	AddTimer
>357	ExpressionStatement	 
>358	CallExpression	RemTimer ( timerName )
>359	ArgumentList	timerName
>360	Argument	timerName
>361	Identifier	timerName
>362	Callee	RemTimer
>363	Identifier	RemTimer
>364	ExpressionStatement	 
>365	CompoundStatement	 
>366	ExpressionStatement	 
>367	AssignmentExpr	self -> p -> lastException = CString ( )
>368	CallExpression	CString ( )
>369	ArgumentList	 
>370	Callee	CString
>371	Identifier	CString
>372	PtrMemberAccess	self -> p -> lastException
>373	Identifier	lastException
>374	PtrMemberAccess	self -> p
>375	Identifier	p
>376	Identifier	self
>377	ExpressionStatement	 
>378	Identifier	m
>379	Statement	 
>380	Statement	 
>381	Statement	 
>382	Statement	 
>383	Statement	 
>384	Statement	 
>385	Statement	 
>386	Statement	 
>387	Statement	 
>388	Statement	 
>389	Statement	 
>390	Statement	 
>391	Statement	 
>392	Statement	 
>393	Statement	 
>394	Statement	 
>395	Statement	 
>396	Statement	 
>397	Statement	 
>398	Statement	 
>399	Statement	 
>400	Statement	 
>401	ExpressionStatement	 
>402	CallExpression	PutModule ( msg )
>403	ArgumentList	msg
>404	Argument	msg
>405	Identifier	msg
>406	Callee	PutModule
>407	Identifier	PutModule
>408	ExpressionStatement	 
>409	AssignmentExpr	p -> lastException = msg
>410	Identifier	msg
>411	PtrMemberAccess	p -> lastException
>412	Identifier	lastException
>413	Identifier	p
>414	Condition	 
>415	EqualityExpression	msg != p -> lastException
>416	PtrMemberAccess	p -> lastException
>417	Identifier	lastException
>418	Identifier	p
>419	Identifier	msg
>420	IdentifierDeclStatement	 
>421	IdentifierDecl	msg = e . what ( )
>422	AssignmentExpr	msg = e . what ( )
>423	CallExpression	e . what ( )
>424	ArgumentList	 
>425	Callee	e . what
>426	MemberAccess	e . what
>427	Identifier	what
>428	Identifier	e
>429	Identifier	msg
>430	Identifier	msg
>431	IdentifierDeclType	CString
>450	FunctionDef	SqlLogMod 
>451	ParameterList	 
>452	CompoundStatement	 
>453	ExpressionStatement	 
>454	Identifier	p
>455	Statement	 
>459	FunctionDef	SqlLogMod 
>460	ParameterList	const CString & sArgs , CString & sMessage
>461	Parameter	 
>462	Identifier	sMessage
>463	ParameterType	CString &
>464	Parameter	 
>465	Identifier	sArgs
>466	ParameterType	const CString &
>467	ReturnType	bool
>468	CompoundStatement	 
>469	BlockStarter	 
>470	CompoundStatement	 
>471	ReturnStatement	return false ;
>472	Identifier	false
>473	ExpressionStatement	sMessage = excpt . what ( )
>474	AssignmentExpr	sMessage = excpt . what ( )
>475	CallExpression	excpt . what ( )
>476	ArgumentList	 
>477	Callee	excpt . what
>478	MemberAccess	excpt . what
>479	Identifier	what
>480	Identifier	excpt
>481	Identifier	sMessage
>482	Identifier	excpt
>483	BlockStarter	 
>484	CompoundStatement	 
>485	ReturnStatement	return true ;
>486	Identifier	true
>487	IfStatement	if ( create )
>488	CompoundStatement	 
>489	ExpressionStatement	t . commit ( )
>490	CallExpression	t . commit ( )
>491	ArgumentList	 
>492	Callee	t . commit
>493	MemberAccess	t . commit
>494	Identifier	commit
>495	Identifier	t
>496	ExpressionStatement	odb 
>497	CallExpression	odb 
>498	ArgumentList	DB
>499	Argument	DB
>500	Identifier	DB
>501	Callee	odb 
>502	Identifier	odb 
>503	IdentifierDeclStatement	odb 
>504	IdentifierDecl	t ( c -> begin ( ) )
>505	CallExpression	c -> begin ( )
>506	ArgumentList	 
>507	Callee	c -> begin
>508	PtrMemberAccess	c -> begin
>509	Identifier	begin
>510	Identifier	c
>511	Identifier	t
>512	IdentifierDeclType	odb 
>513	Condition	create
>514	Identifier	create
>515	IdentifierDeclStatement	odb 
>516	IdentifierDecl	c ( DB . connection ( ) )
>517	CallExpression	DB . connection ( )
>518	ArgumentList	 
>519	Callee	DB . connection
>520	MemberAccess	DB . connection
>521	Identifier	connection
>522	Identifier	DB
>523	Identifier	c
>524	IdentifierDeclType	odb 
>525	IfStatement	if ( args . substr ( 0 , 7 ) == \"sqlite \" )
>526	ElseStatement	else
>527	IfStatement	if ( args . substr ( 0 , 6 ) == \"mysql \" )
>528	ElseStatement	else
>529	CompoundStatement	 
>530	ReturnStatement	return false ;
>531	Identifier	false
>532	ExpressionStatement	sMessage = \"Unknown or no DB system requested!\"
>533	AssignmentExpr	sMessage = \"Unknown or no DB system requested!\"
>534	PrimaryExpression	\"Unknown or no DB system requested!\"
>535	Identifier	sMessage
>536	CompoundStatement	 
>537	ExpressionStatement	p -> db = std 
>538	AssignmentExpr	p -> db = std 
>539	CallExpression	std 
>540	ArgumentList	db
>541	Argument	db
>542	Identifier	db
>543	Callee	std 
>544	Identifier	std 
>545	PtrMemberAccess	p -> db
>546	Identifier	db
>547	Identifier	p
>548	IdentifierDeclStatement	std 
>549	IdentifierDecl	db ( new odb 
>550	Expression	params . at ( 0 ) , params . at ( 1 ) , params . at ( 2 )
>551	Expression	params . at ( 1 ) , params . at ( 2 )
>552	CallExpression	params . at ( 2 )
>553	ArgumentList	2
>554	Argument	2
>555	PrimaryExpression	2
>556	Callee	params . at
>557	MemberAccess	params . at
>558	Identifier	at
>559	Identifier	params
>560	CallExpression	params . at ( 1 )
>561	ArgumentList	1
>562	Argument	1
>563	PrimaryExpression	1
>564	Callee	params . at
>565	MemberAccess	params . at
>566	Identifier	at
>567	Identifier	params
>568	CallExpression	params . at ( 0 )
>569	ArgumentList	0
>570	Argument	0
>571	PrimaryExpression	0
>572	Callee	params . at
>573	MemberAccess	params . at
>574	Identifier	at
>575	Identifier	params
>576	Identifier	db
>577	IdentifierDeclType	std 
>578	IfStatement	if ( params . size ( ) != 3 )
>579	CompoundStatement	 
>580	ReturnStatement	return false ;
>581	Identifier	false
>582	ExpressionStatement	sMessage = \"mysql expects exactly 3 arguments\"
>583	AssignmentExpr	sMessage = \"mysql expects exactly 3 arguments\"
>584	PrimaryExpression	\"mysql expects exactly 3 arguments\"
>585	Identifier	sMessage
>586	Condition	params . size ( ) != 3
>587	EqualityExpression	params . size ( ) != 3
>588	PrimaryExpression	3
>589	CallExpression	params . size ( )
>590	ArgumentList	 
>591	Callee	params . size
>592	MemberAccess	params . size
>593	Identifier	size
>594	Identifier	params
>595	ExpressionStatement	argString . Split ( \" \" , params , false )
>596	CallExpression	argString . Split ( \" \" , params , false )
>597	ArgumentList	\" \"
>598	Argument	false
>599	Identifier	false
>600	Argument	params
>601	Identifier	params
>602	Argument	\" \"
>603	PrimaryExpression	\" \"
>604	Callee	argString . Split
>605	MemberAccess	argString . Split
>606	Identifier	Split
>607	Identifier	argString
>608	IdentifierDeclStatement	VCString params ;
>609	IdentifierDecl	params
>610	Identifier	params
>611	IdentifierDeclType	VCString
>612	ExpressionStatement	argString . Trim ( )
>613	CallExpression	argString . Trim ( )
>614	ArgumentList	 
>615	Callee	argString . Trim
>616	MemberAccess	argString . Trim
>617	Identifier	Trim
>618	Identifier	argString
>619	IdentifierDeclStatement	CString argString = args . substr ( 6 ) ;
>620	IdentifierDecl	argString = args . substr ( 6 )
>621	AssignmentExpr	argString = args . substr ( 6 )
>622	CallExpression	args . substr ( 6 )
>623	ArgumentList	6
>624	Argument	6
>625	PrimaryExpression	6
>626	Callee	args . substr
>627	MemberAccess	args . substr
>628	Identifier	substr
>629	Identifier	args
>630	Identifier	argString
>631	Identifier	argString
>632	IdentifierDeclType	CString
>633	Condition	args . substr ( 0 , 6 ) == \"mysql \"
>634	EqualityExpression	args . substr ( 0 , 6 ) == \"mysql \"
>635	PrimaryExpression	\"mysql \"
>636	CallExpression	args . substr ( 0 , 6 )
>637	ArgumentList	0
>638	Argument	6
>639	PrimaryExpression	6
>640	Argument	0
>641	PrimaryExpression	0
>642	Callee	args . substr
>643	MemberAccess	args . substr
>644	Identifier	substr
>645	Identifier	args
>646	CompoundStatement	 
>647	ExpressionStatement	p -> db = std 
>648	AssignmentExpr	p -> db = std 
>649	CallExpression	std 
>650	ArgumentList	db
>651	Argument	db
>652	Identifier	db
>653	Callee	std 
>654	Identifier	std 
>655	PtrMemberAccess	p -> db
>656	Identifier	db
>657	Identifier	p
>658	IdentifierDeclStatement	std 
>659	IdentifierDecl	db ( new odb 
>660	Expression	argString , SQLITE_OPEN_READWRITE | SQLITE_OPEN_CREATE
>661	InclusiveOrExpression	SQLITE_OPEN_READWRITE | SQLITE_OPEN_CREATE
>662	Identifier	SQLITE_OPEN_CREATE
>663	Identifier	SQLITE_OPEN_READWRITE
>664	Identifier	argString
>665	Identifier	db
>666	IdentifierDeclType	std 
>667	IfStatement	if ( argString . length ( ) <= 0 )
>668	CompoundStatement	 
>669	ReturnStatement	return false ;
>670	Identifier	false
>671	ExpressionStatement	sMessage = \"Invalid sqlite name\"
>672	AssignmentExpr	sMessage = \"Invalid sqlite name\"
>673	PrimaryExpression	\"Invalid sqlite name\"
>674	Identifier	sMessage
>675	Condition	argString . length ( ) <= 0
>676	RelationalExpression	argString . length ( ) <= 0
>677	PrimaryExpression	0
>678	CallExpression	argString . length ( )
>679	ArgumentList	 
>680	Callee	argString . length
>681	MemberAccess	argString . length
>682	Identifier	length
>683	Identifier	argString
>684	ExpressionStatement	argString . Trim ( )
>685	CallExpression	argString . Trim ( )
>686	ArgumentList	 
>687	Callee	argString . Trim
>688	MemberAccess	argString . Trim
>689	Identifier	Trim
>690	Identifier	argString
>691	IdentifierDeclStatement	CString argString = args . substr ( 7 ) ;
>692	IdentifierDecl	argString = args . substr ( 7 )
>693	AssignmentExpr	argString = args . substr ( 7 )
>694	CallExpression	args . substr ( 7 )
>695	ArgumentList	7
>696	Argument	7
>697	PrimaryExpression	7
>698	Callee	args . substr
>699	MemberAccess	args . substr
>700	Identifier	substr
>701	Identifier	args
>702	Identifier	argString
>703	Identifier	argString
>704	IdentifierDeclType	CString
>705	Condition	args . substr ( 0 , 7 ) == \"sqlite \"
>706	EqualityExpression	args . substr ( 0 , 7 ) == \"sqlite \"
>707	PrimaryExpression	\"sqlite \"
>708	CallExpression	args . substr ( 0 , 7 )
>709	ArgumentList	0
>710	Argument	7
>711	PrimaryExpression	7
>712	Argument	0
>713	PrimaryExpression	0
>714	Callee	args . substr
>715	MemberAccess	args . substr
>716	Identifier	substr
>717	Identifier	args
>718	IfStatement	if ( args . substr ( 0 , 7 ) == \"create \" )
>719	CompoundStatement	 
>720	ExpressionStatement	SetArgs ( args )
>721	CallExpression	SetArgs ( args )
>722	ArgumentList	args
>723	Argument	args
>724	Identifier	args
>725	Callee	SetArgs
>726	Identifier	SetArgs
>727	ExpressionStatement	args = args . substr ( 7 )
>728	AssignmentExpr	args = args . substr ( 7 )
>729	CallExpression	args . substr ( 7 )
>730	ArgumentList	7
>731	Argument	7
>732	PrimaryExpression	7
>733	Callee	args . substr
>734	MemberAccess	args . substr
>735	Identifier	substr
>736	Identifier	args
>737	Identifier	args
>738	ExpressionStatement	create = true
>739	AssignmentExpr	create = true
>740	Identifier	true
>741	Identifier	create
>742	Condition	args . substr ( 0 , 7 ) == \"create \"
>743	EqualityExpression	args . substr ( 0 , 7 ) == \"create \"
>744	PrimaryExpression	\"create \"
>745	CallExpression	args . substr ( 0 , 7 )
>746	ArgumentList	0
>747	Argument	7
>748	PrimaryExpression	7
>749	Argument	0
>750	PrimaryExpression	0
>751	Callee	args . substr
>752	MemberAccess	args . substr
>753	Identifier	substr
>754	Identifier	args
>755	IdentifierDeclStatement	bool create = false ;
>756	IdentifierDecl	create = false
>757	AssignmentExpr	create = false
>758	Identifier	false
>759	Identifier	false
>760	Identifier	create
>761	IdentifierDeclType	bool
>762	IdentifierDeclStatement	CString args = sArgs . Trim_n ( ) ;
>763	IdentifierDecl	args = sArgs . Trim_n ( )
>764	AssignmentExpr	args = sArgs . Trim_n ( )
>765	CallExpression	sArgs . Trim_n ( )
>766	ArgumentList	 
>767	Callee	sArgs . Trim_n
>768	MemberAccess	sArgs . Trim_n
>769	Identifier	Trim_n
>770	Identifier	sArgs
>771	Identifier	args
>772	Identifier	args
>773	IdentifierDeclType	CString
>799	FunctionDef	SqlLogMod 
>800	ParameterList	CChan & Chan , CClient & Client , CString & sLine
>801	Parameter	 
>802	Identifier	sLine
>803	ParameterType	CString &
>804	Parameter	 
>805	Identifier	Client
>806	ParameterType	CClient &
>807	Parameter	 
>808	Identifier	Chan
>809	ParameterType	CChan &
>810	ReturnType	EModRet
>811	CompoundStatement	 
>812	ReturnStatement	 
>813	Identifier	HALT
>814	ExpressionStatement	 
>815	CastExpression	( void ) sLine
>816	Identifier	sLine
>817	CastTarget	void
>818	ExpressionStatement	 
>819	CastExpression	( void ) Client
>820	Identifier	Client
>821	CastTarget	void
>822	ExpressionStatement	 
>823	CastExpression	( void ) Chan
>824	Identifier	Chan
>825	CastTarget	void
>833	FunctionDef	SqlLogMod 
>834	ParameterList	 
>835	ReturnType	void
>836	CompoundStatement	 
>837	BlockStarter	 
>838	CompoundStatement	 
>839	ExpressionStatement	handleException ( excpt )
>840	CallExpression	handleException ( excpt )
>841	ArgumentList	excpt
>842	Argument	excpt
>843	Identifier	excpt
>844	Callee	handleException
>845	Identifier	handleException
>846	Identifier	excpt
>847	BlockStarter	 
>848	CompoundStatement	 
>849	ExpressionStatement	t . commit ( )
>850	CallExpression	t . commit ( )
>851	ArgumentList	 
>852	Callee	t . commit
>853	MemberAccess	t . commit
>854	Identifier	commit
>855	Identifier	t
>856	ExpressionStatement	DB . persist ( log )
>857	CallExpression	DB . persist ( log )
>858	ArgumentList	log
>859	Argument	log
>860	Identifier	log
>861	Callee	DB . persist
>862	MemberAccess	DB . persist
>863	Identifier	persist
>864	Identifier	DB
>865	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>866	IdentifierDecl	log ( nowTime ( ) , logentry 
>867	Expression	nowTime ( ) , logentry 
>868	Expression	logentry 
>869	Expression	getUserName ( ) , getNetworkName ( ) , getServer ( )
>870	Expression	getNetworkName ( ) , getServer ( )
>871	CallExpression	getServer ( )
>872	ArgumentList	 
>873	Callee	getServer
>874	Identifier	getServer
>875	CallExpression	getNetworkName ( )
>876	ArgumentList	 
>877	Callee	getNetworkName
>878	Identifier	getNetworkName
>879	CallExpression	getUserName ( )
>880	ArgumentList	 
>881	Callee	getUserName
>882	Identifier	getUserName
>883	Identifier	logentry 
>884	CallExpression	nowTime ( )
>885	ArgumentList	 
>886	Callee	nowTime
>887	Identifier	nowTime
>888	Identifier	log
>889	IdentifierDeclType	logentry
>890	IdentifierDeclStatement	odb 
>891	IdentifierDecl	t ( DB . begin ( ) )
>892	CallExpression	DB . begin ( )
>893	ArgumentList	 
>894	Callee	DB . begin
>895	MemberAccess	DB . begin
>896	Identifier	begin
>897	Identifier	DB
>898	Identifier	t
>899	IdentifierDeclType	odb 
>907	FunctionDef	SqlLogMod 
>908	ParameterList	 
>909	ReturnType	void
>910	CompoundStatement	 
>911	BlockStarter	 
>912	CompoundStatement	 
>913	ExpressionStatement	handleException ( excpt )
>914	CallExpression	handleException ( excpt )
>915	ArgumentList	excpt
>916	Argument	excpt
>917	Identifier	excpt
>918	Callee	handleException
>919	Identifier	handleException
>920	Identifier	excpt
>921	BlockStarter	 
>922	CompoundStatement	 
>923	ExpressionStatement	t . commit ( )
>924	CallExpression	t . commit ( )
>925	ArgumentList	 
>926	Callee	t . commit
>927	MemberAccess	t . commit
>928	Identifier	commit
>929	Identifier	t
>930	ExpressionStatement	DB . persist ( log )
>931	CallExpression	DB . persist ( log )
>932	ArgumentList	log
>933	Argument	log
>934	Identifier	log
>935	Callee	DB . persist
>936	MemberAccess	DB . persist
>937	Identifier	persist
>938	Identifier	DB
>939	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>940	IdentifierDecl	log ( nowTime ( ) , logentry 
>941	Expression	nowTime ( ) , logentry 
>942	Expression	logentry 
>943	Expression	getUserName ( ) , getNetworkName ( ) , getServer ( )
>944	Expression	getNetworkName ( ) , getServer ( )
>945	CallExpression	getServer ( )
>946	ArgumentList	 
>947	Callee	getServer
>948	Identifier	getServer
>949	CallExpression	getNetworkName ( )
>950	ArgumentList	 
>951	Callee	getNetworkName
>952	Identifier	getNetworkName
>953	CallExpression	getUserName ( )
>954	ArgumentList	 
>955	Callee	getUserName
>956	Identifier	getUserName
>957	Identifier	logentry 
>958	CallExpression	nowTime ( )
>959	ArgumentList	 
>960	Callee	nowTime
>961	Identifier	nowTime
>962	Identifier	log
>963	IdentifierDeclType	logentry
>964	IdentifierDeclStatement	odb 
>965	IdentifierDecl	t ( DB . begin ( ) )
>966	CallExpression	DB . begin ( )
>967	ArgumentList	 
>968	Callee	DB . begin
>969	MemberAccess	DB . begin
>970	Identifier	begin
>971	Identifier	DB
>972	Identifier	t
>973	IdentifierDeclType	odb 
>981	FunctionDef	SqlLogMod 
>982	ParameterList	const CNick & OpNick , const CString & sKickedNick , CChan & Channel , const CString & sMessage
>983	Parameter	 
>984	Identifier	sMessage
>985	ParameterType	const CString &
>986	Parameter	 
>987	Identifier	Channel
>988	ParameterType	CChan &
>989	Parameter	 
>990	Identifier	sKickedNick
>991	ParameterType	const CString &
>992	Parameter	 
>993	Identifier	OpNick
>994	ParameterType	const CNick &
>995	ReturnType	void
>996	CompoundStatement	 
>997	BlockStarter	 
>998	CompoundStatement	 
>999	ExpressionStatement	handleException ( excpt )
>1000	CallExpression	handleException ( excpt )
>1001	ArgumentList	excpt
>1002	Argument	excpt
>1003	Identifier	excpt
>1004	Callee	handleException
>1005	Identifier	handleException
>1006	Identifier	excpt
>1007	BlockStarter	 
>1008	CompoundStatement	 
>1009	ExpressionStatement	t . commit ( )
>1010	CallExpression	t . commit ( )
>1011	ArgumentList	 
>1012	Callee	t . commit
>1013	MemberAccess	t . commit
>1014	Identifier	commit
>1015	Identifier	t
>1016	ExpressionStatement	DB . persist ( log )
>1017	CallExpression	DB . persist ( log )
>1018	ArgumentList	log
>1019	Argument	log
>1020	Identifier	log
>1021	Callee	DB . persist
>1022	MemberAccess	DB . persist
>1023	Identifier	persist
>1024	Identifier	DB
>1025	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>1026	IdentifierDecl	log ( nowTime ( ) , logentry 
>1027	Expression	nowTime ( ) , logentry 
>1028	Expression	logentry 
>1029	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , OpNick . GetHostMask ( ) , sKickedNick , Channel . GetName ( )
>1030	Expression	getNetworkName ( ) , sMessage , OpNick . GetHostMask ( ) , sKickedNick , Channel . GetName ( )
>1031	Expression	sMessage , OpNick . GetHostMask ( ) , sKickedNick , Channel . GetName ( )
>1032	Expression	OpNick . GetHostMask ( ) , sKickedNick , Channel . GetName ( )
>1033	Expression	sKickedNick , Channel . GetName ( )
>1034	CallExpression	Channel . GetName ( )
>1035	ArgumentList	 
>1036	Callee	Channel . GetName
>1037	MemberAccess	Channel . GetName
>1038	Identifier	GetName
>1039	Identifier	Channel
>1040	Identifier	sKickedNick
>1041	CallExpression	OpNick . GetHostMask ( )
>1042	ArgumentList	 
>1043	Callee	OpNick . GetHostMask
>1044	MemberAccess	OpNick . GetHostMask
>1045	Identifier	GetHostMask
>1046	Identifier	OpNick
>1047	Identifier	sMessage
>1048	CallExpression	getNetworkName ( )
>1049	ArgumentList	 
>1050	Callee	getNetworkName
>1051	Identifier	getNetworkName
>1052	CallExpression	getUserName ( )
>1053	ArgumentList	 
>1054	Callee	getUserName
>1055	Identifier	getUserName
>1056	Identifier	logentry 
>1057	CallExpression	nowTime ( )
>1058	ArgumentList	 
>1059	Callee	nowTime
>1060	Identifier	nowTime
>1061	Identifier	log
>1062	IdentifierDeclType	logentry
>1063	IdentifierDeclStatement	odb 
>1064	IdentifierDecl	t ( DB . begin ( ) )
>1065	CallExpression	DB . begin ( )
>1066	ArgumentList	 
>1067	Callee	DB . begin
>1068	MemberAccess	DB . begin
>1069	Identifier	begin
>1070	Identifier	DB
>1071	Identifier	t
>1072	IdentifierDeclType	odb 
>1084	FunctionDef	SqlLogMod 
>1085	ParameterList	const CNick & Nick , const CString & sMessage , const std 
>1086	Parameter	 
>1087	Identifier	vChans
>1088	ParameterType	const std 
>1089	Parameter	 
>1090	Identifier	sMessage
>1091	ParameterType	const CString &
>1092	Parameter	 
>1093	Identifier	Nick
>1094	ParameterType	const CNick &
>1095	ReturnType	void
>1096	CompoundStatement	 
>1097	BlockStarter	 
>1098	CompoundStatement	 
>1099	ExpressionStatement	handleException ( excpt )
>1100	CallExpression	handleException ( excpt )
>1101	ArgumentList	excpt
>1102	Argument	excpt
>1103	Identifier	excpt
>1104	Callee	handleException
>1105	Identifier	handleException
>1106	Identifier	excpt
>1107	BlockStarter	 
>1108	CompoundStatement	 
>1109	ExpressionStatement	t . commit ( )
>1110	CallExpression	t . commit ( )
>1111	ArgumentList	 
>1112	Callee	t . commit
>1113	MemberAccess	t . commit
>1114	Identifier	commit
>1115	Identifier	t
>1116	CompoundStatement	 
>1117	ExpressionStatement	DB . persist ( log )
>1118	CallExpression	DB . persist ( log )
>1119	ArgumentList	log
>1120	Argument	log
>1121	Identifier	log
>1122	Callee	DB . persist
>1123	MemberAccess	DB . persist
>1124	Identifier	persist
>1125	Identifier	DB
>1126	IdentifierDeclStatement	logentry log ( time , logentry 
>1127	IdentifierDecl	log ( time , logentry 
>1128	Expression	time , logentry 
>1129	Expression	logentry 
>1130	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , \"\" , chan -> GetName ( )
>1131	Expression	getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , \"\" , chan -> GetName ( )
>1132	Expression	sMessage , Nick . GetHostMask ( ) , \"\" , chan -> GetName ( )
>1133	Expression	Nick . GetHostMask ( ) , \"\" , chan -> GetName ( )
>1134	Expression	\"\" , chan -> GetName ( )
>1135	CallExpression	chan -> GetName ( )
>1136	ArgumentList	 
>1137	Callee	chan -> GetName
>1138	PtrMemberAccess	chan -> GetName
>1139	Identifier	GetName
>1140	Identifier	chan
>1141	PrimaryExpression	\"\"
>1142	CallExpression	Nick . GetHostMask ( )
>1143	ArgumentList	 
>1144	Callee	Nick . GetHostMask
>1145	MemberAccess	Nick . GetHostMask
>1146	Identifier	GetHostMask
>1147	Identifier	Nick
>1148	Identifier	sMessage
>1149	CallExpression	getNetworkName ( )
>1150	ArgumentList	 
>1151	Callee	getNetworkName
>1152	Identifier	getNetworkName
>1153	CallExpression	getUserName ( )
>1154	ArgumentList	 
>1155	Callee	getUserName
>1156	Identifier	getUserName
>1157	Identifier	logentry 
>1158	Identifier	time
>1159	Identifier	log
>1160	IdentifierDeclType	logentry
>1161	Statement	)
>1162	Statement	vChans
>1163	Label	chan 
>1164	Identifier	chan
>1165	Statement	*
>1166	Statement	CChan
>1167	Statement	(
>1168	Statement	for
>1169	IdentifierDeclStatement	uint64_t time = nowTime ( ) ;
>1170	IdentifierDecl	time = nowTime ( )
>1171	AssignmentExpr	time = nowTime ( )
>1172	CallExpression	nowTime ( )
>1173	ArgumentList	 
>1174	Callee	nowTime
>1175	Identifier	nowTime
>1176	Identifier	time
>1177	Identifier	time
>1178	IdentifierDeclType	uint64_t
>1179	IdentifierDeclStatement	odb 
>1180	IdentifierDecl	t ( DB . begin ( ) )
>1181	CallExpression	DB . begin ( )
>1182	ArgumentList	 
>1183	Callee	DB . begin
>1184	MemberAccess	DB . begin
>1185	Identifier	begin
>1186	Identifier	DB
>1187	Identifier	t
>1188	IdentifierDeclType	odb 
>1202	FunctionDef	SqlLogMod 
>1203	ParameterList	const CNick & Nick , CChan & Channel
>1204	Parameter	 
>1205	Identifier	Channel
>1206	ParameterType	CChan &
>1207	Parameter	 
>1208	Identifier	Nick
>1209	ParameterType	const CNick &
>1210	ReturnType	void
>1211	CompoundStatement	 
>1212	BlockStarter	 
>1213	CompoundStatement	 
>1214	ExpressionStatement	handleException ( excpt )
>1215	CallExpression	handleException ( excpt )
>1216	ArgumentList	excpt
>1217	Argument	excpt
>1218	Identifier	excpt
>1219	Callee	handleException
>1220	Identifier	handleException
>1221	Identifier	excpt
>1222	BlockStarter	 
>1223	CompoundStatement	 
>1224	ExpressionStatement	t . commit ( )
>1225	CallExpression	t . commit ( )
>1226	ArgumentList	 
>1227	Callee	t . commit
>1228	MemberAccess	t . commit
>1229	Identifier	commit
>1230	Identifier	t
>1231	ExpressionStatement	DB . persist ( log )
>1232	CallExpression	DB . persist ( log )
>1233	ArgumentList	log
>1234	Argument	log
>1235	Identifier	log
>1236	Callee	DB . persist
>1237	MemberAccess	DB . persist
>1238	Identifier	persist
>1239	Identifier	DB
>1240	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>1241	IdentifierDecl	log ( nowTime ( ) , logentry 
>1242	Expression	nowTime ( ) , logentry 
>1243	Expression	logentry 
>1244	Expression	getUserName ( ) , getNetworkName ( ) , \"\" , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1245	Expression	getNetworkName ( ) , \"\" , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1246	Expression	\"\" , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1247	Expression	Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1248	Expression	\"\" , Channel . GetName ( )
>1249	CallExpression	Channel . GetName ( )
>1250	ArgumentList	 
>1251	Callee	Channel . GetName
>1252	MemberAccess	Channel . GetName
>1253	Identifier	GetName
>1254	Identifier	Channel
>1255	PrimaryExpression	\"\"
>1256	CallExpression	Nick . GetHostMask ( )
>1257	ArgumentList	 
>1258	Callee	Nick . GetHostMask
>1259	MemberAccess	Nick . GetHostMask
>1260	Identifier	GetHostMask
>1261	Identifier	Nick
>1262	PrimaryExpression	\"\"
>1263	CallExpression	getNetworkName ( )
>1264	ArgumentList	 
>1265	Callee	getNetworkName
>1266	Identifier	getNetworkName
>1267	CallExpression	getUserName ( )
>1268	ArgumentList	 
>1269	Callee	getUserName
>1270	Identifier	getUserName
>1271	Identifier	logentry 
>1272	CallExpression	nowTime ( )
>1273	ArgumentList	 
>1274	Callee	nowTime
>1275	Identifier	nowTime
>1276	Identifier	log
>1277	IdentifierDeclType	logentry
>1278	IdentifierDeclStatement	odb 
>1279	IdentifierDecl	t ( DB . begin ( ) )
>1280	CallExpression	DB . begin ( )
>1281	ArgumentList	 
>1282	Callee	DB . begin
>1283	MemberAccess	DB . begin
>1284	Identifier	begin
>1285	Identifier	DB
>1286	Identifier	t
>1287	IdentifierDeclType	odb 
>1297	FunctionDef	SqlLogMod 
>1298	ParameterList	const CNick & Nick , CChan & Channel , const CString & sMessage
>1299	Parameter	 
>1300	Identifier	sMessage
>1301	ParameterType	const CString &
>1302	Parameter	 
>1303	Identifier	Channel
>1304	ParameterType	CChan &
>1305	Parameter	 
>1306	Identifier	Nick
>1307	ParameterType	const CNick &
>1308	ReturnType	void
>1309	CompoundStatement	 
>1310	BlockStarter	 
>1311	CompoundStatement	 
>1312	ExpressionStatement	handleException ( excpt )
>1313	CallExpression	handleException ( excpt )
>1314	ArgumentList	excpt
>1315	Argument	excpt
>1316	Identifier	excpt
>1317	Callee	handleException
>1318	Identifier	handleException
>1319	Identifier	excpt
>1320	BlockStarter	 
>1321	CompoundStatement	 
>1322	ExpressionStatement	t . commit ( )
>1323	CallExpression	t . commit ( )
>1324	ArgumentList	 
>1325	Callee	t . commit
>1326	MemberAccess	t . commit
>1327	Identifier	commit
>1328	Identifier	t
>1329	ExpressionStatement	DB . persist ( log )
>1330	CallExpression	DB . persist ( log )
>1331	ArgumentList	log
>1332	Argument	log
>1333	Identifier	log
>1334	Callee	DB . persist
>1335	MemberAccess	DB . persist
>1336	Identifier	persist
>1337	Identifier	DB
>1338	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>1339	IdentifierDecl	log ( nowTime ( ) , logentry 
>1340	Expression	nowTime ( ) , logentry 
>1341	Expression	logentry 
>1342	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1343	Expression	getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1344	Expression	sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1345	Expression	Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1346	Expression	\"\" , Channel . GetName ( )
>1347	CallExpression	Channel . GetName ( )
>1348	ArgumentList	 
>1349	Callee	Channel . GetName
>1350	MemberAccess	Channel . GetName
>1351	Identifier	GetName
>1352	Identifier	Channel
>1353	PrimaryExpression	\"\"
>1354	CallExpression	Nick . GetHostMask ( )
>1355	ArgumentList	 
>1356	Callee	Nick . GetHostMask
>1357	MemberAccess	Nick . GetHostMask
>1358	Identifier	GetHostMask
>1359	Identifier	Nick
>1360	Identifier	sMessage
>1361	CallExpression	getNetworkName ( )
>1362	ArgumentList	 
>1363	Callee	getNetworkName
>1364	Identifier	getNetworkName
>1365	CallExpression	getUserName ( )
>1366	ArgumentList	 
>1367	Callee	getUserName
>1368	Identifier	getUserName
>1369	Identifier	logentry 
>1370	CallExpression	nowTime ( )
>1371	ArgumentList	 
>1372	Callee	nowTime
>1373	Identifier	nowTime
>1374	Identifier	log
>1375	IdentifierDeclType	logentry
>1376	IdentifierDeclStatement	odb 
>1377	IdentifierDecl	t ( DB . begin ( ) )
>1378	CallExpression	DB . begin ( )
>1379	ArgumentList	 
>1380	Callee	DB . begin
>1381	MemberAccess	DB . begin
>1382	Identifier	begin
>1383	Identifier	DB
>1384	Identifier	t
>1385	IdentifierDeclType	odb 
>1396	FunctionDef	SqlLogMod 
>1397	ParameterList	const CNick & OldNick , const CString & sNewNick , const std 
>1398	Parameter	 
>1399	Identifier	vChans
>1400	ParameterType	const std 
>1401	Parameter	 
>1402	Identifier	sNewNick
>1403	ParameterType	const CString &
>1404	Parameter	 
>1405	Identifier	OldNick
>1406	ParameterType	const CNick &
>1407	ReturnType	void
>1408	CompoundStatement	 
>1409	BlockStarter	 
>1410	CompoundStatement	 
>1411	ExpressionStatement	handleException ( excpt )
>1412	CallExpression	handleException ( excpt )
>1413	ArgumentList	excpt
>1414	Argument	excpt
>1415	Identifier	excpt
>1416	Callee	handleException
>1417	Identifier	handleException
>1418	Identifier	excpt
>1419	BlockStarter	 
>1420	CompoundStatement	 
>1421	ExpressionStatement	t . commit ( )
>1422	CallExpression	t . commit ( )
>1423	ArgumentList	 
>1424	Callee	t . commit
>1425	MemberAccess	t . commit
>1426	Identifier	commit
>1427	Identifier	t
>1428	CompoundStatement	 
>1429	ExpressionStatement	DB . persist ( log )
>1430	CallExpression	DB . persist ( log )
>1431	ArgumentList	log
>1432	Argument	log
>1433	Identifier	log
>1434	Callee	DB . persist
>1435	MemberAccess	DB . persist
>1436	Identifier	persist
>1437	Identifier	DB
>1438	IdentifierDeclStatement	logentry log ( time , logentry 
>1439	IdentifierDecl	log ( time , logentry 
>1440	Expression	time , logentry 
>1441	Expression	logentry 
>1442	Expression	getUserName ( ) , getNetworkName ( ) , \"\" , OldNick . GetHostMask ( ) , sNewNick , chan -> GetName ( )
>1443	Expression	getNetworkName ( ) , \"\" , OldNick . GetHostMask ( ) , sNewNick , chan -> GetName ( )
>1444	Expression	\"\" , OldNick . GetHostMask ( ) , sNewNick , chan -> GetName ( )
>1445	Expression	OldNick . GetHostMask ( ) , sNewNick , chan -> GetName ( )
>1446	Expression	sNewNick , chan -> GetName ( )
>1447	CallExpression	chan -> GetName ( )
>1448	ArgumentList	 
>1449	Callee	chan -> GetName
>1450	PtrMemberAccess	chan -> GetName
>1451	Identifier	GetName
>1452	Identifier	chan
>1453	Identifier	sNewNick
>1454	CallExpression	OldNick . GetHostMask ( )
>1455	ArgumentList	 
>1456	Callee	OldNick . GetHostMask
>1457	MemberAccess	OldNick . GetHostMask
>1458	Identifier	GetHostMask
>1459	Identifier	OldNick
>1460	PrimaryExpression	\"\"
>1461	CallExpression	getNetworkName ( )
>1462	ArgumentList	 
>1463	Callee	getNetworkName
>1464	Identifier	getNetworkName
>1465	CallExpression	getUserName ( )
>1466	ArgumentList	 
>1467	Callee	getUserName
>1468	Identifier	getUserName
>1469	Identifier	logentry 
>1470	Identifier	time
>1471	Identifier	log
>1472	IdentifierDeclType	logentry
>1473	Statement	)
>1474	Statement	vChans
>1475	Label	chan 
>1476	Identifier	chan
>1477	Statement	*
>1478	Statement	CChan
>1479	Statement	(
>1480	Statement	for
>1481	IdentifierDeclStatement	uint64_t time = nowTime ( ) ;
>1482	IdentifierDecl	time = nowTime ( )
>1483	AssignmentExpr	time = nowTime ( )
>1484	CallExpression	nowTime ( )
>1485	ArgumentList	 
>1486	Callee	nowTime
>1487	Identifier	nowTime
>1488	Identifier	time
>1489	Identifier	time
>1490	IdentifierDeclType	uint64_t
>1491	IdentifierDeclStatement	odb 
>1492	IdentifierDecl	t ( DB . begin ( ) )
>1493	CallExpression	DB . begin ( )
>1494	ArgumentList	 
>1495	Callee	DB . begin
>1496	MemberAccess	DB . begin
>1497	Identifier	begin
>1498	Identifier	DB
>1499	Identifier	t
>1500	IdentifierDeclType	odb 
>1514	FunctionDef	SqlLogMod 
>1515	ParameterList	CNick & Nick , CChan & Channel , CString & sTopic
>1516	Parameter	 
>1517	Identifier	sTopic
>1518	ParameterType	CString &
>1519	Parameter	 
>1520	Identifier	Channel
>1521	ParameterType	CChan &
>1522	Parameter	 
>1523	Identifier	Nick
>1524	ParameterType	CNick &
>1525	ReturnType	EModRet
>1526	CompoundStatement	 
>1527	ReturnStatement	 
>1528	Identifier	CONTINUE
>1529	BlockStarter	 
>1530	CompoundStatement	 
>1531	ExpressionStatement	handleException ( excpt )
>1532	CallExpression	handleException ( excpt )
>1533	ArgumentList	excpt
>1534	Argument	excpt
>1535	Identifier	excpt
>1536	Callee	handleException
>1537	Identifier	handleException
>1538	Identifier	excpt
>1539	BlockStarter	 
>1540	CompoundStatement	 
>1541	ExpressionStatement	t . commit ( )
>1542	CallExpression	t . commit ( )
>1543	ArgumentList	 
>1544	Callee	t . commit
>1545	MemberAccess	t . commit
>1546	Identifier	commit
>1547	Identifier	t
>1548	ExpressionStatement	DB . persist ( log )
>1549	CallExpression	DB . persist ( log )
>1550	ArgumentList	log
>1551	Argument	log
>1552	Identifier	log
>1553	Callee	DB . persist
>1554	MemberAccess	DB . persist
>1555	Identifier	persist
>1556	Identifier	DB
>1557	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>1558	IdentifierDecl	log ( nowTime ( ) , logentry 
>1559	Expression	nowTime ( ) , logentry 
>1560	Expression	logentry 
>1561	Expression	getUserName ( ) , getNetworkName ( ) , sTopic , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1562	Expression	getNetworkName ( ) , sTopic , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1563	Expression	sTopic , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1564	Expression	Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1565	Expression	\"\" , Channel . GetName ( )
>1566	CallExpression	Channel . GetName ( )
>1567	ArgumentList	 
>1568	Callee	Channel . GetName
>1569	MemberAccess	Channel . GetName
>1570	Identifier	GetName
>1571	Identifier	Channel
>1572	PrimaryExpression	\"\"
>1573	CallExpression	Nick . GetHostMask ( )
>1574	ArgumentList	 
>1575	Callee	Nick . GetHostMask
>1576	MemberAccess	Nick . GetHostMask
>1577	Identifier	GetHostMask
>1578	Identifier	Nick
>1579	Identifier	sTopic
>1580	CallExpression	getNetworkName ( )
>1581	ArgumentList	 
>1582	Callee	getNetworkName
>1583	Identifier	getNetworkName
>1584	CallExpression	getUserName ( )
>1585	ArgumentList	 
>1586	Callee	getUserName
>1587	Identifier	getUserName
>1588	Identifier	logentry 
>1589	CallExpression	nowTime ( )
>1590	ArgumentList	 
>1591	Callee	nowTime
>1592	Identifier	nowTime
>1593	Identifier	log
>1594	IdentifierDeclType	logentry
>1595	IdentifierDeclStatement	odb 
>1596	IdentifierDecl	t ( DB . begin ( ) )
>1597	CallExpression	DB . begin ( )
>1598	ArgumentList	 
>1599	Callee	DB . begin
>1600	MemberAccess	DB . begin
>1601	Identifier	begin
>1602	Identifier	DB
>1603	Identifier	t
>1604	IdentifierDeclType	odb 
>1616	FunctionDef	SqlLogMod 
>1617	ParameterList	CString & sTarget , CString & sMessage
>1618	Parameter	 
>1619	Identifier	sMessage
>1620	ParameterType	CString &
>1621	Parameter	 
>1622	Identifier	sTarget
>1623	ParameterType	CString &
>1624	ReturnType	EModRet
>1625	CompoundStatement	 
>1626	ReturnStatement	 
>1627	Identifier	CONTINUE
>1628	BlockStarter	 
>1629	CompoundStatement	 
>1630	ExpressionStatement	handleException ( excpt )
>1631	CallExpression	handleException ( excpt )
>1632	ArgumentList	excpt
>1633	Argument	excpt
>1634	Identifier	excpt
>1635	Callee	handleException
>1636	Identifier	handleException
>1637	Identifier	excpt
>1638	BlockStarter	 
>1639	CompoundStatement	 
>1640	ExpressionStatement	t . commit ( )
>1641	CallExpression	t . commit ( )
>1642	ArgumentList	 
>1643	Callee	t . commit
>1644	MemberAccess	t . commit
>1645	Identifier	commit
>1646	Identifier	t
>1647	IfStatement	if ( sTarget . substr ( 0 , 1 ) == \"#\" )
>1648	ElseStatement	else
>1649	CompoundStatement	 
>1650	ExpressionStatement	DB . persist ( log )
>1651	CallExpression	DB . persist ( log )
>1652	ArgumentList	log
>1653	Argument	log
>1654	Identifier	log
>1655	Callee	DB . persist
>1656	MemberAccess	DB . persist
>1657	Identifier	persist
>1658	Identifier	DB
>1659	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>1660	IdentifierDecl	log ( nowTime ( ) , logentry 
>1661	Expression	nowTime ( ) , logentry 
>1662	Expression	logentry 
>1663	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , getOwnName ( ) , sTarget
>1664	Expression	getNetworkName ( ) , sMessage , getOwnName ( ) , sTarget
>1665	Expression	sMessage , getOwnName ( ) , sTarget
>1666	Expression	getOwnName ( ) , sTarget
>1667	Identifier	sTarget
>1668	CallExpression	getOwnName ( )
>1669	ArgumentList	 
>1670	Callee	getOwnName
>1671	Identifier	getOwnName
>1672	Identifier	sMessage
>1673	CallExpression	getNetworkName ( )
>1674	ArgumentList	 
>1675	Callee	getNetworkName
>1676	Identifier	getNetworkName
>1677	CallExpression	getUserName ( )
>1678	ArgumentList	 
>1679	Callee	getUserName
>1680	Identifier	getUserName
>1681	Identifier	logentry 
>1682	CallExpression	nowTime ( )
>1683	ArgumentList	 
>1684	Callee	nowTime
>1685	Identifier	nowTime
>1686	Identifier	log
>1687	IdentifierDeclType	logentry
>1688	CompoundStatement	 
>1689	ExpressionStatement	DB . persist ( log )
>1690	CallExpression	DB . persist ( log )
>1691	ArgumentList	log
>1692	Argument	log
>1693	Identifier	log
>1694	Callee	DB . persist
>1695	MemberAccess	DB . persist
>1696	Identifier	persist
>1697	Identifier	DB
>1698	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>1699	IdentifierDecl	log ( nowTime ( ) , logentry 
>1700	Expression	nowTime ( ) , logentry 
>1701	Expression	logentry 
>1702	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , getOwnName ( ) , \"\" , sTarget
>1703	Expression	getNetworkName ( ) , sMessage , getOwnName ( ) , \"\" , sTarget
>1704	Expression	sMessage , getOwnName ( ) , \"\" , sTarget
>1705	Expression	getOwnName ( ) , \"\" , sTarget
>1706	Expression	\"\" , sTarget
>1707	Identifier	sTarget
>1708	PrimaryExpression	\"\"
>1709	CallExpression	getOwnName ( )
>1710	ArgumentList	 
>1711	Callee	getOwnName
>1712	Identifier	getOwnName
>1713	Identifier	sMessage
>1714	CallExpression	getNetworkName ( )
>1715	ArgumentList	 
>1716	Callee	getNetworkName
>1717	Identifier	getNetworkName
>1718	CallExpression	getUserName ( )
>1719	ArgumentList	 
>1720	Callee	getUserName
>1721	Identifier	getUserName
>1722	Identifier	logentry 
>1723	CallExpression	nowTime ( )
>1724	ArgumentList	 
>1725	Callee	nowTime
>1726	Identifier	nowTime
>1727	Identifier	log
>1728	IdentifierDeclType	logentry
>1729	Condition	sTarget . substr ( 0 , 1 ) == \"#\"
>1730	EqualityExpression	sTarget . substr ( 0 , 1 ) == \"#\"
>1731	PrimaryExpression	\"#\"
>1732	CallExpression	sTarget . substr ( 0 , 1 )
>1733	ArgumentList	0
>1734	Argument	1
>1735	PrimaryExpression	1
>1736	Argument	0
>1737	PrimaryExpression	0
>1738	Callee	sTarget . substr
>1739	MemberAccess	sTarget . substr
>1740	Identifier	substr
>1741	Identifier	sTarget
>1742	IdentifierDeclStatement	odb 
>1743	IdentifierDecl	t ( DB . begin ( ) )
>1744	CallExpression	DB . begin ( )
>1745	ArgumentList	 
>1746	Callee	DB . begin
>1747	MemberAccess	DB . begin
>1748	Identifier	begin
>1749	Identifier	DB
>1750	Identifier	t
>1751	IdentifierDeclType	odb 
>1763	FunctionDef	SqlLogMod 
>1764	ParameterList	CNick & Nick , CString & sMessage
>1765	Parameter	 
>1766	Identifier	sMessage
>1767	ParameterType	CString &
>1768	Parameter	 
>1769	Identifier	Nick
>1770	ParameterType	CNick &
>1771	ReturnType	EModRet
>1772	CompoundStatement	 
>1773	ReturnStatement	 
>1774	Identifier	CONTINUE
>1775	BlockStarter	 
>1776	CompoundStatement	 
>1777	ExpressionStatement	handleException ( excpt )
>1778	CallExpression	handleException ( excpt )
>1779	ArgumentList	excpt
>1780	Argument	excpt
>1781	Identifier	excpt
>1782	Callee	handleException
>1783	Identifier	handleException
>1784	Identifier	excpt
>1785	BlockStarter	 
>1786	CompoundStatement	 
>1787	ExpressionStatement	t . commit ( )
>1788	CallExpression	t . commit ( )
>1789	ArgumentList	 
>1790	Callee	t . commit
>1791	MemberAccess	t . commit
>1792	Identifier	commit
>1793	Identifier	t
>1794	ExpressionStatement	DB . persist ( log )
>1795	CallExpression	DB . persist ( log )
>1796	ArgumentList	log
>1797	Argument	log
>1798	Identifier	log
>1799	Callee	DB . persist
>1800	MemberAccess	DB . persist
>1801	Identifier	persist
>1802	Identifier	DB
>1803	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>1804	IdentifierDecl	log ( nowTime ( ) , logentry 
>1805	Expression	nowTime ( ) , logentry 
>1806	Expression	logentry 
>1807	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , getOwnName ( false )
>1808	Expression	getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , getOwnName ( false )
>1809	Expression	sMessage , Nick . GetHostMask ( ) , getOwnName ( false )
>1810	Expression	Nick . GetHostMask ( ) , getOwnName ( false )
>1811	CallExpression	getOwnName ( false )
>1812	ArgumentList	false
>1813	Argument	false
>1814	Identifier	false
>1815	Callee	getOwnName
>1816	Identifier	getOwnName
>1817	CallExpression	Nick . GetHostMask ( )
>1818	ArgumentList	 
>1819	Callee	Nick . GetHostMask
>1820	MemberAccess	Nick . GetHostMask
>1821	Identifier	GetHostMask
>1822	Identifier	Nick
>1823	Identifier	sMessage
>1824	CallExpression	getNetworkName ( )
>1825	ArgumentList	 
>1826	Callee	getNetworkName
>1827	Identifier	getNetworkName
>1828	CallExpression	getUserName ( )
>1829	ArgumentList	 
>1830	Callee	getUserName
>1831	Identifier	getUserName
>1832	Identifier	logentry 
>1833	CallExpression	nowTime ( )
>1834	ArgumentList	 
>1835	Callee	nowTime
>1836	Identifier	nowTime
>1837	Identifier	log
>1838	IdentifierDeclType	logentry
>1839	IdentifierDeclStatement	odb 
>1840	IdentifierDecl	t ( DB . begin ( ) )
>1841	CallExpression	DB . begin ( )
>1842	ArgumentList	 
>1843	Callee	DB . begin
>1844	MemberAccess	DB . begin
>1845	Identifier	begin
>1846	Identifier	DB
>1847	Identifier	t
>1848	IdentifierDeclType	odb 
>1860	FunctionDef	SqlLogMod 
>1861	ParameterList	CNick & Nick , CChan & Channel , CString & sMessage
>1862	Parameter	 
>1863	Identifier	sMessage
>1864	ParameterType	CString &
>1865	Parameter	 
>1866	Identifier	Channel
>1867	ParameterType	CChan &
>1868	Parameter	 
>1869	Identifier	Nick
>1870	ParameterType	CNick &
>1871	ReturnType	EModRet
>1872	CompoundStatement	 
>1873	ReturnStatement	 
>1874	Identifier	CONTINUE
>1875	BlockStarter	 
>1876	CompoundStatement	 
>1877	ExpressionStatement	handleException ( excpt )
>1878	CallExpression	handleException ( excpt )
>1879	ArgumentList	excpt
>1880	Argument	excpt
>1881	Identifier	excpt
>1882	Callee	handleException
>1883	Identifier	handleException
>1884	Identifier	excpt
>1885	BlockStarter	 
>1886	CompoundStatement	 
>1887	ExpressionStatement	t . commit ( )
>1888	CallExpression	t . commit ( )
>1889	ArgumentList	 
>1890	Callee	t . commit
>1891	MemberAccess	t . commit
>1892	Identifier	commit
>1893	Identifier	t
>1894	ExpressionStatement	DB . persist ( log )
>1895	CallExpression	DB . persist ( log )
>1896	ArgumentList	log
>1897	Argument	log
>1898	Identifier	log
>1899	Callee	DB . persist
>1900	MemberAccess	DB . persist
>1901	Identifier	persist
>1902	Identifier	DB
>1903	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>1904	IdentifierDecl	log ( nowTime ( ) , logentry 
>1905	Expression	nowTime ( ) , logentry 
>1906	Expression	logentry 
>1907	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1908	Expression	getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1909	Expression	sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1910	Expression	Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>1911	Expression	\"\" , Channel . GetName ( )
>1912	CallExpression	Channel . GetName ( )
>1913	ArgumentList	 
>1914	Callee	Channel . GetName
>1915	MemberAccess	Channel . GetName
>1916	Identifier	GetName
>1917	Identifier	Channel
>1918	PrimaryExpression	\"\"
>1919	CallExpression	Nick . GetHostMask ( )
>1920	ArgumentList	 
>1921	Callee	Nick . GetHostMask
>1922	MemberAccess	Nick . GetHostMask
>1923	Identifier	GetHostMask
>1924	Identifier	Nick
>1925	Identifier	sMessage
>1926	CallExpression	getNetworkName ( )
>1927	ArgumentList	 
>1928	Callee	getNetworkName
>1929	Identifier	getNetworkName
>1930	CallExpression	getUserName ( )
>1931	ArgumentList	 
>1932	Callee	getUserName
>1933	Identifier	getUserName
>1934	Identifier	logentry 
>1935	CallExpression	nowTime ( )
>1936	ArgumentList	 
>1937	Callee	nowTime
>1938	Identifier	nowTime
>1939	Identifier	log
>1940	IdentifierDeclType	logentry
>1941	IdentifierDeclStatement	odb 
>1942	IdentifierDecl	t ( DB . begin ( ) )
>1943	CallExpression	DB . begin ( )
>1944	ArgumentList	 
>1945	Callee	DB . begin
>1946	MemberAccess	DB . begin
>1947	Identifier	begin
>1948	Identifier	DB
>1949	Identifier	t
>1950	IdentifierDeclType	odb 
>1962	FunctionDef	SqlLogMod 
>1963	ParameterList	CString & sTarget , CString & sMessage
>1964	Parameter	 
>1965	Identifier	sMessage
>1966	ParameterType	CString &
>1967	Parameter	 
>1968	Identifier	sTarget
>1969	ParameterType	CString &
>1970	ReturnType	EModRet
>1971	CompoundStatement	 
>1972	ReturnStatement	 
>1973	Identifier	CONTINUE
>1974	BlockStarter	 
>1975	CompoundStatement	 
>1976	ExpressionStatement	handleException ( excpt )
>1977	CallExpression	handleException ( excpt )
>1978	ArgumentList	excpt
>1979	Argument	excpt
>1980	Identifier	excpt
>1981	Callee	handleException
>1982	Identifier	handleException
>1983	Identifier	excpt
>1984	BlockStarter	 
>1985	CompoundStatement	 
>1986	ExpressionStatement	t . commit ( )
>1987	CallExpression	t . commit ( )
>1988	ArgumentList	 
>1989	Callee	t . commit
>1990	MemberAccess	t . commit
>1991	Identifier	commit
>1992	Identifier	t
>1993	IfStatement	if ( sTarget . substr ( 0 , 1 ) == \"#\" )
>1994	ElseStatement	else
>1995	CompoundStatement	 
>1996	ExpressionStatement	DB . persist ( log )
>1997	CallExpression	DB . persist ( log )
>1998	ArgumentList	log
>1999	Argument	log
>2000	Identifier	log
>2001	Callee	DB . persist
>2002	MemberAccess	DB . persist
>2003	Identifier	persist
>2004	Identifier	DB
>2005	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>2006	IdentifierDecl	log ( nowTime ( ) , logentry 
>2007	Expression	nowTime ( ) , logentry 
>2008	Expression	logentry 
>2009	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , getOwnName ( ) , sTarget
>2010	Expression	getNetworkName ( ) , sMessage , getOwnName ( ) , sTarget
>2011	Expression	sMessage , getOwnName ( ) , sTarget
>2012	Expression	getOwnName ( ) , sTarget
>2013	Identifier	sTarget
>2014	CallExpression	getOwnName ( )
>2015	ArgumentList	 
>2016	Callee	getOwnName
>2017	Identifier	getOwnName
>2018	Identifier	sMessage
>2019	CallExpression	getNetworkName ( )
>2020	ArgumentList	 
>2021	Callee	getNetworkName
>2022	Identifier	getNetworkName
>2023	CallExpression	getUserName ( )
>2024	ArgumentList	 
>2025	Callee	getUserName
>2026	Identifier	getUserName
>2027	Identifier	logentry 
>2028	CallExpression	nowTime ( )
>2029	ArgumentList	 
>2030	Callee	nowTime
>2031	Identifier	nowTime
>2032	Identifier	log
>2033	IdentifierDeclType	logentry
>2034	CompoundStatement	 
>2035	ExpressionStatement	DB . persist ( log )
>2036	CallExpression	DB . persist ( log )
>2037	ArgumentList	log
>2038	Argument	log
>2039	Identifier	log
>2040	Callee	DB . persist
>2041	MemberAccess	DB . persist
>2042	Identifier	persist
>2043	Identifier	DB
>2044	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>2045	IdentifierDecl	log ( nowTime ( ) , logentry 
>2046	Expression	nowTime ( ) , logentry 
>2047	Expression	logentry 
>2048	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , getOwnName ( ) , \"\" , sTarget
>2049	Expression	getNetworkName ( ) , sMessage , getOwnName ( ) , \"\" , sTarget
>2050	Expression	sMessage , getOwnName ( ) , \"\" , sTarget
>2051	Expression	getOwnName ( ) , \"\" , sTarget
>2052	Expression	\"\" , sTarget
>2053	Identifier	sTarget
>2054	PrimaryExpression	\"\"
>2055	CallExpression	getOwnName ( )
>2056	ArgumentList	 
>2057	Callee	getOwnName
>2058	Identifier	getOwnName
>2059	Identifier	sMessage
>2060	CallExpression	getNetworkName ( )
>2061	ArgumentList	 
>2062	Callee	getNetworkName
>2063	Identifier	getNetworkName
>2064	CallExpression	getUserName ( )
>2065	ArgumentList	 
>2066	Callee	getUserName
>2067	Identifier	getUserName
>2068	Identifier	logentry 
>2069	CallExpression	nowTime ( )
>2070	ArgumentList	 
>2071	Callee	nowTime
>2072	Identifier	nowTime
>2073	Identifier	log
>2074	IdentifierDeclType	logentry
>2075	Condition	sTarget . substr ( 0 , 1 ) == \"#\"
>2076	EqualityExpression	sTarget . substr ( 0 , 1 ) == \"#\"
>2077	PrimaryExpression	\"#\"
>2078	CallExpression	sTarget . substr ( 0 , 1 )
>2079	ArgumentList	0
>2080	Argument	1
>2081	PrimaryExpression	1
>2082	Argument	0
>2083	PrimaryExpression	0
>2084	Callee	sTarget . substr
>2085	MemberAccess	sTarget . substr
>2086	Identifier	substr
>2087	Identifier	sTarget
>2088	IdentifierDeclStatement	odb 
>2089	IdentifierDecl	t ( DB . begin ( ) )
>2090	CallExpression	DB . begin ( )
>2091	ArgumentList	 
>2092	Callee	DB . begin
>2093	MemberAccess	DB . begin
>2094	Identifier	begin
>2095	Identifier	DB
>2096	Identifier	t
>2097	IdentifierDeclType	odb 
>2109	FunctionDef	SqlLogMod 
>2110	ParameterList	CNick & Nick , CString & sMessage
>2111	Parameter	 
>2112	Identifier	sMessage
>2113	ParameterType	CString &
>2114	Parameter	 
>2115	Identifier	Nick
>2116	ParameterType	CNick &
>2117	ReturnType	EModRet
>2118	CompoundStatement	 
>2119	ReturnStatement	 
>2120	Identifier	CONTINUE
>2121	BlockStarter	 
>2122	CompoundStatement	 
>2123	ExpressionStatement	handleException ( excpt )
>2124	CallExpression	handleException ( excpt )
>2125	ArgumentList	excpt
>2126	Argument	excpt
>2127	Identifier	excpt
>2128	Callee	handleException
>2129	Identifier	handleException
>2130	Identifier	excpt
>2131	BlockStarter	 
>2132	CompoundStatement	 
>2133	ExpressionStatement	t . commit ( )
>2134	CallExpression	t . commit ( )
>2135	ArgumentList	 
>2136	Callee	t . commit
>2137	MemberAccess	t . commit
>2138	Identifier	commit
>2139	Identifier	t
>2140	ExpressionStatement	DB . persist ( log )
>2141	CallExpression	DB . persist ( log )
>2142	ArgumentList	log
>2143	Argument	log
>2144	Identifier	log
>2145	Callee	DB . persist
>2146	MemberAccess	DB . persist
>2147	Identifier	persist
>2148	Identifier	DB
>2149	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>2150	IdentifierDecl	log ( nowTime ( ) , logentry 
>2151	Expression	nowTime ( ) , logentry 
>2152	Expression	logentry 
>2153	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , getOwnName ( false )
>2154	Expression	getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , getOwnName ( false )
>2155	Expression	sMessage , Nick . GetHostMask ( ) , getOwnName ( false )
>2156	Expression	Nick . GetHostMask ( ) , getOwnName ( false )
>2157	CallExpression	getOwnName ( false )
>2158	ArgumentList	false
>2159	Argument	false
>2160	Identifier	false
>2161	Callee	getOwnName
>2162	Identifier	getOwnName
>2163	CallExpression	Nick . GetHostMask ( )
>2164	ArgumentList	 
>2165	Callee	Nick . GetHostMask
>2166	MemberAccess	Nick . GetHostMask
>2167	Identifier	GetHostMask
>2168	Identifier	Nick
>2169	Identifier	sMessage
>2170	CallExpression	getNetworkName ( )
>2171	ArgumentList	 
>2172	Callee	getNetworkName
>2173	Identifier	getNetworkName
>2174	CallExpression	getUserName ( )
>2175	ArgumentList	 
>2176	Callee	getUserName
>2177	Identifier	getUserName
>2178	Identifier	logentry 
>2179	CallExpression	nowTime ( )
>2180	ArgumentList	 
>2181	Callee	nowTime
>2182	Identifier	nowTime
>2183	Identifier	log
>2184	IdentifierDeclType	logentry
>2185	IdentifierDeclStatement	odb 
>2186	IdentifierDecl	t ( DB . begin ( ) )
>2187	CallExpression	DB . begin ( )
>2188	ArgumentList	 
>2189	Callee	DB . begin
>2190	MemberAccess	DB . begin
>2191	Identifier	begin
>2192	Identifier	DB
>2193	Identifier	t
>2194	IdentifierDeclType	odb 
>2206	FunctionDef	SqlLogMod 
>2207	ParameterList	CNick & Nick , CChan & Channel , CString & sMessage
>2208	Parameter	 
>2209	Identifier	sMessage
>2210	ParameterType	CString &
>2211	Parameter	 
>2212	Identifier	Channel
>2213	ParameterType	CChan &
>2214	Parameter	 
>2215	Identifier	Nick
>2216	ParameterType	CNick &
>2217	ReturnType	EModRet
>2218	CompoundStatement	 
>2219	ReturnStatement	 
>2220	Identifier	CONTINUE
>2221	BlockStarter	 
>2222	CompoundStatement	 
>2223	ExpressionStatement	handleException ( excpt )
>2224	CallExpression	handleException ( excpt )
>2225	ArgumentList	excpt
>2226	Argument	excpt
>2227	Identifier	excpt
>2228	Callee	handleException
>2229	Identifier	handleException
>2230	Identifier	excpt
>2231	BlockStarter	 
>2232	CompoundStatement	 
>2233	ExpressionStatement	t . commit ( )
>2234	CallExpression	t . commit ( )
>2235	ArgumentList	 
>2236	Callee	t . commit
>2237	MemberAccess	t . commit
>2238	Identifier	commit
>2239	Identifier	t
>2240	ExpressionStatement	DB . persist ( log )
>2241	CallExpression	DB . persist ( log )
>2242	ArgumentList	log
>2243	Argument	log
>2244	Identifier	log
>2245	Callee	DB . persist
>2246	MemberAccess	DB . persist
>2247	Identifier	persist
>2248	Identifier	DB
>2249	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>2250	IdentifierDecl	log ( nowTime ( ) , logentry 
>2251	Expression	nowTime ( ) , logentry 
>2252	Expression	logentry 
>2253	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>2254	Expression	getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>2255	Expression	sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>2256	Expression	Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>2257	Expression	\"\" , Channel . GetName ( )
>2258	CallExpression	Channel . GetName ( )
>2259	ArgumentList	 
>2260	Callee	Channel . GetName
>2261	MemberAccess	Channel . GetName
>2262	Identifier	GetName
>2263	Identifier	Channel
>2264	PrimaryExpression	\"\"
>2265	CallExpression	Nick . GetHostMask ( )
>2266	ArgumentList	 
>2267	Callee	Nick . GetHostMask
>2268	MemberAccess	Nick . GetHostMask
>2269	Identifier	GetHostMask
>2270	Identifier	Nick
>2271	Identifier	sMessage
>2272	CallExpression	getNetworkName ( )
>2273	ArgumentList	 
>2274	Callee	getNetworkName
>2275	Identifier	getNetworkName
>2276	CallExpression	getUserName ( )
>2277	ArgumentList	 
>2278	Callee	getUserName
>2279	Identifier	getUserName
>2280	Identifier	logentry 
>2281	CallExpression	nowTime ( )
>2282	ArgumentList	 
>2283	Callee	nowTime
>2284	Identifier	nowTime
>2285	Identifier	log
>2286	IdentifierDeclType	logentry
>2287	IdentifierDeclStatement	odb 
>2288	IdentifierDecl	t ( DB . begin ( ) )
>2289	CallExpression	DB . begin ( )
>2290	ArgumentList	 
>2291	Callee	DB . begin
>2292	MemberAccess	DB . begin
>2293	Identifier	begin
>2294	Identifier	DB
>2295	Identifier	t
>2296	IdentifierDeclType	odb 
>2308	FunctionDef	SqlLogMod 
>2309	ParameterList	CString & sTarget , CString & sMessage
>2310	Parameter	 
>2311	Identifier	sMessage
>2312	ParameterType	CString &
>2313	Parameter	 
>2314	Identifier	sTarget
>2315	ParameterType	CString &
>2316	ReturnType	EModRet
>2317	CompoundStatement	 
>2318	ReturnStatement	 
>2319	Identifier	CONTINUE
>2320	BlockStarter	 
>2321	CompoundStatement	 
>2322	ExpressionStatement	handleException ( excpt )
>2323	CallExpression	handleException ( excpt )
>2324	ArgumentList	excpt
>2325	Argument	excpt
>2326	Identifier	excpt
>2327	Callee	handleException
>2328	Identifier	handleException
>2329	Identifier	excpt
>2330	BlockStarter	 
>2331	CompoundStatement	 
>2332	ExpressionStatement	t . commit ( )
>2333	CallExpression	t . commit ( )
>2334	ArgumentList	 
>2335	Callee	t . commit
>2336	MemberAccess	t . commit
>2337	Identifier	commit
>2338	Identifier	t
>2339	IfStatement	if ( sTarget . substr ( 0 , 1 ) == \"#\" )
>2340	ElseStatement	else
>2341	CompoundStatement	 
>2342	ExpressionStatement	DB . persist ( log )
>2343	CallExpression	DB . persist ( log )
>2344	ArgumentList	log
>2345	Argument	log
>2346	Identifier	log
>2347	Callee	DB . persist
>2348	MemberAccess	DB . persist
>2349	Identifier	persist
>2350	Identifier	DB
>2351	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>2352	IdentifierDecl	log ( nowTime ( ) , logentry 
>2353	Expression	nowTime ( ) , logentry 
>2354	Expression	logentry 
>2355	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , getOwnName ( ) , sTarget
>2356	Expression	getNetworkName ( ) , sMessage , getOwnName ( ) , sTarget
>2357	Expression	sMessage , getOwnName ( ) , sTarget
>2358	Expression	getOwnName ( ) , sTarget
>2359	Identifier	sTarget
>2360	CallExpression	getOwnName ( )
>2361	ArgumentList	 
>2362	Callee	getOwnName
>2363	Identifier	getOwnName
>2364	Identifier	sMessage
>2365	CallExpression	getNetworkName ( )
>2366	ArgumentList	 
>2367	Callee	getNetworkName
>2368	Identifier	getNetworkName
>2369	CallExpression	getUserName ( )
>2370	ArgumentList	 
>2371	Callee	getUserName
>2372	Identifier	getUserName
>2373	Identifier	logentry 
>2374	CallExpression	nowTime ( )
>2375	ArgumentList	 
>2376	Callee	nowTime
>2377	Identifier	nowTime
>2378	Identifier	log
>2379	IdentifierDeclType	logentry
>2380	CompoundStatement	 
>2381	ExpressionStatement	DB . persist ( log )
>2382	CallExpression	DB . persist ( log )
>2383	ArgumentList	log
>2384	Argument	log
>2385	Identifier	log
>2386	Callee	DB . persist
>2387	MemberAccess	DB . persist
>2388	Identifier	persist
>2389	Identifier	DB
>2390	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>2391	IdentifierDecl	log ( nowTime ( ) , logentry 
>2392	Expression	nowTime ( ) , logentry 
>2393	Expression	logentry 
>2394	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , getOwnName ( ) , \"\" , sTarget
>2395	Expression	getNetworkName ( ) , sMessage , getOwnName ( ) , \"\" , sTarget
>2396	Expression	sMessage , getOwnName ( ) , \"\" , sTarget
>2397	Expression	getOwnName ( ) , \"\" , sTarget
>2398	Expression	\"\" , sTarget
>2399	Identifier	sTarget
>2400	PrimaryExpression	\"\"
>2401	CallExpression	getOwnName ( )
>2402	ArgumentList	 
>2403	Callee	getOwnName
>2404	Identifier	getOwnName
>2405	Identifier	sMessage
>2406	CallExpression	getNetworkName ( )
>2407	ArgumentList	 
>2408	Callee	getNetworkName
>2409	Identifier	getNetworkName
>2410	CallExpression	getUserName ( )
>2411	ArgumentList	 
>2412	Callee	getUserName
>2413	Identifier	getUserName
>2414	Identifier	logentry 
>2415	CallExpression	nowTime ( )
>2416	ArgumentList	 
>2417	Callee	nowTime
>2418	Identifier	nowTime
>2419	Identifier	log
>2420	IdentifierDeclType	logentry
>2421	Condition	sTarget . substr ( 0 , 1 ) == \"#\"
>2422	EqualityExpression	sTarget . substr ( 0 , 1 ) == \"#\"
>2423	PrimaryExpression	\"#\"
>2424	CallExpression	sTarget . substr ( 0 , 1 )
>2425	ArgumentList	0
>2426	Argument	1
>2427	PrimaryExpression	1
>2428	Argument	0
>2429	PrimaryExpression	0
>2430	Callee	sTarget . substr
>2431	MemberAccess	sTarget . substr
>2432	Identifier	substr
>2433	Identifier	sTarget
>2434	IdentifierDeclStatement	odb 
>2435	IdentifierDecl	t ( DB . begin ( ) )
>2436	CallExpression	DB . begin ( )
>2437	ArgumentList	 
>2438	Callee	DB . begin
>2439	MemberAccess	DB . begin
>2440	Identifier	begin
>2441	Identifier	DB
>2442	Identifier	t
>2443	IdentifierDeclType	odb 
>2455	FunctionDef	SqlLogMod 
>2456	ParameterList	CNick & Nick , CString & sMessage
>2457	Parameter	 
>2458	Identifier	sMessage
>2459	ParameterType	CString &
>2460	Parameter	 
>2461	Identifier	Nick
>2462	ParameterType	CNick &
>2463	ReturnType	EModRet
>2464	CompoundStatement	 
>2465	ReturnStatement	 
>2466	Identifier	CONTINUE
>2467	BlockStarter	 
>2468	CompoundStatement	 
>2469	ExpressionStatement	handleException ( excpt )
>2470	CallExpression	handleException ( excpt )
>2471	ArgumentList	excpt
>2472	Argument	excpt
>2473	Identifier	excpt
>2474	Callee	handleException
>2475	Identifier	handleException
>2476	Identifier	excpt
>2477	BlockStarter	 
>2478	CompoundStatement	 
>2479	ExpressionStatement	t . commit ( )
>2480	CallExpression	t . commit ( )
>2481	ArgumentList	 
>2482	Callee	t . commit
>2483	MemberAccess	t . commit
>2484	Identifier	commit
>2485	Identifier	t
>2486	ExpressionStatement	DB . persist ( log )
>2487	CallExpression	DB . persist ( log )
>2488	ArgumentList	log
>2489	Argument	log
>2490	Identifier	log
>2491	Callee	DB . persist
>2492	MemberAccess	DB . persist
>2493	Identifier	persist
>2494	Identifier	DB
>2495	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>2496	IdentifierDecl	log ( nowTime ( ) , logentry 
>2497	Expression	nowTime ( ) , logentry 
>2498	Expression	logentry 
>2499	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , getOwnName ( false )
>2500	Expression	getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , getOwnName ( false )
>2501	Expression	sMessage , Nick . GetHostMask ( ) , getOwnName ( false )
>2502	Expression	Nick . GetHostMask ( ) , getOwnName ( false )
>2503	CallExpression	getOwnName ( false )
>2504	ArgumentList	false
>2505	Argument	false
>2506	Identifier	false
>2507	Callee	getOwnName
>2508	Identifier	getOwnName
>2509	CallExpression	Nick . GetHostMask ( )
>2510	ArgumentList	 
>2511	Callee	Nick . GetHostMask
>2512	MemberAccess	Nick . GetHostMask
>2513	Identifier	GetHostMask
>2514	Identifier	Nick
>2515	Identifier	sMessage
>2516	CallExpression	getNetworkName ( )
>2517	ArgumentList	 
>2518	Callee	getNetworkName
>2519	Identifier	getNetworkName
>2520	CallExpression	getUserName ( )
>2521	ArgumentList	 
>2522	Callee	getUserName
>2523	Identifier	getUserName
>2524	Identifier	logentry 
>2525	CallExpression	nowTime ( )
>2526	ArgumentList	 
>2527	Callee	nowTime
>2528	Identifier	nowTime
>2529	Identifier	log
>2530	IdentifierDeclType	logentry
>2531	IdentifierDeclStatement	odb 
>2532	IdentifierDecl	t ( DB . begin ( ) )
>2533	CallExpression	DB . begin ( )
>2534	ArgumentList	 
>2535	Callee	DB . begin
>2536	MemberAccess	DB . begin
>2537	Identifier	begin
>2538	Identifier	DB
>2539	Identifier	t
>2540	IdentifierDeclType	odb 
>2552	FunctionDef	SqlLogMod 
>2553	ParameterList	CNick & Nick , CChan & Channel , CString & sMessage
>2554	Parameter	 
>2555	Identifier	sMessage
>2556	ParameterType	CString &
>2557	Parameter	 
>2558	Identifier	Channel
>2559	ParameterType	CChan &
>2560	Parameter	 
>2561	Identifier	Nick
>2562	ParameterType	CNick &
>2563	ReturnType	EModRet
>2564	CompoundStatement	 
>2565	ReturnStatement	 
>2566	Identifier	CONTINUE
>2567	BlockStarter	 
>2568	CompoundStatement	 
>2569	ExpressionStatement	handleException ( excpt )
>2570	CallExpression	handleException ( excpt )
>2571	ArgumentList	excpt
>2572	Argument	excpt
>2573	Identifier	excpt
>2574	Callee	handleException
>2575	Identifier	handleException
>2576	Identifier	excpt
>2577	BlockStarter	 
>2578	CompoundStatement	 
>2579	ExpressionStatement	t . commit ( )
>2580	CallExpression	t . commit ( )
>2581	ArgumentList	 
>2582	Callee	t . commit
>2583	MemberAccess	t . commit
>2584	Identifier	commit
>2585	Identifier	t
>2586	ExpressionStatement	DB . persist ( log )
>2587	CallExpression	DB . persist ( log )
>2588	ArgumentList	log
>2589	Argument	log
>2590	Identifier	log
>2591	Callee	DB . persist
>2592	MemberAccess	DB . persist
>2593	Identifier	persist
>2594	Identifier	DB
>2595	IdentifierDeclStatement	logentry log ( nowTime ( ) , logentry 
>2596	IdentifierDecl	log ( nowTime ( ) , logentry 
>2597	Expression	nowTime ( ) , logentry 
>2598	Expression	logentry 
>2599	Expression	getUserName ( ) , getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>2600	Expression	getNetworkName ( ) , sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>2601	Expression	sMessage , Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>2602	Expression	Nick . GetHostMask ( ) , \"\" , Channel . GetName ( )
>2603	Expression	\"\" , Channel . GetName ( )
>2604	CallExpression	Channel . GetName ( )
>2605	ArgumentList	 
>2606	Callee	Channel . GetName
>2607	MemberAccess	Channel . GetName
>2608	Identifier	GetName
>2609	Identifier	Channel
>2610	PrimaryExpression	\"\"
>2611	CallExpression	Nick . GetHostMask ( )
>2612	ArgumentList	 
>2613	Callee	Nick . GetHostMask
>2614	MemberAccess	Nick . GetHostMask
>2615	Identifier	GetHostMask
>2616	Identifier	Nick
>2617	Identifier	sMessage
>2618	CallExpression	getNetworkName ( )
>2619	ArgumentList	 
>2620	Callee	getNetworkName
>2621	Identifier	getNetworkName
>2622	CallExpression	getUserName ( )
>2623	ArgumentList	 
>2624	Callee	getUserName
>2625	Identifier	getUserName
>2626	Identifier	logentry 
>2627	CallExpression	nowTime ( )
>2628	ArgumentList	 
>2629	Callee	nowTime
>2630	Identifier	nowTime
>2631	Identifier	log
>2632	IdentifierDeclType	logentry
>2633	IdentifierDeclStatement	odb 
>2634	IdentifierDecl	t ( DB . begin ( ) )
>2635	CallExpression	DB . begin ( )
>2636	ArgumentList	 
>2637	Callee	DB . begin
>2638	MemberAccess	DB . begin
>2639	Identifier	begin
>2640	Identifier	DB
>2641	Identifier	t
>2642	IdentifierDeclType	odb 
>2658	FunctionDef	FormatServerTime (time_t secs)
>2659	ParameterList	time_t secs
>2660	Parameter	 
>2661	Identifier	secs
>2662	ParameterType	time_t
>2663	ReturnType	static CString
>2664	CompoundStatement	 
>2665	ReturnStatement	 
>2666	AdditiveExpression	CString ( sTime ) + \".000Z\"
>2667	PrimaryExpression	\".000Z\"
>2668	CallExpression	CString ( sTime )
>2669	ArgumentList	sTime
>2670	Argument	sTime
>2671	Identifier	sTime
>2672	Callee	CString
>2673	Identifier	CString
>2674	ExpressionStatement	 
>2675	CallExpression	strftime ( sTime , 64 , \"%Y-%m-%dT%H
>2676	ArgumentList	sTime
>2677	Argument	& stm
>2678	UnaryOp	& stm
>2679	Identifier	stm
>2680	UnaryOperator	&
>2681	Argument	\"%Y-%m-%dT%H
>2682	PrimaryExpression	\"%Y-%m-%dT%H
>2683	Argument	64
>2684	PrimaryExpression	64
>2685	Argument	sTime
>2686	Identifier	sTime
>2687	Callee	strftime
>2688	Identifier	strftime
>2689	ExpressionStatement	 
>2690	CompoundStatement	 
>2691	Statement	 
>2692	Statement	 
>2693	Statement	 
>2694	Statement	 
>2695	Statement	 
>2696	Statement	 
>2697	ExpressionStatement	 
>2698	CallExpression	gmtime_r ( & secs , & stm )
>2699	ArgumentList	& secs
>2700	Argument	& stm
>2701	UnaryOp	& stm
>2702	Identifier	stm
>2703	UnaryOperator	&
>2704	Argument	& secs
>2705	UnaryOp	& secs
>2706	Identifier	secs
>2707	UnaryOperator	&
>2708	Callee	gmtime_r
>2709	Identifier	gmtime_r
>2710	ExpressionStatement	 
>2711	CallExpression	memset ( & stm , 0 , sizeof ( stm ) )
>2712	ArgumentList	& stm
>2713	Argument	sizeof ( stm )
>2714	SizeofExpr	sizeof ( stm )
>2715	SizeofOperand	stm
>2716	Sizeof	sizeof
>2717	Argument	0
>2718	PrimaryExpression	0
>2719	Argument	& stm
>2720	UnaryOp	& stm
>2721	Identifier	stm
>2722	UnaryOperator	&
>2723	Callee	memset
>2724	Identifier	memset
>2725	IdentifierDeclStatement	 
>2726	IdentifierDecl	stm
>2727	Identifier	stm
>2728	IdentifierDeclType	struct tm
>2738	FunctionDef	FormatTimestamp (time_t secs)
>2739	ParameterList	time_t secs
>2740	Parameter	 
>2741	Identifier	secs
>2742	ParameterType	time_t
>2743	ReturnType	static CString
>2744	CompoundStatement	 
>2745	ReturnStatement	 
>2746	CallExpression	CString ( sTime )
>2747	ArgumentList	sTime
>2748	Argument	sTime
>2749	Identifier	sTime
>2750	Callee	CString
>2751	Identifier	CString
>2752	ExpressionStatement	 
>2753	CallExpression	strftime ( sTime , 64 , \"%H
>2754	ArgumentList	sTime
>2755	Argument	& stm
>2756	UnaryOp	& stm
>2757	Identifier	stm
>2758	UnaryOperator	&
>2759	Argument	\"%H
>2760	PrimaryExpression	\"%H
>2761	Argument	64
>2762	PrimaryExpression	64
>2763	Argument	sTime
>2764	Identifier	sTime
>2765	Callee	strftime
>2766	Identifier	strftime
>2767	ExpressionStatement	 
>2768	CompoundStatement	 
>2769	Statement	 
>2770	Statement	 
>2771	Statement	 
>2772	Statement	 
>2773	Statement	 
>2774	Statement	 
>2775	ExpressionStatement	 
>2776	CallExpression	gmtime_r ( & secs , & stm )
>2777	ArgumentList	& secs
>2778	Argument	& stm
>2779	UnaryOp	& stm
>2780	Identifier	stm
>2781	UnaryOperator	&
>2782	Argument	& secs
>2783	UnaryOp	& secs
>2784	Identifier	secs
>2785	UnaryOperator	&
>2786	Callee	gmtime_r
>2787	Identifier	gmtime_r
>2788	ExpressionStatement	 
>2789	CallExpression	memset ( & stm , 0 , sizeof ( stm ) )
>2790	ArgumentList	& stm
>2791	Argument	sizeof ( stm )
>2792	SizeofExpr	sizeof ( stm )
>2793	SizeofOperand	stm
>2794	Sizeof	sizeof
>2795	Argument	0
>2796	PrimaryExpression	0
>2797	Argument	& stm
>2798	UnaryOp	& stm
>2799	Identifier	stm
>2800	UnaryOperator	&
>2801	Callee	memset
>2802	Identifier	memset
>2803	IdentifierDeclStatement	 
>2804	IdentifierDecl	stm
>2805	Identifier	stm
>2806	IdentifierDeclType	struct tm
>2816	FunctionDef	SqlLogMod 
>2817	ParameterList	const logentry & log
>2818	Parameter	 
>2819	Identifier	log
>2820	ParameterType	const logentry &
>2821	ReturnType	void
>2822	CompoundStatement	 
>2823	SwitchStatement	switch ( log . type ( ) )
>2824	CompoundStatement	 
>2825	BreakStatement	 
>2826	Label	 
>2827	Identifier	default
>2828	BreakStatement	 
>2829	ExpressionStatement	 
>2830	CallExpression	PutUser ( strm . str ( ) )
>2831	ArgumentList	strm . str ( )
>2832	Argument	strm . str ( )
>2833	CallExpression	strm . str ( )
>2834	ArgumentList	 
>2835	Callee	strm . str
>2836	MemberAccess	strm . str
>2837	Identifier	str
>2838	Identifier	strm
>2839	Callee	PutUser
>2840	Identifier	PutUser
>2841	IfStatement	if ( log . type ( ) == logentry 
>2842	ElseStatement	else
>2843	IfStatement	if ( log . type ( ) == logentry 
>2844	ElseStatement	else
>2845	IfStatement	if ( log . type ( ) == logentry 
>2846	ElseStatement	else
>2847	IfStatement	if ( log . type ( ) == logentry 
>2848	ElseStatement	else
>2849	IfStatement	if ( log . type ( ) == logentry 
>2850	ElseStatement	else
>2851	CompoundStatement	 
>2852	ReturnStatement	 
>2853	CompoundStatement	 
>2854	ExpressionStatement	 
>2855	ShiftExpression	strm << log . from ( ) << \" has changed nick to
>2856	ShiftExpression	log . from ( ) << \" has changed nick to
>2857	ShiftExpression	\" has changed nick to
>2858	CallExpression	log . to ( )
>2859	ArgumentList	 
>2860	Callee	log . to
>2861	MemberAccess	log . to
>2862	Identifier	to
>2863	Identifier	log
>2864	PrimaryExpression	\" has changed nick to
>2865	CallExpression	log . from ( )
>2866	ArgumentList	 
>2867	Callee	log . from
>2868	MemberAccess	log . from
>2869	Identifier	from
>2870	Identifier	log
>2871	Identifier	strm
>2872	Condition	 
>2873	EqualityExpression	log . type ( ) == logentry 
>2874	Identifier	logentry 
>2875	CallExpression	log . type ( )
>2876	ArgumentList	 
>2877	Callee	log . type
>2878	MemberAccess	log . type
>2879	Identifier	type
>2880	Identifier	log
>2881	CompoundStatement	 
>2882	ExpressionStatement	 
>2883	ShiftExpression	strm << log . from ( ) << \" has joined\"
>2884	ShiftExpression	log . from ( ) << \" has joined\"
>2885	PrimaryExpression	\" has joined\"
>2886	CallExpression	log . from ( )
>2887	ArgumentList	 
>2888	Callee	log . from
>2889	MemberAccess	log . from
>2890	Identifier	from
>2891	Identifier	log
>2892	Identifier	strm
>2893	Condition	 
>2894	EqualityExpression	log . type ( ) == logentry 
>2895	Identifier	logentry 
>2896	CallExpression	log . type ( )
>2897	ArgumentList	 
>2898	Callee	log . type
>2899	MemberAccess	log . type
>2900	Identifier	type
>2901	Identifier	log
>2902	CompoundStatement	 
>2903	ExpressionStatement	 
>2904	ShiftExpression	strm << log . from ( ) << \" has left
>2905	ShiftExpression	log . from ( ) << \" has left
>2906	ShiftExpression	\" has left
>2907	ShiftExpression	log . msg ( ) << \"]\"
>2908	PrimaryExpression	\"]\"
>2909	CallExpression	log . msg ( )
>2910	ArgumentList	 
>2911	Callee	log . msg
>2912	MemberAccess	log . msg
>2913	Identifier	msg
>2914	Identifier	log
>2915	PrimaryExpression	\" has left
>2916	CallExpression	log . from ( )
>2917	ArgumentList	 
>2918	Callee	log . from
>2919	MemberAccess	log . from
>2920	Identifier	from
>2921	Identifier	log
>2922	Identifier	strm
>2923	Condition	 
>2924	EqualityExpression	log . type ( ) == logentry 
>2925	Identifier	logentry 
>2926	CallExpression	log . type ( )
>2927	ArgumentList	 
>2928	Callee	log . type
>2929	MemberAccess	log . type
>2930	Identifier	type
>2931	Identifier	log
>2932	CompoundStatement	 
>2933	ExpressionStatement	 
>2934	ShiftExpression	strm << log . from ( ) << \" has quit
>2935	ShiftExpression	log . from ( ) << \" has quit
>2936	ShiftExpression	\" has quit
>2937	ShiftExpression	log . msg ( ) << \"]\"
>2938	PrimaryExpression	\"]\"
>2939	CallExpression	log . msg ( )
>2940	ArgumentList	 
>2941	Callee	log . msg
>2942	MemberAccess	log . msg
>2943	Identifier	msg
>2944	Identifier	log
>2945	PrimaryExpression	\" has quit
>2946	CallExpression	log . from ( )
>2947	ArgumentList	 
>2948	Callee	log . from
>2949	MemberAccess	log . from
>2950	Identifier	from
>2951	Identifier	log
>2952	Identifier	strm
>2953	Condition	 
>2954	EqualityExpression	log . type ( ) == logentry 
>2955	Identifier	logentry 
>2956	CallExpression	log . type ( )
>2957	ArgumentList	 
>2958	Callee	log . type
>2959	MemberAccess	log . type
>2960	Identifier	type
>2961	Identifier	log
>2962	CompoundStatement	 
>2963	ExpressionStatement	 
>2964	ShiftExpression	strm << log . to ( ) << \" was kicked by \" << log . from ( ) << \"
>2965	ShiftExpression	log . to ( ) << \" was kicked by \" << log . from ( ) << \"
>2966	ShiftExpression	\" was kicked by \" << log . from ( ) << \"
>2967	ShiftExpression	log . from ( ) << \"
>2968	ShiftExpression	\"
>2969	ShiftExpression	log . msg ( ) << \"]\"
>2970	PrimaryExpression	\"]\"
>2971	CallExpression	log . msg ( )
>2972	ArgumentList	 
>2973	Callee	log . msg
>2974	MemberAccess	log . msg
>2975	Identifier	msg
>2976	Identifier	log
>2977	PrimaryExpression	\"
>2978	CallExpression	log . from ( )
>2979	ArgumentList	 
>2980	Callee	log . from
>2981	MemberAccess	log . from
>2982	Identifier	from
>2983	Identifier	log
>2984	PrimaryExpression	\" was kicked by \"
>2985	CallExpression	log . to ( )
>2986	ArgumentList	 
>2987	Callee	log . to
>2988	MemberAccess	log . to
>2989	Identifier	to
>2990	Identifier	log
>2991	Identifier	strm
>2992	Condition	 
>2993	EqualityExpression	log . type ( ) == logentry 
>2994	Identifier	logentry 
>2995	CallExpression	log . type ( )
>2996	ArgumentList	 
>2997	Callee	log . type
>2998	MemberAccess	log . type
>2999	Identifier	type
>3000	Identifier	log
>3001	ExpressionStatement	 
>3002	ShiftExpression	strm << \"
>3003	ShiftExpression	\"
>3004	ShiftExpression	log . channel ( ) << \" 
>3005	ShiftExpression	\" 
>3006	Identifier	timestamp
>3007	PrimaryExpression	\" 
>3008	CallExpression	log . channel ( )
>3009	ArgumentList	 
>3010	Callee	log . channel
>3011	MemberAccess	log . channel
>3012	Identifier	channel
>3013	Identifier	log
>3014	PrimaryExpression	\"
>3015	Identifier	strm
>3016	Label	 
>3017	Identifier	logentry 
>3018	Label	 
>3019	Identifier	logentry 
>3020	Label	 
>3021	Identifier	logentry 
>3022	Label	 
>3023	Identifier	logentry 
>3024	Label	 
>3025	Identifier	logentry 
>3026	BreakStatement	 
>3027	ExpressionStatement	 
>3028	CallExpression	PutUser ( strm . str ( ) )
>3029	ArgumentList	strm . str ( )
>3030	Argument	strm . str ( )
>3031	CallExpression	strm . str ( )
>3032	ArgumentList	 
>3033	Callee	strm . str
>3034	MemberAccess	strm . str
>3035	Identifier	str
>3036	Identifier	strm
>3037	Callee	PutUser
>3038	Identifier	PutUser
>3039	IfStatement	if ( log . type ( ) == logentry 
>3040	CompoundStatement	 
>3041	ExpressionStatement	 
>3042	ShiftExpression	strm << \"\x01\"
>3043	PrimaryExpression	\"\x01\"
>3044	Identifier	strm
>3045	Condition	 
>3046	OrExpression	log . type ( ) == logentry 
>3047	EqualityExpression	log . type ( ) == logentry 
>3048	Identifier	logentry 
>3049	CallExpression	log . type ( )
>3050	ArgumentList	 
>3051	Callee	log . type
>3052	MemberAccess	log . type
>3053	Identifier	type
>3054	Identifier	log
>3055	EqualityExpression	log . type ( ) == logentry 
>3056	Identifier	logentry 
>3057	CallExpression	log . type ( )
>3058	ArgumentList	 
>3059	Callee	log . type
>3060	MemberAccess	log . type
>3061	Identifier	type
>3062	Identifier	log
>3063	ExpressionStatement	 
>3064	ShiftExpression	strm << timestamp << log . msg ( )
>3065	ShiftExpression	timestamp << log . msg ( )
>3066	CallExpression	log . msg ( )
>3067	ArgumentList	 
>3068	Callee	log . msg
>3069	MemberAccess	log . msg
>3070	Identifier	msg
>3071	Identifier	log
>3072	Identifier	timestamp
>3073	Identifier	strm
>3074	IfStatement	if ( log . type ( ) == logentry 
>3075	CompoundStatement	 
>3076	ExpressionStatement	 
>3077	PrimaryExpression	\"ACTION \"
>3078	Statement	 
>3079	Statement	 
>3080	Statement	 
>3081	Condition	 
>3082	OrExpression	log . type ( ) == logentry 
>3083	EqualityExpression	log . type ( ) == logentry 
>3084	Identifier	logentry 
>3085	CallExpression	log . type ( )
>3086	ArgumentList	 
>3087	Callee	log . type
>3088	MemberAccess	log . type
>3089	Identifier	type
>3090	Identifier	log
>3091	EqualityExpression	log . type ( ) == logentry 
>3092	Identifier	logentry 
>3093	CallExpression	log . type ( )
>3094	ArgumentList	 
>3095	Callee	log . type
>3096	MemberAccess	log . type
>3097	Identifier	type
>3098	Identifier	log
>3099	IfStatement	if ( log . channel ( ) . size ( ) > 0 )
>3100	ElseStatement	else
>3101	IfStatement	if ( log . type ( ) == logentry 
>3102	ElseStatement	else
>3103	CompoundStatement	 
>3104	ReturnStatement	 
>3105	CompoundStatement	 
>3106	ExpressionStatement	 
>3107	ShiftExpression	strm << GetUser ( ) -> GetNick ( ) << \" 
>3108	ShiftExpression	GetUser ( ) -> GetNick ( ) << \" 
>3109	PrimaryExpression	\" 
>3110	CallExpression	GetUser ( ) -> GetNick ( )
>3111	ArgumentList	 
>3112	Callee	GetUser ( ) -> GetNick
>3113	PtrMemberAccess	GetUser ( ) -> GetNick
>3114	Identifier	GetNick
>3115	CallExpression	GetUser ( )
>3116	ArgumentList	 
>3117	Callee	GetUser
>3118	Identifier	GetUser
>3119	Identifier	strm
>3120	Condition	 
>3121	OrExpression	log . type ( ) == logentry 
>3122	OrExpression	log . type ( ) == logentry 
>3123	EqualityExpression	log . type ( ) == logentry 
>3124	Identifier	logentry 
>3125	CallExpression	log . type ( )
>3126	ArgumentList	 
>3127	Callee	log . type
>3128	MemberAccess	log . type
>3129	Identifier	type
>3130	Identifier	log
>3131	EqualityExpression	log . type ( ) == logentry 
>3132	Identifier	logentry 
>3133	CallExpression	log . type ( )
>3134	ArgumentList	 
>3135	Callee	log . type
>3136	MemberAccess	log . type
>3137	Identifier	type
>3138	Identifier	log
>3139	EqualityExpression	log . type ( ) == logentry 
>3140	Identifier	logentry 
>3141	CallExpression	log . type ( )
>3142	ArgumentList	 
>3143	Callee	log . type
>3144	MemberAccess	log . type
>3145	Identifier	type
>3146	Identifier	log
>3147	CompoundStatement	 
>3148	ExpressionStatement	 
>3149	ShiftExpression	strm << log . channel ( ) << \" 
>3150	ShiftExpression	log . channel ( ) << \" 
>3151	PrimaryExpression	\" 
>3152	CallExpression	log . channel ( )
>3153	ArgumentList	 
>3154	Callee	log . channel
>3155	MemberAccess	log . channel
>3156	Identifier	channel
>3157	Identifier	log
>3158	Identifier	strm
>3159	Condition	 
>3160	RelationalExpression	log . channel ( ) . size ( ) > 0
>3161	PrimaryExpression	0
>3162	CallExpression	log . channel ( ) . size ( )
>3163	ArgumentList	 
>3164	Callee	log . channel ( ) . size
>3165	MemberAccess	log . channel ( ) . size
>3166	Identifier	size
>3167	CallExpression	log . channel ( )
>3168	ArgumentList	 
>3169	Callee	log . channel
>3170	MemberAccess	log . channel
>3171	Identifier	channel
>3172	Identifier	log
>3173	IfStatement	if ( log . type ( ) == logentry 
>3174	ElseStatement	else
>3175	CompoundStatement	 
>3176	ExpressionStatement	 
>3177	ShiftExpression	strm << \" PRIVMSG \"
>3178	PrimaryExpression	\" PRIVMSG \"
>3179	Identifier	strm
>3180	CompoundStatement	 
>3181	ExpressionStatement	 
>3182	ShiftExpression	strm << \" NOTICE \"
>3183	PrimaryExpression	\" NOTICE \"
>3184	Identifier	strm
>3185	Condition	 
>3186	OrExpression	log . type ( ) == logentry 
>3187	EqualityExpression	log . type ( ) == logentry 
>3188	Identifier	logentry 
>3189	CallExpression	log . type ( )
>3190	ArgumentList	 
>3191	Callee	log . type
>3192	MemberAccess	log . type
>3193	Identifier	type
>3194	Identifier	log
>3195	EqualityExpression	log . type ( ) == logentry 
>3196	Identifier	logentry 
>3197	CallExpression	log . type ( )
>3198	ArgumentList	 
>3199	Callee	log . type
>3200	MemberAccess	log . type
>3201	Identifier	type
>3202	Identifier	log
>3203	ExpressionStatement	 
>3204	ShiftExpression	strm << \"
>3205	ShiftExpression	\"
>3206	CallExpression	log . from ( )
>3207	ArgumentList	 
>3208	Callee	log . from
>3209	MemberAccess	log . from
>3210	Identifier	from
>3211	Identifier	log
>3212	PrimaryExpression	\"
>3213	Identifier	strm
>3214	Label	 
>3215	Identifier	logentry 
>3216	Label	 
>3217	Identifier	logentry 
>3218	Label	 
>3219	Identifier	logentry 
>3220	Label	 
>3221	Identifier	logentry 
>3222	Label	 
>3223	Identifier	logentry 
>3224	Label	 
>3225	Identifier	logentry 
>3226	Condition	 
>3227	CallExpression	log . type ( )
>3228	ArgumentList	 
>3229	Callee	log . type
>3230	MemberAccess	log . type
>3231	Identifier	type
>3232	Identifier	log
>3233	IfStatement	if ( GetClient ( ) && GetClient ( ) -> HasServerTime ( ) )
>3234	ElseStatement	else
>3235	CompoundStatement	 
>3236	ExpressionStatement	 
>3237	AssignmentExpr	timestamp += \"] \"
>3238	PrimaryExpression	\"] \"
>3239	Identifier	timestamp
>3240	ExpressionStatement	 
>3241	AssignmentExpr	timestamp += FormatTimestamp ( log . timestamp ( ) )
>3242	CallExpression	FormatTimestamp ( log . timestamp ( ) )
>3243	ArgumentList	log . timestamp ( )
>3244	Argument	log . timestamp ( )
>3245	CallExpression	log . timestamp ( )
>3246	ArgumentList	 
>3247	Callee	log . timestamp
>3248	MemberAccess	log . timestamp
>3249	Identifier	timestamp
>3250	Identifier	log
>3251	Callee	FormatTimestamp
>3252	Identifier	FormatTimestamp
>3253	Identifier	timestamp
>3254	ExpressionStatement	 
>3255	AssignmentExpr	timestamp = \"[\"
>3256	PrimaryExpression	\"[\"
>3257	Identifier	timestamp
>3258	CompoundStatement	 
>3259	ExpressionStatement	 
>3260	AssignmentExpr	timestamp = \"\"
>3261	PrimaryExpression	\"\"
>3262	Identifier	timestamp
>3263	ExpressionStatement	 
>3264	ShiftExpression	FormatServerTime ( log . timestamp ( ) ) << \" \"
>3265	PrimaryExpression	\" \"
>3266	CallExpression	FormatServerTime ( log . timestamp ( ) )
>3267	ArgumentList	log . timestamp ( )
>3268	Argument	log . timestamp ( )
>3269	CallExpression	log . timestamp ( )
>3270	ArgumentList	 
>3271	Callee	log . timestamp
>3272	MemberAccess	log . timestamp
>3273	Identifier	timestamp
>3274	Identifier	log
>3275	Callee	FormatServerTime
>3276	Identifier	FormatServerTime
>3277	Statement	 
>3278	Statement	 
>3279	Statement	 
>3280	Statement	 
>3281	Statement	 
>3282	Condition	 
>3283	AndExpression	GetClient ( ) && GetClient ( ) -> HasServerTime ( )
>3284	CallExpression	GetClient ( ) -> HasServerTime ( )
>3285	ArgumentList	 
>3286	Callee	GetClient ( ) -> HasServerTime
>3287	PtrMemberAccess	GetClient ( ) -> HasServerTime
>3288	Identifier	HasServerTime
>3289	CallExpression	GetClient ( )
>3290	ArgumentList	 
>3291	Callee	GetClient
>3292	Identifier	GetClient
>3293	CallExpression	GetClient ( )
>3294	ArgumentList	 
>3295	Callee	GetClient
>3296	Identifier	GetClient
>3297	IdentifierDeclStatement	 
>3298	IdentifierDecl	timestamp
>3299	Identifier	timestamp
>3300	IdentifierDeclType	std 
>3301	IdentifierDeclStatement	 
>3302	IdentifierDecl	strm
>3303	Identifier	strm
>3304	IdentifierDeclType	std 
>3331	FunctionDef	SqlLogMod 
>3332	ParameterList	const clientid & cid
>3333	Parameter	 
>3334	Identifier	cid
>3335	ParameterType	const clientid &
>3336	ReturnType	void
>3337	CompoundStatement	 
>3338	BlockStarter	 
>3339	CompoundStatement	 
>3340	ExpressionStatement	PutModule ( e . what ( ) )
>3341	CallExpression	PutModule ( e . what ( ) )
>3342	ArgumentList	e . what ( )
>3343	Argument	e . what ( )
>3344	CallExpression	e . what ( )
>3345	ArgumentList	 
>3346	Callee	e . what
>3347	MemberAccess	e . what
>3348	Identifier	what
>3349	Identifier	e
>3350	Callee	PutModule
>3351	Identifier	PutModule
>3352	Identifier	e
>3353	BlockStarter	 
>3354	CompoundStatement	 
>3355	ExpressionStatement	t . commit ( )
>3356	CallExpression	t . commit ( )
>3357	ArgumentList	 
>3358	Callee	t . commit
>3359	MemberAccess	t . commit
>3360	Identifier	commit
>3361	Identifier	t
>3362	BlockStarter	catch ( const odb 
>3363	CompoundStatement	 
>3364	ExpressionStatement	DB . persist ( c )
>3365	CallExpression	DB . persist ( c )
>3366	ArgumentList	c
>3367	Argument	c
>3368	Identifier	c
>3369	Callee	DB . persist
>3370	MemberAccess	DB . persist
>3371	Identifier	persist
>3372	Identifier	DB
>3373	ExpressionStatement	c = std 
>3374	AssignmentExpr	c = std 
>3375	RelationalExpression	std 
>3376	RelationalExpression	cliententry > ( cid , now )
>3377	Expression	cid , now
>3378	Identifier	now
>3379	Identifier	cid
>3380	Identifier	cliententry
>3381	Identifier	std 
>3382	Identifier	c
>3383	ExpressionStatement	PutModNotice ( CString ( \"Registering new client
>3384	CallExpression	PutModNotice ( CString ( \"Registering new client
>3385	ArgumentList	CString ( \"Registering new client
>3386	Argument	CString ( \"Registering new client
>3387	AdditiveExpression	CString ( \"Registering new client
>3388	MemberAccess	cid . id
>3389	Identifier	id
>3390	Identifier	cid
>3391	CallExpression	CString ( \"Registering new client
>3392	ArgumentList	\"Registering new client
>3393	Argument	\"Registering new client
>3394	PrimaryExpression	\"Registering new client
>3395	Callee	CString
>3396	Identifier	CString
>3397	Callee	PutModNotice
>3398	Identifier	PutModNotice
>3399	Identifier	np
>3400	BlockStarter	try
>3401	CompoundStatement	 
>3402	ExpressionStatement	DB . update ( c )
>3403	CallExpression	DB . update ( c )
>3404	ArgumentList	c
>3405	Argument	c
>3406	Identifier	c
>3407	Callee	DB . update
>3408	MemberAccess	DB . update
>3409	Identifier	update
>3410	Identifier	DB
>3411	ExpressionStatement	c -> setTimestamp ( now )
>3412	CallExpression	c -> setTimestamp ( now )
>3413	ArgumentList	now
>3414	Argument	now
>3415	Identifier	now
>3416	Callee	c -> setTimestamp
>3417	PtrMemberAccess	c -> setTimestamp
>3418	Identifier	setTimestamp
>3419	Identifier	c
>3420	ExpressionStatement	PutModNotice ( CString ( \"Updating client
>3421	CallExpression	PutModNotice ( CString ( \"Updating client
>3422	ArgumentList	CString ( \"Updating client
>3423	Argument	CString ( \"Updating client
>3424	AdditiveExpression	CString ( \"Updating client
>3425	MemberAccess	cid . id
>3426	Identifier	id
>3427	Identifier	cid
>3428	CallExpression	CString ( \"Updating client
>3429	ArgumentList	\"Updating client
>3430	Argument	\"Updating client
>3431	PrimaryExpression	\"Updating client
>3432	Callee	CString
>3433	Identifier	CString
>3434	Callee	PutModNotice
>3435	Identifier	PutModNotice
>3436	ExpressionStatement	c = DB . load < cliententry > ( cid )
>3437	AssignmentExpr	c = DB . load < cliententry > ( cid )
>3438	RelationalExpression	DB . load < cliententry > ( cid )
>3439	RelationalExpression	cliententry > ( cid )
>3440	Identifier	cid
>3441	Identifier	cliententry
>3442	MemberAccess	DB . load
>3443	Identifier	load
>3444	Identifier	DB
>3445	Identifier	c
>3446	IdentifierDeclStatement	std 
>3447	IdentifierDecl	c
>3448	Identifier	c
>3449	IdentifierDeclType	std 
>3450	IdentifierDeclStatement	odb 
>3451	IdentifierDecl	t ( DB . begin ( ) )
>3452	CallExpression	DB . begin ( )
>3453	ArgumentList	 
>3454	Callee	DB . begin
>3455	MemberAccess	DB . begin
>3456	Identifier	begin
>3457	Identifier	DB
>3458	Identifier	t
>3459	IdentifierDeclType	odb 
>3460	IdentifierDeclStatement	int64_t now = nowTime ( ) ;
>3461	IdentifierDecl	now = nowTime ( )
>3462	AssignmentExpr	now = nowTime ( )
>3463	CallExpression	nowTime ( )
>3464	ArgumentList	 
>3465	Callee	nowTime
>3466	Identifier	nowTime
>3467	Identifier	now
>3468	Identifier	now
>3469	IdentifierDeclType	int64_t
>3486	FunctionDef	SqlLogMod 
>3487	ParameterList	const CString & cmd
>3488	Parameter	 
>3489	Identifier	cmd
>3490	ParameterType	const CString &
>3491	ReturnType	void
>3492	CompoundStatement	 
>3493	BlockStarter	 
>3494	CompoundStatement	 
>3495	ExpressionStatement	PutModule ( e . what ( ) )
>3496	CallExpression	PutModule ( e . what ( ) )
>3497	ArgumentList	e . what ( )
>3498	Argument	e . what ( )
>3499	CallExpression	e . what ( )
>3500	ArgumentList	 
>3501	Callee	e . what
>3502	MemberAccess	e . what
>3503	Identifier	what
>3504	Identifier	e
>3505	Callee	PutModule
>3506	Identifier	PutModule
>3507	Identifier	e
>3508	BlockStarter	 
>3509	CompoundStatement	 
>3510	ExpressionStatement	t . commit ( )
>3511	CallExpression	t . commit ( )
>3512	ArgumentList	 
>3513	Callee	t . commit
>3514	MemberAccess	t . commit
>3515	Identifier	commit
>3516	Identifier	t
>3517	CompoundStatement	 
>3518	ExpressionStatement	replayLog ( log )
>3519	CallExpression	replayLog ( log )
>3520	ArgumentList	log
>3521	Argument	log
>3522	Identifier	log
>3523	Callee	replayLog
>3524	Identifier	replayLog
>3525	Statement	)
>3526	Statement	r
>3527	Label	log 
>3528	Identifier	log
>3529	Statement	&
>3530	Statement	logentry
>3531	Statement	const
>3532	Statement	(
>3533	Statement	for
>3534	IdentifierDeclStatement	log_result r ( DB . query < logentry > ( log_query 
>3535	IdentifierDecl	r ( DB . query < logentry > ( log_query 
>3536	RelationalExpression	DB . query < logentry > ( log_query 
>3537	RelationalExpression	logentry > ( log_query 
>3538	AndExpression	log_query 
>3539	AndExpression	( log_query 
>3540	AndExpression	log_query 
>3541	RelationalExpression	log_query 
>3542	Identifier	ts
>3543	Identifier	log_query 
>3544	EqualityExpression	log_query 
>3545	Identifier	ch
>3546	Identifier	log_query 
>3547	OrExpression	log_query 
>3548	EqualityExpression	log_query 
>3549	PrimaryExpression	\"global\"
>3550	Identifier	log_query 
>3551	EqualityExpression	log_query 
>3552	CallExpression	getUserName ( )
>3553	ArgumentList	 
>3554	Callee	getUserName
>3555	Identifier	getUserName
>3556	Identifier	log_query 
>3557	EqualityExpression	log_query 
>3558	CallExpression	GetNetwork ( ) -> GetName ( )
>3559	ArgumentList	 
>3560	Callee	GetNetwork ( ) -> GetName
>3561	PtrMemberAccess	GetNetwork ( ) -> GetName
>3562	Identifier	GetName
>3563	CallExpression	GetNetwork ( )
>3564	ArgumentList	 
>3565	Callee	GetNetwork
>3566	Identifier	GetNetwork
>3567	Identifier	log_query 
>3568	Identifier	logentry
>3569	MemberAccess	DB . query
>3570	Identifier	query
>3571	Identifier	DB
>3572	Identifier	r
>3573	IdentifierDeclType	log_result
>3574	IdentifierDeclStatement	odb 
>3575	IdentifierDecl	t ( DB . begin ( ) )
>3576	CallExpression	DB . begin ( )
>3577	ArgumentList	 
>3578	Callee	DB . begin
>3579	MemberAccess	DB . begin
>3580	Identifier	begin
>3581	Identifier	DB
>3582	Identifier	t
>3583	IdentifierDeclType	odb 
>3584	IfStatement	if ( args . size ( ) >= 3 )
>3585	CompoundStatement	 
>3586	ExpressionStatement	ts = args [ 2 ] . ToLongLong ( )
>3587	AssignmentExpr	ts = args [ 2 ] . ToLongLong ( )
>3588	CallExpression	args [ 2 ] . ToLongLong ( )
>3589	ArgumentList	 
>3590	Callee	args [ 2 ] . ToLongLong
>3591	MemberAccess	args [ 2 ] . ToLongLong
>3592	Identifier	ToLongLong
>3593	ArrayIndexing	args [ 2 ]
>3594	PrimaryExpression	2
>3595	Identifier	args
>3596	Identifier	ts
>3597	Condition	args . size ( ) >= 3
>3598	RelationalExpression	args . size ( ) >= 3
>3599	PrimaryExpression	3
>3600	CallExpression	args . size ( )
>3601	ArgumentList	 
>3602	Callee	args . size
>3603	MemberAccess	args . size
>3604	Identifier	size
>3605	Identifier	args
>3606	IdentifierDeclStatement	int64_t ts = 0 ;
>3607	IdentifierDecl	ts = 0
>3608	AssignmentExpr	ts = 0
>3609	PrimaryExpression	0
>3610	Identifier	ts
>3611	Identifier	ts
>3612	IdentifierDeclType	int64_t
>3613	IdentifierDeclStatement	CString ch = args [ 1 ] ;
>3614	IdentifierDecl	ch = args [ 1 ]
>3615	AssignmentExpr	ch = args [ 1 ]
>3616	ArrayIndexing	args [ 1 ]
>3617	PrimaryExpression	1
>3618	Identifier	args
>3619	Identifier	ch
>3620	Identifier	ch
>3621	IdentifierDeclType	CString
>3622	IfStatement	if ( args . size ( ) < 2 || args . size ( ) > 3 )
>3623	CompoundStatement	 
>3624	ReturnStatement	return ;
>3625	ExpressionStatement	PutModule ( \"Invalid GetChannelCommand arguments\" )
>3626	CallExpression	PutModule ( \"Invalid GetChannelCommand arguments\" )
>3627	ArgumentList	\"Invalid GetChannelCommand arguments\"
>3628	Argument	\"Invalid GetChannelCommand arguments\"
>3629	PrimaryExpression	\"Invalid GetChannelCommand arguments\"
>3630	Callee	PutModule
>3631	Identifier	PutModule
>3632	Condition	args . size ( ) < 2 || args . size ( ) > 3
>3633	OrExpression	args . size ( ) < 2 || args . size ( ) > 3
>3634	RelationalExpression	args . size ( ) > 3
>3635	PrimaryExpression	3
>3636	CallExpression	args . size ( )
>3637	ArgumentList	 
>3638	Callee	args . size
>3639	MemberAccess	args . size
>3640	Identifier	size
>3641	Identifier	args
>3642	RelationalExpression	args . size ( ) < 2
>3643	PrimaryExpression	2
>3644	CallExpression	args . size ( )
>3645	ArgumentList	 
>3646	Callee	args . size
>3647	MemberAccess	args . size
>3648	Identifier	size
>3649	Identifier	args
>3650	IfStatement	if ( ! GetUser ( ) )
>3651	CompoundStatement	 
>3652	ReturnStatement	return ;
>3653	ExpressionStatement	PutModule ( \"No user\" )
>3654	CallExpression	PutModule ( \"No user\" )
>3655	ArgumentList	\"No user\"
>3656	Argument	\"No user\"
>3657	PrimaryExpression	\"No user\"
>3658	Callee	PutModule
>3659	Identifier	PutModule
>3660	Condition	! GetUser ( )
>3661	UnaryOp	! GetUser ( )
>3662	CallExpression	GetUser ( )
>3663	ArgumentList	 
>3664	Callee	GetUser
>3665	Identifier	GetUser
>3666	UnaryOperator	!
>3667	IfStatement	if ( ! GetNetwork ( ) )
>3668	CompoundStatement	 
>3669	ReturnStatement	return ;
>3670	ExpressionStatement	PutModule ( \"No network\" )
>3671	CallExpression	PutModule ( \"No network\" )
>3672	ArgumentList	\"No network\"
>3673	Argument	\"No network\"
>3674	PrimaryExpression	\"No network\"
>3675	Callee	PutModule
>3676	Identifier	PutModule
>3677	Condition	! GetNetwork ( )
>3678	UnaryOp	! GetNetwork ( )
>3679	CallExpression	GetNetwork ( )
>3680	ArgumentList	 
>3681	Callee	GetNetwork
>3682	Identifier	GetNetwork
>3683	UnaryOperator	!
>3684	ExpressionStatement	cmd . Split ( \" \" , args , false )
>3685	CallExpression	cmd . Split ( \" \" , args , false )
>3686	ArgumentList	\" \"
>3687	Argument	false
>3688	Identifier	false
>3689	Argument	args
>3690	Identifier	args
>3691	Argument	\" \"
>3692	PrimaryExpression	\" \"
>3693	Callee	cmd . Split
>3694	MemberAccess	cmd . Split
>3695	Identifier	Split
>3696	Identifier	cmd
>3697	IdentifierDeclStatement	VCString args ;
>3698	IdentifierDecl	args
>3699	Identifier	args
>3700	IdentifierDeclType	VCString
>3720	FunctionDef	SqlLogMod 
>3721	ParameterList	const CString & cmd
>3722	Parameter	 
>3723	Identifier	cmd
>3724	ParameterType	const CString &
>3725	ReturnType	void
>3726	CompoundStatement	 
>3727	BlockStarter	 
>3728	CompoundStatement	 
>3729	ExpressionStatement	PutModule ( e . what ( ) )
>3730	CallExpression	PutModule ( e . what ( ) )
>3731	ArgumentList	e . what ( )
>3732	Argument	e . what ( )
>3733	CallExpression	e . what ( )
>3734	ArgumentList	 
>3735	Callee	e . what
>3736	MemberAccess	e . what
>3737	Identifier	what
>3738	Identifier	e
>3739	Callee	PutModule
>3740	Identifier	PutModule
>3741	Identifier	e
>3742	BlockStarter	 
>3743	CompoundStatement	 
>3744	ExpressionStatement	t . commit ( )
>3745	CallExpression	t . commit ( )
>3746	ArgumentList	 
>3747	Callee	t . commit
>3748	MemberAccess	t . commit
>3749	Identifier	commit
>3750	Identifier	t
>3751	CompoundStatement	 
>3752	ExpressionStatement	replayLog ( log )
>3753	CallExpression	replayLog ( log )
>3754	ArgumentList	log
>3755	Argument	log
>3756	Identifier	log
>3757	Callee	replayLog
>3758	Identifier	replayLog
>3759	Statement	)
>3760	Statement	r
>3761	Label	log 
>3762	Identifier	log
>3763	Statement	&
>3764	Statement	logentry
>3765	Statement	const
>3766	Statement	(
>3767	Statement	for
>3768	IdentifierDeclStatement	log_result r ( DB . query < logentry > ( log_query 
>3769	IdentifierDecl	r ( DB . query < logentry > ( log_query 
>3770	RelationalExpression	DB . query < logentry > ( log_query 
>3771	RelationalExpression	logentry > ( log_query 
>3772	AndExpression	log_query 
>3773	AndExpression	( log_query 
>3774	AndExpression	log_query 
>3775	RelationalExpression	log_query 
>3776	Identifier	ts
>3777	Identifier	log_query 
>3778	EqualityExpression	log_query 
>3779	PrimaryExpression	\"\"
>3780	Identifier	log_query 
>3781	OrExpression	log_query 
>3782	EqualityExpression	log_query 
>3783	PrimaryExpression	\"global\"
>3784	Identifier	log_query 
>3785	EqualityExpression	log_query 
>3786	CallExpression	getUserName ( )
>3787	ArgumentList	 
>3788	Callee	getUserName
>3789	Identifier	getUserName
>3790	Identifier	log_query 
>3791	EqualityExpression	log_query 
>3792	CallExpression	GetNetwork ( ) -> GetName ( )
>3793	ArgumentList	 
>3794	Callee	GetNetwork ( ) -> GetName
>3795	PtrMemberAccess	GetNetwork ( ) -> GetName
>3796	Identifier	GetName
>3797	CallExpression	GetNetwork ( )
>3798	ArgumentList	 
>3799	Callee	GetNetwork
>3800	Identifier	GetNetwork
>3801	Identifier	log_query 
>3802	Identifier	logentry
>3803	MemberAccess	DB . query
>3804	Identifier	query
>3805	Identifier	DB
>3806	Identifier	r
>3807	IdentifierDeclType	log_result
>3808	IdentifierDeclStatement	odb 
>3809	IdentifierDecl	t ( DB . begin ( ) )
>3810	CallExpression	DB . begin ( )
>3811	ArgumentList	 
>3812	Callee	DB . begin
>3813	MemberAccess	DB . begin
>3814	Identifier	begin
>3815	Identifier	DB
>3816	Identifier	t
>3817	IdentifierDeclType	odb 
>3818	IfStatement	if ( args . size ( ) >= 2 )
>3819	CompoundStatement	 
>3820	ExpressionStatement	ts = args [ 1 ] . ToLongLong ( )
>3821	AssignmentExpr	ts = args [ 1 ] . ToLongLong ( )
>3822	CallExpression	args [ 1 ] . ToLongLong ( )
>3823	ArgumentList	 
>3824	Callee	args [ 1 ] . ToLongLong
>3825	MemberAccess	args [ 1 ] . ToLongLong
>3826	Identifier	ToLongLong
>3827	ArrayIndexing	args [ 1 ]
>3828	PrimaryExpression	1
>3829	Identifier	args
>3830	Identifier	ts
>3831	Condition	args . size ( ) >= 2
>3832	RelationalExpression	args . size ( ) >= 2
>3833	PrimaryExpression	2
>3834	CallExpression	args . size ( )
>3835	ArgumentList	 
>3836	Callee	args . size
>3837	MemberAccess	args . size
>3838	Identifier	size
>3839	Identifier	args
>3840	IdentifierDeclStatement	int64_t ts = 0 ;
>3841	IdentifierDecl	ts = 0
>3842	AssignmentExpr	ts = 0
>3843	PrimaryExpression	0
>3844	Identifier	ts
>3845	Identifier	ts
>3846	IdentifierDeclType	int64_t
>3847	IfStatement	if ( args . size ( ) < 1 || args . size ( ) > 2 )
>3848	CompoundStatement	 
>3849	ReturnStatement	return ;
>3850	ExpressionStatement	PutModule ( \"Invalid GetPrivMsgs arguments\" )
>3851	CallExpression	PutModule ( \"Invalid GetPrivMsgs arguments\" )
>3852	ArgumentList	\"Invalid GetPrivMsgs arguments\"
>3853	Argument	\"Invalid GetPrivMsgs arguments\"
>3854	PrimaryExpression	\"Invalid GetPrivMsgs arguments\"
>3855	Callee	PutModule
>3856	Identifier	PutModule
>3857	Condition	args . size ( ) < 1 || args . size ( ) > 2
>3858	OrExpression	args . size ( ) < 1 || args . size ( ) > 2
>3859	RelationalExpression	args . size ( ) > 2
>3860	PrimaryExpression	2
>3861	CallExpression	args . size ( )
>3862	ArgumentList	 
>3863	Callee	args . size
>3864	MemberAccess	args . size
>3865	Identifier	size
>3866	Identifier	args
>3867	RelationalExpression	args . size ( ) < 1
>3868	PrimaryExpression	1
>3869	CallExpression	args . size ( )
>3870	ArgumentList	 
>3871	Callee	args . size
>3872	MemberAccess	args . size
>3873	Identifier	size
>3874	Identifier	args
>3875	IfStatement	if ( ! GetUser ( ) )
>3876	CompoundStatement	 
>3877	ReturnStatement	return ;
>3878	ExpressionStatement	PutModule ( \"No user\" )
>3879	CallExpression	PutModule ( \"No user\" )
>3880	ArgumentList	\"No user\"
>3881	Argument	\"No user\"
>3882	PrimaryExpression	\"No user\"
>3883	Callee	PutModule
>3884	Identifier	PutModule
>3885	Condition	! GetUser ( )
>3886	UnaryOp	! GetUser ( )
>3887	CallExpression	GetUser ( )
>3888	ArgumentList	 
>3889	Callee	GetUser
>3890	Identifier	GetUser
>3891	UnaryOperator	!
>3892	IfStatement	if ( ! GetNetwork ( ) )
>3893	CompoundStatement	 
>3894	ReturnStatement	return ;
>3895	ExpressionStatement	PutModule ( \"No network\" )
>3896	CallExpression	PutModule ( \"No network\" )
>3897	ArgumentList	\"No network\"
>3898	Argument	\"No network\"
>3899	PrimaryExpression	\"No network\"
>3900	Callee	PutModule
>3901	Identifier	PutModule
>3902	Condition	! GetNetwork ( )
>3903	UnaryOp	! GetNetwork ( )
>3904	CallExpression	GetNetwork ( )
>3905	ArgumentList	 
>3906	Callee	GetNetwork
>3907	Identifier	GetNetwork
>3908	UnaryOperator	!
>3909	ExpressionStatement	cmd . Split ( \" \" , args , false )
>3910	CallExpression	cmd . Split ( \" \" , args , false )
>3911	ArgumentList	\" \"
>3912	Argument	false
>3913	Identifier	false
>3914	Argument	args
>3915	Identifier	args
>3916	Argument	\" \"
>3917	PrimaryExpression	\" \"
>3918	Callee	cmd . Split
>3919	MemberAccess	cmd . Split
>3920	Identifier	Split
>3921	Identifier	cmd
>3922	IdentifierDeclStatement	VCString args ;
>3923	IdentifierDecl	args
>3924	Identifier	args
>3925	IdentifierDeclType	VCString
>3944	FunctionDef	SqlLogMod 
>3945	ParameterList	const CString & cmd
>3946	Parameter	 
>3947	Identifier	cmd
>3948	ParameterType	const CString &
>3949	ReturnType	void
>3950	CompoundStatement	 
>3951	ExpressionStatement	 
>3952	CallExpression	updateClientId ( cid )
>3953	ArgumentList	cid
>3954	Argument	cid
>3955	Identifier	cid
>3956	Callee	updateClientId
>3957	Identifier	updateClientId
>3958	IdentifierDeclStatement	 
>3959	IdentifierDecl	cid ( args [ 1 ] , GetUser ( ) -> GetUserName ( ) , getNetworkName ( ) )
>3960	Expression	args [ 1 ] , GetUser ( ) -> GetUserName ( ) , getNetworkName ( )
>3961	Expression	GetUser ( ) -> GetUserName ( ) , getNetworkName ( )
>3962	CallExpression	getNetworkName ( )
>3963	ArgumentList	 
>3964	Callee	getNetworkName
>3965	Identifier	getNetworkName
>3966	CallExpression	GetUser ( ) -> GetUserName ( )
>3967	ArgumentList	 
>3968	Callee	GetUser ( ) -> GetUserName
>3969	PtrMemberAccess	GetUser ( ) -> GetUserName
>3970	Identifier	GetUserName
>3971	CallExpression	GetUser ( )
>3972	ArgumentList	 
>3973	Callee	GetUser
>3974	Identifier	GetUser
>3975	ArrayIndexing	args [ 1 ]
>3976	PrimaryExpression	1
>3977	Identifier	args
>3978	Identifier	cid
>3979	IdentifierDeclType	clientid
>3980	IfStatement	if ( args . size ( ) != 2 )
>3981	CompoundStatement	 
>3982	ReturnStatement	 
>3983	ExpressionStatement	 
>3984	CallExpression	PutModule ( \"Invalid UpdateClientTime arguments\" )
>3985	ArgumentList	\"Invalid UpdateClientTime arguments\"
>3986	Argument	\"Invalid UpdateClientTime arguments\"
>3987	PrimaryExpression	\"Invalid UpdateClientTime arguments\"
>3988	Callee	PutModule
>3989	Identifier	PutModule
>3990	Condition	 
>3991	EqualityExpression	args . size ( ) != 2
>3992	PrimaryExpression	2
>3993	CallExpression	args . size ( )
>3994	ArgumentList	 
>3995	Callee	args . size
>3996	MemberAccess	args . size
>3997	Identifier	size
>3998	Identifier	args
>3999	ExpressionStatement	 
>4000	CallExpression	cmd . Split ( \" \" , args , false )
>4001	ArgumentList	\" \"
>4002	Argument	false
>4003	Identifier	false
>4004	Argument	args
>4005	Identifier	args
>4006	Argument	\" \"
>4007	PrimaryExpression	\" \"
>4008	Callee	cmd . Split
>4009	MemberAccess	cmd . Split
>4010	Identifier	Split
>4011	Identifier	cmd
>4012	IdentifierDeclStatement	 
>4013	IdentifierDecl	args
>4014	Identifier	args
>4015	IdentifierDeclType	VCString
>4016	IfStatement	if ( ! GetNetwork ( ) )
>4017	CompoundStatement	 
>4018	ReturnStatement	 
>4019	ExpressionStatement	 
>4020	CallExpression	PutModule ( \"No network\" )
>4021	ArgumentList	\"No network\"
>4022	Argument	\"No network\"
>4023	PrimaryExpression	\"No network\"
>4024	Callee	PutModule
>4025	Identifier	PutModule
>4026	Condition	 
>4027	UnaryOp	! GetNetwork ( )
>4028	CallExpression	GetNetwork ( )
>4029	ArgumentList	 
>4030	Callee	GetNetwork
>4031	Identifier	GetNetwork
>4032	UnaryOperator	!
>4033	IfStatement	if ( ! GetUser ( ) )
>4034	CompoundStatement	 
>4035	ReturnStatement	 
>4036	ExpressionStatement	 
>4037	CallExpression	PutModule ( \"No user\" )
>4038	ArgumentList	\"No user\"
>4039	Argument	\"No user\"
>4040	PrimaryExpression	\"No user\"
>4041	Callee	PutModule
>4042	Identifier	PutModule
>4043	Condition	 
>4044	UnaryOp	! GetUser ( )
>4045	CallExpression	GetUser ( )
>4046	ArgumentList	 
>4047	Callee	GetUser
>4048	Identifier	GetUser
>4049	UnaryOperator	!
>4060	FunctionDef	SqlLogMod 
>4061	ParameterList	const CString & cmd
>4062	Parameter	 
>4063	Identifier	cmd
>4064	ParameterType	const CString &
>4065	ReturnType	void
>4066	CompoundStatement	 
>4067	BlockStarter	 
>4068	CompoundStatement	 
>4069	ExpressionStatement	PutModule ( e . what ( ) )
>4070	CallExpression	PutModule ( e . what ( ) )
>4071	ArgumentList	e . what ( )
>4072	Argument	e . what ( )
>4073	CallExpression	e . what ( )
>4074	ArgumentList	 
>4075	Callee	e . what
>4076	MemberAccess	e . what
>4077	Identifier	what
>4078	Identifier	e
>4079	Callee	PutModule
>4080	Identifier	PutModule
>4081	Identifier	e
>4082	BlockStarter	 
>4083	CompoundStatement	 
>4084	Identifier	np
>4085	BlockStarter	 
>4086	CompoundStatement	 
>4087	ExpressionStatement	GetPrivMsgs ( ocmd . str ( ) )
>4088	CallExpression	GetPrivMsgs ( ocmd . str ( ) )
>4089	ArgumentList	ocmd . str ( )
>4090	Argument	ocmd . str ( )
>4091	CallExpression	ocmd . str ( )
>4092	ArgumentList	 
>4093	Callee	ocmd . str
>4094	MemberAccess	ocmd . str
>4095	Identifier	str
>4096	Identifier	ocmd
>4097	Callee	GetPrivMsgs
>4098	Identifier	GetPrivMsgs
>4099	ExpressionStatement	ocmd << c -> timestamp ( )
>4100	ShiftExpression	ocmd << c -> timestamp ( )
>4101	CallExpression	c -> timestamp ( )
>4102	ArgumentList	 
>4103	Callee	c -> timestamp
>4104	PtrMemberAccess	c -> timestamp
>4105	Identifier	timestamp
>4106	Identifier	c
>4107	Identifier	ocmd
>4108	ExpressionStatement	ocmd << \"GetPrivMsgs \"
>4109	ShiftExpression	ocmd << \"GetPrivMsgs \"
>4110	PrimaryExpression	\"GetPrivMsgs \"
>4111	Identifier	ocmd
>4112	IdentifierDeclStatement	std 
>4113	IdentifierDecl	ocmd
>4114	Identifier	ocmd
>4115	IdentifierDeclType	std 
>4116	CompoundStatement	 
>4117	ExpressionStatement	GetChannelCommand ( cmd . str ( ) )
>4118	CallExpression	GetChannelCommand ( cmd . str ( ) )
>4119	ArgumentList	cmd . str ( )
>4120	Argument	cmd . str ( )
>4121	CallExpression	cmd . str ( )
>4122	ArgumentList	 
>4123	Callee	cmd . str
>4124	MemberAccess	cmd . str
>4125	Identifier	str
>4126	Identifier	cmd
>4127	Callee	GetChannelCommand
>4128	Identifier	GetChannelCommand
>4129	ExpressionStatement	cmd << c -> timestamp ( )
>4130	ShiftExpression	cmd << c -> timestamp ( )
>4131	CallExpression	c -> timestamp ( )
>4132	ArgumentList	 
>4133	Callee	c -> timestamp
>4134	PtrMemberAccess	c -> timestamp
>4135	Identifier	timestamp
>4136	Identifier	c
>4137	Identifier	cmd
>4138	ExpressionStatement	cmd << chan -> GetName ( ) << \" \"
>4139	ShiftExpression	cmd << chan -> GetName ( ) << \" \"
>4140	ShiftExpression	chan -> GetName ( ) << \" \"
>4141	PrimaryExpression	\" \"
>4142	CallExpression	chan -> GetName ( )
>4143	ArgumentList	 
>4144	Callee	chan -> GetName
>4145	PtrMemberAccess	chan -> GetName
>4146	Identifier	GetName
>4147	Identifier	chan
>4148	Identifier	cmd
>4149	ExpressionStatement	cmd << \"GetChannel \"
>4150	ShiftExpression	cmd << \"GetChannel \"
>4151	PrimaryExpression	\"GetChannel \"
>4152	Identifier	cmd
>4153	IdentifierDeclStatement	std 
>4154	IdentifierDecl	cmd
>4155	Identifier	cmd
>4156	IdentifierDeclType	std 
>4157	Statement	)
>4158	Statement	)
>4159	Statement	(
>4160	Statement	GetChans
>4161	Statement	->
>4162	Statement	)
>4163	Statement	(
>4164	Statement	GetNetwork
>4165	Label	chan 
>4166	Identifier	chan
>4167	Statement	*
>4168	Statement	CChan
>4169	Statement	(
>4170	Statement	for
>4171	ExpressionStatement	t . commit ( )
>4172	CallExpression	t . commit ( )
>4173	ArgumentList	 
>4174	Callee	t . commit
>4175	MemberAccess	t . commit
>4176	Identifier	commit
>4177	Identifier	t
>4178	IdentifierDeclStatement	std 
>4179	IdentifierDecl	c ( DB . load < cliententry > ( cid ) )
>4180	RelationalExpression	DB . load < cliententry > ( cid )
>4181	RelationalExpression	cliententry > ( cid )
>4182	Identifier	cid
>4183	Identifier	cliententry
>4184	MemberAccess	DB . load
>4185	Identifier	load
>4186	Identifier	DB
>4187	Identifier	c
>4188	IdentifierDeclType	std 
>4189	IdentifierDeclStatement	odb 
>4190	IdentifierDecl	t ( DB . begin ( ) )
>4191	CallExpression	DB . begin ( )
>4192	ArgumentList	 
>4193	Callee	DB . begin
>4194	MemberAccess	DB . begin
>4195	Identifier	begin
>4196	Identifier	DB
>4197	Identifier	t
>4198	IdentifierDeclType	odb 
>4199	IdentifierDeclStatement	 
>4200	IdentifierDecl	cid ( args [ 1 ] , GetUser ( ) -> GetUserName ( ) , getNetworkName ( ) )
>4201	Expression	args [ 1 ] , GetUser ( ) -> GetUserName ( ) , getNetworkName ( )
>4202	Expression	GetUser ( ) -> GetUserName ( ) , getNetworkName ( )
>4203	CallExpression	getNetworkName ( )
>4204	ArgumentList	 
>4205	Callee	getNetworkName
>4206	Identifier	getNetworkName
>4207	CallExpression	GetUser ( ) -> GetUserName ( )
>4208	ArgumentList	 
>4209	Callee	GetUser ( ) -> GetUserName
>4210	PtrMemberAccess	GetUser ( ) -> GetUserName
>4211	Identifier	GetUserName
>4212	CallExpression	GetUser ( )
>4213	ArgumentList	 
>4214	Callee	GetUser
>4215	Identifier	GetUser
>4216	ArrayIndexing	args [ 1 ]
>4217	PrimaryExpression	1
>4218	Identifier	args
>4219	Identifier	cid
>4220	IdentifierDeclType	clientid
>4221	IfStatement	if ( args . size ( ) != 2 )
>4222	CompoundStatement	 
>4223	ReturnStatement	 
>4224	ExpressionStatement	 
>4225	CallExpression	PutModule ( \"Invalid RequestClientLog arguments\" )
>4226	ArgumentList	\"Invalid RequestClientLog arguments\"
>4227	Argument	\"Invalid RequestClientLog arguments\"
>4228	PrimaryExpression	\"Invalid RequestClientLog arguments\"
>4229	Callee	PutModule
>4230	Identifier	PutModule
>4231	Condition	 
>4232	EqualityExpression	args . size ( ) != 2
>4233	PrimaryExpression	2
>4234	CallExpression	args . size ( )
>4235	ArgumentList	 
>4236	Callee	args . size
>4237	MemberAccess	args . size
>4238	Identifier	size
>4239	Identifier	args
>4240	ExpressionStatement	 
>4241	CallExpression	cmd . Split ( \" \" , args , false )
>4242	ArgumentList	\" \"
>4243	Argument	false
>4244	Identifier	false
>4245	Argument	args
>4246	Identifier	args
>4247	Argument	\" \"
>4248	PrimaryExpression	\" \"
>4249	Callee	cmd . Split
>4250	MemberAccess	cmd . Split
>4251	Identifier	Split
>4252	Identifier	cmd
>4253	IdentifierDeclStatement	 
>4254	IdentifierDecl	args
>4255	Identifier	args
>4256	IdentifierDeclType	VCString
>4257	IfStatement	if ( ! GetNetwork ( ) )
>4258	CompoundStatement	 
>4259	ReturnStatement	 
>4260	ExpressionStatement	 
>4261	CallExpression	PutModule ( \"No network\" )
>4262	ArgumentList	\"No network\"
>4263	Argument	\"No network\"
>4264	PrimaryExpression	\"No network\"
>4265	Callee	PutModule
>4266	Identifier	PutModule
>4267	Condition	 
>4268	UnaryOp	! GetNetwork ( )
>4269	CallExpression	GetNetwork ( )
>4270	ArgumentList	 
>4271	Callee	GetNetwork
>4272	Identifier	GetNetwork
>4273	UnaryOperator	!
>4274	IfStatement	if ( ! GetUser ( ) )
>4275	CompoundStatement	 
>4276	ReturnStatement	 
>4277	ExpressionStatement	 
>4278	CallExpression	PutModule ( \"No user\" )
>4279	ArgumentList	\"No user\"
>4280	Argument	\"No user\"
>4281	PrimaryExpression	\"No user\"
>4282	Callee	PutModule
>4283	Identifier	PutModule
>4284	Condition	 
>4285	UnaryOp	! GetUser ( )
>4286	CallExpression	GetUser ( )
>4287	ArgumentList	 
>4288	Callee	GetUser
>4289	Identifier	GetUser
>4290	UnaryOperator	!
>4310	FunctionDef	SqlLogMod 
>4311	ParameterList	const CString & cmd
>4312	Parameter	 
>4313	Identifier	cmd
>4314	ParameterType	const CString &
>4315	ReturnType	void
>4316	CompoundStatement	 
>4317	ExpressionStatement	 
>4318	CallExpression	PutModNotice ( CString ( \"Registered this client as \" ) + args [ 1 ] )
>4319	ArgumentList	CString ( \"Registered this client as \" ) + args [ 1 ]
>4320	Argument	CString ( \"Registered this client as \" ) + args [ 1 ]
>4321	AdditiveExpression	CString ( \"Registered this client as \" ) + args [ 1 ]
>4322	ArrayIndexing	args [ 1 ]
>4323	PrimaryExpression	1
>4324	Identifier	args
>4325	CallExpression	CString ( \"Registered this client as \" )
>4326	ArgumentList	\"Registered this client as \"
>4327	Argument	\"Registered this client as \"
>4328	PrimaryExpression	\"Registered this client as \"
>4329	Callee	CString
>4330	Identifier	CString
>4331	Callee	PutModNotice
>4332	Identifier	PutModNotice
>4333	ExpressionStatement	 
>4334	AssignmentExpr	p -> clientIdMaps [ cval ] = clientid ( args [ 1 ] , GetUser ( ) -> GetUserName ( ) , getNetworkName ( ) )
>4335	CallExpression	clientid ( args [ 1 ] , GetUser ( ) -> GetUserName ( ) , getNetworkName ( ) )
>4336	ArgumentList	args [ 1 ]
>4337	Argument	getNetworkName ( )
>4338	CallExpression	getNetworkName ( )
>4339	ArgumentList	 
>4340	Callee	getNetworkName
>4341	Identifier	getNetworkName
>4342	Argument	GetUser ( ) -> GetUserName ( )
>4343	CallExpression	GetUser ( ) -> GetUserName ( )
>4344	ArgumentList	 
>4345	Callee	GetUser ( ) -> GetUserName
>4346	PtrMemberAccess	GetUser ( ) -> GetUserName
>4347	Identifier	GetUserName
>4348	CallExpression	GetUser ( )
>4349	ArgumentList	 
>4350	Callee	GetUser
>4351	Identifier	GetUser
>4352	Argument	args [ 1 ]
>4353	ArrayIndexing	args [ 1 ]
>4354	PrimaryExpression	1
>4355	Identifier	args
>4356	Callee	clientid
>4357	Identifier	clientid
>4358	ArrayIndexing	p -> clientIdMaps [ cval ]
>4359	Identifier	cval
>4360	PtrMemberAccess	p -> clientIdMaps
>4361	Identifier	clientIdMaps
>4362	Identifier	p
>4363	IdentifierDeclStatement	 
>4364	IdentifierDecl	cval = ( uintptr_t ) GetClient ( )
>4365	AssignmentExpr	cval = ( uintptr_t ) GetClient ( )
>4366	CastExpression	( uintptr_t ) GetClient ( )
>4367	CallExpression	GetClient ( )
>4368	ArgumentList	 
>4369	Callee	GetClient
>4370	Identifier	GetClient
>4371	CastTarget	uintptr_t
>4372	Identifier	cval
>4373	Identifier	cval
>4374	IdentifierDeclType	uintptr_t
>4375	IfStatement	if ( args . size ( ) != 2 )
>4376	CompoundStatement	 
>4377	ReturnStatement	 
>4378	ExpressionStatement	 
>4379	CallExpression	PutModule ( \"Invalid RegisterClient arguments\" )
>4380	ArgumentList	\"Invalid RegisterClient arguments\"
>4381	Argument	\"Invalid RegisterClient arguments\"
>4382	PrimaryExpression	\"Invalid RegisterClient arguments\"
>4383	Callee	PutModule
>4384	Identifier	PutModule
>4385	Condition	 
>4386	EqualityExpression	args . size ( ) != 2
>4387	PrimaryExpression	2
>4388	CallExpression	args . size ( )
>4389	ArgumentList	 
>4390	Callee	args . size
>4391	MemberAccess	args . size
>4392	Identifier	size
>4393	Identifier	args
>4394	ExpressionStatement	 
>4395	CallExpression	cmd . Split ( \" \" , args , false )
>4396	ArgumentList	\" \"
>4397	Argument	false
>4398	Identifier	false
>4399	Argument	args
>4400	Identifier	args
>4401	Argument	\" \"
>4402	PrimaryExpression	\" \"
>4403	Callee	cmd . Split
>4404	MemberAccess	cmd . Split
>4405	Identifier	Split
>4406	Identifier	cmd
>4407	IdentifierDeclStatement	 
>4408	IdentifierDecl	args
>4409	Identifier	args
>4410	IdentifierDeclType	VCString
>4411	IfStatement	if ( ! GetUser ( ) )
>4412	CompoundStatement	 
>4413	ReturnStatement	 
>4414	ExpressionStatement	 
>4415	CallExpression	PutModule ( \"No user!\" )
>4416	ArgumentList	\"No user!\"
>4417	Argument	\"No user!\"
>4418	PrimaryExpression	\"No user!\"
>4419	Callee	PutModule
>4420	Identifier	PutModule
>4421	Condition	 
>4422	UnaryOp	! GetUser ( )
>4423	CallExpression	GetUser ( )
>4424	ArgumentList	 
>4425	Callee	GetUser
>4426	Identifier	GetUser
>4427	UnaryOperator	!
>4428	IfStatement	if ( ! GetClient ( ) )
>4429	CompoundStatement	 
>4430	ReturnStatement	 
>4431	ExpressionStatement	 
>4432	CallExpression	PutModule ( \"No client!\" )
>4433	ArgumentList	\"No client!\"
>4434	Argument	\"No client!\"
>4435	PrimaryExpression	\"No client!\"
>4436	Callee	PutModule
>4437	Identifier	PutModule
>4438	Condition	 
>4439	UnaryOp	! GetClient ( )
>4440	CallExpression	GetClient ( )
>4441	ArgumentList	 
>4442	Callee	GetClient
>4443	Identifier	GetClient
>4444	UnaryOperator	!
>4467	FunctionDef	SqlLogMod 
>4468	ParameterList	 
>4469	ReturnType	void
>4470	CompoundStatement	 
>4471	ExpressionStatement	 
>4472	CallExpression	p -> clientIdMaps . erase ( it )
>4473	ArgumentList	it
>4474	Argument	it
>4475	Identifier	it
>4476	Callee	p -> clientIdMaps . erase
>4477	MemberAccess	p -> clientIdMaps . erase
>4478	Identifier	erase
>4479	PtrMemberAccess	p -> clientIdMaps
>4480	Identifier	clientIdMaps
>4481	Identifier	p
>4482	ExpressionStatement	 
>4483	CallExpression	updateClientId ( it -> second )
>4484	ArgumentList	it -> second
>4485	Argument	it -> second
>4486	PtrMemberAccess	it -> second
>4487	Identifier	second
>4488	Identifier	it
>4489	Callee	updateClientId
>4490	Identifier	updateClientId
>4491	IfStatement	if ( it == p -> clientIdMaps . end ( ) )
>4492	ReturnStatement	 
>4493	Condition	 
>4494	EqualityExpression	it == p -> clientIdMaps . end ( )
>4495	CallExpression	p -> clientIdMaps . end ( )
>4496	ArgumentList	 
>4497	Callee	p -> clientIdMaps . end
>4498	MemberAccess	p -> clientIdMaps . end
>4499	Identifier	end
>4500	PtrMemberAccess	p -> clientIdMaps
>4501	Identifier	clientIdMaps
>4502	Identifier	p
>4503	Identifier	it
>4504	ExpressionStatement	 
>4505	AssignmentExpr	it = p -> clientIdMaps . find ( cval )
>4506	CallExpression	p -> clientIdMaps . find ( cval )
>4507	ArgumentList	cval
>4508	Argument	cval
>4509	Identifier	cval
>4510	Callee	p -> clientIdMaps . find
>4511	MemberAccess	p -> clientIdMaps . find
>4512	Identifier	find
>4513	PtrMemberAccess	p -> clientIdMaps
>4514	Identifier	clientIdMaps
>4515	Identifier	p
>4516	Identifier	it
>4517	Statement	 
>4518	IdentifierDeclStatement	 
>4519	IdentifierDecl	cval = ( uintptr_t ) GetClient ( )
>4520	AssignmentExpr	cval = ( uintptr_t ) GetClient ( )
>4521	CastExpression	( uintptr_t ) GetClient ( )
>4522	CallExpression	GetClient ( )
>4523	ArgumentList	 
>4524	Callee	GetClient
>4525	Identifier	GetClient
>4526	CastTarget	uintptr_t
>4527	Identifier	cval
>4528	Identifier	cval
>4529	IdentifierDeclType	uintptr_t
>4530	IfStatement	if ( ! GetClient ( ) )
>4531	ReturnStatement	 
>4532	Condition	 
>4533	UnaryOp	! GetClient ( )
>4534	CallExpression	GetClient ( )
>4535	ArgumentList	 
>4536	Callee	GetClient
>4537	Identifier	GetClient
>4538	UnaryOperator	!
<10=13,12,11
<13=114,109,90,71,52,33,14
<14=15
<15=31,16
<16=29,21,19,17
<17=18
<19=20
<21=22
<22=28,23
<23=27,24
<24=26,25
<29=30
<31=32
<33=34
<34=50,35
<35=48,40,38,36
<36=37
<38=39
<40=41
<41=47,42
<42=46,43
<43=45,44
<48=49
<50=51
<52=53
<53=69,54
<54=67,59,57,55
<55=56
<57=58
<59=60
<60=66,61
<61=65,62
<62=64,63
<67=68
<69=70
<71=72
<72=88,73
<73=86,78,76,74
<74=75
<76=77
<78=79
<79=85,80
<80=84,81
<81=83,82
<86=87
<88=89
<90=91
<91=107,92
<92=105,97,95,93
<93=94
<95=96
<97=98
<98=104,99
<99=103,100
<100=102,101
<105=106
<107=108
<109=110
<110=112,111
<112=113
<114=115
<115=117,116
<129=132,131,130
<132=146,137,133
<133=134
<134=136,135
<137=138
<138=144,139
<139=140
<140=141
<141=143,142
<144=145
<146=147
<147=149,148
<155=158,157,156
<158=159
<159=160
<160=171,162,161
<162=164,163
<164=165
<165=167,166
<167=169,168
<169=170
<171=172
<172=174,173
<174=175
<182=185,184,183
<185=232,228,221,209,186
<186=187
<187=203,188
<188=202,189
<189=201,190
<190=199,191
<191=192
<192=193
<193=195,194
<195=196
<196=198,197
<199=200
<203=205,204
<205=206
<206=208,207
<209=214,210
<210=211
<211=213,212
<214=215
<215=217,216
<217=218
<218=220,219
<221=224,222
<222=223
<224=225
<225=227,226
<228=229
<229=231,230
<232=233
<233=246,245,234
<234=244,235
<235=237,236
<237=238
<238=240,239
<240=242,241
<242=243
<260=266,265,261
<261=262
<262=264,263
<266=276,269,267
<267=268
<269=274,270
<270=271
<271=273,272
<274=275
<276=277
<277=297,296,278
<278=295,279
<279=290,281,280
<281=283,282
<283=284
<284=286,285
<286=288,287
<288=289
<290=291
<291=293,292
<293=294
<306=309,308,307
<309=310
<310=311
<311=322,313,312
<313=315,314
<315=316
<316=318,317
<318=320,319
<320=321
<322=323
<323=325,324
<325=326
<333=339,338,334
<334=335
<335=337,336
<339=420,340
<340=414,341
<341=408,401,400,399,398,397,396,395,394,393,392,391,390,389,388,365,364,357,342
<342=343
<343=355,344
<344=353,351,347,345
<345=346
<347=348
<348=350,349
<351=352
<353=354
<355=356
<357=358
<358=362,359
<359=360
<360=361
<362=363
<365=387,386,385,384,383,382,381,380,379,377,366
<366=367
<367=372,368
<368=370,369
<370=371
<372=374,373
<374=376,375
<377=378
<401=402
<402=406,403
<403=404
<404=405
<406=407
<408=409
<409=411,410
<411=413,412
<414=415
<415=419,416
<416=418,417
<420=421
<421=431,430,422
<422=429,423
<423=425,424
<425=426
<426=428,427
<450=452,451
<452=455,453
<453=454
<459=468,467,460
<460=464,461
<461=463,462
<464=466,465
<468=483,469
<469=482,470
<470=473,471
<471=472
<473=474
<474=481,475
<475=477,476
<477=478
<478=480,479
<483=484
<484=762,755,718,525,515,487,485
<485=486
<487=513,488
<488=503,496,489
<489=490
<490=492,491
<492=493
<493=495,494
<496=497
<497=501,498
<498=499
<499=500
<501=502
<503=504
<504=512,511,505
<505=507,506
<507=508
<508=510,509
<513=514
<515=516
<516=524,523,517
<517=519,518
<519=520
<520=522,521
<525=705,646,526
<526=527
<527=633,536,528
<528=529
<529=532,530
<530=531
<532=533
<533=535,534
<536=619,612,608,595,578,548,537
<537=538
<538=545,539
<539=543,540
<540=541
<541=542
<543=544
<545=547,546
<548=549
<549=577,576,550
<550=568,551
<551=560,552
<552=556,553
<553=554
<554=555
<556=557
<557=559,558
<560=564,561
<561=562
<562=563
<564=565
<565=567,566
<568=572,569
<569=570
<570=571
<572=573
<573=575,574
<578=586,579
<579=582,580
<580=581
<582=583
<583=585,584
<586=587
<587=589,588
<589=591,590
<591=592
<592=594,593
<595=596
<596=604,597
<597=602,600,598
<598=599
<600=601
<602=603
<604=605
<605=607,606
<608=609
<609=611,610
<612=613
<613=615,614
<615=616
<616=618,617
<619=620
<620=632,631,621
<621=630,622
<622=626,623
<623=624
<624=625
<626=627
<627=629,628
<633=634
<634=636,635
<636=642,637
<637=640,638
<638=639
<640=641
<642=643
<643=645,644
<646=691,684,667,658,647
<647=648
<648=655,649
<649=653,650
<650=651
<651=652
<653=654
<655=657,656
<658=659
<659=666,665,660
<660=664,661
<661=663,662
<667=675,668
<668=671,669
<669=670
<671=672
<672=674,673
<675=676
<676=678,677
<678=680,679
<680=681
<681=683,682
<684=685
<685=687,686
<687=688
<688=690,689
<691=692
<692=704,703,693
<693=702,694
<694=698,695
<695=696
<696=697
<698=699
<699=701,700
<705=706
<706=708,707
<708=714,709
<709=712,710
<710=711
<712=713
<714=715
<715=717,716
<718=742,719
<719=738,727,720
<720=721
<721=725,722
<722=723
<723=724
<725=726
<727=728
<728=737,729
<729=733,730
<730=731
<731=732
<733=734
<734=736,735
<738=739
<739=741,740
<742=743
<743=745,744
<745=751,746
<746=749,747
<747=748
<749=750
<751=752
<752=754,753
<755=756
<756=761,760,757
<757=759,758
<762=763
<763=773,772,764
<764=771,765
<765=767,766
<767=768
<768=770,769
<799=811,810,800
<800=807,804,801
<801=803,802
<804=806,805
<807=809,808
<811=822,818,814,812
<812=813
<814=815
<815=817,816
<818=819
<819=821,820
<822=823
<823=825,824
<833=836,835,834
<836=847,837
<837=846,838
<838=839
<839=840
<840=844,841
<841=842
<842=843
<844=845
<847=848
<848=890,865,856,849
<849=850
<850=852,851
<852=853
<853=855,854
<856=857
<857=861,858
<858=859
<859=860
<861=862
<862=864,863
<865=866
<866=889,888,867
<867=884,868
<868=883,869
<869=879,870
<870=875,871
<871=873,872
<873=874
<875=877,876
<877=878
<879=881,880
<881=882
<884=886,885
<886=887
<890=891
<891=899,898,892
<892=894,893
<894=895
<895=897,896
<907=910,909,908
<910=921,911
<911=920,912
<912=913
<913=914
<914=918,915
<915=916
<916=917
<918=919
<921=922
<922=964,939,930,923
<923=924
<924=926,925
<926=927
<927=929,928
<930=931
<931=935,932
<932=933
<933=934
<935=936
<936=938,937
<939=940
<940=963,962,941
<941=958,942
<942=957,943
<943=953,944
<944=949,945
<945=947,946
<947=948
<949=951,950
<951=952
<953=955,954
<955=956
<958=960,959
<960=961
<964=965
<965=973,972,966
<966=968,967
<968=969
<969=971,970
<981=996,995,982
<982=992,989,986,983
<983=985,984
<986=988,987
<989=991,990
<992=994,993
<996=1007,997
<997=1006,998
<998=999
<999=1000
<1000=1004,1001
<1001=1002
<1002=1003
<1004=1005
<1007=1008
<1008=1063,1025,1016,1009
<1009=1010
<1010=1012,1011
<1012=1013
<1013=1015,1014
<1016=1017
<1017=1021,1018
<1018=1019
<1019=1020
<1021=1022
<1022=1024,1023
<1025=1026
<1026=1062,1061,1027
<1027=1057,1028
<1028=1056,1029
<1029=1052,1030
<1030=1048,1031
<1031=1047,1032
<1032=1041,1033
<1033=1040,1034
<1034=1036,1035
<1036=1037
<1037=1039,1038
<1041=1043,1042
<1043=1044
<1044=1046,1045
<1048=1050,1049
<1050=1051
<1052=1054,1053
<1054=1055
<1057=1059,1058
<1059=1060
<1063=1064
<1064=1072,1071,1065
<1065=1067,1066
<1067=1068
<1068=1070,1069
<1084=1096,1095,1085
<1085=1092,1089,1086
<1086=1088,1087
<1089=1091,1090
<1092=1094,1093
<1096=1107,1097
<1097=1106,1098
<1098=1099
<1099=1100
<1100=1104,1101
<1101=1102
<1102=1103
<1104=1105
<1107=1108
<1108=1179,1169,1168,1167,1166,1165,1163,1162,1161,1116,1109
<1109=1110
<1110=1112,1111
<1112=1113
<1113=1115,1114
<1116=1126,1117
<1117=1118
<1118=1122,1119
<1119=1120
<1120=1121
<1122=1123
<1123=1125,1124
<1126=1127
<1127=1160,1159,1128
<1128=1158,1129
<1129=1157,1130
<1130=1153,1131
<1131=1149,1132
<1132=1148,1133
<1133=1142,1134
<1134=1141,1135
<1135=1137,1136
<1137=1138
<1138=1140,1139
<1142=1144,1143
<1144=1145
<1145=1147,1146
<1149=1151,1150
<1151=1152
<1153=1155,1154
<1155=1156
<1163=1164
<1169=1170
<1170=1178,1177,1171
<1171=1176,1172
<1172=1174,1173
<1174=1175
<1179=1180
<1180=1188,1187,1181
<1181=1183,1182
<1183=1184
<1184=1186,1185
<1202=1211,1210,1203
<1203=1207,1204
<1204=1206,1205
<1207=1209,1208
<1211=1222,1212
<1212=1221,1213
<1213=1214
<1214=1215
<1215=1219,1216
<1216=1217
<1217=1218
<1219=1220
<1222=1223
<1223=1278,1240,1231,1224
<1224=1225
<1225=1227,1226
<1227=1228
<1228=1230,1229
<1231=1232
<1232=1236,1233
<1233=1234
<1234=1235
<1236=1237
<1237=1239,1238
<1240=1241
<1241=1277,1276,1242
<1242=1272,1243
<1243=1271,1244
<1244=1267,1245
<1245=1263,1246
<1246=1262,1247
<1247=1256,1248
<1248=1255,1249
<1249=1251,1250
<1251=1252
<1252=1254,1253
<1256=1258,1257
<1258=1259
<1259=1261,1260
<1263=1265,1264
<1265=1266
<1267=1269,1268
<1269=1270
<1272=1274,1273
<1274=1275
<1278=1279
<1279=1287,1286,1280
<1280=1282,1281
<1282=1283
<1283=1285,1284
<1297=1309,1308,1298
<1298=1305,1302,1299
<1299=1301,1300
<1302=1304,1303
<1305=1307,1306
<1309=1320,1310
<1310=1319,1311
<1311=1312
<1312=1313
<1313=1317,1314
<1314=1315
<1315=1316
<1317=1318
<1320=1321
<1321=1376,1338,1329,1322
<1322=1323
<1323=1325,1324
<1325=1326
<1326=1328,1327
<1329=1330
<1330=1334,1331
<1331=1332
<1332=1333
<1334=1335
<1335=1337,1336
<1338=1339
<1339=1375,1374,1340
<1340=1370,1341
<1341=1369,1342
<1342=1365,1343
<1343=1361,1344
<1344=1360,1345
<1345=1354,1346
<1346=1353,1347
<1347=1349,1348
<1349=1350
<1350=1352,1351
<1354=1356,1355
<1356=1357
<1357=1359,1358
<1361=1363,1362
<1363=1364
<1365=1367,1366
<1367=1368
<1370=1372,1371
<1372=1373
<1376=1377
<1377=1385,1384,1378
<1378=1380,1379
<1380=1381
<1381=1383,1382
<1396=1408,1407,1397
<1397=1404,1401,1398
<1398=1400,1399
<1401=1403,1402
<1404=1406,1405
<1408=1419,1409
<1409=1418,1410
<1410=1411
<1411=1412
<1412=1416,1413
<1413=1414
<1414=1415
<1416=1417
<1419=1420
<1420=1491,1481,1480,1479,1478,1477,1475,1474,1473,1428,1421
<1421=1422
<1422=1424,1423
<1424=1425
<1425=1427,1426
<1428=1438,1429
<1429=1430
<1430=1434,1431
<1431=1432
<1432=1433
<1434=1435
<1435=1437,1436
<1438=1439
<1439=1472,1471,1440
<1440=1470,1441
<1441=1469,1442
<1442=1465,1443
<1443=1461,1444
<1444=1460,1445
<1445=1454,1446
<1446=1453,1447
<1447=1449,1448
<1449=1450
<1450=1452,1451
<1454=1456,1455
<1456=1457
<1457=1459,1458
<1461=1463,1462
<1463=1464
<1465=1467,1466
<1467=1468
<1475=1476
<1481=1482
<1482=1490,1489,1483
<1483=1488,1484
<1484=1486,1485
<1486=1487
<1491=1492
<1492=1500,1499,1493
<1493=1495,1494
<1495=1496
<1496=1498,1497
<1514=1526,1525,1515
<1515=1522,1519,1516
<1516=1518,1517
<1519=1521,1520
<1522=1524,1523
<1526=1539,1529,1527
<1527=1528
<1529=1538,1530
<1530=1531
<1531=1532
<1532=1536,1533
<1533=1534
<1534=1535
<1536=1537
<1539=1540
<1540=1595,1557,1548,1541
<1541=1542
<1542=1544,1543
<1544=1545
<1545=1547,1546
<1548=1549
<1549=1553,1550
<1550=1551
<1551=1552
<1553=1554
<1554=1556,1555
<1557=1558
<1558=1594,1593,1559
<1559=1589,1560
<1560=1588,1561
<1561=1584,1562
<1562=1580,1563
<1563=1579,1564
<1564=1573,1565
<1565=1572,1566
<1566=1568,1567
<1568=1569
<1569=1571,1570
<1573=1575,1574
<1575=1576
<1576=1578,1577
<1580=1582,1581
<1582=1583
<1584=1586,1585
<1586=1587
<1589=1591,1590
<1591=1592
<1595=1596
<1596=1604,1603,1597
<1597=1599,1598
<1599=1600
<1600=1602,1601
<1616=1625,1624,1617
<1617=1621,1618
<1618=1620,1619
<1621=1623,1622
<1625=1638,1628,1626
<1626=1627
<1628=1637,1629
<1629=1630
<1630=1631
<1631=1635,1632
<1632=1633
<1633=1634
<1635=1636
<1638=1639
<1639=1742,1647,1640
<1640=1641
<1641=1643,1642
<1643=1644
<1644=1646,1645
<1647=1729,1688,1648
<1648=1649
<1649=1659,1650
<1650=1651
<1651=1655,1652
<1652=1653
<1653=1654
<1655=1656
<1656=1658,1657
<1659=1660
<1660=1687,1686,1661
<1661=1682,1662
<1662=1681,1663
<1663=1677,1664
<1664=1673,1665
<1665=1672,1666
<1666=1668,1667
<1668=1670,1669
<1670=1671
<1673=1675,1674
<1675=1676
<1677=1679,1678
<1679=1680
<1682=1684,1683
<1684=1685
<1688=1698,1689
<1689=1690
<1690=1694,1691
<1691=1692
<1692=1693
<1694=1695
<1695=1697,1696
<1698=1699
<1699=1728,1727,1700
<1700=1723,1701
<1701=1722,1702
<1702=1718,1703
<1703=1714,1704
<1704=1713,1705
<1705=1709,1706
<1706=1708,1707
<1709=1711,1710
<1711=1712
<1714=1716,1715
<1716=1717
<1718=1720,1719
<1720=1721
<1723=1725,1724
<1725=1726
<1729=1730
<1730=1732,1731
<1732=1738,1733
<1733=1736,1734
<1734=1735
<1736=1737
<1738=1739
<1739=1741,1740
<1742=1743
<1743=1751,1750,1744
<1744=1746,1745
<1746=1747
<1747=1749,1748
<1763=1772,1771,1764
<1764=1768,1765
<1765=1767,1766
<1768=1770,1769
<1772=1785,1775,1773
<1773=1774
<1775=1784,1776
<1776=1777
<1777=1778
<1778=1782,1779
<1779=1780
<1780=1781
<1782=1783
<1785=1786
<1786=1839,1803,1794,1787
<1787=1788
<1788=1790,1789
<1790=1791
<1791=1793,1792
<1794=1795
<1795=1799,1796
<1796=1797
<1797=1798
<1799=1800
<1800=1802,1801
<1803=1804
<1804=1838,1837,1805
<1805=1833,1806
<1806=1832,1807
<1807=1828,1808
<1808=1824,1809
<1809=1823,1810
<1810=1817,1811
<1811=1815,1812
<1812=1813
<1813=1814
<1815=1816
<1817=1819,1818
<1819=1820
<1820=1822,1821
<1824=1826,1825
<1826=1827
<1828=1830,1829
<1830=1831
<1833=1835,1834
<1835=1836
<1839=1840
<1840=1848,1847,1841
<1841=1843,1842
<1843=1844
<1844=1846,1845
<1860=1872,1871,1861
<1861=1868,1865,1862
<1862=1864,1863
<1865=1867,1866
<1868=1870,1869
<1872=1885,1875,1873
<1873=1874
<1875=1884,1876
<1876=1877
<1877=1878
<1878=1882,1879
<1879=1880
<1880=1881
<1882=1883
<1885=1886
<1886=1941,1903,1894,1887
<1887=1888
<1888=1890,1889
<1890=1891
<1891=1893,1892
<1894=1895
<1895=1899,1896
<1896=1897
<1897=1898
<1899=1900
<1900=1902,1901
<1903=1904
<1904=1940,1939,1905
<1905=1935,1906
<1906=1934,1907
<1907=1930,1908
<1908=1926,1909
<1909=1925,1910
<1910=1919,1911
<1911=1918,1912
<1912=1914,1913
<1914=1915
<1915=1917,1916
<1919=1921,1920
<1921=1922
<1922=1924,1923
<1926=1928,1927
<1928=1929
<1930=1932,1931
<1932=1933
<1935=1937,1936
<1937=1938
<1941=1942
<1942=1950,1949,1943
<1943=1945,1944
<1945=1946
<1946=1948,1947
<1962=1971,1970,1963
<1963=1967,1964
<1964=1966,1965
<1967=1969,1968
<1971=1984,1974,1972
<1972=1973
<1974=1983,1975
<1975=1976
<1976=1977
<1977=1981,1978
<1978=1979
<1979=1980
<1981=1982
<1984=1985
<1985=2088,1993,1986
<1986=1987
<1987=1989,1988
<1989=1990
<1990=1992,1991
<1993=2075,2034,1994
<1994=1995
<1995=2005,1996
<1996=1997
<1997=2001,1998
<1998=1999
<1999=2000
<2001=2002
<2002=2004,2003
<2005=2006
<2006=2033,2032,2007
<2007=2028,2008
<2008=2027,2009
<2009=2023,2010
<2010=2019,2011
<2011=2018,2012
<2012=2014,2013
<2014=2016,2015
<2016=2017
<2019=2021,2020
<2021=2022
<2023=2025,2024
<2025=2026
<2028=2030,2029
<2030=2031
<2034=2044,2035
<2035=2036
<2036=2040,2037
<2037=2038
<2038=2039
<2040=2041
<2041=2043,2042
<2044=2045
<2045=2074,2073,2046
<2046=2069,2047
<2047=2068,2048
<2048=2064,2049
<2049=2060,2050
<2050=2059,2051
<2051=2055,2052
<2052=2054,2053
<2055=2057,2056
<2057=2058
<2060=2062,2061
<2062=2063
<2064=2066,2065
<2066=2067
<2069=2071,2070
<2071=2072
<2075=2076
<2076=2078,2077
<2078=2084,2079
<2079=2082,2080
<2080=2081
<2082=2083
<2084=2085
<2085=2087,2086
<2088=2089
<2089=2097,2096,2090
<2090=2092,2091
<2092=2093
<2093=2095,2094
<2109=2118,2117,2110
<2110=2114,2111
<2111=2113,2112
<2114=2116,2115
<2118=2131,2121,2119
<2119=2120
<2121=2130,2122
<2122=2123
<2123=2124
<2124=2128,2125
<2125=2126
<2126=2127
<2128=2129
<2131=2132
<2132=2185,2149,2140,2133
<2133=2134
<2134=2136,2135
<2136=2137
<2137=2139,2138
<2140=2141
<2141=2145,2142
<2142=2143
<2143=2144
<2145=2146
<2146=2148,2147
<2149=2150
<2150=2184,2183,2151
<2151=2179,2152
<2152=2178,2153
<2153=2174,2154
<2154=2170,2155
<2155=2169,2156
<2156=2163,2157
<2157=2161,2158
<2158=2159
<2159=2160
<2161=2162
<2163=2165,2164
<2165=2166
<2166=2168,2167
<2170=2172,2171
<2172=2173
<2174=2176,2175
<2176=2177
<2179=2181,2180
<2181=2182
<2185=2186
<2186=2194,2193,2187
<2187=2189,2188
<2189=2190
<2190=2192,2191
<2206=2218,2217,2207
<2207=2214,2211,2208
<2208=2210,2209
<2211=2213,2212
<2214=2216,2215
<2218=2231,2221,2219
<2219=2220
<2221=2230,2222
<2222=2223
<2223=2224
<2224=2228,2225
<2225=2226
<2226=2227
<2228=2229
<2231=2232
<2232=2287,2249,2240,2233
<2233=2234
<2234=2236,2235
<2236=2237
<2237=2239,2238
<2240=2241
<2241=2245,2242
<2242=2243
<2243=2244
<2245=2246
<2246=2248,2247
<2249=2250
<2250=2286,2285,2251
<2251=2281,2252
<2252=2280,2253
<2253=2276,2254
<2254=2272,2255
<2255=2271,2256
<2256=2265,2257
<2257=2264,2258
<2258=2260,2259
<2260=2261
<2261=2263,2262
<2265=2267,2266
<2267=2268
<2268=2270,2269
<2272=2274,2273
<2274=2275
<2276=2278,2277
<2278=2279
<2281=2283,2282
<2283=2284
<2287=2288
<2288=2296,2295,2289
<2289=2291,2290
<2291=2292
<2292=2294,2293
<2308=2317,2316,2309
<2309=2313,2310
<2310=2312,2311
<2313=2315,2314
<2317=2330,2320,2318
<2318=2319
<2320=2329,2321
<2321=2322
<2322=2323
<2323=2327,2324
<2324=2325
<2325=2326
<2327=2328
<2330=2331
<2331=2434,2339,2332
<2332=2333
<2333=2335,2334
<2335=2336
<2336=2338,2337
<2339=2421,2380,2340
<2340=2341
<2341=2351,2342
<2342=2343
<2343=2347,2344
<2344=2345
<2345=2346
<2347=2348
<2348=2350,2349
<2351=2352
<2352=2379,2378,2353
<2353=2374,2354
<2354=2373,2355
<2355=2369,2356
<2356=2365,2357
<2357=2364,2358
<2358=2360,2359
<2360=2362,2361
<2362=2363
<2365=2367,2366
<2367=2368
<2369=2371,2370
<2371=2372
<2374=2376,2375
<2376=2377
<2380=2390,2381
<2381=2382
<2382=2386,2383
<2383=2384
<2384=2385
<2386=2387
<2387=2389,2388
<2390=2391
<2391=2420,2419,2392
<2392=2415,2393
<2393=2414,2394
<2394=2410,2395
<2395=2406,2396
<2396=2405,2397
<2397=2401,2398
<2398=2400,2399
<2401=2403,2402
<2403=2404
<2406=2408,2407
<2408=2409
<2410=2412,2411
<2412=2413
<2415=2417,2416
<2417=2418
<2421=2422
<2422=2424,2423
<2424=2430,2425
<2425=2428,2426
<2426=2427
<2428=2429
<2430=2431
<2431=2433,2432
<2434=2435
<2435=2443,2442,2436
<2436=2438,2437
<2438=2439
<2439=2441,2440
<2455=2464,2463,2456
<2456=2460,2457
<2457=2459,2458
<2460=2462,2461
<2464=2477,2467,2465
<2465=2466
<2467=2476,2468
<2468=2469
<2469=2470
<2470=2474,2471
<2471=2472
<2472=2473
<2474=2475
<2477=2478
<2478=2531,2495,2486,2479
<2479=2480
<2480=2482,2481
<2482=2483
<2483=2485,2484
<2486=2487
<2487=2491,2488
<2488=2489
<2489=2490
<2491=2492
<2492=2494,2493
<2495=2496
<2496=2530,2529,2497
<2497=2525,2498
<2498=2524,2499
<2499=2520,2500
<2500=2516,2501
<2501=2515,2502
<2502=2509,2503
<2503=2507,2504
<2504=2505
<2505=2506
<2507=2508
<2509=2511,2510
<2511=2512
<2512=2514,2513
<2516=2518,2517
<2518=2519
<2520=2522,2521
<2522=2523
<2525=2527,2526
<2527=2528
<2531=2532
<2532=2540,2539,2533
<2533=2535,2534
<2535=2536
<2536=2538,2537
<2552=2564,2563,2553
<2553=2560,2557,2554
<2554=2556,2555
<2557=2559,2558
<2560=2562,2561
<2564=2577,2567,2565
<2565=2566
<2567=2576,2568
<2568=2569
<2569=2570
<2570=2574,2571
<2571=2572
<2572=2573
<2574=2575
<2577=2578
<2578=2633,2595,2586,2579
<2579=2580
<2580=2582,2581
<2582=2583
<2583=2585,2584
<2586=2587
<2587=2591,2588
<2588=2589
<2589=2590
<2591=2592
<2592=2594,2593
<2595=2596
<2596=2632,2631,2597
<2597=2627,2598
<2598=2626,2599
<2599=2622,2600
<2600=2618,2601
<2601=2617,2602
<2602=2611,2603
<2603=2610,2604
<2604=2606,2605
<2606=2607
<2607=2609,2608
<2611=2613,2612
<2613=2614
<2614=2616,2615
<2618=2620,2619
<2620=2621
<2622=2624,2623
<2624=2625
<2627=2629,2628
<2629=2630
<2633=2634
<2634=2642,2641,2635
<2635=2637,2636
<2637=2638
<2638=2640,2639
<2658=2664,2663,2659
<2659=2660
<2660=2662,2661
<2664=2725,2710,2697,2696,2695,2694,2693,2692,2691,2690,2689,2674,2665
<2665=2666
<2666=2668,2667
<2668=2672,2669
<2669=2670
<2670=2671
<2672=2673
<2674=2675
<2675=2687,2676
<2676=2685,2683,2681,2677
<2677=2678
<2678=2680,2679
<2681=2682
<2683=2684
<2685=2686
<2687=2688
<2697=2698
<2698=2708,2699
<2699=2704,2700
<2700=2701
<2701=2703,2702
<2704=2705
<2705=2707,2706
<2708=2709
<2710=2711
<2711=2723,2712
<2712=2719,2717,2713
<2713=2714
<2714=2716,2715
<2717=2718
<2719=2720
<2720=2722,2721
<2723=2724
<2725=2726
<2726=2728,2727
<2738=2744,2743,2739
<2739=2740
<2740=2742,2741
<2744=2803,2788,2775,2774,2773,2772,2771,2770,2769,2768,2767,2752,2745
<2745=2746
<2746=2750,2747
<2747=2748
<2748=2749
<2750=2751
<2752=2753
<2753=2765,2754
<2754=2763,2761,2759,2755
<2755=2756
<2756=2758,2757
<2759=2760
<2761=2762
<2763=2764
<2765=2766
<2775=2776
<2776=2786,2777
<2777=2782,2778
<2778=2779
<2779=2781,2780
<2782=2783
<2783=2785,2784
<2786=2787
<2788=2789
<2789=2801,2790
<2790=2797,2795,2791
<2791=2792
<2792=2794,2793
<2795=2796
<2797=2798
<2798=2800,2799
<2801=2802
<2803=2804
<2804=2806,2805
<2816=2822,2821,2817
<2817=2818
<2818=2820,2819
<2822=3301,3297,3233,2823
<2823=3226,2824
<2824=3224,3222,3220,3218,3216,3214,3203,3173,3099,3074,3063,3039,3027,3026,3024,3022,3020,3018,3016,3001,2841,2829,2828,2826,2825
<2826=2827
<2829=2830
<2830=2839,2831
<2831=2832
<2832=2833
<2833=2835,2834
<2835=2836
<2836=2838,2837
<2839=2840
<2841=2992,2962,2842
<2842=2843
<2843=2953,2932,2844
<2844=2845
<2845=2923,2902,2846
<2846=2847
<2847=2893,2881,2848
<2848=2849
<2849=2872,2853,2850
<2850=2851
<2851=2852
<2853=2854
<2854=2855
<2855=2871,2856
<2856=2865,2857
<2857=2864,2858
<2858=2860,2859
<2860=2861
<2861=2863,2862
<2865=2867,2866
<2867=2868
<2868=2870,2869
<2872=2873
<2873=2875,2874
<2875=2877,2876
<2877=2878
<2878=2880,2879
<2881=2882
<2882=2883
<2883=2892,2884
<2884=2886,2885
<2886=2888,2887
<2888=2889
<2889=2891,2890
<2893=2894
<2894=2896,2895
<2896=2898,2897
<2898=2899
<2899=2901,2900
<2902=2903
<2903=2904
<2904=2922,2905
<2905=2916,2906
<2906=2915,2907
<2907=2909,2908
<2909=2911,2910
<2911=2912
<2912=2914,2913
<2916=2918,2917
<2918=2919
<2919=2921,2920
<2923=2924
<2924=2926,2925
<2926=2928,2927
<2928=2929
<2929=2931,2930
<2932=2933
<2933=2934
<2934=2952,2935
<2935=2946,2936
<2936=2945,2937
<2937=2939,2938
<2939=2941,2940
<2941=2942
<2942=2944,2943
<2946=2948,2947
<2948=2949
<2949=2951,2950
<2953=2954
<2954=2956,2955
<2956=2958,2957
<2958=2959
<2959=2961,2960
<2962=2963
<2963=2964
<2964=2991,2965
<2965=2985,2966
<2966=2984,2967
<2967=2978,2968
<2968=2977,2969
<2969=2971,2970
<2971=2973,2972
<2973=2974
<2974=2976,2975
<2978=2980,2979
<2980=2981
<2981=2983,2982
<2985=2987,2986
<2987=2988
<2988=2990,2989
<2992=2993
<2993=2995,2994
<2995=2997,2996
<2997=2998
<2998=3000,2999
<3001=3002
<3002=3015,3003
<3003=3014,3004
<3004=3008,3005
<3005=3007,3006
<3008=3010,3009
<3010=3011
<3011=3013,3012
<3016=3017
<3018=3019
<3020=3021
<3022=3023
<3024=3025
<3027=3028
<3028=3037,3029
<3029=3030
<3030=3031
<3031=3033,3032
<3033=3034
<3034=3036,3035
<3037=3038
<3039=3045,3040
<3040=3041
<3041=3042
<3042=3044,3043
<3045=3046
<3046=3055,3047
<3047=3049,3048
<3049=3051,3050
<3051=3052
<3052=3054,3053
<3055=3057,3056
<3057=3059,3058
<3059=3060
<3060=3062,3061
<3063=3064
<3064=3073,3065
<3065=3072,3066
<3066=3068,3067
<3068=3069
<3069=3071,3070
<3074=3081,3075
<3075=3080,3079,3078,3076
<3076=3077
<3081=3082
<3082=3091,3083
<3083=3085,3084
<3085=3087,3086
<3087=3088
<3088=3090,3089
<3091=3093,3092
<3093=3095,3094
<3095=3096
<3096=3098,3097
<3099=3159,3147,3100
<3100=3101
<3101=3120,3105,3102
<3102=3103
<3103=3104
<3105=3106
<3106=3107
<3107=3119,3108
<3108=3110,3109
<3110=3112,3111
<3112=3113
<3113=3115,3114
<3115=3117,3116
<3117=3118
<3120=3121
<3121=3139,3122
<3122=3131,3123
<3123=3125,3124
<3125=3127,3126
<3127=3128
<3128=3130,3129
<3131=3133,3132
<3133=3135,3134
<3135=3136
<3136=3138,3137
<3139=3141,3140
<3141=3143,3142
<3143=3144
<3144=3146,3145
<3147=3148
<3148=3149
<3149=3158,3150
<3150=3152,3151
<3152=3154,3153
<3154=3155
<3155=3157,3156
<3159=3160
<3160=3162,3161
<3162=3164,3163
<3164=3165
<3165=3167,3166
<3167=3169,3168
<3169=3170
<3170=3172,3171
<3173=3185,3180,3174
<3174=3175
<3175=3176
<3176=3177
<3177=3179,3178
<3180=3181
<3181=3182
<3182=3184,3183
<3185=3186
<3186=3195,3187
<3187=3189,3188
<3189=3191,3190
<3191=3192
<3192=3194,3193
<3195=3197,3196
<3197=3199,3198
<3199=3200
<3200=3202,3201
<3203=3204
<3204=3213,3205
<3205=3212,3206
<3206=3208,3207
<3208=3209
<3209=3211,3210
<3214=3215
<3216=3217
<3218=3219
<3220=3221
<3222=3223
<3224=3225
<3226=3227
<3227=3229,3228
<3229=3230
<3230=3232,3231
<3233=3282,3258,3234
<3234=3235
<3235=3254,3240,3236
<3236=3237
<3237=3239,3238
<3240=3241
<3241=3253,3242
<3242=3251,3243
<3243=3244
<3244=3245
<3245=3247,3246
<3247=3248
<3248=3250,3249
<3251=3252
<3254=3255
<3255=3257,3256
<3258=3281,3280,3279,3278,3277,3263,3259
<3259=3260
<3260=3262,3261
<3263=3264
<3264=3266,3265
<3266=3275,3267
<3267=3268
<3268=3269
<3269=3271,3270
<3271=3272
<3272=3274,3273
<3275=3276
<3282=3283
<3283=3293,3284
<3284=3286,3285
<3286=3287
<3287=3289,3288
<3289=3291,3290
<3291=3292
<3293=3295,3294
<3295=3296
<3297=3298
<3298=3300,3299
<3301=3302
<3302=3304,3303
<3331=3337,3336,3332
<3332=3333
<3333=3335,3334
<3337=3353,3338
<3338=3352,3339
<3339=3340
<3340=3341
<3341=3350,3342
<3342=3343
<3343=3344
<3344=3346,3345
<3346=3347
<3347=3349,3348
<3350=3351
<3353=3354
<3354=3460,3450,3446,3400,3362,3355
<3355=3356
<3356=3358,3357
<3358=3359
<3359=3361,3360
<3362=3399,3363
<3363=3383,3373,3364
<3364=3365
<3365=3369,3366
<3366=3367
<3367=3368
<3369=3370
<3370=3372,3371
<3373=3374
<3374=3382,3375
<3375=3381,3376
<3376=3380,3377
<3377=3379,3378
<3383=3384
<3384=3397,3385
<3385=3386
<3386=3387
<3387=3391,3388
<3388=3390,3389
<3391=3395,3392
<3392=3393
<3393=3394
<3395=3396
<3397=3398
<3400=3401
<3401=3436,3420,3411,3402
<3402=3403
<3403=3407,3404
<3404=3405
<3405=3406
<3407=3408
<3408=3410,3409
<3411=3412
<3412=3416,3413
<3413=3414
<3414=3415
<3416=3417
<3417=3419,3418
<3420=3421
<3421=3434,3422
<3422=3423
<3423=3424
<3424=3428,3425
<3425=3427,3426
<3428=3432,3429
<3429=3430
<3430=3431
<3432=3433
<3434=3435
<3436=3437
<3437=3445,3438
<3438=3442,3439
<3439=3441,3440
<3442=3444,3443
<3446=3447
<3447=3449,3448
<3450=3451
<3451=3459,3458,3452
<3452=3454,3453
<3454=3455
<3455=3457,3456
<3460=3461
<3461=3469,3468,3462
<3462=3467,3463
<3463=3465,3464
<3465=3466
<3486=3492,3491,3487
<3487=3488
<3488=3490,3489
<3492=3508,3493
<3493=3507,3494
<3494=3495
<3495=3496
<3496=3505,3497
<3497=3498
<3498=3499
<3499=3501,3500
<3501=3502
<3502=3504,3503
<3505=3506
<3508=3509
<3509=3697,3684,3667,3650,3622,3613,3606,3584,3574,3534,3533,3532,3531,3530,3529,3527,3526,3525,3517,3510
<3510=3511
<3511=3513,3512
<3513=3514
<3514=3516,3515
<3517=3518
<3518=3519
<3519=3523,3520
<3520=3521
<3521=3522
<3523=3524
<3527=3528
<3534=3535
<3535=3573,3572,3536
<3536=3569,3537
<3537=3568,3538
<3538=3557,3539
<3539=3547,3540
<3540=3544,3541
<3541=3543,3542
<3544=3546,3545
<3547=3551,3548
<3548=3550,3549
<3551=3556,3552
<3552=3554,3553
<3554=3555
<3557=3567,3558
<3558=3560,3559
<3560=3561
<3561=3563,3562
<3563=3565,3564
<3565=3566
<3569=3571,3570
<3574=3575
<3575=3583,3582,3576
<3576=3578,3577
<3578=3579
<3579=3581,3580
<3584=3597,3585
<3585=3586
<3586=3587
<3587=3596,3588
<3588=3590,3589
<3590=3591
<3591=3593,3592
<3593=3595,3594
<3597=3598
<3598=3600,3599
<3600=3602,3601
<3602=3603
<3603=3605,3604
<3606=3607
<3607=3612,3611,3608
<3608=3610,3609
<3613=3614
<3614=3621,3620,3615
<3615=3619,3616
<3616=3618,3617
<3622=3632,3623
<3623=3625,3624
<3625=3626
<3626=3630,3627
<3627=3628
<3628=3629
<3630=3631
<3632=3633
<3633=3642,3634
<3634=3636,3635
<3636=3638,3637
<3638=3639
<3639=3641,3640
<3642=3644,3643
<3644=3646,3645
<3646=3647
<3647=3649,3648
<3650=3660,3651
<3651=3653,3652
<3653=3654
<3654=3658,3655
<3655=3656
<3656=3657
<3658=3659
<3660=3661
<3661=3666,3662
<3662=3664,3663
<3664=3665
<3667=3677,3668
<3668=3670,3669
<3670=3671
<3671=3675,3672
<3672=3673
<3673=3674
<3675=3676
<3677=3678
<3678=3683,3679
<3679=3681,3680
<3681=3682
<3684=3685
<3685=3693,3686
<3686=3691,3689,3687
<3687=3688
<3689=3690
<3691=3692
<3693=3694
<3694=3696,3695
<3697=3698
<3698=3700,3699
<3720=3726,3725,3721
<3721=3722
<3722=3724,3723
<3726=3742,3727
<3727=3741,3728
<3728=3729
<3729=3730
<3730=3739,3731
<3731=3732
<3732=3733
<3733=3735,3734
<3735=3736
<3736=3738,3737
<3739=3740
<3742=3743
<3743=3922,3909,3892,3875,3847,3840,3818,3808,3768,3767,3766,3765,3764,3763,3761,3760,3759,3751,3744
<3744=3745
<3745=3747,3746
<3747=3748
<3748=3750,3749
<3751=3752
<3752=3753
<3753=3757,3754
<3754=3755
<3755=3756
<3757=3758
<3761=3762
<3768=3769
<3769=3807,3806,3770
<3770=3803,3771
<3771=3802,3772
<3772=3791,3773
<3773=3781,3774
<3774=3778,3775
<3775=3777,3776
<3778=3780,3779
<3781=3785,3782
<3782=3784,3783
<3785=3790,3786
<3786=3788,3787
<3788=3789
<3791=3801,3792
<3792=3794,3793
<3794=3795
<3795=3797,3796
<3797=3799,3798
<3799=3800
<3803=3805,3804
<3808=3809
<3809=3817,3816,3810
<3810=3812,3811
<3812=3813
<3813=3815,3814
<3818=3831,3819
<3819=3820
<3820=3821
<3821=3830,3822
<3822=3824,3823
<3824=3825
<3825=3827,3826
<3827=3829,3828
<3831=3832
<3832=3834,3833
<3834=3836,3835
<3836=3837
<3837=3839,3838
<3840=3841
<3841=3846,3845,3842
<3842=3844,3843
<3847=3857,3848
<3848=3850,3849
<3850=3851
<3851=3855,3852
<3852=3853
<3853=3854
<3855=3856
<3857=3858
<3858=3867,3859
<3859=3861,3860
<3861=3863,3862
<3863=3864
<3864=3866,3865
<3867=3869,3868
<3869=3871,3870
<3871=3872
<3872=3874,3873
<3875=3885,3876
<3876=3878,3877
<3878=3879
<3879=3883,3880
<3880=3881
<3881=3882
<3883=3884
<3885=3886
<3886=3891,3887
<3887=3889,3888
<3889=3890
<3892=3902,3893
<3893=3895,3894
<3895=3896
<3896=3900,3897
<3897=3898
<3898=3899
<3900=3901
<3902=3903
<3903=3908,3904
<3904=3906,3905
<3906=3907
<3909=3910
<3910=3918,3911
<3911=3916,3914,3912
<3912=3913
<3914=3915
<3916=3917
<3918=3919
<3919=3921,3920
<3922=3923
<3923=3925,3924
<3944=3950,3949,3945
<3945=3946
<3946=3948,3947
<3950=4033,4016,4012,3999,3980,3958,3951
<3951=3952
<3952=3956,3953
<3953=3954
<3954=3955
<3956=3957
<3958=3959
<3959=3979,3978,3960
<3960=3975,3961
<3961=3966,3962
<3962=3964,3963
<3964=3965
<3966=3968,3967
<3968=3969
<3969=3971,3970
<3971=3973,3972
<3973=3974
<3975=3977,3976
<3980=3990,3981
<3981=3983,3982
<3983=3984
<3984=3988,3985
<3985=3986
<3986=3987
<3988=3989
<3990=3991
<3991=3993,3992
<3993=3995,3994
<3995=3996
<3996=3998,3997
<3999=4000
<4000=4008,4001
<4001=4006,4004,4002
<4002=4003
<4004=4005
<4006=4007
<4008=4009
<4009=4011,4010
<4012=4013
<4013=4015,4014
<4016=4026,4017
<4017=4019,4018
<4019=4020
<4020=4024,4021
<4021=4022
<4022=4023
<4024=4025
<4026=4027
<4027=4032,4028
<4028=4030,4029
<4030=4031
<4033=4043,4034
<4034=4036,4035
<4036=4037
<4037=4041,4038
<4038=4039
<4039=4040
<4041=4042
<4043=4044
<4044=4049,4045
<4045=4047,4046
<4047=4048
<4060=4066,4065,4061
<4061=4062
<4062=4064,4063
<4066=4274,4257,4253,4240,4221,4199,4085,4082,4067
<4067=4081,4068
<4068=4069
<4069=4070
<4070=4079,4071
<4071=4072
<4072=4073
<4073=4075,4074
<4075=4076
<4076=4078,4077
<4079=4080
<4082=4084,4083
<4085=4086
<4086=4189,4178,4171,4170,4169,4168,4167,4165,4164,4163,4162,4161,4160,4159,4158,4157,4116,4112,4108,4099,4087
<4087=4088
<4088=4097,4089
<4089=4090
<4090=4091
<4091=4093,4092
<4093=4094
<4094=4096,4095
<4097=4098
<4099=4100
<4100=4107,4101
<4101=4103,4102
<4103=4104
<4104=4106,4105
<4108=4109
<4109=4111,4110
<4112=4113
<4113=4115,4114
<4116=4153,4149,4138,4129,4117
<4117=4118
<4118=4127,4119
<4119=4120
<4120=4121
<4121=4123,4122
<4123=4124
<4124=4126,4125
<4127=4128
<4129=4130
<4130=4137,4131
<4131=4133,4132
<4133=4134
<4134=4136,4135
<4138=4139
<4139=4148,4140
<4140=4142,4141
<4142=4144,4143
<4144=4145
<4145=4147,4146
<4149=4150
<4150=4152,4151
<4153=4154
<4154=4156,4155
<4165=4166
<4171=4172
<4172=4174,4173
<4174=4175
<4175=4177,4176
<4178=4179
<4179=4188,4187,4180
<4180=4184,4181
<4181=4183,4182
<4184=4186,4185
<4189=4190
<4190=4198,4197,4191
<4191=4193,4192
<4193=4194
<4194=4196,4195
<4199=4200
<4200=4220,4219,4201
<4201=4216,4202
<4202=4207,4203
<4203=4205,4204
<4205=4206
<4207=4209,4208
<4209=4210
<4210=4212,4211
<4212=4214,4213
<4214=4215
<4216=4218,4217
<4221=4231,4222
<4222=4224,4223
<4224=4225
<4225=4229,4226
<4226=4227
<4227=4228
<4229=4230
<4231=4232
<4232=4234,4233
<4234=4236,4235
<4236=4237
<4237=4239,4238
<4240=4241
<4241=4249,4242
<4242=4247,4245,4243
<4243=4244
<4245=4246
<4247=4248
<4249=4250
<4250=4252,4251
<4253=4254
<4254=4256,4255
<4257=4267,4258
<4258=4260,4259
<4260=4261
<4261=4265,4262
<4262=4263
<4263=4264
<4265=4266
<4267=4268
<4268=4273,4269
<4269=4271,4270
<4271=4272
<4274=4284,4275
<4275=4277,4276
<4277=4278
<4278=4282,4279
<4279=4280
<4280=4281
<4282=4283
<4284=4285
<4285=4290,4286
<4286=4288,4287
<4288=4289
<4310=4316,4315,4311
<4311=4312
<4312=4314,4313
<4316=4428,4411,4407,4394,4375,4363,4333,4317
<4317=4318
<4318=4331,4319
<4319=4320
<4320=4321
<4321=4325,4322
<4322=4324,4323
<4325=4329,4326
<4326=4327
<4327=4328
<4329=4330
<4331=4332
<4333=4334
<4334=4358,4335
<4335=4356,4336
<4336=4352,4342,4337
<4337=4338
<4338=4340,4339
<4340=4341
<4342=4343
<4343=4345,4344
<4345=4346
<4346=4348,4347
<4348=4350,4349
<4350=4351
<4352=4353
<4353=4355,4354
<4356=4357
<4358=4360,4359
<4360=4362,4361
<4363=4364
<4364=4374,4373,4365
<4365=4372,4366
<4366=4371,4367
<4367=4369,4368
<4369=4370
<4375=4385,4376
<4376=4378,4377
<4378=4379
<4379=4383,4380
<4380=4381
<4381=4382
<4383=4384
<4385=4386
<4386=4388,4387
<4388=4390,4389
<4390=4391
<4391=4393,4392
<4394=4395
<4395=4403,4396
<4396=4401,4399,4397
<4397=4398
<4399=4400
<4401=4402
<4403=4404
<4404=4406,4405
<4407=4408
<4408=4410,4409
<4411=4421,4412
<4412=4414,4413
<4414=4415
<4415=4419,4416
<4416=4417
<4417=4418
<4419=4420
<4421=4422
<4422=4427,4423
<4423=4425,4424
<4425=4426
<4428=4438,4429
<4429=4431,4430
<4431=4432
<4432=4436,4433
<4433=4434
<4434=4435
<4436=4437
<4438=4439
<4439=4444,4440
<4440=4442,4441
<4442=4443
<4467=4470,4469,4468
<4470=4530,4518,4517,4504,4491,4482,4471
<4471=4472
<4472=4476,4473
<4473=4474
<4474=4475
<4476=4477
<4477=4479,4478
<4479=4481,4480
<4482=4483
<4483=4489,4484
<4484=4485
<4485=4486
<4486=4488,4487
<4489=4490
<4491=4493,4492
<4493=4494
<4494=4503,4495
<4495=4497,4496
<4497=4498
<4498=4500,4499
<4500=4502,4501
<4504=4505
<4505=4516,4506
<4506=4510,4507
<4507=4508
<4508=4509
<4510=4511
<4511=4513,4512
<4513=4515,4514
<4518=4519
<4519=4529,4528,4520
<4520=4527,4521
<4521=4526,4522
<4522=4524,4523
<4524=4525
<4530=4532,4531
<4532=4533
<4533=4538,4534
<4534=4536,4535
<4536=4537
