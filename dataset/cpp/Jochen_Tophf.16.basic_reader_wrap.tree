>7	FunctionDef	BasicReaderWrap 
>8	ParameterList	v8 
>9	Parameter	 
>10	Identifier	target
>11	ParameterType	v8 
>12	ReturnType	void
>13	CompoundStatement	 
>14	ExpressionStatement	 
>15	CallExpression	target -> Set ( symbol_BasicReader , constructor -> GetFunction ( ) )
>16	ArgumentList	symbol_BasicReader
>17	Argument	constructor -> GetFunction ( )
>18	CallExpression	constructor -> GetFunction ( )
>19	ArgumentList	 
>20	Callee	constructor -> GetFunction
>21	PtrMemberAccess	constructor -> GetFunction
>22	Identifier	GetFunction
>23	Identifier	constructor
>24	Argument	symbol_BasicReader
>25	Identifier	symbol_BasicReader
>26	Callee	target -> Set
>27	PtrMemberAccess	target -> Set
>28	Identifier	Set
>29	Identifier	target
>30	ExpressionStatement	 
>31	CallExpression	node 
>32	ArgumentList	constructor
>33	Argument	read_all
>34	Identifier	read_all
>35	Argument	\"read_all\"
>36	PrimaryExpression	\"read_all\"
>37	Argument	constructor
>38	Identifier	constructor
>39	Callee	node 
>40	Identifier	node 
>41	ExpressionStatement	 
>42	CallExpression	node 
>43	ArgumentList	constructor
>44	Argument	read
>45	Identifier	read
>46	Argument	\"read\"
>47	PrimaryExpression	\"read\"
>48	Argument	constructor
>49	Identifier	constructor
>50	Callee	node 
>51	Identifier	node 
>52	ExpressionStatement	 
>53	CallExpression	node 
>54	ArgumentList	constructor
>55	Argument	close
>56	Identifier	close
>57	Argument	\"close\"
>58	PrimaryExpression	\"close\"
>59	Argument	constructor
>60	Identifier	constructor
>61	Callee	node 
>62	Identifier	node 
>63	ExpressionStatement	 
>64	CallExpression	node 
>65	ArgumentList	constructor
>66	Argument	header
>67	Identifier	header
>68	Argument	\"header\"
>69	PrimaryExpression	\"header\"
>70	Argument	constructor
>71	Identifier	constructor
>72	Callee	node 
>73	Identifier	node 
>74	ExpressionStatement	 
>75	CallExpression	constructor -> SetClassName ( symbol_BasicReader )
>76	ArgumentList	symbol_BasicReader
>77	Argument	symbol_BasicReader
>78	Identifier	symbol_BasicReader
>79	Callee	constructor -> SetClassName
>80	PtrMemberAccess	constructor -> SetClassName
>81	Identifier	SetClassName
>82	Identifier	constructor
>83	ExpressionStatement	 
>84	CallExpression	constructor -> InstanceTemplate ( ) -> SetInternalFieldCount ( 1 )
>85	ArgumentList	1
>86	Argument	1
>87	PrimaryExpression	1
>88	Callee	constructor -> InstanceTemplate ( ) -> SetInternalFieldCount
>89	PtrMemberAccess	constructor -> InstanceTemplate ( ) -> SetInternalFieldCount
>90	Identifier	SetInternalFieldCount
>91	CallExpression	constructor -> InstanceTemplate ( )
>92	ArgumentList	 
>93	Callee	constructor -> InstanceTemplate
>94	PtrMemberAccess	constructor -> InstanceTemplate
>95	Identifier	InstanceTemplate
>96	Identifier	constructor
>97	ExpressionStatement	 
>98	CallExpression	New ( v8 
>99	ArgumentList	v8 
>100	Argument	v8 
>101	CallExpression	v8 
>102	ArgumentList	BasicReaderWrap 
>103	Argument	BasicReaderWrap 
>104	Identifier	BasicReaderWrap 
>105	Callee	v8 
>106	Identifier	v8 
>107	Callee	New
>108	Identifier	New
>109	Statement	 
>110	Statement	 
>111	Statement	 
>112	Statement	 
>113	Statement	 
>114	Statement	 
>115	Statement	 
>116	Statement	 
>117	Statement	 
>118	Statement	 
>119	Statement	 
>120	IdentifierDeclStatement	 
>121	IdentifierDecl	scope
>122	Identifier	scope
>123	IdentifierDeclType	v8 
>140	FunctionDef	BasicReaderWrap 
>141	ParameterList	const v8 
>142	Parameter	 
>143	Identifier	args
>144	ParameterType	const v8 
>145	ReturnType	v8 
>146	CompoundStatement	 
>147	ReturnStatement	 
>148	CallExpression	scope . Close ( v8 
>149	ArgumentList	v8 
>150	Argument	v8 
>151	CallExpression	v8 
>152	ArgumentList	 
>153	Callee	v8 
>154	Identifier	v8 
>155	Callee	scope . Close
>156	MemberAccess	scope . Close
>157	Identifier	Close
>158	Identifier	scope
>159	BlockStarter	 
>160	CompoundStatement	 
>161	ReturnStatement	return ThrowException ( v8 
>162	CallExpression	ThrowException ( v8 
>163	ArgumentList	v8 
>164	Argument	v8 
>165	CallExpression	v8 
>166	ArgumentList	v8 
>167	Argument	v8 
>168	CallExpression	v8 
>169	ArgumentList	ex . what ( )
>170	Argument	ex . what ( )
>171	CallExpression	ex . what ( )
>172	ArgumentList	 
>173	Callee	ex . what
>174	MemberAccess	ex . what
>175	Identifier	what
>176	Identifier	ex
>177	Callee	v8 
>178	Identifier	v8 
>179	Callee	v8 
>180	Identifier	v8 
>181	Callee	ThrowException
>182	Identifier	ThrowException
>183	Identifier	ex
>184	BlockStarter	 
>185	CompoundStatement	 
>186	IfStatement	if ( args [ 0 ] -> IsString ( ) )
>187	ElseStatement	else
>188	IfStatement	if ( args [ 0 ] -> IsObject ( ) && FileWrap 
>189	ElseStatement	else
>190	CompoundStatement	 
>191	ReturnStatement	return ThrowException ( v8 
>192	CallExpression	ThrowException ( v8 
>193	ArgumentList	v8 
>194	Argument	v8 
>195	CallExpression	v8 
>196	ArgumentList	v8 
>197	Argument	v8 
>198	CallExpression	v8 
>199	ArgumentList	\"please provide a File object or string for the first argument when creating a BasicReader\"
>200	Argument	\"please provide a File object or string for the first argument when creating a BasicReader\"
>201	PrimaryExpression	\"please provide a File object or string for the first argument when creating a BasicReader\"
>202	Callee	v8 
>203	Identifier	v8 
>204	Callee	v8 
>205	Identifier	v8 
>206	Callee	ThrowException
>207	Identifier	ThrowException
>208	CompoundStatement	 
>209	ReturnStatement	return args . This ( ) ;
>210	CallExpression	args . This ( )
>211	ArgumentList	 
>212	Callee	args . This
>213	MemberAccess	args . This
>214	Identifier	This
>215	Identifier	args
>216	ExpressionStatement	reader_wrap -> Wrap ( args . This ( ) )
>217	CallExpression	reader_wrap -> Wrap ( args . This ( ) )
>218	ArgumentList	args . This ( )
>219	Argument	args . This ( )
>220	CallExpression	args . This ( )
>221	ArgumentList	 
>222	Callee	args . This
>223	MemberAccess	args . This
>224	Identifier	This
>225	Identifier	args
>226	Callee	reader_wrap -> Wrap
>227	PtrMemberAccess	reader_wrap -> Wrap
>228	Identifier	Wrap
>229	Identifier	reader_wrap
>230	IdentifierDeclStatement	BasicReaderWrap * reader_wrap = new BasicReaderWrap ( unwrap < FileWrap > ( file_obj ) , read_which_entities ) ;
>231	IdentifierDecl	* reader_wrap = new BasicReaderWrap ( unwrap < FileWrap > ( file_obj ) , read_which_entities )
>232	AssignmentExpr	* reader_wrap = new BasicReaderWrap ( unwrap < FileWrap > ( file_obj ) , read_which_entities )
>233	Expression	unwrap < FileWrap > ( file_obj ) , read_which_entities
>234	Identifier	read_which_entities
>235	RelationalExpression	unwrap < FileWrap > ( file_obj )
>236	RelationalExpression	FileWrap > ( file_obj )
>237	Identifier	file_obj
>238	Identifier	FileWrap
>239	Identifier	unwrap
>240	Identifier	reader_wrap
>241	Identifier	reader_wrap
>242	IdentifierDeclType	BasicReaderWrap *
>243	IdentifierDeclStatement	v8 
>244	IdentifierDecl	file_obj = args [ 0 ] -> ToObject ( )
>245	AssignmentExpr	file_obj = args [ 0 ] -> ToObject ( )
>246	CallExpression	args [ 0 ] -> ToObject ( )
>247	ArgumentList	 
>248	Callee	args [ 0 ] -> ToObject
>249	PtrMemberAccess	args [ 0 ] -> ToObject
>250	Identifier	ToObject
>251	ArrayIndexing	args [ 0 ]
>252	PrimaryExpression	0
>253	Identifier	args
>254	Identifier	file_obj
>255	Identifier	file_obj
>256	IdentifierDeclType	v8 
>257	Condition	args [ 0 ] -> IsObject ( ) && FileWrap 
>258	AndExpression	args [ 0 ] -> IsObject ( ) && FileWrap 
>259	CallExpression	FileWrap 
>260	ArgumentList	args [ 0 ] -> ToObject ( )
>261	Argument	args [ 0 ] -> ToObject ( )
>262	CallExpression	args [ 0 ] -> ToObject ( )
>263	ArgumentList	 
>264	Callee	args [ 0 ] -> ToObject
>265	PtrMemberAccess	args [ 0 ] -> ToObject
>266	Identifier	ToObject
>267	ArrayIndexing	args [ 0 ]
>268	PrimaryExpression	0
>269	Identifier	args
>270	Callee	FileWrap 
>271	PtrMemberAccess	FileWrap 
>272	Identifier	HasInstance
>273	Identifier	FileWrap 
>274	CallExpression	args [ 0 ] -> IsObject ( )
>275	ArgumentList	 
>276	Callee	args [ 0 ] -> IsObject
>277	PtrMemberAccess	args [ 0 ] -> IsObject
>278	Identifier	IsObject
>279	ArrayIndexing	args [ 0 ]
>280	PrimaryExpression	0
>281	Identifier	args
>282	CompoundStatement	 
>283	ReturnStatement	return args . This ( ) ;
>284	CallExpression	args . This ( )
>285	ArgumentList	 
>286	Callee	args . This
>287	MemberAccess	args . This
>288	Identifier	This
>289	Identifier	args
>290	ExpressionStatement	reader_wrap -> Wrap ( args . This ( ) )
>291	CallExpression	reader_wrap -> Wrap ( args . This ( ) )
>292	ArgumentList	args . This ( )
>293	Argument	args . This ( )
>294	CallExpression	args . This ( )
>295	ArgumentList	 
>296	Callee	args . This
>297	MemberAccess	args . This
>298	Identifier	This
>299	Identifier	args
>300	Callee	reader_wrap -> Wrap
>301	PtrMemberAccess	reader_wrap -> Wrap
>302	Identifier	Wrap
>303	Identifier	reader_wrap
>304	IdentifierDeclStatement	BasicReaderWrap * reader_wrap = new BasicReaderWrap ( file , read_which_entities ) ;
>305	IdentifierDecl	* reader_wrap = new BasicReaderWrap ( file , read_which_entities )
>306	AssignmentExpr	* reader_wrap = new BasicReaderWrap ( file , read_which_entities )
>307	Expression	file , read_which_entities
>308	Identifier	read_which_entities
>309	Identifier	file
>310	Identifier	reader_wrap
>311	Identifier	reader_wrap
>312	IdentifierDeclType	BasicReaderWrap *
>313	IdentifierDeclStatement	osmium 
>314	IdentifierDecl	file ( * filename )
>315	UnaryOp	* filename
>316	Identifier	filename
>317	UnaryOperator	*
>318	Identifier	file
>319	IdentifierDeclType	osmium 
>320	ExpressionStatement	 
>321	CompoundStatement	 
>322	Statement	]
>323	Statement	0
>324	Statement	[
>325	Statement	args
>326	Statement	filename
>327	Statement	Utf8Value
>328	Statement	 
>329	Statement	String
>330	Statement	 
>331	Statement	v8
>332	Condition	args [ 0 ] -> IsString ( )
>333	CallExpression	args [ 0 ] -> IsString ( )
>334	ArgumentList	 
>335	Callee	args [ 0 ] -> IsString
>336	PtrMemberAccess	args [ 0 ] -> IsString
>337	Identifier	IsString
>338	ArrayIndexing	args [ 0 ]
>339	PrimaryExpression	0
>340	Identifier	args
>341	IfStatement	if ( args . Length ( ) == 2 )
>342	CompoundStatement	 
>343	ExpressionStatement	read_which_entities = object_to_entity_bits ( args [ 1 ] -> ToObject ( ) )
>344	AssignmentExpr	read_which_entities = object_to_entity_bits ( args [ 1 ] -> ToObject ( ) )
>345	CallExpression	object_to_entity_bits ( args [ 1 ] -> ToObject ( ) )
>346	ArgumentList	args [ 1 ] -> ToObject ( )
>347	Argument	args [ 1 ] -> ToObject ( )
>348	CallExpression	args [ 1 ] -> ToObject ( )
>349	ArgumentList	 
>350	Callee	args [ 1 ] -> ToObject
>351	PtrMemberAccess	args [ 1 ] -> ToObject
>352	Identifier	ToObject
>353	ArrayIndexing	args [ 1 ]
>354	PrimaryExpression	1
>355	Identifier	args
>356	Callee	object_to_entity_bits
>357	Identifier	object_to_entity_bits
>358	Identifier	read_which_entities
>359	IfStatement	if ( ! args [ 1 ] -> IsObject ( ) )
>360	CompoundStatement	 
>361	ReturnStatement	return ThrowException ( v8 
>362	CallExpression	ThrowException ( v8 
>363	ArgumentList	v8 
>364	Argument	v8 
>365	CallExpression	v8 
>366	ArgumentList	v8 
>367	Argument	v8 
>368	CallExpression	v8 
>369	ArgumentList	\"Second argument to BasicReader constructor must be object\"
>370	Argument	\"Second argument to BasicReader constructor must be object\"
>371	PrimaryExpression	\"Second argument to BasicReader constructor must be object\"
>372	Callee	v8 
>373	Identifier	v8 
>374	Callee	v8 
>375	Identifier	v8 
>376	Callee	ThrowException
>377	Identifier	ThrowException
>378	Condition	! args [ 1 ] -> IsObject ( )
>379	UnaryOp	! args [ 1 ] -> IsObject ( )
>380	CallExpression	args [ 1 ] -> IsObject ( )
>381	ArgumentList	 
>382	Callee	args [ 1 ] -> IsObject
>383	PtrMemberAccess	args [ 1 ] -> IsObject
>384	Identifier	IsObject
>385	ArrayIndexing	args [ 1 ]
>386	PrimaryExpression	1
>387	Identifier	args
>388	UnaryOperator	!
>389	Condition	args . Length ( ) == 2
>390	EqualityExpression	args . Length ( ) == 2
>391	PrimaryExpression	2
>392	CallExpression	args . Length ( )
>393	ArgumentList	 
>394	Callee	args . Length
>395	MemberAccess	args . Length
>396	Identifier	Length
>397	Identifier	args
>398	IdentifierDeclStatement	osmium 
>399	IdentifierDecl	read_which_entities = osmium 
>400	AssignmentExpr	read_which_entities = osmium 
>401	Identifier	osmium 
>402	Identifier	osmium 
>403	Identifier	read_which_entities
>404	IdentifierDeclType	osmium 
>405	IfStatement	if ( args . Length ( ) < 1 || args . Length ( ) > 2 )
>406	CompoundStatement	 
>407	ReturnStatement	 
>408	CallExpression	ThrowException ( v8 
>409	ArgumentList	v8 
>410	Argument	v8 
>411	CallExpression	v8 
>412	ArgumentList	v8 
>413	Argument	v8 
>414	CallExpression	v8 
>415	ArgumentList	\"please provide a File object or string for the first argument and optional options v8
>416	Argument	\"please provide a File object or string for the first argument and optional options v8
>417	PrimaryExpression	\"please provide a File object or string for the first argument and optional options v8
>418	Callee	v8 
>419	Identifier	v8 
>420	Callee	v8 
>421	Identifier	v8 
>422	Callee	ThrowException
>423	Identifier	ThrowException
>424	Condition	 
>425	OrExpression	args . Length ( ) < 1 || args . Length ( ) > 2
>426	RelationalExpression	args . Length ( ) > 2
>427	PrimaryExpression	2
>428	CallExpression	args . Length ( )
>429	ArgumentList	 
>430	Callee	args . Length
>431	MemberAccess	args . Length
>432	Identifier	Length
>433	Identifier	args
>434	RelationalExpression	args . Length ( ) < 1
>435	PrimaryExpression	1
>436	CallExpression	args . Length ( )
>437	ArgumentList	 
>438	Callee	args . Length
>439	MemberAccess	args . Length
>440	Identifier	Length
>441	Identifier	args
>442	IfStatement	if ( ! args . IsConstructCall ( ) )
>443	CompoundStatement	 
>444	ReturnStatement	 
>445	CallExpression	ThrowException ( v8 
>446	ArgumentList	v8 
>447	Argument	v8 
>448	CallExpression	v8 
>449	ArgumentList	v8 
>450	Argument	v8 
>451	CallExpression	v8 
>452	ArgumentList	\"Cannot call constructor as function, you need to use 'new' keyword\"
>453	Argument	\"Cannot call constructor as function, you need to use 'new' keyword\"
>454	PrimaryExpression	\"Cannot call constructor as function, you need to use 'new' keyword\"
>455	Callee	v8 
>456	Identifier	v8 
>457	Callee	v8 
>458	Identifier	v8 
>459	Callee	ThrowException
>460	Identifier	ThrowException
>461	Condition	 
>462	UnaryOp	! args . IsConstructCall ( )
>463	CallExpression	args . IsConstructCall ( )
>464	ArgumentList	 
>465	Callee	args . IsConstructCall
>466	MemberAccess	args . IsConstructCall
>467	Identifier	IsConstructCall
>468	Identifier	args
>469	UnaryOperator	!
>470	IdentifierDeclStatement	 
>471	IdentifierDecl	scope
>472	Identifier	scope
>473	IdentifierDeclType	v8 
>509	FunctionDef	BasicReaderWrap 
>510	ParameterList	const v8 
>511	Parameter	 
>512	Identifier	args
>513	ParameterType	const v8 
>514	ReturnType	v8 
>515	CompoundStatement	 
>516	ReturnStatement	 
>517	CallExpression	scope . Close ( obj )
>518	ArgumentList	obj
>519	Argument	obj
>520	Identifier	obj
>521	Callee	scope . Close
>522	MemberAccess	scope . Close
>523	Identifier	Close
>524	Identifier	scope
>525	ExpressionStatement	 
>526	CallExpression	obj -> Set ( symbol_bounds , bounds_array )
>527	ArgumentList	symbol_bounds
>528	Argument	bounds_array
>529	Identifier	bounds_array
>530	Argument	symbol_bounds
>531	Identifier	symbol_bounds
>532	Callee	obj -> Set
>533	PtrMemberAccess	obj -> Set
>534	Identifier	Set
>535	Identifier	obj
>536	CompoundStatement	 
>537	ExpressionStatement	 
>538	CallExpression	bounds_array -> Set ( i ++ , create_js_box ( box ) )
>539	ArgumentList	i ++
>540	Argument	create_js_box ( box )
>541	CallExpression	create_js_box ( box )
>542	ArgumentList	box
>543	Argument	box
>544	Identifier	box
>545	Callee	create_js_box
>546	Identifier	create_js_box
>547	Argument	i ++
>548	IncDecOp	i ++
>549	IncDec	++
>550	Identifier	i
>551	Callee	bounds_array -> Set
>552	PtrMemberAccess	bounds_array -> Set
>553	Identifier	Set
>554	Identifier	bounds_array
>555	Statement	 
>556	Statement	 
>557	Statement	 
>558	Statement	 
>559	Statement	 
>560	Statement	 
>561	Label	 
>562	Identifier	box
>563	Statement	 
>564	Statement	 
>565	Statement	 
>566	Statement	 
>567	Statement	 
>568	Statement	 
>569	Statement	 
>570	IdentifierDeclStatement	 
>571	IdentifierDecl	i = 0
>572	AssignmentExpr	i = 0
>573	PrimaryExpression	0
>574	Identifier	i
>575	Identifier	i
>576	IdentifierDeclType	int
>577	ExpressionStatement	 
>578	AssignmentExpr	bounds_array = v8 
>579	CallExpression	v8 
>580	ArgumentList	header . boxes ( ) . size ( )
>581	Argument	header . boxes ( ) . size ( )
>582	CallExpression	header . boxes ( ) . size ( )
>583	ArgumentList	 
>584	Callee	header . boxes ( ) . size
>585	MemberAccess	header . boxes ( ) . size
>586	Identifier	size
>587	CallExpression	header . boxes ( )
>588	ArgumentList	 
>589	Callee	header . boxes
>590	MemberAccess	header . boxes
>591	Identifier	boxes
>592	Identifier	header
>593	Callee	v8 
>594	Identifier	v8 
>595	Identifier	bounds_array
>596	Statement	 
>597	ExpressionStatement	 
>598	CallExpression	obj -> Set ( symbol_generator , v8 
>599	ArgumentList	symbol_generator
>600	Argument	v8 
>601	CallExpression	v8 
>602	ArgumentList	header . get ( \"generator\" ) . c_str ( )
>603	Argument	header . get ( \"generator\" ) . c_str ( )
>604	CallExpression	header . get ( \"generator\" ) . c_str ( )
>605	ArgumentList	 
>606	Callee	header . get ( \"generator\" ) . c_str
>607	MemberAccess	header . get ( \"generator\" ) . c_str
>608	Identifier	c_str
>609	CallExpression	header . get ( \"generator\" )
>610	ArgumentList	\"generator\"
>611	Argument	\"generator\"
>612	PrimaryExpression	\"generator\"
>613	Callee	header . get
>614	MemberAccess	header . get
>615	Identifier	get
>616	Identifier	header
>617	Callee	v8 
>618	Identifier	v8 
>619	Argument	symbol_generator
>620	Identifier	symbol_generator
>621	Callee	obj -> Set
>622	PtrMemberAccess	obj -> Set
>623	Identifier	Set
>624	Identifier	obj
>625	IdentifierDeclStatement	 
>626	IdentifierDecl	& header = unwrap < BasicReaderWrap > ( args . This ( ) ) . header ( )
>627	AssignmentExpr	& header = unwrap < BasicReaderWrap > ( args . This ( ) ) . header ( )
>628	RelationalExpression	unwrap < BasicReaderWrap > ( args . This ( ) ) . header ( )
>629	RelationalExpression	BasicReaderWrap > ( args . This ( ) ) . header ( )
>630	CallExpression	( args . This ( ) ) . header ( )
>631	ArgumentList	 
>632	Callee	( args . This ( ) ) . header
>633	MemberAccess	( args . This ( ) ) . header
>634	Identifier	header
>635	CallExpression	args . This ( )
>636	ArgumentList	 
>637	Callee	args . This
>638	MemberAccess	args . This
>639	Identifier	This
>640	Identifier	args
>641	Identifier	BasicReaderWrap
>642	Identifier	unwrap
>643	Identifier	header
>644	Identifier	header
>645	IdentifierDeclType	const osmium 
>646	IdentifierDeclStatement	 
>647	IdentifierDecl	obj = v8 
>648	AssignmentExpr	obj = v8 
>649	CallExpression	v8 
>650	ArgumentList	 
>651	Callee	v8 
>652	Identifier	v8 
>653	Identifier	obj
>654	Identifier	obj
>655	IdentifierDeclType	v8 
>656	IdentifierDeclStatement	 
>657	IdentifierDecl	scope
>658	Identifier	scope
>659	IdentifierDeclType	v8 
>660	ExpressionStatement	 
>661	CallExpression	INSTANCE_CHECK ( BasicReaderWrap , \"BasicReader\" , \"header\" )
>662	ArgumentList	BasicReaderWrap
>663	Argument	\"header\"
>664	PrimaryExpression	\"header\"
>665	Argument	\"BasicReader\"
>666	PrimaryExpression	\"BasicReader\"
>667	Argument	BasicReaderWrap
>668	Identifier	BasicReaderWrap
>669	Callee	INSTANCE_CHECK
>670	Identifier	INSTANCE_CHECK
>696	FunctionDef	BasicReaderWrap 
>697	ParameterList	const v8 
>698	Parameter	 
>699	Identifier	args
>700	ParameterType	const v8 
>701	ReturnType	v8 
>702	CompoundStatement	 
>703	ReturnStatement	 
>704	CallExpression	scope . Close ( v8 
>705	ArgumentList	v8 
>706	Argument	v8 
>707	CallExpression	v8 
>708	ArgumentList	 
>709	Callee	v8 
>710	Identifier	v8 
>711	Callee	scope . Close
>712	MemberAccess	scope . Close
>713	Identifier	Close
>714	Identifier	scope
>715	BlockStarter	 
>716	CompoundStatement	 
>717	ReturnStatement	return ThrowException ( v8 
>718	CallExpression	ThrowException ( v8 
>719	ArgumentList	v8 
>720	Argument	v8 
>721	CallExpression	v8 
>722	ArgumentList	v8 
>723	Argument	v8 
>724	CallExpression	v8 
>725	ArgumentList	msg . c_str ( )
>726	Argument	msg . c_str ( )
>727	CallExpression	msg . c_str ( )
>728	ArgumentList	 
>729	Callee	msg . c_str
>730	MemberAccess	msg . c_str
>731	Identifier	c_str
>732	Identifier	msg
>733	Callee	v8 
>734	Identifier	v8 
>735	Callee	v8 
>736	Identifier	v8 
>737	Callee	ThrowException
>738	Identifier	ThrowException
>739	ExpressionStatement	msg += e . what ( )
>740	AssignmentExpr	msg += e . what ( )
>741	CallExpression	e . what ( )
>742	ArgumentList	 
>743	Callee	e . what
>744	MemberAccess	e . what
>745	Identifier	what
>746	Identifier	e
>747	Identifier	msg
>748	IdentifierDeclStatement	std 
>749	IdentifierDecl	msg ( \"osmium error
>750	PrimaryExpression	\"osmium error
>751	Identifier	msg
>752	IdentifierDeclType	std 
>753	Identifier	e
>754	BlockStarter	 
>755	CompoundStatement	 
>756	ExpressionStatement	unwrap < BasicReaderWrap > ( args . This ( ) ) . close ( )
>757	RelationalExpression	unwrap < BasicReaderWrap > ( args . This ( ) ) . close ( )
>758	RelationalExpression	BasicReaderWrap > ( args . This ( ) ) . close ( )
>759	CallExpression	( args . This ( ) ) . close ( )
>760	ArgumentList	 
>761	Callee	( args . This ( ) ) . close
>762	MemberAccess	( args . This ( ) ) . close
>763	Identifier	close
>764	CallExpression	args . This ( )
>765	ArgumentList	 
>766	Callee	args . This
>767	MemberAccess	args . This
>768	Identifier	This
>769	Identifier	args
>770	Identifier	BasicReaderWrap
>771	Identifier	unwrap
>772	IdentifierDeclStatement	 
>773	IdentifierDecl	scope
>774	Identifier	scope
>775	IdentifierDeclType	v8 
>776	ExpressionStatement	 
>777	CallExpression	INSTANCE_CHECK ( BasicReaderWrap , \"BasicReader\" , \"close\" )
>778	ArgumentList	BasicReaderWrap
>779	Argument	\"close\"
>780	PrimaryExpression	\"close\"
>781	Argument	\"BasicReader\"
>782	PrimaryExpression	\"BasicReader\"
>783	Argument	BasicReaderWrap
>784	Identifier	BasicReaderWrap
>785	Callee	INSTANCE_CHECK
>786	Identifier	INSTANCE_CHECK
>803	FunctionDef	BasicReaderWrap 
>804	ParameterList	const v8 
>805	Parameter	 
>806	Identifier	args
>807	ParameterType	const v8 
>808	ReturnType	v8 
>809	CompoundStatement	 
>810	ReturnStatement	 
>811	CallExpression	scope . Close ( v8 
>812	ArgumentList	v8 
>813	Argument	v8 
>814	CallExpression	v8 
>815	ArgumentList	 
>816	Callee	v8 
>817	Identifier	v8 
>818	Callee	scope . Close
>819	MemberAccess	scope . Close
>820	Identifier	Close
>821	Identifier	scope
>822	BlockStarter	 
>823	CompoundStatement	 
>824	ReturnStatement	return ThrowException ( v8 
>825	CallExpression	ThrowException ( v8 
>826	ArgumentList	v8 
>827	Argument	v8 
>828	CallExpression	v8 
>829	ArgumentList	v8 
>830	Argument	v8 
>831	CallExpression	v8 
>832	ArgumentList	msg . c_str ( )
>833	Argument	msg . c_str ( )
>834	CallExpression	msg . c_str ( )
>835	ArgumentList	 
>836	Callee	msg . c_str
>837	MemberAccess	msg . c_str
>838	Identifier	c_str
>839	Identifier	msg
>840	Callee	v8 
>841	Identifier	v8 
>842	Callee	v8 
>843	Identifier	v8 
>844	Callee	ThrowException
>845	Identifier	ThrowException
>846	ExpressionStatement	msg += e . what ( )
>847	AssignmentExpr	msg += e . what ( )
>848	CallExpression	e . what ( )
>849	ArgumentList	 
>850	Callee	e . what
>851	MemberAccess	e . what
>852	Identifier	what
>853	Identifier	e
>854	Identifier	msg
>855	IdentifierDeclStatement	std 
>856	IdentifierDecl	msg ( \"osmium error
>857	PrimaryExpression	\"osmium error
>858	Identifier	msg
>859	IdentifierDeclType	std 
>860	Identifier	e
>861	BlockStarter	 
>862	CompoundStatement	 
>863	IfStatement	if ( buffer )
>864	CompoundStatement	 
>865	ReturnStatement	return scope . Close ( new_external < BufferWrap > ( std 
>866	CallExpression	scope . Close ( new_external < BufferWrap > ( std 
>867	ArgumentList	new_external < BufferWrap > ( std 
>868	Argument	new_external < BufferWrap > ( std 
>869	RelationalExpression	new_external < BufferWrap > ( std 
>870	RelationalExpression	BufferWrap > ( std 
>871	CallExpression	std 
>872	ArgumentList	buffer
>873	Argument	buffer
>874	Identifier	buffer
>875	Callee	std 
>876	Identifier	std 
>877	Identifier	BufferWrap
>878	Identifier	new_external
>879	Callee	scope . Close
>880	MemberAccess	scope . Close
>881	Identifier	Close
>882	Identifier	scope
>883	Condition	buffer
>884	Identifier	buffer
>885	IdentifierDeclStatement	osmium 
>886	IdentifierDecl	buffer = unwrap < BasicReaderWrap > ( args . This ( ) ) . read ( )
>887	AssignmentExpr	buffer = unwrap < BasicReaderWrap > ( args . This ( ) ) . read ( )
>888	RelationalExpression	unwrap < BasicReaderWrap > ( args . This ( ) ) . read ( )
>889	RelationalExpression	BasicReaderWrap > ( args . This ( ) ) . read ( )
>890	CallExpression	( args . This ( ) ) . read ( )
>891	ArgumentList	 
>892	Callee	( args . This ( ) ) . read
>893	MemberAccess	( args . This ( ) ) . read
>894	Identifier	read
>895	CallExpression	args . This ( )
>896	ArgumentList	 
>897	Callee	args . This
>898	MemberAccess	args . This
>899	Identifier	This
>900	Identifier	args
>901	Identifier	BasicReaderWrap
>902	Identifier	unwrap
>903	Identifier	buffer
>904	Identifier	buffer
>905	IdentifierDeclType	osmium 
>906	IdentifierDeclStatement	 
>907	IdentifierDecl	scope
>908	Identifier	scope
>909	IdentifierDeclType	v8 
>910	ExpressionStatement	 
>911	CallExpression	INSTANCE_CHECK ( BasicReaderWrap , \"BasicReader\" , \"read\" )
>912	ArgumentList	BasicReaderWrap
>913	Argument	\"read\"
>914	PrimaryExpression	\"read\"
>915	Argument	\"BasicReader\"
>916	PrimaryExpression	\"BasicReader\"
>917	Argument	BasicReaderWrap
>918	Identifier	BasicReaderWrap
>919	Callee	INSTANCE_CHECK
>920	Identifier	INSTANCE_CHECK
>943	FunctionDef	BasicReaderWrap 
>944	ParameterList	const v8 
>945	Parameter	 
>946	Identifier	args
>947	ParameterType	const v8 
>948	ReturnType	v8 
>949	CompoundStatement	 
>950	ReturnStatement	 
>951	CallExpression	scope . Close ( v8 
>952	ArgumentList	v8 
>953	Argument	v8 
>954	CallExpression	v8 
>955	ArgumentList	 
>956	Callee	v8 
>957	Identifier	v8 
>958	Callee	scope . Close
>959	MemberAccess	scope . Close
>960	Identifier	Close
>961	Identifier	scope
>962	BlockStarter	 
>963	CompoundStatement	 
>964	ReturnStatement	return ThrowException ( v8 
>965	CallExpression	ThrowException ( v8 
>966	ArgumentList	v8 
>967	Argument	v8 
>968	CallExpression	v8 
>969	ArgumentList	v8 
>970	Argument	v8 
>971	CallExpression	v8 
>972	ArgumentList	msg . c_str ( )
>973	Argument	msg . c_str ( )
>974	CallExpression	msg . c_str ( )
>975	ArgumentList	 
>976	Callee	msg . c_str
>977	MemberAccess	msg . c_str
>978	Identifier	c_str
>979	Identifier	msg
>980	Callee	v8 
>981	Identifier	v8 
>982	Callee	v8 
>983	Identifier	v8 
>984	Callee	ThrowException
>985	Identifier	ThrowException
>986	ExpressionStatement	msg += e . what ( )
>987	AssignmentExpr	msg += e . what ( )
>988	CallExpression	e . what ( )
>989	ArgumentList	 
>990	Callee	e . what
>991	MemberAccess	e . what
>992	Identifier	what
>993	Identifier	e
>994	Identifier	msg
>995	IdentifierDeclStatement	std 
>996	IdentifierDecl	msg ( \"osmium error
>997	PrimaryExpression	\"osmium error
>998	Identifier	msg
>999	IdentifierDeclType	std 
>1000	Identifier	e
>1001	BlockStarter	 
>1002	CompoundStatement	 
>1003	IfStatement	if ( buffer )
>1004	CompoundStatement	 
>1005	ReturnStatement	return scope . Close ( new_external < BufferWrap > ( std 
>1006	CallExpression	scope . Close ( new_external < BufferWrap > ( std 
>1007	ArgumentList	new_external < BufferWrap > ( std 
>1008	Argument	new_external < BufferWrap > ( std 
>1009	RelationalExpression	new_external < BufferWrap > ( std 
>1010	RelationalExpression	BufferWrap > ( std 
>1011	CallExpression	std 
>1012	ArgumentList	buffer
>1013	Argument	buffer
>1014	Identifier	buffer
>1015	Callee	std 
>1016	Identifier	std 
>1017	Identifier	BufferWrap
>1018	Identifier	new_external
>1019	Callee	scope . Close
>1020	MemberAccess	scope . Close
>1021	Identifier	Close
>1022	Identifier	scope
>1023	Condition	buffer
>1024	Identifier	buffer
>1025	WhileStatement	while ( osmium 
>1026	CompoundStatement	 
>1027	ExpressionStatement	buffer . commit ( )
>1028	CallExpression	buffer . commit ( )
>1029	ArgumentList	 
>1030	Callee	buffer . commit
>1031	MemberAccess	buffer . commit
>1032	Identifier	commit
>1033	Identifier	buffer
>1034	ExpressionStatement	buffer . add_buffer ( read_buffer )
>1035	CallExpression	buffer . add_buffer ( read_buffer )
>1036	ArgumentList	read_buffer
>1037	Argument	read_buffer
>1038	Identifier	read_buffer
>1039	Callee	buffer . add_buffer
>1040	MemberAccess	buffer . add_buffer
>1041	Identifier	add_buffer
>1042	Identifier	buffer
>1043	Condition	read_buffer
>1044	CallExpression	reader . read ( )
>1045	ArgumentList	 
>1046	Callee	reader . read
>1047	MemberAccess	reader . read
>1048	Identifier	read
>1049	Identifier	reader
>1050	Identifier	read_buffer
>1051	IdentifierDeclStatement	osmium 
>1052	IdentifierDecl	& reader = unwrap < BasicReaderWrap > ( args . This ( ) )
>1053	AssignmentExpr	& reader = unwrap < BasicReaderWrap > ( args . This ( ) )
>1054	RelationalExpression	unwrap < BasicReaderWrap > ( args . This ( ) )
>1055	RelationalExpression	BasicReaderWrap > ( args . This ( ) )
>1056	CallExpression	args . This ( )
>1057	ArgumentList	 
>1058	Callee	args . This
>1059	MemberAccess	args . This
>1060	Identifier	This
>1061	Identifier	args
>1062	Identifier	BasicReaderWrap
>1063	Identifier	unwrap
>1064	Identifier	reader
>1065	Identifier	reader
>1066	IdentifierDeclType	osmium 
>1067	IdentifierDeclStatement	 
>1068	IdentifierDecl	scope
>1069	Identifier	scope
>1070	IdentifierDeclType	v8 
>1071	IdentifierDeclStatement	 
>1072	IdentifierDecl	buffer ( 1024 * 1024 , osmium 
>1073	Expression	1024 * 1024 , osmium 
>1074	Identifier	osmium 
>1075	MultiplicativeExpression	1024 * 1024
>1076	PrimaryExpression	1024
>1077	PrimaryExpression	1024
>1078	Identifier	buffer
>1079	IdentifierDeclType	osmium 
>1080	ExpressionStatement	 
>1081	CallExpression	INSTANCE_CHECK ( BasicReaderWrap , \"BasicReader\" , \"read_all\" )
>1082	ArgumentList	BasicReaderWrap
>1083	Argument	\"read_all\"
>1084	PrimaryExpression	\"read_all\"
>1085	Argument	\"BasicReader\"
>1086	PrimaryExpression	\"BasicReader\"
>1087	Argument	BasicReaderWrap
>1088	Identifier	BasicReaderWrap
>1089	Callee	INSTANCE_CHECK
>1090	Identifier	INSTANCE_CHECK
<7=13,12,8
<8=9
<9=11,10
<13=120,119,118,117,116,115,114,113,112,111,110,109,97,83,74,63,52,41,30,14
<14=15
<15=26,16
<16=24,17
<17=18
<18=20,19
<20=21
<21=23,22
<24=25
<26=27
<27=29,28
<30=31
<31=39,32
<32=37,35,33
<33=34
<35=36
<37=38
<39=40
<41=42
<42=50,43
<43=48,46,44
<44=45
<46=47
<48=49
<50=51
<52=53
<53=61,54
<54=59,57,55
<55=56
<57=58
<59=60
<61=62
<63=64
<64=72,65
<65=70,68,66
<66=67
<68=69
<70=71
<72=73
<74=75
<75=79,76
<76=77
<77=78
<79=80
<80=82,81
<83=84
<84=88,85
<85=86
<86=87
<88=89
<89=91,90
<91=93,92
<93=94
<94=96,95
<97=98
<98=107,99
<99=100
<100=101
<101=105,102
<102=103
<103=104
<105=106
<107=108
<120=121
<121=123,122
<140=146,145,141
<141=142
<142=144,143
<146=470,442,405,184,159,147
<147=148
<148=155,149
<149=150
<150=151
<151=153,152
<153=154
<155=156
<156=158,157
<159=183,160
<160=161
<161=162
<162=181,163
<163=164
<164=165
<165=179,166
<166=167
<167=168
<168=177,169
<169=170
<170=171
<171=173,172
<173=174
<174=176,175
<177=178
<179=180
<181=182
<184=185
<185=398,341,186
<186=332,282,187
<187=188
<188=257,208,189
<189=190
<190=191
<191=192
<192=206,193
<193=194
<194=195
<195=204,196
<196=197
<197=198
<198=202,199
<199=200
<200=201
<202=203
<204=205
<206=207
<208=243,230,216,209
<209=210
<210=212,211
<212=213
<213=215,214
<216=217
<217=226,218
<218=219
<219=220
<220=222,221
<222=223
<223=225,224
<226=227
<227=229,228
<230=231
<231=242,241,232
<232=240,233
<233=235,234
<235=239,236
<236=238,237
<243=244
<244=256,255,245
<245=254,246
<246=248,247
<248=249
<249=251,250
<251=253,252
<257=258
<258=274,259
<259=270,260
<260=261
<261=262
<262=264,263
<264=265
<265=267,266
<267=269,268
<270=271
<271=273,272
<274=276,275
<276=277
<277=279,278
<279=281,280
<282=331,330,329,328,327,326,321,320,313,304,290,283
<283=284
<284=286,285
<286=287
<287=289,288
<290=291
<291=300,292
<292=293
<293=294
<294=296,295
<296=297
<297=299,298
<300=301
<301=303,302
<304=305
<305=312,311,306
<306=310,307
<307=309,308
<313=314
<314=319,318,315
<315=317,316
<321=325,324,323,322
<332=333
<333=335,334
<335=336
<336=338,337
<338=340,339
<341=389,342
<342=359,343
<343=344
<344=358,345
<345=356,346
<346=347
<347=348
<348=350,349
<350=351
<351=353,352
<353=355,354
<356=357
<359=378,360
<360=361
<361=362
<362=376,363
<363=364
<364=365
<365=374,366
<366=367
<367=368
<368=372,369
<369=370
<370=371
<372=373
<374=375
<376=377
<378=379
<379=388,380
<380=382,381
<382=383
<383=385,384
<385=387,386
<389=390
<390=392,391
<392=394,393
<394=395
<395=397,396
<398=399
<399=404,403,400
<400=402,401
<405=424,406
<406=407
<407=408
<408=422,409
<409=410
<410=411
<411=420,412
<412=413
<413=414
<414=418,415
<415=416
<416=417
<418=419
<420=421
<422=423
<424=425
<425=434,426
<426=428,427
<428=430,429
<430=431
<431=433,432
<434=436,435
<436=438,437
<438=439
<439=441,440
<442=461,443
<443=444
<444=445
<445=459,446
<446=447
<447=448
<448=457,449
<449=450
<450=451
<451=455,452
<452=453
<453=454
<455=456
<457=458
<459=460
<461=462
<462=469,463
<463=465,464
<465=466
<466=468,467
<470=471
<471=473,472
<509=515,514,510
<510=511
<511=513,512
<515=660,656,646,625,597,596,577,570,569,568,567,566,565,564,563,561,560,559,558,557,556,555,536,525,516
<516=517
<517=521,518
<518=519
<519=520
<521=522
<522=524,523
<525=526
<526=532,527
<527=530,528
<528=529
<530=531
<532=533
<533=535,534
<536=537
<537=538
<538=551,539
<539=547,540
<540=541
<541=545,542
<542=543
<543=544
<545=546
<547=548
<548=550,549
<551=552
<552=554,553
<561=562
<570=571
<571=576,575,572
<572=574,573
<577=578
<578=595,579
<579=593,580
<580=581
<581=582
<582=584,583
<584=585
<585=587,586
<587=589,588
<589=590
<590=592,591
<593=594
<597=598
<598=621,599
<599=619,600
<600=601
<601=617,602
<602=603
<603=604
<604=606,605
<606=607
<607=609,608
<609=613,610
<610=611
<611=612
<613=614
<614=616,615
<617=618
<619=620
<621=622
<622=624,623
<625=626
<626=645,644,627
<627=643,628
<628=642,629
<629=641,630
<630=632,631
<632=633
<633=635,634
<635=637,636
<637=638
<638=640,639
<646=647
<647=655,654,648
<648=653,649
<649=651,650
<651=652
<656=657
<657=659,658
<660=661
<661=669,662
<662=667,665,663
<663=664
<665=666
<667=668
<669=670
<696=702,701,697
<697=698
<698=700,699
<702=776,772,754,715,703
<703=704
<704=711,705
<705=706
<706=707
<707=709,708
<709=710
<711=712
<712=714,713
<715=753,716
<716=748,739,717
<717=718
<718=737,719
<719=720
<720=721
<721=735,722
<722=723
<723=724
<724=733,725
<725=726
<726=727
<727=729,728
<729=730
<730=732,731
<733=734
<735=736
<737=738
<739=740
<740=747,741
<741=743,742
<743=744
<744=746,745
<748=749
<749=752,751,750
<754=755
<755=756
<756=757
<757=771,758
<758=770,759
<759=761,760
<761=762
<762=764,763
<764=766,765
<766=767
<767=769,768
<772=773
<773=775,774
<776=777
<777=785,778
<778=783,781,779
<779=780
<781=782
<783=784
<785=786
<803=809,808,804
<804=805
<805=807,806
<809=910,906,861,822,810
<810=811
<811=818,812
<812=813
<813=814
<814=816,815
<816=817
<818=819
<819=821,820
<822=860,823
<823=855,846,824
<824=825
<825=844,826
<826=827
<827=828
<828=842,829
<829=830
<830=831
<831=840,832
<832=833
<833=834
<834=836,835
<836=837
<837=839,838
<840=841
<842=843
<844=845
<846=847
<847=854,848
<848=850,849
<850=851
<851=853,852
<855=856
<856=859,858,857
<861=862
<862=885,863
<863=883,864
<864=865
<865=866
<866=879,867
<867=868
<868=869
<869=878,870
<870=877,871
<871=875,872
<872=873
<873=874
<875=876
<879=880
<880=882,881
<883=884
<885=886
<886=905,904,887
<887=903,888
<888=902,889
<889=901,890
<890=892,891
<892=893
<893=895,894
<895=897,896
<897=898
<898=900,899
<906=907
<907=909,908
<910=911
<911=919,912
<912=917,915,913
<913=914
<915=916
<917=918
<919=920
<943=949,948,944
<944=945
<945=947,946
<949=1080,1071,1067,1001,962,950
<950=951
<951=958,952
<952=953
<953=954
<954=956,955
<956=957
<958=959
<959=961,960
<962=1000,963
<963=995,986,964
<964=965
<965=984,966
<966=967
<967=968
<968=982,969
<969=970
<970=971
<971=980,972
<972=973
<973=974
<974=976,975
<976=977
<977=979,978
<980=981
<982=983
<984=985
<986=987
<987=994,988
<988=990,989
<990=991
<991=993,992
<995=996
<996=999,998,997
<1001=1002
<1002=1051,1025,1003
<1003=1023,1004
<1004=1005
<1005=1006
<1006=1019,1007
<1007=1008
<1008=1009
<1009=1018,1010
<1010=1017,1011
<1011=1015,1012
<1012=1013
<1013=1014
<1015=1016
<1019=1020
<1020=1022,1021
<1023=1024
<1025=1043,1026
<1026=1034,1027
<1027=1028
<1028=1030,1029
<1030=1031
<1031=1033,1032
<1034=1035
<1035=1039,1036
<1036=1037
<1037=1038
<1039=1040
<1040=1042,1041
<1043=1050,1044
<1044=1046,1045
<1046=1047
<1047=1049,1048
<1051=1052
<1052=1066,1065,1053
<1053=1064,1054
<1054=1063,1055
<1055=1062,1056
<1056=1058,1057
<1058=1059
<1059=1061,1060
<1067=1068
<1068=1070,1069
<1071=1072
<1072=1079,1078,1073
<1073=1075,1074
<1075=1077,1076
<1080=1081
<1081=1089,1082
<1082=1087,1085,1083
<1083=1084
<1085=1086
<1087=1088
<1089=1090
