>3	FunctionDef	RequestHandler 
>4	ParameterList	 
>5	ReturnType	include < iostream >
>6	CompoundStatement	 
>10	FunctionDef	RequestHandler 
>11	ParameterList	const http 
>12	Parameter	 
>13	Identifier	current_reply
>14	ParameterType	http 
>15	Parameter	 
>16	Identifier	current_request
>17	ParameterType	const http 
>18	ReturnType	void
>19	CompoundStatement	 
>20	BlockStarter	 
>21	CompoundStatement	 
>22	ReturnStatement	return ;
>23	ExpressionStatement	SimpleLogger ( ) . Write ( logWARNING ) << \"[server error] code
>24	ShiftExpression	SimpleLogger ( ) . Write ( logWARNING ) << \"[server error] code
>25	ShiftExpression	\"[server error] code
>26	ShiftExpression	e . what ( ) << \", uri
>27	ShiftExpression	\", uri
>28	MemberAccess	current_request . uri
>29	Identifier	uri
>30	Identifier	current_request
>31	PrimaryExpression	\", uri
>32	CallExpression	e . what ( )
>33	ArgumentList	 
>34	Callee	e . what
>35	MemberAccess	e . what
>36	Identifier	what
>37	Identifier	e
>38	PrimaryExpression	\"[server error] code
>39	CallExpression	SimpleLogger ( ) . Write ( logWARNING )
>40	ArgumentList	logWARNING
>41	Argument	logWARNING
>42	Identifier	logWARNING
>43	Callee	SimpleLogger ( ) . Write
>44	MemberAccess	SimpleLogger ( ) . Write
>45	Identifier	Write
>46	CallExpression	SimpleLogger ( )
>47	ArgumentList	 
>48	Callee	SimpleLogger
>49	Identifier	SimpleLogger
>50	ExpressionStatement	current_reply = http 
>51	AssignmentExpr	current_reply = http 
>52	CallExpression	http 
>53	ArgumentList	http 
>54	Argument	http 
>55	Identifier	http 
>56	Callee	http 
>57	Identifier	http 
>58	Identifier	current_reply
>59	Identifier	e
>60	BlockStarter	 
>61	CompoundStatement	 
>62	IfStatement	if ( ! route_parameters . jsonp_parameter . empty ( ) )
>63	CompoundStatement	 
>64	ExpressionStatement	current_reply . content . push_back ( ')' )
>65	CallExpression	current_reply . content . push_back ( ')' )
>66	ArgumentList	')'
>67	Argument	')'
>68	PrimaryExpression	')'
>69	Callee	current_reply . content . push_back
>70	MemberAccess	current_reply . content . push_back
>71	Identifier	push_back
>72	MemberAccess	current_reply . content
>73	Identifier	content
>74	Identifier	current_reply
>75	Condition	! route_parameters . jsonp_parameter . empty ( )
>76	UnaryOp	! route_parameters . jsonp_parameter . empty ( )
>77	CallExpression	route_parameters . jsonp_parameter . empty ( )
>78	ArgumentList	 
>79	Callee	route_parameters . jsonp_parameter . empty
>80	MemberAccess	route_parameters . jsonp_parameter . empty
>81	Identifier	empty
>82	MemberAccess	route_parameters . jsonp_parameter
>83	Identifier	jsonp_parameter
>84	Identifier	route_parameters
>85	UnaryOperator	!
>86	IfStatement	if ( \"gpx\" == route_parameters . output_format )
>87	ElseStatement	else
>88	IfStatement	if ( route_parameters . jsonp_parameter . empty ( ) )
>89	ElseStatement	else
>90	CompoundStatement	 
>91	ExpressionStatement	current_reply . headers . emplace_back ( \"Content-Disposition\" , \"inline; filename=\\"response.js\\"\" )
>92	CallExpression	current_reply . headers . emplace_back ( \"Content-Disposition\" , \"inline; filename=\\"response.js\\"\" )
>93	ArgumentList	\"Content-Disposition\"
>94	Argument	\"inline; filename=\\"response.js\\"\"
>95	PrimaryExpression	\"inline; filename=\\"response.js\\"\"
>96	Argument	\"Content-Disposition\"
>97	PrimaryExpression	\"Content-Disposition\"
>98	Callee	current_reply . headers . emplace_back
>99	MemberAccess	current_reply . headers . emplace_back
>100	Identifier	emplace_back
>101	MemberAccess	current_reply . headers
>102	Identifier	headers
>103	Identifier	current_reply
>104	ExpressionStatement	current_reply . headers . emplace_back ( \"Content-Type\" , \"text/javascript; charset=UTF-8\" )
>105	CallExpression	current_reply . headers . emplace_back ( \"Content-Type\" , \"text/javascript; charset=UTF-8\" )
>106	ArgumentList	\"Content-Type\"
>107	Argument	\"text/javascript; charset=UTF-8\"
>108	PrimaryExpression	\"text/javascript; charset=UTF-8\"
>109	Argument	\"Content-Type\"
>110	PrimaryExpression	\"Content-Type\"
>111	Callee	current_reply . headers . emplace_back
>112	MemberAccess	current_reply . headers . emplace_back
>113	Identifier	emplace_back
>114	MemberAccess	current_reply . headers
>115	Identifier	headers
>116	Identifier	current_reply
>117	ExpressionStatement	osrm 
>118	CallExpression	osrm 
>119	ArgumentList	current_reply . content
>120	Argument	json_result
>121	Identifier	json_result
>122	Argument	current_reply . content
>123	MemberAccess	current_reply . content
>124	Identifier	content
>125	Identifier	current_reply
>126	Callee	osrm 
>127	Identifier	osrm 
>128	CompoundStatement	 
>129	ExpressionStatement	current_reply . headers . emplace_back ( \"Content-Disposition\" , \"inline; filename=\\"response.json\\"\" )
>130	CallExpression	current_reply . headers . emplace_back ( \"Content-Disposition\" , \"inline; filename=\\"response.json\\"\" )
>131	ArgumentList	\"Content-Disposition\"
>132	Argument	\"inline; filename=\\"response.json\\"\"
>133	PrimaryExpression	\"inline; filename=\\"response.json\\"\"
>134	Argument	\"Content-Disposition\"
>135	PrimaryExpression	\"Content-Disposition\"
>136	Callee	current_reply . headers . emplace_back
>137	MemberAccess	current_reply . headers . emplace_back
>138	Identifier	emplace_back
>139	MemberAccess	current_reply . headers
>140	Identifier	headers
>141	Identifier	current_reply
>142	ExpressionStatement	current_reply . headers . emplace_back ( \"Content-Type\" , \"application/json; charset=UTF-8\" )
>143	CallExpression	current_reply . headers . emplace_back ( \"Content-Type\" , \"application/json; charset=UTF-8\" )
>144	ArgumentList	\"Content-Type\"
>145	Argument	\"application/json; charset=UTF-8\"
>146	PrimaryExpression	\"application/json; charset=UTF-8\"
>147	Argument	\"Content-Type\"
>148	PrimaryExpression	\"Content-Type\"
>149	Callee	current_reply . headers . emplace_back
>150	MemberAccess	current_reply . headers . emplace_back
>151	Identifier	emplace_back
>152	MemberAccess	current_reply . headers
>153	Identifier	headers
>154	Identifier	current_reply
>155	ExpressionStatement	osrm 
>156	CallExpression	osrm 
>157	ArgumentList	current_reply . content
>158	Argument	json_result
>159	Identifier	json_result
>160	Argument	current_reply . content
>161	MemberAccess	current_reply . content
>162	Identifier	content
>163	Identifier	current_reply
>164	Callee	osrm 
>165	Identifier	osrm 
>166	Condition	route_parameters . jsonp_parameter . empty ( )
>167	CallExpression	route_parameters . jsonp_parameter . empty ( )
>168	ArgumentList	 
>169	Callee	route_parameters . jsonp_parameter . empty
>170	MemberAccess	route_parameters . jsonp_parameter . empty
>171	Identifier	empty
>172	MemberAccess	route_parameters . jsonp_parameter
>173	Identifier	jsonp_parameter
>174	Identifier	route_parameters
>175	CompoundStatement	 
>176	ExpressionStatement	current_reply . headers . emplace_back ( \"Content-Disposition\" , \"attachment; filename=\\"route.gpx\\"\" )
>177	CallExpression	current_reply . headers . emplace_back ( \"Content-Disposition\" , \"attachment; filename=\\"route.gpx\\"\" )
>178	ArgumentList	\"Content-Disposition\"
>179	Argument	\"attachment; filename=\\"route.gpx\\"\"
>180	PrimaryExpression	\"attachment; filename=\\"route.gpx\\"\"
>181	Argument	\"Content-Disposition\"
>182	PrimaryExpression	\"Content-Disposition\"
>183	Callee	current_reply . headers . emplace_back
>184	MemberAccess	current_reply . headers . emplace_back
>185	Identifier	emplace_back
>186	MemberAccess	current_reply . headers
>187	Identifier	headers
>188	Identifier	current_reply
>189	ExpressionStatement	current_reply . headers . emplace_back ( \"Content-Type\" , \"application/gpx+xml; charset=UTF-8\" )
>190	CallExpression	current_reply . headers . emplace_back ( \"Content-Type\" , \"application/gpx+xml; charset=UTF-8\" )
>191	ArgumentList	\"Content-Type\"
>192	Argument	\"application/gpx+xml; charset=UTF-8\"
>193	PrimaryExpression	\"application/gpx+xml; charset=UTF-8\"
>194	Argument	\"Content-Type\"
>195	PrimaryExpression	\"Content-Type\"
>196	Callee	current_reply . headers . emplace_back
>197	MemberAccess	current_reply . headers . emplace_back
>198	Identifier	emplace_back
>199	MemberAccess	current_reply . headers
>200	Identifier	headers
>201	Identifier	current_reply
>202	ExpressionStatement	osrm 
>203	CallExpression	osrm 
>204	ArgumentList	current_reply . content
>205	Argument	json_result . values [ \"route\" ]
>206	ArrayIndexing	json_result . values [ \"route\" ]
>207	PrimaryExpression	\"route\"
>208	MemberAccess	json_result . values
>209	Identifier	values
>210	Identifier	json_result
>211	Argument	current_reply . content
>212	MemberAccess	current_reply . content
>213	Identifier	content
>214	Identifier	current_reply
>215	Callee	osrm 
>216	Identifier	osrm 
>217	Condition	\"gpx\" == route_parameters . output_format
>218	EqualityExpression	\"gpx\" == route_parameters . output_format
>219	MemberAccess	route_parameters . output_format
>220	Identifier	output_format
>221	Identifier	route_parameters
>222	PrimaryExpression	\"gpx\"
>223	ExpressionStatement	current_reply . headers . emplace_back ( \"Content-Length\" , cast 
>224	CallExpression	current_reply . headers . emplace_back ( \"Content-Length\" , cast 
>225	ArgumentList	\"Content-Length\"
>226	Argument	cast 
>227	CallExpression	cast 
>228	ArgumentList	current_reply . content . size ( )
>229	Argument	current_reply . content . size ( )
>230	CallExpression	current_reply . content . size ( )
>231	ArgumentList	 
>232	Callee	current_reply . content . size
>233	MemberAccess	current_reply . content . size
>234	Identifier	size
>235	MemberAccess	current_reply . content
>236	Identifier	content
>237	Identifier	current_reply
>238	Callee	cast 
>239	Identifier	cast 
>240	Argument	\"Content-Length\"
>241	PrimaryExpression	\"Content-Length\"
>242	Callee	current_reply . headers . emplace_back
>243	MemberAccess	current_reply . headers . emplace_back
>244	Identifier	emplace_back
>245	MemberAccess	current_reply . headers
>246	Identifier	headers
>247	Identifier	current_reply
>248	ExpressionStatement	current_reply . headers . emplace_back ( \"Access-Control-Allow-Headers\" , \"X-Requested-With, Content-Type\" )
>249	CallExpression	current_reply . headers . emplace_back ( \"Access-Control-Allow-Headers\" , \"X-Requested-With, Content-Type\" )
>250	ArgumentList	\"Access-Control-Allow-Headers\"
>251	Argument	\"X-Requested-With, Content-Type\"
>252	PrimaryExpression	\"X-Requested-With, Content-Type\"
>253	Argument	\"Access-Control-Allow-Headers\"
>254	PrimaryExpression	\"Access-Control-Allow-Headers\"
>255	Callee	current_reply . headers . emplace_back
>256	MemberAccess	current_reply . headers . emplace_back
>257	Identifier	emplace_back
>258	MemberAccess	current_reply . headers
>259	Identifier	headers
>260	Identifier	current_reply
>261	ExpressionStatement	current_reply . headers . emplace_back ( \"Access-Control-Allow-Methods\" , \"GET\" )
>262	CallExpression	current_reply . headers . emplace_back ( \"Access-Control-Allow-Methods\" , \"GET\" )
>263	ArgumentList	\"Access-Control-Allow-Methods\"
>264	Argument	\"GET\"
>265	PrimaryExpression	\"GET\"
>266	Argument	\"Access-Control-Allow-Methods\"
>267	PrimaryExpression	\"Access-Control-Allow-Methods\"
>268	Callee	current_reply . headers . emplace_back
>269	MemberAccess	current_reply . headers . emplace_back
>270	Identifier	emplace_back
>271	MemberAccess	current_reply . headers
>272	Identifier	headers
>273	Identifier	current_reply
>274	ExpressionStatement	current_reply . headers . emplace_back ( \"Access-Control-Allow-Origin\" , \"*\" )
>275	CallExpression	current_reply . headers . emplace_back ( \"Access-Control-Allow-Origin\" , \"*\" )
>276	ArgumentList	\"Access-Control-Allow-Origin\"
>277	Argument	\"*\"
>278	PrimaryExpression	\"*\"
>279	Argument	\"Access-Control-Allow-Origin\"
>280	PrimaryExpression	\"Access-Control-Allow-Origin\"
>281	Callee	current_reply . headers . emplace_back
>282	MemberAccess	current_reply . headers . emplace_back
>283	Identifier	emplace_back
>284	MemberAccess	current_reply . headers
>285	Identifier	headers
>286	Identifier	current_reply
>287	IfStatement	if ( 200 != return_code )
>288	CompoundStatement	 
>289	ReturnStatement	return ;
>290	ExpressionStatement	osrm 
>291	CallExpression	osrm 
>292	ArgumentList	current_reply . content
>293	Argument	json_result
>294	Identifier	json_result
>295	Argument	current_reply . content
>296	MemberAccess	current_reply . content
>297	Identifier	content
>298	Identifier	current_reply
>299	Callee	osrm 
>300	Identifier	osrm 
>301	ExpressionStatement	json_result . values [ \"status_message\" ] = message
>302	AssignmentExpr	json_result . values [ \"status_message\" ] = message
>303	Identifier	message
>304	ArrayIndexing	json_result . values [ \"status_message\" ]
>305	PrimaryExpression	\"status_message\"
>306	MemberAccess	json_result . values
>307	Identifier	values
>308	Identifier	json_result
>309	IdentifierDeclStatement	std 
>310	IdentifierDecl	message = \"Bad Request\"
>311	AssignmentExpr	message = \"Bad Request\"
>312	PrimaryExpression	\"Bad Request\"
>313	Identifier	message
>314	Identifier	message
>315	IdentifierDeclType	std 
>316	ExpressionStatement	json_result . values [ \"status\" ] = 400
>317	AssignmentExpr	json_result . values [ \"status\" ] = 400
>318	PrimaryExpression	400
>319	ArrayIndexing	json_result . values [ \"status\" ]
>320	PrimaryExpression	\"status\"
>321	MemberAccess	json_result . values
>322	Identifier	values
>323	Identifier	json_result
>324	ExpressionStatement	current_reply . content . clear ( )
>325	CallExpression	current_reply . content . clear ( )
>326	ArgumentList	 
>327	Callee	current_reply . content . clear
>328	MemberAccess	current_reply . content . clear
>329	Identifier	clear
>330	MemberAccess	current_reply . content
>331	Identifier	content
>332	Identifier	current_reply
>333	ExpressionStatement	current_reply = http 
>334	AssignmentExpr	current_reply = http 
>335	CallExpression	http 
>336	ArgumentList	http 
>337	Argument	http 
>338	Identifier	http 
>339	Callee	http 
>340	Identifier	http 
>341	Identifier	current_reply
>342	Condition	200 != return_code
>343	EqualityExpression	200 != return_code
>344	Identifier	return_code
>345	PrimaryExpression	200
>346	ExpressionStatement	return_code = routing_machine -> RunQuery ( route_parameters , json_result )
>347	AssignmentExpr	return_code = routing_machine -> RunQuery ( route_parameters , json_result )
>348	CallExpression	routing_machine -> RunQuery ( route_parameters , json_result )
>349	ArgumentList	route_parameters
>350	Argument	json_result
>351	Identifier	json_result
>352	Argument	route_parameters
>353	Identifier	route_parameters
>354	Callee	routing_machine -> RunQuery
>355	PtrMemberAccess	routing_machine -> RunQuery
>356	Identifier	RunQuery
>357	Identifier	routing_machine
>358	Identifier	return_code
>359	Statement	auto
>360	Statement	const
>361	IfStatement	if ( ! route_parameters . jsonp_parameter . empty ( ) )
>362	CompoundStatement	 
>363	ExpressionStatement	current_reply . content . insert ( current_reply . content . end ( ) , json_p . begin ( ) , json_p . end ( ) )
>364	CallExpression	current_reply . content . insert ( current_reply . content . end ( ) , json_p . begin ( ) , json_p . end ( ) )
>365	ArgumentList	current_reply . content . end ( )
>366	Argument	json_p . end ( )
>367	CallExpression	json_p . end ( )
>368	ArgumentList	 
>369	Callee	json_p . end
>370	MemberAccess	json_p . end
>371	Identifier	end
>372	Identifier	json_p
>373	Argument	json_p . begin ( )
>374	CallExpression	json_p . begin ( )
>375	ArgumentList	 
>376	Callee	json_p . begin
>377	MemberAccess	json_p . begin
>378	Identifier	begin
>379	Identifier	json_p
>380	Argument	current_reply . content . end ( )
>381	CallExpression	current_reply . content . end ( )
>382	ArgumentList	 
>383	Callee	current_reply . content . end
>384	MemberAccess	current_reply . content . end
>385	Identifier	end
>386	MemberAccess	current_reply . content
>387	Identifier	content
>388	Identifier	current_reply
>389	Callee	current_reply . content . insert
>390	MemberAccess	current_reply . content . insert
>391	Identifier	insert
>392	MemberAccess	current_reply . content
>393	Identifier	content
>394	Identifier	current_reply
>395	IdentifierDeclStatement	const std 
>396	IdentifierDecl	json_p = ( route_parameters . jsonp_parameter + \"(\" )
>397	AssignmentExpr	json_p = ( route_parameters . jsonp_parameter + \"(\" )
>398	AdditiveExpression	route_parameters . jsonp_parameter + \"(\"
>399	PrimaryExpression	\"(\"
>400	MemberAccess	route_parameters . jsonp_parameter
>401	Identifier	jsonp_parameter
>402	Identifier	route_parameters
>403	Identifier	json_p
>404	Identifier	json_p
>405	IdentifierDeclType	const std 
>406	Condition	! route_parameters . jsonp_parameter . empty ( )
>407	UnaryOp	! route_parameters . jsonp_parameter . empty ( )
>408	CallExpression	route_parameters . jsonp_parameter . empty ( )
>409	ArgumentList	 
>410	Callee	route_parameters . jsonp_parameter . empty
>411	MemberAccess	route_parameters . jsonp_parameter . empty
>412	Identifier	empty
>413	MemberAccess	route_parameters . jsonp_parameter
>414	Identifier	jsonp_parameter
>415	Identifier	route_parameters
>416	UnaryOperator	!
>417	ExpressionStatement	BOOST_ASSERT_MSG ( routing_machine != nullptr , \"pointer not init'ed\" )
>418	CallExpression	BOOST_ASSERT_MSG ( routing_machine != nullptr , \"pointer not init'ed\" )
>419	ArgumentList	routing_machine != nullptr
>420	Argument	\"pointer not init'ed\"
>421	PrimaryExpression	\"pointer not init'ed\"
>422	Argument	routing_machine != nullptr
>423	EqualityExpression	routing_machine != nullptr
>424	Identifier	nullptr
>425	Identifier	routing_machine
>426	Callee	BOOST_ASSERT_MSG
>427	Identifier	BOOST_ASSERT_MSG
>428	IfStatement	if ( ! result || ( api_iterator != request_string . end ( ) ) )
>429	CompoundStatement	 
>430	ReturnStatement	return ;
>431	ExpressionStatement	osrm 
>432	CallExpression	osrm 
>433	ArgumentList	current_reply . content
>434	Argument	json_result
>435	Identifier	json_result
>436	Argument	current_reply . content
>437	MemberAccess	current_reply . content
>438	Identifier	content
>439	Identifier	current_reply
>440	Callee	osrm 
>441	Identifier	osrm 
>442	ExpressionStatement	json_result . values [ \"status_message\" ] = message
>443	AssignmentExpr	json_result . values [ \"status_message\" ] = message
>444	Identifier	message
>445	ArrayIndexing	json_result . values [ \"status_message\" ]
>446	PrimaryExpression	\"status_message\"
>447	MemberAccess	json_result . values
>448	Identifier	values
>449	Identifier	json_result
>450	ExpressionStatement	message += cast 
>451	AssignmentExpr	message += cast 
>452	CallExpression	cast 
>453	ArgumentList	position
>454	Argument	position
>455	Identifier	position
>456	Callee	cast 
>457	Identifier	cast 
>458	Identifier	message
>459	IdentifierDeclStatement	std 
>460	IdentifierDecl	message = \"Query string malformed close to position \"
>461	AssignmentExpr	message = \"Query string malformed close to position \"
>462	PrimaryExpression	\"Query string malformed close to position \"
>463	Identifier	message
>464	Identifier	message
>465	IdentifierDeclType	std 
>466	ExpressionStatement	json_result . values [ \"status\" ] = 400
>467	AssignmentExpr	json_result . values [ \"status\" ] = 400
>468	PrimaryExpression	400
>469	ArrayIndexing	json_result . values [ \"status\" ]
>470	PrimaryExpression	\"status\"
>471	MemberAccess	json_result . values
>472	Identifier	values
>473	Identifier	json_result
>474	ExpressionStatement	position = std 
>475	AssignmentExpr	position = std 
>476	CallExpression	std 
>477	ArgumentList	request_string . begin ( )
>478	Argument	api_iterator
>479	Identifier	api_iterator
>480	Argument	request_string . begin ( )
>481	CallExpression	request_string . begin ( )
>482	ArgumentList	 
>483	Callee	request_string . begin
>484	MemberAccess	request_string . begin
>485	Identifier	begin
>486	Identifier	request_string
>487	Callee	std 
>488	Identifier	std 
>489	Identifier	position
>490	Statement	auto
>491	Statement	const
>492	ExpressionStatement	current_reply . content . clear ( )
>493	CallExpression	current_reply . content . clear ( )
>494	ArgumentList	 
>495	Callee	current_reply . content . clear
>496	MemberAccess	current_reply . content . clear
>497	Identifier	clear
>498	MemberAccess	current_reply . content
>499	Identifier	content
>500	Identifier	current_reply
>501	ExpressionStatement	current_reply = http 
>502	AssignmentExpr	current_reply = http 
>503	CallExpression	http 
>504	ArgumentList	http 
>505	Argument	http 
>506	Identifier	http 
>507	Callee	http 
>508	Identifier	http 
>509	Identifier	current_reply
>510	Condition	! result || ( api_iterator != request_string . end ( ) )
>511	OrExpression	! result || ( api_iterator != request_string . end ( ) )
>512	EqualityExpression	api_iterator != request_string . end ( )
>513	CallExpression	request_string . end ( )
>514	ArgumentList	 
>515	Callee	request_string . end
>516	MemberAccess	request_string . end
>517	Identifier	end
>518	Identifier	request_string
>519	Identifier	api_iterator
>520	UnaryOp	! result
>521	Identifier	result
>522	UnaryOperator	!
>523	IdentifierDeclStatement	osrm 
>524	IdentifierDecl	json_result
>525	Identifier	json_result
>526	IdentifierDeclType	osrm 
>527	IdentifierDeclStatement	const bool result = boost 
>528	IdentifierDecl	result = boost 
>529	AssignmentExpr	result = boost 
>530	CallExpression	boost 
>531	ArgumentList	api_iterator
>532	Argument	api_parser
>533	Identifier	api_parser
>534	Argument	request_string . end ( )
>535	CallExpression	request_string . end ( )
>536	ArgumentList	 
>537	Callee	request_string . end
>538	MemberAccess	request_string . end
>539	Identifier	end
>540	Identifier	request_string
>541	Argument	api_iterator
>542	Identifier	api_iterator
>543	Callee	boost 
>544	Identifier	boost 
>545	Identifier	result
>546	Identifier	result
>547	IdentifierDeclType	const bool
>548	ExpressionStatement	api_iterator = request_string . begin ( )
>549	AssignmentExpr	api_iterator = request_string . begin ( )
>550	CallExpression	request_string . begin ( )
>551	ArgumentList	 
>552	Callee	request_string . begin
>553	MemberAccess	request_string . begin
>554	Identifier	begin
>555	Identifier	request_string
>556	Identifier	api_iterator
>557	Statement	auto
>558	IdentifierDeclStatement	APIGrammarParser api_parser ( & route_parameters ) ;
>559	IdentifierDecl	api_parser ( & route_parameters )
>560	UnaryOp	& route_parameters
>561	Identifier	route_parameters
>562	UnaryOperator	&
>563	Identifier	api_parser
>564	IdentifierDeclType	APIGrammarParser
>565	IdentifierDeclStatement	RouteParameters route_parameters ;
>566	IdentifierDecl	route_parameters
>567	Identifier	route_parameters
>568	IdentifierDeclType	RouteParameters
>569	ExpressionStatement	SimpleLogger ( ) . Write ( ) << ( time_stamp -> tm_mday < 10 ? \"0\" 
>570	ShiftExpression	SimpleLogger ( ) . Write ( ) << ( time_stamp -> tm_mday < 10 ? \"0\" 
>571	ShiftExpression	( time_stamp -> tm_mday < 10 ? \"0\" 
>572	ShiftExpression	time_stamp -> tm_mday << \"-\" << ( time_stamp -> tm_mon + 1 < 10 ? \"0\" 
>573	ShiftExpression	\"-\" << ( time_stamp -> tm_mon + 1 < 10 ? \"0\" 
>574	ShiftExpression	( time_stamp -> tm_mon + 1 < 10 ? \"0\" 
>575	ShiftExpression	( time_stamp -> tm_mon + 1 ) << \"-\" << 1900 + time_stamp -> tm_year << \" \" << ( time_stamp -> tm_hour < \
>576	ShiftExpression	\"-\" << 1900 + time_stamp -> tm_year << \" \" << ( time_stamp -> tm_hour < 10 ? \"0\" 
>577	ShiftExpression	1900 + time_stamp -> tm_year << \" \" << ( time_stamp -> tm_hour < 10 ? \"0\" 
>578	ShiftExpression	\" \" << ( time_stamp -> tm_hour < 10 ? \"0\" 
>579	ShiftExpression	( time_stamp -> tm_hour < 10 ? \"0\" 
>580	ShiftExpression	time_stamp -> tm_hour << \"
>581	ShiftExpression	\"
>582	ShiftExpression	( time_stamp -> tm_min < 10 ? \"0\" 
>583	ShiftExpression	time_stamp -> tm_min << \"
>584	ShiftExpression	\"
>585	ShiftExpression	( time_stamp -> tm_sec < 10 ? \"0\" 
>586	ShiftExpression	time_stamp -> tm_sec << \" \" << current_request . endpoint . to_string ( ) << \" \" << current_request \
>587	ShiftExpression	\" \" << current_request . endpoint . to_string ( ) << \" \" << current_request . referrer << ( 0 == current_\
>588	ShiftExpression	current_request . endpoint . to_string ( ) << \" \" << current_request . referrer << ( 0 == current_request \
>589	ShiftExpression	\" \" << current_request . referrer << ( 0 == current_request . referrer . length ( ) ? \"- \" 
>590	ShiftExpression	current_request . referrer << ( 0 == current_request . referrer . length ( ) ? \"- \" 
>591	ShiftExpression	( 0 == current_request . referrer . length ( ) ? \"- \" 
>592	ShiftExpression	current_request . agent << ( 0 == current_request . agent . length ( ) ? \"- \" 
>593	ShiftExpression	( 0 == current_request . agent . length ( ) ? \"- \" 
>594	Identifier	request_string
>595	ConditionalExpression	0 == current_request . agent . length ( ) ? \"- \" 
>596	PrimaryExpression	\" \"
>597	PrimaryExpression	\"- \"
>598	Condition	0 == current_request . agent . length ( )
>599	EqualityExpression	0 == current_request . agent . length ( )
>600	CallExpression	current_request . agent . length ( )
>601	ArgumentList	 
>602	Callee	current_request . agent . length
>603	MemberAccess	current_request . agent . length
>604	Identifier	length
>605	MemberAccess	current_request . agent
>606	Identifier	agent
>607	Identifier	current_request
>608	PrimaryExpression	0
>609	MemberAccess	current_request . agent
>610	Identifier	agent
>611	Identifier	current_request
>612	ConditionalExpression	0 == current_request . referrer . length ( ) ? \"- \" 
>613	PrimaryExpression	\" \"
>614	PrimaryExpression	\"- \"
>615	Condition	0 == current_request . referrer . length ( )
>616	EqualityExpression	0 == current_request . referrer . length ( )
>617	CallExpression	current_request . referrer . length ( )
>618	ArgumentList	 
>619	Callee	current_request . referrer . length
>620	MemberAccess	current_request . referrer . length
>621	Identifier	length
>622	MemberAccess	current_request . referrer
>623	Identifier	referrer
>624	Identifier	current_request
>625	PrimaryExpression	0
>626	MemberAccess	current_request . referrer
>627	Identifier	referrer
>628	Identifier	current_request
>629	PrimaryExpression	\" \"
>630	CallExpression	current_request . endpoint . to_string ( )
>631	ArgumentList	 
>632	Callee	current_request . endpoint . to_string
>633	MemberAccess	current_request . endpoint . to_string
>634	Identifier	to_string
>635	MemberAccess	current_request . endpoint
>636	Identifier	endpoint
>637	Identifier	current_request
>638	PrimaryExpression	\" \"
>639	PtrMemberAccess	time_stamp -> tm_sec
>640	Identifier	tm_sec
>641	Identifier	time_stamp
>642	ConditionalExpression	time_stamp -> tm_sec < 10 ? \"0\" 
>643	PrimaryExpression	\"\"
>644	PrimaryExpression	\"0\"
>645	Condition	time_stamp -> tm_sec < 10
>646	RelationalExpression	time_stamp -> tm_sec < 10
>647	PrimaryExpression	10
>648	PtrMemberAccess	time_stamp -> tm_sec
>649	Identifier	tm_sec
>650	Identifier	time_stamp
>651	PrimaryExpression	\"
>652	PtrMemberAccess	time_stamp -> tm_min
>653	Identifier	tm_min
>654	Identifier	time_stamp
>655	ConditionalExpression	time_stamp -> tm_min < 10 ? \"0\" 
>656	PrimaryExpression	\"\"
>657	PrimaryExpression	\"0\"
>658	Condition	time_stamp -> tm_min < 10
>659	RelationalExpression	time_stamp -> tm_min < 10
>660	PrimaryExpression	10
>661	PtrMemberAccess	time_stamp -> tm_min
>662	Identifier	tm_min
>663	Identifier	time_stamp
>664	PrimaryExpression	\"
>665	PtrMemberAccess	time_stamp -> tm_hour
>666	Identifier	tm_hour
>667	Identifier	time_stamp
>668	ConditionalExpression	time_stamp -> tm_hour < 10 ? \"0\" 
>669	PrimaryExpression	\"\"
>670	PrimaryExpression	\"0\"
>671	Condition	time_stamp -> tm_hour < 10
>672	RelationalExpression	time_stamp -> tm_hour < 10
>673	PrimaryExpression	10
>674	PtrMemberAccess	time_stamp -> tm_hour
>675	Identifier	tm_hour
>676	Identifier	time_stamp
>677	PrimaryExpression	\" \"
>678	AdditiveExpression	1900 + time_stamp -> tm_year
>679	PtrMemberAccess	time_stamp -> tm_year
>680	Identifier	tm_year
>681	Identifier	time_stamp
>682	PrimaryExpression	1900
>683	PrimaryExpression	\"-\"
>684	AdditiveExpression	time_stamp -> tm_mon + 1
>685	PrimaryExpression	1
>686	PtrMemberAccess	time_stamp -> tm_mon
>687	Identifier	tm_mon
>688	Identifier	time_stamp
>689	ConditionalExpression	time_stamp -> tm_mon + 1 < 10 ? \"0\" 
>690	PrimaryExpression	\"\"
>691	PrimaryExpression	\"0\"
>692	Condition	time_stamp -> tm_mon + 1 < 10
>693	RelationalExpression	time_stamp -> tm_mon + 1 < 10
>694	PrimaryExpression	10
>695	AdditiveExpression	time_stamp -> tm_mon + 1
>696	PrimaryExpression	1
>697	PtrMemberAccess	time_stamp -> tm_mon
>698	Identifier	tm_mon
>699	Identifier	time_stamp
>700	PrimaryExpression	\"-\"
>701	PtrMemberAccess	time_stamp -> tm_mday
>702	Identifier	tm_mday
>703	Identifier	time_stamp
>704	ConditionalExpression	time_stamp -> tm_mday < 10 ? \"0\" 
>705	PrimaryExpression	\"\"
>706	PrimaryExpression	\"0\"
>707	Condition	time_stamp -> tm_mday < 10
>708	RelationalExpression	time_stamp -> tm_mday < 10
>709	PrimaryExpression	10
>710	PtrMemberAccess	time_stamp -> tm_mday
>711	Identifier	tm_mday
>712	Identifier	time_stamp
>713	CallExpression	SimpleLogger ( ) . Write ( )
>714	ArgumentList	 
>715	Callee	SimpleLogger ( ) . Write
>716	MemberAccess	SimpleLogger ( ) . Write
>717	Identifier	Write
>718	CallExpression	SimpleLogger ( )
>719	ArgumentList	 
>720	Callee	SimpleLogger
>721	Identifier	SimpleLogger
>722	ExpressionStatement	time_stamp = localtime ( & ltime )
>723	AssignmentExpr	time_stamp = localtime ( & ltime )
>724	CallExpression	localtime ( & ltime )
>725	ArgumentList	& ltime
>726	Argument	& ltime
>727	UnaryOp	& ltime
>728	Identifier	ltime
>729	UnaryOperator	&
>730	Callee	localtime
>731	Identifier	localtime
>732	Identifier	time_stamp
>733	ExpressionStatement	ltime = time ( nullptr )
>734	AssignmentExpr	ltime = time ( nullptr )
>735	CallExpression	time ( nullptr )
>736	ArgumentList	nullptr
>737	Argument	nullptr
>738	Identifier	nullptr
>739	Callee	time
>740	Identifier	time
>741	Identifier	ltime
>742	IdentifierDeclStatement	struct tm * time_stamp ;
>743	IdentifierDecl	* time_stamp
>744	Identifier	time_stamp
>745	IdentifierDeclType	struct tm *
>746	IdentifierDeclStatement	time_t ltime ;
>747	IdentifierDecl	ltime
>748	Identifier	ltime
>749	IdentifierDeclType	time_t
>750	ExpressionStatement	URIDecode ( current_request . uri , request_string )
>751	CallExpression	URIDecode ( current_request . uri , request_string )
>752	ArgumentList	current_request . uri
>753	Argument	request_string
>754	Identifier	request_string
>755	Argument	current_request . uri
>756	MemberAccess	current_request . uri
>757	Identifier	uri
>758	Identifier	current_request
>759	Callee	URIDecode
>760	Identifier	URIDecode
>761	IdentifierDeclStatement	std 
>762	IdentifierDecl	request_string
>763	Identifier	request_string
>764	IdentifierDeclType	std 
>824	FunctionDef	RequestHandler 
>825	ParameterList	OSRM * osrm
>826	Parameter	 
>827	Identifier	osrm
>828	ParameterType	OSRM *
>829	ReturnType	void
>830	CompoundStatement	 
>831	ExpressionStatement	 
>832	AssignmentExpr	routing_machine = osrm
>833	Identifier	osrm
>834	Identifier	routing_machine
<3=6,5,4
<10=19,18,11
<11=15,12
<12=14,13
<15=17,16
<19=60,20
<20=59,21
<21=50,23,22
<23=24
<24=39,25
<25=38,26
<26=32,27
<27=31,28
<28=30,29
<32=34,33
<34=35
<35=37,36
<39=43,40
<40=41
<41=42
<43=44
<44=46,45
<46=48,47
<48=49
<50=51
<51=58,52
<52=56,53
<53=54
<54=55
<56=57
<60=61
<61=761,750,746,742,733,722,569,565,558,557,548,527,523,428,417,361,360,359,346,287,274,261,248,223,86,62
<62=75,63
<63=64
<64=65
<65=69,66
<66=67
<67=68
<69=70
<70=72,71
<72=74,73
<75=76
<76=85,77
<77=79,78
<79=80
<80=82,81
<82=84,83
<86=217,175,87
<87=88
<88=166,128,89
<89=90
<90=117,104,91
<91=92
<92=98,93
<93=96,94
<94=95
<96=97
<98=99
<99=101,100
<101=103,102
<104=105
<105=111,106
<106=109,107
<107=108
<109=110
<111=112
<112=114,113
<114=116,115
<117=118
<118=126,119
<119=122,120
<120=121
<122=123
<123=125,124
<126=127
<128=155,142,129
<129=130
<130=136,131
<131=134,132
<132=133
<134=135
<136=137
<137=139,138
<139=141,140
<142=143
<143=149,144
<144=147,145
<145=146
<147=148
<149=150
<150=152,151
<152=154,153
<155=156
<156=164,157
<157=160,158
<158=159
<160=161
<161=163,162
<164=165
<166=167
<167=169,168
<169=170
<170=172,171
<172=174,173
<175=202,189,176
<176=177
<177=183,178
<178=181,179
<179=180
<181=182
<183=184
<184=186,185
<186=188,187
<189=190
<190=196,191
<191=194,192
<192=193
<194=195
<196=197
<197=199,198
<199=201,200
<202=203
<203=215,204
<204=211,205
<205=206
<206=208,207
<208=210,209
<211=212
<212=214,213
<215=216
<217=218
<218=222,219
<219=221,220
<223=224
<224=242,225
<225=240,226
<226=227
<227=238,228
<228=229
<229=230
<230=232,231
<232=233
<233=235,234
<235=237,236
<238=239
<240=241
<242=243
<243=245,244
<245=247,246
<248=249
<249=255,250
<250=253,251
<251=252
<253=254
<255=256
<256=258,257
<258=260,259
<261=262
<262=268,263
<263=266,264
<264=265
<266=267
<268=269
<269=271,270
<271=273,272
<274=275
<275=281,276
<276=279,277
<277=278
<279=280
<281=282
<282=284,283
<284=286,285
<287=342,288
<288=333,324,316,309,301,290,289
<290=291
<291=299,292
<292=295,293
<293=294
<295=296
<296=298,297
<299=300
<301=302
<302=304,303
<304=306,305
<306=308,307
<309=310
<310=315,314,311
<311=313,312
<316=317
<317=319,318
<319=321,320
<321=323,322
<324=325
<325=327,326
<327=328
<328=330,329
<330=332,331
<333=334
<334=341,335
<335=339,336
<336=337
<337=338
<339=340
<342=343
<343=345,344
<346=347
<347=358,348
<348=354,349
<349=352,350
<350=351
<352=353
<354=355
<355=357,356
<361=406,362
<362=395,363
<363=364
<364=389,365
<365=380,373,366
<366=367
<367=369,368
<369=370
<370=372,371
<373=374
<374=376,375
<376=377
<377=379,378
<380=381
<381=383,382
<383=384
<384=386,385
<386=388,387
<389=390
<390=392,391
<392=394,393
<395=396
<396=405,404,397
<397=403,398
<398=400,399
<400=402,401
<406=407
<407=416,408
<408=410,409
<410=411
<411=413,412
<413=415,414
<417=418
<418=426,419
<419=422,420
<420=421
<422=423
<423=425,424
<426=427
<428=510,429
<429=501,492,491,490,474,466,459,450,442,431,430
<431=432
<432=440,433
<433=436,434
<434=435
<436=437
<437=439,438
<440=441
<442=443
<443=445,444
<445=447,446
<447=449,448
<450=451
<451=458,452
<452=456,453
<453=454
<454=455
<456=457
<459=460
<460=465,464,461
<461=463,462
<466=467
<467=469,468
<469=471,470
<471=473,472
<474=475
<475=489,476
<476=487,477
<477=480,478
<478=479
<480=481
<481=483,482
<483=484
<484=486,485
<487=488
<492=493
<493=495,494
<495=496
<496=498,497
<498=500,499
<501=502
<502=509,503
<503=507,504
<504=505
<505=506
<507=508
<510=511
<511=520,512
<512=519,513
<513=515,514
<515=516
<516=518,517
<520=522,521
<523=524
<524=526,525
<527=528
<528=547,546,529
<529=545,530
<530=543,531
<531=541,534,532
<532=533
<534=535
<535=537,536
<537=538
<538=540,539
<541=542
<543=544
<548=549
<549=556,550
<550=552,551
<552=553
<553=555,554
<558=559
<559=564,563,560
<560=562,561
<565=566
<566=568,567
<569=570
<570=713,571
<571=704,572
<572=701,573
<573=700,574
<574=689,575
<575=684,576
<576=683,577
<577=678,578
<578=677,579
<579=668,580
<580=665,581
<581=664,582
<582=655,583
<583=652,584
<584=651,585
<585=642,586
<586=639,587
<587=638,588
<588=630,589
<589=629,590
<590=626,591
<591=612,592
<592=609,593
<593=595,594
<595=598,597,596
<598=599
<599=608,600
<600=602,601
<602=603
<603=605,604
<605=607,606
<609=611,610
<612=615,614,613
<615=616
<616=625,617
<617=619,618
<619=620
<620=622,621
<622=624,623
<626=628,627
<630=632,631
<632=633
<633=635,634
<635=637,636
<639=641,640
<642=645,644,643
<645=646
<646=648,647
<648=650,649
<652=654,653
<655=658,657,656
<658=659
<659=661,660
<661=663,662
<665=667,666
<668=671,670,669
<671=672
<672=674,673
<674=676,675
<678=682,679
<679=681,680
<684=686,685
<686=688,687
<689=692,691,690
<692=693
<693=695,694
<695=697,696
<697=699,698
<701=703,702
<704=707,706,705
<707=708
<708=710,709
<710=712,711
<713=715,714
<715=716
<716=718,717
<718=720,719
<720=721
<722=723
<723=732,724
<724=730,725
<725=726
<726=727
<727=729,728
<730=731
<733=734
<734=741,735
<735=739,736
<736=737
<737=738
<739=740
<742=743
<743=745,744
<746=747
<747=749,748
<750=751
<751=759,752
<752=755,753
<753=754
<755=756
<756=758,757
<759=760
<761=762
<762=764,763
<824=830,829,825
<825=826
<826=828,827
<830=831
<831=832
<832=834,833
