>3	FunctionDef	FixedPointCoordinate 
>4	ParameterList	int lat , int lon
>5	Parameter	 
>6	Identifier	lon
>7	ParameterType	int
>8	Parameter	 
>9	Identifier	lat
>10	ParameterType	int
>11	CompoundStatement	 
>12	IfStatement	if ( 0 != ( std 
>13	CompoundStatement	 
>14	ExpressionStatement	 
>15	ShiftExpression	SimpleLogger ( ) . Write ( logDEBUG ) << \"broken lon
>16	ShiftExpression	\"broken lon
>17	ShiftExpression	lon << \", bits
>18	ShiftExpression	\", bits
>19	Identifier	x_coordinate_vector
>20	PrimaryExpression	\", bits
>21	Identifier	lon
>22	PrimaryExpression	\"broken lon
>23	CallExpression	SimpleLogger ( ) . Write ( logDEBUG )
>24	ArgumentList	logDEBUG
>25	Argument	logDEBUG
>26	Identifier	logDEBUG
>27	Callee	SimpleLogger ( ) . Write
>28	MemberAccess	SimpleLogger ( ) . Write
>29	Identifier	Write
>30	CallExpression	SimpleLogger ( )
>31	ArgumentList	 
>32	Callee	SimpleLogger
>33	Identifier	SimpleLogger
>34	IdentifierDeclStatement	 
>35	IdentifierDecl	x_coordinate_vector ( lon )
>36	Identifier	lon
>37	Identifier	x_coordinate_vector
>38	IdentifierDeclType	std 
>39	Condition	 
>40	EqualityExpression	0 != ( std 
>41	ShiftExpression	std 
>42	PrimaryExpression	30
>43	CallExpression	std 
>44	ArgumentList	lon
>45	Argument	lon
>46	Identifier	lon
>47	Callee	std 
>48	Identifier	std 
>49	PrimaryExpression	0
>50	IfStatement	if ( 0 != ( std 
>51	CompoundStatement	 
>52	ExpressionStatement	 
>53	ShiftExpression	SimpleLogger ( ) . Write ( logDEBUG ) << \"broken lat
>54	ShiftExpression	\"broken lat
>55	ShiftExpression	lat << \", bits
>56	ShiftExpression	\", bits
>57	Identifier	y_coordinate_vector
>58	PrimaryExpression	\", bits
>59	Identifier	lat
>60	PrimaryExpression	\"broken lat
>61	CallExpression	SimpleLogger ( ) . Write ( logDEBUG )
>62	ArgumentList	logDEBUG
>63	Argument	logDEBUG
>64	Identifier	logDEBUG
>65	Callee	SimpleLogger ( ) . Write
>66	MemberAccess	SimpleLogger ( ) . Write
>67	Identifier	Write
>68	CallExpression	SimpleLogger ( )
>69	ArgumentList	 
>70	Callee	SimpleLogger
>71	Identifier	SimpleLogger
>72	IdentifierDeclStatement	 
>73	IdentifierDecl	y_coordinate_vector ( lat )
>74	Identifier	lat
>75	Identifier	y_coordinate_vector
>76	IdentifierDeclType	std 
>77	Condition	 
>78	EqualityExpression	0 != ( std 
>79	ShiftExpression	std 
>80	PrimaryExpression	30
>81	CallExpression	std 
>82	ArgumentList	lat
>83	Argument	lat
>84	Identifier	lat
>85	Callee	std 
>86	Identifier	std 
>87	PrimaryExpression	0
>98	FunctionDef	FixedPointCoordinate 
>99	ParameterList	 
>100	ReturnType	bool
>101	CompoundStatement	 
>102	ReturnStatement	 
>103	Identifier	true
>104	IfStatement	if ( lat > 90 * COORDINATE_PRECISION || lat < - 90 * COORDINATE_PRECISION || lon > 180 * COORDINATE_PRECISION || \
>105	CompoundStatement	 
>106	ReturnStatement	 
>107	Identifier	false
>108	Condition	 
>109	OrExpression	lat > 90 * COORDINATE_PRECISION || lat < - 90 * COORDINATE_PRECISION || lon > 180 * COORDINATE_PRECISION || \
>110	OrExpression	lat < - 90 * COORDINATE_PRECISION || lon > 180 * COORDINATE_PRECISION || lon < - 180 * COORDINATE_PRECISION
>111	OrExpression	lon > 180 * COORDINATE_PRECISION || lon < - 180 * COORDINATE_PRECISION
>112	RelationalExpression	lon < - 180 * COORDINATE_PRECISION
>113	MultiplicativeExpression	- 180 * COORDINATE_PRECISION
>114	Identifier	COORDINATE_PRECISION
>115	UnaryOp	- 180
>116	PrimaryExpression	180
>117	UnaryOperator	-
>118	Identifier	lon
>119	RelationalExpression	lon > 180 * COORDINATE_PRECISION
>120	MultiplicativeExpression	180 * COORDINATE_PRECISION
>121	Identifier	COORDINATE_PRECISION
>122	PrimaryExpression	180
>123	Identifier	lon
>124	RelationalExpression	lat < - 90 * COORDINATE_PRECISION
>125	MultiplicativeExpression	- 90 * COORDINATE_PRECISION
>126	Identifier	COORDINATE_PRECISION
>127	UnaryOp	- 90
>128	PrimaryExpression	90
>129	UnaryOperator	-
>130	Identifier	lat
>131	RelationalExpression	lat > 90 * COORDINATE_PRECISION
>132	MultiplicativeExpression	90 * COORDINATE_PRECISION
>133	Identifier	COORDINATE_PRECISION
>134	PrimaryExpression	90
>135	Identifier	lat
>144	FunctionDef	operator == (const FixedPointCoordinate & other)
>145	ParameterList	const FixedPointCoordinate & other
>146	Parameter	 
>147	Identifier	other
>148	ParameterType	const FixedPointCoordinate &
>149	CompoundStatement	 
>150	ReturnStatement	 
>151	AndExpression	lat == other . lat && lon == other . lon
>152	EqualityExpression	lon == other . lon
>153	MemberAccess	other . lon
>154	Identifier	lon
>155	Identifier	other
>156	Identifier	lon
>157	EqualityExpression	lat == other . lat
>158	MemberAccess	other . lat
>159	Identifier	lat
>160	Identifier	other
>161	Identifier	lat
>170	FunctionDef	FixedPointCoordinate 
>171	ParameterList	std 
>172	Parameter	 
>173	Identifier	out
>174	ParameterType	std 
>175	ReturnType	void
>176	CompoundStatement	 
>177	ExpressionStatement	 
>178	ShiftExpression	out << \"(\" << lat / COORDINATE_PRECISION << \",\" << lon / COORDINATE_PRECISION << \")\"
>179	ShiftExpression	\"(\" << lat / COORDINATE_PRECISION << \",\" << lon / COORDINATE_PRECISION << \")\"
>180	ShiftExpression	lat / COORDINATE_PRECISION << \",\" << lon / COORDINATE_PRECISION << \")\"
>181	ShiftExpression	\",\" << lon / COORDINATE_PRECISION << \")\"
>182	ShiftExpression	lon / COORDINATE_PRECISION << \")\"
>183	PrimaryExpression	\")\"
>184	MultiplicativeExpression	lon / COORDINATE_PRECISION
>185	Identifier	COORDINATE_PRECISION
>186	Identifier	lon
>187	PrimaryExpression	\",\"
>188	MultiplicativeExpression	lat / COORDINATE_PRECISION
>189	Identifier	COORDINATE_PRECISION
>190	Identifier	lat
>191	PrimaryExpression	\"(\"
>192	Identifier	out
>197	FunctionDef	FixedPointCoordinate 
>198	ParameterList	const FixedPointCoordinate & other
>199	Parameter	 
>200	Identifier	other
>201	ParameterType	const FixedPointCoordinate &
>202	ReturnType	float
>203	CompoundStatement	 
>204	ReturnStatement	 
>205	CallExpression	coordinate_calculation 
>206	ArgumentList	other
>207	Argument	* this
>208	UnaryOp	* this
>209	Identifier	this
>210	UnaryOperator	*
>211	Argument	other
>212	Identifier	other
>213	Callee	coordinate_calculation 
>214	Identifier	coordinate_calculation 
<3=11,4
<4=8,5
<5=7,6
<8=10,9
<11=50,12
<12=39,13
<13=34,14
<14=15
<15=23,16
<16=22,17
<17=21,18
<18=20,19
<23=27,24
<24=25
<25=26
<27=28
<28=30,29
<30=32,31
<32=33
<34=35
<35=38,37,36
<39=40
<40=49,41
<41=43,42
<43=47,44
<44=45
<45=46
<47=48
<50=77,51
<51=72,52
<52=53
<53=61,54
<54=60,55
<55=59,56
<56=58,57
<61=65,62
<62=63
<63=64
<65=66
<66=68,67
<68=70,69
<70=71
<72=73
<73=76,75,74
<77=78
<78=87,79
<79=81,80
<81=85,82
<82=83
<83=84
<85=86
<98=101,100,99
<101=104,102
<102=103
<104=108,105
<105=106
<106=107
<108=109
<109=131,110
<110=124,111
<111=119,112
<112=118,113
<113=115,114
<115=117,116
<119=123,120
<120=122,121
<124=130,125
<125=127,126
<127=129,128
<131=135,132
<132=134,133
<144=149,145
<145=146
<146=148,147
<149=150
<150=151
<151=157,152
<152=156,153
<153=155,154
<157=161,158
<158=160,159
<170=176,175,171
<171=172
<172=174,173
<176=177
<177=178
<178=192,179
<179=191,180
<180=188,181
<181=187,182
<182=184,183
<184=186,185
<188=190,189
<197=203,202,198
<198=199
<199=201,200
<203=204
<204=205
<205=213,206
<206=211,207
<207=208
<208=210,209
<211=212
<213=214
