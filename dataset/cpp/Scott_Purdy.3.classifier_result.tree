>3	FunctionDef	ClassifierResult 
>4	ParameterList	 
>5	CompoundStatement	 
>6	ForStatement	for ( map < UInt , vector < Real64 > * > 
>7	CompoundStatement	 
>8	ExpressionStatement	 
>9	PtrMemberAccess	it -> second
>10	Identifier	second
>11	Identifier	it
>12	Statement	 
>13	UnaryExpression	 
>14	Identifier	it
>15	IncDec	++
>16	Condition	 
>17	EqualityExpression	it != result_ . end ( )
>18	CallExpression	result_ . end ( )
>19	ArgumentList	 
>20	Callee	result_ . end
>21	MemberAccess	result_ . end
>22	Identifier	end
>23	Identifier	result_
>24	Identifier	it
>25	ForInit	 
>26	IdentifierDeclStatement	map < UInt , vector < Real64 > * > 
>27	IdentifierDecl	it = result_ . begin ( )
>28	AssignmentExpr	it = result_ . begin ( )
>29	CallExpression	result_ . begin ( )
>30	ArgumentList	 
>31	Callee	result_ . begin
>32	MemberAccess	result_ . begin
>33	Identifier	begin
>34	Identifier	result_
>35	Identifier	it
>36	Identifier	it
>37	IdentifierDeclType	map < UInt , vector < Real64 > * > 
>45	FunctionDef	ClassifierResult 
>46	ParameterList	UInt step , UInt size , Real64 value
>47	Parameter	 
>48	Identifier	value
>49	ParameterType	Real64
>50	Parameter	 
>51	Identifier	size
>52	ParameterType	UInt
>53	Parameter	 
>54	Identifier	step
>55	ParameterType	UInt
>56	ReturnType	vector < Real64 > *
>57	CompoundStatement	 
>58	ReturnStatement	 
>59	Identifier	v
>60	IfStatement	if ( it != result_ . end ( ) )
>61	ElseStatement	else
>62	CompoundStatement	 
>63	ExpressionStatement	 
>64	Statement	 
>65	Statement	 
>66	Statement	 
>67	Statement	 
>68	Statement	 
>69	Statement	 
>70	Statement	 
>71	Statement	 
>72	Statement	 
>73	Statement	 
>74	Statement	 
>75	Statement	 
>76	Statement	 
>77	Statement	 
>78	Statement	 
>79	Statement	 
>80	Statement	 
>81	Statement	 
>82	Statement	 
>83	Statement	 
>84	ExpressionStatement	 
>85	AssignmentExpr	v = new vector < Real64 > ( size , value )
>86	Expression	size , value
>87	Identifier	value
>88	Identifier	size
>89	Identifier	v
>90	CompoundStatement	 
>91	ExpressionStatement	 
>92	AssignmentExpr	v = it -> second
>93	PtrMemberAccess	it -> second
>94	Identifier	second
>95	Identifier	it
>96	Identifier	v
>97	Condition	 
>98	EqualityExpression	it != result_ . end ( )
>99	CallExpression	result_ . end ( )
>100	ArgumentList	 
>101	Callee	result_ . end
>102	MemberAccess	result_ . end
>103	Identifier	end
>104	Identifier	result_
>105	Identifier	it
>106	IdentifierDeclStatement	 
>107	IdentifierDecl	it = result_ . find ( step )
>108	AssignmentExpr	it = result_ . find ( step )
>109	CallExpression	result_ . find ( step )
>110	ArgumentList	step
>111	Argument	step
>112	Identifier	step
>113	Callee	result_ . find
>114	MemberAccess	result_ . find
>115	Identifier	find
>116	Identifier	result_
>117	Identifier	it
>118	Identifier	it
>119	IdentifierDeclType	map < UInt , vector < Real64 > * > 
>120	IdentifierDeclStatement	 
>121	IdentifierDecl	* v
>122	Identifier	v
>123	IdentifierDeclType	vector < Real64 > *
<3=5,4
<5=6
<6=25,16,13,7
<7=12,8
<8=9
<9=11,10
<13=15,14
<16=17
<17=24,18
<18=20,19
<20=21
<21=23,22
<25=26
<26=27
<27=37,36,28
<28=35,29
<29=31,30
<31=32
<32=34,33
<45=57,56,46
<46=53,50,47
<47=49,48
<50=52,51
<53=55,54
<57=120,106,60,58
<58=59
<60=97,90,61
<61=62
<62=84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63
<84=85
<85=89,86
<86=88,87
<90=91
<91=92
<92=96,93
<93=95,94
<97=98
<98=105,99
<99=101,100
<101=102
<102=104,103
<106=107
<107=119,118,108
<108=117,109
<109=113,110
<110=111
<111=112
<113=114
<114=116,115
<120=121
<121=123,122
