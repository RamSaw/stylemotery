>3	FunctionDef	Collection ()
>4	ParameterList	 
>5	CompoundStatement	 
>9	FunctionDef	~Collection ()
>10	ParameterList	 
>11	CompoundStatement	 
>15	FunctionDef	getCount ()
>16	ParameterList	 
>17	CompoundStatement	 
>18	ReturnStatement	 
>19	CallExpression	vec_ . size ( )
>20	ArgumentList	 
>21	Callee	vec_ . size
>22	MemberAccess	vec_ . size
>23	Identifier	size
>24	Identifier	vec_
>30	FunctionDef	getByIndex (size_t index)
>31	ParameterList	size_t index
>32	Parameter	 
>33	Identifier	index
>34	ParameterType	size_t
>35	CompoundStatement	 
>36	ReturnStatement	 
>37	ArrayIndexing	vec_ [ index ]
>38	Identifier	index
>39	Identifier	vec_
>40	ExpressionStatement	 
>41	CallExpression	NTA_CHECK ( index < vec_ . size ( ) )
>42	ArgumentList	index < vec_ . size ( )
>43	Argument	index < vec_ . size ( )
>44	RelationalExpression	index < vec_ . size ( )
>45	CallExpression	vec_ . size ( )
>46	ArgumentList	 
>47	Callee	vec_ . size
>48	MemberAccess	vec_ . size
>49	Identifier	size
>50	Identifier	vec_
>51	Identifier	index
>52	Callee	NTA_CHECK
>53	Identifier	NTA_CHECK
>62	FunctionDef	getByIndex (size_t index)
>63	ParameterList	size_t index
>64	Parameter	 
>65	Identifier	index
>66	ParameterType	size_t
>67	CompoundStatement	 
>68	ReturnStatement	 
>69	ArrayIndexing	vec_ [ index ]
>70	Identifier	index
>71	Identifier	vec_
>72	ExpressionStatement	 
>73	CallExpression	NTA_CHECK ( index < vec_ . size ( ) )
>74	ArgumentList	index < vec_ . size ( )
>75	Argument	index < vec_ . size ( )
>76	RelationalExpression	index < vec_ . size ( )
>77	CallExpression	vec_ . size ( )
>78	ArgumentList	 
>79	Callee	vec_ . size
>80	MemberAccess	vec_ . size
>81	Identifier	size
>82	Identifier	vec_
>83	Identifier	index
>84	Callee	NTA_CHECK
>85	Identifier	NTA_CHECK
>94	FunctionDef	contains (const std 
>95	ParameterList	const std 
>96	Parameter	 
>97	Identifier	name
>98	ParameterType	const std 
>99	CompoundStatement	 
>100	ReturnStatement	 
>101	Identifier	false
>102	ForStatement	for ( i = vec_ . begin ( ) ; i != vec_ . end ( ) ; i ++ )
>103	CompoundStatement	 
>104	IfStatement	if ( i -> first == name )
>105	ReturnStatement	 
>106	Identifier	true
>107	Condition	 
>108	EqualityExpression	i -> first == name
>109	Identifier	name
>110	PtrMemberAccess	i -> first
>111	Identifier	first
>112	Identifier	i
>113	IncDecOp	 
>114	IncDec	++
>115	Identifier	i
>116	Condition	 
>117	EqualityExpression	i != vec_ . end ( )
>118	CallExpression	vec_ . end ( )
>119	ArgumentList	 
>120	Callee	vec_ . end
>121	MemberAccess	vec_ . end
>122	Identifier	end
>123	Identifier	vec_
>124	Identifier	i
>125	ForInit	 
>126	AssignmentExpr	i = vec_ . begin ( )
>127	CallExpression	vec_ . begin ( )
>128	ArgumentList	 
>129	Callee	vec_ . begin
>130	MemberAccess	vec_ . begin
>131	Identifier	begin
>132	Identifier	vec_
>133	Identifier	i
>134	IdentifierDeclStatement	 
>135	IdentifierDecl	i
>136	Identifier	i
>137	IdentifierDeclType	typename CollectionStorage 
>150	FunctionDef	getByName (const std 
>151	ParameterList	const std 
>152	Parameter	 
>153	Identifier	name
>154	ParameterType	const std 
>155	CompoundStatement	 
>156	ExpressionStatement	 
>157	ShiftExpression	NTA_THROW << \"No item named
>158	ShiftExpression	\"No item named
>159	Identifier	name
>160	PrimaryExpression	\"No item named
>161	Identifier	NTA_THROW
>162	ForStatement	for ( i = vec_ . begin ( ) ; i != vec_ . end ( ) ; i ++ )
>163	CompoundStatement	 
>164	IfStatement	if ( i -> first == name )
>165	ReturnStatement	 
>166	PtrMemberAccess	i -> second
>167	Identifier	second
>168	Identifier	i
>169	Condition	 
>170	EqualityExpression	i -> first == name
>171	Identifier	name
>172	PtrMemberAccess	i -> first
>173	Identifier	first
>174	Identifier	i
>175	IncDecOp	 
>176	IncDec	++
>177	Identifier	i
>178	Condition	 
>179	EqualityExpression	i != vec_ . end ( )
>180	CallExpression	vec_ . end ( )
>181	ArgumentList	 
>182	Callee	vec_ . end
>183	MemberAccess	vec_ . end
>184	Identifier	end
>185	Identifier	vec_
>186	Identifier	i
>187	ForInit	 
>188	AssignmentExpr	i = vec_ . begin ( )
>189	CallExpression	vec_ . begin ( )
>190	ArgumentList	 
>191	Callee	vec_ . begin
>192	MemberAccess	vec_ . begin
>193	Identifier	begin
>194	Identifier	vec_
>195	Identifier	i
>196	IdentifierDeclStatement	 
>197	IdentifierDecl	i
>198	Identifier	i
>199	IdentifierDeclType	typename CollectionStorage 
>211	FunctionDef	add (const std 
>212	ParameterList	const std 
>213	Parameter	 
>214	Identifier	item
>215	ParameterType	const T &
>216	Parameter	 
>217	Identifier	name
>218	ParameterType	const std 
>219	CompoundStatement	 
>220	ExpressionStatement	 
>221	CallExpression	vec_ . push_back ( std 
>222	ArgumentList	std 
>223	Argument	std 
>224	CallExpression	std 
>225	ArgumentList	name
>226	Argument	item
>227	Identifier	item
>228	Argument	name
>229	Identifier	name
>230	Callee	std 
>231	Identifier	std 
>232	Callee	vec_ . push_back
>233	MemberAccess	vec_ . push_back
>234	Identifier	push_back
>235	Identifier	vec_
>236	ForStatement	for ( i = vec_ . begin ( ) ; i != vec_ . end ( ) ; i ++ )
>237	CompoundStatement	 
>238	IfStatement	if ( i -> first == name )
>239	CompoundStatement	 
>240	ExpressionStatement	 
>241	ShiftExpression	NTA_THROW << \"Unable to add item '\" << name << \"' to collection \" << \"because it already exists\"
>242	ShiftExpression	\"Unable to add item '\" << name << \"' to collection \" << \"because it already exists\"
>243	ShiftExpression	name << \"' to collection \" << \"because it already exists\"
>244	ShiftExpression	\"' to collection \" << \"because it already exists\"
>245	PrimaryExpression	\"because it already exists\"
>246	PrimaryExpression	\"' to collection \"
>247	Identifier	name
>248	PrimaryExpression	\"Unable to add item '\"
>249	Identifier	NTA_THROW
>250	Condition	 
>251	EqualityExpression	i -> first == name
>252	Identifier	name
>253	PtrMemberAccess	i -> first
>254	Identifier	first
>255	Identifier	i
>256	IncDecOp	 
>257	IncDec	++
>258	Identifier	i
>259	Condition	 
>260	EqualityExpression	i != vec_ . end ( )
>261	CallExpression	vec_ . end ( )
>262	ArgumentList	 
>263	Callee	vec_ . end
>264	MemberAccess	vec_ . end
>265	Identifier	end
>266	Identifier	vec_
>267	Identifier	i
>268	ForInit	 
>269	AssignmentExpr	i = vec_ . begin ( )
>270	CallExpression	vec_ . begin ( )
>271	ArgumentList	 
>272	Callee	vec_ . begin
>273	MemberAccess	vec_ . begin
>274	Identifier	begin
>275	Identifier	vec_
>276	Identifier	i
>277	IdentifierDeclStatement	 
>278	IdentifierDecl	i
>279	Identifier	i
>280	IdentifierDeclType	typename CollectionStorage 
>293	FunctionDef	remove (const std 
>294	ParameterList	const std 
>295	Parameter	 
>296	Identifier	name
>297	ParameterType	const std 
>298	CompoundStatement	 
>299	ExpressionStatement	 
>300	CallExpression	vec_ . erase ( i )
>301	ArgumentList	i
>302	Argument	i
>303	Identifier	i
>304	Callee	vec_ . erase
>305	MemberAccess	vec_ . erase
>306	Identifier	erase
>307	Identifier	vec_
>308	IfStatement	if ( i == vec_ . end ( ) )
>309	ExpressionStatement	 
>310	ShiftExpression	NTA_THROW << \"No item named '\" << name << \"' in collection\"
>311	ShiftExpression	\"No item named '\" << name << \"' in collection\"
>312	ShiftExpression	name << \"' in collection\"
>313	PrimaryExpression	\"' in collection\"
>314	Identifier	name
>315	PrimaryExpression	\"No item named '\"
>316	Identifier	NTA_THROW
>317	Condition	 
>318	EqualityExpression	i == vec_ . end ( )
>319	CallExpression	vec_ . end ( )
>320	ArgumentList	 
>321	Callee	vec_ . end
>322	MemberAccess	vec_ . end
>323	Identifier	end
>324	Identifier	vec_
>325	Identifier	i
>326	ForStatement	for ( i = vec_ . begin ( ) ; i != vec_ . end ( ) ; i ++ )
>327	CompoundStatement	 
>328	IfStatement	if ( i -> first == name )
>329	BreakStatement	 
>330	Condition	 
>331	EqualityExpression	i -> first == name
>332	Identifier	name
>333	PtrMemberAccess	i -> first
>334	Identifier	first
>335	Identifier	i
>336	IncDecOp	 
>337	IncDec	++
>338	Identifier	i
>339	Condition	 
>340	EqualityExpression	i != vec_ . end ( )
>341	CallExpression	vec_ . end ( )
>342	ArgumentList	 
>343	Callee	vec_ . end
>344	MemberAccess	vec_ . end
>345	Identifier	end
>346	Identifier	vec_
>347	Identifier	i
>348	ForInit	 
>349	AssignmentExpr	i = vec_ . begin ( )
>350	CallExpression	vec_ . begin ( )
>351	ArgumentList	 
>352	Callee	vec_ . begin
>353	MemberAccess	vec_ . begin
>354	Identifier	begin
>355	Identifier	vec_
>356	Identifier	i
>357	IdentifierDeclStatement	 
>358	IdentifierDecl	i
>359	Identifier	i
>360	IdentifierDeclType	typename CollectionStorage 
<3=5,4
<9=11,10
<15=17,16
<17=18
<18=19
<19=21,20
<21=22
<22=24,23
<30=35,31
<31=32
<32=34,33
<35=40,36
<36=37
<37=39,38
<40=41
<41=52,42
<42=43
<43=44
<44=51,45
<45=47,46
<47=48
<48=50,49
<52=53
<62=67,63
<63=64
<64=66,65
<67=72,68
<68=69
<69=71,70
<72=73
<73=84,74
<74=75
<75=76
<76=83,77
<77=79,78
<79=80
<80=82,81
<84=85
<94=99,95
<95=96
<96=98,97
<99=134,102,100
<100=101
<102=125,116,113,103
<103=104
<104=107,105
<105=106
<107=108
<108=110,109
<110=112,111
<113=115,114
<116=117
<117=124,118
<118=120,119
<120=121
<121=123,122
<125=126
<126=133,127
<127=129,128
<129=130
<130=132,131
<134=135
<135=137,136
<150=155,151
<151=152
<152=154,153
<155=196,162,156
<156=157
<157=161,158
<158=160,159
<162=187,178,175,163
<163=164
<164=169,165
<165=166
<166=168,167
<169=170
<170=172,171
<172=174,173
<175=177,176
<178=179
<179=186,180
<180=182,181
<182=183
<183=185,184
<187=188
<188=195,189
<189=191,190
<191=192
<192=194,193
<196=197
<197=199,198
<211=219,212
<212=216,213
<213=215,214
<216=218,217
<219=277,236,220
<220=221
<221=232,222
<222=223
<223=224
<224=230,225
<225=228,226
<226=227
<228=229
<230=231
<232=233
<233=235,234
<236=268,259,256,237
<237=238
<238=250,239
<239=240
<240=241
<241=249,242
<242=248,243
<243=247,244
<244=246,245
<250=251
<251=253,252
<253=255,254
<256=258,257
<259=260
<260=267,261
<261=263,262
<263=264
<264=266,265
<268=269
<269=276,270
<270=272,271
<272=273
<273=275,274
<277=278
<278=280,279
<293=298,294
<294=295
<295=297,296
<298=357,326,308,299
<299=300
<300=304,301
<301=302
<302=303
<304=305
<305=307,306
<308=317,309
<309=310
<310=316,311
<311=315,312
<312=314,313
<317=318
<318=325,319
<319=321,320
<321=322
<322=324,323
<326=348,339,336,327
<327=328
<328=330,329
<330=331
<331=333,332
<333=335,334
<336=338,337
<339=340
<340=347,341
<341=343,342
<343=344
<344=346,345
<348=349
<349=356,350
<350=352,351
<352=353
<353=355,354
<357=358
<358=360,359
