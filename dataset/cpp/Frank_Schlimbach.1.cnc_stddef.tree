>3	FunctionDef	cnc_assert_failed (const char * filename , int line , const char * expression , const char * message)
>4	ParameterList	const char * filename , int line , const char * expression , const char * message
>5	Parameter	 
>6	Identifier	message
>7	ParameterType	const char *
>8	Parameter	 
>9	Identifier	expression
>10	ParameterType	const char *
>11	Parameter	 
>12	Identifier	line
>13	ParameterType	int
>14	Parameter	 
>15	Identifier	filename
>16	ParameterType	const char *
>17	ReturnType	void
>18	CompoundStatement	 
>19	ExpressionStatement	 
>20	CallExpression	abort ( )
>21	ArgumentList	 
>22	Callee	abort
>23	Identifier	abort
>24	IfStatement	if ( message == NULL )
>25	ElseStatement	else
>26	CompoundStatement	 
>27	ExpressionStatement	 
>28	ShiftExpression	oss << filename << \"
>29	ShiftExpression	filename << \"
>30	ShiftExpression	\"
>31	ShiftExpression	line << \" assertion '\" << expression << \"' failed
>32	ShiftExpression	\" assertion '\" << expression << \"' failed
>33	ShiftExpression	expression << \"' failed
>34	ShiftExpression	\"' failed
>35	Identifier	message
>36	PrimaryExpression	\"' failed
>37	Identifier	expression
>38	PrimaryExpression	\" assertion '\"
>39	Identifier	line
>40	PrimaryExpression	\"
>41	Identifier	filename
>42	Identifier	oss
>43	IdentifierDeclStatement	 
>44	IdentifierDecl	oss ( std 
>45	Identifier	std 
>46	Identifier	oss
>47	IdentifierDeclType	Speaker
>48	CompoundStatement	 
>49	ExpressionStatement	 
>50	ShiftExpression	oss << filename << \"
>51	ShiftExpression	filename << \"
>52	ShiftExpression	\"
>53	ShiftExpression	line << \" assertion '\" << expression << \"' failed.\"
>54	ShiftExpression	\" assertion '\" << expression << \"' failed.\"
>55	ShiftExpression	expression << \"' failed.\"
>56	PrimaryExpression	\"' failed.\"
>57	Identifier	expression
>58	PrimaryExpression	\" assertion '\"
>59	Identifier	line
>60	PrimaryExpression	\"
>61	Identifier	filename
>62	Identifier	oss
>63	IdentifierDeclStatement	 
>64	IdentifierDecl	oss ( std 
>65	Identifier	std 
>66	Identifier	oss
>67	IdentifierDeclType	Speaker
>68	Condition	 
>69	EqualityExpression	message == NULL
>70	Identifier	NULL
>71	Identifier	message
>81	FunctionDef	Speaker 
>82	ParameterList	std 
>83	Parameter	 
>84	Identifier	os
>85	ParameterType	std 
>86	CompoundStatement	 
>87	ExpressionStatement	 
>88	ShiftExpression	( * this ) << \"] \"
>89	PrimaryExpression	\"] \"
>90	UnaryOp	* this
>91	Identifier	this
>92	UnaryOperator	*
>93	Statement	 
>94	Statement	 
>95	Statement	 
>96	Statement	 
>97	Statement	 
>98	Statement	 
>99	Statement	 
>100	ExpressionStatement	 
>101	ShiftExpression	( * this ) << \" \" << distributor 
>102	ShiftExpression	\" \" << distributor 
>103	CallExpression	distributor 
>104	ArgumentList	 
>105	Callee	distributor 
>106	Identifier	distributor 
>107	PrimaryExpression	\" \"
>108	UnaryOp	* this
>109	Identifier	this
>110	UnaryOperator	*
>111	Statement	 
>112	Statement	 
>113	Statement	 
>114	Statement	 
>115	Statement	 
>116	Statement	 
>117	IfStatement	if ( distributor 
>118	Statement	 
>119	Condition	 
>120	CallExpression	distributor 
>121	ArgumentList	 
>122	Callee	distributor 
>123	Identifier	distributor 
>124	ExpressionStatement	 
>125	ShiftExpression	( * this ) << \"[CnC\"
>126	PrimaryExpression	\"[CnC\"
>127	UnaryOp	* this
>128	Identifier	this
>129	UnaryOperator	*
>130	Statement	 
>131	Statement	 
>132	Statement	 
>133	Statement	 
>134	Statement	 
>135	Statement	 
>136	Statement	 
>143	FunctionDef	Speaker 
>144	ParameterList	 
>145	CompoundStatement	 
>146	ExpressionStatement	 
>147	ShiftExpression	m_os << str ( ) << std 
>148	ShiftExpression	str ( ) << std 
>149	Identifier	std 
>150	CallExpression	str ( )
>151	ArgumentList	 
>152	Callee	str
>153	Identifier	str
>154	Identifier	m_os
>155	ExpressionStatement	 
>156	Statement	 
>157	Statement	 
>158	Statement	 
>159	Statement	 
>160	Statement	 
>161	Statement	 
>162	Statement	 
>163	Statement	 
>164	Statement	 
>165	Statement	 
>166	Statement	 
>167	Statement	 
>168	Statement	 
>169	Statement	 
>170	ExpressionStatement	 
>171	ShiftExpression	( * this ) << std 
>172	Identifier	std 
>173	UnaryOp	* this
>174	Identifier	this
>175	UnaryOperator	*
>176	Statement	 
>177	Statement	 
>178	Statement	 
>179	Statement	 
>180	Statement	 
>181	Statement	 
>182	Statement	 
<3=18,17,4
<4=14,11,8,5
<5=7,6
<8=10,9
<11=13,12
<14=16,15
<18=24,19
<19=20
<20=22,21
<22=23
<24=68,48,25
<25=26
<26=43,27
<27=28
<28=42,29
<29=41,30
<30=40,31
<31=39,32
<32=38,33
<33=37,34
<34=36,35
<43=44
<44=47,46,45
<48=63,49
<49=50
<50=62,51
<51=61,52
<52=60,53
<53=59,54
<54=58,55
<55=57,56
<63=64
<64=67,66,65
<68=69
<69=71,70
<81=86,82
<82=83
<83=85,84
<86=136,135,134,133,132,131,130,124,117,116,115,114,113,112,111,100,99,98,97,96,95,94,93,87
<87=88
<88=90,89
<90=92,91
<100=101
<101=108,102
<102=107,103
<103=105,104
<105=106
<108=110,109
<117=119,118
<119=120
<120=122,121
<122=123
<124=125
<125=127,126
<127=129,128
<143=145,144
<145=182,181,180,179,178,177,176,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,146
<146=147
<147=154,148
<148=150,149
<150=152,151
<152=153
<170=171
<171=173,172
<173=175,174
