>3	FunctionDef	QRCodeWidget 
>4	ParameterList	QWidget * parent
>5	Parameter	 
>6	Identifier	parent
>7	ParameterType	QWidget *
>8	CompoundStatement	 
>9	ExpressionStatement	 
>10	CallExpression	setText ( \"\" )
>11	ArgumentList	\"\"
>12	Argument	\"\"
>13	PrimaryExpression	\"\"
>14	Callee	setText
>15	Identifier	setText
>20	FunctionDef	QRCodeWidget 
>21	ParameterList	const QString & text
>22	Parameter	 
>23	Identifier	text
>24	ParameterType	const QString &
>25	ReturnType	void
>26	CompoundStatement	 
>27	ExpressionStatement	 
>28	CallExpression	update ( )
>29	ArgumentList	 
>30	Callee	update
>31	Identifier	update
>32	ExpressionStatement	 
>33	CallExpression	setMinimumSize ( codeImage . size ( ) )
>34	ArgumentList	codeImage . size ( )
>35	Argument	codeImage . size ( )
>36	CallExpression	codeImage . size ( )
>37	ArgumentList	 
>38	Callee	codeImage . size
>39	MemberAccess	codeImage . size
>40	Identifier	size
>41	Identifier	codeImage
>42	Callee	setMinimumSize
>43	Identifier	setMinimumSize
>44	ExpressionStatement	 
>45	CallExpression	QRcode_free ( qr )
>46	ArgumentList	qr
>47	Argument	qr
>48	Identifier	qr
>49	Callee	QRcode_free
>50	Identifier	QRcode_free
>51	ExpressionStatement	 
>52	CallExpression	painter . end ( )
>53	ArgumentList	 
>54	Callee	painter . end
>55	MemberAccess	painter . end
>56	Identifier	end
>57	Identifier	painter
>58	ForStatement	for ( int y = 0 ; y < size ; ++ y )
>59	CompoundStatement	 
>60	ForStatement	for ( int x = 0 ; x < size ; ++ x )
>61	CompoundStatement	 
>62	IfStatement	if ( qr -> data [ ppos ] & 1 )
>63	CompoundStatement	 
>64	ExpressionStatement	 
>65	CallExpression	painter . drawPoint ( x , y )
>66	ArgumentList	x
>67	Argument	y
>68	Identifier	y
>69	Argument	x
>70	Identifier	x
>71	Callee	painter . drawPoint
>72	MemberAccess	painter . drawPoint
>73	Identifier	drawPoint
>74	Identifier	painter
>75	Condition	 
>76	BitAndExpression	qr -> data [ ppos ] & 1
>77	PrimaryExpression	1
>78	ArrayIndexing	qr -> data [ ppos ]
>79	Identifier	ppos
>80	PtrMemberAccess	qr -> data
>81	Identifier	data
>82	Identifier	qr
>83	IdentifierDeclStatement	 
>84	IdentifierDecl	ppos = y * size + x
>85	AssignmentExpr	ppos = y * size + x
>86	AdditiveExpression	y * size + x
>87	Identifier	x
>88	MultiplicativeExpression	y * size
>89	Identifier	size
>90	Identifier	y
>91	Identifier	ppos
>92	Identifier	ppos
>93	IdentifierDeclType	int
>94	UnaryExpression	 
>95	Identifier	x
>96	IncDec	++
>97	Condition	 
>98	RelationalExpression	x < size
>99	Identifier	size
>100	Identifier	x
>101	ForInit	 
>102	IdentifierDeclStatement	int x = 0 ;
>103	IdentifierDecl	x = 0
>104	AssignmentExpr	x = 0
>105	PrimaryExpression	0
>106	Identifier	x
>107	Identifier	x
>108	IdentifierDeclType	int
>109	UnaryExpression	 
>110	Identifier	y
>111	IncDec	++
>112	Condition	 
>113	RelationalExpression	y < size
>114	Identifier	size
>115	Identifier	y
>116	ForInit	 
>117	IdentifierDeclStatement	int y = 0 ;
>118	IdentifierDecl	y = 0
>119	AssignmentExpr	y = 0
>120	PrimaryExpression	0
>121	Identifier	y
>122	Identifier	y
>123	IdentifierDeclType	int
>124	IfStatement	if ( size <= 0 )
>125	ExpressionStatement	 
>126	AssignmentExpr	size = 1
>127	PrimaryExpression	1
>128	Identifier	size
>129	Condition	 
>130	RelationalExpression	size <= 0
>131	PrimaryExpression	0
>132	Identifier	size
>133	IdentifierDeclStatement	 
>134	IdentifierDecl	size = qr -> width
>135	AssignmentExpr	size = qr -> width
>136	PtrMemberAccess	qr -> width
>137	Identifier	width
>138	Identifier	qr
>139	Identifier	size
>140	Identifier	size
>141	IdentifierDeclType	int
>142	ExpressionStatement	 
>143	CallExpression	painter . setPen ( Qt 
>144	ArgumentList	Qt 
>145	Argument	Qt 
>146	Identifier	Qt 
>147	Callee	painter . setPen
>148	MemberAccess	painter . setPen
>149	Identifier	setPen
>150	Identifier	painter
>151	ExpressionStatement	 
>152	CallExpression	painter . setBrush ( Qt 
>153	ArgumentList	Qt 
>154	Argument	Qt 
>155	Identifier	Qt 
>156	Callee	painter . setBrush
>157	MemberAccess	painter . setBrush
>158	Identifier	setBrush
>159	Identifier	painter
>160	IdentifierDeclStatement	 
>161	IdentifierDecl	painter ( & codeImage )
>162	UnaryOp	& codeImage
>163	Identifier	codeImage
>164	UnaryOperator	&
>165	Identifier	painter
>166	IdentifierDeclType	QPainter
>167	ExpressionStatement	 
>168	CallExpression	codeImage . fill ( Qt 
>169	ArgumentList	Qt 
>170	Argument	Qt 
>171	Identifier	Qt 
>172	Callee	codeImage . fill
>173	MemberAccess	codeImage . fill
>174	Identifier	fill
>175	Identifier	codeImage
>176	ExpressionStatement	 
>177	AssignmentExpr	codeImage = QPixmap ( qr -> width , qr -> width )
>178	CallExpression	QPixmap ( qr -> width , qr -> width )
>179	ArgumentList	qr -> width
>180	Argument	qr -> width
>181	PtrMemberAccess	qr -> width
>182	Identifier	width
>183	Identifier	qr
>184	Argument	qr -> width
>185	PtrMemberAccess	qr -> width
>186	Identifier	width
>187	Identifier	qr
>188	Callee	QPixmap
>189	Identifier	QPixmap
>190	Identifier	codeImage
>191	IfStatement	if ( ! qr )
>192	CompoundStatement	 
>193	ReturnStatement	 
>194	ExpressionStatement	 
>195	CallExpression	update ( )
>196	ArgumentList	 
>197	Callee	update
>198	Identifier	update
>199	ExpressionStatement	 
>200	CallExpression	setMinimumSize ( codeImage . size ( ) )
>201	ArgumentList	codeImage . size ( )
>202	Argument	codeImage . size ( )
>203	CallExpression	codeImage . size ( )
>204	ArgumentList	 
>205	Callee	codeImage . size
>206	MemberAccess	codeImage . size
>207	Identifier	size
>208	Identifier	codeImage
>209	Callee	setMinimumSize
>210	Identifier	setMinimumSize
>211	ExpressionStatement	 
>212	CallExpression	codeImage . fill ( Qt 
>213	ArgumentList	Qt 
>214	Argument	Qt 
>215	Identifier	Qt 
>216	Callee	codeImage . fill
>217	MemberAccess	codeImage . fill
>218	Identifier	fill
>219	Identifier	codeImage
>220	ExpressionStatement	 
>221	AssignmentExpr	codeImage = QPixmap ( 128 , 128 )
>222	CallExpression	QPixmap ( 128 , 128 )
>223	ArgumentList	128
>224	Argument	128
>225	PrimaryExpression	128
>226	Argument	128
>227	PrimaryExpression	128
>228	Callee	QPixmap
>229	Identifier	QPixmap
>230	Identifier	codeImage
>231	Condition	 
>232	UnaryOp	! qr
>233	Identifier	qr
>234	UnaryOperator	!
>235	IdentifierDeclStatement	 
>236	IdentifierDecl	* qr = QRcode_encodeString ( text . toUtf8 ( ) . constData ( ) , 0 , QR_ECLEVEL_L , QR_MODE_8 , 1 )
>237	AssignmentExpr	* qr = QRcode_encodeString ( text . toUtf8 ( ) . constData ( ) , 0 , QR_ECLEVEL_L , QR_MODE_8 , 1 )
>238	CallExpression	QRcode_encodeString ( text . toUtf8 ( ) . constData ( ) , 0 , QR_ECLEVEL_L , QR_MODE_8 , 1 )
>239	ArgumentList	text . toUtf8 ( ) . constData ( )
>240	Argument	1
>241	PrimaryExpression	1
>242	Argument	QR_MODE_8
>243	Identifier	QR_MODE_8
>244	Argument	QR_ECLEVEL_L
>245	Identifier	QR_ECLEVEL_L
>246	Argument	0
>247	PrimaryExpression	0
>248	Argument	text . toUtf8 ( ) . constData ( )
>249	CallExpression	text . toUtf8 ( ) . constData ( )
>250	ArgumentList	 
>251	Callee	text . toUtf8 ( ) . constData
>252	MemberAccess	text . toUtf8 ( ) . constData
>253	Identifier	constData
>254	CallExpression	text . toUtf8 ( )
>255	ArgumentList	 
>256	Callee	text . toUtf8
>257	MemberAccess	text . toUtf8
>258	Identifier	toUtf8
>259	Identifier	text
>260	Callee	QRcode_encodeString
>261	Identifier	QRcode_encodeString
>262	Identifier	qr
>263	Identifier	qr
>264	IdentifierDeclType	QRcode *
>293	FunctionDef	QRCodeWidget 
>294	ParameterList	QPaintEvent * event
>295	Parameter	 
>296	Identifier	event
>297	ParameterType	QPaintEvent *
>298	ReturnType	void
>299	CompoundStatement	 
>300	ExpressionStatement	 
>301	CallExpression	painter . drawPixmap ( QPointF ( x , y ) , codeImage )
>302	ArgumentList	QPointF ( x , y )
>303	Argument	codeImage
>304	Identifier	codeImage
>305	Argument	QPointF ( x , y )
>306	CallExpression	QPointF ( x , y )
>307	ArgumentList	x
>308	Argument	y
>309	Identifier	y
>310	Argument	x
>311	Identifier	x
>312	Callee	QPointF
>313	Identifier	QPointF
>314	Callee	painter . drawPixmap
>315	MemberAccess	painter . drawPixmap
>316	Identifier	drawPixmap
>317	Identifier	painter
>318	IdentifierDeclStatement	 
>319	IdentifierDecl	y = ( height ( ) - ( codeImage . height ( ) * scaleFactor ) ) / ( 2.0 * scaleFactor )
>320	AssignmentExpr	y = ( height ( ) - ( codeImage . height ( ) * scaleFactor ) ) / ( 2.0 * scaleFactor )
>321	MultiplicativeExpression	( height ( ) - ( codeImage . height ( ) * scaleFactor ) ) / ( 2.0 * scaleFactor )
>322	MultiplicativeExpression	2.0 * scaleFactor
>323	Identifier	scaleFactor
>324	PrimaryExpression	2.0
>325	AdditiveExpression	height ( ) - ( codeImage . height ( ) * scaleFactor )
>326	MultiplicativeExpression	codeImage . height ( ) * scaleFactor
>327	Identifier	scaleFactor
>328	CallExpression	codeImage . height ( )
>329	ArgumentList	 
>330	Callee	codeImage . height
>331	MemberAccess	codeImage . height
>332	Identifier	height
>333	Identifier	codeImage
>334	CallExpression	height ( )
>335	ArgumentList	 
>336	Callee	height
>337	Identifier	height
>338	Identifier	y
>339	Identifier	y
>340	IdentifierDeclType	qreal
>341	IdentifierDeclStatement	 
>342	IdentifierDecl	x = ( width ( ) - ( codeImage . width ( ) * scaleFactor ) ) / ( 2.0 * scaleFactor )
>343	AssignmentExpr	x = ( width ( ) - ( codeImage . width ( ) * scaleFactor ) ) / ( 2.0 * scaleFactor )
>344	MultiplicativeExpression	( width ( ) - ( codeImage . width ( ) * scaleFactor ) ) / ( 2.0 * scaleFactor )
>345	MultiplicativeExpression	2.0 * scaleFactor
>346	Identifier	scaleFactor
>347	PrimaryExpression	2.0
>348	AdditiveExpression	width ( ) - ( codeImage . width ( ) * scaleFactor )
>349	MultiplicativeExpression	codeImage . width ( ) * scaleFactor
>350	Identifier	scaleFactor
>351	CallExpression	codeImage . width ( )
>352	ArgumentList	 
>353	Callee	codeImage . width
>354	MemberAccess	codeImage . width
>355	Identifier	width
>356	Identifier	codeImage
>357	CallExpression	width ( )
>358	ArgumentList	 
>359	Callee	width
>360	Identifier	width
>361	Identifier	x
>362	Identifier	x
>363	IdentifierDeclType	qreal
>364	ExpressionStatement	 
>365	CallExpression	painter . scale ( scaleFactor , scaleFactor )
>366	ArgumentList	scaleFactor
>367	Argument	scaleFactor
>368	Identifier	scaleFactor
>369	Argument	scaleFactor
>370	Identifier	scaleFactor
>371	Callee	painter . scale
>372	MemberAccess	painter . scale
>373	Identifier	scale
>374	Identifier	painter
>375	IdentifierDeclStatement	 
>376	IdentifierDecl	scaleFactor = qMin ( scaleFactorX , scaleFactorY )
>377	AssignmentExpr	scaleFactor = qMin ( scaleFactorX , scaleFactorY )
>378	CallExpression	qMin ( scaleFactorX , scaleFactorY )
>379	ArgumentList	scaleFactorX
>380	Argument	scaleFactorY
>381	Identifier	scaleFactorY
>382	Argument	scaleFactorX
>383	Identifier	scaleFactorX
>384	Callee	qMin
>385	Identifier	qMin
>386	Identifier	scaleFactor
>387	Identifier	scaleFactor
>388	IdentifierDeclType	qreal
>389	IdentifierDeclStatement	 
>390	IdentifierDecl	scaleFactorY = height ( ) / ( qreal ) codeImage . height ( )
>391	AssignmentExpr	scaleFactorY = height ( ) / ( qreal ) codeImage . height ( )
>392	MultiplicativeExpression	height ( ) / ( qreal ) codeImage . height ( )
>393	CastExpression	( qreal ) codeImage . height ( )
>394	CallExpression	codeImage . height ( )
>395	ArgumentList	 
>396	Callee	codeImage . height
>397	MemberAccess	codeImage . height
>398	Identifier	height
>399	Identifier	codeImage
>400	CastTarget	qreal
>401	CallExpression	height ( )
>402	ArgumentList	 
>403	Callee	height
>404	Identifier	height
>405	Identifier	scaleFactorY
>406	Identifier	scaleFactorY
>407	IdentifierDeclType	qreal
>408	IdentifierDeclStatement	 
>409	IdentifierDecl	scaleFactorX = width ( ) / ( qreal ) codeImage . width ( )
>410	AssignmentExpr	scaleFactorX = width ( ) / ( qreal ) codeImage . width ( )
>411	MultiplicativeExpression	width ( ) / ( qreal ) codeImage . width ( )
>412	CastExpression	( qreal ) codeImage . width ( )
>413	CallExpression	codeImage . width ( )
>414	ArgumentList	 
>415	Callee	codeImage . width
>416	MemberAccess	codeImage . width
>417	Identifier	width
>418	Identifier	codeImage
>419	CastTarget	qreal
>420	CallExpression	width ( )
>421	ArgumentList	 
>422	Callee	width
>423	Identifier	width
>424	Identifier	scaleFactorX
>425	Identifier	scaleFactorX
>426	IdentifierDeclType	qreal
>427	IdentifierDeclStatement	 
>428	IdentifierDecl	painter ( this )
>429	Identifier	this
>430	Identifier	painter
>431	IdentifierDeclType	QPainter
>432	Statement	 
>433	Statement	 
>434	Statement	 
>435	Statement	 
<3=8,4
<4=5
<5=7,6
<8=9
<9=10
<10=14,11
<11=12
<12=13
<14=15
<20=26,25,21
<21=22
<22=24,23
<26=235,191,176,167,160,151,142,133,124,58,51,44,32,27
<27=28
<28=30,29
<30=31
<32=33
<33=42,34
<34=35
<35=36
<36=38,37
<38=39
<39=41,40
<42=43
<44=45
<45=49,46
<46=47
<47=48
<49=50
<51=52
<52=54,53
<54=55
<55=57,56
<58=116,112,109,59
<59=60
<60=101,97,94,61
<61=83,62
<62=75,63
<63=64
<64=65
<65=71,66
<66=69,67
<67=68
<69=70
<71=72
<72=74,73
<75=76
<76=78,77
<78=80,79
<80=82,81
<83=84
<84=93,92,85
<85=91,86
<86=88,87
<88=90,89
<94=96,95
<97=98
<98=100,99
<101=102
<102=103
<103=108,107,104
<104=106,105
<109=111,110
<112=113
<113=115,114
<116=117
<117=118
<118=123,122,119
<119=121,120
<124=129,125
<125=126
<126=128,127
<129=130
<130=132,131
<133=134
<134=141,140,135
<135=139,136
<136=138,137
<142=143
<143=147,144
<144=145
<145=146
<147=148
<148=150,149
<151=152
<152=156,153
<153=154
<154=155
<156=157
<157=159,158
<160=161
<161=166,165,162
<162=164,163
<167=168
<168=172,169
<169=170
<170=171
<172=173
<173=175,174
<176=177
<177=190,178
<178=188,179
<179=184,180
<180=181
<181=183,182
<184=185
<185=187,186
<188=189
<191=231,192
<192=220,211,199,194,193
<194=195
<195=197,196
<197=198
<199=200
<200=209,201
<201=202
<202=203
<203=205,204
<205=206
<206=208,207
<209=210
<211=212
<212=216,213
<213=214
<214=215
<216=217
<217=219,218
<220=221
<221=230,222
<222=228,223
<223=226,224
<224=225
<226=227
<228=229
<231=232
<232=234,233
<235=236
<236=264,263,237
<237=262,238
<238=260,239
<239=248,246,244,242,240
<240=241
<242=243
<244=245
<246=247
<248=249
<249=251,250
<251=252
<252=254,253
<254=256,255
<256=257
<257=259,258
<260=261
<293=299,298,294
<294=295
<295=297,296
<299=435,434,433,432,427,408,389,375,364,341,318,300
<300=301
<301=314,302
<302=305,303
<303=304
<305=306
<306=312,307
<307=310,308
<308=309
<310=311
<312=313
<314=315
<315=317,316
<318=319
<319=340,339,320
<320=338,321
<321=325,322
<322=324,323
<325=334,326
<326=328,327
<328=330,329
<330=331
<331=333,332
<334=336,335
<336=337
<341=342
<342=363,362,343
<343=361,344
<344=348,345
<345=347,346
<348=357,349
<349=351,350
<351=353,352
<353=354
<354=356,355
<357=359,358
<359=360
<364=365
<365=371,366
<366=369,367
<367=368
<369=370
<371=372
<372=374,373
<375=376
<376=388,387,377
<377=386,378
<378=384,379
<379=382,380
<380=381
<382=383
<384=385
<389=390
<390=407,406,391
<391=405,392
<392=401,393
<393=400,394
<394=396,395
<396=397
<397=399,398
<401=403,402
<403=404
<408=409
<409=426,425,410
<410=424,411
<411=420,412
<412=419,413
<413=415,414
<415=416
<416=418,417
<420=422,421
<422=423
<427=428
<428=431,430,429
