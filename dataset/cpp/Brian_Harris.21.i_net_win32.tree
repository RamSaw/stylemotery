>11	FunctionDef	IsValidSocket (int socketDescriptor)
>12	ParameterList	int socketDescriptor
>13	Parameter	 
>14	Identifier	socketDescriptor
>15	ParameterType	int
>16	ReturnType	bool
>17	CompoundStatement	 
>18	ReturnStatement	 
>19	Identifier	false
>25	FunctionDef	GetLastSocketError ()
>26	ParameterList	 
>27	ReturnType	int
>28	CompoundStatement	 
>29	ReturnStatement	 
>30	PrimaryExpression	0
>36	FunctionDef	GetServerIP ()
>37	ParameterList	 
>38	ReturnType	unsigned long
>39	CompoundStatement	 
>40	ExpressionStatement	 
>41	MemberAccess	sin_addr . s_addr
>42	Identifier	s_addr
>43	Identifier	sin_addr
>44	Statement	 
>45	Statement	 
>46	Statement	 
>47	Statement	 
>48	Statement	 
>49	Statement	 
>50	Statement	 
>51	Statement	 
>52	Statement	 
>53	Statement	 
>54	Statement	 
>55	Statement	 
>56	Statement	 
>57	Statement	 
>62	FunctionDef	UDPsocket ()
>63	ParameterList	 
>64	ReturnType	int
>65	CompoundStatement	 
>66	ReturnStatement	 
>67	Identifier	s
>68	IfStatement	if ( ! IsValidSocket ( s ) )
>69	CompoundStatement	 
>70	ExpressionStatement	 
>71	CallExpression	I_Error ( \"can't create socket, error %d\" , err )
>72	ArgumentList	\"can't create socket, error %d\"
>73	Argument	err
>74	Identifier	err
>75	Argument	\"can't create socket, error %d\"
>76	PrimaryExpression	\"can't create socket, error %d\"
>77	Callee	I_Error
>78	Identifier	I_Error
>79	IdentifierDeclStatement	 
>80	IdentifierDecl	err = GetLastSocketError ( )
>81	AssignmentExpr	err = GetLastSocketError ( )
>82	CallExpression	GetLastSocketError ( )
>83	ArgumentList	 
>84	Callee	GetLastSocketError
>85	Identifier	GetLastSocketError
>86	Identifier	err
>87	Identifier	err
>88	IdentifierDeclType	int
>89	Condition	 
>90	UnaryOp	! IsValidSocket ( s )
>91	CallExpression	IsValidSocket ( s )
>92	ArgumentList	s
>93	Argument	s
>94	Identifier	s
>95	Callee	IsValidSocket
>96	Identifier	IsValidSocket
>97	UnaryOperator	!
>98	ExpressionStatement	 
>99	AssignmentExpr	s = socket ( AF_INET , SOCK_DGRAM , IPPROTO_UDP )
>100	CallExpression	socket ( AF_INET , SOCK_DGRAM , IPPROTO_UDP )
>101	ArgumentList	AF_INET
>102	Argument	IPPROTO_UDP
>103	Identifier	IPPROTO_UDP
>104	Argument	SOCK_DGRAM
>105	Identifier	SOCK_DGRAM
>106	Argument	AF_INET
>107	Identifier	AF_INET
>108	Callee	socket
>109	Identifier	socket
>110	Identifier	s
>111	IdentifierDeclStatement	 
>112	IdentifierDecl	s
>113	Identifier	s
>114	IdentifierDeclType	int
>126	FunctionDef	BindToLocalPort (int s , int port)
>127	ParameterList	int s , int port
>128	Parameter	 
>129	Identifier	port
>130	ParameterType	int
>131	Parameter	 
>132	Identifier	s
>133	ParameterType	int
>134	ReturnType	void
>135	CompoundStatement	 
>141	FunctionDef	PacketSend ()
>142	ParameterList	 
>143	ReturnType	void
>144	CompoundStatement	 
>148	FunctionDef	PacketGet ()
>149	ParameterList	 
>150	ReturnType	void
>151	CompoundStatement	 
>155	FunctionDef	I_TrySetupNetwork ()
>156	ParameterList	 
>157	ReturnType	static int
>158	CompoundStatement	 
>159	ReturnStatement	 
>160	PrimaryExpression	1
>164	FunctionDef	I_InitNetwork ()
>165	ParameterList	 
>166	ReturnType	void
>167	CompoundStatement	 
>168	CompoundStatement	 
>169	ExpressionStatement	 
>170	AssignmentExpr	g -> doomcom . ticdup = 9
>171	PrimaryExpression	9
>172	MemberAccess	g -> doomcom . ticdup
>173	Identifier	ticdup
>174	PtrMemberAccess	g -> doomcom
>175	Identifier	doomcom
>176	Identifier	g
>177	Statement	 
>178	Statement	 
>179	Statement	 
>180	Statement	 
>181	Statement	 
>182	Statement	 
>183	Statement	 
>184	Statement	 
>185	Statement	 
>186	Statement	 
>187	Statement	 
>188	Statement	 
>189	ExpressionStatement	 
>190	AssignmentExpr	g -> doomcom . ticdup = 1
>191	PrimaryExpression	1
>192	MemberAccess	g -> doomcom . ticdup
>193	Identifier	ticdup
>194	PtrMemberAccess	g -> doomcom
>195	Identifier	doomcom
>196	Identifier	g
>197	Statement	 
>198	Statement	 
>199	Statement	 
>200	Statement	 
>201	Statement	 
>202	Statement	 
>203	Statement	 
>204	Statement	 
>205	Statement	 
>206	Statement	 
>207	Statement	 
>208	Statement	 
>209	ExpressionStatement	 
>210	AdditiveExpression	g -> myargv [ i + 1 ] [ 0 ] - '0'
>211	PrimaryExpression	'0'
>212	ArrayIndexing	g -> myargv [ i + 1 ] [ 0 ]
>213	PrimaryExpression	0
>214	ArrayIndexing	g -> myargv [ i + 1 ]
>215	AdditiveExpression	i + 1
>216	PrimaryExpression	1
>217	Identifier	i
>218	PtrMemberAccess	g -> myargv
>219	Identifier	myargv
>220	Identifier	g
>221	Statement	 
>222	Statement	 
>223	Statement	 
>224	Statement	 
>225	Statement	 
>226	Statement	 
>227	Statement	 
>228	Statement	 
>229	Statement	 
>230	Statement	 
>231	Statement	 
>232	Statement	 
>233	Statement	 
>234	Statement	 
>235	Statement	 
>236	Statement	 
>237	Statement	 
>238	Statement	 
>239	Statement	 
>240	Statement	 
>241	Statement	 
>242	ExpressionStatement	 
>243	AssignmentExpr	i = M_CheckParm ( \"-dup\" )
>244	CallExpression	M_CheckParm ( \"-dup\" )
>245	ArgumentList	\"-dup\"
>246	Argument	\"-dup\"
>247	PrimaryExpression	\"-dup\"
>248	Callee	M_CheckParm
>249	Identifier	M_CheckParm
>250	Identifier	i
>251	ExpressionStatement	 
>252	Statement	 
>253	Statement	 
>254	Statement	 
>255	Statement	 
>256	Statement	 
>257	Statement	 
>258	Statement	 
>259	Statement	 
>260	Statement	 
>261	Statement	 
>262	Statement	 
>263	Statement	 
>264	Statement	 
>265	Statement	 
>266	Statement	 
>267	Statement	 
>268	Statement	 
>269	Statement	 
>270	IdentifierDeclStatement	 
>271	IdentifierDecl	p
>272	Identifier	p
>273	IdentifierDeclType	int
>274	IdentifierDeclStatement	 
>275	IdentifierDecl	i
>276	Identifier	i
>277	IdentifierDeclType	int
>292	FunctionDef	I_ShutdownNetwork ()
>293	ParameterList	 
>294	ReturnType	void
>295	CompoundStatement	 
>299	FunctionDef	I_NetCmd ()
>300	ParameterList	 
>301	ReturnType	void
>302	CompoundStatement	 
>303	CompoundStatement	 
>304	ExpressionStatement	 
>305	CallExpression	netsend ( )
>306	ArgumentList	 
>307	Callee	netsend
>308	Identifier	netsend
>309	Statement	 
>310	Statement	 
>311	Statement	 
>312	Statement	 
>313	Statement	 
>314	Statement	 
>315	Statement	 
>316	Statement	 
>317	Statement	 
>318	Statement	 
>319	Statement	 
<11=17,16,12
<12=13
<13=15,14
<17=18
<18=19
<25=28,27,26
<28=29
<29=30
<36=39,38,37
<39=57,56,55,54,53,52,51,50,49,48,47,46,45,44,40
<40=41
<41=43,42
<62=65,64,63
<65=111,98,68,66
<66=67
<68=89,69
<69=79,70
<70=71
<71=77,72
<72=75,73
<73=74
<75=76
<77=78
<79=80
<80=88,87,81
<81=86,82
<82=84,83
<84=85
<89=90
<90=97,91
<91=95,92
<92=93
<93=94
<95=96
<98=99
<99=110,100
<100=108,101
<101=106,104,102
<102=103
<104=105
<106=107
<108=109
<111=112
<112=114,113
<126=135,134,127
<127=131,128
<128=130,129
<131=133,132
<141=144,143,142
<148=151,150,149
<155=158,157,156
<158=159
<159=160
<164=167,166,165
<167=274,270,269,268,267,266,265,264,263,262,261,260,259,258,257,256,255,254,253,252,251,242,241,240,239,238,237,236,235,234,233,232,231,230,229,168
<168=228,227,226,225,224,223,222,221,209,208,207,206,205,204,203,202,201,200,199,198,197,189,188,187,186,185,184,183,182,181,180,179,178,177,169
<169=170
<170=172,171
<172=174,173
<174=176,175
<189=190
<190=192,191
<192=194,193
<194=196,195
<209=210
<210=212,211
<212=214,213
<214=218,215
<215=217,216
<218=220,219
<242=243
<243=250,244
<244=248,245
<245=246
<246=247
<248=249
<270=271
<271=273,272
<274=275
<275=277,276
<292=295,294,293
<299=302,301,300
<302=319,318,317,316,315,314,313,312,311,310,309,303
<303=304
<304=305
<305=307,306
<307=308
