>3	FunctionDef	load (std 
>4	ParameterList	std 
>5	Parameter	 
>6	Identifier	depth_file
>7	ParameterType	std 
>8	Parameter	 
>9	Identifier	rgb_file
>10	ParameterType	std 
>11	ReturnType	dvo 
>12	CompoundStatement	 
>13	ReturnStatement	 
>14	Identifier	result
>15	IfStatement	if ( rgb_available )
>16	ExpressionStatement	 
>17	CallExpression	rgb . convertTo ( result -> level ( 0 ) . rgb , CV_32FC3 )
>18	ArgumentList	result -> level ( 0 ) . rgb
>19	Argument	CV_32FC3
>20	Identifier	CV_32FC3
>21	Argument	result -> level ( 0 ) . rgb
>22	MemberAccess	result -> level ( 0 ) . rgb
>23	Identifier	rgb
>24	CallExpression	result -> level ( 0 )
>25	ArgumentList	0
>26	Argument	0
>27	PrimaryExpression	0
>28	Callee	result -> level
>29	PtrMemberAccess	result -> level
>30	Identifier	level
>31	Identifier	result
>32	Callee	rgb . convertTo
>33	MemberAccess	rgb . convertTo
>34	Identifier	convertTo
>35	Identifier	rgb
>36	Condition	 
>37	Identifier	rgb_available
>38	IdentifierDeclStatement	 
>39	IdentifierDecl	result ( new dvo 
>40	Expression	grey_s16 , depth_float
>41	Identifier	depth_float
>42	Identifier	grey_s16
>43	Identifier	result
>44	IdentifierDeclType	dvo 
>45	IfStatement	if ( depth . type ( ) != CV_32FC1 )
>46	ElseStatement	else
>47	CompoundStatement	 
>48	ExpressionStatement	 
>49	AssignmentExpr	depth_float = depth
>50	Identifier	depth
>51	Identifier	depth_float
>52	CompoundStatement	 
>53	ExpressionStatement	 
>54	CallExpression	dvo 
>55	ArgumentList	depth
>56	Argument	1.035f / 5000.0f
>57	MultiplicativeExpression	1.035f / 5000.0f
>58	PrimaryExpression	5000.0f
>59	PrimaryExpression	1.035f
>60	Argument	depth_float
>61	Identifier	depth_float
>62	Argument	depth
>63	Identifier	depth
>64	Callee	dvo 
>65	Identifier	dvo 
>66	Condition	 
>67	EqualityExpression	depth . type ( ) != CV_32FC1
>68	Identifier	CV_32FC1
>69	CallExpression	depth . type ( )
>70	ArgumentList	 
>71	Callee	depth . type
>72	MemberAccess	depth . type
>73	Identifier	type
>74	Identifier	depth
>75	IfStatement	if ( rgb . type ( ) != CV_32FC1 )
>76	ElseStatement	else
>77	CompoundStatement	 
>78	ExpressionStatement	 
>79	AssignmentExpr	grey_s16 = rgb
>80	Identifier	rgb
>81	Identifier	grey_s16
>82	CompoundStatement	 
>83	ExpressionStatement	 
>84	CallExpression	grey . convertTo ( grey_s16 , CV_32F )
>85	ArgumentList	grey_s16
>86	Argument	CV_32F
>87	Identifier	CV_32F
>88	Argument	grey_s16
>89	Identifier	grey_s16
>90	Callee	grey . convertTo
>91	MemberAccess	grey . convertTo
>92	Identifier	convertTo
>93	Identifier	grey
>94	IfStatement	if ( rgb . type ( ) == CV_8UC3 )
>95	ElseStatement	else
>96	CompoundStatement	 
>97	ExpressionStatement	 
>98	AssignmentExpr	grey = rgb
>99	Identifier	rgb
>100	Identifier	grey
>101	CompoundStatement	 
>102	ExpressionStatement	 
>103	AssignmentExpr	rgb_available = true
>104	Identifier	true
>105	Identifier	rgb_available
>106	ExpressionStatement	 
>107	CallExpression	cv 
>108	ArgumentList	rgb
>109	Argument	CV_BGR2GRAY
>110	Identifier	CV_BGR2GRAY
>111	Argument	grey
>112	Identifier	grey
>113	Argument	rgb
>114	Identifier	rgb
>115	Callee	cv 
>116	Identifier	cv 
>117	Condition	 
>118	EqualityExpression	rgb . type ( ) == CV_8UC3
>119	Identifier	CV_8UC3
>120	CallExpression	rgb . type ( )
>121	ArgumentList	 
>122	Callee	rgb . type
>123	MemberAccess	rgb . type
>124	Identifier	type
>125	Identifier	rgb
>126	Condition	 
>127	EqualityExpression	rgb . type ( ) != CV_32FC1
>128	Identifier	CV_32FC1
>129	CallExpression	rgb . type ( )
>130	ArgumentList	 
>131	Callee	rgb . type
>132	MemberAccess	rgb . type
>133	Identifier	type
>134	Identifier	rgb
>135	ExpressionStatement	 
>136	AssignmentExpr	depth = cv 
>137	CallExpression	cv 
>138	ArgumentList	depth_file
>139	Argument	- 1
>140	UnaryOp	- 1
>141	PrimaryExpression	1
>142	UnaryOperator	-
>143	Argument	depth_file
>144	Identifier	depth_file
>145	Callee	cv 
>146	Identifier	cv 
>147	Identifier	depth
>148	ExpressionStatement	 
>149	AssignmentExpr	rgb = cv 
>150	CallExpression	cv 
>151	ArgumentList	rgb_file
>152	Argument	1
>153	PrimaryExpression	1
>154	Argument	rgb_file
>155	Identifier	rgb_file
>156	Callee	cv 
>157	Identifier	cv 
>158	Identifier	rgb
>159	IdentifierDeclStatement	 
>160	IdentifierDecl	rgb_available = false
>161	AssignmentExpr	rgb_available = false
>162	Identifier	false
>163	Identifier	false
>164	Identifier	rgb_available
>165	IdentifierDeclType	bool
>166	IdentifierDeclStatement	 
>167	IdentifierDecl	depth_float
>168	Identifier	depth_float
>169	IdentifierDeclType	cv 
>170	IdentifierDecl	depth_mono
>171	Identifier	depth_mono
>172	IdentifierDeclType	cv 
>173	IdentifierDecl	depth_mask
>174	Identifier	depth_mask
>175	IdentifierDeclType	cv 
>176	IdentifierDecl	depth_inpainted
>177	Identifier	depth_inpainted
>178	IdentifierDeclType	cv 
>179	IdentifierDecl	depth
>180	Identifier	depth
>181	IdentifierDeclType	cv 
>182	IdentifierDecl	grey_s16
>183	Identifier	grey_s16
>184	IdentifierDeclType	cv 
>185	IdentifierDecl	grey
>186	Identifier	grey
>187	IdentifierDeclType	cv 
>188	IdentifierDecl	rgb
>189	Identifier	rgb
>190	IdentifierDeclType	cv 
>267	FunctionDef	BenchmarkNode 
>268	ParameterList	 
>269	ReturnType	bool
>270	CompoundStatement	 
>271	ReturnStatement	 
>272	OrExpression	EstimateTrajectory || ShowEstimate
>273	Identifier	ShowEstimate
>274	Identifier	EstimateTrajectory
>280	FunctionDef	BenchmarkNode 
>281	ParameterList	 
>282	ReturnType	bool
>283	CompoundStatement	 
>284	ReturnStatement	 
>285	OrExpression	ShowGroundtruth || ShowEstimate || RenderVideo
>286	OrExpression	ShowEstimate || RenderVideo
>287	Identifier	RenderVideo
>288	Identifier	ShowEstimate
>289	Identifier	ShowGroundtruth
>296	FunctionDef	BenchmarkNode 
>297	ParameterList	ros 
>298	Parameter	 
>299	Identifier	nh_private
>300	ParameterType	ros 
>301	Parameter	 
>302	Identifier	nh
>303	ParameterType	ros 
>304	CompoundStatement	 
>310	FunctionDef	BenchmarkNode 
>311	ParameterList	 
>312	ReturnType	bool
>313	CompoundStatement	 
>314	ReturnStatement	 
>315	Identifier	true
>316	ExpressionStatement	 
>317	CallExpression	nh_private_ . param ( \"show_estimate\" , cfg_ . ShowEstimate , false )
>318	ArgumentList	\"show_estimate\"
>319	Argument	false
>320	Identifier	false
>321	Argument	cfg_ . ShowEstimate
>322	MemberAccess	cfg_ . ShowEstimate
>323	Identifier	ShowEstimate
>324	Identifier	cfg_
>325	Argument	\"show_estimate\"
>326	PrimaryExpression	\"show_estimate\"
>327	Callee	nh_private_ . param
>328	MemberAccess	nh_private_ . param
>329	Identifier	param
>330	Identifier	nh_private_
>331	IfStatement	if ( cfg_ . ShowGroundtruth )
>332	CompoundStatement	 
>333	IfStatement	if ( nh_private_ . getParam ( \"groundtruth_file\" , cfg_ . GroundtruthFile ) )
>334	ElseStatement	else
>335	CompoundStatement	 
>336	ReturnStatement	 
>337	Identifier	false
>338	ExpressionStatement	 
>339	ShiftExpression	std 
>340	ShiftExpression	\"Missing 'groundtruth_file' parameter!\" << std 
>341	Identifier	std 
>342	PrimaryExpression	\"Missing 'groundtruth_file' parameter!\"
>343	Identifier	std 
>344	CompoundStatement	 
>345	IfStatement	if ( ! groundtruth_reader_ -> next ( ) )
>346	CompoundStatement	 
>347	ReturnStatement	 
>348	Identifier	false
>349	ExpressionStatement	 
>350	ShiftExpression	std 
>351	ShiftExpression	\"Failed to open '\" << cfg_ . GroundtruthFile << \"'!\" << std 
>352	ShiftExpression	cfg_ . GroundtruthFile << \"'!\" << std 
>353	ShiftExpression	\"'!\" << std 
>354	Identifier	std 
>355	PrimaryExpression	\"'!\"
>356	MemberAccess	cfg_ . GroundtruthFile
>357	Identifier	GroundtruthFile
>358	Identifier	cfg_
>359	PrimaryExpression	\"Failed to open '\"
>360	Identifier	std 
>361	Condition	 
>362	UnaryOp	! groundtruth_reader_ -> next ( )
>363	CallExpression	groundtruth_reader_ -> next ( )
>364	ArgumentList	 
>365	Callee	groundtruth_reader_ -> next
>366	PtrMemberAccess	groundtruth_reader_ -> next
>367	Identifier	next
>368	Identifier	groundtruth_reader_
>369	UnaryOperator	!
>370	ExpressionStatement	 
>371	CallExpression	groundtruth_reader_ -> skipComments ( )
>372	ArgumentList	 
>373	Callee	groundtruth_reader_ -> skipComments
>374	PtrMemberAccess	groundtruth_reader_ -> skipComments
>375	Identifier	skipComments
>376	Identifier	groundtruth_reader_
>377	ExpressionStatement	 
>378	AssignmentExpr	groundtruth_reader_ = new dvo_benchmark 
>379	MemberAccess	cfg_ . GroundtruthFile
>380	Identifier	GroundtruthFile
>381	Identifier	cfg_
>382	Identifier	groundtruth_reader_
>383	Condition	 
>384	CallExpression	nh_private_ . getParam ( \"groundtruth_file\" , cfg_ . GroundtruthFile )
>385	ArgumentList	\"groundtruth_file\"
>386	Argument	cfg_ . GroundtruthFile
>387	MemberAccess	cfg_ . GroundtruthFile
>388	Identifier	GroundtruthFile
>389	Identifier	cfg_
>390	Argument	\"groundtruth_file\"
>391	PrimaryExpression	\"groundtruth_file\"
>392	Callee	nh_private_ . getParam
>393	MemberAccess	nh_private_ . getParam
>394	Identifier	getParam
>395	Identifier	nh_private_
>396	Condition	 
>397	MemberAccess	cfg_ . ShowGroundtruth
>398	Identifier	ShowGroundtruth
>399	Identifier	cfg_
>400	ExpressionStatement	 
>401	CallExpression	nh_private_ . param ( \"show_groundtruth\" , cfg_ . ShowGroundtruth , false )
>402	ArgumentList	\"show_groundtruth\"
>403	Argument	false
>404	Identifier	false
>405	Argument	cfg_ . ShowGroundtruth
>406	MemberAccess	cfg_ . ShowGroundtruth
>407	Identifier	ShowGroundtruth
>408	Identifier	cfg_
>409	Argument	\"show_groundtruth\"
>410	PrimaryExpression	\"show_groundtruth\"
>411	Callee	nh_private_ . param
>412	MemberAccess	nh_private_ . param
>413	Identifier	param
>414	Identifier	nh_private_
>415	ExpressionStatement	 
>416	CallExpression	nh_private_ . param ( \"camera_file\" , cfg_ . CameraFile , std 
>417	ArgumentList	\"camera_file\"
>418	Argument	std 
>419	CallExpression	std 
>420	ArgumentList	\"\"
>421	Argument	\"\"
>422	PrimaryExpression	\"\"
>423	Callee	std 
>424	Identifier	std 
>425	Argument	cfg_ . CameraFile
>426	MemberAccess	cfg_ . CameraFile
>427	Identifier	CameraFile
>428	Identifier	cfg_
>429	Argument	\"camera_file\"
>430	PrimaryExpression	\"camera_file\"
>431	Callee	nh_private_ . param
>432	MemberAccess	nh_private_ . param
>433	Identifier	param
>434	Identifier	nh_private_
>435	IfStatement	if ( cfg_ . RenderVideo )
>436	CompoundStatement	 
>437	IfStatement	if ( ! nh_private_ . getParam ( \"video_folder\" , cfg_ . VideoFolder ) || cfg_ . VideoFolder . empty ( ) )
>438	CompoundStatement	 
>439	ReturnStatement	 
>440	Identifier	false
>441	ExpressionStatement	 
>442	ShiftExpression	std 
>443	ShiftExpression	\"Missing 'video_folder' parameter!\" << std 
>444	Identifier	std 
>445	PrimaryExpression	\"Missing 'video_folder' parameter!\"
>446	Identifier	std 
>447	Condition	 
>448	OrExpression	! nh_private_ . getParam ( \"video_folder\" , cfg_ . VideoFolder ) || cfg_ . VideoFolder . empty ( )
>449	CallExpression	cfg_ . VideoFolder . empty ( )
>450	ArgumentList	 
>451	Callee	cfg_ . VideoFolder . empty
>452	MemberAccess	cfg_ . VideoFolder . empty
>453	Identifier	empty
>454	MemberAccess	cfg_ . VideoFolder
>455	Identifier	VideoFolder
>456	Identifier	cfg_
>457	UnaryOp	! nh_private_ . getParam ( \"video_folder\" , cfg_ . VideoFolder )
>458	CallExpression	nh_private_ . getParam ( \"video_folder\" , cfg_ . VideoFolder )
>459	ArgumentList	\"video_folder\"
>460	Argument	cfg_ . VideoFolder
>461	MemberAccess	cfg_ . VideoFolder
>462	Identifier	VideoFolder
>463	Identifier	cfg_
>464	Argument	\"video_folder\"
>465	PrimaryExpression	\"video_folder\"
>466	Callee	nh_private_ . getParam
>467	MemberAccess	nh_private_ . getParam
>468	Identifier	getParam
>469	Identifier	nh_private_
>470	UnaryOperator	!
>471	Condition	 
>472	MemberAccess	cfg_ . RenderVideo
>473	Identifier	RenderVideo
>474	Identifier	cfg_
>475	ExpressionStatement	 
>476	CallExpression	nh_private_ . param ( \"render_video\" , cfg_ . RenderVideo , false )
>477	ArgumentList	\"render_video\"
>478	Argument	false
>479	Identifier	false
>480	Argument	cfg_ . RenderVideo
>481	MemberAccess	cfg_ . RenderVideo
>482	Identifier	RenderVideo
>483	Identifier	cfg_
>484	Argument	\"render_video\"
>485	PrimaryExpression	\"render_video\"
>486	Callee	nh_private_ . param
>487	MemberAccess	nh_private_ . param
>488	Identifier	param
>489	Identifier	nh_private_
>490	IfStatement	if ( cfg_ . EstimateTrajectory )
>491	CompoundStatement	 
>492	IfStatement	if ( nh_private_ . getParam ( \"trajectory_file\" , cfg_ . TrajectoryFile ) && ! cfg_ . TrajectoryFile . empty ( ) )
>493	ElseStatement	else
>494	CompoundStatement	 
>495	ExpressionStatement	 
>496	AssignmentExpr	trajectory_out_ = & std 
>497	UnaryOp	& std 
>498	Identifier	std 
>499	UnaryOperator	&
>500	Identifier	trajectory_out_
>501	CompoundStatement	 
>502	IfStatement	if ( trajectory_out_ -> fail ( ) )
>503	CompoundStatement	 
>504	ReturnStatement	 
>505	Identifier	false
>506	ExpressionStatement	 
>507	ShiftExpression	std 
>508	ShiftExpression	\"Failed to open '\" << cfg_ . TrajectoryFile << \"'!\" << std 
>509	ShiftExpression	cfg_ . TrajectoryFile << \"'!\" << std 
>510	ShiftExpression	\"'!\" << std 
>511	Identifier	std 
>512	PrimaryExpression	\"'!\"
>513	MemberAccess	cfg_ . TrajectoryFile
>514	Identifier	TrajectoryFile
>515	Identifier	cfg_
>516	PrimaryExpression	\"Failed to open '\"
>517	Identifier	std 
>518	ExpressionStatement	 
>519	Identifier	trajectory_out_
>520	Statement	 
>521	Condition	 
>522	CallExpression	trajectory_out_ -> fail ( )
>523	ArgumentList	 
>524	Callee	trajectory_out_ -> fail
>525	PtrMemberAccess	trajectory_out_ -> fail
>526	Identifier	fail
>527	Identifier	trajectory_out_
>528	ExpressionStatement	 
>529	AssignmentExpr	trajectory_out_ = new std 
>530	CallExpression	cfg_ . TrajectoryFile . c_str ( )
>531	ArgumentList	 
>532	Callee	cfg_ . TrajectoryFile . c_str
>533	MemberAccess	cfg_ . TrajectoryFile . c_str
>534	Identifier	c_str
>535	MemberAccess	cfg_ . TrajectoryFile
>536	Identifier	TrajectoryFile
>537	Identifier	cfg_
>538	Identifier	trajectory_out_
>539	Condition	 
>540	AndExpression	nh_private_ . getParam ( \"trajectory_file\" , cfg_ . TrajectoryFile ) && ! cfg_ . TrajectoryFile . empty ( )
>541	UnaryOp	! cfg_ . TrajectoryFile . empty ( )
>542	CallExpression	cfg_ . TrajectoryFile . empty ( )
>543	ArgumentList	 
>544	Callee	cfg_ . TrajectoryFile . empty
>545	MemberAccess	cfg_ . TrajectoryFile . empty
>546	Identifier	empty
>547	MemberAccess	cfg_ . TrajectoryFile
>548	Identifier	TrajectoryFile
>549	Identifier	cfg_
>550	UnaryOperator	!
>551	CallExpression	nh_private_ . getParam ( \"trajectory_file\" , cfg_ . TrajectoryFile )
>552	ArgumentList	\"trajectory_file\"
>553	Argument	cfg_ . TrajectoryFile
>554	MemberAccess	cfg_ . TrajectoryFile
>555	Identifier	TrajectoryFile
>556	Identifier	cfg_
>557	Argument	\"trajectory_file\"
>558	PrimaryExpression	\"trajectory_file\"
>559	Callee	nh_private_ . getParam
>560	MemberAccess	nh_private_ . getParam
>561	Identifier	getParam
>562	Identifier	nh_private_
>563	Condition	 
>564	MemberAccess	cfg_ . EstimateTrajectory
>565	Identifier	EstimateTrajectory
>566	Identifier	cfg_
>567	ExpressionStatement	 
>568	CallExpression	nh_private_ . param ( \"estimate_trajectory\" , cfg_ . EstimateTrajectory , false )
>569	ArgumentList	\"estimate_trajectory\"
>570	Argument	false
>571	Identifier	false
>572	Argument	cfg_ . EstimateTrajectory
>573	MemberAccess	cfg_ . EstimateTrajectory
>574	Identifier	EstimateTrajectory
>575	Identifier	cfg_
>576	Argument	\"estimate_trajectory\"
>577	PrimaryExpression	\"estimate_trajectory\"
>578	Callee	nh_private_ . param
>579	MemberAccess	nh_private_ . param
>580	Identifier	param
>581	Identifier	nh_private_
>582	IfStatement	if ( nh_private_ . getParam ( \"rgbdpair_file\" , cfg_ . RgbdPairFile ) )
>583	ElseStatement	else
>584	CompoundStatement	 
>585	ReturnStatement	 
>586	Identifier	false
>587	ExpressionStatement	 
>588	ShiftExpression	std 
>589	ShiftExpression	\"Missing 'rgbdpair_file' parameter!\" << std 
>590	Identifier	std 
>591	PrimaryExpression	\"Missing 'rgbdpair_file' parameter!\"
>592	Identifier	std 
>593	CompoundStatement	 
>594	IfStatement	if ( ! rgbdpair_reader_ -> next ( ) )
>595	CompoundStatement	 
>596	ReturnStatement	 
>597	Identifier	false
>598	ExpressionStatement	 
>599	ShiftExpression	std 
>600	ShiftExpression	\"Failed to open '\" << cfg_ . RgbdPairFile << \"'!\" << std 
>601	ShiftExpression	cfg_ . RgbdPairFile << \"'!\" << std 
>602	ShiftExpression	\"'!\" << std 
>603	Identifier	std 
>604	PrimaryExpression	\"'!\"
>605	MemberAccess	cfg_ . RgbdPairFile
>606	Identifier	RgbdPairFile
>607	Identifier	cfg_
>608	PrimaryExpression	\"Failed to open '\"
>609	Identifier	std 
>610	Condition	 
>611	UnaryOp	! rgbdpair_reader_ -> next ( )
>612	CallExpression	rgbdpair_reader_ -> next ( )
>613	ArgumentList	 
>614	Callee	rgbdpair_reader_ -> next
>615	PtrMemberAccess	rgbdpair_reader_ -> next
>616	Identifier	next
>617	Identifier	rgbdpair_reader_
>618	UnaryOperator	!
>619	ExpressionStatement	 
>620	CallExpression	rgbdpair_reader_ -> skipComments ( )
>621	ArgumentList	 
>622	Callee	rgbdpair_reader_ -> skipComments
>623	PtrMemberAccess	rgbdpair_reader_ -> skipComments
>624	Identifier	skipComments
>625	Identifier	rgbdpair_reader_
>626	ExpressionStatement	 
>627	AssignmentExpr	rgbdpair_reader_ = new dvo_benchmark 
>628	MemberAccess	cfg_ . RgbdPairFile
>629	Identifier	RgbdPairFile
>630	Identifier	cfg_
>631	Identifier	rgbdpair_reader_
>632	Condition	 
>633	CallExpression	nh_private_ . getParam ( \"rgbdpair_file\" , cfg_ . RgbdPairFile )
>634	ArgumentList	\"rgbdpair_file\"
>635	Argument	cfg_ . RgbdPairFile
>636	MemberAccess	cfg_ . RgbdPairFile
>637	Identifier	RgbdPairFile
>638	Identifier	cfg_
>639	Argument	\"rgbdpair_file\"
>640	PrimaryExpression	\"rgbdpair_file\"
>641	Callee	nh_private_ . getParam
>642	MemberAccess	nh_private_ . getParam
>643	Identifier	getParam
>644	Identifier	nh_private_
>676	FunctionDef	BenchmarkNode 
>677	ParameterList	dvo 
>678	Parameter	 
>679	Identifier	s
>680	ParameterType	const dvo 
>681	Parameter	 
>682	Identifier	visualizer
>683	ParameterType	dvo 
>684	ReturnType	void
>685	CompoundStatement	 
>686	IfStatement	if ( cfg_ . VisualizationRequired ( ) )
>687	CompoundStatement	 
>688	WhileStatement	while ( s . value ( ) && ros 
>689	CompoundStatement	 
>690	IfStatement	if ( cfg_ . RenderVideo )
>691	ElseStatement	else
>692	CompoundStatement	 
>693	ExpressionStatement	 
>694	CallExpression	ros 
>695	ArgumentList	 
>696	Callee	ros 
>697	MemberAccess	ros 
>698	Identifier	sleep
>699	CallExpression	ros 
>700	ArgumentList	5
>701	Argument	5
>702	PrimaryExpression	5
>703	Callee	ros 
>704	Identifier	ros 
>705	CompoundStatement	 
>706	ExpressionStatement	 
>707	CallExpression	( ( dvo 
>708	ArgumentList	5
>709	Argument	5
>710	PrimaryExpression	5
>711	Callee	( ( dvo 
>712	PtrMemberAccess	( ( dvo 
>713	Identifier	render
>714	CastExpression	( dvo 
>715	Identifier	visualizer
>716	CastTarget	dvo 
>717	Condition	 
>718	MemberAccess	cfg_ . RenderVideo
>719	Identifier	RenderVideo
>720	Identifier	cfg_
>721	ExpressionStatement	 
>722	CallExpression	processInput ( visualizer )
>723	ArgumentList	visualizer
>724	Argument	visualizer
>725	Identifier	visualizer
>726	Callee	processInput
>727	Identifier	processInput
>728	Condition	 
>729	AndExpression	s . value ( ) && ros 
>730	CallExpression	ros 
>731	ArgumentList	 
>732	Callee	ros 
>733	Identifier	ros 
>734	CallExpression	s . value ( )
>735	ArgumentList	 
>736	Callee	s . value
>737	MemberAccess	s . value
>738	Identifier	value
>739	Identifier	s
>740	Condition	 
>741	CallExpression	cfg_ . VisualizationRequired ( )
>742	ArgumentList	 
>743	Callee	cfg_ . VisualizationRequired
>744	MemberAccess	cfg_ . VisualizationRequired
>745	Identifier	VisualizationRequired
>746	Identifier	cfg_
>758	FunctionDef	BenchmarkNode 
>759	ParameterList	dvo 
>760	Parameter	 
>761	Identifier	visualizer
>762	ParameterType	dvo 
>763	ReturnType	void
>764	CompoundStatement	 
>765	IfStatement	if ( cfg_ . VisualizationRequired ( ) )
>766	CompoundStatement	 
>767	IfStatement	if ( load_camera_pose_ . value ( ) )
>768	CompoundStatement	 
>769	ExpressionStatement	 
>770	CallExpression	load_camera_pose_ . toggle ( )
>771	ArgumentList	 
>772	Callee	load_camera_pose_ . toggle
>773	MemberAccess	load_camera_pose_ . toggle
>774	Identifier	toggle
>775	Identifier	load_camera_pose_
>776	IfStatement	if ( ! cfg_ . CameraFile . empty ( ) )
>777	ElseStatement	else
>778	CompoundStatement	 
>779	ExpressionStatement	 
>780	ShiftExpression	std 
>781	ShiftExpression	\"Can't load camera pose, set the 'camera_file' parameter!\" << std 
>782	Identifier	std 
>783	PrimaryExpression	\"Can't load camera pose, set the 'camera_file' parameter!\"
>784	Identifier	std 
>785	CompoundStatement	 
>786	ExpressionStatement	 
>787	Identifier	argv
>788	Statement	 
>789	Statement	 
>790	Statement	 
>791	ExpressionStatement	 
>792	CallExpression	( ( dvo 
>793	ArgumentList	 
>794	Callee	( ( dvo 
>795	MemberAccess	( ( dvo 
>796	Identifier	updateCamera
>797	CallExpression	( ( dvo 
>798	ArgumentList	 
>799	Callee	( ( dvo 
>800	PtrMemberAccess	( ( dvo 
>801	Identifier	visualizer
>802	CastExpression	( dvo 
>803	Identifier	visualizer
>804	CastTarget	dvo 
>805	ExpressionStatement	 
>806	CallExpression	( ( dvo 
>807	ArgumentList	3
>808	Argument	argv
>809	Identifier	argv
>810	Argument	3
>811	PrimaryExpression	3
>812	Callee	( ( dvo 
>813	MemberAccess	( ( dvo 
>814	Identifier	getCameraParameters
>815	CallExpression	( ( dvo 
>816	ArgumentList	 
>817	Callee	( ( dvo 
>818	PtrMemberAccess	( ( dvo 
>819	Identifier	visualizer
>820	CastExpression	( dvo 
>821	Identifier	visualizer
>822	CastTarget	dvo 
>823	ExpressionStatement	 
>824	AssignmentExpr	argv [ 2 ] = parameter_string
>825	Identifier	parameter_string
>826	ArrayIndexing	argv [ 2 ]
>827	PrimaryExpression	2
>828	Identifier	argv
>829	ExpressionStatement	 
>830	AssignmentExpr	argv [ 1 ] = option_string
>831	Identifier	option_string
>832	ArrayIndexing	argv [ 1 ]
>833	PrimaryExpression	1
>834	Identifier	argv
>835	ExpressionStatement	 
>836	Statement	 
>837	Statement	 
>838	Statement	 
>839	Statement	 
>840	Statement	 
>841	Statement	 
>842	Statement	 
>843	Statement	 
>844	Statement	 
>845	Statement	 
>846	Statement	 
>847	ExpressionStatement	 
>848	CallExpression	camera_pose_file . close ( )
>849	ArgumentList	 
>850	Callee	camera_pose_file . close
>851	MemberAccess	camera_pose_file . close
>852	Identifier	close
>853	Identifier	camera_pose_file
>854	ExpressionStatement	 
>855	CallExpression	camera_pose_file . getline ( parameter_string , 2048 , '\n' )
>856	ArgumentList	parameter_string
>857	Argument	'\n'
>858	PrimaryExpression	'\n'
>859	Argument	2048
>860	PrimaryExpression	2048
>861	Argument	parameter_string
>862	Identifier	parameter_string
>863	Callee	camera_pose_file . getline
>864	MemberAccess	camera_pose_file . getline
>865	Identifier	getline
>866	Identifier	camera_pose_file
>867	IdentifierDeclStatement	 
>868	IdentifierDecl	camera_pose_file ( cfg_ . CameraFile . c_str ( ) )
>869	CallExpression	cfg_ . CameraFile . c_str ( )
>870	ArgumentList	 
>871	Callee	cfg_ . CameraFile . c_str
>872	MemberAccess	cfg_ . CameraFile . c_str
>873	Identifier	c_str
>874	MemberAccess	cfg_ . CameraFile
>875	Identifier	CameraFile
>876	Identifier	cfg_
>877	Identifier	camera_pose_file
>878	IdentifierDeclType	std 
>879	IdentifierDeclStatement	 
>880	IdentifierDecl	parameter_string [ 2048 ]
>881	PrimaryExpression	2048
>882	Identifier	parameter_string
>883	IdentifierDeclType	char [ 2048 ]
>884	IdentifierDeclStatement	 
>885	IdentifierDecl	* option_string = \"-cam\"
>886	AssignmentExpr	* option_string = \"-cam\"
>887	PrimaryExpression	\"-cam\"
>888	Identifier	option_string
>889	Identifier	option_string
>890	IdentifierDeclType	char *
>891	ExpressionStatement	 
>892	ShiftExpression	std 
>893	ShiftExpression	\"loading camera pose from '\" << cfg_ . CameraFile << \"'\" << std 
>894	ShiftExpression	cfg_ . CameraFile << \"'\" << std 
>895	ShiftExpression	\"'\" << std 
>896	Identifier	std 
>897	PrimaryExpression	\"'\"
>898	MemberAccess	cfg_ . CameraFile
>899	Identifier	CameraFile
>900	Identifier	cfg_
>901	PrimaryExpression	\"loading camera pose from '\"
>902	Identifier	std 
>903	Condition	 
>904	UnaryOp	! cfg_ . CameraFile . empty ( )
>905	CallExpression	cfg_ . CameraFile . empty ( )
>906	ArgumentList	 
>907	Callee	cfg_ . CameraFile . empty
>908	MemberAccess	cfg_ . CameraFile . empty
>909	Identifier	empty
>910	MemberAccess	cfg_ . CameraFile
>911	Identifier	CameraFile
>912	Identifier	cfg_
>913	UnaryOperator	!
>914	Condition	 
>915	CallExpression	load_camera_pose_ . value ( )
>916	ArgumentList	 
>917	Callee	load_camera_pose_ . value
>918	MemberAccess	load_camera_pose_ . value
>919	Identifier	value
>920	Identifier	load_camera_pose_
>921	IfStatement	if ( dump_camera_pose_ . value ( ) )
>922	CompoundStatement	 
>923	ExpressionStatement	 
>924	CallExpression	dump_camera_pose_ . toggle ( )
>925	ArgumentList	 
>926	Callee	dump_camera_pose_ . toggle
>927	MemberAccess	dump_camera_pose_ . toggle
>928	Identifier	toggle
>929	Identifier	dump_camera_pose_
>930	IfStatement	if ( ! cfg_ . CameraFile . empty ( ) )
>931	ElseStatement	else
>932	CompoundStatement	 
>933	ExpressionStatement	 
>934	ShiftExpression	std 
>935	ShiftExpression	\"Can't save camera pose, set the 'camera_file' parameter!\" << std 
>936	Identifier	std 
>937	PrimaryExpression	\"Can't save camera pose, set the 'camera_file' parameter!\"
>938	Identifier	std 
>939	CompoundStatement	 
>940	ExpressionStatement	 
>941	CallExpression	camera_pose_file . close ( )
>942	ArgumentList	 
>943	Callee	camera_pose_file . close
>944	MemberAccess	camera_pose_file . close
>945	Identifier	close
>946	Identifier	camera_pose_file
>947	ExpressionStatement	 
>948	ShiftExpression	camera_pose_file << cams [ 0 ] . clip [ 0 ] << \",\" << cams [ 0 ] . clip [ 1 ] << \"/\" << cams [ 0 ] . \
>949	ShiftExpression	cams [ 0 ] . clip [ 0 ] << \",\" << cams [ 0 ] . clip [ 1 ] << \"/\" << cams [ 0 ] . focal [ 0 ] << \",\" << \
>950	ShiftExpression	\",\" << cams [ 0 ] . clip [ 1 ] << \"/\" << cams [ 0 ] . focal [ 0 ] << \",\" << cams [ 0 ] . focal [ 1 ] << \",\" << \
>951	ShiftExpression	cams [ 0 ] . clip [ 1 ] << \"/\" << cams [ 0 ] . focal [ 0 ] << \",\" << cams [ 0 ] . focal [ 1 ] << \",\" << \
>952	ShiftExpression	\"/\" << cams [ 0 ] . focal [ 0 ] << \",\" << cams [ 0 ] . focal [ 1 ] << \",\" << cams [ 0 ] . focal [ 2 ] << \"/\" << \
>953	ShiftExpression	cams [ 0 ] . focal [ 0 ] << \",\" << cams [ 0 ] . focal [ 1 ] << \",\" << cams [ 0 ] . focal [ 2 ] << \"/\" << \
>954	ShiftExpression	\",\" << cams [ 0 ] . focal [ 1 ] << \",\" << cams [ 0 ] . focal [ 2 ] << \"/\" << cams [ 0 ] . pos [ 0 ] << \",\" << \
>955	ShiftExpression	cams [ 0 ] . focal [ 1 ] << \",\" << cams [ 0 ] . focal [ 2 ] << \"/\" << cams [ 0 ] . pos [ 0 ] << \",\" << \
>956	ShiftExpression	\",\" << cams [ 0 ] . focal [ 2 ] << \"/\" << cams [ 0 ] . pos [ 0 ] << \",\" << cams [ 0 ] . pos [ 1 ] << \",\" << \
>957	ShiftExpression	cams [ 0 ] . focal [ 2 ] << \"/\" << cams [ 0 ] . pos [ 0 ] << \",\" << cams [ 0 ] . pos [ 1 ] << \",\" << \
>958	ShiftExpression	\"/\" << cams [ 0 ] . pos [ 0 ] << \",\" << cams [ 0 ] . pos [ 1 ] << \",\" << cams [ 0 ] . pos [ 2 ] << \"/\" << \
>959	ShiftExpression	cams [ 0 ] . pos [ 0 ] << \",\" << cams [ 0 ] . pos [ 1 ] << \",\" << cams [ 0 ] . pos [ 2 ] << \"/\" << cams [ \
>960	ShiftExpression	\",\" << cams [ 0 ] . pos [ 1 ] << \",\" << cams [ 0 ] . pos [ 2 ] << \"/\" << cams [ 0 ] . view [ 0 ] << \",\" << \
>961	ShiftExpression	cams [ 0 ] . pos [ 1 ] << \",\" << cams [ 0 ] . pos [ 2 ] << \"/\" << cams [ 0 ] . view [ 0 ] << \",\" << \
>962	ShiftExpression	\",\" << cams [ 0 ] . pos [ 2 ] << \"/\" << cams [ 0 ] . view [ 0 ] << \",\" << cams [ 0 ] . view [ 1 ] << \",\" << \
>963	ShiftExpression	cams [ 0 ] . pos [ 2 ] << \"/\" << cams [ 0 ] . view [ 0 ] << \",\" << cams [ 0 ] . view [ 1 ] << \",\" << \
>964	ShiftExpression	\"/\" << cams [ 0 ] . view [ 0 ] << \",\" << cams [ 0 ] . view [ 1 ] << \",\" << cams [ 0 ] . view [ 2 ] << \"/\" << \
>965	ShiftExpression	cams [ 0 ] . view [ 0 ] << \",\" << cams [ 0 ] . view [ 1 ] << \",\" << cams [ 0 ] . view [ 2 ] << \"/\" << \
>966	ShiftExpression	\",\" << cams [ 0 ] . view [ 1 ] << \",\" << cams [ 0 ] . view [ 2 ] << \"/\" << cams [ 0 ] . fovy << \"/\" << \
>967	ShiftExpression	cams [ 0 ] . view [ 1 ] << \",\" << cams [ 0 ] . view [ 2 ] << \"/\" << cams [ 0 ] . fovy << \"/\" << cams [ \
>968	ShiftExpression	\",\" << cams [ 0 ] . view [ 2 ] << \"/\" << cams [ 0 ] . fovy << \"/\" << cams [ 0 ] . window_size [ 0 ] << \",\" << \
>969	ShiftExpression	cams [ 0 ] . view [ 2 ] << \"/\" << cams [ 0 ] . fovy << \"/\" << cams [ 0 ] . window_size [ 0 ] << \",\" << \
>970	ShiftExpression	\"/\" << cams [ 0 ] . fovy << \"/\" << cams [ 0 ] . window_size [ 0 ] << \",\" << cams [ 0 ] . window_size [ \
>971	ShiftExpression	cams [ 0 ] . fovy << \"/\" << cams [ 0 ] . window_size [ 0 ] << \",\" << cams [ 0 ] . window_size [ 1 ] << \"/\" << \
>972	ShiftExpression	\"/\" << cams [ 0 ] . window_size [ 0 ] << \",\" << cams [ 0 ] . window_size [ 1 ] << \"/\" << cams [ 0 ] \
>973	ShiftExpression	cams [ 0 ] . window_size [ 0 ] << \",\" << cams [ 0 ] . window_size [ 1 ] << \"/\" << cams [ 0 ] . window_\
>974	ShiftExpression	\",\" << cams [ 0 ] . window_size [ 1 ] << \"/\" << cams [ 0 ] . window_pos [ 0 ] << \",\" << cams [ 0 ] . \
>975	ShiftExpression	cams [ 0 ] . window_size [ 1 ] << \"/\" << cams [ 0 ] . window_pos [ 0 ] << \",\" << cams [ 0 ] . window_\
>976	ShiftExpression	\"/\" << cams [ 0 ] . window_pos [ 0 ] << \",\" << cams [ 0 ] . window_pos [ 1 ]
>977	ShiftExpression	cams [ 0 ] . window_pos [ 0 ] << \",\" << cams [ 0 ] . window_pos [ 1 ]
>978	ShiftExpression	\",\" << cams [ 0 ] . window_pos [ 1 ]
>979	ArrayIndexing	cams [ 0 ] . window_pos [ 1 ]
>980	PrimaryExpression	1
>981	MemberAccess	cams [ 0 ] . window_pos
>982	Identifier	window_pos
>983	ArrayIndexing	cams [ 0 ]
>984	PrimaryExpression	0
>985	Identifier	cams
>986	PrimaryExpression	\",\"
>987	ArrayIndexing	cams [ 0 ] . window_pos [ 0 ]
>988	PrimaryExpression	0
>989	MemberAccess	cams [ 0 ] . window_pos
>990	Identifier	window_pos
>991	ArrayIndexing	cams [ 0 ]
>992	PrimaryExpression	0
>993	Identifier	cams
>994	PrimaryExpression	\"/\"
>995	ArrayIndexing	cams [ 0 ] . window_size [ 1 ]
>996	PrimaryExpression	1
>997	MemberAccess	cams [ 0 ] . window_size
>998	Identifier	window_size
>999	ArrayIndexing	cams [ 0 ]
>1000	PrimaryExpression	0
>1001	Identifier	cams
>1002	PrimaryExpression	\",\"
>1003	ArrayIndexing	cams [ 0 ] . window_size [ 0 ]
>1004	PrimaryExpression	0
>1005	MemberAccess	cams [ 0 ] . window_size
>1006	Identifier	window_size
>1007	ArrayIndexing	cams [ 0 ]
>1008	PrimaryExpression	0
>1009	Identifier	cams
>1010	PrimaryExpression	\"/\"
>1011	MemberAccess	cams [ 0 ] . fovy
>1012	Identifier	fovy
>1013	ArrayIndexing	cams [ 0 ]
>1014	PrimaryExpression	0
>1015	Identifier	cams
>1016	PrimaryExpression	\"/\"
>1017	ArrayIndexing	cams [ 0 ] . view [ 2 ]
>1018	PrimaryExpression	2
>1019	MemberAccess	cams [ 0 ] . view
>1020	Identifier	view
>1021	ArrayIndexing	cams [ 0 ]
>1022	PrimaryExpression	0
>1023	Identifier	cams
>1024	PrimaryExpression	\",\"
>1025	ArrayIndexing	cams [ 0 ] . view [ 1 ]
>1026	PrimaryExpression	1
>1027	MemberAccess	cams [ 0 ] . view
>1028	Identifier	view
>1029	ArrayIndexing	cams [ 0 ]
>1030	PrimaryExpression	0
>1031	Identifier	cams
>1032	PrimaryExpression	\",\"
>1033	ArrayIndexing	cams [ 0 ] . view [ 0 ]
>1034	PrimaryExpression	0
>1035	MemberAccess	cams [ 0 ] . view
>1036	Identifier	view
>1037	ArrayIndexing	cams [ 0 ]
>1038	PrimaryExpression	0
>1039	Identifier	cams
>1040	PrimaryExpression	\"/\"
>1041	ArrayIndexing	cams [ 0 ] . pos [ 2 ]
>1042	PrimaryExpression	2
>1043	MemberAccess	cams [ 0 ] . pos
>1044	Identifier	pos
>1045	ArrayIndexing	cams [ 0 ]
>1046	PrimaryExpression	0
>1047	Identifier	cams
>1048	PrimaryExpression	\",\"
>1049	ArrayIndexing	cams [ 0 ] . pos [ 1 ]
>1050	PrimaryExpression	1
>1051	MemberAccess	cams [ 0 ] . pos
>1052	Identifier	pos
>1053	ArrayIndexing	cams [ 0 ]
>1054	PrimaryExpression	0
>1055	Identifier	cams
>1056	PrimaryExpression	\",\"
>1057	ArrayIndexing	cams [ 0 ] . pos [ 0 ]
>1058	PrimaryExpression	0
>1059	MemberAccess	cams [ 0 ] . pos
>1060	Identifier	pos
>1061	ArrayIndexing	cams [ 0 ]
>1062	PrimaryExpression	0
>1063	Identifier	cams
>1064	PrimaryExpression	\"/\"
>1065	ArrayIndexing	cams [ 0 ] . focal [ 2 ]
>1066	PrimaryExpression	2
>1067	MemberAccess	cams [ 0 ] . focal
>1068	Identifier	focal
>1069	ArrayIndexing	cams [ 0 ]
>1070	PrimaryExpression	0
>1071	Identifier	cams
>1072	PrimaryExpression	\",\"
>1073	ArrayIndexing	cams [ 0 ] . focal [ 1 ]
>1074	PrimaryExpression	1
>1075	MemberAccess	cams [ 0 ] . focal
>1076	Identifier	focal
>1077	ArrayIndexing	cams [ 0 ]
>1078	PrimaryExpression	0
>1079	Identifier	cams
>1080	PrimaryExpression	\",\"
>1081	ArrayIndexing	cams [ 0 ] . focal [ 0 ]
>1082	PrimaryExpression	0
>1083	MemberAccess	cams [ 0 ] . focal
>1084	Identifier	focal
>1085	ArrayIndexing	cams [ 0 ]
>1086	PrimaryExpression	0
>1087	Identifier	cams
>1088	PrimaryExpression	\"/\"
>1089	ArrayIndexing	cams [ 0 ] . clip [ 1 ]
>1090	PrimaryExpression	1
>1091	MemberAccess	cams [ 0 ] . clip
>1092	Identifier	clip
>1093	ArrayIndexing	cams [ 0 ]
>1094	PrimaryExpression	0
>1095	Identifier	cams
>1096	PrimaryExpression	\",\"
>1097	ArrayIndexing	cams [ 0 ] . clip [ 0 ]
>1098	PrimaryExpression	0
>1099	MemberAccess	cams [ 0 ] . clip
>1100	Identifier	clip
>1101	ArrayIndexing	cams [ 0 ]
>1102	PrimaryExpression	0
>1103	Identifier	cams
>1104	Identifier	camera_pose_file
>1105	IdentifierDeclStatement	 
>1106	IdentifierDecl	camera_pose_file ( cfg_ . CameraFile . c_str ( ) )
>1107	CallExpression	cfg_ . CameraFile . c_str ( )
>1108	ArgumentList	 
>1109	Callee	cfg_ . CameraFile . c_str
>1110	MemberAccess	cfg_ . CameraFile . c_str
>1111	Identifier	c_str
>1112	MemberAccess	cfg_ . CameraFile
>1113	Identifier	CameraFile
>1114	Identifier	cfg_
>1115	Identifier	camera_pose_file
>1116	IdentifierDeclType	std 
>1117	ExpressionStatement	 
>1118	CallExpression	( ( dvo 
>1119	ArgumentList	cams
>1120	Argument	cams
>1121	Identifier	cams
>1122	Callee	( ( dvo 
>1123	MemberAccess	( ( dvo 
>1124	Identifier	getCameras
>1125	CallExpression	( ( dvo 
>1126	ArgumentList	 
>1127	Callee	( ( dvo 
>1128	PtrMemberAccess	( ( dvo 
>1129	Identifier	visualizer
>1130	CastExpression	( dvo 
>1131	Identifier	visualizer
>1132	CastTarget	dvo 
>1133	IdentifierDeclStatement	 
>1134	IdentifierDecl	cams
>1135	Identifier	cams
>1136	IdentifierDeclType	std 
>1137	ExpressionStatement	 
>1138	ShiftExpression	std 
>1139	ShiftExpression	\"saving camera pose to '\" << cfg_ . CameraFile << \"'\" << std 
>1140	ShiftExpression	cfg_ . CameraFile << \"'\" << std 
>1141	ShiftExpression	\"'\" << std 
>1142	Identifier	std 
>1143	PrimaryExpression	\"'\"
>1144	MemberAccess	cfg_ . CameraFile
>1145	Identifier	CameraFile
>1146	Identifier	cfg_
>1147	PrimaryExpression	\"saving camera pose to '\"
>1148	Identifier	std 
>1149	Condition	 
>1150	UnaryOp	! cfg_ . CameraFile . empty ( )
>1151	CallExpression	cfg_ . CameraFile . empty ( )
>1152	ArgumentList	 
>1153	Callee	cfg_ . CameraFile . empty
>1154	MemberAccess	cfg_ . CameraFile . empty
>1155	Identifier	empty
>1156	MemberAccess	cfg_ . CameraFile
>1157	Identifier	CameraFile
>1158	Identifier	cfg_
>1159	UnaryOperator	!
>1160	Condition	 
>1161	CallExpression	dump_camera_pose_ . value ( )
>1162	ArgumentList	 
>1163	Callee	dump_camera_pose_ . value
>1164	MemberAccess	dump_camera_pose_ . value
>1165	Identifier	value
>1166	Identifier	dump_camera_pose_
>1167	Condition	 
>1168	CallExpression	cfg_ . VisualizationRequired ( )
>1169	ArgumentList	 
>1170	Callee	cfg_ . VisualizationRequired
>1171	MemberAccess	cfg_ . VisualizationRequired
>1172	Identifier	VisualizationRequired
>1173	Identifier	cfg_
>1201	FunctionDef	BenchmarkNode 
>1202	ParameterList	dvo 
>1203	Parameter	 
>1204	Identifier	pose
>1205	ParameterType	const Eigen 
>1206	Parameter	 
>1207	Identifier	intrinsics
>1208	ParameterType	const dvo 
>1209	Parameter	 
>1210	Identifier	img
>1211	ParameterType	const dvo 
>1212	Parameter	 
>1213	Identifier	visualizer
>1214	ParameterType	dvo 
>1215	ReturnType	void
>1216	CompoundStatement	 
>1217	ExpressionStatement	 
>1218	CallExpression	visualizer -> camera ( \"reference\" ) -> color ( dvo 
>1219	ArgumentList	 
>1220	Callee	visualizer -> camera ( \"reference\" ) -> color ( dvo 
>1221	MemberAccess	visualizer -> camera ( \"reference\" ) -> color ( dvo 
>1222	Identifier	show
>1223	CallExpression	visualizer -> camera ( \"reference\" ) -> color ( dvo 
>1224	ArgumentList	first
>1225	Argument	pose
>1226	Identifier	pose
>1227	Argument	intrinsics
>1228	Identifier	intrinsics
>1229	Argument	first
>1230	Identifier	first
>1231	Callee	visualizer -> camera ( \"reference\" ) -> color ( dvo 
>1232	MemberAccess	visualizer -> camera ( \"reference\" ) -> color ( dvo 
>1233	Identifier	update
>1234	CallExpression	visualizer -> camera ( \"reference\" ) -> color ( dvo 
>1235	ArgumentList	dvo 
>1236	Argument	dvo 
>1237	CallExpression	dvo 
>1238	ArgumentList	 
>1239	Callee	dvo 
>1240	Identifier	dvo 
>1241	Callee	visualizer -> camera ( \"reference\" ) -> color
>1242	PtrMemberAccess	visualizer -> camera ( \"reference\" ) -> color
>1243	Identifier	color
>1244	CallExpression	visualizer -> camera ( \"reference\" )
>1245	ArgumentList	\"reference\"
>1246	Argument	\"reference\"
>1247	PrimaryExpression	\"reference\"
>1248	Callee	visualizer -> camera
>1249	PtrMemberAccess	visualizer -> camera
>1250	Identifier	camera
>1251	Identifier	visualizer
>1252	ForStatement	for ( int idx = 0 ; idx < first . rgb . size ( ) . area ( ) ; ++ idx , ++ p )
>1253	CompoundStatement	 
>1254	ExpressionStatement	 
>1255	AssignmentExpr	p -> val [ 0 ] = std 
>1256	CallExpression	std 
>1257	ArgumentList	255.0f
>1258	Argument	1.333f * p -> val [ 0 ]
>1259	MultiplicativeExpression	1.333f * p -> val [ 0 ]
>1260	ArrayIndexing	p -> val [ 0 ]
>1261	PrimaryExpression	0
>1262	PtrMemberAccess	p -> val
>1263	Identifier	val
>1264	Identifier	p
>1265	PrimaryExpression	1.333f
>1266	Argument	255.0f
>1267	PrimaryExpression	255.0f
>1268	Callee	std 
>1269	Identifier	std 
>1270	ArrayIndexing	p -> val [ 0 ]
>1271	PrimaryExpression	0
>1272	PtrMemberAccess	p -> val
>1273	Identifier	val
>1274	Identifier	p
>1275	ExpressionStatement	 
>1276	AssignmentExpr	p -> val [ 1 ] = 0.666f * p -> val [ 1 ]
>1277	MultiplicativeExpression	0.666f * p -> val [ 1 ]
>1278	ArrayIndexing	p -> val [ 1 ]
>1279	PrimaryExpression	1
>1280	PtrMemberAccess	p -> val
>1281	Identifier	val
>1282	Identifier	p
>1283	PrimaryExpression	0.666f
>1284	ArrayIndexing	p -> val [ 1 ]
>1285	PrimaryExpression	1
>1286	PtrMemberAccess	p -> val
>1287	Identifier	val
>1288	Identifier	p
>1289	ExpressionStatement	 
>1290	AssignmentExpr	p -> val [ 2 ] = 0.666f * p -> val [ 2 ]
>1291	MultiplicativeExpression	0.666f * p -> val [ 2 ]
>1292	ArrayIndexing	p -> val [ 2 ]
>1293	PrimaryExpression	2
>1294	PtrMemberAccess	p -> val
>1295	Identifier	val
>1296	Identifier	p
>1297	PrimaryExpression	0.666f
>1298	ArrayIndexing	p -> val [ 2 ]
>1299	PrimaryExpression	2
>1300	PtrMemberAccess	p -> val
>1301	Identifier	val
>1302	Identifier	p
>1303	Expression	 
>1304	UnaryExpression	++ p
>1305	Identifier	p
>1306	IncDec	++
>1307	UnaryExpression	++ idx
>1308	Identifier	idx
>1309	IncDec	++
>1310	Condition	 
>1311	RelationalExpression	idx < first . rgb . size ( ) . area ( )
>1312	CallExpression	first . rgb . size ( ) . area ( )
>1313	ArgumentList	 
>1314	Callee	first . rgb . size ( ) . area
>1315	MemberAccess	first . rgb . size ( ) . area
>1316	Identifier	area
>1317	CallExpression	first . rgb . size ( )
>1318	ArgumentList	 
>1319	Callee	first . rgb . size
>1320	MemberAccess	first . rgb . size
>1321	Identifier	size
>1322	MemberAccess	first . rgb
>1323	Identifier	rgb
>1324	Identifier	first
>1325	Identifier	idx
>1326	ForInit	 
>1327	IdentifierDeclStatement	int idx = 0 ;
>1328	IdentifierDecl	idx = 0
>1329	AssignmentExpr	idx = 0
>1330	PrimaryExpression	0
>1331	Identifier	idx
>1332	Identifier	idx
>1333	IdentifierDeclType	int
>1334	ExpressionStatement	 
>1335	Statement	 
>1336	Statement	 
>1337	Statement	 
>1338	Statement	 
>1339	Statement	 
>1340	Statement	 
>1341	Statement	 
>1342	Statement	 
>1343	Statement	 
>1344	Statement	 
>1345	Statement	 
>1346	Statement	 
>1347	Statement	 
>1348	Statement	 
>1349	Statement	 
>1350	Statement	 
>1351	Statement	 
>1352	Statement	 
>1353	ExpressionStatement	 
>1354	CallExpression	first . initialize ( )
>1355	ArgumentList	 
>1356	Callee	first . initialize
>1357	MemberAccess	first . initialize
>1358	Identifier	initialize
>1359	Identifier	first
>1360	ExpressionStatement	 
>1361	AssignmentExpr	first . depth = img . depth . clone ( )
>1362	CallExpression	img . depth . clone ( )
>1363	ArgumentList	 
>1364	Callee	img . depth . clone
>1365	MemberAccess	img . depth . clone
>1366	Identifier	clone
>1367	MemberAccess	img . depth
>1368	Identifier	depth
>1369	Identifier	img
>1370	MemberAccess	first . depth
>1371	Identifier	depth
>1372	Identifier	first
>1373	ExpressionStatement	 
>1374	AssignmentExpr	first . rgb = img . rgb . clone ( )
>1375	CallExpression	img . rgb . clone ( )
>1376	ArgumentList	 
>1377	Callee	img . rgb . clone
>1378	MemberAccess	img . rgb . clone
>1379	Identifier	clone
>1380	MemberAccess	img . rgb
>1381	Identifier	rgb
>1382	Identifier	img
>1383	MemberAccess	first . rgb
>1384	Identifier	rgb
>1385	Identifier	first
>1386	IdentifierDeclStatement	 
>1387	IdentifierDecl	first
>1388	Identifier	first
>1389	IdentifierDeclType	dvo 
>1420	FunctionDef	BenchmarkNode 
>1421	ParameterList	 
>1422	ReturnType	void
>1423	CompoundStatement	 
>1424	ExpressionStatement	 
>1425	CallExpression	renderWhileSwitchAndNotTerminated ( visualizer , dummy_switch )
>1426	ArgumentList	visualizer
>1427	Argument	dummy_switch
>1428	Identifier	dummy_switch
>1429	Argument	visualizer
>1430	Identifier	visualizer
>1431	Callee	renderWhileSwitchAndNotTerminated
>1432	Identifier	renderWhileSwitchAndNotTerminated
>1433	ForStatement	for ( std 
>1434	CompoundStatement	 
>1435	IfStatement	if ( cfg_ . RenderVideo )
>1436	CompoundStatement	 
>1437	ExpressionStatement	 
>1438	CallExpression	( ( dvo 
>1439	ArgumentList	frame_ids . next ( ) + std 
>1440	Argument	frame_ids . next ( ) + std 
>1441	AdditiveExpression	frame_ids . next ( ) + std 
>1442	CallExpression	std 
>1443	ArgumentList	\".png\"
>1444	Argument	\".png\"
>1445	PrimaryExpression	\".png\"
>1446	Callee	std 
>1447	Identifier	std 
>1448	CallExpression	frame_ids . next ( )
>1449	ArgumentList	 
>1450	Callee	frame_ids . next
>1451	MemberAccess	frame_ids . next
>1452	Identifier	next
>1453	Identifier	frame_ids
>1454	Callee	( ( dvo 
>1455	MemberAccess	( ( dvo 
>1456	Identifier	saveScreenshot
>1457	CallExpression	( ( dvo 
>1458	ArgumentList	 
>1459	Callee	( ( dvo 
>1460	PtrMemberAccess	( ( dvo 
>1461	Identifier	visualizer
>1462	CastExpression	( dvo 
>1463	Identifier	visualizer
>1464	CastTarget	dvo 
>1465	ExpressionStatement	 
>1466	CallExpression	( ( dvo 
>1467	ArgumentList	5
>1468	Argument	5
>1469	PrimaryExpression	5
>1470	Callee	( ( dvo 
>1471	PtrMemberAccess	( ( dvo 
>1472	Identifier	render
>1473	CastExpression	( dvo 
>1474	Identifier	visualizer
>1475	CastTarget	dvo 
>1476	Condition	 
>1477	MemberAccess	cfg_ . RenderVideo
>1478	Identifier	RenderVideo
>1479	Identifier	cfg_
>1480	IfStatement	if ( cfg_ . EstimateRequired ( ) )
>1481	CompoundStatement	 
>1482	IfStatement	if ( cfg_ . ShowEstimate )
>1483	CompoundStatement	 
>1484	ExpressionStatement	 
>1485	CallExpression	visualizer -> camera ( \"estimate\" ) -> color ( dvo 
>1486	ArgumentList	dvo 
>1487	Argument	dvo 
>1488	Identifier	dvo 
>1489	Callee	visualizer -> camera ( \"estimate\" ) -> color ( dvo 
>1490	MemberAccess	visualizer -> camera ( \"estimate\" ) -> color ( dvo 
>1491	Identifier	show
>1492	CallExpression	visualizer -> camera ( \"estimate\" ) -> color ( dvo 
>1493	ArgumentList	current -> level ( 0 )
>1494	Argument	trajectory
>1495	Identifier	trajectory
>1496	Argument	intrinsics
>1497	Identifier	intrinsics
>1498	Argument	current -> level ( 0 )
>1499	CallExpression	current -> level ( 0 )
>1500	ArgumentList	0
>1501	Argument	0
>1502	PrimaryExpression	0
>1503	Callee	current -> level
>1504	PtrMemberAccess	current -> level
>1505	Identifier	level
>1506	Identifier	current
>1507	Callee	visualizer -> camera ( \"estimate\" ) -> color ( dvo 
>1508	MemberAccess	visualizer -> camera ( \"estimate\" ) -> color ( dvo 
>1509	Identifier	update
>1510	CallExpression	visualizer -> camera ( \"estimate\" ) -> color ( dvo 
>1511	ArgumentList	dvo 
>1512	Argument	dvo 
>1513	CallExpression	dvo 
>1514	ArgumentList	 
>1515	Callee	dvo 
>1516	Identifier	dvo 
>1517	Callee	visualizer -> camera ( \"estimate\" ) -> color
>1518	PtrMemberAccess	visualizer -> camera ( \"estimate\" ) -> color
>1519	Identifier	color
>1520	CallExpression	visualizer -> camera ( \"estimate\" )
>1521	ArgumentList	\"estimate\"
>1522	Argument	\"estimate\"
>1523	PrimaryExpression	\"estimate\"
>1524	Callee	visualizer -> camera
>1525	PtrMemberAccess	visualizer -> camera
>1526	Identifier	camera
>1527	Identifier	visualizer
>1528	ExpressionStatement	 
>1529	CallExpression	visualizer -> trajectory ( \"estimate\" ) -> color ( dvo 
>1530	ArgumentList	trajectory
>1531	Argument	trajectory
>1532	Identifier	trajectory
>1533	Callee	visualizer -> trajectory ( \"estimate\" ) -> color ( dvo 
>1534	MemberAccess	visualizer -> trajectory ( \"estimate\" ) -> color ( dvo 
>1535	Identifier	add
>1536	CallExpression	visualizer -> trajectory ( \"estimate\" ) -> color ( dvo 
>1537	ArgumentList	dvo 
>1538	Argument	dvo 
>1539	CallExpression	dvo 
>1540	ArgumentList	 
>1541	Callee	dvo 
>1542	Identifier	dvo 
>1543	Callee	visualizer -> trajectory ( \"estimate\" ) -> color
>1544	PtrMemberAccess	visualizer -> trajectory ( \"estimate\" ) -> color
>1545	Identifier	color
>1546	CallExpression	visualizer -> trajectory ( \"estimate\" )
>1547	ArgumentList	\"estimate\"
>1548	Argument	\"estimate\"
>1549	PrimaryExpression	\"estimate\"
>1550	Callee	visualizer -> trajectory
>1551	PtrMemberAccess	visualizer -> trajectory
>1552	Identifier	trajectory
>1553	Identifier	visualizer
>1554	Condition	 
>1555	MemberAccess	cfg_ . ShowEstimate
>1556	Identifier	ShowEstimate
>1557	Identifier	cfg_
>1558	IfStatement	if ( cfg_ . EstimateTrajectory )
>1559	CompoundStatement	 
>1560	ExpressionStatement	 
>1561	ShiftExpression	( * trajectory_out_ ) << it -> RgbTimestamp ( ) << \" \" << trajectory . translation ( ) ( 0 ) << \" \" << \
>1562	ShiftExpression	it -> RgbTimestamp ( ) << \" \" << trajectory . translation ( ) ( 0 ) << \" \" << trajectory . translation ( ) ( \
>1563	ShiftExpression	\" \" << trajectory . translation ( ) ( 0 ) << \" \" << trajectory . translation ( ) ( 1 ) << \" \" << trajectory \
>1564	ShiftExpression	trajectory . translation ( ) ( 0 ) << \" \" << trajectory . translation ( ) ( 1 ) << \" \" << trajectory \
>1565	ShiftExpression	\" \" << trajectory . translation ( ) ( 1 ) << \" \" << trajectory . translation ( ) ( 2 ) << \" \" << q . \
>1566	ShiftExpression	trajectory . translation ( ) ( 1 ) << \" \" << trajectory . translation ( ) ( 2 ) << \" \" << q . x ( ) << \" \" << \
>1567	ShiftExpression	\" \" << trajectory . translation ( ) ( 2 ) << \" \" << q . x ( ) << \" \" << q . y ( ) << \" \" << q . z ( ) << \" \" << \
>1568	ShiftExpression	trajectory . translation ( ) ( 2 ) << \" \" << q . x ( ) << \" \" << q . y ( ) << \" \" << q . z ( ) << \" \" << \
>1569	ShiftExpression	\" \" << q . x ( ) << \" \" << q . y ( ) << \" \" << q . z ( ) << \" \" << q . w ( ) << \" \" << std 
>1570	ShiftExpression	q . x ( ) << \" \" << q . y ( ) << \" \" << q . z ( ) << \" \" << q . w ( ) << \" \" << std 
>1571	ShiftExpression	\" \" << q . y ( ) << \" \" << q . z ( ) << \" \" << q . w ( ) << \" \" << std 
>1572	ShiftExpression	q . y ( ) << \" \" << q . z ( ) << \" \" << q . w ( ) << \" \" << std 
>1573	ShiftExpression	\" \" << q . z ( ) << \" \" << q . w ( ) << \" \" << std 
>1574	ShiftExpression	q . z ( ) << \" \" << q . w ( ) << \" \" << std 
>1575	ShiftExpression	\" \" << q . w ( ) << \" \" << std 
>1576	ShiftExpression	q . w ( ) << \" \" << std 
>1577	ShiftExpression	\" \" << std 
>1578	Identifier	std 
>1579	PrimaryExpression	\" \"
>1580	CallExpression	q . w ( )
>1581	ArgumentList	 
>1582	Callee	q . w
>1583	MemberAccess	q . w
>1584	Identifier	w
>1585	Identifier	q
>1586	PrimaryExpression	\" \"
>1587	CallExpression	q . z ( )
>1588	ArgumentList	 
>1589	Callee	q . z
>1590	MemberAccess	q . z
>1591	Identifier	z
>1592	Identifier	q
>1593	PrimaryExpression	\" \"
>1594	CallExpression	q . y ( )
>1595	ArgumentList	 
>1596	Callee	q . y
>1597	MemberAccess	q . y
>1598	Identifier	y
>1599	Identifier	q
>1600	PrimaryExpression	\" \"
>1601	CallExpression	q . x ( )
>1602	ArgumentList	 
>1603	Callee	q . x
>1604	MemberAccess	q . x
>1605	Identifier	x
>1606	Identifier	q
>1607	PrimaryExpression	\" \"
>1608	CallExpression	trajectory . translation ( ) ( 2 )
>1609	ArgumentList	2
>1610	Argument	2
>1611	PrimaryExpression	2
>1612	Callee	trajectory . translation ( )
>1613	CallExpression	trajectory . translation ( )
>1614	ArgumentList	 
>1615	Callee	trajectory . translation
>1616	MemberAccess	trajectory . translation
>1617	Identifier	translation
>1618	Identifier	trajectory
>1619	PrimaryExpression	\" \"
>1620	CallExpression	trajectory . translation ( ) ( 1 )
>1621	ArgumentList	1
>1622	Argument	1
>1623	PrimaryExpression	1
>1624	Callee	trajectory . translation ( )
>1625	CallExpression	trajectory . translation ( )
>1626	ArgumentList	 
>1627	Callee	trajectory . translation
>1628	MemberAccess	trajectory . translation
>1629	Identifier	translation
>1630	Identifier	trajectory
>1631	PrimaryExpression	\" \"
>1632	CallExpression	trajectory . translation ( ) ( 0 )
>1633	ArgumentList	0
>1634	Argument	0
>1635	PrimaryExpression	0
>1636	Callee	trajectory . translation ( )
>1637	CallExpression	trajectory . translation ( )
>1638	ArgumentList	 
>1639	Callee	trajectory . translation
>1640	MemberAccess	trajectory . translation
>1641	Identifier	translation
>1642	Identifier	trajectory
>1643	PrimaryExpression	\" \"
>1644	CallExpression	it -> RgbTimestamp ( )
>1645	ArgumentList	 
>1646	Callee	it -> RgbTimestamp
>1647	PtrMemberAccess	it -> RgbTimestamp
>1648	Identifier	RgbTimestamp
>1649	Identifier	it
>1650	UnaryOp	* trajectory_out_
>1651	Identifier	trajectory_out_
>1652	UnaryOperator	*
>1653	IdentifierDeclStatement	 
>1654	IdentifierDecl	q ( trajectory . rotation ( ) )
>1655	CallExpression	trajectory . rotation ( )
>1656	ArgumentList	 
>1657	Callee	trajectory . rotation
>1658	MemberAccess	trajectory . rotation
>1659	Identifier	rotation
>1660	Identifier	trajectory
>1661	Identifier	q
>1662	IdentifierDeclType	Eigen 
>1663	Condition	 
>1664	MemberAccess	cfg_ . EstimateTrajectory
>1665	Identifier	EstimateTrajectory
>1666	Identifier	cfg_
>1667	ExpressionStatement	 
>1668	AssignmentExpr	trajectory = trajectory * relative
>1669	MultiplicativeExpression	trajectory * relative
>1670	Identifier	relative
>1671	Identifier	trajectory
>1672	Identifier	trajectory
>1673	ExpressionStatement	 
>1674	CallExpression	sw_match . stopAndPrint ( )
>1675	ArgumentList	 
>1676	Callee	sw_match . stopAndPrint
>1677	MemberAccess	sw_match . stopAndPrint
>1678	Identifier	stopAndPrint
>1679	Identifier	sw_match
>1680	CompoundStatement	 
>1681	ExpressionStatement	 
>1682	CallExpression	dense_tracker . match ( * reference , * current , relative )
>1683	ArgumentList	* reference
>1684	Argument	relative
>1685	Identifier	relative
>1686	Argument	* current
>1687	UnaryOp	* current
>1688	Identifier	current
>1689	UnaryOperator	*
>1690	Argument	* reference
>1691	UnaryOp	* reference
>1692	Identifier	reference
>1693	UnaryOperator	*
>1694	Callee	dense_tracker . match
>1695	MemberAccess	dense_tracker . match
>1696	Identifier	match
>1697	Identifier	dense_tracker
>1698	ExpressionStatement	 
>1699	CallExpression	sw_match . start ( )
>1700	ArgumentList	 
>1701	Callee	sw_match . start
>1702	MemberAccess	sw_match . start
>1703	Identifier	start
>1704	Identifier	sw_match
>1705	IdentifierDeclStatement	 
>1706	IdentifierDecl	sw_match ( \"match\" , 100 )
>1707	Expression	\"match\" , 100
>1708	PrimaryExpression	100
>1709	PrimaryExpression	\"match\"
>1710	Identifier	sw_match
>1711	IdentifierDeclType	dvo 
>1712	Statement	 
>1713	Condition	 
>1714	CallExpression	cfg_ . EstimateRequired ( )
>1715	ArgumentList	 
>1716	Callee	cfg_ . EstimateRequired
>1717	MemberAccess	cfg_ . EstimateRequired
>1718	Identifier	EstimateRequired
>1719	Identifier	cfg_
>1720	IfStatement	if ( cfg_ . ShowGroundtruth )
>1721	CompoundStatement	 
>1722	ExpressionStatement	 
>1723	CallExpression	visualizer -> camera ( \"groundtruth\" ) -> color ( dvo 
>1724	ArgumentList	cfg_ . ShowEstimate ? dvo 
>1725	Argument	cfg_ . ShowEstimate ? dvo 
>1726	ConditionalExpression	cfg_ . ShowEstimate ? dvo 
>1727	Identifier	dvo 
>1728	Identifier	dvo 
>1729	Condition	cfg_ . ShowEstimate
>1730	MemberAccess	cfg_ . ShowEstimate
>1731	Identifier	ShowEstimate
>1732	Identifier	cfg_
>1733	Callee	visualizer -> camera ( \"groundtruth\" ) -> color ( dvo 
>1734	MemberAccess	visualizer -> camera ( \"groundtruth\" ) -> color ( dvo 
>1735	Identifier	show
>1736	CallExpression	visualizer -> camera ( \"groundtruth\" ) -> color ( dvo 
>1737	ArgumentList	current -> level ( 0 )
>1738	Argument	groundtruth_pose
>1739	Identifier	groundtruth_pose
>1740	Argument	intrinsics
>1741	Identifier	intrinsics
>1742	Argument	current -> level ( 0 )
>1743	CallExpression	current -> level ( 0 )
>1744	ArgumentList	0
>1745	Argument	0
>1746	PrimaryExpression	0
>1747	Callee	current -> level
>1748	PtrMemberAccess	current -> level
>1749	Identifier	level
>1750	Identifier	current
>1751	Callee	visualizer -> camera ( \"groundtruth\" ) -> color ( dvo 
>1752	MemberAccess	visualizer -> camera ( \"groundtruth\" ) -> color ( dvo 
>1753	Identifier	update
>1754	CallExpression	visualizer -> camera ( \"groundtruth\" ) -> color ( dvo 
>1755	ArgumentList	dvo 
>1756	Argument	dvo 
>1757	CallExpression	dvo 
>1758	ArgumentList	 
>1759	Callee	dvo 
>1760	Identifier	dvo 
>1761	Callee	visualizer -> camera ( \"groundtruth\" ) -> color
>1762	PtrMemberAccess	visualizer -> camera ( \"groundtruth\" ) -> color
>1763	Identifier	color
>1764	CallExpression	visualizer -> camera ( \"groundtruth\" )
>1765	ArgumentList	\"groundtruth\"
>1766	Argument	\"groundtruth\"
>1767	PrimaryExpression	\"groundtruth\"
>1768	Callee	visualizer -> camera
>1769	PtrMemberAccess	visualizer -> camera
>1770	Identifier	camera
>1771	Identifier	visualizer
>1772	ExpressionStatement	 
>1773	CallExpression	visualizer -> trajectory ( \"groundtruth\" ) -> color ( dvo 
>1774	ArgumentList	groundtruth_pose
>1775	Argument	groundtruth_pose
>1776	Identifier	groundtruth_pose
>1777	Callee	visualizer -> trajectory ( \"groundtruth\" ) -> color ( dvo 
>1778	MemberAccess	visualizer -> trajectory ( \"groundtruth\" ) -> color ( dvo 
>1779	Identifier	add
>1780	CallExpression	visualizer -> trajectory ( \"groundtruth\" ) -> color ( dvo 
>1781	ArgumentList	dvo 
>1782	Argument	dvo 
>1783	CallExpression	dvo 
>1784	ArgumentList	 
>1785	Callee	dvo 
>1786	Identifier	dvo 
>1787	Callee	visualizer -> trajectory ( \"groundtruth\" ) -> color
>1788	PtrMemberAccess	visualizer -> trajectory ( \"groundtruth\" ) -> color
>1789	Identifier	color
>1790	CallExpression	visualizer -> trajectory ( \"groundtruth\" )
>1791	ArgumentList	\"groundtruth\"
>1792	Argument	\"groundtruth\"
>1793	PrimaryExpression	\"groundtruth\"
>1794	Callee	visualizer -> trajectory
>1795	PtrMemberAccess	visualizer -> trajectory
>1796	Identifier	trajectory
>1797	Identifier	visualizer
>1798	ExpressionStatement	 
>1799	CallExpression	dvo_benchmark 
>1800	ArgumentList	groundtruth_reader_ -> entry ( )
>1801	Argument	groundtruth_pose
>1802	Identifier	groundtruth_pose
>1803	Argument	groundtruth_reader_ -> entry ( )
>1804	CallExpression	groundtruth_reader_ -> entry ( )
>1805	ArgumentList	 
>1806	Callee	groundtruth_reader_ -> entry
>1807	PtrMemberAccess	groundtruth_reader_ -> entry
>1808	Identifier	entry
>1809	Identifier	groundtruth_reader_
>1810	Callee	dvo_benchmark 
>1811	Identifier	dvo_benchmark 
>1812	ExpressionStatement	 
>1813	CallExpression	dvo_benchmark 
>1814	ArgumentList	* groundtruth_reader_
>1815	Argument	it -> RgbTimestamp ( )
>1816	CallExpression	it -> RgbTimestamp ( )
>1817	ArgumentList	 
>1818	Callee	it -> RgbTimestamp
>1819	PtrMemberAccess	it -> RgbTimestamp
>1820	Identifier	RgbTimestamp
>1821	Identifier	it
>1822	Argument	* groundtruth_reader_
>1823	UnaryOp	* groundtruth_reader_
>1824	Identifier	groundtruth_reader_
>1825	UnaryOperator	*
>1826	Callee	dvo_benchmark 
>1827	Identifier	dvo_benchmark 
>1828	IdentifierDeclStatement	 
>1829	IdentifierDecl	groundtruth_pose
>1830	Identifier	groundtruth_pose
>1831	IdentifierDeclType	Eigen 
>1832	Condition	 
>1833	MemberAccess	cfg_ . ShowGroundtruth
>1834	Identifier	ShowGroundtruth
>1835	Identifier	cfg_
>1836	IfStatement	if ( ( it -> RgbTimestamp ( ) - pairs . front ( ) . RgbTimestamp ( ) ) . toSec ( ) < 5 || ( pairs . back ( ) . RgbTimestamp ( ) \
>1837	ElseStatement	else
>1838	CompoundStatement	 
>1839	ExpressionStatement	 
>1840	CallExpression	visualizer -> camera ( \"reference\" ) -> hide ( )
>1841	ArgumentList	 
>1842	Callee	visualizer -> camera ( \"reference\" ) -> hide
>1843	PtrMemberAccess	visualizer -> camera ( \"reference\" ) -> hide
>1844	Identifier	hide
>1845	CallExpression	visualizer -> camera ( \"reference\" )
>1846	ArgumentList	\"reference\"
>1847	Argument	\"reference\"
>1848	PrimaryExpression	\"reference\"
>1849	Callee	visualizer -> camera
>1850	PtrMemberAccess	visualizer -> camera
>1851	Identifier	camera
>1852	Identifier	visualizer
>1853	CompoundStatement	 
>1854	ExpressionStatement	 
>1855	CallExpression	visualizer -> camera ( \"reference\" ) -> show ( )
>1856	ArgumentList	 
>1857	Callee	visualizer -> camera ( \"reference\" ) -> show
>1858	PtrMemberAccess	visualizer -> camera ( \"reference\" ) -> show
>1859	Identifier	show
>1860	CallExpression	visualizer -> camera ( \"reference\" )
>1861	ArgumentList	\"reference\"
>1862	Argument	\"reference\"
>1863	PrimaryExpression	\"reference\"
>1864	Callee	visualizer -> camera
>1865	PtrMemberAccess	visualizer -> camera
>1866	Identifier	camera
>1867	Identifier	visualizer
>1868	Condition	 
>1869	OrExpression	( it -> RgbTimestamp ( ) - pairs . front ( ) . RgbTimestamp ( ) ) . toSec ( ) < 5 || ( pairs . back ( ) \
>1870	RelationalExpression	( pairs . back ( ) . RgbTimestamp ( ) - it -> RgbTimestamp ( ) ) . toSec ( ) < 5
>1871	PrimaryExpression	5
>1872	CallExpression	( pairs . back ( ) . RgbTimestamp ( ) - it -> RgbTimestamp ( ) ) . toSec ( )
>1873	ArgumentList	 
>1874	Callee	( pairs . back ( ) . RgbTimestamp ( ) - it -> RgbTimestamp ( ) ) . toSec
>1875	MemberAccess	( pairs . back ( ) . RgbTimestamp ( ) - it -> RgbTimestamp ( ) ) . toSec
>1876	Identifier	toSec
>1877	AdditiveExpression	pairs . back ( ) . RgbTimestamp ( ) - it -> RgbTimestamp ( )
>1878	CallExpression	it -> RgbTimestamp ( )
>1879	ArgumentList	 
>1880	Callee	it -> RgbTimestamp
>1881	PtrMemberAccess	it -> RgbTimestamp
>1882	Identifier	RgbTimestamp
>1883	Identifier	it
>1884	CallExpression	pairs . back ( ) . RgbTimestamp ( )
>1885	ArgumentList	 
>1886	Callee	pairs . back ( ) . RgbTimestamp
>1887	MemberAccess	pairs . back ( ) . RgbTimestamp
>1888	Identifier	RgbTimestamp
>1889	CallExpression	pairs . back ( )
>1890	ArgumentList	 
>1891	Callee	pairs . back
>1892	MemberAccess	pairs . back
>1893	Identifier	back
>1894	Identifier	pairs
>1895	RelationalExpression	( it -> RgbTimestamp ( ) - pairs . front ( ) . RgbTimestamp ( ) ) . toSec ( ) < 5
>1896	PrimaryExpression	5
>1897	CallExpression	( it -> RgbTimestamp ( ) - pairs . front ( ) . RgbTimestamp ( ) ) . toSec ( )
>1898	ArgumentList	 
>1899	Callee	( it -> RgbTimestamp ( ) - pairs . front ( ) . RgbTimestamp ( ) ) . toSec
>1900	MemberAccess	( it -> RgbTimestamp ( ) - pairs . front ( ) . RgbTimestamp ( ) ) . toSec
>1901	Identifier	toSec
>1902	AdditiveExpression	it -> RgbTimestamp ( ) - pairs . front ( ) . RgbTimestamp ( )
>1903	CallExpression	pairs . front ( ) . RgbTimestamp ( )
>1904	ArgumentList	 
>1905	Callee	pairs . front ( ) . RgbTimestamp
>1906	MemberAccess	pairs . front ( ) . RgbTimestamp
>1907	Identifier	RgbTimestamp
>1908	CallExpression	pairs . front ( )
>1909	ArgumentList	 
>1910	Callee	pairs . front
>1911	MemberAccess	pairs . front
>1912	Identifier	front
>1913	Identifier	pairs
>1914	CallExpression	it -> RgbTimestamp ( )
>1915	ArgumentList	 
>1916	Callee	it -> RgbTimestamp
>1917	PtrMemberAccess	it -> RgbTimestamp
>1918	Identifier	RgbTimestamp
>1919	Identifier	it
>1920	IfStatement	if ( ! reference )
>1921	CompoundStatement	 
>1922	ContinueStatement	 
>1923	Condition	 
>1924	UnaryOp	! reference
>1925	Identifier	reference
>1926	UnaryOperator	!
>1927	ExpressionStatement	 
>1928	CallExpression	processInput ( visualizer )
>1929	ArgumentList	visualizer
>1930	Argument	visualizer
>1931	Identifier	visualizer
>1932	Callee	processInput
>1933	Identifier	processInput
>1934	ExpressionStatement	 
>1935	CallExpression	renderWhileSwitchAndNotTerminated ( visualizer , pause_switch )
>1936	ArgumentList	visualizer
>1937	Argument	pause_switch
>1938	Identifier	pause_switch
>1939	Argument	visualizer
>1940	Identifier	visualizer
>1941	Callee	renderWhileSwitchAndNotTerminated
>1942	Identifier	renderWhileSwitchAndNotTerminated
>1943	IfStatement	if ( ! reference )
>1944	CompoundStatement	 
>1945	ExpressionStatement	 
>1946	CallExpression	createReferenceCamera ( visualizer , current -> level ( 0 ) , intrinsics , trajectory )
>1947	ArgumentList	visualizer
>1948	Argument	trajectory
>1949	Identifier	trajectory
>1950	Argument	intrinsics
>1951	Identifier	intrinsics
>1952	Argument	current -> level ( 0 )
>1953	CallExpression	current -> level ( 0 )
>1954	ArgumentList	0
>1955	Argument	0
>1956	PrimaryExpression	0
>1957	Callee	current -> level
>1958	PtrMemberAccess	current -> level
>1959	Identifier	level
>1960	Identifier	current
>1961	Argument	visualizer
>1962	Identifier	visualizer
>1963	Callee	createReferenceCamera
>1964	Identifier	createReferenceCamera
>1965	Condition	 
>1966	UnaryOp	! reference
>1967	Identifier	reference
>1968	UnaryOperator	!
>1969	ExpressionStatement	 
>1970	AssignmentExpr	current = load ( folder + it -> RgbFile ( ) , folder + it -> DepthFile ( ) )
>1971	CallExpression	load ( folder + it -> RgbFile ( ) , folder + it -> DepthFile ( ) )
>1972	ArgumentList	folder + it -> RgbFile ( )
>1973	Argument	folder + it -> DepthFile ( )
>1974	AdditiveExpression	folder + it -> DepthFile ( )
>1975	CallExpression	it -> DepthFile ( )
>1976	ArgumentList	 
>1977	Callee	it -> DepthFile
>1978	PtrMemberAccess	it -> DepthFile
>1979	Identifier	DepthFile
>1980	Identifier	it
>1981	Identifier	folder
>1982	Argument	folder + it -> RgbFile ( )
>1983	AdditiveExpression	folder + it -> RgbFile ( )
>1984	CallExpression	it -> RgbFile ( )
>1985	ArgumentList	 
>1986	Callee	it -> RgbFile
>1987	PtrMemberAccess	it -> RgbFile
>1988	Identifier	RgbFile
>1989	Identifier	it
>1990	Identifier	folder
>1991	Callee	load
>1992	Identifier	load
>1993	Identifier	current
>1994	ExpressionStatement	 
>1995	AssignmentExpr	reference = current
>1996	Identifier	current
>1997	Identifier	reference
>1998	UnaryExpression	 
>1999	Identifier	it
>2000	IncDec	++
>2001	Condition	 
>2002	AndExpression	ros 
>2003	EqualityExpression	it != pairs . end ( )
>2004	CallExpression	pairs . end ( )
>2005	ArgumentList	 
>2006	Callee	pairs . end
>2007	MemberAccess	pairs . end
>2008	Identifier	end
>2009	Identifier	pairs
>2010	Identifier	it
>2011	CallExpression	ros 
>2012	ArgumentList	 
>2013	Callee	ros 
>2014	Identifier	ros 
>2015	ForInit	 
>2016	IdentifierDeclStatement	std 
>2017	IdentifierDecl	it = pairs . begin ( )
>2018	AssignmentExpr	it = pairs . begin ( )
>2019	CallExpression	pairs . begin ( )
>2020	ArgumentList	 
>2021	Callee	pairs . begin
>2022	MemberAccess	pairs . begin
>2023	Identifier	begin
>2024	Identifier	pairs
>2025	Identifier	it
>2026	Identifier	it
>2027	IdentifierDeclType	std 
>2028	IdentifierDeclStatement	 
>2029	IdentifierDecl	current
>2030	Identifier	current
>2031	IdentifierDeclType	dvo 
>2032	IdentifierDecl	reference
>2033	Identifier	reference
>2034	IdentifierDeclType	dvo 
>2035	ExpressionStatement	 
>2036	CallExpression	rgbdpair_reader_ -> readAllEntries ( pairs )
>2037	ArgumentList	pairs
>2038	Argument	pairs
>2039	Identifier	pairs
>2040	Callee	rgbdpair_reader_ -> readAllEntries
>2041	PtrMemberAccess	rgbdpair_reader_ -> readAllEntries
>2042	Identifier	readAllEntries
>2043	Identifier	rgbdpair_reader_
>2044	IdentifierDeclStatement	 
>2045	IdentifierDecl	pairs
>2046	Identifier	pairs
>2047	IdentifierDeclType	std 
>2048	IdentifierDeclStatement	 
>2049	IdentifierDecl	folder = cfg_ . RgbdPairFile . substr ( 0 , cfg_ . RgbdPairFile . find_last_of ( \"/\" ) + 1 )
>2050	AssignmentExpr	folder = cfg_ . RgbdPairFile . substr ( 0 , cfg_ . RgbdPairFile . find_last_of ( \"/\" ) + 1 )
>2051	CallExpression	cfg_ . RgbdPairFile . substr ( 0 , cfg_ . RgbdPairFile . find_last_of ( \"/\" ) + 1 )
>2052	ArgumentList	0
>2053	Argument	cfg_ . RgbdPairFile . find_last_of ( \"/\" ) + 1
>2054	AdditiveExpression	cfg_ . RgbdPairFile . find_last_of ( \"/\" ) + 1
>2055	PrimaryExpression	1
>2056	CallExpression	cfg_ . RgbdPairFile . find_last_of ( \"/\" )
>2057	ArgumentList	\"/\"
>2058	Argument	\"/\"
>2059	PrimaryExpression	\"/\"
>2060	Callee	cfg_ . RgbdPairFile . find_last_of
>2061	MemberAccess	cfg_ . RgbdPairFile . find_last_of
>2062	Identifier	find_last_of
>2063	MemberAccess	cfg_ . RgbdPairFile
>2064	Identifier	RgbdPairFile
>2065	Identifier	cfg_
>2066	Argument	0
>2067	PrimaryExpression	0
>2068	Callee	cfg_ . RgbdPairFile . substr
>2069	MemberAccess	cfg_ . RgbdPairFile . substr
>2070	Identifier	substr
>2071	MemberAccess	cfg_ . RgbdPairFile
>2072	Identifier	RgbdPairFile
>2073	Identifier	cfg_
>2074	Identifier	folder
>2075	Identifier	folder
>2076	IdentifierDeclType	std 
>2077	IfStatement	if ( groundtruth_reader_ != 0 )
>2078	ElseStatement	else
>2079	CompoundStatement	 
>2080	ExpressionStatement	 
>2081	CallExpression	trajectory . setIdentity ( )
>2082	ArgumentList	 
>2083	Callee	trajectory . setIdentity
>2084	MemberAccess	trajectory . setIdentity
>2085	Identifier	setIdentity
>2086	Identifier	trajectory
>2087	CompoundStatement	 
>2088	ExpressionStatement	 
>2089	CallExpression	dvo_benchmark 
>2090	ArgumentList	groundtruth_reader_ -> entry ( )
>2091	Argument	trajectory
>2092	Identifier	trajectory
>2093	Argument	groundtruth_reader_ -> entry ( )
>2094	CallExpression	groundtruth_reader_ -> entry ( )
>2095	ArgumentList	 
>2096	Callee	groundtruth_reader_ -> entry
>2097	PtrMemberAccess	groundtruth_reader_ -> entry
>2098	Identifier	entry
>2099	Identifier	groundtruth_reader_
>2100	Callee	dvo_benchmark 
>2101	Identifier	dvo_benchmark 
>2102	ExpressionStatement	 
>2103	CallExpression	dvo_benchmark 
>2104	ArgumentList	* groundtruth_reader_
>2105	Argument	rgbdpair_reader_ -> entry ( ) . RgbTimestamp ( )
>2106	CallExpression	rgbdpair_reader_ -> entry ( ) . RgbTimestamp ( )
>2107	ArgumentList	 
>2108	Callee	rgbdpair_reader_ -> entry ( ) . RgbTimestamp
>2109	MemberAccess	rgbdpair_reader_ -> entry ( ) . RgbTimestamp
>2110	Identifier	RgbTimestamp
>2111	CallExpression	rgbdpair_reader_ -> entry ( )
>2112	ArgumentList	 
>2113	Callee	rgbdpair_reader_ -> entry
>2114	PtrMemberAccess	rgbdpair_reader_ -> entry
>2115	Identifier	entry
>2116	Identifier	rgbdpair_reader_
>2117	Argument	* groundtruth_reader_
>2118	UnaryOp	* groundtruth_reader_
>2119	Identifier	groundtruth_reader_
>2120	UnaryOperator	*
>2121	Callee	dvo_benchmark 
>2122	Identifier	dvo_benchmark 
>2123	Condition	 
>2124	EqualityExpression	groundtruth_reader_ != 0
>2125	PrimaryExpression	0
>2126	Identifier	groundtruth_reader_
>2127	IdentifierDeclStatement	 
>2128	IdentifierDecl	relative
>2129	Identifier	relative
>2130	IdentifierDeclType	Eigen 
>2131	IdentifierDecl	trajectory
>2132	Identifier	trajectory
>2133	IdentifierDeclType	Eigen 
>2134	IdentifierDeclStatement	 
>2135	IdentifierDecl	dense_tracker ( intrinsics , cfg )
>2136	Expression	intrinsics , cfg
>2137	Identifier	cfg
>2138	Identifier	intrinsics
>2139	Identifier	dense_tracker
>2140	IdentifierDeclType	dvo 
>2141	ExpressionStatement	 
>2142	CallExpression	ROS_WARN_STREAM_NAMED ( \"config\" , \"config
>2143	ArgumentList	\"config\"
>2144	Argument	\"config
>2145	ShiftExpression	\"config
>2146	ShiftExpression	cfg << \"\\"\"
>2147	PrimaryExpression	\"\\"\"
>2148	Identifier	cfg
>2149	PrimaryExpression	\"config
>2150	Argument	\"config\"
>2151	PrimaryExpression	\"config\"
>2152	Callee	ROS_WARN_STREAM_NAMED
>2153	Identifier	ROS_WARN_STREAM_NAMED
>2154	ExpressionStatement	 
>2155	CallExpression	dvo_ros 
>2156	ArgumentList	dynreconfg_cfg
>2157	Argument	cfg
>2158	Identifier	cfg
>2159	Argument	dynreconfg_cfg
>2160	Identifier	dynreconfg_cfg
>2161	Callee	dvo_ros 
>2162	Identifier	dvo_ros 
>2163	IdentifierDeclStatement	 
>2164	IdentifierDecl	cfg = dvo 
>2165	AssignmentExpr	cfg = dvo 
>2166	CallExpression	dvo 
>2167	ArgumentList	 
>2168	Callee	dvo 
>2169	Identifier	dvo 
>2170	Identifier	cfg
>2171	Identifier	cfg
>2172	IdentifierDeclType	dvo 
>2173	ExpressionStatement	 
>2174	CallExpression	dynreconfg_cfg . __fromServer__ ( nh_private_ )
>2175	ArgumentList	nh_private_
>2176	Argument	nh_private_
>2177	Identifier	nh_private_
>2178	Callee	dynreconfg_cfg . __fromServer__
>2179	MemberAccess	dynreconfg_cfg . __fromServer__
>2180	Identifier	__fromServer__
>2181	Identifier	dynreconfg_cfg
>2182	IdentifierDeclStatement	 
>2183	IdentifierDecl	dynreconfg_cfg = dvo_ros 
>2184	AssignmentExpr	dynreconfg_cfg = dvo_ros 
>2185	CallExpression	dvo_ros 
>2186	ArgumentList	 
>2187	Callee	dvo_ros 
>2188	Identifier	dvo_ros 
>2189	Identifier	dynreconfg_cfg
>2190	Identifier	dynreconfg_cfg
>2191	IdentifierDeclType	dvo_ros 
>2192	IdentifierDeclStatement	 
>2193	IdentifierDecl	intrinsics = dvo 
>2194	AssignmentExpr	intrinsics = dvo 
>2195	CallExpression	dvo 
>2196	ArgumentList	517.3
>2197	Argument	255.3
>2198	PrimaryExpression	255.3
>2199	Argument	318.6
>2200	PrimaryExpression	318.6
>2201	Argument	516.5
>2202	PrimaryExpression	516.5
>2203	Argument	517.3
>2204	PrimaryExpression	517.3
>2205	Callee	dvo 
>2206	Identifier	dvo 
>2207	Identifier	intrinsics
>2208	Identifier	intrinsics
>2209	IdentifierDeclType	dvo 
>2210	ExpressionStatement	 
>2211	CallExpression	dvo 
>2212	ArgumentList	false
>2213	Argument	false
>2214	Identifier	false
>2215	Callee	dvo 
>2216	MemberAccess	dvo 
>2217	Identifier	save
>2218	CallExpression	dvo 
>2219	ArgumentList	false
>2220	Argument	false
>2221	Identifier	false
>2222	Callee	dvo 
>2223	MemberAccess	dvo 
>2224	Identifier	enabled
>2225	CallExpression	dvo 
>2226	ArgumentList	false
>2227	Argument	false
>2228	Identifier	false
>2229	Callee	dvo 
>2230	MemberAccess	dvo 
>2231	Identifier	useExternalWaitKey
>2232	CallExpression	dvo 
>2233	ArgumentList	 
>2234	Callee	dvo 
>2235	Identifier	dvo 
>2236	IdentifierDeclStatement	 
>2237	IdentifierDecl	frame_ids ( cfg_ . VideoFolder + std 
>2238	AdditiveExpression	cfg_ . VideoFolder + std 
>2239	CallExpression	std 
>2240	ArgumentList	\"/frame_\"
>2241	Argument	\"/frame_\"
>2242	PrimaryExpression	\"/frame_\"
>2243	Callee	std 
>2244	Identifier	std 
>2245	MemberAccess	cfg_ . VideoFolder
>2246	Identifier	VideoFolder
>2247	Identifier	cfg_
>2248	Identifier	frame_ids
>2249	IdentifierDeclType	dvo 
>2250	IfStatement	if ( cfg_ . VisualizationRequired ( ) )
>2251	ElseStatement	else
>2252	CompoundStatement	 
>2253	ExpressionStatement	 
>2254	AssignmentExpr	visualizer = new dvo 
>2255	UnaryExpression	new dvo 
>2256	Identifier	visualizer
>2257	CompoundStatement	 
>2258	IfStatement	if ( cfg_ . RenderVideo )
>2259	CompoundStatement	 
>2260	ExpressionStatement	 
>2261	CallExpression	( ( dvo 
>2262	ArgumentList	1280
>2263	Argument	960
>2264	PrimaryExpression	960
>2265	Argument	1280
>2266	PrimaryExpression	1280
>2267	Callee	( ( dvo 
>2268	PtrMemberAccess	( ( dvo 
>2269	Identifier	SetSize
>2270	CallExpression	( ( dvo 
>2271	ArgumentList	 
>2272	Callee	( ( dvo 
>2273	MemberAccess	( ( dvo 
>2274	Identifier	getRenderWindow
>2275	CallExpression	( ( dvo 
>2276	ArgumentList	 
>2277	Callee	( ( dvo 
>2278	PtrMemberAccess	( ( dvo 
>2279	Identifier	visualizer
>2280	CastExpression	( dvo 
>2281	Identifier	visualizer
>2282	CastTarget	dvo 
>2283	ExpressionStatement	 
>2284	CallExpression	( ( dvo 
>2285	ArgumentList	load_camera_pose_
>2286	Argument	\"l\"
>2287	PrimaryExpression	\"l\"
>2288	Argument	load_camera_pose_
>2289	Identifier	load_camera_pose_
>2290	Callee	( ( dvo 
>2291	PtrMemberAccess	( ( dvo 
>2292	Identifier	bindSwitchToKey
>2293	CastExpression	( dvo 
>2294	Identifier	visualizer
>2295	CastTarget	dvo 
>2296	Condition	 
>2297	MemberAccess	cfg_ . RenderVideo
>2298	Identifier	RenderVideo
>2299	Identifier	cfg_
>2300	ExpressionStatement	 
>2301	CallExpression	( ( dvo 
>2302	ArgumentList	dump_camera_pose_
>2303	Argument	\"s\"
>2304	PrimaryExpression	\"s\"
>2305	Argument	dump_camera_pose_
>2306	Identifier	dump_camera_pose_
>2307	Callee	( ( dvo 
>2308	PtrMemberAccess	( ( dvo 
>2309	Identifier	bindSwitchToKey
>2310	CastExpression	( dvo 
>2311	Identifier	visualizer
>2312	CastTarget	dvo 
>2313	ExpressionStatement	 
>2314	CallExpression	( ( dvo 
>2315	ArgumentList	pause_switch
>2316	Argument	\"p\"
>2317	PrimaryExpression	\"p\"
>2318	Argument	pause_switch
>2319	Identifier	pause_switch
>2320	Callee	( ( dvo 
>2321	PtrMemberAccess	( ( dvo 
>2322	Identifier	bindSwitchToKey
>2323	CastExpression	( dvo 
>2324	Identifier	visualizer
>2325	CastTarget	dvo 
>2326	ExpressionStatement	 
>2327	AssignmentExpr	visualizer = new dvo 
>2328	UnaryOp	! cfg_ . RenderVideo
>2329	MemberAccess	cfg_ . RenderVideo
>2330	Identifier	RenderVideo
>2331	Identifier	cfg_
>2332	UnaryOperator	!
>2333	Identifier	visualizer
>2334	Condition	 
>2335	CallExpression	cfg_ . VisualizationRequired ( )
>2336	ArgumentList	 
>2337	Callee	cfg_ . VisualizationRequired
>2338	MemberAccess	cfg_ . VisualizationRequired
>2339	Identifier	VisualizationRequired
>2340	Identifier	cfg_
>2341	IdentifierDeclStatement	 
>2342	IdentifierDecl	* visualizer
>2343	Identifier	visualizer
>2344	IdentifierDeclType	dvo 
>2345	IdentifierDeclStatement	 
>2346	IdentifierDecl	dummy_switch ( true )
>2347	Identifier	true
>2348	Identifier	dummy_switch
>2349	IdentifierDeclType	dvo 
>2350	IdentifierDecl	pause_switch ( true )
>2351	Identifier	true
>2352	Identifier	pause_switch
>2353	IdentifierDeclType	dvo 
>2440	FunctionDef	main (int argc , char * * argv)
>2441	ParameterList	int argc , char * * argv
>2442	Parameter	 
>2443	Identifier	argv
>2444	ParameterType	char * *
>2445	Parameter	 
>2446	Identifier	argc
>2447	ParameterType	int
>2448	ReturnType	int
>2449	CompoundStatement	 
>2450	ReturnStatement	 
>2451	PrimaryExpression	0
>2452	IfStatement	if ( benchmark . configure ( ) )
>2453	CompoundStatement	 
>2454	ExpressionStatement	 
>2455	CallExpression	benchmark . run ( )
>2456	ArgumentList	 
>2457	Callee	benchmark . run
>2458	MemberAccess	benchmark . run
>2459	Identifier	run
>2460	Identifier	benchmark
>2461	Condition	 
>2462	CallExpression	benchmark . configure ( )
>2463	ArgumentList	 
>2464	Callee	benchmark . configure
>2465	MemberAccess	benchmark . configure
>2466	Identifier	configure
>2467	Identifier	benchmark
>2468	IdentifierDeclStatement	 
>2469	IdentifierDecl	benchmark ( nh , nh_private )
>2470	Expression	nh , nh_private
>2471	Identifier	nh_private
>2472	Identifier	nh
>2473	Identifier	benchmark
>2474	IdentifierDeclType	BenchmarkNode
>2475	IdentifierDeclStatement	 
>2476	IdentifierDecl	nh_private ( \"~\" )
>2477	PrimaryExpression	\"~\"
>2478	Identifier	nh_private
>2479	IdentifierDeclType	ros 
>2480	IdentifierDeclStatement	 
>2481	IdentifierDecl	nh
>2482	Identifier	nh
>2483	IdentifierDeclType	ros 
>2484	ExpressionStatement	 
>2485	CallExpression	ros 
>2486	ArgumentList	argc
>2487	Argument	ros 
>2488	Identifier	ros 
>2489	Argument	\"benchmark\"
>2490	PrimaryExpression	\"benchmark\"
>2491	Argument	argv
>2492	Identifier	argv
>2493	Argument	argc
>2494	Identifier	argc
>2495	Callee	ros 
>2496	Identifier	ros 
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=166,159,148,135,75,45,38,15,13
<13=14
<15=36,16
<16=17
<17=32,18
<18=21,19
<19=20
<21=22
<22=24,23
<24=28,25
<25=26
<26=27
<28=29
<29=31,30
<32=33
<33=35,34
<36=37
<38=39
<39=44,43,40
<40=42,41
<45=66,52,46
<46=47
<47=48
<48=49
<49=51,50
<52=53
<53=54
<54=64,55
<55=62,60,56
<56=57
<57=59,58
<60=61
<62=63
<64=65
<66=67
<67=69,68
<69=71,70
<71=72
<72=74,73
<75=126,82,76
<76=77
<77=78
<78=79
<79=81,80
<82=94,83
<83=84
<84=90,85
<85=88,86
<86=87
<88=89
<90=91
<91=93,92
<94=117,101,95
<95=96
<96=97
<97=98
<98=100,99
<101=106,102
<102=103
<103=105,104
<106=107
<107=115,108
<108=113,111,109
<109=110
<111=112
<113=114
<115=116
<117=118
<118=120,119
<120=122,121
<122=123
<123=125,124
<126=127
<127=129,128
<129=131,130
<131=132
<132=134,133
<135=136
<136=147,137
<137=145,138
<138=143,139
<139=140
<140=142,141
<143=144
<145=146
<148=149
<149=158,150
<150=156,151
<151=154,152
<152=153
<154=155
<156=157
<159=160
<160=165,164,161
<161=163,162
<166=188,185,182,179,176,173,170,167
<167=169,168
<170=172,171
<173=175,174
<176=178,177
<179=181,180
<182=184,183
<185=187,186
<188=190,189
<267=270,269,268
<270=271
<271=272
<272=274,273
<280=283,282,281
<283=284
<284=285
<285=289,286
<286=288,287
<296=304,297
<297=301,298
<298=300,299
<301=303,302
<310=313,312,311
<313=582,567,490,475,435,415,400,331,316,314
<314=315
<316=317
<317=327,318
<318=325,321,319
<319=320
<321=322
<322=324,323
<325=326
<327=328
<328=330,329
<331=396,332
<332=333
<333=383,344,334
<334=335
<335=338,336
<336=337
<338=339
<339=343,340
<340=342,341
<344=377,370,345
<345=361,346
<346=349,347
<347=348
<349=350
<350=360,351
<351=359,352
<352=356,353
<353=355,354
<356=358,357
<361=362
<362=369,363
<363=365,364
<365=366
<366=368,367
<370=371
<371=373,372
<373=374
<374=376,375
<377=378
<378=382,379
<379=381,380
<383=384
<384=392,385
<385=390,386
<386=387
<387=389,388
<390=391
<392=393
<393=395,394
<396=397
<397=399,398
<400=401
<401=411,402
<402=409,405,403
<403=404
<405=406
<406=408,407
<409=410
<411=412
<412=414,413
<415=416
<416=431,417
<417=429,425,418
<418=419
<419=423,420
<420=421
<421=422
<423=424
<425=426
<426=428,427
<429=430
<431=432
<432=434,433
<435=471,436
<436=437
<437=447,438
<438=441,439
<439=440
<441=442
<442=446,443
<443=445,444
<447=448
<448=457,449
<449=451,450
<451=452
<452=454,453
<454=456,455
<457=470,458
<458=466,459
<459=464,460
<460=461
<461=463,462
<464=465
<466=467
<467=469,468
<471=472
<472=474,473
<475=476
<476=486,477
<477=484,480,478
<478=479
<480=481
<481=483,482
<484=485
<486=487
<487=489,488
<490=563,491
<491=492
<492=539,501,493
<493=494
<494=495
<495=496
<496=500,497
<497=499,498
<501=528,502
<502=521,503
<503=520,518,506,504
<504=505
<506=507
<507=517,508
<508=516,509
<509=513,510
<510=512,511
<513=515,514
<518=519
<521=522
<522=524,523
<524=525
<525=527,526
<528=529
<529=538,530
<530=532,531
<532=533
<533=535,534
<535=537,536
<539=540
<540=551,541
<541=550,542
<542=544,543
<544=545
<545=547,546
<547=549,548
<551=559,552
<552=557,553
<553=554
<554=556,555
<557=558
<559=560
<560=562,561
<563=564
<564=566,565
<567=568
<568=578,569
<569=576,572,570
<570=571
<572=573
<573=575,574
<576=577
<578=579
<579=581,580
<582=632,593,583
<583=584
<584=587,585
<585=586
<587=588
<588=592,589
<589=591,590
<593=626,619,594
<594=610,595
<595=598,596
<596=597
<598=599
<599=609,600
<600=608,601
<601=605,602
<602=604,603
<605=607,606
<610=611
<611=618,612
<612=614,613
<614=615
<615=617,616
<619=620
<620=622,621
<622=623
<623=625,624
<626=627
<627=631,628
<628=630,629
<632=633
<633=641,634
<634=639,635
<635=636
<636=638,637
<639=640
<641=642
<642=644,643
<676=685,684,677
<677=681,678
<678=680,679
<681=683,682
<685=686
<686=740,687
<687=688
<688=728,689
<689=721,690
<690=717,705,691
<691=692
<692=693
<693=694
<694=696,695
<696=697
<697=699,698
<699=703,700
<700=701
<701=702
<703=704
<705=706
<706=707
<707=711,708
<708=709
<709=710
<711=712
<712=714,713
<714=716,715
<717=718
<718=720,719
<721=722
<722=726,723
<723=724
<724=725
<726=727
<728=729
<729=734,730
<730=732,731
<732=733
<734=736,735
<736=737
<737=739,738
<740=741
<741=743,742
<743=744
<744=746,745
<758=764,763,759
<759=760
<760=762,761
<764=765
<765=1167,766
<766=921,767
<767=914,768
<768=776,769
<769=770
<770=772,771
<772=773
<773=775,774
<776=903,785,777
<777=778
<778=779
<779=780
<780=784,781
<781=783,782
<785=891,884,879,867,854,847,846,845,844,843,842,841,840,839,838,837,836,835,829,823,805,791,790,789,788,786
<786=787
<791=792
<792=794,793
<794=795
<795=797,796
<797=799,798
<799=800
<800=802,801
<802=804,803
<805=806
<806=812,807
<807=810,808
<808=809
<810=811
<812=813
<813=815,814
<815=817,816
<817=818
<818=820,819
<820=822,821
<823=824
<824=826,825
<826=828,827
<829=830
<830=832,831
<832=834,833
<847=848
<848=850,849
<850=851
<851=853,852
<854=855
<855=863,856
<856=861,859,857
<857=858
<859=860
<861=862
<863=864
<864=866,865
<867=868
<868=878,877,869
<869=871,870
<871=872
<872=874,873
<874=876,875
<879=880
<880=883,882,881
<884=885
<885=890,889,886
<886=888,887
<891=892
<892=902,893
<893=901,894
<894=898,895
<895=897,896
<898=900,899
<903=904
<904=913,905
<905=907,906
<907=908
<908=910,909
<910=912,911
<914=915
<915=917,916
<917=918
<918=920,919
<921=1160,922
<922=930,923
<923=924
<924=926,925
<926=927
<927=929,928
<930=1149,939,931
<931=932
<932=933
<933=934
<934=938,935
<935=937,936
<939=1137,1133,1117,1105,947,940
<940=941
<941=943,942
<943=944
<944=946,945
<947=948
<948=1104,949
<949=1097,950
<950=1096,951
<951=1089,952
<952=1088,953
<953=1081,954
<954=1080,955
<955=1073,956
<956=1072,957
<957=1065,958
<958=1064,959
<959=1057,960
<960=1056,961
<961=1049,962
<962=1048,963
<963=1041,964
<964=1040,965
<965=1033,966
<966=1032,967
<967=1025,968
<968=1024,969
<969=1017,970
<970=1016,971
<971=1011,972
<972=1010,973
<973=1003,974
<974=1002,975
<975=995,976
<976=994,977
<977=987,978
<978=986,979
<979=981,980
<981=983,982
<983=985,984
<987=989,988
<989=991,990
<991=993,992
<995=997,996
<997=999,998
<999=1001,1000
<1003=1005,1004
<1005=1007,1006
<1007=1009,1008
<1011=1013,1012
<1013=1015,1014
<1017=1019,1018
<1019=1021,1020
<1021=1023,1022
<1025=1027,1026
<1027=1029,1028
<1029=1031,1030
<1033=1035,1034
<1035=1037,1036
<1037=1039,1038
<1041=1043,1042
<1043=1045,1044
<1045=1047,1046
<1049=1051,1050
<1051=1053,1052
<1053=1055,1054
<1057=1059,1058
<1059=1061,1060
<1061=1063,1062
<1065=1067,1066
<1067=1069,1068
<1069=1071,1070
<1073=1075,1074
<1075=1077,1076
<1077=1079,1078
<1081=1083,1082
<1083=1085,1084
<1085=1087,1086
<1089=1091,1090
<1091=1093,1092
<1093=1095,1094
<1097=1099,1098
<1099=1101,1100
<1101=1103,1102
<1105=1106
<1106=1116,1115,1107
<1107=1109,1108
<1109=1110
<1110=1112,1111
<1112=1114,1113
<1117=1118
<1118=1122,1119
<1119=1120
<1120=1121
<1122=1123
<1123=1125,1124
<1125=1127,1126
<1127=1128
<1128=1130,1129
<1130=1132,1131
<1133=1134
<1134=1136,1135
<1137=1138
<1138=1148,1139
<1139=1147,1140
<1140=1144,1141
<1141=1143,1142
<1144=1146,1145
<1149=1150
<1150=1159,1151
<1151=1153,1152
<1153=1154
<1154=1156,1155
<1156=1158,1157
<1160=1161
<1161=1163,1162
<1163=1164
<1164=1166,1165
<1167=1168
<1168=1170,1169
<1170=1171
<1171=1173,1172
<1201=1216,1215,1202
<1202=1212,1209,1206,1203
<1203=1205,1204
<1206=1208,1207
<1209=1211,1210
<1212=1214,1213
<1216=1386,1373,1360,1353,1352,1351,1350,1349,1348,1347,1346,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,1335,1334,1252,1217
<1217=1218
<1218=1220,1219
<1220=1221
<1221=1223,1222
<1223=1231,1224
<1224=1229,1227,1225
<1225=1226
<1227=1228
<1229=1230
<1231=1232
<1232=1234,1233
<1234=1241,1235
<1235=1236
<1236=1237
<1237=1239,1238
<1239=1240
<1241=1242
<1242=1244,1243
<1244=1248,1245
<1245=1246
<1246=1247
<1248=1249
<1249=1251,1250
<1252=1326,1310,1303,1253
<1253=1289,1275,1254
<1254=1255
<1255=1270,1256
<1256=1268,1257
<1257=1266,1258
<1258=1259
<1259=1265,1260
<1260=1262,1261
<1262=1264,1263
<1266=1267
<1268=1269
<1270=1272,1271
<1272=1274,1273
<1275=1276
<1276=1284,1277
<1277=1283,1278
<1278=1280,1279
<1280=1282,1281
<1284=1286,1285
<1286=1288,1287
<1289=1290
<1290=1298,1291
<1291=1297,1292
<1292=1294,1293
<1294=1296,1295
<1298=1300,1299
<1300=1302,1301
<1303=1307,1304
<1304=1306,1305
<1307=1309,1308
<1310=1311
<1311=1325,1312
<1312=1314,1313
<1314=1315
<1315=1317,1316
<1317=1319,1318
<1319=1320
<1320=1322,1321
<1322=1324,1323
<1326=1327
<1327=1328
<1328=1333,1332,1329
<1329=1331,1330
<1353=1354
<1354=1356,1355
<1356=1357
<1357=1359,1358
<1360=1361
<1361=1370,1362
<1362=1364,1363
<1364=1365
<1365=1367,1366
<1367=1369,1368
<1370=1372,1371
<1373=1374
<1374=1383,1375
<1375=1377,1376
<1377=1378
<1378=1380,1379
<1380=1382,1381
<1383=1385,1384
<1386=1387
<1387=1389,1388
<1420=1423,1422,1421
<1423=2345,2341,2250,2236,2210,2192,2182,2173,2163,2154,2141,2134,2127,2077,2048,2044,2035,2028,1433,1424
<1424=1425
<1425=1431,1426
<1426=1429,1427
<1427=1428
<1429=1430
<1431=1432
<1433=2015,2001,1998,1434
<1434=1994,1969,1943,1934,1927,1920,1836,1720,1480,1435
<1435=1476,1436
<1436=1465,1437
<1437=1438
<1438=1454,1439
<1439=1440
<1440=1441
<1441=1448,1442
<1442=1446,1443
<1443=1444
<1444=1445
<1446=1447
<1448=1450,1449
<1450=1451
<1451=1453,1452
<1454=1455
<1455=1457,1456
<1457=1459,1458
<1459=1460
<1460=1462,1461
<1462=1464,1463
<1465=1466
<1466=1470,1467
<1467=1468
<1468=1469
<1470=1471
<1471=1473,1472
<1473=1475,1474
<1476=1477
<1477=1479,1478
<1480=1713,1481
<1481=1712,1705,1698,1680,1673,1667,1558,1482
<1482=1554,1483
<1483=1528,1484
<1484=1485
<1485=1489,1486
<1486=1487
<1487=1488
<1489=1490
<1490=1492,1491
<1492=1507,1493
<1493=1498,1496,1494
<1494=1495
<1496=1497
<1498=1499
<1499=1503,1500
<1500=1501
<1501=1502
<1503=1504
<1504=1506,1505
<1507=1508
<1508=1510,1509
<1510=1517,1511
<1511=1512
<1512=1513
<1513=1515,1514
<1515=1516
<1517=1518
<1518=1520,1519
<1520=1524,1521
<1521=1522
<1522=1523
<1524=1525
<1525=1527,1526
<1528=1529
<1529=1533,1530
<1530=1531
<1531=1532
<1533=1534
<1534=1536,1535
<1536=1543,1537
<1537=1538
<1538=1539
<1539=1541,1540
<1541=1542
<1543=1544
<1544=1546,1545
<1546=1550,1547
<1547=1548
<1548=1549
<1550=1551
<1551=1553,1552
<1554=1555
<1555=1557,1556
<1558=1663,1559
<1559=1653,1560
<1560=1561
<1561=1650,1562
<1562=1644,1563
<1563=1643,1564
<1564=1632,1565
<1565=1631,1566
<1566=1620,1567
<1567=1619,1568
<1568=1608,1569
<1569=1607,1570
<1570=1601,1571
<1571=1600,1572
<1572=1594,1573
<1573=1593,1574
<1574=1587,1575
<1575=1586,1576
<1576=1580,1577
<1577=1579,1578
<1580=1582,1581
<1582=1583
<1583=1585,1584
<1587=1589,1588
<1589=1590
<1590=1592,1591
<1594=1596,1595
<1596=1597
<1597=1599,1598
<1601=1603,1602
<1603=1604
<1604=1606,1605
<1608=1612,1609
<1609=1610
<1610=1611
<1612=1613
<1613=1615,1614
<1615=1616
<1616=1618,1617
<1620=1624,1621
<1621=1622
<1622=1623
<1624=1625
<1625=1627,1626
<1627=1628
<1628=1630,1629
<1632=1636,1633
<1633=1634
<1634=1635
<1636=1637
<1637=1639,1638
<1639=1640
<1640=1642,1641
<1644=1646,1645
<1646=1647
<1647=1649,1648
<1650=1652,1651
<1653=1654
<1654=1662,1661,1655
<1655=1657,1656
<1657=1658
<1658=1660,1659
<1663=1664
<1664=1666,1665
<1667=1668
<1668=1672,1669
<1669=1671,1670
<1673=1674
<1674=1676,1675
<1676=1677
<1677=1679,1678
<1680=1681
<1681=1682
<1682=1694,1683
<1683=1690,1686,1684
<1684=1685
<1686=1687
<1687=1689,1688
<1690=1691
<1691=1693,1692
<1694=1695
<1695=1697,1696
<1698=1699
<1699=1701,1700
<1701=1702
<1702=1704,1703
<1705=1706
<1706=1711,1710,1707
<1707=1709,1708
<1713=1714
<1714=1716,1715
<1716=1717
<1717=1719,1718
<1720=1832,1721
<1721=1828,1812,1798,1772,1722
<1722=1723
<1723=1733,1724
<1724=1725
<1725=1726
<1726=1729,1728,1727
<1729=1730
<1730=1732,1731
<1733=1734
<1734=1736,1735
<1736=1751,1737
<1737=1742,1740,1738
<1738=1739
<1740=1741
<1742=1743
<1743=1747,1744
<1744=1745
<1745=1746
<1747=1748
<1748=1750,1749
<1751=1752
<1752=1754,1753
<1754=1761,1755
<1755=1756
<1756=1757
<1757=1759,1758
<1759=1760
<1761=1762
<1762=1764,1763
<1764=1768,1765
<1765=1766
<1766=1767
<1768=1769
<1769=1771,1770
<1772=1773
<1773=1777,1774
<1774=1775
<1775=1776
<1777=1778
<1778=1780,1779
<1780=1787,1781
<1781=1782
<1782=1783
<1783=1785,1784
<1785=1786
<1787=1788
<1788=1790,1789
<1790=1794,1791
<1791=1792
<1792=1793
<1794=1795
<1795=1797,1796
<1798=1799
<1799=1810,1800
<1800=1803,1801
<1801=1802
<1803=1804
<1804=1806,1805
<1806=1807
<1807=1809,1808
<1810=1811
<1812=1813
<1813=1826,1814
<1814=1822,1815
<1815=1816
<1816=1818,1817
<1818=1819
<1819=1821,1820
<1822=1823
<1823=1825,1824
<1826=1827
<1828=1829
<1829=1831,1830
<1832=1833
<1833=1835,1834
<1836=1868,1853,1837
<1837=1838
<1838=1839
<1839=1840
<1840=1842,1841
<1842=1843
<1843=1845,1844
<1845=1849,1846
<1846=1847
<1847=1848
<1849=1850
<1850=1852,1851
<1853=1854
<1854=1855
<1855=1857,1856
<1857=1858
<1858=1860,1859
<1860=1864,1861
<1861=1862
<1862=1863
<1864=1865
<1865=1867,1866
<1868=1869
<1869=1895,1870
<1870=1872,1871
<1872=1874,1873
<1874=1875
<1875=1877,1876
<1877=1884,1878
<1878=1880,1879
<1880=1881
<1881=1883,1882
<1884=1886,1885
<1886=1887
<1887=1889,1888
<1889=1891,1890
<1891=1892
<1892=1894,1893
<1895=1897,1896
<1897=1899,1898
<1899=1900
<1900=1902,1901
<1902=1914,1903
<1903=1905,1904
<1905=1906
<1906=1908,1907
<1908=1910,1909
<1910=1911
<1911=1913,1912
<1914=1916,1915
<1916=1917
<1917=1919,1918
<1920=1923,1921
<1921=1922
<1923=1924
<1924=1926,1925
<1927=1928
<1928=1932,1929
<1929=1930
<1930=1931
<1932=1933
<1934=1935
<1935=1941,1936
<1936=1939,1937
<1937=1938
<1939=1940
<1941=1942
<1943=1965,1944
<1944=1945
<1945=1946
<1946=1963,1947
<1947=1961,1952,1950,1948
<1948=1949
<1950=1951
<1952=1953
<1953=1957,1954
<1954=1955
<1955=1956
<1957=1958
<1958=1960,1959
<1961=1962
<1963=1964
<1965=1966
<1966=1968,1967
<1969=1970
<1970=1993,1971
<1971=1991,1972
<1972=1982,1973
<1973=1974
<1974=1981,1975
<1975=1977,1976
<1977=1978
<1978=1980,1979
<1982=1983
<1983=1990,1984
<1984=1986,1985
<1986=1987
<1987=1989,1988
<1991=1992
<1994=1995
<1995=1997,1996
<1998=2000,1999
<2001=2002
<2002=2011,2003
<2003=2010,2004
<2004=2006,2005
<2006=2007
<2007=2009,2008
<2011=2013,2012
<2013=2014
<2015=2016
<2016=2017
<2017=2027,2026,2018
<2018=2025,2019
<2019=2021,2020
<2021=2022
<2022=2024,2023
<2028=2032,2029
<2029=2031,2030
<2032=2034,2033
<2035=2036
<2036=2040,2037
<2037=2038
<2038=2039
<2040=2041
<2041=2043,2042
<2044=2045
<2045=2047,2046
<2048=2049
<2049=2076,2075,2050
<2050=2074,2051
<2051=2068,2052
<2052=2066,2053
<2053=2054
<2054=2056,2055
<2056=2060,2057
<2057=2058
<2058=2059
<2060=2061
<2061=2063,2062
<2063=2065,2064
<2066=2067
<2068=2069
<2069=2071,2070
<2071=2073,2072
<2077=2123,2087,2078
<2078=2079
<2079=2080
<2080=2081
<2081=2083,2082
<2083=2084
<2084=2086,2085
<2087=2102,2088
<2088=2089
<2089=2100,2090
<2090=2093,2091
<2091=2092
<2093=2094
<2094=2096,2095
<2096=2097
<2097=2099,2098
<2100=2101
<2102=2103
<2103=2121,2104
<2104=2117,2105
<2105=2106
<2106=2108,2107
<2108=2109
<2109=2111,2110
<2111=2113,2112
<2113=2114
<2114=2116,2115
<2117=2118
<2118=2120,2119
<2121=2122
<2123=2124
<2124=2126,2125
<2127=2131,2128
<2128=2130,2129
<2131=2133,2132
<2134=2135
<2135=2140,2139,2136
<2136=2138,2137
<2141=2142
<2142=2152,2143
<2143=2150,2144
<2144=2145
<2145=2149,2146
<2146=2148,2147
<2150=2151
<2152=2153
<2154=2155
<2155=2161,2156
<2156=2159,2157
<2157=2158
<2159=2160
<2161=2162
<2163=2164
<2164=2172,2171,2165
<2165=2170,2166
<2166=2168,2167
<2168=2169
<2173=2174
<2174=2178,2175
<2175=2176
<2176=2177
<2178=2179
<2179=2181,2180
<2182=2183
<2183=2191,2190,2184
<2184=2189,2185
<2185=2187,2186
<2187=2188
<2192=2193
<2193=2209,2208,2194
<2194=2207,2195
<2195=2205,2196
<2196=2203,2201,2199,2197
<2197=2198
<2199=2200
<2201=2202
<2203=2204
<2205=2206
<2210=2211
<2211=2215,2212
<2212=2213
<2213=2214
<2215=2216
<2216=2218,2217
<2218=2222,2219
<2219=2220
<2220=2221
<2222=2223
<2223=2225,2224
<2225=2229,2226
<2226=2227
<2227=2228
<2229=2230
<2230=2232,2231
<2232=2234,2233
<2234=2235
<2236=2237
<2237=2249,2248,2238
<2238=2245,2239
<2239=2243,2240
<2240=2241
<2241=2242
<2243=2244
<2245=2247,2246
<2250=2334,2257,2251
<2251=2252
<2252=2253
<2253=2254
<2254=2256,2255
<2257=2326,2313,2300,2258
<2258=2296,2259
<2259=2283,2260
<2260=2261
<2261=2267,2262
<2262=2265,2263
<2263=2264
<2265=2266
<2267=2268
<2268=2270,2269
<2270=2272,2271
<2272=2273
<2273=2275,2274
<2275=2277,2276
<2277=2278
<2278=2280,2279
<2280=2282,2281
<2283=2284
<2284=2290,2285
<2285=2288,2286
<2286=2287
<2288=2289
<2290=2291
<2291=2293,2292
<2293=2295,2294
<2296=2297
<2297=2299,2298
<2300=2301
<2301=2307,2302
<2302=2305,2303
<2303=2304
<2305=2306
<2307=2308
<2308=2310,2309
<2310=2312,2311
<2313=2314
<2314=2320,2315
<2315=2318,2316
<2316=2317
<2318=2319
<2320=2321
<2321=2323,2322
<2323=2325,2324
<2326=2327
<2327=2333,2328
<2328=2332,2329
<2329=2331,2330
<2334=2335
<2335=2337,2336
<2337=2338
<2338=2340,2339
<2341=2342
<2342=2344,2343
<2345=2350,2346
<2346=2349,2348,2347
<2350=2353,2352,2351
<2440=2449,2448,2441
<2441=2445,2442
<2442=2444,2443
<2445=2447,2446
<2449=2484,2480,2475,2468,2452,2450
<2450=2451
<2452=2461,2453
<2453=2454
<2454=2455
<2455=2457,2456
<2457=2458
<2458=2460,2459
<2461=2462
<2462=2464,2463
<2464=2465
<2465=2467,2466
<2468=2469
<2469=2474,2473,2470
<2470=2472,2471
<2475=2476
<2476=2479,2478,2477
<2480=2481
<2481=2483,2482
<2484=2485
<2485=2495,2486
<2486=2493,2491,2489,2487
<2487=2488
<2489=2490
<2491=2492
<2493=2494
<2495=2496
