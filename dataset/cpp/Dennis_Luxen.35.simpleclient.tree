>3	FunctionDef	main (int argc , const char * argv [ ])
>4	ParameterList	int argc , const char * argv [ ]
>5	Parameter	 
>6	Identifier	argv
>7	ParameterType	const char * [ ]
>8	Parameter	 
>9	Identifier	argc
>10	ParameterType	int
>11	ReturnType	int
>12	CompoundStatement	 
>13	ReturnStatement	 
>14	PrimaryExpression	0
>15	BlockStarter	 
>16	CompoundStatement	 
>17	ReturnStatement	return - 1 ;
>18	UnaryOp	- 1
>19	PrimaryExpression	1
>20	UnaryOperator	-
>21	ExpressionStatement	SimpleLogger ( ) . Write ( logWARNING ) << \"caught exception
>22	ShiftExpression	SimpleLogger ( ) . Write ( logWARNING ) << \"caught exception
>23	ShiftExpression	\"caught exception
>24	CallExpression	current_exception . what ( )
>25	ArgumentList	 
>26	Callee	current_exception . what
>27	MemberAccess	current_exception . what
>28	Identifier	what
>29	Identifier	current_exception
>30	PrimaryExpression	\"caught exception
>31	CallExpression	SimpleLogger ( ) . Write ( logWARNING )
>32	ArgumentList	logWARNING
>33	Argument	logWARNING
>34	Identifier	logWARNING
>35	Callee	SimpleLogger ( ) . Write
>36	MemberAccess	SimpleLogger ( ) . Write
>37	Identifier	Write
>38	CallExpression	SimpleLogger ( )
>39	ArgumentList	 
>40	Callee	SimpleLogger
>41	Identifier	SimpleLogger
>42	Identifier	current_exception
>43	BlockStarter	 
>44	CompoundStatement	 
>45	ExpressionStatement	osrm 
>46	CallExpression	osrm 
>47	ArgumentList	SimpleLogger ( ) . Write ( )
>48	Argument	json_result
>49	Identifier	json_result
>50	Argument	SimpleLogger ( ) . Write ( )
>51	CallExpression	SimpleLogger ( ) . Write ( )
>52	ArgumentList	 
>53	Callee	SimpleLogger ( ) . Write
>54	MemberAccess	SimpleLogger ( ) . Write
>55	Identifier	Write
>56	CallExpression	SimpleLogger ( )
>57	ArgumentList	 
>58	Callee	SimpleLogger
>59	Identifier	SimpleLogger
>60	Callee	osrm 
>61	Identifier	osrm 
>62	ExpressionStatement	SimpleLogger ( ) . Write ( ) << \"http code
>63	ShiftExpression	SimpleLogger ( ) . Write ( ) << \"http code
>64	ShiftExpression	\"http code
>65	Identifier	result_code
>66	PrimaryExpression	\"http code
>67	CallExpression	SimpleLogger ( ) . Write ( )
>68	ArgumentList	 
>69	Callee	SimpleLogger ( ) . Write
>70	MemberAccess	SimpleLogger ( ) . Write
>71	Identifier	Write
>72	CallExpression	SimpleLogger ( )
>73	ArgumentList	 
>74	Callee	SimpleLogger
>75	Identifier	SimpleLogger
>76	IdentifierDeclStatement	const int result_code = routing_machine . RunQuery ( route_parameters , json_result ) ;
>77	IdentifierDecl	result_code = routing_machine . RunQuery ( route_parameters , json_result )
>78	AssignmentExpr	result_code = routing_machine . RunQuery ( route_parameters , json_result )
>79	CallExpression	routing_machine . RunQuery ( route_parameters , json_result )
>80	ArgumentList	route_parameters
>81	Argument	json_result
>82	Identifier	json_result
>83	Argument	route_parameters
>84	Identifier	route_parameters
>85	Callee	routing_machine . RunQuery
>86	MemberAccess	routing_machine . RunQuery
>87	Identifier	RunQuery
>88	Identifier	routing_machine
>89	Identifier	result_code
>90	Identifier	result_code
>91	IdentifierDeclType	const int
>92	IdentifierDeclStatement	osrm 
>93	IdentifierDecl	json_result
>94	Identifier	json_result
>95	IdentifierDeclType	osrm 
>96	ExpressionStatement	route_parameters . coordinates . emplace_back ( 52.513191 * COORDINATE_PRECISION , 13.415852 * COORDINATE_PRECISION )
>97	CallExpression	route_parameters . coordinates . emplace_back ( 52.513191 * COORDINATE_PRECISION , 13.415852 * COORDINATE_PRECISION )
>98	ArgumentList	52.513191 * COORDINATE_PRECISION
>99	Argument	13.415852 * COORDINATE_PRECISION
>100	MultiplicativeExpression	13.415852 * COORDINATE_PRECISION
>101	Identifier	COORDINATE_PRECISION
>102	PrimaryExpression	13.415852
>103	Argument	52.513191 * COORDINATE_PRECISION
>104	MultiplicativeExpression	52.513191 * COORDINATE_PRECISION
>105	Identifier	COORDINATE_PRECISION
>106	PrimaryExpression	52.513191
>107	Callee	route_parameters . coordinates . emplace_back
>108	MemberAccess	route_parameters . coordinates . emplace_back
>109	Identifier	emplace_back
>110	MemberAccess	route_parameters . coordinates
>111	Identifier	coordinates
>112	Identifier	route_parameters
>113	ExpressionStatement	route_parameters . coordinates . emplace_back ( 52.519930 * COORDINATE_PRECISION , 13.438640 * COORDINATE_PRECISION )
>114	CallExpression	route_parameters . coordinates . emplace_back ( 52.519930 * COORDINATE_PRECISION , 13.438640 * COORDINATE_PRECISION )
>115	ArgumentList	52.519930 * COORDINATE_PRECISION
>116	Argument	13.438640 * COORDINATE_PRECISION
>117	MultiplicativeExpression	13.438640 * COORDINATE_PRECISION
>118	Identifier	COORDINATE_PRECISION
>119	PrimaryExpression	13.438640
>120	Argument	52.519930 * COORDINATE_PRECISION
>121	MultiplicativeExpression	52.519930 * COORDINATE_PRECISION
>122	Identifier	COORDINATE_PRECISION
>123	PrimaryExpression	52.519930
>124	Callee	route_parameters . coordinates . emplace_back
>125	MemberAccess	route_parameters . coordinates . emplace_back
>126	Identifier	emplace_back
>127	MemberAccess	route_parameters . coordinates
>128	Identifier	coordinates
>129	Identifier	route_parameters
>130	ExpressionStatement	route_parameters . language = \"\"
>131	AssignmentExpr	route_parameters . language = \"\"
>132	PrimaryExpression	\"\"
>133	MemberAccess	route_parameters . language
>134	Identifier	language
>135	Identifier	route_parameters
>136	ExpressionStatement	route_parameters . jsonp_parameter = \"\"
>137	AssignmentExpr	route_parameters . jsonp_parameter = \"\"
>138	PrimaryExpression	\"\"
>139	MemberAccess	route_parameters . jsonp_parameter
>140	Identifier	jsonp_parameter
>141	Identifier	route_parameters
>142	ExpressionStatement	route_parameters . output_format = \"json\"
>143	AssignmentExpr	route_parameters . output_format = \"json\"
>144	PrimaryExpression	\"json\"
>145	MemberAccess	route_parameters . output_format
>146	Identifier	output_format
>147	Identifier	route_parameters
>148	ExpressionStatement	route_parameters . service = \"viaroute\"
>149	AssignmentExpr	route_parameters . service = \"viaroute\"
>150	PrimaryExpression	\"viaroute\"
>151	MemberAccess	route_parameters . service
>152	Identifier	service
>153	Identifier	route_parameters
>154	ExpressionStatement	route_parameters . check_sum = - 1
>155	AssignmentExpr	route_parameters . check_sum = - 1
>156	UnaryOp	- 1
>157	PrimaryExpression	1
>158	UnaryOperator	-
>159	MemberAccess	route_parameters . check_sum
>160	Identifier	check_sum
>161	Identifier	route_parameters
>162	ExpressionStatement	route_parameters . compression = true
>163	AssignmentExpr	route_parameters . compression = true
>164	Identifier	true
>165	MemberAccess	route_parameters . compression
>166	Identifier	compression
>167	Identifier	route_parameters
>168	ExpressionStatement	route_parameters . geometry = true
>169	AssignmentExpr	route_parameters . geometry = true
>170	Identifier	true
>171	MemberAccess	route_parameters . geometry
>172	Identifier	geometry
>173	Identifier	route_parameters
>174	ExpressionStatement	route_parameters . alternate_route = true
>175	AssignmentExpr	route_parameters . alternate_route = true
>176	Identifier	true
>177	MemberAccess	route_parameters . alternate_route
>178	Identifier	alternate_route
>179	Identifier	route_parameters
>180	ExpressionStatement	route_parameters . print_instructions = true
>181	AssignmentExpr	route_parameters . print_instructions = true
>182	Identifier	true
>183	MemberAccess	route_parameters . print_instructions
>184	Identifier	print_instructions
>185	Identifier	route_parameters
>186	ExpressionStatement	route_parameters . zoom_level = 18
>187	AssignmentExpr	route_parameters . zoom_level = 18
>188	PrimaryExpression	18
>189	MemberAccess	route_parameters . zoom_level
>190	Identifier	zoom_level
>191	Identifier	route_parameters
>192	IdentifierDeclStatement	RouteParameters route_parameters ;
>193	IdentifierDecl	route_parameters
>194	Identifier	route_parameters
>195	IdentifierDeclType	RouteParameters
>196	IdentifierDeclStatement	OSRM routing_machine ( lib_config ) ;
>197	IdentifierDecl	routing_machine ( lib_config )
>198	Identifier	lib_config
>199	Identifier	routing_machine
>200	IdentifierDeclType	OSRM
>201	ExpressionStatement	SimpleLogger ( ) . Write ( ) << \"starting up engines, \" << g_GIT_DESCRIPTION
>202	ShiftExpression	SimpleLogger ( ) . Write ( ) << \"starting up engines, \" << g_GIT_DESCRIPTION
>203	ShiftExpression	\"starting up engines, \" << g_GIT_DESCRIPTION
>204	Identifier	g_GIT_DESCRIPTION
>205	PrimaryExpression	\"starting up engines, \"
>206	CallExpression	SimpleLogger ( ) . Write ( )
>207	ArgumentList	 
>208	Callee	SimpleLogger ( ) . Write
>209	MemberAccess	SimpleLogger ( ) . Write
>210	Identifier	Write
>211	CallExpression	SimpleLogger ( )
>212	ArgumentList	 
>213	Callee	SimpleLogger
>214	Identifier	SimpleLogger
>215	IfStatement	if ( init_result == INIT_FAILED )
>216	CompoundStatement	 
>217	ReturnStatement	return 1 ;
>218	PrimaryExpression	1
>219	Condition	init_result == INIT_FAILED
>220	EqualityExpression	init_result == INIT_FAILED
>221	Identifier	INIT_FAILED
>222	Identifier	init_result
>223	IfStatement	if ( init_result == INIT_OK_DO_NOT_START_ENGINE )
>224	CompoundStatement	 
>225	ReturnStatement	return 0 ;
>226	PrimaryExpression	0
>227	Condition	init_result == INIT_OK_DO_NOT_START_ENGINE
>228	EqualityExpression	init_result == INIT_OK_DO_NOT_START_ENGINE
>229	Identifier	INIT_OK_DO_NOT_START_ENGINE
>230	Identifier	init_result
>231	IdentifierDeclStatement	unsigned init_result = GenerateServerProgramOptions ( argc , argv , lib_config . server_paths , ip_address , ip_\
>232	IdentifierDecl	init_result = GenerateServerProgramOptions ( argc , argv , lib_config . server_paths , ip_address , ip_port , requested_\
>233	AssignmentExpr	init_result = GenerateServerProgramOptions ( argc , argv , lib_config . server_paths , ip_address , ip_\
>234	CallExpression	GenerateServerProgramOptions ( argc , argv , lib_config . server_paths , ip_address , ip_port , requested_thread_\
>235	ArgumentList	argc
>236	Argument	max_locations_map_matching
>237	Identifier	max_locations_map_matching
>238	Argument	lib_config . max_locations_distance_table
>239	MemberAccess	lib_config . max_locations_distance_table
>240	Identifier	max_locations_distance_table
>241	Identifier	lib_config
>242	Argument	trial_run
>243	Identifier	trial_run
>244	Argument	lib_config . use_shared_memory
>245	MemberAccess	lib_config . use_shared_memory
>246	Identifier	use_shared_memory
>247	Identifier	lib_config
>248	Argument	requested_thread_num
>249	Identifier	requested_thread_num
>250	Argument	ip_port
>251	Identifier	ip_port
>252	Argument	ip_address
>253	Identifier	ip_address
>254	Argument	lib_config . server_paths
>255	MemberAccess	lib_config . server_paths
>256	Identifier	server_paths
>257	Identifier	lib_config
>258	Argument	argv
>259	Identifier	argv
>260	Argument	argc
>261	Identifier	argc
>262	Callee	GenerateServerProgramOptions
>263	Identifier	GenerateServerProgramOptions
>264	Identifier	init_result
>265	Identifier	init_result
>266	IdentifierDeclType	unsigned
>267	Statement	const
>268	IdentifierDeclStatement	libosrm_config lib_config ;
>269	IdentifierDecl	lib_config
>270	Identifier	lib_config
>271	IdentifierDeclType	libosrm_config
>272	IdentifierDeclStatement	bool trial_run = false ;
>273	IdentifierDecl	trial_run = false
>274	AssignmentExpr	trial_run = false
>275	Identifier	false
>276	Identifier	false
>277	Identifier	trial_run
>278	IdentifierDeclType	bool
>279	IdentifierDeclStatement	int ip_port , requested_thread_num , max_locations_map_matching ;
>280	IdentifierDecl	max_locations_map_matching
>281	Identifier	max_locations_map_matching
>282	IdentifierDeclType	int
>283	IdentifierDecl	requested_thread_num
>284	Identifier	requested_thread_num
>285	IdentifierDeclType	int
>286	IdentifierDecl	ip_port
>287	Identifier	ip_port
>288	IdentifierDeclType	int
>289	IdentifierDeclStatement	std 
>290	IdentifierDecl	ip_address
>291	Identifier	ip_address
>292	IdentifierDeclType	std 
>293	ExpressionStatement	 
>294	CallExpression	LogPolicy 
>295	ArgumentList	 
>296	Callee	LogPolicy 
>297	MemberAccess	LogPolicy 
>298	Identifier	Unmute
>299	CallExpression	LogPolicy 
>300	ArgumentList	 
>301	Callee	LogPolicy 
>302	Identifier	LogPolicy 
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=293,43,15,13
<13=14
<15=42,16
<16=21,17
<17=18
<18=20,19
<21=22
<22=31,23
<23=30,24
<24=26,25
<26=27
<27=29,28
<31=35,32
<32=33
<33=34
<35=36
<36=38,37
<38=40,39
<40=41
<43=44
<44=289,279,272,268,267,231,223,215,201,196,192,186,180,174,168,162,154,148,142,136,130,113,96,92,76,62,45
<45=46
<46=60,47
<47=50,48
<48=49
<50=51
<51=53,52
<53=54
<54=56,55
<56=58,57
<58=59
<60=61
<62=63
<63=67,64
<64=66,65
<67=69,68
<69=70
<70=72,71
<72=74,73
<74=75
<76=77
<77=91,90,78
<78=89,79
<79=85,80
<80=83,81
<81=82
<83=84
<85=86
<86=88,87
<92=93
<93=95,94
<96=97
<97=107,98
<98=103,99
<99=100
<100=102,101
<103=104
<104=106,105
<107=108
<108=110,109
<110=112,111
<113=114
<114=124,115
<115=120,116
<116=117
<117=119,118
<120=121
<121=123,122
<124=125
<125=127,126
<127=129,128
<130=131
<131=133,132
<133=135,134
<136=137
<137=139,138
<139=141,140
<142=143
<143=145,144
<145=147,146
<148=149
<149=151,150
<151=153,152
<154=155
<155=159,156
<156=158,157
<159=161,160
<162=163
<163=165,164
<165=167,166
<168=169
<169=171,170
<171=173,172
<174=175
<175=177,176
<177=179,178
<180=181
<181=183,182
<183=185,184
<186=187
<187=189,188
<189=191,190
<192=193
<193=195,194
<196=197
<197=200,199,198
<201=202
<202=206,203
<203=205,204
<206=208,207
<208=209
<209=211,210
<211=213,212
<213=214
<215=219,216
<216=217
<217=218
<219=220
<220=222,221
<223=227,224
<224=225
<225=226
<227=228
<228=230,229
<231=232
<232=266,265,233
<233=264,234
<234=262,235
<235=260,258,254,252,250,248,244,242,238,236
<236=237
<238=239
<239=241,240
<242=243
<244=245
<245=247,246
<248=249
<250=251
<252=253
<254=255
<255=257,256
<258=259
<260=261
<262=263
<268=269
<269=271,270
<272=273
<273=278,277,274
<274=276,275
<279=286,283,280
<280=282,281
<283=285,284
<286=288,287
<289=290
<290=292,291
<293=294
<294=296,295
<296=297
<297=299,298
<299=301,300
<301=302
