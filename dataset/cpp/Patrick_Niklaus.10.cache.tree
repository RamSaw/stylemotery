>3	FunctionDef	Cache 
>4	ParameterList	const shared_ptr < Configuration > & config
>5	Parameter	 
>6	Identifier	config
>7	ParameterType	const shared_ptr < Configuration > &
>8	ReturnType	include < fstream >
>9	CompoundStatement	 
>14	FunctionDef	Cache 
>15	ParameterList	 
>16	CompoundStatement	 
>17	ExpressionStatement	 
>18	ShiftExpression	log . debugStream ( ) << \"Cache destructed\"
>19	PrimaryExpression	\"Cache destructed\"
>20	CallExpression	log . debugStream ( )
>21	ArgumentList	 
>22	Callee	log . debugStream
>23	MemberAccess	log . debugStream
>24	Identifier	debugStream
>25	Identifier	log
>30	FunctionDef	Cache 
>31	ParameterList	const Tile 
>32	Parameter	 
>33	Identifier	filename
>34	ParameterType	const boost 
>35	Parameter	 
>36	Identifier	image
>37	ParameterType	const Tile 
>38	ReturnType	void
>39	CompoundStatement	 
>40	IfStatement	if ( length == std 
>41	ElseStatement	else
>42	IfStatement	if ( length )
>43	CompoundStatement	 
>44	ExpressionStatement	 
>45	Statement	 
>46	Statement	 
>47	Statement	 
>48	Statement	 
>49	Statement	 
>50	Statement	 
>51	Statement	 
>52	Statement	 
>53	Statement	 
>54	Statement	 
>55	Statement	 
>56	Statement	 
>57	Statement	 
>58	Statement	 
>59	Statement	 
>60	Statement	 
>61	Statement	 
>62	Statement	 
>63	Statement	 
>64	Statement	 
>65	Statement	 
>66	Statement	 
>67	Statement	 
>68	ExpressionStatement	 
>69	CallExpression	image -> resize ( static_cast < std 
>70	ArgumentList	static_cast < std 
>71	Argument	static_cast < std 
>72	RelationalExpression	static_cast < std 
>73	RelationalExpression	std 
>74	Identifier	length
>75	Identifier	std 
>76	Identifier	static_cast
>77	Callee	image -> resize
>78	PtrMemberAccess	image -> resize
>79	Identifier	resize
>80	Identifier	image
>81	ExpressionStatement	 
>82	CallExpression	file . seekg ( 0 , std 
>83	ArgumentList	0
>84	Argument	std 
>85	Identifier	std 
>86	Argument	0
>87	PrimaryExpression	0
>88	Callee	file . seekg
>89	MemberAccess	file . seekg
>90	Identifier	seekg
>91	Identifier	file
>92	Condition	 
>93	Identifier	length
>94	CompoundStatement	 
>95	ExpressionStatement	 
>96	CallExpression	BOOST_THROW_EXCEPTION ( excp 
>97	ArgumentList	excp 
>98	Argument	excp 
>99	ShiftExpression	excp 
>100	CallExpression	excp 
>101	ArgumentList	filename . string ( )
>102	Argument	filename . string ( )
>103	CallExpression	filename . string ( )
>104	ArgumentList	 
>105	Callee	filename . string
>106	MemberAccess	filename . string
>107	Identifier	string
>108	Identifier	filename
>109	Callee	excp 
>110	Identifier	excp 
>111	CallExpression	excp 
>112	ArgumentList	 
>113	Callee	excp 
>114	Identifier	excp 
>115	Callee	BOOST_THROW_EXCEPTION
>116	Identifier	BOOST_THROW_EXCEPTION
>117	Condition	 
>118	OrExpression	length == std 
>119	UnaryOp	! file . is_open ( )
>120	CallExpression	file . is_open ( )
>121	ArgumentList	 
>122	Callee	file . is_open
>123	MemberAccess	file . is_open
>124	Identifier	is_open
>125	Identifier	file
>126	UnaryOperator	!
>127	EqualityExpression	length == std 
>128	CallExpression	std 
>129	ArgumentList	- 1
>130	Argument	- 1
>131	UnaryOp	- 1
>132	PrimaryExpression	1
>133	UnaryOperator	-
>134	Callee	std 
>135	Identifier	std 
>136	Identifier	length
>137	IdentifierDeclStatement	 
>138	IdentifierDecl	length ( file . tellg ( ) )
>139	CallExpression	file . tellg ( )
>140	ArgumentList	 
>141	Callee	file . tellg
>142	MemberAccess	file . tellg
>143	Identifier	tellg
>144	Identifier	file
>145	Identifier	length
>146	IdentifierDeclType	std 
>147	ExpressionStatement	 
>148	CallExpression	file . seekg ( 0 , std 
>149	ArgumentList	0
>150	Argument	std 
>151	Identifier	std 
>152	Argument	0
>153	PrimaryExpression	0
>154	Callee	file . seekg
>155	MemberAccess	file . seekg
>156	Identifier	seekg
>157	Identifier	file
>158	ExpressionStatement	 
>159	CallExpression	file . open ( filename . string ( ) , std 
>160	ArgumentList	filename . string ( )
>161	Argument	std 
>162	InclusiveOrExpression	std 
>163	Identifier	std 
>164	Identifier	std 
>165	Argument	filename . string ( )
>166	CallExpression	filename . string ( )
>167	ArgumentList	 
>168	Callee	filename . string
>169	MemberAccess	filename . string
>170	Identifier	string
>171	Identifier	filename
>172	Callee	file . open
>173	MemberAccess	file . open
>174	Identifier	open
>175	Identifier	file
>176	IdentifierDeclStatement	 
>177	IdentifierDecl	file
>178	Identifier	file
>179	IdentifierDeclType	std 
>198	FunctionDef	Cache 
>199	ParameterList	shared_ptr < Tile > tile , const boost 
>200	Parameter	 
>201	Identifier	filename
>202	ParameterType	const boost 
>203	Parameter	 
>204	Identifier	tile
>205	ParameterType	shared_ptr < Tile >
>206	ReturnType	void
>207	CompoundStatement	 
>208	IfStatement	if ( out . is_open ( ) )
>209	ElseStatement	else
>210	CompoundStatement	 
>211	ExpressionStatement	 
>212	CallExpression	BOOST_THROW_EXCEPTION ( excp 
>213	ArgumentList	excp 
>214	Argument	excp 
>215	ShiftExpression	excp 
>216	CallExpression	excp 
>217	ArgumentList	filename . string ( )
>218	Argument	filename . string ( )
>219	CallExpression	filename . string ( )
>220	ArgumentList	 
>221	Callee	filename . string
>222	MemberAccess	filename . string
>223	Identifier	string
>224	Identifier	filename
>225	Callee	excp 
>226	Identifier	excp 
>227	CallExpression	excp 
>228	ArgumentList	 
>229	Callee	excp 
>230	Identifier	excp 
>231	Callee	BOOST_THROW_EXCEPTION
>232	Identifier	BOOST_THROW_EXCEPTION
>233	CompoundStatement	 
>234	IfStatement	if ( png == 0 )
>235	ElseStatement	else
>236	CompoundStatement	 
>237	ExpressionStatement	 
>238	CallExpression	out . write ( ( const char * ) png -> data ( ) , size )
>239	ArgumentList	( const char * ) png -> data ( )
>240	Argument	size
>241	Identifier	size
>242	Argument	( const char * ) png -> data ( )
>243	CastExpression	( const char * ) png -> data ( )
>244	CallExpression	png -> data ( )
>245	ArgumentList	 
>246	Callee	png -> data
>247	PtrMemberAccess	png -> data
>248	Identifier	data
>249	Identifier	png
>250	CastTarget	const char *
>251	Callee	out . write
>252	MemberAccess	out . write
>253	Identifier	write
>254	Identifier	out
>255	ExpressionStatement	 
>256	AssignmentExpr	size = png -> size ( )
>257	CallExpression	png -> size ( )
>258	ArgumentList	 
>259	Callee	png -> size
>260	PtrMemberAccess	png -> size
>261	Identifier	size
>262	Identifier	png
>263	Identifier	size
>264	Statement	 
>265	CompoundStatement	 
>266	ExpressionStatement	 
>267	CallExpression	BOOST_THROW_EXCEPTION ( excp 
>268	ArgumentList	excp 
>269	Argument	excp 
>270	CallExpression	excp 
>271	ArgumentList	 
>272	Callee	excp 
>273	Identifier	excp 
>274	Callee	BOOST_THROW_EXCEPTION
>275	Identifier	BOOST_THROW_EXCEPTION
>276	ExpressionStatement	 
>277	CallExpression	boost 
>278	ArgumentList	filename
>279	Argument	filename
>280	Identifier	filename
>281	Callee	boost 
>282	Identifier	boost 
>283	ExpressionStatement	 
>284	CallExpression	out . close ( )
>285	ArgumentList	 
>286	Callee	out . close
>287	MemberAccess	out . close
>288	Identifier	close
>289	Identifier	out
>290	Condition	 
>291	EqualityExpression	png == 0
>292	PrimaryExpression	0
>293	Identifier	png
>294	IdentifierDeclStatement	 
>295	IdentifierDecl	png = tile -> getImage ( )
>296	AssignmentExpr	png = tile -> getImage ( )
>297	CallExpression	tile -> getImage ( )
>298	ArgumentList	 
>299	Callee	tile -> getImage
>300	PtrMemberAccess	tile -> getImage
>301	Identifier	getImage
>302	Identifier	tile
>303	Identifier	png
>304	Identifier	png
>305	IdentifierDeclType	Tile 
>306	Condition	 
>307	CallExpression	out . is_open ( )
>308	ArgumentList	 
>309	Callee	out . is_open
>310	MemberAccess	out . is_open
>311	Identifier	is_open
>312	Identifier	out
>313	IdentifierDeclStatement	 
>314	IdentifierDecl	out ( filename . string ( ) , std 
>315	Expression	filename . string ( ) , std 
>316	InclusiveOrExpression	std 
>317	Identifier	std 
>318	Identifier	std 
>319	CallExpression	filename . string ( )
>320	ArgumentList	 
>321	Callee	filename . string
>322	MemberAccess	filename . string
>323	Identifier	string
>324	Identifier	filename
>325	Identifier	out
>326	IdentifierDeclType	std 
>327	ExpressionStatement	 
>328	CallExpression	boost 
>329	ArgumentList	filename . parent_path ( )
>330	Argument	filename . parent_path ( )
>331	CallExpression	filename . parent_path ( )
>332	ArgumentList	 
>333	Callee	filename . parent_path
>334	MemberAccess	filename . parent_path
>335	Identifier	parent_path
>336	Identifier	filename
>337	Callee	boost 
>338	Identifier	boost 
>358	FunctionDef	Cache 
>359	ParameterList	const shared_ptr < TileIdentifier > & ti
>360	Parameter	 
>361	Identifier	ti
>362	ParameterType	const shared_ptr < TileIdentifier > &
>363	ReturnType	const boost 
>364	CompoundStatement	 
>365	ReturnStatement	 
>366	Identifier	file
>367	IdentifierDeclStatement	 
>368	IdentifierDecl	file ( path . str ( ) )
>369	CallExpression	path . str ( )
>370	ArgumentList	 
>371	Callee	path . str
>372	MemberAccess	path . str
>373	Identifier	str
>374	Identifier	path
>375	Identifier	file
>376	IdentifierDeclType	boost 
>377	ExpressionStatement	 
>378	ShiftExpression	path << \".\" << ti -> getImageFormatString ( )
>379	ShiftExpression	\".\" << ti -> getImageFormatString ( )
>380	CallExpression	ti -> getImageFormatString ( )
>381	ArgumentList	 
>382	Callee	ti -> getImageFormatString
>383	PtrMemberAccess	ti -> getImageFormatString
>384	Identifier	getImageFormatString
>385	Identifier	ti
>386	PrimaryExpression	\".\"
>387	Identifier	path
>388	ExpressionStatement	 
>389	ShiftExpression	path << ti -> getY ( )
>390	CallExpression	ti -> getY ( )
>391	ArgumentList	 
>392	Callee	ti -> getY
>393	PtrMemberAccess	ti -> getY
>394	Identifier	getY
>395	Identifier	ti
>396	Identifier	path
>397	ExpressionStatement	 
>398	ShiftExpression	path << ti -> getX ( ) << \"/\"
>399	ShiftExpression	ti -> getX ( ) << \"/\"
>400	PrimaryExpression	\"/\"
>401	CallExpression	ti -> getX ( )
>402	ArgumentList	 
>403	Callee	ti -> getX
>404	PtrMemberAccess	ti -> getX
>405	Identifier	getX
>406	Identifier	ti
>407	Identifier	path
>408	ExpressionStatement	 
>409	ShiftExpression	path << ti -> getZoom ( ) << \"/\"
>410	ShiftExpression	ti -> getZoom ( ) << \"/\"
>411	PrimaryExpression	\"/\"
>412	CallExpression	ti -> getZoom ( )
>413	ArgumentList	 
>414	Callee	ti -> getZoom
>415	PtrMemberAccess	ti -> getZoom
>416	Identifier	getZoom
>417	Identifier	ti
>418	Identifier	path
>419	ExpressionStatement	 
>420	ShiftExpression	path << ti -> getStylesheetPath ( ) << \"/\"
>421	ShiftExpression	ti -> getStylesheetPath ( ) << \"/\"
>422	PrimaryExpression	\"/\"
>423	CallExpression	ti -> getStylesheetPath ( )
>424	ArgumentList	 
>425	Callee	ti -> getStylesheetPath
>426	PtrMemberAccess	ti -> getStylesheetPath
>427	Identifier	getStylesheetPath
>428	Identifier	ti
>429	Identifier	path
>430	ExpressionStatement	 
>431	RelationalExpression	path << Config -> get < string > ( opt 
>432	RelationalExpression	string > ( opt 
>433	ShiftExpression	( opt 
>434	PrimaryExpression	\"/\"
>435	Identifier	opt 
>436	Identifier	string
>437	ShiftExpression	path << Config -> get
>438	PtrMemberAccess	Config -> get
>439	Identifier	get
>440	Identifier	Config
>441	Identifier	path
>442	IdentifierDeclStatement	 
>443	IdentifierDecl	path
>444	Identifier	path
>445	IdentifierDeclType	std 
>453	FunctionDef	Cache 
>454	ParameterList	const shared_ptr < TileIdentifier > & ti
>455	Parameter	 
>456	Identifier	ti
>457	ParameterType	const shared_ptr < TileIdentifier > &
>458	ReturnType	shared_ptr < Tile >
>459	CompoundStatement	 
>460	ReturnStatement	 
>461	Identifier	tile
>462	ExpressionStatement	 
>463	CallExpression	GlobalCacheLock . unlock ( )
>464	ArgumentList	 
>465	Callee	GlobalCacheLock . unlock
>466	MemberAccess	GlobalCacheLock . unlock
>467	Identifier	unlock
>468	Identifier	GlobalCacheLock
>469	WhileStatement	while ( RecentlyUsedList . size ( ) > Config -> get < int > ( opt 
>470	CompoundStatement	 
>471	ExpressionStatement	 
>472	CallExpression	RecentlyUsedList . pop_back ( )
>473	ArgumentList	 
>474	Callee	RecentlyUsedList . pop_back
>475	MemberAccess	RecentlyUsedList . pop_back
>476	Identifier	pop_back
>477	Identifier	RecentlyUsedList
>478	IfStatement	if ( cacheIt != AllCaches . end ( ) )
>479	CompoundStatement	 
>480	ExpressionStatement	 
>481	CallExpression	cacheIt -> second -> erase ( * tileToDelete -> getIdentifier ( ) )
>482	ArgumentList	* tileToDelete -> getIdentifier ( )
>483	Argument	* tileToDelete -> getIdentifier ( )
>484	UnaryOp	* tileToDelete -> getIdentifier ( )
>485	CallExpression	tileToDelete -> getIdentifier ( )
>486	ArgumentList	 
>487	Callee	tileToDelete -> getIdentifier
>488	PtrMemberAccess	tileToDelete -> getIdentifier
>489	Identifier	getIdentifier
>490	Identifier	tileToDelete
>491	UnaryOperator	*
>492	Callee	cacheIt -> second -> erase
>493	PtrMemberAccess	cacheIt -> second -> erase
>494	Identifier	erase
>495	PtrMemberAccess	cacheIt -> second
>496	Identifier	second
>497	Identifier	cacheIt
>498	Condition	 
>499	EqualityExpression	cacheIt != AllCaches . end ( )
>500	CallExpression	AllCaches . end ( )
>501	ArgumentList	 
>502	Callee	AllCaches . end
>503	MemberAccess	AllCaches . end
>504	Identifier	end
>505	Identifier	AllCaches
>506	Identifier	cacheIt
>507	ExpressionStatement	 
>508	AssignmentExpr	cacheIt = AllCaches . find ( tileToDelete -> getIdentifier ( ) -> getStylesheetPath ( ) )
>509	CallExpression	AllCaches . find ( tileToDelete -> getIdentifier ( ) -> getStylesheetPath ( ) )
>510	ArgumentList	tileToDelete -> getIdentifier ( ) -> getStylesheetPath ( )
>511	Argument	tileToDelete -> getIdentifier ( ) -> getStylesheetPath ( )
>512	CallExpression	tileToDelete -> getIdentifier ( ) -> getStylesheetPath ( )
>513	ArgumentList	 
>514	Callee	tileToDelete -> getIdentifier ( ) -> getStylesheetPath
>515	PtrMemberAccess	tileToDelete -> getIdentifier ( ) -> getStylesheetPath
>516	Identifier	getStylesheetPath
>517	CallExpression	tileToDelete -> getIdentifier ( )
>518	ArgumentList	 
>519	Callee	tileToDelete -> getIdentifier
>520	PtrMemberAccess	tileToDelete -> getIdentifier
>521	Identifier	getIdentifier
>522	Identifier	tileToDelete
>523	Callee	AllCaches . find
>524	MemberAccess	AllCaches . find
>525	Identifier	find
>526	Identifier	AllCaches
>527	Identifier	cacheIt
>528	ExpressionStatement	 
>529	ShiftExpression	log << log4cpp 
>530	ShiftExpression	log4cpp 
>531	ShiftExpression	\"Deleting least recently used Tile.\" << * tileToDelete -> getIdentifier ( )
>532	UnaryOp	* tileToDelete -> getIdentifier ( )
>533	CallExpression	tileToDelete -> getIdentifier ( )
>534	ArgumentList	 
>535	Callee	tileToDelete -> getIdentifier
>536	PtrMemberAccess	tileToDelete -> getIdentifier
>537	Identifier	getIdentifier
>538	Identifier	tileToDelete
>539	UnaryOperator	*
>540	PrimaryExpression	\"Deleting least recently used Tile.\"
>541	Identifier	log4cpp 
>542	Identifier	log
>543	IfStatement	if ( tileToDelete -> getIdentifier ( ) -> getZoom ( ) <= Config -> get < int > ( opt 
>544	CompoundStatement	 
>545	BlockStarter	 
>546	CompoundStatement	 
>547	BreakStatement	break ;
>548	ExpressionStatement	RecentlyUsedList . pop_back ( )
>549	CallExpression	RecentlyUsedList . pop_back ( )
>550	ArgumentList	 
>551	Callee	RecentlyUsedList . pop_back
>552	MemberAccess	RecentlyUsedList . pop_back
>553	Identifier	pop_back
>554	Identifier	RecentlyUsedList
>555	IfStatement	if ( cacheIt != AllCaches . end ( ) )
>556	CompoundStatement	 
>557	ExpressionStatement	cacheIt -> second -> insert ( std 
>558	CallExpression	cacheIt -> second -> insert ( std 
>559	ArgumentList	std 
>560	Argument	std 
>561	CallExpression	std 
>562	ArgumentList	* tiToDelete
>563	Argument	CacheElement ( tileToDelete , RecentlyUsedList . begin ( ) )
>564	CallExpression	CacheElement ( tileToDelete , RecentlyUsedList . begin ( ) )
>565	ArgumentList	tileToDelete
>566	Argument	RecentlyUsedList . begin ( )
>567	CallExpression	RecentlyUsedList . begin ( )
>568	ArgumentList	 
>569	Callee	RecentlyUsedList . begin
>570	MemberAccess	RecentlyUsedList . begin
>571	Identifier	begin
>572	Identifier	RecentlyUsedList
>573	Argument	tileToDelete
>574	Identifier	tileToDelete
>575	Callee	CacheElement
>576	Identifier	CacheElement
>577	Argument	* tiToDelete
>578	UnaryOp	* tiToDelete
>579	Identifier	tiToDelete
>580	UnaryOperator	*
>581	Callee	std 
>582	Identifier	std 
>583	Callee	cacheIt -> second -> insert
>584	PtrMemberAccess	cacheIt -> second -> insert
>585	Identifier	insert
>586	PtrMemberAccess	cacheIt -> second
>587	Identifier	second
>588	Identifier	cacheIt
>589	ExpressionStatement	cacheIt -> second -> erase ( * tileToDelete -> getIdentifier ( ) )
>590	CallExpression	cacheIt -> second -> erase ( * tileToDelete -> getIdentifier ( ) )
>591	ArgumentList	* tileToDelete -> getIdentifier ( )
>592	Argument	* tileToDelete -> getIdentifier ( )
>593	UnaryOp	* tileToDelete -> getIdentifier ( )
>594	CallExpression	tileToDelete -> getIdentifier ( )
>595	ArgumentList	 
>596	Callee	tileToDelete -> getIdentifier
>597	PtrMemberAccess	tileToDelete -> getIdentifier
>598	Identifier	getIdentifier
>599	Identifier	tileToDelete
>600	UnaryOperator	*
>601	Callee	cacheIt -> second -> erase
>602	PtrMemberAccess	cacheIt -> second -> erase
>603	Identifier	erase
>604	PtrMemberAccess	cacheIt -> second
>605	Identifier	second
>606	Identifier	cacheIt
>607	Condition	cacheIt != AllCaches . end ( )
>608	EqualityExpression	cacheIt != AllCaches . end ( )
>609	CallExpression	AllCaches . end ( )
>610	ArgumentList	 
>611	Callee	AllCaches . end
>612	MemberAccess	AllCaches . end
>613	Identifier	end
>614	Identifier	AllCaches
>615	Identifier	cacheIt
>616	ExpressionStatement	cacheIt = AllCaches . find ( tileToDelete -> getIdentifier ( ) -> getStylesheetPath ( ) )
>617	AssignmentExpr	cacheIt = AllCaches . find ( tileToDelete -> getIdentifier ( ) -> getStylesheetPath ( ) )
>618	CallExpression	AllCaches . find ( tileToDelete -> getIdentifier ( ) -> getStylesheetPath ( ) )
>619	ArgumentList	tileToDelete -> getIdentifier ( ) -> getStylesheetPath ( )
>620	Argument	tileToDelete -> getIdentifier ( ) -> getStylesheetPath ( )
>621	CallExpression	tileToDelete -> getIdentifier ( ) -> getStylesheetPath ( )
>622	ArgumentList	 
>623	Callee	tileToDelete -> getIdentifier ( ) -> getStylesheetPath
>624	PtrMemberAccess	tileToDelete -> getIdentifier ( ) -> getStylesheetPath
>625	Identifier	getStylesheetPath
>626	CallExpression	tileToDelete -> getIdentifier ( )
>627	ArgumentList	 
>628	Callee	tileToDelete -> getIdentifier
>629	PtrMemberAccess	tileToDelete -> getIdentifier
>630	Identifier	getIdentifier
>631	Identifier	tileToDelete
>632	Callee	AllCaches . find
>633	MemberAccess	AllCaches . find
>634	Identifier	find
>635	Identifier	AllCaches
>636	Identifier	cacheIt
>637	ExpressionStatement	RecentlyUsedList . push_front ( tileToDelete )
>638	CallExpression	RecentlyUsedList . push_front ( tileToDelete )
>639	ArgumentList	tileToDelete
>640	Argument	tileToDelete
>641	Identifier	tileToDelete
>642	Callee	RecentlyUsedList . push_front
>643	MemberAccess	RecentlyUsedList . push_front
>644	Identifier	push_front
>645	Identifier	RecentlyUsedList
>646	ExpressionStatement	log << log4cpp 
>647	ShiftExpression	log << log4cpp 
>648	ShiftExpression	log4cpp 
>649	ShiftExpression	\"WriteFile
>650	UnaryOp	* tile -> getIdentifier ( )
>651	CallExpression	tile -> getIdentifier ( )
>652	ArgumentList	 
>653	Callee	tile -> getIdentifier
>654	PtrMemberAccess	tile -> getIdentifier
>655	Identifier	getIdentifier
>656	Identifier	tile
>657	UnaryOperator	*
>658	PrimaryExpression	\"WriteFile
>659	Identifier	log4cpp 
>660	Identifier	log
>661	BlockStarter	 
>662	CompoundStatement	 
>663	ExpressionStatement	log << log4cpp 
>664	ShiftExpression	log << log4cpp 
>665	ShiftExpression	log4cpp 
>666	ShiftExpression	\"WriteFile
>667	CallExpression	path . string ( )
>668	ArgumentList	 
>669	Callee	path . string
>670	MemberAccess	path . string
>671	Identifier	string
>672	Identifier	path
>673	PrimaryExpression	\"WriteFile
>674	Identifier	log4cpp 
>675	Identifier	log
>676	BlockStarter	 
>677	CompoundStatement	 
>678	ExpressionStatement	writeFile ( tileToDelete , path )
>679	CallExpression	writeFile ( tileToDelete , path )
>680	ArgumentList	tileToDelete
>681	Argument	path
>682	Identifier	path
>683	Argument	tileToDelete
>684	Identifier	tileToDelete
>685	Callee	writeFile
>686	Identifier	writeFile
>687	IdentifierDeclStatement	 
>688	IdentifierDecl	path = getTilePath ( tiToDelete )
>689	AssignmentExpr	path = getTilePath ( tiToDelete )
>690	CallExpression	getTilePath ( tiToDelete )
>691	ArgumentList	tiToDelete
>692	Argument	tiToDelete
>693	Identifier	tiToDelete
>694	Callee	getTilePath
>695	Identifier	getTilePath
>696	Identifier	path
>697	Identifier	path
>698	IdentifierDeclType	boost 
>699	IdentifierDeclStatement	 
>700	IdentifierDecl	tiToDelete = tileToDelete -> getIdentifier ( )
>701	AssignmentExpr	tiToDelete = tileToDelete -> getIdentifier ( )
>702	CallExpression	tileToDelete -> getIdentifier ( )
>703	ArgumentList	 
>704	Callee	tileToDelete -> getIdentifier
>705	PtrMemberAccess	tileToDelete -> getIdentifier
>706	Identifier	getIdentifier
>707	Identifier	tileToDelete
>708	Identifier	tiToDelete
>709	Identifier	tiToDelete
>710	IdentifierDeclType	shared_ptr < TileIdentifier >
>711	Condition	 
>712	RelationalExpression	tileToDelete -> getIdentifier ( ) -> getZoom ( ) <= Config -> get < int > ( opt 
>713	RelationalExpression	Config -> get < int > ( opt 
>714	RelationalExpression	int > ( opt 
>715	Identifier	opt 
>716	Identifier	int
>717	PtrMemberAccess	Config -> get
>718	Identifier	get
>719	Identifier	Config
>720	CallExpression	tileToDelete -> getIdentifier ( ) -> getZoom ( )
>721	ArgumentList	 
>722	Callee	tileToDelete -> getIdentifier ( ) -> getZoom
>723	PtrMemberAccess	tileToDelete -> getIdentifier ( ) -> getZoom
>724	Identifier	getZoom
>725	CallExpression	tileToDelete -> getIdentifier ( )
>726	ArgumentList	 
>727	Callee	tileToDelete -> getIdentifier
>728	PtrMemberAccess	tileToDelete -> getIdentifier
>729	Identifier	getIdentifier
>730	Identifier	tileToDelete
>731	IdentifierDeclStatement	 
>732	IdentifierDecl	tileToDelete = RecentlyUsedList . back ( )
>733	AssignmentExpr	tileToDelete = RecentlyUsedList . back ( )
>734	CallExpression	RecentlyUsedList . back ( )
>735	ArgumentList	 
>736	Callee	RecentlyUsedList . back
>737	MemberAccess	RecentlyUsedList . back
>738	Identifier	back
>739	Identifier	RecentlyUsedList
>740	Identifier	tileToDelete
>741	Identifier	tileToDelete
>742	IdentifierDeclType	shared_ptr < Tile >
>743	Condition	 
>744	RelationalExpression	RecentlyUsedList . size ( ) > Config -> get < int > ( opt 
>745	RelationalExpression	Config -> get < int > ( opt 
>746	RelationalExpression	int > ( opt 
>747	Identifier	opt 
>748	Identifier	int
>749	PtrMemberAccess	Config -> get
>750	Identifier	get
>751	Identifier	Config
>752	CallExpression	RecentlyUsedList . size ( )
>753	ArgumentList	 
>754	Callee	RecentlyUsedList . size
>755	MemberAccess	RecentlyUsedList . size
>756	Identifier	size
>757	Identifier	RecentlyUsedList
>758	IfStatement	if ( tileIt != cache -> end ( ) )
>759	ElseStatement	else
>760	CompoundStatement	 
>761	ExpressionStatement	 
>762	CallExpression	cache -> insert ( std 
>763	ArgumentList	std 
>764	Argument	std 
>765	CallExpression	std 
>766	ArgumentList	* ti
>767	Argument	CacheElement ( tile , RecentlyUsedList . begin ( ) )
>768	CallExpression	CacheElement ( tile , RecentlyUsedList . begin ( ) )
>769	ArgumentList	tile
>770	Argument	RecentlyUsedList . begin ( )
>771	CallExpression	RecentlyUsedList . begin ( )
>772	ArgumentList	 
>773	Callee	RecentlyUsedList . begin
>774	MemberAccess	RecentlyUsedList . begin
>775	Identifier	begin
>776	Identifier	RecentlyUsedList
>777	Argument	tile
>778	Identifier	tile
>779	Callee	CacheElement
>780	Identifier	CacheElement
>781	Argument	* ti
>782	UnaryOp	* ti
>783	Identifier	ti
>784	UnaryOperator	*
>785	Callee	std 
>786	Identifier	std 
>787	Callee	cache -> insert
>788	PtrMemberAccess	cache -> insert
>789	Identifier	insert
>790	Identifier	cache
>791	ExpressionStatement	 
>792	CallExpression	RecentlyUsedList . push_front ( tile )
>793	ArgumentList	tile
>794	Argument	tile
>795	Identifier	tile
>796	Callee	RecentlyUsedList . push_front
>797	MemberAccess	RecentlyUsedList . push_front
>798	Identifier	push_front
>799	Identifier	RecentlyUsedList
>800	IfStatement	if ( ti -> getZoom ( ) <= Config -> get < int > ( opt 
>801	CompoundStatement	 
>802	BlockStarter	 
>803	CompoundStatement	 
>804	ExpressionStatement	log << log4cpp 
>805	ShiftExpression	log << log4cpp 
>806	ShiftExpression	log4cpp 
>807	ShiftExpression	\"readFile
>808	CallExpression	path . string ( )
>809	ArgumentList	 
>810	Callee	path . string
>811	MemberAccess	path . string
>812	Identifier	string
>813	Identifier	path
>814	PrimaryExpression	\"readFile
>815	Identifier	log4cpp 
>816	Identifier	log
>817	BlockStarter	 
>818	CompoundStatement	 
>819	ExpressionStatement	tile -> setImage ( image )
>820	CallExpression	tile -> setImage ( image )
>821	ArgumentList	image
>822	Argument	image
>823	Identifier	image
>824	Callee	tile -> setImage
>825	PtrMemberAccess	tile -> setImage
>826	Identifier	setImage
>827	Identifier	tile
>828	ExpressionStatement	readFile ( image , path )
>829	CallExpression	readFile ( image , path )
>830	ArgumentList	image
>831	Argument	path
>832	Identifier	path
>833	Argument	image
>834	Identifier	image
>835	Callee	readFile
>836	Identifier	readFile
>837	ExpressionStatement	 
>838	Statement	 
>839	Statement	 
>840	Statement	 
>841	Statement	 
>842	Statement	 
>843	Statement	 
>844	Statement	 
>845	Statement	 
>846	Statement	 
>847	Statement	 
>848	Statement	 
>849	Statement	 
>850	Statement	 
>851	Statement	 
>852	Statement	 
>853	Statement	 
>854	Statement	 
>855	IdentifierDeclStatement	 
>856	IdentifierDecl	path = getTilePath ( ti )
>857	AssignmentExpr	path = getTilePath ( ti )
>858	CallExpression	getTilePath ( ti )
>859	ArgumentList	ti
>860	Argument	ti
>861	Identifier	ti
>862	Callee	getTilePath
>863	Identifier	getTilePath
>864	Identifier	path
>865	Identifier	path
>866	IdentifierDeclType	boost 
>867	Condition	 
>868	RelationalExpression	ti -> getZoom ( ) <= Config -> get < int > ( opt 
>869	RelationalExpression	Config -> get < int > ( opt 
>870	RelationalExpression	int > ( opt 
>871	Identifier	opt 
>872	Identifier	int
>873	PtrMemberAccess	Config -> get
>874	Identifier	get
>875	Identifier	Config
>876	CallExpression	ti -> getZoom ( )
>877	ArgumentList	 
>878	Callee	ti -> getZoom
>879	PtrMemberAccess	ti -> getZoom
>880	Identifier	getZoom
>881	Identifier	ti
>882	ExpressionStatement	 
>883	AssignmentExpr	tile = boost 
>884	RelationalExpression	boost 
>885	RelationalExpression	Tile > ( ti )
>886	Identifier	ti
>887	Identifier	Tile
>888	Identifier	boost 
>889	Identifier	tile
>890	CompoundStatement	 
>891	ExpressionStatement	 
>892	AssignmentExpr	tileIt -> second . second = RecentlyUsedList . begin ( )
>893	CallExpression	RecentlyUsedList . begin ( )
>894	ArgumentList	 
>895	Callee	RecentlyUsedList . begin
>896	MemberAccess	RecentlyUsedList . begin
>897	Identifier	begin
>898	Identifier	RecentlyUsedList
>899	MemberAccess	tileIt -> second . second
>900	Identifier	second
>901	PtrMemberAccess	tileIt -> second
>902	Identifier	second
>903	Identifier	tileIt
>904	ExpressionStatement	 
>905	CallExpression	RecentlyUsedList . push_front ( tileIt -> second . first )
>906	ArgumentList	tileIt -> second . first
>907	Argument	tileIt -> second . first
>908	MemberAccess	tileIt -> second . first
>909	Identifier	first
>910	PtrMemberAccess	tileIt -> second
>911	Identifier	second
>912	Identifier	tileIt
>913	Callee	RecentlyUsedList . push_front
>914	MemberAccess	RecentlyUsedList . push_front
>915	Identifier	push_front
>916	Identifier	RecentlyUsedList
>917	ExpressionStatement	 
>918	CallExpression	RecentlyUsedList . erase ( tileIt -> second . second )
>919	ArgumentList	tileIt -> second . second
>920	Argument	tileIt -> second . second
>921	MemberAccess	tileIt -> second . second
>922	Identifier	second
>923	PtrMemberAccess	tileIt -> second
>924	Identifier	second
>925	Identifier	tileIt
>926	Callee	RecentlyUsedList . erase
>927	MemberAccess	RecentlyUsedList . erase
>928	Identifier	erase
>929	Identifier	RecentlyUsedList
>930	ExpressionStatement	 
>931	AssignmentExpr	tile = tileIt -> second . first
>932	MemberAccess	tileIt -> second . first
>933	Identifier	first
>934	PtrMemberAccess	tileIt -> second
>935	Identifier	second
>936	Identifier	tileIt
>937	Identifier	tile
>938	Condition	 
>939	EqualityExpression	tileIt != cache -> end ( )
>940	CallExpression	cache -> end ( )
>941	ArgumentList	 
>942	Callee	cache -> end
>943	PtrMemberAccess	cache -> end
>944	Identifier	end
>945	Identifier	cache
>946	Identifier	tileIt
>947	ExpressionStatement	 
>948	AssignmentExpr	tileIt = cache -> find ( * ti )
>949	CallExpression	cache -> find ( * ti )
>950	ArgumentList	* ti
>951	Argument	* ti
>952	UnaryOp	* ti
>953	Identifier	ti
>954	UnaryOperator	*
>955	Callee	cache -> find
>956	PtrMemberAccess	cache -> find
>957	Identifier	find
>958	Identifier	cache
>959	Identifier	tileIt
>960	Statement	 
>961	IdentifierDeclStatement	 
>962	IdentifierDecl	tile
>963	Identifier	tile
>964	IdentifierDeclType	shared_ptr < Tile >
>965	IfStatement	if ( cacheIt != AllCaches . end ( ) )
>966	ElseStatement	else
>967	CompoundStatement	 
>968	ExpressionStatement	 
>969	ShiftExpression	log << log4cpp 
>970	ShiftExpression	log4cpp 
>971	ShiftExpression	\"Stylesheetcache \" << stylesheet << \" created.\"
>972	ShiftExpression	stylesheet << \" created.\"
>973	PrimaryExpression	\" created.\"
>974	Identifier	stylesheet
>975	PrimaryExpression	\"Stylesheetcache \"
>976	Identifier	log4cpp 
>977	Identifier	log
>978	ExpressionStatement	 
>979	CallExpression	boost 
>980	ArgumentList	dir
>981	Argument	dir
>982	Identifier	dir
>983	Callee	boost 
>984	Identifier	boost 
>985	IdentifierDeclStatement	 
>986	IdentifierDecl	dir ( Config -> get < string > ( opt 
>987	RelationalExpression	Config -> get < string > ( opt 
>988	RelationalExpression	string > ( opt 
>989	AdditiveExpression	( opt 
>990	CallExpression	ti -> getStylesheetPath ( )
>991	ArgumentList	 
>992	Callee	ti -> getStylesheetPath
>993	PtrMemberAccess	ti -> getStylesheetPath
>994	Identifier	getStylesheetPath
>995	Identifier	ti
>996	CastExpression	( opt 
>997	UnaryOp	+ \"/\"
>998	PrimaryExpression	\"/\"
>999	UnaryOperator	+
>1000	CastTarget	opt 
>1001	Identifier	string
>1002	PtrMemberAccess	Config -> get
>1003	Identifier	get
>1004	Identifier	Config
>1005	Identifier	dir
>1006	IdentifierDeclType	boost 
>1007	ExpressionStatement	 
>1008	AssignmentExpr	AllCaches [ stylesheet ] = cache
>1009	Identifier	cache
>1010	ArrayIndexing	AllCaches [ stylesheet ]
>1011	Identifier	stylesheet
>1012	Identifier	AllCaches
>1013	ExpressionStatement	 
>1014	Statement	 
>1015	Statement	 
>1016	Statement	 
>1017	Statement	 
>1018	Statement	 
>1019	Statement	 
>1020	Statement	 
>1021	Statement	 
>1022	Statement	 
>1023	Statement	 
>1024	CompoundStatement	 
>1025	ExpressionStatement	 
>1026	AssignmentExpr	cache = cacheIt -> second
>1027	PtrMemberAccess	cacheIt -> second
>1028	Identifier	second
>1029	Identifier	cacheIt
>1030	Identifier	cache
>1031	Condition	 
>1032	EqualityExpression	cacheIt != AllCaches . end ( )
>1033	CallExpression	AllCaches . end ( )
>1034	ArgumentList	 
>1035	Callee	AllCaches . end
>1036	MemberAccess	AllCaches . end
>1037	Identifier	end
>1038	Identifier	AllCaches
>1039	Identifier	cacheIt
>1040	ExpressionStatement	 
>1041	AssignmentExpr	cacheIt = AllCaches . find ( stylesheet )
>1042	CallExpression	AllCaches . find ( stylesheet )
>1043	ArgumentList	stylesheet
>1044	Argument	stylesheet
>1045	Identifier	stylesheet
>1046	Callee	AllCaches . find
>1047	MemberAccess	AllCaches . find
>1048	Identifier	find
>1049	Identifier	AllCaches
>1050	Identifier	cacheIt
>1051	Statement	 
>1052	IdentifierDeclStatement	 
>1053	IdentifierDecl	& stylesheet = ti -> getStylesheetPath ( )
>1054	AssignmentExpr	& stylesheet = ti -> getStylesheetPath ( )
>1055	CallExpression	ti -> getStylesheetPath ( )
>1056	ArgumentList	 
>1057	Callee	ti -> getStylesheetPath
>1058	PtrMemberAccess	ti -> getStylesheetPath
>1059	Identifier	getStylesheetPath
>1060	Identifier	ti
>1061	Identifier	stylesheet
>1062	Identifier	stylesheet
>1063	IdentifierDeclType	const string &
>1064	IdentifierDeclStatement	 
>1065	IdentifierDecl	cache
>1066	Identifier	cache
>1067	IdentifierDeclType	shared_ptr < CacheOfOneStylesheet >
>1068	ExpressionStatement	 
>1069	CallExpression	GlobalCacheLock . lock ( )
>1070	ArgumentList	 
>1071	Callee	GlobalCacheLock . lock
>1072	MemberAccess	GlobalCacheLock . lock
>1073	Identifier	lock
>1074	Identifier	GlobalCacheLock
>1132	FunctionDef	Cache 
>1133	ParameterList	 
>1134	ReturnType	shared_ptr < Tile >
>1135	CompoundStatement	 
>1136	ReturnStatement	 
>1137	Identifier	DefaultTile
>1138	IfStatement	if ( ! DefaultTile )
>1139	CompoundStatement	 
>1140	BlockStarter	 
>1141	CompoundStatement	 
>1142	BlockStarter	 
>1143	CompoundStatement	 
>1144	ExpressionStatement	DefaultTile -> setImage ( image )
>1145	CallExpression	DefaultTile -> setImage ( image )
>1146	ArgumentList	image
>1147	Argument	image
>1148	Identifier	image
>1149	Callee	DefaultTile -> setImage
>1150	PtrMemberAccess	DefaultTile -> setImage
>1151	Identifier	setImage
>1152	Identifier	DefaultTile
>1153	ExpressionStatement	readFile ( image , path )
>1154	CallExpression	readFile ( image , path )
>1155	ArgumentList	image
>1156	Argument	path
>1157	Identifier	path
>1158	Argument	image
>1159	Identifier	image
>1160	Callee	readFile
>1161	Identifier	readFile
>1162	ExpressionStatement	 
>1163	Statement	 
>1164	Statement	 
>1165	Statement	 
>1166	Statement	 
>1167	Statement	 
>1168	Statement	 
>1169	Statement	 
>1170	Statement	 
>1171	Statement	 
>1172	Statement	 
>1173	Statement	 
>1174	Statement	 
>1175	Statement	 
>1176	Statement	 
>1177	Statement	 
>1178	Statement	 
>1179	Statement	 
>1180	ExpressionStatement	 
>1181	AssignmentExpr	DefaultTile = boost 
>1182	RelationalExpression	boost 
>1183	RelationalExpression	Tile > ( ti )
>1184	Identifier	ti
>1185	Identifier	Tile
>1186	Identifier	boost 
>1187	Identifier	DefaultTile
>1188	IdentifierDeclStatement	 
>1189	IdentifierDecl	ti = boost 
>1190	AssignmentExpr	ti = boost 
>1191	RelationalExpression	boost 
>1192	RelationalExpression	TileIdentifier > ( - 1 , - 1 , - 1 , \"/\" , TileIdentifier 
>1193	Expression	- 1 , - 1 , - 1 , \"/\" , TileIdentifier 
>1194	Expression	- 1 , - 1 , \"/\" , TileIdentifier 
>1195	Expression	- 1 , \"/\" , TileIdentifier 
>1196	Expression	\"/\" , TileIdentifier 
>1197	Identifier	TileIdentifier 
>1198	PrimaryExpression	\"/\"
>1199	UnaryOp	- 1
>1200	PrimaryExpression	1
>1201	UnaryOperator	-
>1202	UnaryOp	- 1
>1203	PrimaryExpression	1
>1204	UnaryOperator	-
>1205	UnaryOp	- 1
>1206	PrimaryExpression	1
>1207	UnaryOperator	-
>1208	Identifier	TileIdentifier
>1209	Identifier	boost 
>1210	Identifier	ti
>1211	Identifier	ti
>1212	IdentifierDeclType	shared_ptr < TileIdentifier >
>1213	IdentifierDeclStatement	 
>1214	IdentifierDecl	path = Config -> get < string > ( opt 
>1215	AssignmentExpr	path = Config -> get < string > ( opt 
>1216	RelationalExpression	Config -> get < string > ( opt 
>1217	RelationalExpression	string > ( opt 
>1218	Identifier	opt 
>1219	Identifier	string
>1220	PtrMemberAccess	Config -> get
>1221	Identifier	get
>1222	Identifier	Config
>1223	Identifier	path
>1224	Identifier	path
>1225	IdentifierDeclType	string
>1226	Condition	 
>1227	UnaryOp	! DefaultTile
>1228	Identifier	DefaultTile
>1229	UnaryOperator	!
>1246	FunctionDef	Cache 
>1247	ParameterList	const string path
>1248	Parameter	 
>1249	Identifier	path
>1250	ParameterType	const string
>1251	ReturnType	void
>1252	CompoundStatement	 
>1253	BlockStarter	 
>1254	CompoundStatement	 
>1255	ExpressionStatement	log << log4cpp 
>1256	ShiftExpression	log << log4cpp 
>1257	ShiftExpression	log4cpp 
>1258	PrimaryExpression	\"trying to delete Tiles of non existant Stylesheet.\"
>1259	Identifier	log4cpp 
>1260	Identifier	log
>1261	BlockStarter	 
>1262	CompoundStatement	 
>1263	ExpressionStatement	AllCaches . erase ( path )
>1264	CallExpression	AllCaches . erase ( path )
>1265	ArgumentList	path
>1266	Argument	path
>1267	Identifier	path
>1268	Callee	AllCaches . erase
>1269	MemberAccess	AllCaches . erase
>1270	Identifier	erase
>1271	Identifier	AllCaches
>1272	IfStatement	if ( ec . value ( ) == 39 )
>1273	CompoundStatement	 
>1274	ExpressionStatement	log << log4cpp 
>1275	ShiftExpression	log << log4cpp 
>1276	ShiftExpression	log4cpp 
>1277	PrimaryExpression	\"could not delete all tiles in folder.\"
>1278	Identifier	log4cpp 
>1279	Identifier	log
>1280	Condition	ec . value ( ) == 39
>1281	EqualityExpression	ec . value ( ) == 39
>1282	PrimaryExpression	39
>1283	CallExpression	ec . value ( )
>1284	ArgumentList	 
>1285	Callee	ec . value
>1286	MemberAccess	ec . value
>1287	Identifier	value
>1288	Identifier	ec
>1289	ExpressionStatement	boost 
>1290	CallExpression	boost 
>1291	ArgumentList	dir
>1292	Argument	ec
>1293	Identifier	ec
>1294	Argument	dir
>1295	Identifier	dir
>1296	Callee	boost 
>1297	Identifier	boost 
>1298	IdentifierDeclStatement	boost 
>1299	IdentifierDecl	ec
>1300	Identifier	ec
>1301	IdentifierDeclType	boost 
>1302	IdentifierDeclStatement	boost 
>1303	IdentifierDecl	dir ( Config -> get < string > ( opt 
>1304	RelationalExpression	Config -> get < string > ( opt 
>1305	RelationalExpression	string > ( opt 
>1306	CastExpression	( opt 
>1307	UnaryOp	+ path
>1308	Identifier	path
>1309	UnaryOperator	+
>1310	CastTarget	opt 
>1311	Identifier	string
>1312	PtrMemberAccess	Config -> get
>1313	Identifier	get
>1314	Identifier	Config
>1315	Identifier	dir
>1316	IdentifierDeclType	boost 
<3=9,8,4
<4=5
<5=7,6
<14=16,15
<16=17
<17=18
<18=20,19
<20=22,21
<22=23
<23=25,24
<30=39,38,31
<31=35,32
<32=34,33
<35=37,36
<39=176,158,147,137,40
<40=117,94,41
<41=42
<42=92,43
<43=81,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44
<68=69
<69=77,70
<70=71
<71=72
<72=76,73
<73=75,74
<77=78
<78=80,79
<81=82
<82=88,83
<83=86,84
<84=85
<86=87
<88=89
<89=91,90
<92=93
<94=95
<95=96
<96=115,97
<97=98
<98=99
<99=111,100
<100=109,101
<101=102
<102=103
<103=105,104
<105=106
<106=108,107
<109=110
<111=113,112
<113=114
<115=116
<117=118
<118=127,119
<119=126,120
<120=122,121
<122=123
<123=125,124
<127=136,128
<128=134,129
<129=130
<130=131
<131=133,132
<134=135
<137=138
<138=146,145,139
<139=141,140
<141=142
<142=144,143
<147=148
<148=154,149
<149=152,150
<150=151
<152=153
<154=155
<155=157,156
<158=159
<159=172,160
<160=165,161
<161=162
<162=164,163
<165=166
<166=168,167
<168=169
<169=171,170
<172=173
<173=175,174
<176=177
<177=179,178
<198=207,206,199
<199=203,200
<200=202,201
<203=205,204
<207=327,313,208
<208=306,233,209
<209=210
<210=211
<211=212
<212=231,213
<213=214
<214=215
<215=227,216
<216=225,217
<217=218
<218=219
<219=221,220
<221=222
<222=224,223
<225=226
<227=229,228
<229=230
<231=232
<233=294,234
<234=290,265,235
<235=236
<236=264,255,237
<237=238
<238=251,239
<239=242,240
<240=241
<242=243
<243=250,244
<244=246,245
<246=247
<247=249,248
<251=252
<252=254,253
<255=256
<256=263,257
<257=259,258
<259=260
<260=262,261
<265=283,276,266
<266=267
<267=274,268
<268=269
<269=270
<270=272,271
<272=273
<274=275
<276=277
<277=281,278
<278=279
<279=280
<281=282
<283=284
<284=286,285
<286=287
<287=289,288
<290=291
<291=293,292
<294=295
<295=305,304,296
<296=303,297
<297=299,298
<299=300
<300=302,301
<306=307
<307=309,308
<309=310
<310=312,311
<313=314
<314=326,325,315
<315=319,316
<316=318,317
<319=321,320
<321=322
<322=324,323
<327=328
<328=337,329
<329=330
<330=331
<331=333,332
<333=334
<334=336,335
<337=338
<358=364,363,359
<359=360
<360=362,361
<364=442,430,419,408,397,388,377,367,365
<365=366
<367=368
<368=376,375,369
<369=371,370
<371=372
<372=374,373
<377=378
<378=387,379
<379=386,380
<380=382,381
<382=383
<383=385,384
<388=389
<389=396,390
<390=392,391
<392=393
<393=395,394
<397=398
<398=407,399
<399=401,400
<401=403,402
<403=404
<404=406,405
<408=409
<409=418,410
<410=412,411
<412=414,413
<414=415
<415=417,416
<419=420
<420=429,421
<421=423,422
<423=425,424
<425=426
<426=428,427
<430=431
<431=437,432
<432=436,433
<433=435,434
<437=441,438
<438=440,439
<442=443
<443=445,444
<453=459,458,454
<454=455
<455=457,456
<459=1068,1064,1052,1051,1040,965,961,960,947,758,469,462,460
<460=461
<462=463
<463=465,464
<465=466
<466=468,467
<469=743,470
<470=731,543,528,507,478,471
<471=472
<472=474,473
<474=475
<475=477,476
<478=498,479
<479=480
<480=481
<481=492,482
<482=483
<483=484
<484=491,485
<485=487,486
<487=488
<488=490,489
<492=493
<493=495,494
<495=497,496
<498=499
<499=506,500
<500=502,501
<502=503
<503=505,504
<507=508
<508=527,509
<509=523,510
<510=511
<511=512
<512=514,513
<514=515
<515=517,516
<517=519,518
<519=520
<520=522,521
<523=524
<524=526,525
<528=529
<529=542,530
<530=541,531
<531=540,532
<532=539,533
<533=535,534
<535=536
<536=538,537
<543=711,544
<544=699,687,676,661,545
<545=546
<546=646,637,616,555,548,547
<548=549
<549=551,550
<551=552
<552=554,553
<555=607,556
<556=589,557
<557=558
<558=583,559
<559=560
<560=561
<561=581,562
<562=577,563
<563=564
<564=575,565
<565=573,566
<566=567
<567=569,568
<569=570
<570=572,571
<573=574
<575=576
<577=578
<578=580,579
<581=582
<583=584
<584=586,585
<586=588,587
<589=590
<590=601,591
<591=592
<592=593
<593=600,594
<594=596,595
<596=597
<597=599,598
<601=602
<602=604,603
<604=606,605
<607=608
<608=615,609
<609=611,610
<611=612
<612=614,613
<616=617
<617=636,618
<618=632,619
<619=620
<620=621
<621=623,622
<623=624
<624=626,625
<626=628,627
<628=629
<629=631,630
<632=633
<633=635,634
<637=638
<638=642,639
<639=640
<640=641
<642=643
<643=645,644
<646=647
<647=660,648
<648=659,649
<649=658,650
<650=657,651
<651=653,652
<653=654
<654=656,655
<661=662
<662=663
<663=664
<664=675,665
<665=674,666
<666=673,667
<667=669,668
<669=670
<670=672,671
<676=677
<677=678
<678=679
<679=685,680
<680=683,681
<681=682
<683=684
<685=686
<687=688
<688=698,697,689
<689=696,690
<690=694,691
<691=692
<692=693
<694=695
<699=700
<700=710,709,701
<701=708,702
<702=704,703
<704=705
<705=707,706
<711=712
<712=720,713
<713=717,714
<714=716,715
<717=719,718
<720=722,721
<722=723
<723=725,724
<725=727,726
<727=728
<728=730,729
<731=732
<732=742,741,733
<733=740,734
<734=736,735
<736=737
<737=739,738
<743=744
<744=752,745
<745=749,746
<746=748,747
<749=751,750
<752=754,753
<754=755
<755=757,756
<758=938,890,759
<759=760
<760=882,800,791,761
<761=762
<762=787,763
<763=764
<764=765
<765=785,766
<766=781,767
<767=768
<768=779,769
<769=777,770
<770=771
<771=773,772
<773=774
<774=776,775
<777=778
<779=780
<781=782
<782=784,783
<785=786
<787=788
<788=790,789
<791=792
<792=796,793
<793=794
<794=795
<796=797
<797=799,798
<800=867,801
<801=855,854,853,852,851,850,849,848,847,846,845,844,843,842,841,840,839,838,837,817,802
<802=803
<803=804
<804=805
<805=816,806
<806=815,807
<807=814,808
<808=810,809
<810=811
<811=813,812
<817=818
<818=828,819
<819=820
<820=824,821
<821=822
<822=823
<824=825
<825=827,826
<828=829
<829=835,830
<830=833,831
<831=832
<833=834
<835=836
<855=856
<856=866,865,857
<857=864,858
<858=862,859
<859=860
<860=861
<862=863
<867=868
<868=876,869
<869=873,870
<870=872,871
<873=875,874
<876=878,877
<878=879
<879=881,880
<882=883
<883=889,884
<884=888,885
<885=887,886
<890=930,917,904,891
<891=892
<892=899,893
<893=895,894
<895=896
<896=898,897
<899=901,900
<901=903,902
<904=905
<905=913,906
<906=907
<907=908
<908=910,909
<910=912,911
<913=914
<914=916,915
<917=918
<918=926,919
<919=920
<920=921
<921=923,922
<923=925,924
<926=927
<927=929,928
<930=931
<931=937,932
<932=934,933
<934=936,935
<938=939
<939=946,940
<940=942,941
<942=943
<943=945,944
<947=948
<948=959,949
<949=955,950
<950=951
<951=952
<952=954,953
<955=956
<956=958,957
<961=962
<962=964,963
<965=1031,1024,966
<966=967
<967=1023,1022,1021,1020,1019,1018,1017,1016,1015,1014,1013,1007,985,978,968
<968=969
<969=977,970
<970=976,971
<971=975,972
<972=974,973
<978=979
<979=983,980
<980=981
<981=982
<983=984
<985=986
<986=1006,1005,987
<987=1002,988
<988=1001,989
<989=996,990
<990=992,991
<992=993
<993=995,994
<996=1000,997
<997=999,998
<1002=1004,1003
<1007=1008
<1008=1010,1009
<1010=1012,1011
<1024=1025
<1025=1026
<1026=1030,1027
<1027=1029,1028
<1031=1032
<1032=1039,1033
<1033=1035,1034
<1035=1036
<1036=1038,1037
<1040=1041
<1041=1050,1042
<1042=1046,1043
<1043=1044
<1044=1045
<1046=1047
<1047=1049,1048
<1052=1053
<1053=1063,1062,1054
<1054=1061,1055
<1055=1057,1056
<1057=1058
<1058=1060,1059
<1064=1065
<1065=1067,1066
<1068=1069
<1069=1071,1070
<1071=1072
<1072=1074,1073
<1132=1135,1134,1133
<1135=1138,1136
<1136=1137
<1138=1226,1139
<1139=1213,1188,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1170,1169,1168,1167,1166,1165,1164,1163,1162,1142,1140
<1140=1141
<1142=1143
<1143=1153,1144
<1144=1145
<1145=1149,1146
<1146=1147
<1147=1148
<1149=1150
<1150=1152,1151
<1153=1154
<1154=1160,1155
<1155=1158,1156
<1156=1157
<1158=1159
<1160=1161
<1180=1181
<1181=1187,1182
<1182=1186,1183
<1183=1185,1184
<1188=1189
<1189=1212,1211,1190
<1190=1210,1191
<1191=1209,1192
<1192=1208,1193
<1193=1205,1194
<1194=1202,1195
<1195=1199,1196
<1196=1198,1197
<1199=1201,1200
<1202=1204,1203
<1205=1207,1206
<1213=1214
<1214=1225,1224,1215
<1215=1223,1216
<1216=1220,1217
<1217=1219,1218
<1220=1222,1221
<1226=1227
<1227=1229,1228
<1246=1252,1251,1247
<1247=1248
<1248=1250,1249
<1252=1261,1253
<1253=1254
<1254=1255
<1255=1256
<1256=1260,1257
<1257=1259,1258
<1261=1262
<1262=1302,1298,1289,1272,1263
<1263=1264
<1264=1268,1265
<1265=1266
<1266=1267
<1268=1269
<1269=1271,1270
<1272=1280,1273
<1273=1274
<1274=1275
<1275=1279,1276
<1276=1278,1277
<1280=1281
<1281=1283,1282
<1283=1285,1284
<1285=1286
<1286=1288,1287
<1289=1290
<1290=1296,1291
<1291=1294,1292
<1292=1293
<1294=1295
<1296=1297
<1298=1299
<1299=1301,1300
<1302=1303
<1303=1316,1315,1304
<1304=1312,1305
<1305=1311,1306
<1306=1310,1307
<1307=1309,1308
<1312=1314,1313
