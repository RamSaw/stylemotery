>3	FunctionDef	main (int argc , char * argv [ ])
>4	ParameterList	int argc , char * argv [ ]
>5	Parameter	 
>6	Identifier	argv
>7	ParameterType	char * [ ]
>8	Parameter	 
>9	Identifier	argc
>10	ParameterType	int
>11	ReturnType	int
>12	CompoundStatement	 
>13	ExpressionStatement	 
>14	ShiftExpression	std 
>15	ShiftExpression	\"*** Step 8 ***\nm3
>16	ShiftExpression	m3 << \"\nm4
>17	ShiftExpression	\"\nm4
>18	ShiftExpression	m4 << std 
>19	Identifier	std 
>20	Identifier	m4
>21	PrimaryExpression	\"\nm4
>22	Identifier	m3
>23	PrimaryExpression	\"*** Step 8 ***\nm3
>24	Identifier	std 
>25	ExpressionStatement	 
>26	AssignmentExpr	m4 = m4 * m4 . transpose ( ) . eval ( )
>27	MultiplicativeExpression	m4 * m4 . transpose ( ) . eval ( )
>28	CallExpression	m4 . transpose ( ) . eval ( )
>29	ArgumentList	 
>30	Callee	m4 . transpose ( ) . eval
>31	MemberAccess	m4 . transpose ( ) . eval
>32	Identifier	eval
>33	CallExpression	m4 . transpose ( )
>34	ArgumentList	 
>35	Callee	m4 . transpose
>36	MemberAccess	m4 . transpose
>37	Identifier	transpose
>38	Identifier	m4
>39	Identifier	m4
>40	Identifier	m4
>41	ExpressionStatement	 
>42	AssignmentExpr	m4 = m4 * m4 . transpose ( )
>43	MultiplicativeExpression	m4 * m4 . transpose ( )
>44	CallExpression	m4 . transpose ( )
>45	ArgumentList	 
>46	Callee	m4 . transpose
>47	MemberAccess	m4 . transpose
>48	Identifier	transpose
>49	Identifier	m4
>50	Identifier	m4
>51	Identifier	m4
>52	ExpressionStatement	 
>53	Expression	m3 = m3 * m4 . block < 3 , 3 > ( 1 , 1 )
>54	RelationalExpression	3 > ( 1 , 1 )
>55	Expression	1 , 1
>56	PrimaryExpression	1
>57	PrimaryExpression	1
>58	PrimaryExpression	3
>59	AssignmentExpr	m3 = m3 * m4 . block < 3
>60	RelationalExpression	m3 * m4 . block < 3
>61	PrimaryExpression	3
>62	MultiplicativeExpression	m3 * m4 . block
>63	MemberAccess	m4 . block
>64	Identifier	block
>65	Identifier	m4
>66	Identifier	m3
>67	Identifier	m3
>68	ExpressionStatement	 
>69	AssignmentExpr	m4 = m4 * ( m4 + m4 )
>70	MultiplicativeExpression	m4 * ( m4 + m4 )
>71	AdditiveExpression	m4 + m4
>72	Identifier	m4
>73	Identifier	m4
>74	Identifier	m4
>75	Identifier	m4
>76	ExpressionStatement	 
>77	AssignmentExpr	m4 = - m4 + m4 + 5 * m4
>78	AdditiveExpression	- m4 + m4 + 5 * m4
>79	AdditiveExpression	m4 + 5 * m4
>80	MultiplicativeExpression	5 * m4
>81	Identifier	m4
>82	PrimaryExpression	5
>83	Identifier	m4
>84	UnaryOp	- m4
>85	Identifier	m4
>86	UnaryOperator	-
>87	Identifier	m4
>88	ExpressionStatement	 
>89	AssignmentExpr	m4 = m4 + m4
>90	AdditiveExpression	m4 + m4
>91	Identifier	m4
>92	Identifier	m4
>93	Identifier	m4
>94	IdentifierDeclStatement	 
>95	IdentifierDecl	other = ( m4 * m4 ) . lazy ( )
>96	AssignmentExpr	other = ( m4 * m4 ) . lazy ( )
>97	CallExpression	( m4 * m4 ) . lazy ( )
>98	ArgumentList	 
>99	Callee	( m4 * m4 ) . lazy
>100	MemberAccess	( m4 * m4 ) . lazy
>101	Identifier	lazy
>102	MultiplicativeExpression	m4 * m4
>103	Identifier	m4
>104	Identifier	m4
>105	Identifier	other
>106	Identifier	other
>107	IdentifierDeclType	Eigen 
>108	ExpressionStatement	 
>109	AssignmentExpr	m4 = m4 * m4
>110	MultiplicativeExpression	m4 * m4
>111	Identifier	m4
>112	Identifier	m4
>113	Identifier	m4
>114	ExpressionStatement	 
>115	ShiftExpression	std 
>116	ShiftExpression	\"m4.rowwise().sum()
>117	ShiftExpression	m4 . rowwise ( ) . sum ( ) << std 
>118	Identifier	std 
>119	CallExpression	m4 . rowwise ( ) . sum ( )
>120	ArgumentList	 
>121	Callee	m4 . rowwise ( ) . sum
>122	MemberAccess	m4 . rowwise ( ) . sum
>123	Identifier	sum
>124	CallExpression	m4 . rowwise ( )
>125	ArgumentList	 
>126	Callee	m4 . rowwise
>127	MemberAccess	m4 . rowwise
>128	Identifier	rowwise
>129	Identifier	m4
>130	PrimaryExpression	\"m4.rowwise().sum()
>131	Identifier	std 
>132	ExpressionStatement	 
>133	ShiftExpression	std 
>134	ShiftExpression	\"m4.colwise().sum()
>135	ShiftExpression	m4 . colwise ( ) . sum ( ) << std 
>136	Identifier	std 
>137	CallExpression	m4 . colwise ( ) . sum ( )
>138	ArgumentList	 
>139	Callee	m4 . colwise ( ) . sum
>140	MemberAccess	m4 . colwise ( ) . sum
>141	Identifier	sum
>142	CallExpression	m4 . colwise ( )
>143	ArgumentList	 
>144	Callee	m4 . colwise
>145	MemberAccess	m4 . colwise
>146	Identifier	colwise
>147	Identifier	m4
>148	PrimaryExpression	\"m4.colwise().sum()
>149	Identifier	std 
>150	ExpressionStatement	 
>151	ShiftExpression	std 
>152	ShiftExpression	\"m4.col(2).sum()
>153	ShiftExpression	m4 . col ( 2 ) . sum ( ) << std 
>154	Identifier	std 
>155	CallExpression	m4 . col ( 2 ) . sum ( )
>156	ArgumentList	 
>157	Callee	m4 . col ( 2 ) . sum
>158	MemberAccess	m4 . col ( 2 ) . sum
>159	Identifier	sum
>160	CallExpression	m4 . col ( 2 )
>161	ArgumentList	2
>162	Argument	2
>163	PrimaryExpression	2
>164	Callee	m4 . col
>165	MemberAccess	m4 . col
>166	Identifier	col
>167	Identifier	m4
>168	PrimaryExpression	\"m4.col(2).sum()
>169	Identifier	std 
>170	ExpressionStatement	 
>171	ShiftExpression	std 
>172	ShiftExpression	\"*** Step 7 ***\n m4.sum()
>173	ShiftExpression	m4 . sum ( ) << std 
>174	Identifier	std 
>175	CallExpression	m4 . sum ( )
>176	ArgumentList	 
>177	Callee	m4 . sum
>178	MemberAccess	m4 . sum
>179	Identifier	sum
>180	Identifier	m4
>181	PrimaryExpression	\"*** Step 7 ***\n m4.sum()
>182	Identifier	std 
>183	ExpressionStatement	 
>184	ShiftExpression	std 
>185	ShiftExpression	\"*** Step 6 ***\nm3
>186	ShiftExpression	m3 << \"\nm4
>187	ShiftExpression	\"\nm4
>188	ShiftExpression	m4 << std 
>189	Identifier	std 
>190	Identifier	m4
>191	PrimaryExpression	\"\nm4
>192	Identifier	m3
>193	PrimaryExpression	\"*** Step 6 ***\nm3
>194	Identifier	std 
>195	ExpressionStatement	 
>196	AssignmentExpr	m3 = m3 . cwise ( ) . cos ( )
>197	CallExpression	m3 . cwise ( ) . cos ( )
>198	ArgumentList	 
>199	Callee	m3 . cwise ( ) . cos
>200	MemberAccess	m3 . cwise ( ) . cos
>201	Identifier	cos
>202	CallExpression	m3 . cwise ( )
>203	ArgumentList	 
>204	Callee	m3 . cwise
>205	MemberAccess	m3 . cwise
>206	Identifier	cwise
>207	Identifier	m3
>208	Identifier	m3
>209	ExpressionStatement	 
>210	AssignmentExpr	m4 = m4 . cwise ( ) * m4
>211	MultiplicativeExpression	m4 . cwise ( ) * m4
>212	Identifier	m4
>213	CallExpression	m4 . cwise ( )
>214	ArgumentList	 
>215	Callee	m4 . cwise
>216	MemberAccess	m4 . cwise
>217	Identifier	cwise
>218	Identifier	m4
>219	Identifier	m4
>220	ExpressionStatement	 
>221	ShiftExpression	std 
>222	ShiftExpression	\"m4.diagonal().start(3)\n\" << m4 . diagonal ( ) . start ( 3 ) << std 
>223	ShiftExpression	m4 . diagonal ( ) . start ( 3 ) << std 
>224	Identifier	std 
>225	CallExpression	m4 . diagonal ( ) . start ( 3 )
>226	ArgumentList	3
>227	Argument	3
>228	PrimaryExpression	3
>229	Callee	m4 . diagonal ( ) . start
>230	MemberAccess	m4 . diagonal ( ) . start
>231	Identifier	start
>232	CallExpression	m4 . diagonal ( )
>233	ArgumentList	 
>234	Callee	m4 . diagonal
>235	MemberAccess	m4 . diagonal
>236	Identifier	diagonal
>237	Identifier	m4
>238	PrimaryExpression	\"m4.diagonal().start(3)\n\"
>239	Identifier	std 
>240	ExpressionStatement	 
>241	ShiftExpression	std 
>242	ShiftExpression	\"*** Step 5 ***\nm4.diagonal()
>243	ShiftExpression	m4 . diagonal ( ) << std 
>244	Identifier	std 
>245	CallExpression	m4 . diagonal ( )
>246	ArgumentList	 
>247	Callee	m4 . diagonal
>248	MemberAccess	m4 . diagonal
>249	Identifier	diagonal
>250	Identifier	m4
>251	PrimaryExpression	\"*** Step 5 ***\nm4.diagonal()
>252	Identifier	std 
>253	ExpressionStatement	 
>254	CallExpression	m4 . diagonal ( ) . block ( 1 , 2 ) . setOnes ( )
>255	ArgumentList	 
>256	Callee	m4 . diagonal ( ) . block ( 1 , 2 ) . setOnes
>257	MemberAccess	m4 . diagonal ( ) . block ( 1 , 2 ) . setOnes
>258	Identifier	setOnes
>259	CallExpression	m4 . diagonal ( ) . block ( 1 , 2 )
>260	ArgumentList	1
>261	Argument	2
>262	PrimaryExpression	2
>263	Argument	1
>264	PrimaryExpression	1
>265	Callee	m4 . diagonal ( ) . block
>266	MemberAccess	m4 . diagonal ( ) . block
>267	Identifier	block
>268	CallExpression	m4 . diagonal ( )
>269	ArgumentList	 
>270	Callee	m4 . diagonal
>271	MemberAccess	m4 . diagonal
>272	Identifier	diagonal
>273	Identifier	m4
>274	CompoundStatement	 
>275	ExpressionStatement	 
>276	ShiftExpression	std 
>277	ShiftExpression	\"*** Step 4 ***\nm4
>278	ShiftExpression	m4 << std 
>279	Identifier	std 
>280	Identifier	m4
>281	PrimaryExpression	\"*** Step 4 ***\nm4
>282	Identifier	std 
>283	ExpressionStatement	 
>284	CallExpression	m4 . block ( 0 , 1 , 3 , 3 ) . setIdentity ( )
>285	ArgumentList	 
>286	Callee	m4 . block ( 0 , 1 , 3 , 3 ) . setIdentity
>287	MemberAccess	m4 . block ( 0 , 1 , 3 , 3 ) . setIdentity
>288	Identifier	setIdentity
>289	CallExpression	m4 . block ( 0 , 1 , 3 , 3 )
>290	ArgumentList	0
>291	Argument	3
>292	PrimaryExpression	3
>293	Argument	3
>294	PrimaryExpression	3
>295	Argument	1
>296	PrimaryExpression	1
>297	Argument	0
>298	PrimaryExpression	0
>299	Callee	m4 . block
>300	MemberAccess	m4 . block
>301	Identifier	block
>302	Identifier	m4
>303	IdentifierDeclStatement	 
>304	IdentifierDecl	cols = 3
>305	AssignmentExpr	cols = 3
>306	PrimaryExpression	3
>307	Identifier	cols
>308	Identifier	cols
>309	IdentifierDeclType	int
>310	IdentifierDecl	rows = 3
>311	AssignmentExpr	rows = 3
>312	PrimaryExpression	3
>313	Identifier	rows
>314	Identifier	rows
>315	IdentifierDeclType	int
>316	ExpressionStatement	 
>317	ShiftExpression	std 
>318	ShiftExpression	\"*** Step 3 ***\nm3
>319	ShiftExpression	m3 << \"\nm4
>320	ShiftExpression	\"\nm4
>321	ShiftExpression	m4 << std 
>322	Identifier	std 
>323	Identifier	m4
>324	PrimaryExpression	\"\nm4
>325	Identifier	m3
>326	PrimaryExpression	\"*** Step 3 ***\nm3
>327	Identifier	std 
>328	ExpressionStatement	 
>329	Expression	m3 . row ( 2 ) = m4 . block < 1 , 3 > ( 2 , 0 )
>330	RelationalExpression	3 > ( 2 , 0 )
>331	Expression	2 , 0
>332	PrimaryExpression	0
>333	PrimaryExpression	2
>334	PrimaryExpression	3
>335	AssignmentExpr	m3 . row ( 2 ) = m4 . block < 1
>336	RelationalExpression	m4 . block < 1
>337	PrimaryExpression	1
>338	MemberAccess	m4 . block
>339	Identifier	block
>340	Identifier	m4
>341	CallExpression	m3 . row ( 2 )
>342	ArgumentList	2
>343	Argument	2
>344	PrimaryExpression	2
>345	Callee	m3 . row
>346	MemberAccess	m3 . row
>347	Identifier	row
>348	Identifier	m3
>349	ExpressionStatement	 
>350	Expression	m4 . block < 3 , 3 > ( 0 , 1 ) = m3
>351	AssignmentExpr	3 > ( 0 , 1 ) = m3
>352	Identifier	m3
>353	RelationalExpression	3 > ( 0 , 1 )
>354	Expression	0 , 1
>355	PrimaryExpression	1
>356	PrimaryExpression	0
>357	PrimaryExpression	3
>358	RelationalExpression	m4 . block < 3
>359	PrimaryExpression	3
>360	MemberAccess	m4 . block
>361	Identifier	block
>362	Identifier	m4
>363	ExpressionStatement	 
>364	ShiftExpression	std 
>365	ShiftExpression	\"*** Step 2 ***\nm3
>366	ShiftExpression	m3 << \"\nm4
>367	ShiftExpression	\"\nm4
>368	ShiftExpression	m4 << std 
>369	Identifier	std 
>370	Identifier	m4
>371	PrimaryExpression	\"\nm4
>372	Identifier	m3
>373	PrimaryExpression	\"*** Step 2 ***\nm3
>374	Identifier	std 
>375	ExpressionStatement	 
>376	CallExpression	m3 . diagonal ( ) . setOnes ( )
>377	ArgumentList	 
>378	Callee	m3 . diagonal ( ) . setOnes
>379	MemberAccess	m3 . diagonal ( ) . setOnes
>380	Identifier	setOnes
>381	CallExpression	m3 . diagonal ( )
>382	ArgumentList	 
>383	Callee	m3 . diagonal
>384	MemberAccess	m3 . diagonal
>385	Identifier	diagonal
>386	Identifier	m3
>387	ExpressionStatement	 
>388	CallExpression	m4 . setZero ( )
>389	ArgumentList	 
>390	Callee	m4 . setZero
>391	MemberAccess	m4 . setZero
>392	Identifier	setZero
>393	Identifier	m4
>394	ExpressionStatement	 
>395	ShiftExpression	std 
>396	ShiftExpression	\"*** Step 1 ***\nm3
>397	ShiftExpression	m3 << \"\nm4
>398	ShiftExpression	\"\nm4
>399	ShiftExpression	m4 << std 
>400	Identifier	std 
>401	Identifier	m4
>402	PrimaryExpression	\"\nm4
>403	Identifier	m3
>404	PrimaryExpression	\"*** Step 1 ***\nm3
>405	Identifier	std 
>406	IdentifierDeclStatement	 
>407	IdentifierDecl	m4 = Eigen 
>408	AssignmentExpr	m4 = Eigen 
>409	CallExpression	Eigen 
>410	ArgumentList	 
>411	Callee	Eigen 
>412	Identifier	Eigen 
>413	Identifier	m4
>414	Identifier	m4
>415	IdentifierDeclType	Eigen 
>416	IdentifierDeclStatement	 
>417	IdentifierDecl	m3 = Eigen 
>418	AssignmentExpr	m3 = Eigen 
>419	CallExpression	Eigen 
>420	ArgumentList	 
>421	Callee	Eigen 
>422	Identifier	Eigen 
>423	Identifier	m3
>424	Identifier	m3
>425	IdentifierDeclType	Eigen 
>426	ExpressionStatement	 
>427	CallExpression	std 
>428	ArgumentList	2
>429	Argument	2
>430	PrimaryExpression	2
>431	Callee	std 
>432	MemberAccess	std 
>433	Identifier	precision
>434	Identifier	std 
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=426,416,406,394,387,375,363,349,328,316,274,253,240,220,209,195,183,170,150,132,114,108,94,88,76,68,52,41,25,13
<13=14
<14=24,15
<15=23,16
<16=22,17
<17=21,18
<18=20,19
<25=26
<26=40,27
<27=39,28
<28=30,29
<30=31
<31=33,32
<33=35,34
<35=36
<36=38,37
<41=42
<42=51,43
<43=50,44
<44=46,45
<46=47
<47=49,48
<52=53
<53=59,54
<54=58,55
<55=57,56
<59=67,60
<60=62,61
<62=66,63
<63=65,64
<68=69
<69=75,70
<70=74,71
<71=73,72
<76=77
<77=87,78
<78=84,79
<79=83,80
<80=82,81
<84=86,85
<88=89
<89=93,90
<90=92,91
<94=95
<95=107,106,96
<96=105,97
<97=99,98
<99=100
<100=102,101
<102=104,103
<108=109
<109=113,110
<110=112,111
<114=115
<115=131,116
<116=130,117
<117=119,118
<119=121,120
<121=122
<122=124,123
<124=126,125
<126=127
<127=129,128
<132=133
<133=149,134
<134=148,135
<135=137,136
<137=139,138
<139=140
<140=142,141
<142=144,143
<144=145
<145=147,146
<150=151
<151=169,152
<152=168,153
<153=155,154
<155=157,156
<157=158
<158=160,159
<160=164,161
<161=162
<162=163
<164=165
<165=167,166
<170=171
<171=182,172
<172=181,173
<173=175,174
<175=177,176
<177=178
<178=180,179
<183=184
<184=194,185
<185=193,186
<186=192,187
<187=191,188
<188=190,189
<195=196
<196=208,197
<197=199,198
<199=200
<200=202,201
<202=204,203
<204=205
<205=207,206
<209=210
<210=219,211
<211=213,212
<213=215,214
<215=216
<216=218,217
<220=221
<221=239,222
<222=238,223
<223=225,224
<225=229,226
<226=227
<227=228
<229=230
<230=232,231
<232=234,233
<234=235
<235=237,236
<240=241
<241=252,242
<242=251,243
<243=245,244
<245=247,246
<247=248
<248=250,249
<253=254
<254=256,255
<256=257
<257=259,258
<259=265,260
<260=263,261
<261=262
<263=264
<265=266
<266=268,267
<268=270,269
<270=271
<271=273,272
<274=303,283,275
<275=276
<276=282,277
<277=281,278
<278=280,279
<283=284
<284=286,285
<286=287
<287=289,288
<289=299,290
<290=297,295,293,291
<291=292
<293=294
<295=296
<297=298
<299=300
<300=302,301
<303=310,304
<304=309,308,305
<305=307,306
<310=315,314,311
<311=313,312
<316=317
<317=327,318
<318=326,319
<319=325,320
<320=324,321
<321=323,322
<328=329
<329=335,330
<330=334,331
<331=333,332
<335=341,336
<336=338,337
<338=340,339
<341=345,342
<342=343
<343=344
<345=346
<346=348,347
<349=350
<350=358,351
<351=353,352
<353=357,354
<354=356,355
<358=360,359
<360=362,361
<363=364
<364=374,365
<365=373,366
<366=372,367
<367=371,368
<368=370,369
<375=376
<376=378,377
<378=379
<379=381,380
<381=383,382
<383=384
<384=386,385
<387=388
<388=390,389
<390=391
<391=393,392
<394=395
<395=405,396
<396=404,397
<397=403,398
<398=402,399
<399=401,400
<406=407
<407=415,414,408
<408=413,409
<409=411,410
<411=412
<416=417
<417=425,424,418
<418=423,419
<419=421,420
<421=422
<426=427
<427=431,428
<428=429
<429=430
<431=432
<432=434,433
