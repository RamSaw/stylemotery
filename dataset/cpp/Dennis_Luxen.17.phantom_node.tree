>3	FunctionDef	PhantomNode 
>4	ParameterList	NodeID forward_node_id , NodeID reverse_node_id , unsigned name_id , int forward_weight , int reverse_weight , int \
>5	Parameter	 
>6	Identifier	backward_travel_mode
>7	ParameterType	TravelMode
>8	Parameter	 
>9	Identifier	forward_travel_mode
>10	ParameterType	TravelMode
>11	Parameter	 
>12	Identifier	fwd_segment_position
>13	ParameterType	unsigned short
>14	Parameter	 
>15	Identifier	location
>16	ParameterType	FixedPointCoordinate &
>17	Parameter	 
>18	Identifier	component_id
>19	ParameterType	unsigned
>20	Parameter	 
>21	Identifier	packed_geometry_id
>22	ParameterType	unsigned
>23	Parameter	 
>24	Identifier	reverse_offset
>25	ParameterType	int
>26	Parameter	 
>27	Identifier	forward_offset
>28	ParameterType	int
>29	Parameter	 
>30	Identifier	reverse_weight
>31	ParameterType	int
>32	Parameter	 
>33	Identifier	forward_weight
>34	ParameterType	int
>35	Parameter	 
>36	Identifier	name_id
>37	ParameterType	unsigned
>38	Parameter	 
>39	Identifier	reverse_node_id
>40	ParameterType	NodeID
>41	Parameter	 
>42	Identifier	forward_node_id
>43	ParameterType	NodeID
>44	ReturnType	include < limits >
>45	CompoundStatement	 
>62	FunctionDef	PhantomNode 
>63	ParameterList	 
>64	ReturnType	int
>65	CompoundStatement	 
>66	ReturnStatement	 
>67	AdditiveExpression	forward_offset + forward_weight
>68	Identifier	forward_weight
>69	Identifier	forward_offset
>70	IfStatement	if ( SPECIAL_NODEID == forward_node_id )
>71	CompoundStatement	 
>72	ReturnStatement	 
>73	PrimaryExpression	0
>74	Condition	 
>75	EqualityExpression	SPECIAL_NODEID == forward_node_id
>76	Identifier	forward_node_id
>77	Identifier	SPECIAL_NODEID
>85	FunctionDef	PhantomNode 
>86	ParameterList	 
>87	ReturnType	int
>88	CompoundStatement	 
>89	ReturnStatement	 
>90	AdditiveExpression	reverse_offset + reverse_weight
>91	Identifier	reverse_weight
>92	Identifier	reverse_offset
>93	IfStatement	if ( SPECIAL_NODEID == reverse_node_id )
>94	CompoundStatement	 
>95	ReturnStatement	 
>96	PrimaryExpression	0
>97	Condition	 
>98	EqualityExpression	SPECIAL_NODEID == reverse_node_id
>99	Identifier	reverse_node_id
>100	Identifier	SPECIAL_NODEID
>108	FunctionDef	PhantomNode 
>109	ParameterList	 
>110	ReturnType	bool
>111	CompoundStatement	 
>112	ReturnStatement	 
>113	AndExpression	( forward_node_id != SPECIAL_NODEID ) && ( reverse_node_id != SPECIAL_NODEID )
>114	EqualityExpression	reverse_node_id != SPECIAL_NODEID
>115	Identifier	SPECIAL_NODEID
>116	Identifier	reverse_node_id
>117	EqualityExpression	forward_node_id != SPECIAL_NODEID
>118	Identifier	SPECIAL_NODEID
>119	Identifier	forward_node_id
>126	FunctionDef	PhantomNode 
>127	ParameterList	 
>128	ReturnType	bool
>129	CompoundStatement	 
>130	ReturnStatement	 
>131	OrExpression	( forward_offset != 0 ) || ( reverse_offset != 0 )
>132	EqualityExpression	reverse_offset != 0
>133	PrimaryExpression	0
>134	Identifier	reverse_offset
>135	EqualityExpression	forward_offset != 0
>136	PrimaryExpression	0
>137	Identifier	forward_offset
>143	FunctionDef	PhantomNode 
>144	ParameterList	 
>145	ReturnType	bool
>146	CompoundStatement	 
>147	ReturnStatement	 
>148	EqualityExpression	component_id != 0
>149	PrimaryExpression	0
>150	Identifier	component_id
>155	FunctionDef	PhantomNode 
>156	ParameterList	 
>157	ReturnType	bool
>158	CompoundStatement	 
>159	ReturnStatement	 
>160	AndExpression	location . is_valid ( ) && ( name_id != INVALID_NAMEID )
>161	EqualityExpression	name_id != INVALID_NAMEID
>162	Identifier	INVALID_NAMEID
>163	Identifier	name_id
>164	CallExpression	location . is_valid ( )
>165	ArgumentList	 
>166	Callee	location . is_valid
>167	MemberAccess	location . is_valid
>168	Identifier	is_valid
>169	Identifier	location
>177	FunctionDef	operator == (const PhantomNode & other)
>178	ParameterList	const PhantomNode & other
>179	Parameter	 
>180	Identifier	other
>181	ParameterType	const PhantomNode &
>182	CompoundStatement	 
>183	ReturnStatement	 
>184	EqualityExpression	location == other . location
>185	MemberAccess	other . location
>186	Identifier	location
>187	Identifier	other
>188	Identifier	location
<3=45,44,4
<4=41,38,35,32,29,26,23,20,17,14,11,8,5
<5=7,6
<8=10,9
<11=13,12
<14=16,15
<17=19,18
<20=22,21
<23=25,24
<26=28,27
<29=31,30
<32=34,33
<35=37,36
<38=40,39
<41=43,42
<62=65,64,63
<65=70,66
<66=67
<67=69,68
<70=74,71
<71=72
<72=73
<74=75
<75=77,76
<85=88,87,86
<88=93,89
<89=90
<90=92,91
<93=97,94
<94=95
<95=96
<97=98
<98=100,99
<108=111,110,109
<111=112
<112=113
<113=117,114
<114=116,115
<117=119,118
<126=129,128,127
<129=130
<130=131
<131=135,132
<132=134,133
<135=137,136
<143=146,145,144
<146=147
<147=148
<148=150,149
<155=158,157,156
<158=159
<159=160
<160=164,161
<161=163,162
<164=166,165
<166=167
<167=169,168
<177=182,178
<178=179
<179=181,180
<182=183
<183=184
<184=188,185
<185=187,186
