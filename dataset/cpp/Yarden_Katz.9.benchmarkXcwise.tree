>3	FunctionDef	main (int argc , char * argv [ ])
>4	ParameterList	int argc , char * argv [ ]
>5	Parameter	 
>6	Identifier	argv
>7	ParameterType	char * [ ]
>8	Parameter	 
>9	Identifier	argc
>10	ParameterType	int
>11	ReturnType	int
>12	CompoundStatement	 
>13	ReturnStatement	 
>14	PrimaryExpression	0
>15	ExpressionStatement	 
>16	ShiftExpression	cout << m [ 0 ] << endl
>17	ShiftExpression	m [ 0 ] << endl
>18	Identifier	endl
>19	ArrayIndexing	m [ 0 ]
>20	PrimaryExpression	0
>21	Identifier	m
>22	Identifier	cout
>23	ForStatement	for ( int a = 0 ; a < REPEAT ; a ++ )
>24	CompoundStatement	 
>25	ExpressionStatement	 
>26	AssignmentExpr	m = VECTYPE 
>27	AdditiveExpression	VECTYPE 
>28	MultiplicativeExpression	0.00005 * ( m . cwise ( ) . square ( ) + m / 4 )
>29	AdditiveExpression	m . cwise ( ) . square ( ) + m / 4
>30	MultiplicativeExpression	m / 4
>31	PrimaryExpression	4
>32	Identifier	m
>33	CallExpression	m . cwise ( ) . square ( )
>34	ArgumentList	 
>35	Callee	m . cwise ( ) . square
>36	MemberAccess	m . cwise ( ) . square
>37	Identifier	square
>38	CallExpression	m . cwise ( )
>39	ArgumentList	 
>40	Callee	m . cwise
>41	MemberAccess	m . cwise
>42	Identifier	cwise
>43	Identifier	m
>44	PrimaryExpression	0.00005
>45	CallExpression	VECTYPE 
>46	ArgumentList	VECSIZE
>47	Argument	VECSIZE
>48	Identifier	VECSIZE
>49	Callee	VECTYPE 
>50	Identifier	VECTYPE 
>51	Identifier	m
>52	IncDecOp	 
>53	IncDec	++
>54	Identifier	a
>55	Condition	 
>56	RelationalExpression	a < REPEAT
>57	Identifier	REPEAT
>58	Identifier	a
>59	ForInit	 
>60	IdentifierDeclStatement	int a = 0 ;
>61	IdentifierDecl	a = 0
>62	AssignmentExpr	a = 0
>63	PrimaryExpression	0
>64	Identifier	a
>65	Identifier	a
>66	IdentifierDeclType	int
>67	ForStatement	for ( int i = 0 ; i < VECSIZE ; i ++ )
>68	CompoundStatement	 
>69	ExpressionStatement	 
>70	AssignmentExpr	m [ i ] = 0.1 * i / VECSIZE
>71	MultiplicativeExpression	0.1 * i / VECSIZE
>72	MultiplicativeExpression	i / VECSIZE
>73	Identifier	VECSIZE
>74	Identifier	i
>75	PrimaryExpression	0.1
>76	ArrayIndexing	m [ i ]
>77	Identifier	i
>78	Identifier	m
>79	IncDecOp	 
>80	IncDec	++
>81	Identifier	i
>82	Condition	 
>83	RelationalExpression	i < VECSIZE
>84	Identifier	VECSIZE
>85	Identifier	i
>86	ForInit	 
>87	IdentifierDeclStatement	int i = 0 ;
>88	IdentifierDecl	i = 0
>89	AssignmentExpr	i = 0
>90	PrimaryExpression	0
>91	Identifier	i
>92	Identifier	i
>93	IdentifierDeclType	int
>94	IdentifierDeclStatement	 
>95	IdentifierDecl	m ( VECSIZE , 1 )
>96	Expression	VECSIZE , 1
>97	PrimaryExpression	1
>98	Identifier	VECSIZE
>99	Identifier	m
>100	IdentifierDeclType	VECTYPE
>101	IdentifierDeclStatement	 
>102	IdentifierDecl	I = VECTYPE 
>103	AssignmentExpr	I = VECTYPE 
>104	CallExpression	VECTYPE 
>105	ArgumentList	VECSIZE
>106	Argument	VECSIZE
>107	Identifier	VECSIZE
>108	Callee	VECTYPE 
>109	Identifier	VECTYPE 
>110	Identifier	I
>111	Identifier	I
>112	IdentifierDeclType	VECTYPE
<3=12,11,4
<4=8,5
<5=7,6
<8=10,9
<12=101,94,67,23,15,13
<13=14
<15=16
<16=22,17
<17=19,18
<19=21,20
<23=59,55,52,24
<24=25
<25=26
<26=51,27
<27=45,28
<28=44,29
<29=33,30
<30=32,31
<33=35,34
<35=36
<36=38,37
<38=40,39
<40=41
<41=43,42
<45=49,46
<46=47
<47=48
<49=50
<52=54,53
<55=56
<56=58,57
<59=60
<60=61
<61=66,65,62
<62=64,63
<67=86,82,79,68
<68=69
<69=70
<70=76,71
<71=75,72
<72=74,73
<76=78,77
<79=81,80
<82=83
<83=85,84
<86=87
<87=88
<88=93,92,89
<89=91,90
<94=95
<95=100,99,96
<96=98,97
<101=102
<102=112,111,103
<103=110,104
<104=108,105
<105=106
<106=107
<108=109
