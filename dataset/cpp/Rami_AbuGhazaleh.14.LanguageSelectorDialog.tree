>3	FunctionDef	CLanguageSelectorDialog 
>4	ParameterList	const ConfigFile & configfile , CWnd * pParent
>5	Parameter	 
>6	Identifier	pParent
>7	ParameterType	CWnd *
>8	Parameter	 
>9	Identifier	configfile
>10	ParameterType	const ConfigFile &
>11	CompoundStatement	 
>12	ExpressionStatement	 
>13	AssignmentExpr	m_Title = configfile . language_selector_title
>14	MemberAccess	configfile . language_selector_title
>15	Identifier	language_selector_title
>16	Identifier	configfile
>17	Identifier	m_Title
>18	ExpressionStatement	 
>19	AssignmentExpr	m_OKText = configfile . language_selector_ok
>20	MemberAccess	configfile . language_selector_ok
>21	Identifier	language_selector_ok
>22	Identifier	configfile
>23	Identifier	m_OKText
>24	ExpressionStatement	 
>25	AssignmentExpr	m_CancelText = configfile . language_selector_cancel
>26	MemberAccess	configfile . language_selector_cancel
>27	Identifier	language_selector_cancel
>28	Identifier	configfile
>29	Identifier	m_CancelText
>30	ExpressionStatement	 
>31	AssignmentExpr	m_Configurations = configfile
>32	Identifier	configfile
>33	Identifier	m_Configurations
>46	FunctionDef	CLanguageSelectorDialog 
>47	ParameterList	CDataExchange * pDX
>48	Parameter	 
>49	Identifier	pDX
>50	ParameterType	CDataExchange *
>51	ReturnType	void
>52	CompoundStatement	 
>53	ExpressionStatement	 
>54	CallExpression	DDX_Control ( pDX , IDOK , m_btnOK )
>55	ArgumentList	pDX
>56	Argument	m_btnOK
>57	Identifier	m_btnOK
>58	Argument	IDOK
>59	Identifier	IDOK
>60	Argument	pDX
>61	Identifier	pDX
>62	Callee	DDX_Control
>63	Identifier	DDX_Control
>64	ExpressionStatement	 
>65	CallExpression	DDX_Control ( pDX , IDCANCEL , m_btnCancel )
>66	ArgumentList	pDX
>67	Argument	m_btnCancel
>68	Identifier	m_btnCancel
>69	Argument	IDCANCEL
>70	Identifier	IDCANCEL
>71	Argument	pDX
>72	Identifier	pDX
>73	Callee	DDX_Control
>74	Identifier	DDX_Control
>75	ExpressionStatement	 
>76	CallExpression	DDX_Control ( pDX , IDC_LANGUAGES , m_listLanguages )
>77	ArgumentList	pDX
>78	Argument	m_listLanguages
>79	Identifier	m_listLanguages
>80	Argument	IDC_LANGUAGES
>81	Identifier	IDC_LANGUAGES
>82	Argument	pDX
>83	Identifier	pDX
>84	Callee	DDX_Control
>85	Identifier	DDX_Control
>86	ExpressionStatement	 
>87	CallExpression	CDialog 
>88	ArgumentList	pDX
>89	Argument	pDX
>90	Identifier	pDX
>91	Callee	CDialog 
>92	Identifier	CDialog 
>103	FunctionDef	CLanguageSelectorDialog 
>104	ParameterList	 
>105	ReturnType	BOOL
>106	CompoundStatement	 
>107	ReturnStatement	 
>108	Identifier	TRUE
>109	ExpressionStatement	 
>110	CallExpression	m_listLanguages . SetCurSel ( - 1 == index ? 0 
>111	ArgumentList	- 1 == index ? 0 
>112	Argument	- 1 == index ? 0 
>113	ConditionalExpression	- 1 == index ? 0 
>114	Identifier	index
>115	PrimaryExpression	0
>116	Condition	- 1 == index
>117	EqualityExpression	- 1 == index
>118	Identifier	index
>119	UnaryOp	- 1
>120	PrimaryExpression	1
>121	UnaryOperator	-
>122	Callee	m_listLanguages . SetCurSel
>123	MemberAccess	m_listLanguages . SetCurSel
>124	Identifier	SetCurSel
>125	Identifier	m_listLanguages
>126	IfStatement	if ( m_listLanguages . GetCount ( ) == 0 )
>127	CompoundStatement	 
>128	ExpressionStatement	 
>129	Statement	 
>130	Statement	 
>131	Statement	 
>132	Statement	 
>133	Statement	 
>134	Condition	 
>135	EqualityExpression	m_listLanguages . GetCount ( ) == 0
>136	PrimaryExpression	0
>137	CallExpression	m_listLanguages . GetCount ( )
>138	ArgumentList	 
>139	Callee	m_listLanguages . GetCount
>140	MemberAccess	m_listLanguages . GetCount
>141	Identifier	GetCount
>142	Identifier	m_listLanguages
>143	CompoundStatement	 
>144	ExpressionStatement	 
>145	CallExpression	m_listLanguages . SetItemDataPtr ( m_listLanguages . GetCount ( ) - 1 , static_cast < LPVOID > ( get ( configuration ) ) )
>146	ArgumentList	m_listLanguages . GetCount ( ) - 1
>147	Argument	static_cast < LPVOID > ( get ( configuration ) )
>148	RelationalExpression	static_cast < LPVOID > ( get ( configuration ) )
>149	RelationalExpression	LPVOID > ( get ( configuration ) )
>150	CallExpression	get ( configuration )
>151	ArgumentList	configuration
>152	Argument	configuration
>153	Identifier	configuration
>154	Callee	get
>155	Identifier	get
>156	Identifier	LPVOID
>157	Identifier	static_cast
>158	Argument	m_listLanguages . GetCount ( ) - 1
>159	AdditiveExpression	m_listLanguages . GetCount ( ) - 1
>160	PrimaryExpression	1
>161	CallExpression	m_listLanguages . GetCount ( )
>162	ArgumentList	 
>163	Callee	m_listLanguages . GetCount
>164	MemberAccess	m_listLanguages . GetCount
>165	Identifier	GetCount
>166	Identifier	m_listLanguages
>167	Callee	m_listLanguages . SetItemDataPtr
>168	MemberAccess	m_listLanguages . SetItemDataPtr
>169	Identifier	SetItemDataPtr
>170	Identifier	m_listLanguages
>171	ExpressionStatement	 
>172	CallExpression	m_listLanguages . AddString ( configuration -> GetLanguageString ( ) . c_str ( ) )
>173	ArgumentList	configuration -> GetLanguageString ( ) . c_str ( )
>174	Argument	configuration -> GetLanguageString ( ) . c_str ( )
>175	CallExpression	configuration -> GetLanguageString ( ) . c_str ( )
>176	ArgumentList	 
>177	Callee	configuration -> GetLanguageString ( ) . c_str
>178	MemberAccess	configuration -> GetLanguageString ( ) . c_str
>179	Identifier	c_str
>180	CallExpression	configuration -> GetLanguageString ( )
>181	ArgumentList	 
>182	Callee	configuration -> GetLanguageString
>183	PtrMemberAccess	configuration -> GetLanguageString
>184	Identifier	GetLanguageString
>185	Identifier	configuration
>186	Callee	m_listLanguages . AddString
>187	MemberAccess	m_listLanguages . AddString
>188	Identifier	AddString
>189	Identifier	m_listLanguages
>190	IfStatement	if ( - 1 == index && configuration -> IsSupported ( lcid ) )
>191	CompoundStatement	 
>192	ExpressionStatement	 
>193	AssignmentExpr	index = std 
>194	AdditiveExpression	std 
>195	CallExpression	m_Configurations . begin ( )
>196	ArgumentList	 
>197	Callee	m_Configurations . begin
>198	MemberAccess	m_Configurations . begin
>199	Identifier	begin
>200	Identifier	m_Configurations
>201	CallExpression	std 
>202	ArgumentList	m_Configurations . begin ( )
>203	Argument	configuration
>204	Identifier	configuration
>205	Argument	m_Configurations . end ( )
>206	CallExpression	m_Configurations . end ( )
>207	ArgumentList	 
>208	Callee	m_Configurations . end
>209	MemberAccess	m_Configurations . end
>210	Identifier	end
>211	Identifier	m_Configurations
>212	Argument	m_Configurations . begin ( )
>213	CallExpression	m_Configurations . begin ( )
>214	ArgumentList	 
>215	Callee	m_Configurations . begin
>216	MemberAccess	m_Configurations . begin
>217	Identifier	begin
>218	Identifier	m_Configurations
>219	Callee	std 
>220	Identifier	std 
>221	Identifier	index
>222	Condition	 
>223	AndExpression	- 1 == index && configuration -> IsSupported ( lcid )
>224	CallExpression	configuration -> IsSupported ( lcid )
>225	ArgumentList	lcid
>226	Argument	lcid
>227	Identifier	lcid
>228	Callee	configuration -> IsSupported
>229	PtrMemberAccess	configuration -> IsSupported
>230	Identifier	IsSupported
>231	Identifier	configuration
>232	EqualityExpression	- 1 == index
>233	Identifier	index
>234	UnaryOp	- 1
>235	PrimaryExpression	1
>236	UnaryOperator	-
>237	Statement	 
>238	Statement	 
>239	Statement	 
>240	Statement	 
>241	Statement	 
>242	Statement	 
>243	Statement	 
>244	Statement	 
>245	Statement	 
>246	Statement	 
>247	IdentifierDeclStatement	 
>248	IdentifierDecl	index = - 1
>249	AssignmentExpr	index = - 1
>250	UnaryOp	- 1
>251	PrimaryExpression	1
>252	UnaryOperator	-
>253	Identifier	index
>254	Identifier	index
>255	IdentifierDeclType	int
>256	IdentifierDeclStatement	 
>257	IdentifierDecl	lcid = DVLib 
>258	AssignmentExpr	lcid = DVLib 
>259	CallExpression	DVLib 
>260	ArgumentList	lcidType
>261	Argument	lcidType
>262	Identifier	lcidType
>263	Callee	DVLib 
>264	Identifier	DVLib 
>265	Identifier	lcid
>266	Identifier	lcid
>267	IdentifierDeclType	LCID
>268	IdentifierDeclStatement	 
>269	IdentifierDecl	lcidType = InstallerSession 
>270	AssignmentExpr	lcidType = InstallerSession 
>271	PtrMemberAccess	InstallerSession 
>272	Identifier	lcidtype
>273	Identifier	InstallerSession 
>274	Identifier	lcidType
>275	Identifier	lcidType
>276	IdentifierDeclType	DVLib 
>277	ExpressionStatement	 
>278	CallExpression	SetWindowText ( m_Title . c_str ( ) )
>279	ArgumentList	m_Title . c_str ( )
>280	Argument	m_Title . c_str ( )
>281	CallExpression	m_Title . c_str ( )
>282	ArgumentList	 
>283	Callee	m_Title . c_str
>284	MemberAccess	m_Title . c_str
>285	Identifier	c_str
>286	Identifier	m_Title
>287	Callee	SetWindowText
>288	Identifier	SetWindowText
>289	ExpressionStatement	 
>290	CallExpression	m_btnOK . SetWindowText ( m_OKText . c_str ( ) )
>291	ArgumentList	m_OKText . c_str ( )
>292	Argument	m_OKText . c_str ( )
>293	CallExpression	m_OKText . c_str ( )
>294	ArgumentList	 
>295	Callee	m_OKText . c_str
>296	MemberAccess	m_OKText . c_str
>297	Identifier	c_str
>298	Identifier	m_OKText
>299	Callee	m_btnOK . SetWindowText
>300	MemberAccess	m_btnOK . SetWindowText
>301	Identifier	SetWindowText
>302	Identifier	m_btnOK
>303	ExpressionStatement	 
>304	CallExpression	m_btnCancel . SetWindowText ( m_CancelText . c_str ( ) )
>305	ArgumentList	m_CancelText . c_str ( )
>306	Argument	m_CancelText . c_str ( )
>307	CallExpression	m_CancelText . c_str ( )
>308	ArgumentList	 
>309	Callee	m_CancelText . c_str
>310	MemberAccess	m_CancelText . c_str
>311	Identifier	c_str
>312	Identifier	m_CancelText
>313	Callee	m_btnCancel . SetWindowText
>314	MemberAccess	m_btnCancel . SetWindowText
>315	Identifier	SetWindowText
>316	Identifier	m_btnCancel
>317	ExpressionStatement	 
>318	Statement	 
>319	Statement	 
>320	Statement	 
>321	Statement	 
>322	Statement	 
>323	Statement	 
>324	Statement	 
>325	Statement	 
>326	Statement	 
>327	Statement	 
>328	ExpressionStatement	 
>329	CallExpression	CDialog 
>330	ArgumentList	 
>331	Callee	CDialog 
>332	Identifier	CDialog 
>366	FunctionDef	CLanguageSelectorDialog 
>367	ParameterList	 
>368	ReturnType	void
>369	CompoundStatement	 
>370	ExpressionStatement	 
>371	CallExpression	CDialog 
>372	ArgumentList	 
>373	Callee	CDialog 
>374	Identifier	CDialog 
>375	ExpressionStatement	 
>376	AssignmentExpr	InstallerSession 
>377	CallExpression	p -> GetLanguageString ( )
>378	ArgumentList	 
>379	Callee	p -> GetLanguageString
>380	PtrMemberAccess	p -> GetLanguageString
>381	Identifier	GetLanguageString
>382	Identifier	p
>383	PtrMemberAccess	InstallerSession 
>384	Identifier	language
>385	Identifier	InstallerSession 
>386	ExpressionStatement	 
>387	AssignmentExpr	InstallerSession 
>388	CallExpression	DVLib 
>389	ArgumentList	p -> language_id
>390	Argument	p -> language_id
>391	PtrMemberAccess	p -> language_id
>392	Identifier	language_id
>393	Identifier	p
>394	Callee	DVLib 
>395	Identifier	DVLib 
>396	PtrMemberAccess	InstallerSession 
>397	Identifier	languageid
>398	Identifier	InstallerSession 
>399	ExpressionStatement	 
>400	Statement	 
>401	Statement	 
>402	Statement	 
>403	Statement	 
>404	Statement	 
>405	Statement	 
>406	Statement	 
>407	Statement	 
>408	Statement	 
>409	ExpressionStatement	 
>410	Statement	 
>411	Statement	 
>412	Statement	 
>413	Statement	 
>414	Statement	 
>415	Statement	 
>416	Statement	 
>417	Statement	 
>418	Statement	 
>419	Statement	 
>420	Statement	 
>421	Statement	 
>422	Statement	 
>423	Statement	 
>424	Statement	 
>425	Statement	 
>426	Statement	 
>427	Statement	 
>428	Statement	 
>429	Statement	 
>430	Statement	 
>431	ExpressionStatement	 
>432	Statement	 
>433	Statement	 
>434	Statement	 
>435	Statement	 
>436	Statement	 
>437	Statement	 
>438	Statement	 
>439	Statement	 
>440	Statement	 
>441	ExpressionStatement	 
>442	CallExpression	m_listLanguages . GetItemDataPtr ( m_listLanguages . GetCurSel ( ) )
>443	ArgumentList	m_listLanguages . GetCurSel ( )
>444	Argument	m_listLanguages . GetCurSel ( )
>445	CallExpression	m_listLanguages . GetCurSel ( )
>446	ArgumentList	 
>447	Callee	m_listLanguages . GetCurSel
>448	MemberAccess	m_listLanguages . GetCurSel
>449	Identifier	GetCurSel
>450	Identifier	m_listLanguages
>451	Callee	m_listLanguages . GetItemDataPtr
>452	MemberAccess	m_listLanguages . GetItemDataPtr
>453	Identifier	GetItemDataPtr
>454	Identifier	m_listLanguages
>455	Statement	 
>456	Statement	 
>457	Statement	 
>458	Statement	 
>459	Statement	 
>460	Statement	 
>461	Statement	 
>462	Statement	 
>463	Statement	 
<3=11,4
<4=8,5
<5=7,6
<8=10,9
<11=30,24,18,12
<12=13
<13=17,14
<14=16,15
<18=19
<19=23,20
<20=22,21
<24=25
<25=29,26
<26=28,27
<30=31
<31=33,32
<46=52,51,47
<47=48
<48=50,49
<52=86,75,64,53
<53=54
<54=62,55
<55=60,58,56
<56=57
<58=59
<60=61
<62=63
<64=65
<65=73,66
<66=71,69,67
<67=68
<69=70
<71=72
<73=74
<75=76
<76=84,77
<77=82,80,78
<78=79
<80=81
<82=83
<84=85
<86=87
<87=91,88
<88=89
<89=90
<91=92
<103=106,105,104
<106=328,327,326,325,324,323,322,321,320,319,318,317,303,289,277,268,256,247,246,245,244,243,242,241,240,239,238,237,143,126,109,107
<107=108
<109=110
<110=122,111
<111=112
<112=113
<113=116,115,114
<116=117
<117=119,118
<119=121,120
<122=123
<123=125,124
<126=134,127
<127=133,132,131,130,129,128
<134=135
<135=137,136
<137=139,138
<139=140
<140=142,141
<143=190,171,144
<144=145
<145=167,146
<146=158,147
<147=148
<148=157,149
<149=156,150
<150=154,151
<151=152
<152=153
<154=155
<158=159
<159=161,160
<161=163,162
<163=164
<164=166,165
<167=168
<168=170,169
<171=172
<172=186,173
<173=174
<174=175
<175=177,176
<177=178
<178=180,179
<180=182,181
<182=183
<183=185,184
<186=187
<187=189,188
<190=222,191
<191=192
<192=193
<193=221,194
<194=201,195
<195=197,196
<197=198
<198=200,199
<201=219,202
<202=212,205,203
<203=204
<205=206
<206=208,207
<208=209
<209=211,210
<212=213
<213=215,214
<215=216
<216=218,217
<219=220
<222=223
<223=232,224
<224=228,225
<225=226
<226=227
<228=229
<229=231,230
<232=234,233
<234=236,235
<247=248
<248=255,254,249
<249=253,250
<250=252,251
<256=257
<257=267,266,258
<258=265,259
<259=263,260
<260=261
<261=262
<263=264
<268=269
<269=276,275,270
<270=274,271
<271=273,272
<277=278
<278=287,279
<279=280
<280=281
<281=283,282
<283=284
<284=286,285
<287=288
<289=290
<290=299,291
<291=292
<292=293
<293=295,294
<295=296
<296=298,297
<299=300
<300=302,301
<303=304
<304=313,305
<305=306
<306=307
<307=309,308
<309=310
<310=312,311
<313=314
<314=316,315
<328=329
<329=331,330
<331=332
<366=369,368,367
<369=463,462,461,460,459,370,375,386,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,455,456,457,458
<370=371
<371=373,372
<373=374
<375=376
<376=383,377
<377=379,378
<379=380
<380=382,381
<383=385,384
<386=387
<387=396,388
<388=394,389
<389=390
<390=391
<391=393,392
<394=395
<396=398,397
<441=442
<442=451,443
<443=444
<444=445
<445=447,446
<447=448
<448=450,449
<451=452
<452=454,453
