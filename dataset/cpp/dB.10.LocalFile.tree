>3	FunctionDef	CLocalFile 
>4	ParameterList	const CString & Filename
>5	Parameter	 
>6	Identifier	Filename
>7	ParameterType	const CString &
>8	CompoundStatement	 
>9	ExpressionStatement	 
>10	CallExpression	SetFilename ( Filename )
>11	ArgumentList	Filename
>12	Argument	Filename
>13	Identifier	Filename
>14	Callee	SetFilename
>15	Identifier	SetFilename
>20	FunctionDef	CLocalFile 
>21	ParameterList	 
>22	CompoundStatement	 
>23	ExpressionStatement	 
>24	AssignmentExpr	m_HttpError = 200
>25	PrimaryExpression	200
>26	Identifier	m_HttpError
>27	ExpressionStatement	 
>28	AssignmentExpr	m_FileHandle = - 1
>29	UnaryOp	- 1
>30	PrimaryExpression	1
>31	UnaryOperator	-
>32	Identifier	m_FileHandle
>38	FunctionDef	CLocalFile 
>39	ParameterList	const CString & Filename
>40	Parameter	 
>41	Identifier	Filename
>42	ParameterType	const CString &
>43	ReturnType	void
>44	CompoundStatement	 
>45	ExpressionStatement	 
>46	AssignmentExpr	m_HttpError = 200
>47	PrimaryExpression	200
>48	Identifier	m_HttpError
>49	ExpressionStatement	 
>50	AssignmentExpr	m_FileHandle = - 1
>51	UnaryOp	- 1
>52	PrimaryExpression	1
>53	UnaryOperator	-
>54	Identifier	m_FileHandle
>55	ExpressionStatement	 
>56	AssignmentExpr	m_LocalPath = Filename
>57	Identifier	Filename
>58	Identifier	m_LocalPath
>59	ExpressionStatement	 
>60	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalFile
>61	ArgumentList	tagSystem
>62	Argument	\"CLocalFile
>63	Expression	\"CLocalFile
>64	CallExpression	Filename . GetBuffer ( )
>65	ArgumentList	 
>66	Callee	Filename . GetBuffer
>67	MemberAccess	Filename . GetBuffer
>68	Identifier	GetBuffer
>69	Identifier	Filename
>70	PrimaryExpression	\"CLocalFile
>71	Argument	levInfo
>72	Identifier	levInfo
>73	Argument	tagSystem
>74	Identifier	tagSystem
>75	Callee	Trace
>76	Identifier	Trace
>87	FunctionDef	CLocalFile 
>88	ParameterList	 
>89	CompoundStatement	 
>90	ExpressionStatement	 
>91	CallExpression	Close ( )
>92	ArgumentList	 
>93	Callee	Close
>94	Identifier	Close
>98	FunctionDef	CLocalFile 
>99	ParameterList	int Flags , mode_t Mode
>100	Parameter	 
>101	Identifier	Mode
>102	ParameterType	mode_t
>103	Parameter	 
>104	Identifier	Flags
>105	ParameterType	int
>106	ReturnType	bool
>107	CompoundStatement	 
>108	IfStatement	if ( m_FileHandle == - 1 )
>109	ElseStatement	else
>110	CompoundStatement	 
>111	ReturnStatement	 
>112	Identifier	true
>113	ExpressionStatement	 
>114	CallExpression	m_StringError . Empty ( )
>115	ArgumentList	 
>116	Callee	m_StringError . Empty
>117	MemberAccess	m_StringError . Empty
>118	Identifier	Empty
>119	Identifier	m_StringError
>120	ExpressionStatement	 
>121	AssignmentExpr	m_HttpError = 200
>122	PrimaryExpression	200
>123	Identifier	m_HttpError
>124	CompoundStatement	 
>125	ReturnStatement	 
>126	Identifier	false
>127	ExpressionStatement	 
>128	CallExpression	Error ( )
>129	ArgumentList	 
>130	Callee	Error
>131	Identifier	Error
>132	Condition	 
>133	EqualityExpression	m_FileHandle == - 1
>134	UnaryOp	- 1
>135	PrimaryExpression	1
>136	UnaryOperator	-
>137	Identifier	m_FileHandle
>138	ExpressionStatement	 
>139	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalFile
>140	ArgumentList	tagSystem
>141	Argument	\"CLocalFile
>142	Expression	\"CLocalFile
>143	Expression	GetFullPath ( ) . GetBuffer ( ) , m_FileHandle
>144	Identifier	m_FileHandle
>145	CallExpression	GetFullPath ( ) . GetBuffer ( )
>146	ArgumentList	 
>147	Callee	GetFullPath ( ) . GetBuffer
>148	MemberAccess	GetFullPath ( ) . GetBuffer
>149	Identifier	GetBuffer
>150	CallExpression	GetFullPath ( )
>151	ArgumentList	 
>152	Callee	GetFullPath
>153	Identifier	GetFullPath
>154	PrimaryExpression	\"CLocalFile
>155	Argument	levInfo
>156	Identifier	levInfo
>157	Argument	tagSystem
>158	Identifier	tagSystem
>159	Callee	Trace
>160	Identifier	Trace
>161	ExpressionStatement	 
>162	AssignmentExpr	m_FileHandle = base_open ( ( const char * ) GetFullPath ( ) . GetBuffer ( ) , Flags , Mode )
>163	CallExpression	base_open ( ( const char * ) GetFullPath ( ) . GetBuffer ( ) , Flags , Mode )
>164	ArgumentList	( const char * ) GetFullPath ( ) . GetBuffer ( )
>165	Argument	Mode
>166	Identifier	Mode
>167	Argument	Flags
>168	Identifier	Flags
>169	Argument	( const char * ) GetFullPath ( ) . GetBuffer ( )
>170	CastExpression	( const char * ) GetFullPath ( ) . GetBuffer ( )
>171	CallExpression	GetFullPath ( ) . GetBuffer ( )
>172	ArgumentList	 
>173	Callee	GetFullPath ( ) . GetBuffer
>174	MemberAccess	GetFullPath ( ) . GetBuffer
>175	Identifier	GetBuffer
>176	CallExpression	GetFullPath ( )
>177	ArgumentList	 
>178	Callee	GetFullPath
>179	Identifier	GetFullPath
>180	CastTarget	const char *
>181	Callee	base_open
>182	Identifier	base_open
>183	Identifier	m_FileHandle
>184	IfStatement	if ( m_FileHandle != - 1 )
>185	ExpressionStatement	 
>186	CallExpression	Close ( )
>187	ArgumentList	 
>188	Callee	Close
>189	Identifier	Close
>190	Condition	 
>191	EqualityExpression	m_FileHandle != - 1
>192	UnaryOp	- 1
>193	PrimaryExpression	1
>194	UnaryOperator	-
>195	Identifier	m_FileHandle
>211	FunctionDef	CLocalFile 
>212	ParameterList	 
>213	ReturnType	bool
>214	CompoundStatement	 
>215	ReturnStatement	 
>216	Identifier	Result
>217	IfStatement	if ( m_FileHandle != - 1 )
>218	CompoundStatement	 
>219	ExpressionStatement	 
>220	AssignmentExpr	m_FileHandle = - 1
>221	UnaryOp	- 1
>222	PrimaryExpression	1
>223	UnaryOperator	-
>224	Identifier	m_FileHandle
>225	ExpressionStatement	 
>226	AssignmentExpr	Result = ( base_close ( m_FileHandle ) == 0 )
>227	EqualityExpression	base_close ( m_FileHandle ) == 0
>228	PrimaryExpression	0
>229	CallExpression	base_close ( m_FileHandle )
>230	ArgumentList	m_FileHandle
>231	Argument	m_FileHandle
>232	Identifier	m_FileHandle
>233	Callee	base_close
>234	Identifier	base_close
>235	Identifier	Result
>236	Condition	 
>237	EqualityExpression	m_FileHandle != - 1
>238	UnaryOp	- 1
>239	PrimaryExpression	1
>240	UnaryOperator	-
>241	Identifier	m_FileHandle
>242	ExpressionStatement	 
>243	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalFile
>244	ArgumentList	tagSystem
>245	Argument	\"CLocalFile
>246	Expression	\"CLocalFile
>247	Identifier	m_FileHandle
>248	PrimaryExpression	\"CLocalFile
>249	Argument	levInfo
>250	Identifier	levInfo
>251	Argument	tagSystem
>252	Identifier	tagSystem
>253	Callee	Trace
>254	Identifier	Trace
>255	IdentifierDeclStatement	 
>256	IdentifierDecl	Result = false
>257	AssignmentExpr	Result = false
>258	Identifier	false
>259	Identifier	false
>260	Identifier	Result
>261	IdentifierDeclType	bool
>271	FunctionDef	CLocalFile 
>272	ParameterList	off_t Offset , int Whence
>273	Parameter	 
>274	Identifier	Whence
>275	ParameterType	int
>276	Parameter	 
>277	Identifier	Offset
>278	ParameterType	off_t
>279	ReturnType	off_t
>280	CompoundStatement	 
>281	IfStatement	if ( Verify ( ) )
>282	ElseStatement	else
>283	ReturnStatement	 
>284	UnaryOp	- 1
>285	PrimaryExpression	1
>286	UnaryOperator	-
>287	CompoundStatement	 
>288	IfStatement	if ( m_FileHandle == - 1 )
>289	ElseStatement	else
>290	ReturnStatement	 
>291	CallExpression	base_seek ( m_FileHandle , Offset , Whence )
>292	ArgumentList	m_FileHandle
>293	Argument	Whence
>294	Identifier	Whence
>295	Argument	Offset
>296	Identifier	Offset
>297	Argument	m_FileHandle
>298	Identifier	m_FileHandle
>299	Callee	base_seek
>300	Identifier	base_seek
>301	ReturnStatement	 
>302	UnaryOp	- 1
>303	PrimaryExpression	1
>304	UnaryOperator	-
>305	Condition	 
>306	EqualityExpression	m_FileHandle == - 1
>307	UnaryOp	- 1
>308	PrimaryExpression	1
>309	UnaryOperator	-
>310	Identifier	m_FileHandle
>311	Condition	 
>312	CallExpression	Verify ( )
>313	ArgumentList	 
>314	Callee	Verify
>315	Identifier	Verify
>324	FunctionDef	CLocalFile 
>325	ParameterList	bool Preserve
>326	Parameter	 
>327	Identifier	Preserve
>328	ParameterType	bool
>329	ReturnType	off_t
>330	CompoundStatement	 
>331	IfStatement	if ( Verify ( ) )
>332	ElseStatement	else
>333	ReturnStatement	 
>334	UnaryOp	- 1
>335	PrimaryExpression	1
>336	UnaryOperator	-
>337	CompoundStatement	 
>338	ReturnStatement	 
>339	Identifier	Result
>340	ExpressionStatement	 
>341	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalFile
>342	ArgumentList	tagSystem
>343	Argument	\"CLocalFile
>344	Expression	\"CLocalFile
>345	Expression	GetFullPath ( ) . GetBuffer ( ) , Result
>346	Identifier	Result
>347	CallExpression	GetFullPath ( ) . GetBuffer ( )
>348	ArgumentList	 
>349	Callee	GetFullPath ( ) . GetBuffer
>350	MemberAccess	GetFullPath ( ) . GetBuffer
>351	Identifier	GetBuffer
>352	CallExpression	GetFullPath ( )
>353	ArgumentList	 
>354	Callee	GetFullPath
>355	Identifier	GetFullPath
>356	PrimaryExpression	\"CLocalFile
>357	Argument	levInfo
>358	Identifier	levInfo
>359	Argument	tagSystem
>360	Identifier	tagSystem
>361	Callee	Trace
>362	Identifier	Trace
>363	IfStatement	if ( Preserve )
>364	ExpressionStatement	 
>365	CallExpression	Seek ( CurrentOffset )
>366	ArgumentList	CurrentOffset
>367	Argument	CurrentOffset
>368	Identifier	CurrentOffset
>369	Callee	Seek
>370	Identifier	Seek
>371	Condition	 
>372	Identifier	Preserve
>373	IdentifierDeclStatement	 
>374	IdentifierDecl	Result = Forward ( )
>375	AssignmentExpr	Result = Forward ( )
>376	CallExpression	Forward ( )
>377	ArgumentList	 
>378	Callee	Forward
>379	Identifier	Forward
>380	Identifier	Result
>381	Identifier	Result
>382	IdentifierDeclType	off_t
>383	IfStatement	if ( Preserve )
>384	ExpressionStatement	 
>385	AssignmentExpr	CurrentOffset = GetOffset ( )
>386	CallExpression	GetOffset ( )
>387	ArgumentList	 
>388	Callee	GetOffset
>389	Identifier	GetOffset
>390	Identifier	CurrentOffset
>391	Condition	 
>392	Identifier	Preserve
>393	IdentifierDeclStatement	 
>394	IdentifierDecl	CurrentOffset = 0
>395	AssignmentExpr	CurrentOffset = 0
>396	PrimaryExpression	0
>397	Identifier	CurrentOffset
>398	Identifier	CurrentOffset
>399	IdentifierDeclType	off_t
>400	Condition	 
>401	CallExpression	Verify ( )
>402	ArgumentList	 
>403	Callee	Verify
>404	Identifier	Verify
>418	FunctionDef	CLocalFile 
>419	ParameterList	CString * pResult
>420	Parameter	 
>421	Identifier	pResult
>422	ParameterType	CString *
>423	ReturnType	int
>424	CompoundStatement	 
>425	ReturnStatement	 
>426	PrimaryExpression	0
>427	IfStatement	if ( lFileSize == - 1 )
>428	ElseStatement	else
>429	ReturnStatement	 
>430	CallExpression	Read ( pResult , lFileSize , 0 )
>431	ArgumentList	pResult
>432	Argument	0
>433	PrimaryExpression	0
>434	Argument	lFileSize
>435	Identifier	lFileSize
>436	Argument	pResult
>437	Identifier	pResult
>438	Callee	Read
>439	Identifier	Read
>440	ExpressionStatement	 
>441	CallExpression	pResult -> Empty ( )
>442	ArgumentList	 
>443	Callee	pResult -> Empty
>444	PtrMemberAccess	pResult -> Empty
>445	Identifier	Empty
>446	Identifier	pResult
>447	Condition	 
>448	EqualityExpression	lFileSize == - 1
>449	UnaryOp	- 1
>450	PrimaryExpression	1
>451	UnaryOperator	-
>452	Identifier	lFileSize
>453	IdentifierDeclStatement	 
>454	IdentifierDecl	lFileSize = GetSize ( false )
>455	AssignmentExpr	lFileSize = GetSize ( false )
>456	CallExpression	GetSize ( false )
>457	ArgumentList	false
>458	Argument	false
>459	Identifier	false
>460	Callee	GetSize
>461	Identifier	GetSize
>462	Identifier	lFileSize
>463	Identifier	lFileSize
>464	IdentifierDeclType	off_t
>473	FunctionDef	CLocalFile 
>474	ParameterList	CString * pResult , const int Bytes , const off_t Offset
>475	Parameter	 
>476	Identifier	Offset
>477	ParameterType	const off_t
>478	Parameter	 
>479	Identifier	Bytes
>480	ParameterType	const int
>481	Parameter	 
>482	Identifier	pResult
>483	ParameterType	CString *
>484	ReturnType	int
>485	CompoundStatement	 
>486	IfStatement	if ( Verify ( ) )
>487	ElseStatement	else
>488	ReturnStatement	 
>489	PrimaryExpression	0
>490	CompoundStatement	 
>491	ReturnStatement	 
>492	CallExpression	pResult -> GetLength ( )
>493	ArgumentList	 
>494	Callee	pResult -> GetLength
>495	PtrMemberAccess	pResult -> GetLength
>496	Identifier	GetLength
>497	Identifier	pResult
>498	ExpressionStatement	 
>499	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalFile
>500	ArgumentList	tagSystem
>501	Argument	\"CLocalFile
>502	Expression	\"CLocalFile
>503	CallExpression	pResult -> GetLength ( )
>504	ArgumentList	 
>505	Callee	pResult -> GetLength
>506	PtrMemberAccess	pResult -> GetLength
>507	Identifier	GetLength
>508	Identifier	pResult
>509	PrimaryExpression	\"CLocalFile
>510	Argument	levInfo
>511	Identifier	levInfo
>512	Argument	tagSystem
>513	Identifier	tagSystem
>514	Callee	Trace
>515	Identifier	Trace
>516	IfStatement	if ( Bytes > 0 )
>517	CompoundStatement	 
>518	IfStatement	if ( ReadBytes > 0 )
>519	ElseStatement	else
>520	ExpressionStatement	 
>521	CallExpression	pResult -> Empty ( )
>522	ArgumentList	 
>523	Callee	pResult -> Empty
>524	PtrMemberAccess	pResult -> Empty
>525	Identifier	Empty
>526	Identifier	pResult
>527	ExpressionStatement	 
>528	CallExpression	pResult -> SetLength ( ReadBytes )
>529	ArgumentList	ReadBytes
>530	Argument	ReadBytes
>531	Identifier	ReadBytes
>532	Callee	pResult -> SetLength
>533	PtrMemberAccess	pResult -> SetLength
>534	Identifier	SetLength
>535	Identifier	pResult
>536	Condition	 
>537	RelationalExpression	ReadBytes > 0
>538	PrimaryExpression	0
>539	Identifier	ReadBytes
>540	IdentifierDeclStatement	 
>541	IdentifierDecl	ReadBytes = base_read ( m_FileHandle , ( void * ) pResult -> GetBuffer ( ) , Bytes )
>542	AssignmentExpr	ReadBytes = base_read ( m_FileHandle , ( void * ) pResult -> GetBuffer ( ) , Bytes )
>543	CallExpression	base_read ( m_FileHandle , ( void * ) pResult -> GetBuffer ( ) , Bytes )
>544	ArgumentList	m_FileHandle
>545	Argument	Bytes
>546	Identifier	Bytes
>547	Argument	( void * ) pResult -> GetBuffer ( )
>548	CastExpression	( void * ) pResult -> GetBuffer ( )
>549	CallExpression	pResult -> GetBuffer ( )
>550	ArgumentList	 
>551	Callee	pResult -> GetBuffer
>552	PtrMemberAccess	pResult -> GetBuffer
>553	Identifier	GetBuffer
>554	Identifier	pResult
>555	CastTarget	void *
>556	Argument	m_FileHandle
>557	Identifier	m_FileHandle
>558	Callee	base_read
>559	Identifier	base_read
>560	Identifier	ReadBytes
>561	Identifier	ReadBytes
>562	IdentifierDeclType	ssize_t
>563	ExpressionStatement	 
>564	CallExpression	pResult -> SetLength ( Bytes )
>565	ArgumentList	Bytes
>566	Argument	Bytes
>567	Identifier	Bytes
>568	Callee	pResult -> SetLength
>569	PtrMemberAccess	pResult -> SetLength
>570	Identifier	SetLength
>571	Identifier	pResult
>572	IfStatement	if ( Offset != - 1 )
>573	IfStatement	if ( Seek ( Offset ) == - 1 )
>574	ReturnStatement	 
>575	PrimaryExpression	0
>576	Condition	 
>577	EqualityExpression	Seek ( Offset ) == - 1
>578	UnaryOp	- 1
>579	PrimaryExpression	1
>580	UnaryOperator	-
>581	CallExpression	Seek ( Offset )
>582	ArgumentList	Offset
>583	Argument	Offset
>584	Identifier	Offset
>585	Callee	Seek
>586	Identifier	Seek
>587	Condition	 
>588	EqualityExpression	Offset != - 1
>589	UnaryOp	- 1
>590	PrimaryExpression	1
>591	UnaryOperator	-
>592	Identifier	Offset
>593	Condition	 
>594	RelationalExpression	Bytes > 0
>595	PrimaryExpression	0
>596	Identifier	Bytes
>597	Condition	 
>598	CallExpression	Verify ( )
>599	ArgumentList	 
>600	Callee	Verify
>601	Identifier	Verify
>602	ExpressionStatement	 
>603	CallExpression	pResult -> Empty ( )
>604	ArgumentList	 
>605	Callee	pResult -> Empty
>606	PtrMemberAccess	pResult -> Empty
>607	Identifier	Empty
>608	Identifier	pResult
>625	FunctionDef	CLocalFile 
>626	ParameterList	CString * pResult , const off_t Offset
>627	Parameter	 
>628	Identifier	Offset
>629	ParameterType	const off_t
>630	Parameter	 
>631	Identifier	pResult
>632	ParameterType	CString *
>633	ReturnType	int
>634	CompoundStatement	 
>635	IfStatement	if ( Verify ( ) )
>636	ElseStatement	else
>637	ReturnStatement	 
>638	PrimaryExpression	0
>639	CompoundStatement	 
>640	ReturnStatement	 
>641	CallExpression	pResult -> GetLength ( )
>642	ArgumentList	 
>643	Callee	pResult -> GetLength
>644	PtrMemberAccess	pResult -> GetLength
>645	Identifier	GetLength
>646	Identifier	pResult
>647	ExpressionStatement	 
>648	CallExpression	Trace ( tagSystem , levInfo , ( \"CLocalFile
>649	ArgumentList	tagSystem
>650	Argument	\"CLocalFile
>651	Expression	\"CLocalFile
>652	CallExpression	pResult -> GetLength ( )
>653	ArgumentList	 
>654	Callee	pResult -> GetLength
>655	PtrMemberAccess	pResult -> GetLength
>656	Identifier	GetLength
>657	Identifier	pResult
>658	PrimaryExpression	\"CLocalFile
>659	Argument	levInfo
>660	Identifier	levInfo
>661	Argument	tagSystem
>662	Identifier	tagSystem
>663	Callee	Trace
>664	Identifier	Trace
>665	IfStatement	if ( CurrentBufferPosition )
>666	ExpressionStatement	 
>667	CallExpression	pResult -> Append ( Buffer , CurrentBufferPosition )
>668	ArgumentList	Buffer
>669	Argument	CurrentBufferPosition
>670	Identifier	CurrentBufferPosition
>671	Argument	Buffer
>672	Identifier	Buffer
>673	Callee	pResult -> Append
>674	PtrMemberAccess	pResult -> Append
>675	Identifier	Append
>676	Identifier	pResult
>677	Condition	 
>678	Identifier	CurrentBufferPosition
>679	ExpressionStatement	 
>680	AssignmentExpr	Buffer [ CurrentBufferPosition ] = 0
>681	PrimaryExpression	0
>682	ArrayIndexing	Buffer [ CurrentBufferPosition ]
>683	Identifier	CurrentBufferPosition
>684	Identifier	Buffer
>685	WhileStatement	while ( base_read ( m_FileHandle , ( void * ) & c , 1 ) == 1 )
>686	CompoundStatement	 
>687	IfStatement	if ( CurrentBufferPosition == DEFAULT_LINE_SIZE )
>688	CompoundStatement	 
>689	ExpressionStatement	 
>690	AssignmentExpr	CurrentBufferPosition = 0
>691	PrimaryExpression	0
>692	Identifier	CurrentBufferPosition
>693	ExpressionStatement	 
>694	CallExpression	pResult -> Append ( Buffer , CurrentBufferPosition )
>695	ArgumentList	Buffer
>696	Argument	CurrentBufferPosition
>697	Identifier	CurrentBufferPosition
>698	Argument	Buffer
>699	Identifier	Buffer
>700	Callee	pResult -> Append
>701	PtrMemberAccess	pResult -> Append
>702	Identifier	Append
>703	Identifier	pResult
>704	ExpressionStatement	 
>705	AssignmentExpr	Buffer [ CurrentBufferPosition ] = 0
>706	PrimaryExpression	0
>707	ArrayIndexing	Buffer [ CurrentBufferPosition ]
>708	Identifier	CurrentBufferPosition
>709	Identifier	Buffer
>710	Condition	 
>711	EqualityExpression	CurrentBufferPosition == DEFAULT_LINE_SIZE
>712	Identifier	DEFAULT_LINE_SIZE
>713	Identifier	CurrentBufferPosition
>714	IfStatement	if ( c == 10 )
>715	ElseStatement	else
>716	IfStatement	if ( c != 13 )
>717	CompoundStatement	 
>718	ExpressionStatement	 
>719	IncDecOp	CurrentBufferPosition ++
>720	IncDec	++
>721	Identifier	CurrentBufferPosition
>722	ExpressionStatement	 
>723	AssignmentExpr	Buffer [ CurrentBufferPosition ] = c
>724	Identifier	c
>725	ArrayIndexing	Buffer [ CurrentBufferPosition ]
>726	Identifier	CurrentBufferPosition
>727	Identifier	Buffer
>728	Condition	 
>729	EqualityExpression	c != 13
>730	PrimaryExpression	13
>731	Identifier	c
>732	BreakStatement	 
>733	Condition	 
>734	EqualityExpression	c == 10
>735	PrimaryExpression	10
>736	Identifier	c
>737	Condition	 
>738	EqualityExpression	base_read ( m_FileHandle , ( void * ) & c , 1 ) == 1
>739	PrimaryExpression	1
>740	CallExpression	base_read ( m_FileHandle , ( void * ) & c , 1 )
>741	ArgumentList	m_FileHandle
>742	Argument	1
>743	PrimaryExpression	1
>744	Argument	( void * ) & c
>745	CastExpression	( void * ) & c
>746	UnaryOp	& c
>747	Identifier	c
>748	UnaryOperator	&
>749	CastTarget	void *
>750	Argument	m_FileHandle
>751	Identifier	m_FileHandle
>752	Callee	base_read
>753	Identifier	base_read
>754	IdentifierDeclStatement	 
>755	IdentifierDecl	CurrentBufferPosition = 0
>756	AssignmentExpr	CurrentBufferPosition = 0
>757	PrimaryExpression	0
>758	Identifier	CurrentBufferPosition
>759	Identifier	CurrentBufferPosition
>760	IdentifierDeclType	int
>761	IdentifierDeclStatement	 
>762	IdentifierDecl	c
>763	Identifier	c
>764	IdentifierDeclType	char
>765	IdentifierDeclStatement	 
>766	IdentifierDecl	Buffer [ DEFAULT_LINE_SIZE + 1 ]
>767	AdditiveExpression	DEFAULT_LINE_SIZE + 1
>768	PrimaryExpression	1
>769	Identifier	DEFAULT_LINE_SIZE
>770	Identifier	Buffer
>771	IdentifierDeclType	char [ DEFAULT_LINE_SIZE + 1 ]
>772	IfStatement	if ( Offset != - 1 )
>773	IfStatement	if ( Seek ( Offset ) == - 1 )
>774	ReturnStatement	 
>775	PrimaryExpression	0
>776	Condition	 
>777	EqualityExpression	Seek ( Offset ) == - 1
>778	UnaryOp	- 1
>779	PrimaryExpression	1
>780	UnaryOperator	-
>781	CallExpression	Seek ( Offset )
>782	ArgumentList	Offset
>783	Argument	Offset
>784	Identifier	Offset
>785	Callee	Seek
>786	Identifier	Seek
>787	Condition	 
>788	EqualityExpression	Offset != - 1
>789	UnaryOp	- 1
>790	PrimaryExpression	1
>791	UnaryOperator	-
>792	Identifier	Offset
>793	Condition	 
>794	CallExpression	Verify ( )
>795	ArgumentList	 
>796	Callee	Verify
>797	Identifier	Verify
>798	ExpressionStatement	 
>799	CallExpression	pResult -> Empty ( )
>800	ArgumentList	 
>801	Callee	pResult -> Empty
>802	PtrMemberAccess	pResult -> Empty
>803	Identifier	Empty
>804	Identifier	pResult
>825	FunctionDef	CLocalFile 
>826	ParameterList	const off_t Offset
>827	Parameter	 
>828	Identifier	Offset
>829	ParameterType	const off_t
>830	ReturnType	unsigned char
>831	CompoundStatement	 
>832	ReturnStatement	 
>833	PrimaryExpression	0
>834	IfStatement	if ( Verify ( ) )
>835	CompoundStatement	 
>836	IfStatement	if ( base_read ( m_FileHandle , ( void * ) & Result , 1 ) == 1 )
>837	ReturnStatement	 
>838	Identifier	Result
>839	Condition	 
>840	EqualityExpression	base_read ( m_FileHandle , ( void * ) & Result , 1 ) == 1
>841	PrimaryExpression	1
>842	CallExpression	base_read ( m_FileHandle , ( void * ) & Result , 1 )
>843	ArgumentList	m_FileHandle
>844	Argument	1
>845	PrimaryExpression	1
>846	Argument	( void * ) & Result
>847	CastExpression	( void * ) & Result
>848	UnaryOp	& Result
>849	Identifier	Result
>850	UnaryOperator	&
>851	CastTarget	void *
>852	Argument	m_FileHandle
>853	Identifier	m_FileHandle
>854	Callee	base_read
>855	Identifier	base_read
>856	IdentifierDeclStatement	 
>857	IdentifierDecl	Result
>858	Identifier	Result
>859	IdentifierDeclType	char
>860	IfStatement	if ( Offset != - 1 )
>861	IfStatement	if ( Seek ( Offset ) == - 1 )
>862	ReturnStatement	 
>863	PrimaryExpression	0
>864	Condition	 
>865	EqualityExpression	Seek ( Offset ) == - 1
>866	UnaryOp	- 1
>867	PrimaryExpression	1
>868	UnaryOperator	-
>869	CallExpression	Seek ( Offset )
>870	ArgumentList	Offset
>871	Argument	Offset
>872	Identifier	Offset
>873	Callee	Seek
>874	Identifier	Seek
>875	Condition	 
>876	EqualityExpression	Offset != - 1
>877	UnaryOp	- 1
>878	PrimaryExpression	1
>879	UnaryOperator	-
>880	Identifier	Offset
>881	Condition	 
>882	CallExpression	Verify ( )
>883	ArgumentList	 
>884	Callee	Verify
>885	Identifier	Verify
>896	FunctionDef	CLocalFile 
>897	ParameterList	const CString & Buffer , const off_t Offset
>898	Parameter	 
>899	Identifier	Offset
>900	ParameterType	const off_t
>901	Parameter	 
>902	Identifier	Buffer
>903	ParameterType	const CString &
>904	ReturnType	bool
>905	CompoundStatement	 
>906	IfStatement	if ( Buffer . GetLength ( ) && Verify ( ) )
>907	ElseStatement	else
>908	ReturnStatement	 
>909	Identifier	false
>910	CompoundStatement	 
>911	ReturnStatement	 
>912	EqualityExpression	base_write ( m_FileHandle , Buffer . GetBuffer ( ) , Buffer . GetLength ( ) ) == ( int ) Buffer . GetLength ( )
>913	CastExpression	( int ) Buffer . GetLength ( )
>914	CallExpression	Buffer . GetLength ( )
>915	ArgumentList	 
>916	Callee	Buffer . GetLength
>917	MemberAccess	Buffer . GetLength
>918	Identifier	GetLength
>919	Identifier	Buffer
>920	CastTarget	int
>921	CallExpression	base_write ( m_FileHandle , Buffer . GetBuffer ( ) , Buffer . GetLength ( ) )
>922	ArgumentList	m_FileHandle
>923	Argument	Buffer . GetLength ( )
>924	CallExpression	Buffer . GetLength ( )
>925	ArgumentList	 
>926	Callee	Buffer . GetLength
>927	MemberAccess	Buffer . GetLength
>928	Identifier	GetLength
>929	Identifier	Buffer
>930	Argument	Buffer . GetBuffer ( )
>931	CallExpression	Buffer . GetBuffer ( )
>932	ArgumentList	 
>933	Callee	Buffer . GetBuffer
>934	MemberAccess	Buffer . GetBuffer
>935	Identifier	GetBuffer
>936	Identifier	Buffer
>937	Argument	m_FileHandle
>938	Identifier	m_FileHandle
>939	Callee	base_write
>940	Identifier	base_write
>941	IfStatement	if ( Offset != - 1 )
>942	IfStatement	if ( Seek ( Offset ) == - 1 )
>943	ReturnStatement	 
>944	Identifier	false
>945	Condition	 
>946	EqualityExpression	Seek ( Offset ) == - 1
>947	UnaryOp	- 1
>948	PrimaryExpression	1
>949	UnaryOperator	-
>950	CallExpression	Seek ( Offset )
>951	ArgumentList	Offset
>952	Argument	Offset
>953	Identifier	Offset
>954	Callee	Seek
>955	Identifier	Seek
>956	Condition	 
>957	EqualityExpression	Offset != - 1
>958	UnaryOp	- 1
>959	PrimaryExpression	1
>960	UnaryOperator	-
>961	Identifier	Offset
>962	Condition	 
>963	AndExpression	Buffer . GetLength ( ) && Verify ( )
>964	CallExpression	Verify ( )
>965	ArgumentList	 
>966	Callee	Verify
>967	Identifier	Verify
>968	CallExpression	Buffer . GetLength ( )
>969	ArgumentList	 
>970	Callee	Buffer . GetLength
>971	MemberAccess	Buffer . GetLength
>972	Identifier	GetLength
>973	Identifier	Buffer
>986	FunctionDef	CLocalFile 
>987	ParameterList	void * pBuffer , const int Bytes
>988	Parameter	 
>989	Identifier	Bytes
>990	ParameterType	const int
>991	Parameter	 
>992	Identifier	pBuffer
>993	ParameterType	void *
>994	ReturnType	bool
>995	CompoundStatement	 
>996	IfStatement	if ( Verify ( ) )
>997	ElseStatement	else
>998	ReturnStatement	 
>999	Identifier	false
>1000	CompoundStatement	 
>1001	ReturnStatement	 
>1002	EqualityExpression	base_write ( m_FileHandle , pBuffer , Bytes ) == Bytes
>1003	Identifier	Bytes
>1004	CallExpression	base_write ( m_FileHandle , pBuffer , Bytes )
>1005	ArgumentList	m_FileHandle
>1006	Argument	Bytes
>1007	Identifier	Bytes
>1008	Argument	pBuffer
>1009	Identifier	pBuffer
>1010	Argument	m_FileHandle
>1011	Identifier	m_FileHandle
>1012	Callee	base_write
>1013	Identifier	base_write
>1014	Condition	 
>1015	CallExpression	Verify ( )
>1016	ArgumentList	 
>1017	Callee	Verify
>1018	Identifier	Verify
>1028	FunctionDef	CLocalFile 
>1029	ParameterList	const CString & Buffer , const off_t Offset
>1030	Parameter	 
>1031	Identifier	Offset
>1032	ParameterType	const off_t
>1033	Parameter	 
>1034	Identifier	Buffer
>1035	ParameterType	const CString &
>1036	ReturnType	bool
>1037	CompoundStatement	 
>1038	IfStatement	if ( Buffer . EndsWith ( \"\n\" ) )
>1039	ElseStatement	else
>1040	IfStatement	if ( Buffer . GetLength ( ) && Verify ( ) )
>1041	ElseStatement	else
>1042	ReturnStatement	 
>1043	Identifier	false
>1044	CompoundStatement	 
>1045	ReturnStatement	 
>1046	EqualityExpression	base_write ( m_FileHandle , ( Buffer + \"\n\" ) . GetBuffer ( ) , Buffer . GetLength ( ) + base_strlen ( \"\n\" ) ) == ( \
>1047	CastExpression	( int ) ( ( int ) Buffer . GetLength ( ) + sizeof ( \"\n\" ) - 1 )
>1048	AdditiveExpression	( int ) Buffer . GetLength ( ) + sizeof ( \"\n\" ) - 1
>1049	AdditiveExpression	sizeof ( \"\n\" ) - 1
>1050	PrimaryExpression	1
>1051	SizeofExpr	sizeof ( \"\n\" )
>1052	PrimaryExpression	\"\n\"
>1053	Sizeof	sizeof
>1054	CastExpression	( int ) Buffer . GetLength ( )
>1055	CallExpression	Buffer . GetLength ( )
>1056	ArgumentList	 
>1057	Callee	Buffer . GetLength
>1058	MemberAccess	Buffer . GetLength
>1059	Identifier	GetLength
>1060	Identifier	Buffer
>1061	CastTarget	int
>1062	CastTarget	int
>1063	CallExpression	base_write ( m_FileHandle , ( Buffer + \"\n\" ) . GetBuffer ( ) , Buffer . GetLength ( ) + base_strlen ( \"\n\" ) )
>1064	ArgumentList	m_FileHandle
>1065	Argument	Buffer . GetLength ( ) + base_strlen ( \"\n\" )
>1066	AdditiveExpression	Buffer . GetLength ( ) + base_strlen ( \"\n\" )
>1067	CallExpression	base_strlen ( \"\n\" )
>1068	ArgumentList	\"\n\"
>1069	Argument	\"\n\"
>1070	PrimaryExpression	\"\n\"
>1071	Callee	base_strlen
>1072	Identifier	base_strlen
>1073	CallExpression	Buffer . GetLength ( )
>1074	ArgumentList	 
>1075	Callee	Buffer . GetLength
>1076	MemberAccess	Buffer . GetLength
>1077	Identifier	GetLength
>1078	Identifier	Buffer
>1079	Argument	( Buffer + \"\n\" ) . GetBuffer ( )
>1080	CallExpression	( Buffer + \"\n\" ) . GetBuffer ( )
>1081	ArgumentList	 
>1082	Callee	( Buffer + \"\n\" ) . GetBuffer
>1083	MemberAccess	( Buffer + \"\n\" ) . GetBuffer
>1084	Identifier	GetBuffer
>1085	AdditiveExpression	Buffer + \"\n\"
>1086	PrimaryExpression	\"\n\"
>1087	Identifier	Buffer
>1088	Argument	m_FileHandle
>1089	Identifier	m_FileHandle
>1090	Callee	base_write
>1091	Identifier	base_write
>1092	IfStatement	if ( Offset != - 1 )
>1093	IfStatement	if ( Seek ( Offset ) == - 1 )
>1094	ReturnStatement	 
>1095	Identifier	false
>1096	Condition	 
>1097	EqualityExpression	Seek ( Offset ) == - 1
>1098	UnaryOp	- 1
>1099	PrimaryExpression	1
>1100	UnaryOperator	-
>1101	CallExpression	Seek ( Offset )
>1102	ArgumentList	Offset
>1103	Argument	Offset
>1104	Identifier	Offset
>1105	Callee	Seek
>1106	Identifier	Seek
>1107	Condition	 
>1108	EqualityExpression	Offset != - 1
>1109	UnaryOp	- 1
>1110	PrimaryExpression	1
>1111	UnaryOperator	-
>1112	Identifier	Offset
>1113	Condition	 
>1114	AndExpression	Buffer . GetLength ( ) && Verify ( )
>1115	CallExpression	Verify ( )
>1116	ArgumentList	 
>1117	Callee	Verify
>1118	Identifier	Verify
>1119	CallExpression	Buffer . GetLength ( )
>1120	ArgumentList	 
>1121	Callee	Buffer . GetLength
>1122	MemberAccess	Buffer . GetLength
>1123	Identifier	GetLength
>1124	Identifier	Buffer
>1125	ReturnStatement	 
>1126	CallExpression	Write ( Buffer , Offset )
>1127	ArgumentList	Buffer
>1128	Argument	Offset
>1129	Identifier	Offset
>1130	Argument	Buffer
>1131	Identifier	Buffer
>1132	Callee	Write
>1133	Identifier	Write
>1134	Condition	 
>1135	CallExpression	Buffer . EndsWith ( \"\n\" )
>1136	ArgumentList	\"\n\"
>1137	Argument	\"\n\"
>1138	PrimaryExpression	\"\n\"
>1139	Callee	Buffer . EndsWith
>1140	MemberAccess	Buffer . EndsWith
>1141	Identifier	EndsWith
>1142	Identifier	Buffer
<3=8,4
<4=5
<5=7,6
<8=9
<9=10
<10=14,11
<11=12
<12=13
<14=15
<20=22,21
<22=27,23
<23=24
<24=26,25
<27=28
<28=32,29
<29=31,30
<38=44,43,39
<39=40
<40=42,41
<44=59,55,49,45
<45=46
<46=48,47
<49=50
<50=54,51
<51=53,52
<55=56
<56=58,57
<59=60
<60=75,61
<61=73,71,62
<62=63
<63=70,64
<64=66,65
<66=67
<67=69,68
<71=72
<73=74
<75=76
<87=89,88
<89=90
<90=91
<91=93,92
<93=94
<98=107,106,99
<99=103,100
<100=102,101
<103=105,104
<107=184,161,138,108
<108=132,124,109
<109=110
<110=120,113,111
<111=112
<113=114
<114=116,115
<116=117
<117=119,118
<120=121
<121=123,122
<124=127,125
<125=126
<127=128
<128=130,129
<130=131
<132=133
<133=137,134
<134=136,135
<138=139
<139=159,140
<140=157,155,141
<141=142
<142=154,143
<143=145,144
<145=147,146
<147=148
<148=150,149
<150=152,151
<152=153
<155=156
<157=158
<159=160
<161=162
<162=183,163
<163=181,164
<164=169,167,165
<165=166
<167=168
<169=170
<170=180,171
<171=173,172
<173=174
<174=176,175
<176=178,177
<178=179
<181=182
<184=190,185
<185=186
<186=188,187
<188=189
<190=191
<191=195,192
<192=194,193
<211=214,213,212
<214=255,242,217,215
<215=216
<217=236,218
<218=225,219
<219=220
<220=224,221
<221=223,222
<225=226
<226=235,227
<227=229,228
<229=233,230
<230=231
<231=232
<233=234
<236=237
<237=241,238
<238=240,239
<242=243
<243=253,244
<244=251,249,245
<245=246
<246=248,247
<249=250
<251=252
<253=254
<255=256
<256=261,260,257
<257=259,258
<271=280,279,272
<272=276,273
<273=275,274
<276=278,277
<280=281
<281=311,287,282
<282=283
<283=284
<284=286,285
<287=288
<288=305,301,289
<289=290
<290=291
<291=299,292
<292=297,295,293
<293=294
<295=296
<297=298
<299=300
<301=302
<302=304,303
<305=306
<306=310,307
<307=309,308
<311=312
<312=314,313
<314=315
<324=330,329,325
<325=326
<326=328,327
<330=331
<331=400,337,332
<332=333
<333=334
<334=336,335
<337=393,383,373,363,340,338
<338=339
<340=341
<341=361,342
<342=359,357,343
<343=344
<344=356,345
<345=347,346
<347=349,348
<349=350
<350=352,351
<352=354,353
<354=355
<357=358
<359=360
<361=362
<363=371,364
<364=365
<365=369,366
<366=367
<367=368
<369=370
<371=372
<373=374
<374=382,381,375
<375=380,376
<376=378,377
<378=379
<383=391,384
<384=385
<385=390,386
<386=388,387
<388=389
<391=392
<393=394
<394=399,398,395
<395=397,396
<400=401
<401=403,402
<403=404
<418=424,423,419
<419=420
<420=422,421
<424=453,427,425
<425=426
<427=447,440,428
<428=429
<429=430
<430=438,431
<431=436,434,432
<432=433
<434=435
<436=437
<438=439
<440=441
<441=443,442
<443=444
<444=446,445
<447=448
<448=452,449
<449=451,450
<453=454
<454=464,463,455
<455=462,456
<456=460,457
<457=458
<458=459
<460=461
<473=485,484,474
<474=481,478,475
<475=477,476
<478=480,479
<481=483,482
<485=602,486
<486=597,490,487
<487=488
<488=489
<490=516,498,491
<491=492
<492=494,493
<494=495
<495=497,496
<498=499
<499=514,500
<500=512,510,501
<501=502
<502=509,503
<503=505,504
<505=506
<506=508,507
<510=511
<512=513
<514=515
<516=593,517
<517=572,563,540,518
<518=536,527,519
<519=520
<520=521
<521=523,522
<523=524
<524=526,525
<527=528
<528=532,529
<529=530
<530=531
<532=533
<533=535,534
<536=537
<537=539,538
<540=541
<541=562,561,542
<542=560,543
<543=558,544
<544=556,547,545
<545=546
<547=548
<548=555,549
<549=551,550
<551=552
<552=554,553
<556=557
<558=559
<563=564
<564=568,565
<565=566
<566=567
<568=569
<569=571,570
<572=587,573
<573=576,574
<574=575
<576=577
<577=581,578
<578=580,579
<581=585,582
<582=583
<583=584
<585=586
<587=588
<588=592,589
<589=591,590
<593=594
<594=596,595
<597=598
<598=600,599
<600=601
<602=603
<603=605,604
<605=606
<606=608,607
<625=634,633,626
<626=630,627
<627=629,628
<630=632,631
<634=798,635
<635=793,639,636
<636=637
<637=638
<639=772,765,761,754,685,679,665,647,640
<640=641
<641=643,642
<643=644
<644=646,645
<647=648
<648=663,649
<649=661,659,650
<650=651
<651=658,652
<652=654,653
<654=655
<655=657,656
<659=660
<661=662
<663=664
<665=677,666
<666=667
<667=673,668
<668=671,669
<669=670
<671=672
<673=674
<674=676,675
<677=678
<679=680
<680=682,681
<682=684,683
<685=737,686
<686=714,687
<687=710,688
<688=704,693,689
<689=690
<690=692,691
<693=694
<694=700,695
<695=698,696
<696=697
<698=699
<700=701
<701=703,702
<704=705
<705=707,706
<707=709,708
<710=711
<711=713,712
<714=733,732,715
<715=716
<716=728,717
<717=722,718
<718=719
<719=721,720
<722=723
<723=725,724
<725=727,726
<728=729
<729=731,730
<733=734
<734=736,735
<737=738
<738=740,739
<740=752,741
<741=750,744,742
<742=743
<744=745
<745=749,746
<746=748,747
<750=751
<752=753
<754=755
<755=760,759,756
<756=758,757
<761=762
<762=764,763
<765=766
<766=771,770,767
<767=769,768
<772=787,773
<773=776,774
<774=775
<776=777
<777=781,778
<778=780,779
<781=785,782
<782=783
<783=784
<785=786
<787=788
<788=792,789
<789=791,790
<793=794
<794=796,795
<796=797
<798=799
<799=801,800
<801=802
<802=804,803
<825=831,830,826
<826=827
<827=829,828
<831=834,832
<832=833
<834=881,835
<835=860,856,836
<836=839,837
<837=838
<839=840
<840=842,841
<842=854,843
<843=852,846,844
<844=845
<846=847
<847=851,848
<848=850,849
<852=853
<854=855
<856=857
<857=859,858
<860=875,861
<861=864,862
<862=863
<864=865
<865=869,866
<866=868,867
<869=873,870
<870=871
<871=872
<873=874
<875=876
<876=880,877
<877=879,878
<881=882
<882=884,883
<884=885
<896=905,904,897
<897=901,898
<898=900,899
<901=903,902
<905=906
<906=962,910,907
<907=908
<908=909
<910=941,911
<911=912
<912=921,913
<913=920,914
<914=916,915
<916=917
<917=919,918
<921=939,922
<922=937,930,923
<923=924
<924=926,925
<926=927
<927=929,928
<930=931
<931=933,932
<933=934
<934=936,935
<937=938
<939=940
<941=956,942
<942=945,943
<943=944
<945=946
<946=950,947
<947=949,948
<950=954,951
<951=952
<952=953
<954=955
<956=957
<957=961,958
<958=960,959
<962=963
<963=968,964
<964=966,965
<966=967
<968=970,969
<970=971
<971=973,972
<986=995,994,987
<987=991,988
<988=990,989
<991=993,992
<995=996
<996=1014,1000,997
<997=998
<998=999
<1000=1001
<1001=1002
<1002=1004,1003
<1004=1012,1005
<1005=1010,1008,1006
<1006=1007
<1008=1009
<1010=1011
<1012=1013
<1014=1015
<1015=1017,1016
<1017=1018
<1028=1037,1036,1029
<1029=1033,1030
<1030=1032,1031
<1033=1035,1034
<1037=1038
<1038=1134,1125,1039
<1039=1040
<1040=1113,1044,1041
<1041=1042
<1042=1043
<1044=1092,1045
<1045=1046
<1046=1063,1047
<1047=1062,1048
<1048=1054,1049
<1049=1051,1050
<1051=1053,1052
<1054=1061,1055
<1055=1057,1056
<1057=1058
<1058=1060,1059
<1063=1090,1064
<1064=1088,1079,1065
<1065=1066
<1066=1073,1067
<1067=1071,1068
<1068=1069
<1069=1070
<1071=1072
<1073=1075,1074
<1075=1076
<1076=1078,1077
<1079=1080
<1080=1082,1081
<1082=1083
<1083=1085,1084
<1085=1087,1086
<1088=1089
<1090=1091
<1092=1107,1093
<1093=1096,1094
<1094=1095
<1096=1097
<1097=1101,1098
<1098=1100,1099
<1101=1105,1102
<1102=1103
<1103=1104
<1105=1106
<1107=1108
<1108=1112,1109
<1109=1111,1110
<1113=1114
<1114=1119,1115
<1115=1117,1116
<1117=1118
<1119=1121,1120
<1121=1122
<1122=1124,1123
<1125=1126
<1126=1132,1127
<1127=1130,1128
<1128=1129
<1130=1131
<1132=1133
<1134=1135
<1135=1139,1136
<1136=1137
<1137=1138
<1139=1140
<1140=1142,1141
