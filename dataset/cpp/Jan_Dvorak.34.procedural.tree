>3	FunctionDef	Procedural 
>4	ParameterList	float pos_x , float pos_y , float r , float n , float w_x , float w_y , float arc
>5	Parameter	 
>6	Identifier	arc
>7	ParameterType	float
>8	Parameter	 
>9	Identifier	w_y
>10	ParameterType	float
>11	Parameter	 
>12	Identifier	w_x
>13	ParameterType	float
>14	Parameter	 
>15	Identifier	n
>16	ParameterType	float
>17	Parameter	 
>18	Identifier	r
>19	ParameterType	float
>20	Parameter	 
>21	Identifier	pos_y
>22	ParameterType	float
>23	Parameter	 
>24	Identifier	pos_x
>25	ParameterType	float
>26	ReturnType	vec2_ary_t
>27	CompoundStatement	 
>28	ReturnStatement	 
>29	Identifier	points
>30	ForStatement	for ( int i = 0 ; i <= n ; i ++ )
>31	CompoundStatement	 
>32	ExpressionStatement	 
>33	CallExpression	points . push_back ( p )
>34	ArgumentList	p
>35	Argument	p
>36	Identifier	p
>37	Callee	points . push_back
>38	MemberAccess	points . push_back
>39	Identifier	push_back
>40	Identifier	points
>41	IdentifierDeclStatement	 
>42	IdentifierDecl	p ( x , y )
>43	Expression	x , y
>44	Identifier	y
>45	Identifier	x
>46	Identifier	p
>47	IdentifierDeclType	vec2
>48	IdentifierDeclStatement	 
>49	IdentifierDecl	y = pos_y + r * sin ( angle ) * w_y
>50	AssignmentExpr	y = pos_y + r * sin ( angle ) * w_y
>51	AdditiveExpression	pos_y + r * sin ( angle ) * w_y
>52	MultiplicativeExpression	r * sin ( angle ) * w_y
>53	MultiplicativeExpression	sin ( angle ) * w_y
>54	Identifier	w_y
>55	CallExpression	sin ( angle )
>56	ArgumentList	angle
>57	Argument	angle
>58	Identifier	angle
>59	Callee	sin
>60	Identifier	sin
>61	Identifier	r
>62	Identifier	pos_y
>63	Identifier	y
>64	Identifier	y
>65	IdentifierDeclType	float
>66	IdentifierDeclStatement	 
>67	IdentifierDecl	x = pos_x + r * cos ( angle ) * w_x
>68	AssignmentExpr	x = pos_x + r * cos ( angle ) * w_x
>69	AdditiveExpression	pos_x + r * cos ( angle ) * w_x
>70	MultiplicativeExpression	r * cos ( angle ) * w_x
>71	MultiplicativeExpression	cos ( angle ) * w_x
>72	Identifier	w_x
>73	CallExpression	cos ( angle )
>74	ArgumentList	angle
>75	Argument	angle
>76	Identifier	angle
>77	Callee	cos
>78	Identifier	cos
>79	Identifier	r
>80	Identifier	pos_x
>81	Identifier	x
>82	Identifier	x
>83	IdentifierDeclType	float
>84	IdentifierDeclStatement	 
>85	IdentifierDecl	angle = ( i / n ) * 2 * ( float ) M_PI * arc
>86	AssignmentExpr	angle = ( i / n ) * 2 * ( float ) M_PI * arc
>87	MultiplicativeExpression	( i / n ) * 2 * ( float ) M_PI * arc
>88	MultiplicativeExpression	2 * ( float ) M_PI * arc
>89	MultiplicativeExpression	( float ) M_PI * arc
>90	Identifier	arc
>91	CastExpression	( float ) M_PI
>92	Identifier	M_PI
>93	CastTarget	float
>94	PrimaryExpression	2
>95	MultiplicativeExpression	i / n
>96	Identifier	n
>97	Identifier	i
>98	Identifier	angle
>99	Identifier	angle
>100	IdentifierDeclType	float
>101	IncDecOp	 
>102	IncDec	++
>103	Identifier	i
>104	Condition	 
>105	RelationalExpression	i <= n
>106	Identifier	n
>107	Identifier	i
>108	ForInit	 
>109	IdentifierDeclStatement	int i = 0 ;
>110	IdentifierDecl	i = 0
>111	AssignmentExpr	i = 0
>112	PrimaryExpression	0
>113	Identifier	i
>114	Identifier	i
>115	IdentifierDeclType	int
>116	IdentifierDeclStatement	 
>117	IdentifierDecl	points
>118	Identifier	points
>119	IdentifierDeclType	vec2_ary_t
>139	FunctionDef	Procedural 
>140	ParameterList	float size , float segments
>141	Parameter	 
>142	Identifier	segments
>143	ParameterType	float
>144	Parameter	 
>145	Identifier	size
>146	ParameterType	float
>147	ReturnType	void
>148	CompoundStatement	 
>149	ExpressionStatement	 
>150	CallExpression	glEnd ( )
>151	ArgumentList	 
>152	Callee	glEnd
>153	Identifier	glEnd
>154	CompoundStatement	 
>155	ExpressionStatement	 
>156	CallExpression	glVertex ( * it )
>157	ArgumentList	* it
>158	Argument	* it
>159	UnaryOp	* it
>160	Identifier	it
>161	UnaryOperator	*
>162	Callee	glVertex
>163	Identifier	glVertex
>164	Statement	 
>165	Statement	 
>166	Statement	 
>167	Statement	 
>168	Statement	 
>169	Statement	 
>170	Statement	 
>171	Statement	 
>172	ExpressionStatement	 
>173	CallExpression	glVertex2f ( 0 , 0 )
>174	ArgumentList	0
>175	Argument	0
>176	PrimaryExpression	0
>177	Argument	0
>178	PrimaryExpression	0
>179	Callee	glVertex2f
>180	Identifier	glVertex2f
>181	ExpressionStatement	 
>182	CallExpression	glBegin ( GL_TRIANGLE_FAN )
>183	ArgumentList	GL_TRIANGLE_FAN
>184	Argument	GL_TRIANGLE_FAN
>185	Identifier	GL_TRIANGLE_FAN
>186	Callee	glBegin
>187	Identifier	glBegin
>188	IdentifierDeclStatement	 
>189	IdentifierDecl	points = Procedural 
>190	AssignmentExpr	points = Procedural 
>191	CallExpression	Procedural 
>192	ArgumentList	0
>193	Argument	segments
>194	Identifier	segments
>195	Argument	size
>196	Identifier	size
>197	Argument	0
>198	PrimaryExpression	0
>199	Argument	0
>200	PrimaryExpression	0
>201	Callee	Procedural 
>202	Identifier	Procedural 
>203	Identifier	points
>204	Identifier	points
>205	IdentifierDeclType	vec2_ary_t
>216	FunctionDef	Procedural 
>217	ParameterList	Circle & circle , float segments
>218	Parameter	 
>219	Identifier	segments
>220	ParameterType	float
>221	Parameter	 
>222	Identifier	circle
>223	ParameterType	Circle &
>224	ReturnType	void
>225	CompoundStatement	 
>226	ExpressionStatement	 
>227	CallExpression	glEnd ( )
>228	ArgumentList	 
>229	Callee	glEnd
>230	Identifier	glEnd
>231	CompoundStatement	 
>232	ExpressionStatement	 
>233	CallExpression	glVertex ( * it )
>234	ArgumentList	* it
>235	Argument	* it
>236	UnaryOp	* it
>237	Identifier	it
>238	UnaryOperator	*
>239	Callee	glVertex
>240	Identifier	glVertex
>241	Statement	 
>242	Statement	 
>243	Statement	 
>244	Statement	 
>245	Statement	 
>246	Statement	 
>247	Statement	 
>248	Statement	 
>249	ExpressionStatement	 
>250	CallExpression	glVertex ( circle . pos )
>251	ArgumentList	circle . pos
>252	Argument	circle . pos
>253	MemberAccess	circle . pos
>254	Identifier	pos
>255	Identifier	circle
>256	Callee	glVertex
>257	Identifier	glVertex
>258	ExpressionStatement	 
>259	CallExpression	glBegin ( GL_TRIANGLE_FAN )
>260	ArgumentList	GL_TRIANGLE_FAN
>261	Argument	GL_TRIANGLE_FAN
>262	Identifier	GL_TRIANGLE_FAN
>263	Callee	glBegin
>264	Identifier	glBegin
>265	IdentifierDeclStatement	 
>266	IdentifierDecl	points = Procedural 
>267	AssignmentExpr	points = Procedural 
>268	CallExpression	Procedural 
>269	ArgumentList	circle . pos [ 0 ]
>270	Argument	segments
>271	Identifier	segments
>272	Argument	circle . r
>273	MemberAccess	circle . r
>274	Identifier	r
>275	Identifier	circle
>276	Argument	circle . pos [ 1 ]
>277	ArrayIndexing	circle . pos [ 1 ]
>278	PrimaryExpression	1
>279	MemberAccess	circle . pos
>280	Identifier	pos
>281	Identifier	circle
>282	Argument	circle . pos [ 0 ]
>283	ArrayIndexing	circle . pos [ 0 ]
>284	PrimaryExpression	0
>285	MemberAccess	circle . pos
>286	Identifier	pos
>287	Identifier	circle
>288	Callee	Procedural 
>289	Identifier	Procedural 
>290	Identifier	points
>291	Identifier	points
>292	IdentifierDeclType	vec2_ary_t
>307	FunctionDef	Procedural 
>308	ParameterList	vec2 pa , vec2 pb , vec2 pc , vec2 pd , int segments
>309	Parameter	 
>310	Identifier	segments
>311	ParameterType	int
>312	Parameter	 
>313	Identifier	pd
>314	ParameterType	vec2
>315	Parameter	 
>316	Identifier	pc
>317	ParameterType	vec2
>318	Parameter	 
>319	Identifier	pb
>320	ParameterType	vec2
>321	Parameter	 
>322	Identifier	pa
>323	ParameterType	vec2
>324	ReturnType	vec2_ary_t
>325	CompoundStatement	 
>326	ReturnStatement	 
>327	Identifier	verts
>328	ForStatement	for ( float b = 0.0 ; b <= 1.0f ; b += ( 1.0f / segments ) )
>329	CompoundStatement	 
>330	ExpressionStatement	 
>331	CallExpression	verts . push_back ( vec2 ( x , y ) )
>332	ArgumentList	vec2 ( x , y )
>333	Argument	vec2 ( x , y )
>334	CallExpression	vec2 ( x , y )
>335	ArgumentList	x
>336	Argument	y
>337	Identifier	y
>338	Argument	x
>339	Identifier	x
>340	Callee	vec2
>341	Identifier	vec2
>342	Callee	verts . push_back
>343	MemberAccess	verts . push_back
>344	Identifier	push_back
>345	Identifier	verts
>346	IdentifierDeclStatement	 
>347	IdentifierDecl	y = pa [ 1 ] * a * a * a + pb [ 1 ] * 3 * a * a * b + pc [ 1 ] * 3 * a * b * b + pd [ 1 ] * b * b * b
>348	AssignmentExpr	y = pa [ 1 ] * a * a * a + pb [ 1 ] * 3 * a * a * b + pc [ 1 ] * 3 * a * b * b + pd [ 1 ] * b * b * b
>349	AdditiveExpression	pa [ 1 ] * a * a * a + pb [ 1 ] * 3 * a * a * b + pc [ 1 ] * 3 * a * b * b + pd [ 1 ] * b * b * b
>350	AdditiveExpression	pb [ 1 ] * 3 * a * a * b + pc [ 1 ] * 3 * a * b * b + pd [ 1 ] * b * b * b
>351	AdditiveExpression	pc [ 1 ] * 3 * a * b * b + pd [ 1 ] * b * b * b
>352	MultiplicativeExpression	pd [ 1 ] * b * b * b
>353	MultiplicativeExpression	b * b * b
>354	MultiplicativeExpression	b * b
>355	Identifier	b
>356	Identifier	b
>357	Identifier	b
>358	ArrayIndexing	pd [ 1 ]
>359	PrimaryExpression	1
>360	Identifier	pd
>361	MultiplicativeExpression	pc [ 1 ] * 3 * a * b * b
>362	MultiplicativeExpression	3 * a * b * b
>363	MultiplicativeExpression	a * b * b
>364	MultiplicativeExpression	b * b
>365	Identifier	b
>366	Identifier	b
>367	Identifier	a
>368	PrimaryExpression	3
>369	ArrayIndexing	pc [ 1 ]
>370	PrimaryExpression	1
>371	Identifier	pc
>372	MultiplicativeExpression	pb [ 1 ] * 3 * a * a * b
>373	MultiplicativeExpression	3 * a * a * b
>374	MultiplicativeExpression	a * a * b
>375	MultiplicativeExpression	a * b
>376	Identifier	b
>377	Identifier	a
>378	Identifier	a
>379	PrimaryExpression	3
>380	ArrayIndexing	pb [ 1 ]
>381	PrimaryExpression	1
>382	Identifier	pb
>383	MultiplicativeExpression	pa [ 1 ] * a * a * a
>384	MultiplicativeExpression	a * a * a
>385	MultiplicativeExpression	a * a
>386	Identifier	a
>387	Identifier	a
>388	Identifier	a
>389	ArrayIndexing	pa [ 1 ]
>390	PrimaryExpression	1
>391	Identifier	pa
>392	Identifier	y
>393	Identifier	y
>394	IdentifierDeclType	float
>395	IdentifierDeclStatement	 
>396	IdentifierDecl	x = pa [ 0 ] * a * a * a + pb [ 0 ] * 3 * a * a * b + pc [ 0 ] * 3 * a * b * b + pd [ 0 ] * b * b * b
>397	AssignmentExpr	x = pa [ 0 ] * a * a * a + pb [ 0 ] * 3 * a * a * b + pc [ 0 ] * 3 * a * b * b + pd [ 0 ] * b * b * b
>398	AdditiveExpression	pa [ 0 ] * a * a * a + pb [ 0 ] * 3 * a * a * b + pc [ 0 ] * 3 * a * b * b + pd [ 0 ] * b * b * b
>399	AdditiveExpression	pb [ 0 ] * 3 * a * a * b + pc [ 0 ] * 3 * a * b * b + pd [ 0 ] * b * b * b
>400	AdditiveExpression	pc [ 0 ] * 3 * a * b * b + pd [ 0 ] * b * b * b
>401	MultiplicativeExpression	pd [ 0 ] * b * b * b
>402	MultiplicativeExpression	b * b * b
>403	MultiplicativeExpression	b * b
>404	Identifier	b
>405	Identifier	b
>406	Identifier	b
>407	ArrayIndexing	pd [ 0 ]
>408	PrimaryExpression	0
>409	Identifier	pd
>410	MultiplicativeExpression	pc [ 0 ] * 3 * a * b * b
>411	MultiplicativeExpression	3 * a * b * b
>412	MultiplicativeExpression	a * b * b
>413	MultiplicativeExpression	b * b
>414	Identifier	b
>415	Identifier	b
>416	Identifier	a
>417	PrimaryExpression	3
>418	ArrayIndexing	pc [ 0 ]
>419	PrimaryExpression	0
>420	Identifier	pc
>421	MultiplicativeExpression	pb [ 0 ] * 3 * a * a * b
>422	MultiplicativeExpression	3 * a * a * b
>423	MultiplicativeExpression	a * a * b
>424	MultiplicativeExpression	a * b
>425	Identifier	b
>426	Identifier	a
>427	Identifier	a
>428	PrimaryExpression	3
>429	ArrayIndexing	pb [ 0 ]
>430	PrimaryExpression	0
>431	Identifier	pb
>432	MultiplicativeExpression	pa [ 0 ] * a * a * a
>433	MultiplicativeExpression	a * a * a
>434	MultiplicativeExpression	a * a
>435	Identifier	a
>436	Identifier	a
>437	Identifier	a
>438	ArrayIndexing	pa [ 0 ]
>439	PrimaryExpression	0
>440	Identifier	pa
>441	Identifier	x
>442	Identifier	x
>443	IdentifierDeclType	float
>444	IdentifierDeclStatement	 
>445	IdentifierDecl	a = 1.0f - b
>446	AssignmentExpr	a = 1.0f - b
>447	AdditiveExpression	1.0f - b
>448	Identifier	b
>449	PrimaryExpression	1.0f
>450	Identifier	a
>451	Identifier	a
>452	IdentifierDeclType	float
>453	IfStatement	if ( b == 0.0 )
>454	ContinueStatement	 
>455	Condition	 
>456	EqualityExpression	b == 0.0
>457	PrimaryExpression	0.0
>458	Identifier	b
>459	AssignmentExpr	 
>460	MultiplicativeExpression	1.0f / segments
>461	Identifier	segments
>462	PrimaryExpression	1.0f
>463	Identifier	b
>464	Condition	 
>465	RelationalExpression	b <= 1.0f
>466	PrimaryExpression	1.0f
>467	Identifier	b
>468	ForInit	 
>469	IdentifierDeclStatement	float b = 0.0 ;
>470	IdentifierDecl	b = 0.0
>471	AssignmentExpr	b = 0.0
>472	PrimaryExpression	0.0
>473	Identifier	b
>474	Identifier	b
>475	IdentifierDeclType	float
>476	IdentifierDeclStatement	 
>477	IdentifierDecl	verts
>478	Identifier	verts
>479	IdentifierDeclType	vec2_ary_t
>498	FunctionDef	Procedural 
>499	ParameterList	vec2 pa , vec2 pb , vec2 pc , int segments
>500	Parameter	 
>501	Identifier	segments
>502	ParameterType	int
>503	Parameter	 
>504	Identifier	pc
>505	ParameterType	vec2
>506	Parameter	 
>507	Identifier	pb
>508	ParameterType	vec2
>509	Parameter	 
>510	Identifier	pa
>511	ParameterType	vec2
>512	ReturnType	vec2_ary_t
>513	CompoundStatement	 
>514	ReturnStatement	 
>515	Identifier	verts
>516	ForStatement	for ( float b = 0.0f ; b <= 1.0f ; b += ( 1.0f / segments ) )
>517	CompoundStatement	 
>518	ExpressionStatement	 
>519	CallExpression	verts . push_back ( vec2 ( x , y ) )
>520	ArgumentList	vec2 ( x , y )
>521	Argument	vec2 ( x , y )
>522	CallExpression	vec2 ( x , y )
>523	ArgumentList	x
>524	Argument	y
>525	Identifier	y
>526	Argument	x
>527	Identifier	x
>528	Callee	vec2
>529	Identifier	vec2
>530	Callee	verts . push_back
>531	MemberAccess	verts . push_back
>532	Identifier	push_back
>533	Identifier	verts
>534	IdentifierDeclStatement	 
>535	IdentifierDecl	y = pa [ 1 ] * a * a + pb [ 1 ] * 2 * a * b + pc [ 1 ] * b * b
>536	AssignmentExpr	y = pa [ 1 ] * a * a + pb [ 1 ] * 2 * a * b + pc [ 1 ] * b * b
>537	AdditiveExpression	pa [ 1 ] * a * a + pb [ 1 ] * 2 * a * b + pc [ 1 ] * b * b
>538	AdditiveExpression	pb [ 1 ] * 2 * a * b + pc [ 1 ] * b * b
>539	MultiplicativeExpression	pc [ 1 ] * b * b
>540	MultiplicativeExpression	b * b
>541	Identifier	b
>542	Identifier	b
>543	ArrayIndexing	pc [ 1 ]
>544	PrimaryExpression	1
>545	Identifier	pc
>546	MultiplicativeExpression	pb [ 1 ] * 2 * a * b
>547	MultiplicativeExpression	2 * a * b
>548	MultiplicativeExpression	a * b
>549	Identifier	b
>550	Identifier	a
>551	PrimaryExpression	2
>552	ArrayIndexing	pb [ 1 ]
>553	PrimaryExpression	1
>554	Identifier	pb
>555	MultiplicativeExpression	pa [ 1 ] * a * a
>556	MultiplicativeExpression	a * a
>557	Identifier	a
>558	Identifier	a
>559	ArrayIndexing	pa [ 1 ]
>560	PrimaryExpression	1
>561	Identifier	pa
>562	Identifier	y
>563	Identifier	y
>564	IdentifierDeclType	float
>565	IdentifierDeclStatement	 
>566	IdentifierDecl	x = pa [ 0 ] * a * a + pb [ 0 ] * 2 * a * b + pc [ 0 ] * b * b
>567	AssignmentExpr	x = pa [ 0 ] * a * a + pb [ 0 ] * 2 * a * b + pc [ 0 ] * b * b
>568	AdditiveExpression	pa [ 0 ] * a * a + pb [ 0 ] * 2 * a * b + pc [ 0 ] * b * b
>569	AdditiveExpression	pb [ 0 ] * 2 * a * b + pc [ 0 ] * b * b
>570	MultiplicativeExpression	pc [ 0 ] * b * b
>571	MultiplicativeExpression	b * b
>572	Identifier	b
>573	Identifier	b
>574	ArrayIndexing	pc [ 0 ]
>575	PrimaryExpression	0
>576	Identifier	pc
>577	MultiplicativeExpression	pb [ 0 ] * 2 * a * b
>578	MultiplicativeExpression	2 * a * b
>579	MultiplicativeExpression	a * b
>580	Identifier	b
>581	Identifier	a
>582	PrimaryExpression	2
>583	ArrayIndexing	pb [ 0 ]
>584	PrimaryExpression	0
>585	Identifier	pb
>586	MultiplicativeExpression	pa [ 0 ] * a * a
>587	MultiplicativeExpression	a * a
>588	Identifier	a
>589	Identifier	a
>590	ArrayIndexing	pa [ 0 ]
>591	PrimaryExpression	0
>592	Identifier	pa
>593	Identifier	x
>594	Identifier	x
>595	IdentifierDeclType	float
>596	IdentifierDeclStatement	 
>597	IdentifierDecl	a = 1.0f - b
>598	AssignmentExpr	a = 1.0f - b
>599	AdditiveExpression	1.0f - b
>600	Identifier	b
>601	PrimaryExpression	1.0f
>602	Identifier	a
>603	Identifier	a
>604	IdentifierDeclType	float
>605	IfStatement	if ( b == 0.0f )
>606	ContinueStatement	 
>607	Condition	 
>608	EqualityExpression	b == 0.0f
>609	PrimaryExpression	0.0f
>610	Identifier	b
>611	AssignmentExpr	 
>612	MultiplicativeExpression	1.0f / segments
>613	Identifier	segments
>614	PrimaryExpression	1.0f
>615	Identifier	b
>616	Condition	 
>617	RelationalExpression	b <= 1.0f
>618	PrimaryExpression	1.0f
>619	Identifier	b
>620	ForInit	 
>621	IdentifierDeclStatement	float b = 0.0f ;
>622	IdentifierDecl	b = 0.0f
>623	AssignmentExpr	b = 0.0f
>624	PrimaryExpression	0.0f
>625	Identifier	b
>626	Identifier	b
>627	IdentifierDeclType	float
>628	IdentifierDeclStatement	 
>629	IdentifierDecl	verts
>630	Identifier	verts
>631	IdentifierDeclType	vec2_ary_t
>648	FunctionDef	Procedural 
>649	ParameterList	int size
>650	Parameter	 
>651	Identifier	size
>652	ParameterType	int
>653	ReturnType	GLuint
>654	CompoundStatement	 
>655	ReturnStatement	 
>656	Identifier	texture
>657	ExpressionStatement	 
>658	Identifier	data
>659	Statement	 
>660	Statement	 
>661	Statement	 
>662	ExpressionStatement	 
>663	Identifier	p
>664	Statement	 
>665	ExpressionStatement	 
>666	CallExpression	my_glGenerateMipmap ( GL_TEXTURE_2D )
>667	ArgumentList	GL_TEXTURE_2D
>668	Argument	GL_TEXTURE_2D
>669	Identifier	GL_TEXTURE_2D
>670	Callee	my_glGenerateMipmap
>671	Identifier	my_glGenerateMipmap
>672	ExpressionStatement	 
>673	CallExpression	glTexImage2D ( GL_TEXTURE_2D , 0 , GL_RGBA , size , size , 0 , GL_ALPHA , GL_FLOAT , data )
>674	ArgumentList	GL_TEXTURE_2D
>675	Argument	data
>676	Identifier	data
>677	Argument	GL_FLOAT
>678	Identifier	GL_FLOAT
>679	Argument	GL_ALPHA
>680	Identifier	GL_ALPHA
>681	Argument	0
>682	PrimaryExpression	0
>683	Argument	size
>684	Identifier	size
>685	Argument	size
>686	Identifier	size
>687	Argument	GL_RGBA
>688	Identifier	GL_RGBA
>689	Argument	0
>690	PrimaryExpression	0
>691	Argument	GL_TEXTURE_2D
>692	Identifier	GL_TEXTURE_2D
>693	Callee	glTexImage2D
>694	Identifier	glTexImage2D
>695	ExpressionStatement	 
>696	CallExpression	glTexParameteri ( GL_TEXTURE_2D , GL_GENERATE_MIPMAP , GL_TRUE )
>697	ArgumentList	GL_TEXTURE_2D
>698	Argument	GL_TRUE
>699	Identifier	GL_TRUE
>700	Argument	GL_GENERATE_MIPMAP
>701	Identifier	GL_GENERATE_MIPMAP
>702	Argument	GL_TEXTURE_2D
>703	Identifier	GL_TEXTURE_2D
>704	Callee	glTexParameteri
>705	Identifier	glTexParameteri
>706	ExpressionStatement	 
>707	CallExpression	glTexParameteri ( GL_TEXTURE_2D , GL_TEXTURE_MAG_FILTER , GL_LINEAR )
>708	ArgumentList	GL_TEXTURE_2D
>709	Argument	GL_LINEAR
>710	Identifier	GL_LINEAR
>711	Argument	GL_TEXTURE_MAG_FILTER
>712	Identifier	GL_TEXTURE_MAG_FILTER
>713	Argument	GL_TEXTURE_2D
>714	Identifier	GL_TEXTURE_2D
>715	Callee	glTexParameteri
>716	Identifier	glTexParameteri
>717	ExpressionStatement	 
>718	CallExpression	glTexParameteri ( GL_TEXTURE_2D , GL_TEXTURE_MIN_FILTER , GL_LINEAR_MIPMAP_LINEAR )
>719	ArgumentList	GL_TEXTURE_2D
>720	Argument	GL_LINEAR_MIPMAP_LINEAR
>721	Identifier	GL_LINEAR_MIPMAP_LINEAR
>722	Argument	GL_TEXTURE_MIN_FILTER
>723	Identifier	GL_TEXTURE_MIN_FILTER
>724	Argument	GL_TEXTURE_2D
>725	Identifier	GL_TEXTURE_2D
>726	Callee	glTexParameteri
>727	Identifier	glTexParameteri
>728	ExpressionStatement	 
>729	CallExpression	glBindTexture ( GL_TEXTURE_2D , texture )
>730	ArgumentList	GL_TEXTURE_2D
>731	Argument	texture
>732	Identifier	texture
>733	Argument	GL_TEXTURE_2D
>734	Identifier	GL_TEXTURE_2D
>735	Callee	glBindTexture
>736	Identifier	glBindTexture
>737	ExpressionStatement	 
>738	CallExpression	glGenTextures ( 1 , & texture )
>739	ArgumentList	1
>740	Argument	& texture
>741	UnaryOp	& texture
>742	Identifier	texture
>743	UnaryOperator	&
>744	Argument	1
>745	PrimaryExpression	1
>746	Callee	glGenTextures
>747	Identifier	glGenTextures
>748	ForStatement	for ( int y = 0 ; y < size ; ++ y )
>749	CompoundStatement	 
>750	ForStatement	for ( int x = 0 ; x < size ; ++ x )
>751	CompoundStatement	 
>752	ExpressionStatement	 
>753	AssignmentExpr	data [ y * size + x ] *= ( 1.0 - dist )
>754	AdditiveExpression	1.0 - dist
>755	Identifier	dist
>756	PrimaryExpression	1.0
>757	ArrayIndexing	data [ y * size + x ]
>758	AdditiveExpression	y * size + x
>759	Identifier	x
>760	MultiplicativeExpression	y * size
>761	Identifier	size
>762	Identifier	y
>763	Identifier	data
>764	IfStatement	if ( dist > 1.0 )
>765	ExpressionStatement	 
>766	AssignmentExpr	dist = 1.0
>767	PrimaryExpression	1.0
>768	Identifier	dist
>769	Condition	 
>770	RelationalExpression	dist > 1.0
>771	PrimaryExpression	1.0
>772	Identifier	dist
>773	ExpressionStatement	 
>774	AssignmentExpr	dist /= half_size
>775	Identifier	half_size
>776	Identifier	dist
>777	IdentifierDeclStatement	 
>778	IdentifierDecl	dist = sqrt ( ( x - half_size ) * ( x - half_size ) + ( y - half_size ) * ( y - half_size ) )
>779	AssignmentExpr	dist = sqrt ( ( x - half_size ) * ( x - half_size ) + ( y - half_size ) * ( y - half_size ) )
>780	CallExpression	sqrt ( ( x - half_size ) * ( x - half_size ) + ( y - half_size ) * ( y - half_size ) )
>781	ArgumentList	( x - half_size ) * ( x - half_size ) + ( y - half_size ) * ( y - half_size )
>782	Argument	( x - half_size ) * ( x - half_size ) + ( y - half_size ) * ( y - half_size )
>783	AdditiveExpression	( x - half_size ) * ( x - half_size ) + ( y - half_size ) * ( y - half_size )
>784	MultiplicativeExpression	( y - half_size ) * ( y - half_size )
>785	AdditiveExpression	y - half_size
>786	Identifier	half_size
>787	Identifier	y
>788	AdditiveExpression	y - half_size
>789	Identifier	half_size
>790	Identifier	y
>791	MultiplicativeExpression	( x - half_size ) * ( x - half_size )
>792	AdditiveExpression	x - half_size
>793	Identifier	half_size
>794	Identifier	x
>795	AdditiveExpression	x - half_size
>796	Identifier	half_size
>797	Identifier	x
>798	Callee	sqrt
>799	Identifier	sqrt
>800	Identifier	dist
>801	Identifier	dist
>802	IdentifierDeclType	float
>803	ExpressionStatement	 
>804	AssignmentExpr	data [ y * size + x ] = 1.0 - ( ( p -> Get ( ( float ) x / size , ( float ) y / size ) ) + 0.5 )
>805	AdditiveExpression	1.0 - ( ( p -> Get ( ( float ) x / size , ( float ) y / size ) ) + 0.5 )
>806	AdditiveExpression	( p -> Get ( ( float ) x / size , ( float ) y / size ) ) + 0.5
>807	PrimaryExpression	0.5
>808	CallExpression	p -> Get ( ( float ) x / size , ( float ) y / size )
>809	ArgumentList	( float ) x / size
>810	Argument	( float ) y / size
>811	MultiplicativeExpression	( float ) y / size
>812	Identifier	size
>813	CastExpression	( float ) y
>814	Identifier	y
>815	CastTarget	float
>816	Argument	( float ) x / size
>817	MultiplicativeExpression	( float ) x / size
>818	Identifier	size
>819	CastExpression	( float ) x
>820	Identifier	x
>821	CastTarget	float
>822	Callee	p -> Get
>823	PtrMemberAccess	p -> Get
>824	Identifier	Get
>825	Identifier	p
>826	PrimaryExpression	1.0
>827	ArrayIndexing	data [ y * size + x ]
>828	AdditiveExpression	y * size + x
>829	Identifier	x
>830	MultiplicativeExpression	y * size
>831	Identifier	size
>832	Identifier	y
>833	Identifier	data
>834	UnaryExpression	 
>835	Identifier	x
>836	IncDec	++
>837	Condition	 
>838	RelationalExpression	x < size
>839	Identifier	size
>840	Identifier	x
>841	ForInit	 
>842	IdentifierDeclStatement	int x = 0 ;
>843	IdentifierDecl	x = 0
>844	AssignmentExpr	x = 0
>845	PrimaryExpression	0
>846	Identifier	x
>847	Identifier	x
>848	IdentifierDeclType	int
>849	UnaryExpression	 
>850	Identifier	y
>851	IncDec	++
>852	Condition	 
>853	RelationalExpression	y < size
>854	Identifier	size
>855	Identifier	y
>856	ForInit	 
>857	IdentifierDeclStatement	int y = 0 ;
>858	IdentifierDecl	y = 0
>859	AssignmentExpr	y = 0
>860	PrimaryExpression	0
>861	Identifier	y
>862	Identifier	y
>863	IdentifierDeclType	int
>864	IdentifierDeclStatement	 
>865	IdentifierDecl	half_size = size / 2
>866	AssignmentExpr	half_size = size / 2
>867	MultiplicativeExpression	size / 2
>868	PrimaryExpression	2
>869	Identifier	size
>870	Identifier	half_size
>871	Identifier	half_size
>872	IdentifierDeclType	float
>873	IdentifierDeclStatement	 
>874	IdentifierDecl	* p = new Perlin ( 4 , 2.0 , 0.5 , 1234 )
>875	AssignmentExpr	* p = new Perlin ( 4 , 2.0 , 0.5 , 1234 )
>876	Expression	4 , 2.0 , 0.5 , 1234
>877	Expression	2.0 , 0.5 , 1234
>878	Expression	0.5 , 1234
>879	PrimaryExpression	1234
>880	PrimaryExpression	0.5
>881	PrimaryExpression	2.0
>882	PrimaryExpression	4
>883	Identifier	p
>884	Identifier	p
>885	IdentifierDeclType	Perlin *
>886	IdentifierDeclStatement	 
>887	IdentifierDecl	* data = new float [ size * size ]
>888	AssignmentExpr	* data = new float [ size * size ]
>889	MultiplicativeExpression	size * size
>890	Identifier	size
>891	Identifier	size
>892	Identifier	data
>893	Identifier	data
>894	IdentifierDeclType	float *
>895	IdentifierDeclStatement	 
>896	IdentifierDecl	texture = 0
>897	AssignmentExpr	texture = 0
>898	PrimaryExpression	0
>899	Identifier	texture
>900	Identifier	texture
>901	IdentifierDeclType	GLuint
>933	FunctionDef	finish_rtt (RTT * rtt)
>934	ParameterList	RTT * rtt
>935	Parameter	 
>936	Identifier	rtt
>937	ParameterType	RTT *
>938	ReturnType	GLuint
>939	CompoundStatement	 
>940	ReturnStatement	 
>941	Identifier	texture
>942	ExpressionStatement	 
>943	Identifier	rtt
>944	Statement	 
>945	IdentifierDeclStatement	 
>946	IdentifierDecl	texture = rtt -> get_texid ( )
>947	AssignmentExpr	texture = rtt -> get_texid ( )
>948	CallExpression	rtt -> get_texid ( )
>949	ArgumentList	 
>950	Callee	rtt -> get_texid
>951	PtrMemberAccess	rtt -> get_texid
>952	Identifier	get_texid
>953	Identifier	rtt
>954	Identifier	texture
>955	Identifier	texture
>956	IdentifierDeclType	GLuint
>957	ExpressionStatement	 
>958	CallExpression	rtt -> end_render ( )
>959	ArgumentList	 
>960	Callee	rtt -> end_render
>961	PtrMemberAccess	rtt -> end_render
>962	Identifier	end_render
>963	Identifier	rtt
>971	FunctionDef	Procedural 
>972	ParameterList	int t_size
>973	Parameter	 
>974	Identifier	t_size
>975	ParameterType	int
>976	ReturnType	GLuint
>977	CompoundStatement	 
>978	ReturnStatement	 
>979	CallExpression	finish_rtt ( rtt )
>980	ArgumentList	rtt
>981	Argument	rtt
>982	Identifier	rtt
>983	Callee	finish_rtt
>984	Identifier	finish_rtt
>985	ExpressionStatement	 
>986	CallExpression	draw_circle ( 0.8 , 64 )
>987	ArgumentList	0.8
>988	Argument	64
>989	PrimaryExpression	64
>990	Argument	0.8
>991	PrimaryExpression	0.8
>992	Callee	draw_circle
>993	Identifier	draw_circle
>994	ExpressionStatement	 
>995	CallExpression	glColor4f ( 0.0 , 0.0 , 0.0 , 0.0 )
>996	ArgumentList	0.0
>997	Argument	0.0
>998	PrimaryExpression	0.0
>999	Argument	0.0
>1000	PrimaryExpression	0.0
>1001	Argument	0.0
>1002	PrimaryExpression	0.0
>1003	Argument	0.0
>1004	PrimaryExpression	0.0
>1005	Callee	glColor4f
>1006	Identifier	glColor4f
>1007	ExpressionStatement	 
>1008	CallExpression	draw_circle ( 0.9 , 64 )
>1009	ArgumentList	0.9
>1010	Argument	64
>1011	PrimaryExpression	64
>1012	Argument	0.9
>1013	PrimaryExpression	0.9
>1014	Callee	draw_circle
>1015	Identifier	draw_circle
>1016	ExpressionStatement	 
>1017	CallExpression	glColor4f ( 1.0 , 1.0 , 1.0 , 1.0 )
>1018	ArgumentList	1.0
>1019	Argument	1.0
>1020	PrimaryExpression	1.0
>1021	Argument	1.0
>1022	PrimaryExpression	1.0
>1023	Argument	1.0
>1024	PrimaryExpression	1.0
>1025	Argument	1.0
>1026	PrimaryExpression	1.0
>1027	Callee	glColor4f
>1028	Identifier	glColor4f
>1029	IdentifierDeclStatement	 
>1030	IdentifierDecl	* rtt = setup_rtt ( t_size , GL_RGBA )
>1031	AssignmentExpr	* rtt = setup_rtt ( t_size , GL_RGBA )
>1032	CallExpression	setup_rtt ( t_size , GL_RGBA )
>1033	ArgumentList	t_size
>1034	Argument	GL_RGBA
>1035	Identifier	GL_RGBA
>1036	Argument	t_size
>1037	Identifier	t_size
>1038	Callee	setup_rtt
>1039	Identifier	setup_rtt
>1040	Identifier	rtt
>1041	Identifier	rtt
>1042	IdentifierDeclType	RTT *
>1051	FunctionDef	Procedural 
>1052	ParameterList	int t_size
>1053	Parameter	 
>1054	Identifier	t_size
>1055	ParameterType	int
>1056	ReturnType	GLuint
>1057	CompoundStatement	 
>1058	ReturnStatement	 
>1059	CallExpression	finish_rtt ( rtt )
>1060	ArgumentList	rtt
>1061	Argument	rtt
>1062	Identifier	rtt
>1063	Callee	finish_rtt
>1064	Identifier	finish_rtt
>1065	ExpressionStatement	 
>1066	CallExpression	draw_circle ( 0.9 , 64 )
>1067	ArgumentList	0.9
>1068	Argument	64
>1069	PrimaryExpression	64
>1070	Argument	0.9
>1071	PrimaryExpression	0.9
>1072	Callee	draw_circle
>1073	Identifier	draw_circle
>1074	ExpressionStatement	 
>1075	CallExpression	glColor4f ( 1.0 , 1.0 , 1.0 , 1.0 )
>1076	ArgumentList	1.0
>1077	Argument	1.0
>1078	PrimaryExpression	1.0
>1079	Argument	1.0
>1080	PrimaryExpression	1.0
>1081	Argument	1.0
>1082	PrimaryExpression	1.0
>1083	Argument	1.0
>1084	PrimaryExpression	1.0
>1085	Callee	glColor4f
>1086	Identifier	glColor4f
>1087	IdentifierDeclStatement	 
>1088	IdentifierDecl	* rtt = setup_rtt ( t_size , GL_RGBA )
>1089	AssignmentExpr	* rtt = setup_rtt ( t_size , GL_RGBA )
>1090	CallExpression	setup_rtt ( t_size , GL_RGBA )
>1091	ArgumentList	t_size
>1092	Argument	GL_RGBA
>1093	Identifier	GL_RGBA
>1094	Argument	t_size
>1095	Identifier	t_size
>1096	Callee	setup_rtt
>1097	Identifier	setup_rtt
>1098	Identifier	rtt
>1099	Identifier	rtt
>1100	IdentifierDeclType	RTT *
>1111	FunctionDef	Procedural 
>1112	ParameterList	int t_size
>1113	Parameter	 
>1114	Identifier	t_size
>1115	ParameterType	int
>1116	ReturnType	GLuint
>1117	CompoundStatement	 
>1118	ReturnStatement	 
>1119	CallExpression	finish_rtt ( rtt )
>1120	ArgumentList	rtt
>1121	Argument	rtt
>1122	Identifier	rtt
>1123	Callee	finish_rtt
>1124	Identifier	finish_rtt
>1125	ExpressionStatement	 
>1126	CallExpression	draw_circle ( 0.2 , 64 )
>1127	ArgumentList	0.2
>1128	Argument	64
>1129	PrimaryExpression	64
>1130	Argument	0.2
>1131	PrimaryExpression	0.2
>1132	Callee	draw_circle
>1133	Identifier	draw_circle
>1134	ExpressionStatement	 
>1135	CallExpression	glColor4f ( 1.0 , 1.0 , 1.0 , 1.0 )
>1136	ArgumentList	1.0
>1137	Argument	1.0
>1138	PrimaryExpression	1.0
>1139	Argument	1.0
>1140	PrimaryExpression	1.0
>1141	Argument	1.0
>1142	PrimaryExpression	1.0
>1143	Argument	1.0
>1144	PrimaryExpression	1.0
>1145	Callee	glColor4f
>1146	Identifier	glColor4f
>1147	ForStatement	for ( int i = 0 ; i < 4 ; ++ i )
>1148	CompoundStatement	 
>1149	ExpressionStatement	 
>1150	CallExpression	glRotatef ( 90 , 0 , 0 , 1 )
>1151	ArgumentList	90
>1152	Argument	1
>1153	PrimaryExpression	1
>1154	Argument	0
>1155	PrimaryExpression	0
>1156	Argument	0
>1157	PrimaryExpression	0
>1158	Argument	90
>1159	PrimaryExpression	90
>1160	Callee	glRotatef
>1161	Identifier	glRotatef
>1162	ExpressionStatement	 
>1163	CallExpression	glEnd ( )
>1164	ArgumentList	 
>1165	Callee	glEnd
>1166	Identifier	glEnd
>1167	ExpressionStatement	 
>1168	CallExpression	glVertex2f ( - 1.0 , 1.0 )
>1169	ArgumentList	- 1.0
>1170	Argument	1.0
>1171	PrimaryExpression	1.0
>1172	Argument	- 1.0
>1173	UnaryOp	- 1.0
>1174	PrimaryExpression	1.0
>1175	UnaryOperator	-
>1176	Callee	glVertex2f
>1177	Identifier	glVertex2f
>1178	ExpressionStatement	 
>1179	CallExpression	glVertex2f ( - 0.9 , 1.0 )
>1180	ArgumentList	- 0.9
>1181	Argument	1.0
>1182	PrimaryExpression	1.0
>1183	Argument	- 0.9
>1184	UnaryOp	- 0.9
>1185	PrimaryExpression	0.9
>1186	UnaryOperator	-
>1187	Callee	glVertex2f
>1188	Identifier	glVertex2f
>1189	ExpressionStatement	 
>1190	CallExpression	glVertex2f ( - 0.9 , - 1.0 )
>1191	ArgumentList	- 0.9
>1192	Argument	- 1.0
>1193	UnaryOp	- 1.0
>1194	PrimaryExpression	1.0
>1195	UnaryOperator	-
>1196	Argument	- 0.9
>1197	UnaryOp	- 0.9
>1198	PrimaryExpression	0.9
>1199	UnaryOperator	-
>1200	Callee	glVertex2f
>1201	Identifier	glVertex2f
>1202	ExpressionStatement	 
>1203	CallExpression	glVertex2f ( - 1.0 , - 1.0 )
>1204	ArgumentList	- 1.0
>1205	Argument	- 1.0
>1206	UnaryOp	- 1.0
>1207	PrimaryExpression	1.0
>1208	UnaryOperator	-
>1209	Argument	- 1.0
>1210	UnaryOp	- 1.0
>1211	PrimaryExpression	1.0
>1212	UnaryOperator	-
>1213	Callee	glVertex2f
>1214	Identifier	glVertex2f
>1215	ExpressionStatement	 
>1216	CallExpression	glBegin ( GL_QUADS )
>1217	ArgumentList	GL_QUADS
>1218	Argument	GL_QUADS
>1219	Identifier	GL_QUADS
>1220	Callee	glBegin
>1221	Identifier	glBegin
>1222	UnaryExpression	 
>1223	Identifier	i
>1224	IncDec	++
>1225	Condition	 
>1226	RelationalExpression	i < 4
>1227	PrimaryExpression	4
>1228	Identifier	i
>1229	ForInit	 
>1230	IdentifierDeclStatement	int i = 0 ;
>1231	IdentifierDecl	i = 0
>1232	AssignmentExpr	i = 0
>1233	PrimaryExpression	0
>1234	Identifier	i
>1235	Identifier	i
>1236	IdentifierDeclType	int
>1237	IdentifierDeclStatement	 
>1238	IdentifierDecl	glColor4f ( 0 , 0 , 0 , 0 )
>1239	Expression	0 , 0 , 0 , 0
>1240	Expression	0 , 0 , 0
>1241	Expression	0 , 0
>1242	PrimaryExpression	0
>1243	PrimaryExpression	0
>1244	PrimaryExpression	0
>1245	PrimaryExpression	0
>1246	Identifier	glColor4f
>1247	IdentifierDeclType	Q_CIRCLE
>1248	IdentifierDeclStatement	 
>1249	IdentifierDecl	glTranslatef ( - size , + size , 0.0 )
>1250	Expression	- size , + size , 0.0
>1251	Expression	+ size , 0.0
>1252	PrimaryExpression	0.0
>1253	UnaryOp	+ size
>1254	Identifier	size
>1255	UnaryOperator	+
>1256	UnaryOp	- size
>1257	Identifier	size
>1258	UnaryOperator	-
>1259	Identifier	glTranslatef
>1260	IdentifierDeclType	Q_CIRCLE
>1261	IdentifierDeclStatement	 
>1262	IdentifierDecl	glTranslatef ( + size , - size , 0.0 )
>1263	Expression	+ size , - size , 0.0
>1264	Expression	- size , 0.0
>1265	PrimaryExpression	0.0
>1266	UnaryOp	- size
>1267	Identifier	size
>1268	UnaryOperator	-
>1269	UnaryOp	+ size
>1270	Identifier	size
>1271	UnaryOperator	+
>1272	Identifier	glTranslatef
>1273	IdentifierDeclType	Q_CIRCLE
>1274	IdentifierDeclStatement	 
>1275	IdentifierDecl	glTranslatef ( + size , + size , 0.0 )
>1276	Expression	+ size , + size , 0.0
>1277	Expression	+ size , 0.0
>1278	PrimaryExpression	0.0
>1279	UnaryOp	+ size
>1280	Identifier	size
>1281	UnaryOperator	+
>1282	UnaryOp	+ size
>1283	Identifier	size
>1284	UnaryOperator	+
>1285	Identifier	glTranslatef
>1286	IdentifierDeclType	Q_CIRCLE
>1287	ExpressionStatement	 
>1288	CallExpression	glTranslatef ( - size , - size , 0.0 )
>1289	ArgumentList	- size
>1290	Argument	0.0
>1291	PrimaryExpression	0.0
>1292	Argument	- size
>1293	UnaryOp	- size
>1294	Identifier	size
>1295	UnaryOperator	-
>1296	Argument	- size
>1297	UnaryOp	- size
>1298	Identifier	size
>1299	UnaryOperator	-
>1300	Callee	glTranslatef
>1301	Identifier	glTranslatef
>1302	IdentifierDeclStatement	 
>1303	IdentifierDecl	size = 1.0
>1304	AssignmentExpr	size = 1.0
>1305	PrimaryExpression	1.0
>1306	Identifier	size
>1307	Identifier	size
>1308	IdentifierDeclType	int
>1309	IdentifierDeclStatement	 
>1310	IdentifierDecl	* rtt = setup_rtt ( t_size , GL_RGBA )
>1311	AssignmentExpr	* rtt = setup_rtt ( t_size , GL_RGBA )
>1312	CallExpression	setup_rtt ( t_size , GL_RGBA )
>1313	ArgumentList	t_size
>1314	Argument	GL_RGBA
>1315	Identifier	GL_RGBA
>1316	Argument	t_size
>1317	Identifier	t_size
>1318	Callee	setup_rtt
>1319	Identifier	setup_rtt
>1320	Identifier	rtt
>1321	Identifier	rtt
>1322	IdentifierDeclType	RTT *
>1336	FunctionDef	Procedural 
>1337	ParameterList	int t_size
>1338	Parameter	 
>1339	Identifier	t_size
>1340	ParameterType	int
>1341	ReturnType	GLuint
>1342	CompoundStatement	 
>1343	ReturnStatement	 
>1344	CallExpression	finish_rtt ( rtt )
>1345	ArgumentList	rtt
>1346	Argument	rtt
>1347	Identifier	rtt
>1348	Callee	finish_rtt
>1349	Identifier	finish_rtt
>1350	ExpressionStatement	 
>1351	CallExpression	draw_textured_quad ( 1.0 , 0 , false )
>1352	ArgumentList	1.0
>1353	Argument	false
>1354	Identifier	false
>1355	Argument	0
>1356	PrimaryExpression	0
>1357	Argument	1.0
>1358	PrimaryExpression	1.0
>1359	Callee	draw_textured_quad
>1360	Identifier	draw_textured_quad
>1361	ExpressionStatement	 
>1362	CallExpression	glScalef ( 1.8 , 0.2 , 1.0 )
>1363	ArgumentList	1.8
>1364	Argument	1.0
>1365	PrimaryExpression	1.0
>1366	Argument	0.2
>1367	PrimaryExpression	0.2
>1368	Argument	1.8
>1369	PrimaryExpression	1.8
>1370	Callee	glScalef
>1371	Identifier	glScalef
>1372	ExpressionStatement	 
>1373	CallExpression	glRotatef ( 90 + 45 , 0 , 0 , 1 )
>1374	ArgumentList	90 + 45
>1375	Argument	1
>1376	PrimaryExpression	1
>1377	Argument	0
>1378	PrimaryExpression	0
>1379	Argument	0
>1380	PrimaryExpression	0
>1381	Argument	90 + 45
>1382	AdditiveExpression	90 + 45
>1383	PrimaryExpression	45
>1384	PrimaryExpression	90
>1385	Callee	glRotatef
>1386	Identifier	glRotatef
>1387	ExpressionStatement	 
>1388	CallExpression	glLoadIdentity ( )
>1389	ArgumentList	 
>1390	Callee	glLoadIdentity
>1391	Identifier	glLoadIdentity
>1392	ExpressionStatement	 
>1393	CallExpression	draw_textured_quad ( 1.0 , 0 , false )
>1394	ArgumentList	1.0
>1395	Argument	false
>1396	Identifier	false
>1397	Argument	0
>1398	PrimaryExpression	0
>1399	Argument	1.0
>1400	PrimaryExpression	1.0
>1401	Callee	draw_textured_quad
>1402	Identifier	draw_textured_quad
>1403	ExpressionStatement	 
>1404	CallExpression	glScalef ( 1.8 , 0.2 , 1.0 )
>1405	ArgumentList	1.8
>1406	Argument	1.0
>1407	PrimaryExpression	1.0
>1408	Argument	0.2
>1409	PrimaryExpression	0.2
>1410	Argument	1.8
>1411	PrimaryExpression	1.8
>1412	Callee	glScalef
>1413	Identifier	glScalef
>1414	ExpressionStatement	 
>1415	CallExpression	glRotatef ( 45 , 0 , 0 , 1 )
>1416	ArgumentList	45
>1417	Argument	1
>1418	PrimaryExpression	1
>1419	Argument	0
>1420	PrimaryExpression	0
>1421	Argument	0
>1422	PrimaryExpression	0
>1423	Argument	45
>1424	PrimaryExpression	45
>1425	Callee	glRotatef
>1426	Identifier	glRotatef
>1427	ExpressionStatement	 
>1428	CallExpression	glColor4f ( 1.0 , 1.0 , 1.0 , 1.0 )
>1429	ArgumentList	1.0
>1430	Argument	1.0
>1431	PrimaryExpression	1.0
>1432	Argument	1.0
>1433	PrimaryExpression	1.0
>1434	Argument	1.0
>1435	PrimaryExpression	1.0
>1436	Argument	1.0
>1437	PrimaryExpression	1.0
>1438	Callee	glColor4f
>1439	Identifier	glColor4f
>1440	IdentifierDeclStatement	 
>1441	IdentifierDecl	* rtt = setup_rtt ( t_size , GL_RGBA )
>1442	AssignmentExpr	* rtt = setup_rtt ( t_size , GL_RGBA )
>1443	CallExpression	setup_rtt ( t_size , GL_RGBA )
>1444	ArgumentList	t_size
>1445	Argument	GL_RGBA
>1446	Identifier	GL_RGBA
>1447	Argument	t_size
>1448	Identifier	t_size
>1449	Callee	setup_rtt
>1450	Identifier	setup_rtt
>1451	Identifier	rtt
>1452	Identifier	rtt
>1453	IdentifierDeclType	RTT *
>1463	FunctionDef	Procedural 
>1464	ParameterList	int t_size
>1465	Parameter	 
>1466	Identifier	t_size
>1467	ParameterType	int
>1468	ReturnType	GLuint
>1469	CompoundStatement	 
>1470	ReturnStatement	 
>1471	CallExpression	finish_rtt ( rtt )
>1472	ArgumentList	rtt
>1473	Argument	rtt
>1474	Identifier	rtt
>1475	Callee	finish_rtt
>1476	Identifier	finish_rtt
>1477	ExpressionStatement	 
>1478	CallExpression	draw_textured_quad ( 0.5 , 0 , false )
>1479	ArgumentList	0.5
>1480	Argument	false
>1481	Identifier	false
>1482	Argument	0
>1483	PrimaryExpression	0
>1484	Argument	0.5
>1485	PrimaryExpression	0.5
>1486	Callee	draw_textured_quad
>1487	Identifier	draw_textured_quad
>1488	ExpressionStatement	 
>1489	CallExpression	glScalef ( 1.0 , 0.05 , 1.0 )
>1490	ArgumentList	1.0
>1491	Argument	1.0
>1492	PrimaryExpression	1.0
>1493	Argument	0.05
>1494	PrimaryExpression	0.05
>1495	Argument	1.0
>1496	PrimaryExpression	1.0
>1497	Callee	glScalef
>1498	Identifier	glScalef
>1499	ExpressionStatement	 
>1500	CallExpression	glRotatef ( 90 + 45 , 0 , 0 , 1 )
>1501	ArgumentList	90 + 45
>1502	Argument	1
>1503	PrimaryExpression	1
>1504	Argument	0
>1505	PrimaryExpression	0
>1506	Argument	0
>1507	PrimaryExpression	0
>1508	Argument	90 + 45
>1509	AdditiveExpression	90 + 45
>1510	PrimaryExpression	45
>1511	PrimaryExpression	90
>1512	Callee	glRotatef
>1513	Identifier	glRotatef
>1514	ExpressionStatement	 
>1515	CallExpression	glLoadIdentity ( )
>1516	ArgumentList	 
>1517	Callee	glLoadIdentity
>1518	Identifier	glLoadIdentity
>1519	ExpressionStatement	 
>1520	CallExpression	draw_textured_quad ( 0.5 , 0 , false )
>1521	ArgumentList	0.5
>1522	Argument	false
>1523	Identifier	false
>1524	Argument	0
>1525	PrimaryExpression	0
>1526	Argument	0.5
>1527	PrimaryExpression	0.5
>1528	Callee	draw_textured_quad
>1529	Identifier	draw_textured_quad
>1530	ExpressionStatement	 
>1531	CallExpression	glScalef ( 1.0 , 0.05 , 1.0 )
>1532	ArgumentList	1.0
>1533	Argument	1.0
>1534	PrimaryExpression	1.0
>1535	Argument	0.05
>1536	PrimaryExpression	0.05
>1537	Argument	1.0
>1538	PrimaryExpression	1.0
>1539	Callee	glScalef
>1540	Identifier	glScalef
>1541	ExpressionStatement	 
>1542	CallExpression	glRotatef ( 45 , 0 , 0 , 1 )
>1543	ArgumentList	45
>1544	Argument	1
>1545	PrimaryExpression	1
>1546	Argument	0
>1547	PrimaryExpression	0
>1548	Argument	0
>1549	PrimaryExpression	0
>1550	Argument	45
>1551	PrimaryExpression	45
>1552	Callee	glRotatef
>1553	Identifier	glRotatef
>1554	ExpressionStatement	 
>1555	CallExpression	glLoadIdentity ( )
>1556	ArgumentList	 
>1557	Callee	glLoadIdentity
>1558	Identifier	glLoadIdentity
>1559	ExpressionStatement	 
>1560	CallExpression	glColor4f ( 0.8 , 0.8 , 0.8 , 0.8 )
>1561	ArgumentList	0.8
>1562	Argument	0.8
>1563	PrimaryExpression	0.8
>1564	Argument	0.8
>1565	PrimaryExpression	0.8
>1566	Argument	0.8
>1567	PrimaryExpression	0.8
>1568	Argument	0.8
>1569	PrimaryExpression	0.8
>1570	Callee	glColor4f
>1571	Identifier	glColor4f
>1572	ExpressionStatement	 
>1573	CallExpression	draw_circle ( 0.9 , 64 )
>1574	ArgumentList	0.9
>1575	Argument	64
>1576	PrimaryExpression	64
>1577	Argument	0.9
>1578	PrimaryExpression	0.9
>1579	Callee	draw_circle
>1580	Identifier	draw_circle
>1581	ExpressionStatement	 
>1582	CallExpression	glColor4f ( 0.3 , 0.3 , 0.3 , 0.3 )
>1583	ArgumentList	0.3
>1584	Argument	0.3
>1585	PrimaryExpression	0.3
>1586	Argument	0.3
>1587	PrimaryExpression	0.3
>1588	Argument	0.3
>1589	PrimaryExpression	0.3
>1590	Argument	0.3
>1591	PrimaryExpression	0.3
>1592	Callee	glColor4f
>1593	Identifier	glColor4f
>1594	IdentifierDeclStatement	 
>1595	IdentifierDecl	* rtt = setup_rtt ( t_size , GL_RGBA )
>1596	AssignmentExpr	* rtt = setup_rtt ( t_size , GL_RGBA )
>1597	CallExpression	setup_rtt ( t_size , GL_RGBA )
>1598	ArgumentList	t_size
>1599	Argument	GL_RGBA
>1600	Identifier	GL_RGBA
>1601	Argument	t_size
>1602	Identifier	t_size
>1603	Callee	setup_rtt
>1604	Identifier	setup_rtt
>1605	Identifier	rtt
>1606	Identifier	rtt
>1607	IdentifierDeclType	RTT *
>1617	FunctionDef	Procedural 
>1618	ParameterList	 
>1619	ReturnType	GLuint
>1620	CompoundStatement	 
>1621	ReturnStatement	 
>1622	Identifier	texture
>1623	ExpressionStatement	 
>1624	CallExpression	glTexParameteri ( GL_TEXTURE_2D , GL_TEXTURE_WRAP_S , GL_REPEAT )
>1625	ArgumentList	GL_TEXTURE_2D
>1626	Argument	GL_REPEAT
>1627	Identifier	GL_REPEAT
>1628	Argument	GL_TEXTURE_WRAP_S
>1629	Identifier	GL_TEXTURE_WRAP_S
>1630	Argument	GL_TEXTURE_2D
>1631	Identifier	GL_TEXTURE_2D
>1632	Callee	glTexParameteri
>1633	Identifier	glTexParameteri
>1634	ExpressionStatement	 
>1635	CallExpression	glBindTexture ( GL_TEXTURE_2D , texture )
>1636	ArgumentList	GL_TEXTURE_2D
>1637	Argument	texture
>1638	Identifier	texture
>1639	Argument	GL_TEXTURE_2D
>1640	Identifier	GL_TEXTURE_2D
>1641	Callee	glBindTexture
>1642	Identifier	glBindTexture
>1643	IdentifierDeclStatement	 
>1644	IdentifierDecl	texture = finish_rtt ( rtt )
>1645	AssignmentExpr	texture = finish_rtt ( rtt )
>1646	CallExpression	finish_rtt ( rtt )
>1647	ArgumentList	rtt
>1648	Argument	rtt
>1649	Identifier	rtt
>1650	Callee	finish_rtt
>1651	Identifier	finish_rtt
>1652	Identifier	texture
>1653	Identifier	texture
>1654	IdentifierDeclType	GLuint
>1655	ExpressionStatement	 
>1656	CallExpression	draw_textured_quad ( 3.9 , 0 , false )
>1657	ArgumentList	3.9
>1658	Argument	false
>1659	Identifier	false
>1660	Argument	0
>1661	PrimaryExpression	0
>1662	Argument	3.9
>1663	PrimaryExpression	3.9
>1664	Callee	draw_textured_quad
>1665	Identifier	draw_textured_quad
>1666	ExpressionStatement	 
>1667	CallExpression	glColor4f ( 1.0 , 1.0 , 1.0 , 0.5 )
>1668	ArgumentList	1.0
>1669	Argument	0.5
>1670	PrimaryExpression	0.5
>1671	Argument	1.0
>1672	PrimaryExpression	1.0
>1673	Argument	1.0
>1674	PrimaryExpression	1.0
>1675	Argument	1.0
>1676	PrimaryExpression	1.0
>1677	Callee	glColor4f
>1678	Identifier	glColor4f
>1679	ExpressionStatement	 
>1680	CallExpression	glTranslatef ( 0.0 , - 1.0 , 0.0 )
>1681	ArgumentList	0.0
>1682	Argument	0.0
>1683	PrimaryExpression	0.0
>1684	Argument	- 1.0
>1685	UnaryOp	- 1.0
>1686	PrimaryExpression	1.0
>1687	UnaryOperator	-
>1688	Argument	0.0
>1689	PrimaryExpression	0.0
>1690	Callee	glTranslatef
>1691	Identifier	glTranslatef
>1692	ExpressionStatement	 
>1693	CallExpression	draw_textured_quad ( 2.0 , 0 , false )
>1694	ArgumentList	2.0
>1695	Argument	false
>1696	Identifier	false
>1697	Argument	0
>1698	PrimaryExpression	0
>1699	Argument	2.0
>1700	PrimaryExpression	2.0
>1701	Callee	draw_textured_quad
>1702	Identifier	draw_textured_quad
>1703	ExpressionStatement	 
>1704	CallExpression	glColor4f ( 1.0 , 1.0 , 1.0 , 0.0 )
>1705	ArgumentList	1.0
>1706	Argument	0.0
>1707	PrimaryExpression	0.0
>1708	Argument	1.0
>1709	PrimaryExpression	1.0
>1710	Argument	1.0
>1711	PrimaryExpression	1.0
>1712	Argument	1.0
>1713	PrimaryExpression	1.0
>1714	Callee	glColor4f
>1715	Identifier	glColor4f
>1716	IdentifierDeclStatement	 
>1717	IdentifierDecl	* rtt = setup_rtt ( 128 , GL_RGBA )
>1718	AssignmentExpr	* rtt = setup_rtt ( 128 , GL_RGBA )
>1719	CallExpression	setup_rtt ( 128 , GL_RGBA )
>1720	ArgumentList	128
>1721	Argument	GL_RGBA
>1722	Identifier	GL_RGBA
>1723	Argument	128
>1724	PrimaryExpression	128
>1725	Callee	setup_rtt
>1726	Identifier	setup_rtt
>1727	Identifier	rtt
>1728	Identifier	rtt
>1729	IdentifierDeclType	RTT *
>1742	FunctionDef	Procedural 
>1743	ParameterList	 
>1744	ReturnType	GLuint
>1745	CompoundStatement	 
>1746	ReturnStatement	 
>1747	Identifier	texture
>1748	ExpressionStatement	 
>1749	CallExpression	glTexParameteri ( GL_TEXTURE_2D , GL_TEXTURE_WRAP_S , GL_REPEAT )
>1750	ArgumentList	GL_TEXTURE_2D
>1751	Argument	GL_REPEAT
>1752	Identifier	GL_REPEAT
>1753	Argument	GL_TEXTURE_WRAP_S
>1754	Identifier	GL_TEXTURE_WRAP_S
>1755	Argument	GL_TEXTURE_2D
>1756	Identifier	GL_TEXTURE_2D
>1757	Callee	glTexParameteri
>1758	Identifier	glTexParameteri
>1759	ExpressionStatement	 
>1760	CallExpression	glBindTexture ( GL_TEXTURE_2D , texture )
>1761	ArgumentList	GL_TEXTURE_2D
>1762	Argument	texture
>1763	Identifier	texture
>1764	Argument	GL_TEXTURE_2D
>1765	Identifier	GL_TEXTURE_2D
>1766	Callee	glBindTexture
>1767	Identifier	glBindTexture
>1768	IdentifierDeclStatement	 
>1769	IdentifierDecl	texture = finish_rtt ( rtt )
>1770	AssignmentExpr	texture = finish_rtt ( rtt )
>1771	CallExpression	finish_rtt ( rtt )
>1772	ArgumentList	rtt
>1773	Argument	rtt
>1774	Identifier	rtt
>1775	Callee	finish_rtt
>1776	Identifier	finish_rtt
>1777	Identifier	texture
>1778	Identifier	texture
>1779	IdentifierDeclType	GLuint
>1780	ExpressionStatement	 
>1781	CallExpression	draw_textured_quad ( 3.9 , 0 , false )
>1782	ArgumentList	3.9
>1783	Argument	false
>1784	Identifier	false
>1785	Argument	0
>1786	PrimaryExpression	0
>1787	Argument	3.9
>1788	PrimaryExpression	3.9
>1789	Callee	draw_textured_quad
>1790	Identifier	draw_textured_quad
>1791	ExpressionStatement	 
>1792	CallExpression	glColor4f ( 1.0 , 1.0 , 1.0 , 1.0 )
>1793	ArgumentList	1.0
>1794	Argument	1.0
>1795	PrimaryExpression	1.0
>1796	Argument	1.0
>1797	PrimaryExpression	1.0
>1798	Argument	1.0
>1799	PrimaryExpression	1.0
>1800	Argument	1.0
>1801	PrimaryExpression	1.0
>1802	Callee	glColor4f
>1803	Identifier	glColor4f
>1804	ExpressionStatement	 
>1805	CallExpression	glTranslatef ( 0.0 , - 1.0 , 0.0 )
>1806	ArgumentList	0.0
>1807	Argument	0.0
>1808	PrimaryExpression	0.0
>1809	Argument	- 1.0
>1810	UnaryOp	- 1.0
>1811	PrimaryExpression	1.0
>1812	UnaryOperator	-
>1813	Argument	0.0
>1814	PrimaryExpression	0.0
>1815	Callee	glTranslatef
>1816	Identifier	glTranslatef
>1817	ExpressionStatement	 
>1818	CallExpression	draw_textured_quad ( 2.0 , 0 , false )
>1819	ArgumentList	2.0
>1820	Argument	false
>1821	Identifier	false
>1822	Argument	0
>1823	PrimaryExpression	0
>1824	Argument	2.0
>1825	PrimaryExpression	2.0
>1826	Callee	draw_textured_quad
>1827	Identifier	draw_textured_quad
>1828	ExpressionStatement	 
>1829	CallExpression	glColor4f ( 1.0 , 1.0 , 1.0 , 0.0 )
>1830	ArgumentList	1.0
>1831	Argument	0.0
>1832	PrimaryExpression	0.0
>1833	Argument	1.0
>1834	PrimaryExpression	1.0
>1835	Argument	1.0
>1836	PrimaryExpression	1.0
>1837	Argument	1.0
>1838	PrimaryExpression	1.0
>1839	Callee	glColor4f
>1840	Identifier	glColor4f
>1841	IdentifierDeclStatement	 
>1842	IdentifierDecl	* rtt = setup_rtt ( 128 , GL_RGBA )
>1843	AssignmentExpr	* rtt = setup_rtt ( 128 , GL_RGBA )
>1844	CallExpression	setup_rtt ( 128 , GL_RGBA )
>1845	ArgumentList	128
>1846	Argument	GL_RGBA
>1847	Identifier	GL_RGBA
>1848	Argument	128
>1849	PrimaryExpression	128
>1850	Callee	setup_rtt
>1851	Identifier	setup_rtt
>1852	Identifier	rtt
>1853	Identifier	rtt
>1854	IdentifierDeclType	RTT *
>1867	FunctionDef	Procedural 
>1868	ParameterList	 
>1869	ReturnType	GLuint
>1870	CompoundStatement	 
>1871	ReturnStatement	 
>1872	Identifier	texture
>1873	ExpressionStatement	 
>1874	CallExpression	glTexParameteri ( GL_TEXTURE_2D , GL_TEXTURE_WRAP_T , GL_REPEAT )
>1875	ArgumentList	GL_TEXTURE_2D
>1876	Argument	GL_REPEAT
>1877	Identifier	GL_REPEAT
>1878	Argument	GL_TEXTURE_WRAP_T
>1879	Identifier	GL_TEXTURE_WRAP_T
>1880	Argument	GL_TEXTURE_2D
>1881	Identifier	GL_TEXTURE_2D
>1882	Callee	glTexParameteri
>1883	Identifier	glTexParameteri
>1884	ExpressionStatement	 
>1885	CallExpression	glTexParameteri ( GL_TEXTURE_2D , GL_TEXTURE_WRAP_S , GL_REPEAT )
>1886	ArgumentList	GL_TEXTURE_2D
>1887	Argument	GL_REPEAT
>1888	Identifier	GL_REPEAT
>1889	Argument	GL_TEXTURE_WRAP_S
>1890	Identifier	GL_TEXTURE_WRAP_S
>1891	Argument	GL_TEXTURE_2D
>1892	Identifier	GL_TEXTURE_2D
>1893	Callee	glTexParameteri
>1894	Identifier	glTexParameteri
>1895	ExpressionStatement	 
>1896	CallExpression	glBindTexture ( GL_TEXTURE_2D , texture )
>1897	ArgumentList	GL_TEXTURE_2D
>1898	Argument	texture
>1899	Identifier	texture
>1900	Argument	GL_TEXTURE_2D
>1901	Identifier	GL_TEXTURE_2D
>1902	Callee	glBindTexture
>1903	Identifier	glBindTexture
>1904	IdentifierDeclStatement	 
>1905	IdentifierDecl	texture = finish_rtt ( rtt )
>1906	AssignmentExpr	texture = finish_rtt ( rtt )
>1907	CallExpression	finish_rtt ( rtt )
>1908	ArgumentList	rtt
>1909	Argument	rtt
>1910	Identifier	rtt
>1911	Callee	finish_rtt
>1912	Identifier	finish_rtt
>1913	Identifier	texture
>1914	Identifier	texture
>1915	IdentifierDeclType	GLuint
>1916	ExpressionStatement	 
>1917	CallExpression	draw_textured_quad ( 1.0 , 0 , false )
>1918	ArgumentList	1.0
>1919	Argument	false
>1920	Identifier	false
>1921	Argument	0
>1922	PrimaryExpression	0
>1923	Argument	1.0
>1924	PrimaryExpression	1.0
>1925	Callee	draw_textured_quad
>1926	Identifier	draw_textured_quad
>1927	ExpressionStatement	 
>1928	CallExpression	glScalef ( 3.0 , 0.5 , 1.0 )
>1929	ArgumentList	3.0
>1930	Argument	1.0
>1931	PrimaryExpression	1.0
>1932	Argument	0.5
>1933	PrimaryExpression	0.5
>1934	Argument	3.0
>1935	PrimaryExpression	3.0
>1936	Callee	glScalef
>1937	Identifier	glScalef
>1938	ExpressionStatement	 
>1939	CallExpression	glColor4f ( 1.0 , 1.0 , 1.0 , 1.0 )
>1940	ArgumentList	1.0
>1941	Argument	1.0
>1942	PrimaryExpression	1.0
>1943	Argument	1.0
>1944	PrimaryExpression	1.0
>1945	Argument	1.0
>1946	PrimaryExpression	1.0
>1947	Argument	1.0
>1948	PrimaryExpression	1.0
>1949	Callee	glColor4f
>1950	Identifier	glColor4f
>1951	ExpressionStatement	 
>1952	CallExpression	draw_textured_quad ( 2.0 , 0 , false )
>1953	ArgumentList	2.0
>1954	Argument	false
>1955	Identifier	false
>1956	Argument	0
>1957	PrimaryExpression	0
>1958	Argument	2.0
>1959	PrimaryExpression	2.0
>1960	Callee	draw_textured_quad
>1961	Identifier	draw_textured_quad
>1962	ExpressionStatement	 
>1963	CallExpression	glColor4f ( 1.0 , 1.0 , 1.0 , 0.0 )
>1964	ArgumentList	1.0
>1965	Argument	0.0
>1966	PrimaryExpression	0.0
>1967	Argument	1.0
>1968	PrimaryExpression	1.0
>1969	Argument	1.0
>1970	PrimaryExpression	1.0
>1971	Argument	1.0
>1972	PrimaryExpression	1.0
>1973	Callee	glColor4f
>1974	Identifier	glColor4f
>1975	IdentifierDeclStatement	 
>1976	IdentifierDecl	* rtt = setup_rtt ( 128 , GL_RGBA )
>1977	AssignmentExpr	* rtt = setup_rtt ( 128 , GL_RGBA )
>1978	CallExpression	setup_rtt ( 128 , GL_RGBA )
>1979	ArgumentList	128
>1980	Argument	GL_RGBA
>1981	Identifier	GL_RGBA
>1982	Argument	128
>1983	PrimaryExpression	128
>1984	Callee	setup_rtt
>1985	Identifier	setup_rtt
>1986	Identifier	rtt
>1987	Identifier	rtt
>1988	IdentifierDeclType	RTT *
<3=27,26,4
<4=23,20,17,14,11,8,5
<5=7,6
<8=10,9
<11=13,12
<14=16,15
<17=19,18
<20=22,21
<23=25,24
<27=116,30,28
<28=29
<30=108,104,101,31
<31=84,66,48,41,32
<32=33
<33=37,34
<34=35
<35=36
<37=38
<38=40,39
<41=42
<42=47,46,43
<43=45,44
<48=49
<49=65,64,50
<50=63,51
<51=62,52
<52=61,53
<53=55,54
<55=59,56
<56=57
<57=58
<59=60
<66=67
<67=83,82,68
<68=81,69
<69=80,70
<70=79,71
<71=73,72
<73=77,74
<74=75
<75=76
<77=78
<84=85
<85=100,99,86
<86=98,87
<87=95,88
<88=94,89
<89=91,90
<91=93,92
<95=97,96
<101=103,102
<104=105
<105=107,106
<108=109
<109=110
<110=115,114,111
<111=113,112
<116=117
<117=119,118
<139=148,147,140
<140=144,141
<141=143,142
<144=146,145
<148=188,181,172,171,170,169,168,167,166,165,164,154,149
<149=150
<150=152,151
<152=153
<154=155
<155=156
<156=162,157
<157=158
<158=159
<159=161,160
<162=163
<172=173
<173=179,174
<174=177,175
<175=176
<177=178
<179=180
<181=182
<182=186,183
<183=184
<184=185
<186=187
<188=189
<189=205,204,190
<190=203,191
<191=201,192
<192=199,197,195,193
<193=194
<195=196
<197=198
<199=200
<201=202
<216=225,224,217
<217=221,218
<218=220,219
<221=223,222
<225=265,258,249,248,247,246,245,244,243,242,241,231,226
<226=227
<227=229,228
<229=230
<231=232
<232=233
<233=239,234
<234=235
<235=236
<236=238,237
<239=240
<249=250
<250=256,251
<251=252
<252=253
<253=255,254
<256=257
<258=259
<259=263,260
<260=261
<261=262
<263=264
<265=266
<266=292,291,267
<267=290,268
<268=288,269
<269=282,276,272,270
<270=271
<272=273
<273=275,274
<276=277
<277=279,278
<279=281,280
<282=283
<283=285,284
<285=287,286
<288=289
<307=325,324,308
<308=321,318,315,312,309
<309=311,310
<312=314,313
<315=317,316
<318=320,319
<321=323,322
<325=476,328,326
<326=327
<328=468,464,459,329
<329=453,444,395,346,330
<330=331
<331=342,332
<332=333
<333=334
<334=340,335
<335=338,336
<336=337
<338=339
<340=341
<342=343
<343=345,344
<346=347
<347=394,393,348
<348=392,349
<349=383,350
<350=372,351
<351=361,352
<352=358,353
<353=357,354
<354=356,355
<358=360,359
<361=369,362
<362=368,363
<363=367,364
<364=366,365
<369=371,370
<372=380,373
<373=379,374
<374=378,375
<375=377,376
<380=382,381
<383=389,384
<384=388,385
<385=387,386
<389=391,390
<395=396
<396=443,442,397
<397=441,398
<398=432,399
<399=421,400
<400=410,401
<401=407,402
<402=406,403
<403=405,404
<407=409,408
<410=418,411
<411=417,412
<412=416,413
<413=415,414
<418=420,419
<421=429,422
<422=428,423
<423=427,424
<424=426,425
<429=431,430
<432=438,433
<433=437,434
<434=436,435
<438=440,439
<444=445
<445=452,451,446
<446=450,447
<447=449,448
<453=455,454
<455=456
<456=458,457
<459=463,460
<460=462,461
<464=465
<465=467,466
<468=469
<469=470
<470=475,474,471
<471=473,472
<476=477
<477=479,478
<498=513,512,499
<499=509,506,503,500
<500=502,501
<503=505,504
<506=508,507
<509=511,510
<513=628,516,514
<514=515
<516=620,616,611,517
<517=605,596,565,534,518
<518=519
<519=530,520
<520=521
<521=522
<522=528,523
<523=526,524
<524=525
<526=527
<528=529
<530=531
<531=533,532
<534=535
<535=564,563,536
<536=562,537
<537=555,538
<538=546,539
<539=543,540
<540=542,541
<543=545,544
<546=552,547
<547=551,548
<548=550,549
<552=554,553
<555=559,556
<556=558,557
<559=561,560
<565=566
<566=595,594,567
<567=593,568
<568=586,569
<569=577,570
<570=574,571
<571=573,572
<574=576,575
<577=583,578
<578=582,579
<579=581,580
<583=585,584
<586=590,587
<587=589,588
<590=592,591
<596=597
<597=604,603,598
<598=602,599
<599=601,600
<605=607,606
<607=608
<608=610,609
<611=615,612
<612=614,613
<616=617
<617=619,618
<620=621
<621=622
<622=627,626,623
<623=625,624
<628=629
<629=631,630
<648=654,653,649
<649=650
<650=652,651
<654=895,886,873,864,748,737,728,717,706,695,672,665,664,662,661,660,659,657,655
<655=656
<657=658
<662=663
<665=666
<666=670,667
<667=668
<668=669
<670=671
<672=673
<673=693,674
<674=691,689,687,685,683,681,679,677,675
<675=676
<677=678
<679=680
<681=682
<683=684
<685=686
<687=688
<689=690
<691=692
<693=694
<695=696
<696=704,697
<697=702,700,698
<698=699
<700=701
<702=703
<704=705
<706=707
<707=715,708
<708=713,711,709
<709=710
<711=712
<713=714
<715=716
<717=718
<718=726,719
<719=724,722,720
<720=721
<722=723
<724=725
<726=727
<728=729
<729=735,730
<730=733,731
<731=732
<733=734
<735=736
<737=738
<738=746,739
<739=744,740
<740=741
<741=743,742
<744=745
<746=747
<748=856,852,849,749
<749=750
<750=841,837,834,751
<751=803,777,773,764,752
<752=753
<753=757,754
<754=756,755
<757=763,758
<758=760,759
<760=762,761
<764=769,765
<765=766
<766=768,767
<769=770
<770=772,771
<773=774
<774=776,775
<777=778
<778=802,801,779
<779=800,780
<780=798,781
<781=782
<782=783
<783=791,784
<784=788,785
<785=787,786
<788=790,789
<791=795,792
<792=794,793
<795=797,796
<798=799
<803=804
<804=827,805
<805=826,806
<806=808,807
<808=822,809
<809=816,810
<810=811
<811=813,812
<813=815,814
<816=817
<817=819,818
<819=821,820
<822=823
<823=825,824
<827=833,828
<828=830,829
<830=832,831
<834=836,835
<837=838
<838=840,839
<841=842
<842=843
<843=848,847,844
<844=846,845
<849=851,850
<852=853
<853=855,854
<856=857
<857=858
<858=863,862,859
<859=861,860
<864=865
<865=872,871,866
<866=870,867
<867=869,868
<873=874
<874=885,884,875
<875=883,876
<876=882,877
<877=881,878
<878=880,879
<886=887
<887=894,893,888
<888=892,889
<889=891,890
<895=896
<896=901,900,897
<897=899,898
<933=939,938,934
<934=935
<935=937,936
<939=957,945,944,942,940
<940=941
<942=943
<945=946
<946=956,955,947
<947=954,948
<948=950,949
<950=951
<951=953,952
<957=958
<958=960,959
<960=961
<961=963,962
<971=977,976,972
<972=973
<973=975,974
<977=1029,1016,1007,994,985,978
<978=979
<979=983,980
<980=981
<981=982
<983=984
<985=986
<986=992,987
<987=990,988
<988=989
<990=991
<992=993
<994=995
<995=1005,996
<996=1003,1001,999,997
<997=998
<999=1000
<1001=1002
<1003=1004
<1005=1006
<1007=1008
<1008=1014,1009
<1009=1012,1010
<1010=1011
<1012=1013
<1014=1015
<1016=1017
<1017=1027,1018
<1018=1025,1023,1021,1019
<1019=1020
<1021=1022
<1023=1024
<1025=1026
<1027=1028
<1029=1030
<1030=1042,1041,1031
<1031=1040,1032
<1032=1038,1033
<1033=1036,1034
<1034=1035
<1036=1037
<1038=1039
<1051=1057,1056,1052
<1052=1053
<1053=1055,1054
<1057=1087,1074,1065,1058
<1058=1059
<1059=1063,1060
<1060=1061
<1061=1062
<1063=1064
<1065=1066
<1066=1072,1067
<1067=1070,1068
<1068=1069
<1070=1071
<1072=1073
<1074=1075
<1075=1085,1076
<1076=1083,1081,1079,1077
<1077=1078
<1079=1080
<1081=1082
<1083=1084
<1085=1086
<1087=1088
<1088=1100,1099,1089
<1089=1098,1090
<1090=1096,1091
<1091=1094,1092
<1092=1093
<1094=1095
<1096=1097
<1111=1117,1116,1112
<1112=1113
<1113=1115,1114
<1117=1309,1302,1287,1274,1261,1248,1237,1147,1134,1125,1118
<1118=1119
<1119=1123,1120
<1120=1121
<1121=1122
<1123=1124
<1125=1126
<1126=1132,1127
<1127=1130,1128
<1128=1129
<1130=1131
<1132=1133
<1134=1135
<1135=1145,1136
<1136=1143,1141,1139,1137
<1137=1138
<1139=1140
<1141=1142
<1143=1144
<1145=1146
<1147=1229,1225,1222,1148
<1148=1215,1202,1189,1178,1167,1162,1149
<1149=1150
<1150=1160,1151
<1151=1158,1156,1154,1152
<1152=1153
<1154=1155
<1156=1157
<1158=1159
<1160=1161
<1162=1163
<1163=1165,1164
<1165=1166
<1167=1168
<1168=1176,1169
<1169=1172,1170
<1170=1171
<1172=1173
<1173=1175,1174
<1176=1177
<1178=1179
<1179=1187,1180
<1180=1183,1181
<1181=1182
<1183=1184
<1184=1186,1185
<1187=1188
<1189=1190
<1190=1200,1191
<1191=1196,1192
<1192=1193
<1193=1195,1194
<1196=1197
<1197=1199,1198
<1200=1201
<1202=1203
<1203=1213,1204
<1204=1209,1205
<1205=1206
<1206=1208,1207
<1209=1210
<1210=1212,1211
<1213=1214
<1215=1216
<1216=1220,1217
<1217=1218
<1218=1219
<1220=1221
<1222=1224,1223
<1225=1226
<1226=1228,1227
<1229=1230
<1230=1231
<1231=1236,1235,1232
<1232=1234,1233
<1237=1238
<1238=1247,1246,1239
<1239=1245,1240
<1240=1244,1241
<1241=1243,1242
<1248=1249
<1249=1260,1259,1250
<1250=1256,1251
<1251=1253,1252
<1253=1255,1254
<1256=1258,1257
<1261=1262
<1262=1273,1272,1263
<1263=1269,1264
<1264=1266,1265
<1266=1268,1267
<1269=1271,1270
<1274=1275
<1275=1286,1285,1276
<1276=1282,1277
<1277=1279,1278
<1279=1281,1280
<1282=1284,1283
<1287=1288
<1288=1300,1289
<1289=1296,1292,1290
<1290=1291
<1292=1293
<1293=1295,1294
<1296=1297
<1297=1299,1298
<1300=1301
<1302=1303
<1303=1308,1307,1304
<1304=1306,1305
<1309=1310
<1310=1322,1321,1311
<1311=1320,1312
<1312=1318,1313
<1313=1316,1314
<1314=1315
<1316=1317
<1318=1319
<1336=1342,1341,1337
<1337=1338
<1338=1340,1339
<1342=1440,1427,1414,1403,1392,1387,1372,1361,1350,1343
<1343=1344
<1344=1348,1345
<1345=1346
<1346=1347
<1348=1349
<1350=1351
<1351=1359,1352
<1352=1357,1355,1353
<1353=1354
<1355=1356
<1357=1358
<1359=1360
<1361=1362
<1362=1370,1363
<1363=1368,1366,1364
<1364=1365
<1366=1367
<1368=1369
<1370=1371
<1372=1373
<1373=1385,1374
<1374=1381,1379,1377,1375
<1375=1376
<1377=1378
<1379=1380
<1381=1382
<1382=1384,1383
<1385=1386
<1387=1388
<1388=1390,1389
<1390=1391
<1392=1393
<1393=1401,1394
<1394=1399,1397,1395
<1395=1396
<1397=1398
<1399=1400
<1401=1402
<1403=1404
<1404=1412,1405
<1405=1410,1408,1406
<1406=1407
<1408=1409
<1410=1411
<1412=1413
<1414=1415
<1415=1425,1416
<1416=1423,1421,1419,1417
<1417=1418
<1419=1420
<1421=1422
<1423=1424
<1425=1426
<1427=1428
<1428=1438,1429
<1429=1436,1434,1432,1430
<1430=1431
<1432=1433
<1434=1435
<1436=1437
<1438=1439
<1440=1441
<1441=1453,1452,1442
<1442=1451,1443
<1443=1449,1444
<1444=1447,1445
<1445=1446
<1447=1448
<1449=1450
<1463=1469,1468,1464
<1464=1465
<1465=1467,1466
<1469=1594,1581,1572,1559,1554,1541,1530,1519,1514,1499,1488,1477,1470
<1470=1471
<1471=1475,1472
<1472=1473
<1473=1474
<1475=1476
<1477=1478
<1478=1486,1479
<1479=1484,1482,1480
<1480=1481
<1482=1483
<1484=1485
<1486=1487
<1488=1489
<1489=1497,1490
<1490=1495,1493,1491
<1491=1492
<1493=1494
<1495=1496
<1497=1498
<1499=1500
<1500=1512,1501
<1501=1508,1506,1504,1502
<1502=1503
<1504=1505
<1506=1507
<1508=1509
<1509=1511,1510
<1512=1513
<1514=1515
<1515=1517,1516
<1517=1518
<1519=1520
<1520=1528,1521
<1521=1526,1524,1522
<1522=1523
<1524=1525
<1526=1527
<1528=1529
<1530=1531
<1531=1539,1532
<1532=1537,1535,1533
<1533=1534
<1535=1536
<1537=1538
<1539=1540
<1541=1542
<1542=1552,1543
<1543=1550,1548,1546,1544
<1544=1545
<1546=1547
<1548=1549
<1550=1551
<1552=1553
<1554=1555
<1555=1557,1556
<1557=1558
<1559=1560
<1560=1570,1561
<1561=1568,1566,1564,1562
<1562=1563
<1564=1565
<1566=1567
<1568=1569
<1570=1571
<1572=1573
<1573=1579,1574
<1574=1577,1575
<1575=1576
<1577=1578
<1579=1580
<1581=1582
<1582=1592,1583
<1583=1590,1588,1586,1584
<1584=1585
<1586=1587
<1588=1589
<1590=1591
<1592=1593
<1594=1595
<1595=1607,1606,1596
<1596=1605,1597
<1597=1603,1598
<1598=1601,1599
<1599=1600
<1601=1602
<1603=1604
<1617=1620,1619,1618
<1620=1716,1703,1692,1679,1666,1655,1643,1634,1623,1621
<1621=1622
<1623=1624
<1624=1632,1625
<1625=1630,1628,1626
<1626=1627
<1628=1629
<1630=1631
<1632=1633
<1634=1635
<1635=1641,1636
<1636=1639,1637
<1637=1638
<1639=1640
<1641=1642
<1643=1644
<1644=1654,1653,1645
<1645=1652,1646
<1646=1650,1647
<1647=1648
<1648=1649
<1650=1651
<1655=1656
<1656=1664,1657
<1657=1662,1660,1658
<1658=1659
<1660=1661
<1662=1663
<1664=1665
<1666=1667
<1667=1677,1668
<1668=1675,1673,1671,1669
<1669=1670
<1671=1672
<1673=1674
<1675=1676
<1677=1678
<1679=1680
<1680=1690,1681
<1681=1688,1684,1682
<1682=1683
<1684=1685
<1685=1687,1686
<1688=1689
<1690=1691
<1692=1693
<1693=1701,1694
<1694=1699,1697,1695
<1695=1696
<1697=1698
<1699=1700
<1701=1702
<1703=1704
<1704=1714,1705
<1705=1712,1710,1708,1706
<1706=1707
<1708=1709
<1710=1711
<1712=1713
<1714=1715
<1716=1717
<1717=1729,1728,1718
<1718=1727,1719
<1719=1725,1720
<1720=1723,1721
<1721=1722
<1723=1724
<1725=1726
<1742=1745,1744,1743
<1745=1841,1828,1817,1804,1791,1780,1768,1759,1748,1746
<1746=1747
<1748=1749
<1749=1757,1750
<1750=1755,1753,1751
<1751=1752
<1753=1754
<1755=1756
<1757=1758
<1759=1760
<1760=1766,1761
<1761=1764,1762
<1762=1763
<1764=1765
<1766=1767
<1768=1769
<1769=1779,1778,1770
<1770=1777,1771
<1771=1775,1772
<1772=1773
<1773=1774
<1775=1776
<1780=1781
<1781=1789,1782
<1782=1787,1785,1783
<1783=1784
<1785=1786
<1787=1788
<1789=1790
<1791=1792
<1792=1802,1793
<1793=1800,1798,1796,1794
<1794=1795
<1796=1797
<1798=1799
<1800=1801
<1802=1803
<1804=1805
<1805=1815,1806
<1806=1813,1809,1807
<1807=1808
<1809=1810
<1810=1812,1811
<1813=1814
<1815=1816
<1817=1818
<1818=1826,1819
<1819=1824,1822,1820
<1820=1821
<1822=1823
<1824=1825
<1826=1827
<1828=1829
<1829=1839,1830
<1830=1837,1835,1833,1831
<1831=1832
<1833=1834
<1835=1836
<1837=1838
<1839=1840
<1841=1842
<1842=1854,1853,1843
<1843=1852,1844
<1844=1850,1845
<1845=1848,1846
<1846=1847
<1848=1849
<1850=1851
<1867=1870,1869,1868
<1870=1975,1962,1951,1938,1927,1916,1904,1895,1884,1873,1871
<1871=1872
<1873=1874
<1874=1882,1875
<1875=1880,1878,1876
<1876=1877
<1878=1879
<1880=1881
<1882=1883
<1884=1885
<1885=1893,1886
<1886=1891,1889,1887
<1887=1888
<1889=1890
<1891=1892
<1893=1894
<1895=1896
<1896=1902,1897
<1897=1900,1898
<1898=1899
<1900=1901
<1902=1903
<1904=1905
<1905=1915,1914,1906
<1906=1913,1907
<1907=1911,1908
<1908=1909
<1909=1910
<1911=1912
<1916=1917
<1917=1925,1918
<1918=1923,1921,1919
<1919=1920
<1921=1922
<1923=1924
<1925=1926
<1927=1928
<1928=1936,1929
<1929=1934,1932,1930
<1930=1931
<1932=1933
<1934=1935
<1936=1937
<1938=1939
<1939=1949,1940
<1940=1947,1945,1943,1941
<1941=1942
<1943=1944
<1945=1946
<1947=1948
<1949=1950
<1951=1952
<1952=1960,1953
<1953=1958,1956,1954
<1954=1955
<1956=1957
<1958=1959
<1960=1961
<1962=1963
<1963=1973,1964
<1964=1971,1969,1967,1965
<1965=1966
<1967=1968
<1969=1970
<1971=1972
<1973=1974
<1975=1976
<1976=1988,1987,1977
<1977=1986,1978
<1978=1984,1979
<1979=1982,1980
<1980=1981
<1982=1983
<1984=1985
