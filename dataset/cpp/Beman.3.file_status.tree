>5	FunctionDef	print_boost_macros ()
>6	ParameterList	 
>7	ReturnType	void
>8	CompoundStatement	 
>9	Statement	 
>10	Statement	 
>11	Statement	 
>12	Statement	 
>13	Statement	 
>14	Statement	 
>15	Statement	 
>16	Statement	 
>17	Statement	 
>18	Statement	 
>19	Statement	 
>20	Statement	 
>21	Statement	 
>22	Statement	 
>23	Statement	 
>24	Statement	 
>25	Statement	 
>26	Statement	 
>27	Statement	 
>28	Statement	 
>29	Statement	 
>30	Statement	 
>31	Statement	 
>32	Statement	 
>33	Statement	 
>34	Statement	 
>35	Statement	 
>36	Statement	 
>37	Statement	 
>38	Statement	 
>39	Statement	 
>45	FunctionDef	show_status (file_status s , boost 
>46	ParameterList	file_status s , boost 
>47	Parameter	 
>48	Identifier	ec
>49	ParameterType	boost 
>50	Parameter	 
>51	Identifier	s
>52	ParameterType	file_status
>53	ReturnType	void
>54	CompoundStatement	 
>55	ExpressionStatement	 
>56	ShiftExpression	cout << \"is_symlink(s) is \" << ( is_symlink ( s ) ? \"true\" 
>57	ShiftExpression	\"is_symlink(s) is \" << ( is_symlink ( s ) ? \"true\" 
>58	ShiftExpression	( is_symlink ( s ) ? \"true\" 
>59	PrimaryExpression	\"\n\"
>60	ConditionalExpression	is_symlink ( s ) ? \"true\" 
>61	PrimaryExpression	\"false\"
>62	PrimaryExpression	\"true\"
>63	Condition	is_symlink ( s )
>64	CallExpression	is_symlink ( s )
>65	ArgumentList	s
>66	Argument	s
>67	Identifier	s
>68	Callee	is_symlink
>69	Identifier	is_symlink
>70	PrimaryExpression	\"is_symlink(s) is \"
>71	Identifier	cout
>72	ExpressionStatement	 
>73	ShiftExpression	cout << \"is_other(s) is \" << ( is_other ( s ) ? \"true\" 
>74	ShiftExpression	\"is_other(s) is \" << ( is_other ( s ) ? \"true\" 
>75	ShiftExpression	( is_other ( s ) ? \"true\" 
>76	PrimaryExpression	\"\n\"
>77	ConditionalExpression	is_other ( s ) ? \"true\" 
>78	PrimaryExpression	\"false\"
>79	PrimaryExpression	\"true\"
>80	Condition	is_other ( s )
>81	CallExpression	is_other ( s )
>82	ArgumentList	s
>83	Argument	s
>84	Identifier	s
>85	Callee	is_other
>86	Identifier	is_other
>87	PrimaryExpression	\"is_other(s) is \"
>88	Identifier	cout
>89	ExpressionStatement	 
>90	ShiftExpression	cout << \"is_directory(s) is \" << ( is_directory ( s ) ? \"true\" 
>91	ShiftExpression	\"is_directory(s) is \" << ( is_directory ( s ) ? \"true\" 
>92	ShiftExpression	( is_directory ( s ) ? \"true\" 
>93	PrimaryExpression	\"\n\"
>94	ConditionalExpression	is_directory ( s ) ? \"true\" 
>95	PrimaryExpression	\"false\"
>96	PrimaryExpression	\"true\"
>97	Condition	is_directory ( s )
>98	CallExpression	is_directory ( s )
>99	ArgumentList	s
>100	Argument	s
>101	Identifier	s
>102	Callee	is_directory
>103	Identifier	is_directory
>104	PrimaryExpression	\"is_directory(s) is \"
>105	Identifier	cout
>106	ExpressionStatement	 
>107	ShiftExpression	cout << \"is_regular_file(s) is \" << ( is_regular_file ( s ) ? \"true\" 
>108	ShiftExpression	\"is_regular_file(s) is \" << ( is_regular_file ( s ) ? \"true\" 
>109	ShiftExpression	( is_regular_file ( s ) ? \"true\" 
>110	PrimaryExpression	\"\n\"
>111	ConditionalExpression	is_regular_file ( s ) ? \"true\" 
>112	PrimaryExpression	\"false\"
>113	PrimaryExpression	\"true\"
>114	Condition	is_regular_file ( s )
>115	CallExpression	is_regular_file ( s )
>116	ArgumentList	s
>117	Argument	s
>118	Identifier	s
>119	Callee	is_regular_file
>120	Identifier	is_regular_file
>121	PrimaryExpression	\"is_regular_file(s) is \"
>122	Identifier	cout
>123	ExpressionStatement	 
>124	ShiftExpression	cout << \"status_known(s) is \" << ( status_known ( s ) ? \"true\" 
>125	ShiftExpression	\"status_known(s) is \" << ( status_known ( s ) ? \"true\" 
>126	ShiftExpression	( status_known ( s ) ? \"true\" 
>127	PrimaryExpression	\"\n\"
>128	ConditionalExpression	status_known ( s ) ? \"true\" 
>129	PrimaryExpression	\"false\"
>130	PrimaryExpression	\"true\"
>131	Condition	status_known ( s )
>132	CallExpression	status_known ( s )
>133	ArgumentList	s
>134	Argument	s
>135	Identifier	s
>136	Callee	status_known
>137	Identifier	status_known
>138	PrimaryExpression	\"status_known(s) is \"
>139	Identifier	cout
>140	ExpressionStatement	 
>141	ShiftExpression	cout << \"exists(s) is \" << ( exists ( s ) ? \"true\" 
>142	ShiftExpression	\"exists(s) is \" << ( exists ( s ) ? \"true\" 
>143	ShiftExpression	( exists ( s ) ? \"true\" 
>144	PrimaryExpression	\"\n\"
>145	ConditionalExpression	exists ( s ) ? \"true\" 
>146	PrimaryExpression	\"false\"
>147	PrimaryExpression	\"true\"
>148	Condition	exists ( s )
>149	CallExpression	exists ( s )
>150	ArgumentList	s
>151	Argument	s
>152	Identifier	s
>153	Callee	exists
>154	Identifier	exists
>155	PrimaryExpression	\"exists(s) is \"
>156	Identifier	cout
>157	ExpressionStatement	 
>158	RelationalExpression	cout << \"s.type() is \" << static_cast < int > ( s . type ( ) ) << \", which is defined as \\"\" << file_\
>159	RelationalExpression	int > ( s . type ( ) ) << \", which is defined as \\"\" << file_type_c_str ( s . type ( ) ) << \"\\"\n\"
>160	ShiftExpression	( s . type ( ) ) << \", which is defined as \\"\" << file_type_c_str ( s . type ( ) ) << \"\\"\n\"
>161	ShiftExpression	\", which is defined as \\"\" << file_type_c_str ( s . type ( ) ) << \"\\"\n\"
>162	ShiftExpression	file_type_c_str ( s . type ( ) ) << \"\\"\n\"
>163	PrimaryExpression	\"\\"\n\"
>164	CallExpression	file_type_c_str ( s . type ( ) )
>165	ArgumentList	s . type ( )
>166	Argument	s . type ( )
>167	CallExpression	s . type ( )
>168	ArgumentList	 
>169	Callee	s . type
>170	MemberAccess	s . type
>171	Identifier	type
>172	Identifier	s
>173	Callee	file_type_c_str
>174	Identifier	file_type_c_str
>175	PrimaryExpression	\", which is defined as \\"\"
>176	CallExpression	s . type ( )
>177	ArgumentList	 
>178	Callee	s . type
>179	MemberAccess	s . type
>180	Identifier	type
>181	Identifier	s
>182	Identifier	int
>183	ShiftExpression	cout << \"s.type() is \" << static_cast
>184	ShiftExpression	\"s.type() is \" << static_cast
>185	Identifier	static_cast
>186	PrimaryExpression	\"s.type() is \"
>187	Identifier	cout
>188	IfStatement	if ( ec )
>189	ElseStatement	else
>190	ExpressionStatement	 
>191	ShiftExpression	cout << \"clears ec.\n\"
>192	PrimaryExpression	\"clears ec.\n\"
>193	Identifier	cout
>194	CompoundStatement	 
>195	ExpressionStatement	 
>196	ShiftExpression	cout << \"sets ec to indicate an error
>197	ShiftExpression	\"sets ec to indicate an error
>198	ShiftExpression	\"   ec.value() is \" << ec . value ( ) << '\n' << \"   ec.message() is \\"\" << ec . message ( ) << \"\\"\n\" << \"   \
>199	ShiftExpression	ec . value ( ) << '\n' << \"   ec.message() is \\"\" << ec . message ( ) << \"\\"\n\" << \"   ec.default_error_\
>200	ShiftExpression	'\n' << \"   ec.message() is \\"\" << ec . message ( ) << \"\\"\n\" << \"   ec.default_error_condition().value() \
>201	ShiftExpression	\"   ec.message() is \\"\" << ec . message ( ) << \"\\"\n\" << \"   ec.default_error_condition().value() is \" << \
>202	ShiftExpression	ec . message ( ) << \"\\"\n\" << \"   ec.default_error_condition().value() is \" << econd . value ( ) << '\n' << \"   \
>203	ShiftExpression	\"\\"\n\" << \"   ec.default_error_condition().value() is \" << econd . value ( ) << '\n' << \"   ec.default_\
>204	ShiftExpression	\"   ec.default_error_condition().value() is \" << econd . value ( ) << '\n' << \"   ec.default_error_condition()\
>205	ShiftExpression	econd . value ( ) << '\n' << \"   ec.default_error_condition().message() is \\"\" << econd . message ( ) << \"\\"\n\"\
>206	ShiftExpression	'\n' << \"   ec.default_error_condition().message() is \\"\" << econd . message ( ) << \"\\"\n\"
>207	ShiftExpression	\"   ec.default_error_condition().message() is \\"\" << econd . message ( ) << \"\\"\n\"
>208	ShiftExpression	econd . message ( ) << \"\\"\n\"
>209	PrimaryExpression	\"\\"\n\"
>210	CallExpression	econd . message ( )
>211	ArgumentList	 
>212	Callee	econd . message
>213	MemberAccess	econd . message
>214	Identifier	message
>215	Identifier	econd
>216	PrimaryExpression	\"   ec.default_error_condition().message() is \\"\"
>217	PrimaryExpression	'\n'
>218	CallExpression	econd . value ( )
>219	ArgumentList	 
>220	Callee	econd . value
>221	MemberAccess	econd . value
>222	Identifier	value
>223	Identifier	econd
>224	PrimaryExpression	\"   ec.default_error_condition().value() is \"
>225	PrimaryExpression	\"\\"\n\"
>226	CallExpression	ec . message ( )
>227	ArgumentList	 
>228	Callee	ec . message
>229	MemberAccess	ec . message
>230	Identifier	message
>231	Identifier	ec
>232	PrimaryExpression	\"   ec.message() is \\"\"
>233	PrimaryExpression	'\n'
>234	CallExpression	ec . value ( )
>235	ArgumentList	 
>236	Callee	ec . value
>237	MemberAccess	ec . value
>238	Identifier	value
>239	Identifier	ec
>240	PrimaryExpression	\"   ec.value() is \"
>241	PrimaryExpression	\"sets ec to indicate an error
>242	Identifier	cout
>243	ExpressionStatement	 
>244	AssignmentExpr	econd = ec . default_error_condition ( )
>245	CallExpression	ec . default_error_condition ( )
>246	ArgumentList	 
>247	Callee	ec . default_error_condition
>248	MemberAccess	ec . default_error_condition
>249	Identifier	default_error_condition
>250	Identifier	ec
>251	Identifier	econd
>252	Condition	 
>253	Identifier	ec
>254	IdentifierDeclStatement	 
>255	IdentifierDecl	econd
>256	Identifier	econd
>257	IdentifierDeclType	boost 
>272	FunctionDef	try_exists ()
>273	ParameterList	 
>274	ReturnType	void
>275	CompoundStatement	 
>276	BlockStarter	 
>277	CompoundStatement	 
>278	ExpressionStatement	cout << \"throws a filesystem_error exception
>279	ShiftExpression	cout << \"throws a filesystem_error exception
>280	ShiftExpression	\"throws a filesystem_error exception
>281	ShiftExpression	ex . what ( ) << \"\n\"
>282	PrimaryExpression	\"\n\"
>283	CallExpression	ex . what ( )
>284	ArgumentList	 
>285	Callee	ex . what
>286	MemberAccess	ex . what
>287	Identifier	what
>288	Identifier	ex
>289	PrimaryExpression	\"throws a filesystem_error exception
>290	Identifier	cout
>291	Identifier	ex
>292	BlockStarter	 
>293	CompoundStatement	 
>294	ExpressionStatement	cout << \"is \" << ( result ? \"true\" 
>295	ShiftExpression	cout << \"is \" << ( result ? \"true\" 
>296	ShiftExpression	\"is \" << ( result ? \"true\" 
>297	ShiftExpression	( result ? \"true\" 
>298	PrimaryExpression	\"\n\"
>299	ConditionalExpression	result ? \"true\" 
>300	PrimaryExpression	\"false\"
>301	PrimaryExpression	\"true\"
>302	Condition	result
>303	Identifier	result
>304	PrimaryExpression	\"is \"
>305	Identifier	cout
>306	IdentifierDeclStatement	bool result = exists ( p ) ;
>307	IdentifierDecl	result = exists ( p )
>308	AssignmentExpr	result = exists ( p )
>309	CallExpression	exists ( p )
>310	ArgumentList	p
>311	Argument	p
>312	Identifier	p
>313	Callee	exists
>314	Identifier	exists
>315	Identifier	result
>316	Identifier	result
>317	IdentifierDeclType	bool
>318	ExpressionStatement	 
>319	ShiftExpression	cout << \"\nexists(\" << p << \") \"
>320	ShiftExpression	\"\nexists(\" << p << \") \"
>321	ShiftExpression	p << \") \"
>322	PrimaryExpression	\") \"
>323	Identifier	p
>324	PrimaryExpression	\"\nexists(\"
>325	Identifier	cout
>333	FunctionDef	cpp_main (int argc , char * argv [ ])
>334	ParameterList	int argc , char * argv [ ]
>335	Parameter	 
>336	Identifier	argv
>337	ParameterType	char * [ ]
>338	Parameter	 
>339	Identifier	argc
>340	ParameterType	int
>341	ReturnType	int
>342	CompoundStatement	 
>343	ReturnStatement	 
>344	PrimaryExpression	0
>345	ExpressionStatement	 
>346	CallExpression	try_exists ( )
>347	ArgumentList	 
>348	Callee	try_exists
>349	Identifier	try_exists
>350	ExpressionStatement	 
>351	CallExpression	show_status ( s , ec )
>352	ArgumentList	s
>353	Argument	ec
>354	Identifier	ec
>355	Argument	s
>356	Identifier	s
>357	Callee	show_status
>358	Identifier	show_status
>359	ExpressionStatement	 
>360	ShiftExpression	cout << \"\nfile_status s = symlink_status(\" << p << \", ec) \"
>361	ShiftExpression	\"\nfile_status s = symlink_status(\" << p << \", ec) \"
>362	ShiftExpression	p << \", ec) \"
>363	PrimaryExpression	\", ec) \"
>364	Identifier	p
>365	PrimaryExpression	\"\nfile_status s = symlink_status(\"
>366	Identifier	cout
>367	ExpressionStatement	 
>368	AssignmentExpr	s = symlink_status ( p , ec )
>369	CallExpression	symlink_status ( p , ec )
>370	ArgumentList	p
>371	Argument	ec
>372	Identifier	ec
>373	Argument	p
>374	Identifier	p
>375	Callee	symlink_status
>376	Identifier	symlink_status
>377	Identifier	s
>378	ExpressionStatement	 
>379	CallExpression	show_status ( s , ec )
>380	ArgumentList	s
>381	Argument	ec
>382	Identifier	ec
>383	Argument	s
>384	Identifier	s
>385	Callee	show_status
>386	Identifier	show_status
>387	ExpressionStatement	 
>388	ShiftExpression	cout << \"\nfile_status s = status(\" << p << \", ec) \"
>389	ShiftExpression	\"\nfile_status s = status(\" << p << \", ec) \"
>390	ShiftExpression	p << \", ec) \"
>391	PrimaryExpression	\", ec) \"
>392	Identifier	p
>393	PrimaryExpression	\"\nfile_status s = status(\"
>394	Identifier	cout
>395	IdentifierDeclStatement	 
>396	IdentifierDecl	s = status ( p , ec )
>397	AssignmentExpr	s = status ( p , ec )
>398	CallExpression	status ( p , ec )
>399	ArgumentList	p
>400	Argument	ec
>401	Identifier	ec
>402	Argument	p
>403	Identifier	p
>404	Callee	status
>405	Identifier	status
>406	Identifier	s
>407	Identifier	s
>408	IdentifierDeclType	file_status
>409	IdentifierDeclStatement	 
>410	IdentifierDecl	ec
>411	Identifier	ec
>412	IdentifierDeclType	boost 
>413	IfStatement	if ( argc < 2 )
>414	ElseStatement	else
>415	ExpressionStatement	 
>416	AssignmentExpr	p = argv [ 1 ]
>417	ArrayIndexing	argv [ 1 ]
>418	PrimaryExpression	1
>419	Identifier	argv
>420	Identifier	p
>421	CompoundStatement	 
>422	ExpressionStatement	 
>423	AssignmentExpr	p = argv [ 0 ]
>424	ArrayIndexing	argv [ 0 ]
>425	PrimaryExpression	0
>426	Identifier	argv
>427	Identifier	p
>428	ExpressionStatement	 
>429	ShiftExpression	std 
>430	PrimaryExpression	\"Usage
>431	Identifier	std 
>432	Condition	 
>433	RelationalExpression	argc < 2
>434	PrimaryExpression	2
>435	Identifier	argc
>436	ExpressionStatement	 
>437	CallExpression	print_boost_macros ( )
>438	ArgumentList	 
>439	Callee	print_boost_macros
>440	Identifier	print_boost_macros
<5=8,7,6
<8=39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9
<45=54,53,46
<46=50,47
<47=49,48
<50=52,51
<54=254,188,157,140,123,106,89,72,55
<55=56
<56=71,57
<57=70,58
<58=60,59
<60=63,62,61
<63=64
<64=68,65
<65=66
<66=67
<68=69
<72=73
<73=88,74
<74=87,75
<75=77,76
<77=80,79,78
<80=81
<81=85,82
<82=83
<83=84
<85=86
<89=90
<90=105,91
<91=104,92
<92=94,93
<94=97,96,95
<97=98
<98=102,99
<99=100
<100=101
<102=103
<106=107
<107=122,108
<108=121,109
<109=111,110
<111=114,113,112
<114=115
<115=119,116
<116=117
<117=118
<119=120
<123=124
<124=139,125
<125=138,126
<126=128,127
<128=131,130,129
<131=132
<132=136,133
<133=134
<134=135
<136=137
<140=141
<141=156,142
<142=155,143
<143=145,144
<145=148,147,146
<148=149
<149=153,150
<150=151
<151=152
<153=154
<157=158
<158=183,159
<159=182,160
<160=176,161
<161=175,162
<162=164,163
<164=173,165
<165=166
<166=167
<167=169,168
<169=170
<170=172,171
<173=174
<176=178,177
<178=179
<179=181,180
<183=187,184
<184=186,185
<188=252,194,189
<189=190
<190=191
<191=193,192
<194=243,195
<195=196
<196=242,197
<197=241,198
<198=240,199
<199=234,200
<200=233,201
<201=232,202
<202=226,203
<203=225,204
<204=224,205
<205=218,206
<206=217,207
<207=216,208
<208=210,209
<210=212,211
<212=213
<213=215,214
<218=220,219
<220=221
<221=223,222
<226=228,227
<228=229
<229=231,230
<234=236,235
<236=237
<237=239,238
<243=244
<244=251,245
<245=247,246
<247=248
<248=250,249
<252=253
<254=255
<255=257,256
<272=275,274,273
<275=318,292,276
<276=291,277
<277=278
<278=279
<279=290,280
<280=289,281
<281=283,282
<283=285,284
<285=286
<286=288,287
<292=293
<293=306,294
<294=295
<295=305,296
<296=304,297
<297=299,298
<299=302,301,300
<302=303
<306=307
<307=317,316,308
<308=315,309
<309=313,310
<310=311
<311=312
<313=314
<318=319
<319=325,320
<320=324,321
<321=323,322
<333=342,341,334
<334=338,335
<335=337,336
<338=340,339
<342=436,413,409,395,387,378,367,359,350,345,343
<343=344
<345=346
<346=348,347
<348=349
<350=351
<351=357,352
<352=355,353
<353=354
<355=356
<357=358
<359=360
<360=366,361
<361=365,362
<362=364,363
<367=368
<368=377,369
<369=375,370
<370=373,371
<371=372
<373=374
<375=376
<378=379
<379=385,380
<380=383,381
<381=382
<383=384
<385=386
<387=388
<388=394,389
<389=393,390
<390=392,391
<395=396
<396=408,407,397
<397=406,398
<398=404,399
<399=402,400
<400=401
<402=403
<404=405
<409=410
<410=412,411
<413=432,421,414
<414=415
<415=416
<416=420,417
<417=419,418
<421=428,422
<422=423
<423=427,424
<424=426,425
<428=429
<429=431,430
<432=433
<433=435,434
<436=437
<437=439,438
<439=440
