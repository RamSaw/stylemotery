>3	FunctionDef	StreamWatch 
>4	ParameterList	QtSpeech * & speech , QWidget * parent
>5	Parameter	 
>6	Identifier	parent
>7	ParameterType	QWidget *
>8	Parameter	 
>9	Identifier	speech
>10	ParameterType	QtSpeech * &
>11	CompoundStatement	 
>12	ExpressionStatement	 
>13	CallExpression	reauth ( )
>14	ArgumentList	 
>15	Callee	reauth
>16	Identifier	reauth
>17	ExpressionStatement	 
>18	Statement	 
>19	CompoundStatement	 
>20	ExpressionStatement	 
>21	CallExpression	repl -> deleteLater ( )
>22	ArgumentList	 
>23	Callee	repl -> deleteLater
>24	PtrMemberAccess	repl -> deleteLater
>25	Identifier	deleteLater
>26	Identifier	repl
>27	Statement	 
>28	Statement	 
>29	Statement	 
>30	Statement	 
>31	Statement	 
>32	Statement	 
>33	Statement	 
>34	Statement	 
>35	Statement	 
>36	Statement	 
>37	Statement	 
>38	Statement	 
>39	Statement	 
>40	Statement	 
>41	Statement	 
>42	Statement	 
>43	ExpressionStatement	 
>44	CallExpression	connect ( streamLine , SIGNAL ( returnPressed ( ) ) , this , SLOT ( reauth ( ) ) )
>45	ArgumentList	streamLine
>46	Argument	SLOT ( reauth ( ) )
>47	CallExpression	SLOT ( reauth ( ) )
>48	ArgumentList	reauth ( )
>49	Argument	reauth ( )
>50	CallExpression	reauth ( )
>51	ArgumentList	 
>52	Callee	reauth
>53	Identifier	reauth
>54	Callee	SLOT
>55	Identifier	SLOT
>56	Argument	this
>57	Identifier	this
>58	Argument	SIGNAL ( returnPressed ( ) )
>59	CallExpression	SIGNAL ( returnPressed ( ) )
>60	ArgumentList	returnPressed ( )
>61	Argument	returnPressed ( )
>62	CallExpression	returnPressed ( )
>63	ArgumentList	 
>64	Callee	returnPressed
>65	Identifier	returnPressed
>66	Callee	SIGNAL
>67	Identifier	SIGNAL
>68	Argument	streamLine
>69	Identifier	streamLine
>70	Callee	connect
>71	Identifier	connect
>72	ExpressionStatement	 
>73	AssignmentExpr	wasDown = false
>74	Identifier	false
>75	Identifier	wasDown
>76	ExpressionStatement	 
>77	AssignmentExpr	haveToken = false
>78	Identifier	false
>79	Identifier	haveToken
>80	ExpressionStatement	 
>81	CallExpression	connect ( retryTimer , SIGNAL ( timeout ( ) ) , this , SLOT ( reauth ( ) ) )
>82	ArgumentList	retryTimer
>83	Argument	SLOT ( reauth ( ) )
>84	CallExpression	SLOT ( reauth ( ) )
>85	ArgumentList	reauth ( )
>86	Argument	reauth ( )
>87	CallExpression	reauth ( )
>88	ArgumentList	 
>89	Callee	reauth
>90	Identifier	reauth
>91	Callee	SLOT
>92	Identifier	SLOT
>93	Argument	this
>94	Identifier	this
>95	Argument	SIGNAL ( timeout ( ) )
>96	CallExpression	SIGNAL ( timeout ( ) )
>97	ArgumentList	timeout ( )
>98	Argument	timeout ( )
>99	CallExpression	timeout ( )
>100	ArgumentList	 
>101	Callee	timeout
>102	Identifier	timeout
>103	Callee	SIGNAL
>104	Identifier	SIGNAL
>105	Argument	retryTimer
>106	Identifier	retryTimer
>107	Callee	connect
>108	Identifier	connect
>109	ExpressionStatement	 
>110	CallExpression	connect ( reauthTimer , SIGNAL ( timeout ( ) ) , this , SLOT ( reauth ( ) ) )
>111	ArgumentList	reauthTimer
>112	Argument	SLOT ( reauth ( ) )
>113	CallExpression	SLOT ( reauth ( ) )
>114	ArgumentList	reauth ( )
>115	Argument	reauth ( )
>116	CallExpression	reauth ( )
>117	ArgumentList	 
>118	Callee	reauth
>119	Identifier	reauth
>120	Callee	SLOT
>121	Identifier	SLOT
>122	Argument	this
>123	Identifier	this
>124	Argument	SIGNAL ( timeout ( ) )
>125	CallExpression	SIGNAL ( timeout ( ) )
>126	ArgumentList	timeout ( )
>127	Argument	timeout ( )
>128	CallExpression	timeout ( )
>129	ArgumentList	 
>130	Callee	timeout
>131	Identifier	timeout
>132	Callee	SIGNAL
>133	Identifier	SIGNAL
>134	Argument	reauthTimer
>135	Identifier	reauthTimer
>136	Callee	connect
>137	Identifier	connect
>138	ExpressionStatement	 
>139	CallExpression	retryTimer -> setSingleShot ( true )
>140	ArgumentList	true
>141	Argument	true
>142	Identifier	true
>143	Callee	retryTimer -> setSingleShot
>144	PtrMemberAccess	retryTimer -> setSingleShot
>145	Identifier	setSingleShot
>146	Identifier	retryTimer
>147	ExpressionStatement	 
>148	CallExpression	retryTimer -> setInterval ( 30000 )
>149	ArgumentList	30000
>150	Argument	30000
>151	PrimaryExpression	30000
>152	Callee	retryTimer -> setInterval
>153	PtrMemberAccess	retryTimer -> setInterval
>154	Identifier	setInterval
>155	Identifier	retryTimer
>156	ExpressionStatement	 
>157	AssignmentExpr	retryTimer = new QTimer ( this )
>158	Identifier	this
>159	Identifier	retryTimer
>160	ExpressionStatement	 
>161	CallExpression	reauthTimer -> start ( )
>162	ArgumentList	 
>163	Callee	reauthTimer -> start
>164	PtrMemberAccess	reauthTimer -> start
>165	Identifier	start
>166	Identifier	reauthTimer
>167	ExpressionStatement	 
>168	CallExpression	reauthTimer -> setSingleShot ( false )
>169	ArgumentList	false
>170	Argument	false
>171	Identifier	false
>172	Callee	reauthTimer -> setSingleShot
>173	PtrMemberAccess	reauthTimer -> setSingleShot
>174	Identifier	setSingleShot
>175	Identifier	reauthTimer
>176	ExpressionStatement	 
>177	CallExpression	reauthTimer -> setInterval ( 30000 )
>178	ArgumentList	30000
>179	Argument	30000
>180	PrimaryExpression	30000
>181	Callee	reauthTimer -> setInterval
>182	PtrMemberAccess	reauthTimer -> setInterval
>183	Identifier	setInterval
>184	Identifier	reauthTimer
>185	IdentifierDeclStatement	 
>186	IdentifierDecl	* reauthTimer = new QTimer ( this )
>187	AssignmentExpr	* reauthTimer = new QTimer ( this )
>188	Identifier	this
>189	Identifier	this
>190	Identifier	reauthTimer
>191	IdentifierDeclType	QTimer *
>192	ExpressionStatement	 
>193	AssignmentExpr	nam = new QNetworkAccessManager ( this )
>194	Identifier	this
>195	Identifier	nam
>196	ExpressionStatement	 
>197	CallExpression	lay -> addWidget ( shutUpBox )
>198	ArgumentList	shutUpBox
>199	Argument	shutUpBox
>200	Identifier	shutUpBox
>201	Callee	lay -> addWidget
>202	PtrMemberAccess	lay -> addWidget
>203	Identifier	addWidget
>204	Identifier	lay
>205	ExpressionStatement	 
>206	CallExpression	lay -> addWidget ( textEdit )
>207	ArgumentList	textEdit
>208	Argument	textEdit
>209	Identifier	textEdit
>210	Callee	lay -> addWidget
>211	PtrMemberAccess	lay -> addWidget
>212	Identifier	addWidget
>213	Identifier	lay
>214	ExpressionStatement	 
>215	CallExpression	lay -> addWidget ( streamLine )
>216	ArgumentList	streamLine
>217	Argument	streamLine
>218	Identifier	streamLine
>219	Callee	lay -> addWidget
>220	PtrMemberAccess	lay -> addWidget
>221	Identifier	addWidget
>222	Identifier	lay
>223	IdentifierDeclStatement	 
>224	IdentifierDecl	* lay = new QVBoxLayout ( this )
>225	AssignmentExpr	* lay = new QVBoxLayout ( this )
>226	Identifier	this
>227	Identifier	this
>228	Identifier	lay
>229	IdentifierDeclType	QVBoxLayout *
>230	ExpressionStatement	 
>231	CallExpression	streamLine -> setText ( \"runnerguy2489\" )
>232	ArgumentList	\"runnerguy2489\"
>233	Argument	\"runnerguy2489\"
>234	PrimaryExpression	\"runnerguy2489\"
>235	Callee	streamLine -> setText
>236	PtrMemberAccess	streamLine -> setText
>237	Identifier	setText
>238	Identifier	streamLine
>239	ExpressionStatement	 
>240	CallExpression	shutUpBox -> setText ( \"Shut up\" )
>241	ArgumentList	\"Shut up\"
>242	Argument	\"Shut up\"
>243	PrimaryExpression	\"Shut up\"
>244	Callee	shutUpBox -> setText
>245	PtrMemberAccess	shutUpBox -> setText
>246	Identifier	setText
>247	Identifier	shutUpBox
>248	ExpressionStatement	 
>249	CallExpression	textEdit -> setReadOnly ( true )
>250	ArgumentList	true
>251	Argument	true
>252	Identifier	true
>253	Callee	textEdit -> setReadOnly
>254	PtrMemberAccess	textEdit -> setReadOnly
>255	Identifier	setReadOnly
>256	Identifier	textEdit
>257	ExpressionStatement	 
>258	AssignmentExpr	shutUpBox = new QCheckBox ( this )
>259	Identifier	this
>260	Identifier	shutUpBox
>261	ExpressionStatement	 
>262	AssignmentExpr	textEdit = new QTextEdit ( this )
>263	Identifier	this
>264	Identifier	textEdit
>265	ExpressionStatement	 
>266	AssignmentExpr	streamLine = new QLineEdit ( this )
>267	Identifier	this
>268	Identifier	streamLine
>292	FunctionDef	StreamWatch 
>293	ParameterList	 
>294	ReturnType	void
>295	CompoundStatement	 
>296	ExpressionStatement	 
>297	CallExpression	textEdit -> setText ( \"Reauthing
>298	ArgumentList	\"Reauthing
>299	Argument	\"Reauthing
>300	AdditiveExpression	\"Reauthing
>301	Identifier	url
>302	PrimaryExpression	\"Reauthing
>303	Callee	textEdit -> setText
>304	PtrMemberAccess	textEdit -> setText
>305	Identifier	setText
>306	Identifier	textEdit
>307	ExpressionStatement	 
>308	Statement	 
>309	CompoundStatement	 
>310	ExpressionStatement	 
>311	CallExpression	tokenReply ( reply )
>312	ArgumentList	reply
>313	Argument	reply
>314	Identifier	reply
>315	Callee	tokenReply
>316	Identifier	tokenReply
>317	Statement	 
>318	Statement	 
>319	Statement	 
>320	Statement	 
>321	Statement	 
>322	Statement	 
>323	Statement	 
>324	Statement	 
>325	Statement	 
>326	Statement	 
>327	Statement	 
>328	Statement	 
>329	Statement	 
>330	Statement	 
>331	Statement	 
>332	Statement	 
>333	Statement	 
>334	Statement	 
>335	IdentifierDeclStatement	 
>336	IdentifierDecl	* reply = nam -> get ( req )
>337	AssignmentExpr	* reply = nam -> get ( req )
>338	CallExpression	nam -> get ( req )
>339	ArgumentList	req
>340	Argument	req
>341	Identifier	req
>342	Callee	nam -> get
>343	PtrMemberAccess	nam -> get
>344	Identifier	get
>345	Identifier	nam
>346	Identifier	reply
>347	Identifier	reply
>348	IdentifierDeclType	QNetworkReply *
>349	ExpressionStatement	 
>350	CallExpression	req . setUrl ( url )
>351	ArgumentList	url
>352	Argument	url
>353	Identifier	url
>354	Callee	req . setUrl
>355	MemberAccess	req . setUrl
>356	Identifier	setUrl
>357	Identifier	req
>358	IdentifierDeclStatement	 
>359	IdentifierDecl	url = QString ( \"http
>360	AssignmentExpr	url = QString ( \"http
>361	CallExpression	QString ( \"http
>362	ArgumentList	streamLine -> text ( )
>363	Argument	streamLine -> text ( )
>364	CallExpression	streamLine -> text ( )
>365	ArgumentList	 
>366	Callee	streamLine -> text
>367	PtrMemberAccess	streamLine -> text
>368	Identifier	text
>369	Identifier	streamLine
>370	Callee	QString ( \"http
>371	MemberAccess	QString ( \"http
>372	Identifier	arg
>373	CallExpression	QString ( \"http
>374	ArgumentList	\"http
>375	Argument	\"http
>376	PrimaryExpression	\"http
>377	Callee	QString
>378	Identifier	QString
>379	Identifier	url
>380	Identifier	url
>381	IdentifierDeclType	QString
>382	IdentifierDeclStatement	 
>383	IdentifierDecl	req
>384	Identifier	req
>385	IdentifierDeclType	QNetworkRequest
>386	ExpressionStatement	 
>387	CallExpression	streamLine -> setText ( streamLine -> text ( ) . toLower ( ) )
>388	ArgumentList	streamLine -> text ( ) . toLower ( )
>389	Argument	streamLine -> text ( ) . toLower ( )
>390	CallExpression	streamLine -> text ( ) . toLower ( )
>391	ArgumentList	 
>392	Callee	streamLine -> text ( ) . toLower
>393	MemberAccess	streamLine -> text ( ) . toLower
>394	Identifier	toLower
>395	CallExpression	streamLine -> text ( )
>396	ArgumentList	 
>397	Callee	streamLine -> text
>398	PtrMemberAccess	streamLine -> text
>399	Identifier	text
>400	Identifier	streamLine
>401	Callee	streamLine -> setText
>402	PtrMemberAccess	streamLine -> setText
>403	Identifier	setText
>404	Identifier	streamLine
>421	FunctionDef	StreamWatch 
>422	ParameterList	QNetworkReply * reply
>423	Parameter	 
>424	Identifier	reply
>425	ParameterType	QNetworkReply *
>426	ReturnType	void
>427	CompoundStatement	 
>428	ExpressionStatement	 
>429	CallExpression	textEdit -> setText ( \"Requested usher
>430	ArgumentList	\"Requested usher
>431	Argument	\"Requested usher
>432	AdditiveExpression	\"Requested usher
>433	CallExpression	url . toString ( )
>434	ArgumentList	 
>435	Callee	url . toString
>436	MemberAccess	url . toString
>437	Identifier	toString
>438	Identifier	url
>439	PrimaryExpression	\"Requested usher
>440	Callee	textEdit -> setText
>441	PtrMemberAccess	textEdit -> setText
>442	Identifier	setText
>443	Identifier	textEdit
>444	ExpressionStatement	 
>445	Statement	 
>446	CompoundStatement	 
>447	ExpressionStatement	 
>448	CallExpression	usherReply ( reply )
>449	ArgumentList	reply
>450	Argument	reply
>451	Identifier	reply
>452	Callee	usherReply
>453	Identifier	usherReply
>454	Statement	 
>455	Statement	 
>456	Statement	 
>457	Statement	 
>458	Statement	 
>459	Statement	 
>460	Statement	 
>461	Statement	 
>462	Statement	 
>463	Statement	 
>464	Statement	 
>465	Statement	 
>466	Statement	 
>467	Statement	 
>468	Statement	 
>469	Statement	 
>470	Statement	 
>471	Statement	 
>472	ExpressionStatement	 
>473	AssignmentExpr	reply = nam -> get ( req )
>474	CallExpression	nam -> get ( req )
>475	ArgumentList	req
>476	Argument	req
>477	Identifier	req
>478	Callee	nam -> get
>479	PtrMemberAccess	nam -> get
>480	Identifier	get
>481	Identifier	nam
>482	Identifier	reply
>483	ExpressionStatement	 
>484	CallExpression	req . setUrl ( url )
>485	ArgumentList	url
>486	Argument	url
>487	Identifier	url
>488	Callee	req . setUrl
>489	MemberAccess	req . setUrl
>490	Identifier	setUrl
>491	Identifier	req
>492	ExpressionStatement	 
>493	CallExpression	url . setQuery ( qry )
>494	ArgumentList	qry
>495	Argument	qry
>496	Identifier	qry
>497	Callee	url . setQuery
>498	MemberAccess	url . setQuery
>499	Identifier	setQuery
>500	Identifier	url
>501	ExpressionStatement	 
>502	CallExpression	qry . addQueryItem ( \"allow_source\" , \"true\" )
>503	ArgumentList	\"allow_source\"
>504	Argument	\"true\"
>505	PrimaryExpression	\"true\"
>506	Argument	\"allow_source\"
>507	PrimaryExpression	\"allow_source\"
>508	Callee	qry . addQueryItem
>509	MemberAccess	qry . addQueryItem
>510	Identifier	addQueryItem
>511	Identifier	qry
>512	ExpressionStatement	 
>513	CallExpression	qry . addQueryItem ( \"nauth\" , token )
>514	ArgumentList	\"nauth\"
>515	Argument	token
>516	Identifier	token
>517	Argument	\"nauth\"
>518	PrimaryExpression	\"nauth\"
>519	Callee	qry . addQueryItem
>520	MemberAccess	qry . addQueryItem
>521	Identifier	addQueryItem
>522	Identifier	qry
>523	ExpressionStatement	 
>524	CallExpression	qry . addQueryItem ( \"nauthsig\" , sig )
>525	ArgumentList	\"nauthsig\"
>526	Argument	sig
>527	Identifier	sig
>528	Argument	\"nauthsig\"
>529	PrimaryExpression	\"nauthsig\"
>530	Callee	qry . addQueryItem
>531	MemberAccess	qry . addQueryItem
>532	Identifier	addQueryItem
>533	Identifier	qry
>534	IdentifierDeclStatement	 
>535	IdentifierDecl	qry
>536	Identifier	qry
>537	IdentifierDeclType	QUrlQuery
>538	IdentifierDeclStatement	 
>539	IdentifierDecl	url = QString ( \"http
>540	AssignmentExpr	url = QString ( \"http
>541	CallExpression	QString ( \"http
>542	ArgumentList	streamLine -> text ( )
>543	Argument	streamLine -> text ( )
>544	CallExpression	streamLine -> text ( )
>545	ArgumentList	 
>546	Callee	streamLine -> text
>547	PtrMemberAccess	streamLine -> text
>548	Identifier	text
>549	Identifier	streamLine
>550	Callee	QString ( \"http
>551	MemberAccess	QString ( \"http
>552	Identifier	arg
>553	CallExpression	QString ( \"http
>554	ArgumentList	\"http
>555	Argument	\"http
>556	PrimaryExpression	\"http
>557	Callee	QString
>558	Identifier	QString
>559	Identifier	url
>560	Identifier	url
>561	IdentifierDeclType	QUrl
>562	IdentifierDeclStatement	 
>563	IdentifierDecl	req
>564	Identifier	req
>565	IdentifierDeclType	QNetworkRequest
>566	IfStatement	if ( ! newToken . isEmpty ( ) && ! newSig . isEmpty ( ) )
>567	ElseStatement	else
>568	CompoundStatement	 
>569	ReturnStatement	 
>570	ExpressionStatement	 
>571	CallExpression	randomError ( )
>572	ArgumentList	 
>573	Callee	randomError
>574	Identifier	randomError
>575	ExpressionStatement	 
>576	CallExpression	textEdit -> setText ( \"New info is empty!\" )
>577	ArgumentList	\"New info is empty!\"
>578	Argument	\"New info is empty!\"
>579	PrimaryExpression	\"New info is empty!\"
>580	Callee	textEdit -> setText
>581	PtrMemberAccess	textEdit -> setText
>582	Identifier	setText
>583	Identifier	textEdit
>584	CompoundStatement	 
>585	ExpressionStatement	 
>586	AssignmentExpr	haveToken = true
>587	Identifier	true
>588	Identifier	haveToken
>589	ExpressionStatement	 
>590	AssignmentExpr	sig = newSig
>591	Identifier	newSig
>592	Identifier	sig
>593	ExpressionStatement	 
>594	AssignmentExpr	token = newToken
>595	Identifier	newToken
>596	Identifier	token
>597	Condition	 
>598	AndExpression	! newToken . isEmpty ( ) && ! newSig . isEmpty ( )
>599	UnaryOp	! newSig . isEmpty ( )
>600	CallExpression	newSig . isEmpty ( )
>601	ArgumentList	 
>602	Callee	newSig . isEmpty
>603	MemberAccess	newSig . isEmpty
>604	Identifier	isEmpty
>605	Identifier	newSig
>606	UnaryOperator	!
>607	UnaryOp	! newToken . isEmpty ( )
>608	CallExpression	newToken . isEmpty ( )
>609	ArgumentList	 
>610	Callee	newToken . isEmpty
>611	MemberAccess	newToken . isEmpty
>612	Identifier	isEmpty
>613	Identifier	newToken
>614	UnaryOperator	!
>615	IdentifierDeclStatement	 
>616	IdentifierDecl	newSig = doc . object ( ) . value ( \"sig\" ) . toString ( )
>617	AssignmentExpr	newSig = doc . object ( ) . value ( \"sig\" ) . toString ( )
>618	CallExpression	doc . object ( ) . value ( \"sig\" ) . toString ( )
>619	ArgumentList	 
>620	Callee	doc . object ( ) . value ( \"sig\" ) . toString
>621	MemberAccess	doc . object ( ) . value ( \"sig\" ) . toString
>622	Identifier	toString
>623	CallExpression	doc . object ( ) . value ( \"sig\" )
>624	ArgumentList	\"sig\"
>625	Argument	\"sig\"
>626	PrimaryExpression	\"sig\"
>627	Callee	doc . object ( ) . value
>628	MemberAccess	doc . object ( ) . value
>629	Identifier	value
>630	CallExpression	doc . object ( )
>631	ArgumentList	 
>632	Callee	doc . object
>633	MemberAccess	doc . object
>634	Identifier	object
>635	Identifier	doc
>636	Identifier	newSig
>637	Identifier	newSig
>638	IdentifierDeclType	QString
>639	IdentifierDeclStatement	 
>640	IdentifierDecl	newToken = doc . object ( ) . value ( \"token\" ) . toString ( )
>641	AssignmentExpr	newToken = doc . object ( ) . value ( \"token\" ) . toString ( )
>642	CallExpression	doc . object ( ) . value ( \"token\" ) . toString ( )
>643	ArgumentList	 
>644	Callee	doc . object ( ) . value ( \"token\" ) . toString
>645	MemberAccess	doc . object ( ) . value ( \"token\" ) . toString
>646	Identifier	toString
>647	CallExpression	doc . object ( ) . value ( \"token\" )
>648	ArgumentList	\"token\"
>649	Argument	\"token\"
>650	PrimaryExpression	\"token\"
>651	Callee	doc . object ( ) . value
>652	MemberAccess	doc . object ( ) . value
>653	Identifier	value
>654	CallExpression	doc . object ( )
>655	ArgumentList	 
>656	Callee	doc . object
>657	MemberAccess	doc . object
>658	Identifier	object
>659	Identifier	doc
>660	Identifier	newToken
>661	Identifier	newToken
>662	IdentifierDeclType	QString
>663	IfStatement	if ( err . error != QJsonParseError 
>664	CompoundStatement	 
>665	ReturnStatement	 
>666	ExpressionStatement	 
>667	CallExpression	randomError ( )
>668	ArgumentList	 
>669	Callee	randomError
>670	Identifier	randomError
>671	ExpressionStatement	 
>672	CallExpression	retryTimer -> start ( )
>673	ArgumentList	 
>674	Callee	retryTimer -> start
>675	PtrMemberAccess	retryTimer -> start
>676	Identifier	start
>677	Identifier	retryTimer
>678	ExpressionStatement	 
>679	ShiftExpression	qDebug ( ) << \"Json parsing failed
>680	ShiftExpression	\"Json parsing failed
>681	CallExpression	err . errorString ( )
>682	ArgumentList	 
>683	Callee	err . errorString
>684	MemberAccess	err . errorString
>685	Identifier	errorString
>686	Identifier	err
>687	PrimaryExpression	\"Json parsing failed
>688	CallExpression	qDebug ( )
>689	ArgumentList	 
>690	Callee	qDebug
>691	Identifier	qDebug
>692	Condition	 
>693	EqualityExpression	err . error != QJsonParseError 
>694	Identifier	QJsonParseError 
>695	MemberAccess	err . error
>696	Identifier	error
>697	Identifier	err
>698	IdentifierDeclStatement	 
>699	IdentifierDecl	doc = QJsonDocument 
>700	AssignmentExpr	doc = QJsonDocument 
>701	CallExpression	QJsonDocument 
>702	ArgumentList	data
>703	Argument	& err
>704	UnaryOp	& err
>705	Identifier	err
>706	UnaryOperator	&
>707	Argument	data
>708	Identifier	data
>709	Callee	QJsonDocument 
>710	Identifier	QJsonDocument 
>711	Identifier	doc
>712	Identifier	doc
>713	IdentifierDeclType	QJsonDocument
>714	IdentifierDeclStatement	 
>715	IdentifierDecl	err
>716	Identifier	err
>717	IdentifierDeclType	QJsonParseError
>718	IdentifierDeclStatement	 
>719	IdentifierDecl	data = reply -> readAll ( )
>720	AssignmentExpr	data = reply -> readAll ( )
>721	CallExpression	reply -> readAll ( )
>722	ArgumentList	 
>723	Callee	reply -> readAll
>724	PtrMemberAccess	reply -> readAll
>725	Identifier	readAll
>726	Identifier	reply
>727	Identifier	data
>728	Identifier	data
>729	IdentifierDeclType	QByteArray
>730	IfStatement	if ( code != 200 )
>731	CompoundStatement	 
>732	ReturnStatement	 
>733	ExpressionStatement	 
>734	CallExpression	randomError ( )
>735	ArgumentList	 
>736	Callee	randomError
>737	Identifier	randomError
>738	ExpressionStatement	 
>739	CallExpression	retryTimer -> start ( )
>740	ArgumentList	 
>741	Callee	retryTimer -> start
>742	PtrMemberAccess	retryTimer -> start
>743	Identifier	start
>744	Identifier	retryTimer
>745	ExpressionStatement	 
>746	ShiftExpression	qDebug ( ) << \"Get token failed
>747	ShiftExpression	\"Get token failed
>748	Identifier	code
>749	PrimaryExpression	\"Get token failed
>750	CallExpression	qDebug ( )
>751	ArgumentList	 
>752	Callee	qDebug
>753	Identifier	qDebug
>754	Condition	 
>755	EqualityExpression	code != 200
>756	PrimaryExpression	200
>757	Identifier	code
>758	IfStatement	if ( code >= 300 && code <= 310 )
>759	CompoundStatement	 
>760	ReturnStatement	 
>761	ExpressionStatement	 
>762	Statement	 
>763	CompoundStatement	 
>764	ExpressionStatement	 
>765	CallExpression	tokenReply ( reply )
>766	ArgumentList	reply
>767	Argument	reply
>768	Identifier	reply
>769	Callee	tokenReply
>770	Identifier	tokenReply
>771	Statement	 
>772	Statement	 
>773	Statement	 
>774	Statement	 
>775	Statement	 
>776	Statement	 
>777	Statement	 
>778	Statement	 
>779	Statement	 
>780	Statement	 
>781	Statement	 
>782	Statement	 
>783	Statement	 
>784	Statement	 
>785	Statement	 
>786	Statement	 
>787	Statement	 
>788	Statement	 
>789	IdentifierDeclStatement	 
>790	IdentifierDecl	* reply = nam -> get ( req )
>791	AssignmentExpr	* reply = nam -> get ( req )
>792	CallExpression	nam -> get ( req )
>793	ArgumentList	req
>794	Argument	req
>795	Identifier	req
>796	Callee	nam -> get
>797	PtrMemberAccess	nam -> get
>798	Identifier	get
>799	Identifier	nam
>800	Identifier	reply
>801	Identifier	reply
>802	IdentifierDeclType	QNetworkReply *
>803	IdentifierDeclStatement	 
>804	IdentifierDecl	req ( reply -> attribute ( QNetworkRequest 
>805	CallExpression	reply -> attribute ( QNetworkRequest 
>806	ArgumentList	 
>807	Callee	reply -> attribute ( QNetworkRequest 
>808	MemberAccess	reply -> attribute ( QNetworkRequest 
>809	Identifier	toString
>810	CallExpression	reply -> attribute ( QNetworkRequest 
>811	ArgumentList	QNetworkRequest 
>812	Argument	QNetworkRequest 
>813	Identifier	QNetworkRequest 
>814	Callee	reply -> attribute
>815	PtrMemberAccess	reply -> attribute
>816	Identifier	attribute
>817	Identifier	reply
>818	Identifier	req
>819	IdentifierDeclType	QNetworkRequest
>820	ExpressionStatement	 
>821	ShiftExpression	qDebug ( ) << \"Token redirected to\" << reply -> attribute ( QNetworkRequest 
>822	ShiftExpression	\"Token redirected to\" << reply -> attribute ( QNetworkRequest 
>823	CallExpression	reply -> attribute ( QNetworkRequest 
>824	ArgumentList	QNetworkRequest 
>825	Argument	QNetworkRequest 
>826	Identifier	QNetworkRequest 
>827	Callee	reply -> attribute
>828	PtrMemberAccess	reply -> attribute
>829	Identifier	attribute
>830	Identifier	reply
>831	PrimaryExpression	\"Token redirected to\"
>832	CallExpression	qDebug ( )
>833	ArgumentList	 
>834	Callee	qDebug
>835	Identifier	qDebug
>836	Condition	 
>837	AndExpression	code >= 300 && code <= 310
>838	RelationalExpression	code <= 310
>839	PrimaryExpression	310
>840	Identifier	code
>841	RelationalExpression	code >= 300
>842	PrimaryExpression	300
>843	Identifier	code
>844	IdentifierDeclStatement	 
>845	IdentifierDecl	code = reply -> attribute ( QNetworkRequest 
>846	AssignmentExpr	code = reply -> attribute ( QNetworkRequest 
>847	CallExpression	reply -> attribute ( QNetworkRequest 
>848	ArgumentList	 
>849	Callee	reply -> attribute ( QNetworkRequest 
>850	MemberAccess	reply -> attribute ( QNetworkRequest 
>851	Identifier	toInt
>852	CallExpression	reply -> attribute ( QNetworkRequest 
>853	ArgumentList	QNetworkRequest 
>854	Argument	QNetworkRequest 
>855	Identifier	QNetworkRequest 
>856	Callee	reply -> attribute
>857	PtrMemberAccess	reply -> attribute
>858	Identifier	attribute
>859	Identifier	reply
>860	Identifier	code
>861	Identifier	code
>862	IdentifierDeclType	int
>863	IfStatement	if ( reply -> error ( ) != QNetworkReply 
>864	CompoundStatement	 
>865	ReturnStatement	 
>866	ExpressionStatement	 
>867	CallExpression	retryTimer -> start ( )
>868	ArgumentList	 
>869	Callee	retryTimer -> start
>870	PtrMemberAccess	retryTimer -> start
>871	Identifier	start
>872	Identifier	retryTimer
>873	ExpressionStatement	 
>874	CallExpression	randomError ( )
>875	ArgumentList	 
>876	Callee	randomError
>877	Identifier	randomError
>878	ExpressionStatement	 
>879	CallExpression	textEdit -> setText ( \"token get error!\" )
>880	ArgumentList	\"token get error!\"
>881	Argument	\"token get error!\"
>882	PrimaryExpression	\"token get error!\"
>883	Callee	textEdit -> setText
>884	PtrMemberAccess	textEdit -> setText
>885	Identifier	setText
>886	Identifier	textEdit
>887	Condition	 
>888	EqualityExpression	reply -> error ( ) != QNetworkReply 
>889	Identifier	QNetworkReply 
>890	CallExpression	reply -> error ( )
>891	ArgumentList	 
>892	Callee	reply -> error
>893	PtrMemberAccess	reply -> error
>894	Identifier	error
>895	Identifier	reply
>942	FunctionDef	StreamWatch 
>943	ParameterList	QNetworkReply * reply
>944	Parameter	 
>945	Identifier	reply
>946	ParameterType	QNetworkReply *
>947	ReturnType	void
>948	CompoundStatement	 
>949	ExpressionStatement	 
>950	CallExpression	randomError ( )
>951	ArgumentList	 
>952	Callee	randomError
>953	Identifier	randomError
>954	ExpressionStatement	 
>955	CallExpression	retryTimer -> start ( )
>956	ArgumentList	 
>957	Callee	retryTimer -> start
>958	PtrMemberAccess	retryTimer -> start
>959	Identifier	start
>960	Identifier	retryTimer
>961	ExpressionStatement	 
>962	CallExpression	textEdit -> setText ( \"no channel found in m3u8, retrying in 30 seconds\" )
>963	ArgumentList	\"no channel found in m3u8, retrying in 30 seconds\"
>964	Argument	\"no channel found in m3u8, retrying in 30 seconds\"
>965	PrimaryExpression	\"no channel found in m3u8, retrying in 30 seconds\"
>966	Callee	textEdit -> setText
>967	PtrMemberAccess	textEdit -> setText
>968	Identifier	setText
>969	Identifier	textEdit
>970	CompoundStatement	 
>971	IfStatement	if ( tline . startsWith ( \"http\" ) )
>972	CompoundStatement	 
>973	ReturnStatement	 
>974	ExpressionStatement	 
>975	CallExpression	isOn ( )
>976	ArgumentList	 
>977	Callee	isOn
>978	Identifier	isOn
>979	ExpressionStatement	 
>980	CallExpression	textEdit -> setText ( m3u8 )
>981	ArgumentList	m3u8
>982	Argument	m3u8
>983	Identifier	m3u8
>984	Callee	textEdit -> setText
>985	PtrMemberAccess	textEdit -> setText
>986	Identifier	setText
>987	Identifier	textEdit
>988	Condition	 
>989	CallExpression	tline . startsWith ( \"http\" )
>990	ArgumentList	\"http\"
>991	Argument	\"http\"
>992	PrimaryExpression	\"http\"
>993	Callee	tline . startsWith
>994	MemberAccess	tline . startsWith
>995	Identifier	startsWith
>996	Identifier	tline
>997	IdentifierDeclStatement	 
>998	IdentifierDecl	tline = line . trimmed ( )
>999	AssignmentExpr	tline = line . trimmed ( )
>1000	CallExpression	line . trimmed ( )
>1001	ArgumentList	 
>1002	Callee	line . trimmed
>1003	MemberAccess	line . trimmed
>1004	Identifier	trimmed
>1005	Identifier	line
>1006	Identifier	tline
>1007	Identifier	tline
>1008	IdentifierDeclType	QString
>1009	Statement	 
>1010	Statement	 
>1011	Label	 
>1012	Identifier	line
>1013	Statement	 
>1014	Statement	 
>1015	Statement	 
>1016	Statement	 
>1017	Statement	 
>1018	IdentifierDeclStatement	 
>1019	IdentifierDecl	lines = m3u8 . split ( '\n' )
>1020	AssignmentExpr	lines = m3u8 . split ( '\n' )
>1021	CallExpression	m3u8 . split ( '\n' )
>1022	ArgumentList	'\n'
>1023	Argument	'\n'
>1024	PrimaryExpression	'\n'
>1025	Callee	m3u8 . split
>1026	MemberAccess	m3u8 . split
>1027	Identifier	split
>1028	Identifier	m3u8
>1029	Identifier	lines
>1030	Identifier	lines
>1031	IdentifierDeclType	QStringList
>1032	IfStatement	if ( m3u8 . trimmed ( ) == \"[]\" )
>1033	CompoundStatement	 
>1034	ReturnStatement	 
>1035	ExpressionStatement	 
>1036	CallExpression	retryTimer -> start ( )
>1037	ArgumentList	 
>1038	Callee	retryTimer -> start
>1039	PtrMemberAccess	retryTimer -> start
>1040	Identifier	start
>1041	Identifier	retryTimer
>1042	ExpressionStatement	 
>1043	CallExpression	isOff ( )
>1044	ArgumentList	 
>1045	Callee	isOff
>1046	Identifier	isOff
>1047	ExpressionStatement	 
>1048	CallExpression	textEdit -> setText ( \"m3u8 is empty, channel likely not live, retrying in 30 seconds\" )
>1049	ArgumentList	\"m3u8 is empty, channel likely not live, retrying in 30 seconds\"
>1050	Argument	\"m3u8 is empty, channel likely not live, retrying in 30 seconds\"
>1051	PrimaryExpression	\"m3u8 is empty, channel likely not live, retrying in 30 seconds\"
>1052	Callee	textEdit -> setText
>1053	PtrMemberAccess	textEdit -> setText
>1054	Identifier	setText
>1055	Identifier	textEdit
>1056	Condition	 
>1057	EqualityExpression	m3u8 . trimmed ( ) == \"[]\"
>1058	PrimaryExpression	\"[]\"
>1059	CallExpression	m3u8 . trimmed ( )
>1060	ArgumentList	 
>1061	Callee	m3u8 . trimmed
>1062	MemberAccess	m3u8 . trimmed
>1063	Identifier	trimmed
>1064	Identifier	m3u8
>1065	IdentifierDeclStatement	 
>1066	IdentifierDecl	m3u8 = QString 
>1067	AssignmentExpr	m3u8 = QString 
>1068	CallExpression	QString 
>1069	ArgumentList	reply -> readAll ( )
>1070	Argument	reply -> readAll ( )
>1071	CallExpression	reply -> readAll ( )
>1072	ArgumentList	 
>1073	Callee	reply -> readAll
>1074	PtrMemberAccess	reply -> readAll
>1075	Identifier	readAll
>1076	Identifier	reply
>1077	Callee	QString 
>1078	Identifier	QString 
>1079	Identifier	m3u8
>1080	Identifier	m3u8
>1081	IdentifierDeclType	QString
>1082	IfStatement	if ( code != 200 )
>1083	CompoundStatement	 
>1084	ReturnStatement	 
>1085	ExpressionStatement	 
>1086	CallExpression	randomError ( )
>1087	ArgumentList	 
>1088	Callee	randomError
>1089	Identifier	randomError
>1090	ExpressionStatement	 
>1091	CallExpression	retryTimer -> start ( )
>1092	ArgumentList	 
>1093	Callee	retryTimer -> start
>1094	PtrMemberAccess	retryTimer -> start
>1095	Identifier	start
>1096	Identifier	retryTimer
>1097	ExpressionStatement	 
>1098	CallExpression	textEdit -> setText ( \"Get usher failed
>1099	ArgumentList	\"Get usher failed
>1100	Argument	\"Get usher failed
>1101	AdditiveExpression	\"Get usher failed
>1102	Identifier	code
>1103	PrimaryExpression	\"Get usher failed
>1104	Callee	textEdit -> setText
>1105	PtrMemberAccess	textEdit -> setText
>1106	Identifier	setText
>1107	Identifier	textEdit
>1108	Condition	 
>1109	EqualityExpression	code != 200
>1110	PrimaryExpression	200
>1111	Identifier	code
>1112	IfStatement	if ( code >= 300 && code <= 310 )
>1113	CompoundStatement	 
>1114	ReturnStatement	 
>1115	ExpressionStatement	 
>1116	Statement	 
>1117	CompoundStatement	 
>1118	ExpressionStatement	 
>1119	CallExpression	usherReply ( reply )
>1120	ArgumentList	reply
>1121	Argument	reply
>1122	Identifier	reply
>1123	Callee	usherReply
>1124	Identifier	usherReply
>1125	Statement	 
>1126	Statement	 
>1127	Statement	 
>1128	Statement	 
>1129	Statement	 
>1130	Statement	 
>1131	Statement	 
>1132	Statement	 
>1133	Statement	 
>1134	Statement	 
>1135	Statement	 
>1136	Statement	 
>1137	Statement	 
>1138	Statement	 
>1139	Statement	 
>1140	Statement	 
>1141	Statement	 
>1142	Statement	 
>1143	IdentifierDeclStatement	 
>1144	IdentifierDecl	* reply = nam -> get ( req )
>1145	AssignmentExpr	* reply = nam -> get ( req )
>1146	CallExpression	nam -> get ( req )
>1147	ArgumentList	req
>1148	Argument	req
>1149	Identifier	req
>1150	Callee	nam -> get
>1151	PtrMemberAccess	nam -> get
>1152	Identifier	get
>1153	Identifier	nam
>1154	Identifier	reply
>1155	Identifier	reply
>1156	IdentifierDeclType	QNetworkReply *
>1157	IdentifierDeclStatement	 
>1158	IdentifierDecl	req ( reply -> attribute ( QNetworkRequest 
>1159	CallExpression	reply -> attribute ( QNetworkRequest 
>1160	ArgumentList	 
>1161	Callee	reply -> attribute ( QNetworkRequest 
>1162	MemberAccess	reply -> attribute ( QNetworkRequest 
>1163	Identifier	toString
>1164	CallExpression	reply -> attribute ( QNetworkRequest 
>1165	ArgumentList	QNetworkRequest 
>1166	Argument	QNetworkRequest 
>1167	Identifier	QNetworkRequest 
>1168	Callee	reply -> attribute
>1169	PtrMemberAccess	reply -> attribute
>1170	Identifier	attribute
>1171	Identifier	reply
>1172	Identifier	req
>1173	IdentifierDeclType	QNetworkRequest
>1174	ExpressionStatement	 
>1175	CallExpression	textEdit -> setText ( QString ( \"Usher redirected to\" ) + reply -> attribute ( QNetworkRequest 
>1176	ArgumentList	QString ( \"Usher redirected to\" ) + reply -> attribute ( QNetworkRequest 
>1177	Argument	QString ( \"Usher redirected to\" ) + reply -> attribute ( QNetworkRequest 
>1178	AdditiveExpression	QString ( \"Usher redirected to\" ) + reply -> attribute ( QNetworkRequest 
>1179	CallExpression	reply -> attribute ( QNetworkRequest 
>1180	ArgumentList	 
>1181	Callee	reply -> attribute ( QNetworkRequest 
>1182	MemberAccess	reply -> attribute ( QNetworkRequest 
>1183	Identifier	toString
>1184	CallExpression	reply -> attribute ( QNetworkRequest 
>1185	ArgumentList	QNetworkRequest 
>1186	Argument	QNetworkRequest 
>1187	Identifier	QNetworkRequest 
>1188	Callee	reply -> attribute
>1189	PtrMemberAccess	reply -> attribute
>1190	Identifier	attribute
>1191	Identifier	reply
>1192	CallExpression	QString ( \"Usher redirected to\" )
>1193	ArgumentList	\"Usher redirected to\"
>1194	Argument	\"Usher redirected to\"
>1195	PrimaryExpression	\"Usher redirected to\"
>1196	Callee	QString
>1197	Identifier	QString
>1198	Callee	textEdit -> setText
>1199	PtrMemberAccess	textEdit -> setText
>1200	Identifier	setText
>1201	Identifier	textEdit
>1202	Condition	 
>1203	AndExpression	code >= 300 && code <= 310
>1204	RelationalExpression	code <= 310
>1205	PrimaryExpression	310
>1206	Identifier	code
>1207	RelationalExpression	code >= 300
>1208	PrimaryExpression	300
>1209	Identifier	code
>1210	IdentifierDeclStatement	 
>1211	IdentifierDecl	code = reply -> attribute ( QNetworkRequest 
>1212	AssignmentExpr	code = reply -> attribute ( QNetworkRequest 
>1213	CallExpression	reply -> attribute ( QNetworkRequest 
>1214	ArgumentList	 
>1215	Callee	reply -> attribute ( QNetworkRequest 
>1216	MemberAccess	reply -> attribute ( QNetworkRequest 
>1217	Identifier	toInt
>1218	CallExpression	reply -> attribute ( QNetworkRequest 
>1219	ArgumentList	QNetworkRequest 
>1220	Argument	QNetworkRequest 
>1221	Identifier	QNetworkRequest 
>1222	Callee	reply -> attribute
>1223	PtrMemberAccess	reply -> attribute
>1224	Identifier	attribute
>1225	Identifier	reply
>1226	Identifier	code
>1227	Identifier	code
>1228	IdentifierDeclType	int
>1229	IfStatement	if ( reply -> error ( ) != QNetworkReply 
>1230	CompoundStatement	 
>1231	ReturnStatement	 
>1232	ExpressionStatement	 
>1233	CallExpression	randomError ( )
>1234	ArgumentList	 
>1235	Callee	randomError
>1236	Identifier	randomError
>1237	ExpressionStatement	 
>1238	CallExpression	retryTimer -> start ( )
>1239	ArgumentList	 
>1240	Callee	retryTimer -> start
>1241	PtrMemberAccess	retryTimer -> start
>1242	Identifier	start
>1243	Identifier	retryTimer
>1244	ExpressionStatement	 
>1245	CallExpression	textEdit -> setText ( \"usher get error!\" )
>1246	ArgumentList	\"usher get error!\"
>1247	Argument	\"usher get error!\"
>1248	PrimaryExpression	\"usher get error!\"
>1249	Callee	textEdit -> setText
>1250	PtrMemberAccess	textEdit -> setText
>1251	Identifier	setText
>1252	Identifier	textEdit
>1253	Condition	 
>1254	EqualityExpression	reply -> error ( ) != QNetworkReply 
>1255	Identifier	QNetworkReply 
>1256	CallExpression	reply -> error ( )
>1257	ArgumentList	 
>1258	Callee	reply -> error
>1259	PtrMemberAccess	reply -> error
>1260	Identifier	error
>1261	Identifier	reply
>1292	FunctionDef	StreamWatch 
>1293	ParameterList	 
>1294	ReturnType	void
>1295	CompoundStatement	 
>1296	ExpressionStatement	 
>1297	AssignmentExpr	wasDown = true
>1298	Identifier	true
>1299	Identifier	wasDown
>1300	ExpressionStatement	 
>1301	CallExpression	speech -> tell ( \"Error checking twitch stream status\" )
>1302	ArgumentList	\"Error checking twitch stream status\"
>1303	Argument	\"Error checking twitch stream status\"
>1304	PrimaryExpression	\"Error checking twitch stream status\"
>1305	Callee	speech -> tell
>1306	PtrMemberAccess	speech -> tell
>1307	Identifier	tell
>1308	Identifier	speech
>1309	IfStatement	if ( shutUpBox -> isChecked ( ) )
>1310	ReturnStatement	 
>1311	Condition	 
>1312	CallExpression	shutUpBox -> isChecked ( )
>1313	ArgumentList	 
>1314	Callee	shutUpBox -> isChecked
>1315	PtrMemberAccess	shutUpBox -> isChecked
>1316	Identifier	isChecked
>1317	Identifier	shutUpBox
>1327	FunctionDef	StreamWatch 
>1328	ParameterList	 
>1329	ReturnType	void
>1330	CompoundStatement	 
>1331	IfStatement	if ( wasDown )
>1332	CompoundStatement	 
>1333	ExpressionStatement	 
>1334	CallExpression	speech -> tell ( \"Twitch channel is online\" )
>1335	ArgumentList	\"Twitch channel is online\"
>1336	Argument	\"Twitch channel is online\"
>1337	PrimaryExpression	\"Twitch channel is online\"
>1338	Callee	speech -> tell
>1339	PtrMemberAccess	speech -> tell
>1340	Identifier	tell
>1341	Identifier	speech
>1342	ExpressionStatement	 
>1343	AssignmentExpr	wasDown = false
>1344	Identifier	false
>1345	Identifier	wasDown
>1346	Condition	 
>1347	Identifier	wasDown
>1348	IfStatement	if ( shutUpBox -> isChecked ( ) )
>1349	ReturnStatement	 
>1350	Condition	 
>1351	CallExpression	shutUpBox -> isChecked ( )
>1352	ArgumentList	 
>1353	Callee	shutUpBox -> isChecked
>1354	PtrMemberAccess	shutUpBox -> isChecked
>1355	Identifier	isChecked
>1356	Identifier	shutUpBox
>1366	FunctionDef	StreamWatch 
>1367	ParameterList	 
>1368	ReturnType	void
>1369	CompoundStatement	 
>1370	ExpressionStatement	 
>1371	AssignmentExpr	wasDown = true
>1372	Identifier	true
>1373	Identifier	wasDown
>1374	ExpressionStatement	 
>1375	CallExpression	speech -> tell ( \"Twitch channel appears to be offline!\" )
>1376	ArgumentList	\"Twitch channel appears to be offline!\"
>1377	Argument	\"Twitch channel appears to be offline!\"
>1378	PrimaryExpression	\"Twitch channel appears to be offline!\"
>1379	Callee	speech -> tell
>1380	PtrMemberAccess	speech -> tell
>1381	Identifier	tell
>1382	Identifier	speech
>1383	IfStatement	if ( shutUpBox -> isChecked ( ) )
>1384	ReturnStatement	 
>1385	Condition	 
>1386	CallExpression	shutUpBox -> isChecked ( )
>1387	ArgumentList	 
>1388	Callee	shutUpBox -> isChecked
>1389	PtrMemberAccess	shutUpBox -> isChecked
>1390	Identifier	isChecked
>1391	Identifier	shutUpBox
<3=11,4
<4=8,5
<5=7,6
<8=10,9
<11=265,261,257,248,239,230,223,214,205,196,192,185,176,167,160,156,147,138,109,80,76,72,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,19,18,17,12
<12=13
<13=15,14
<15=16
<19=20
<20=21
<21=23,22
<23=24
<24=26,25
<43=44
<44=70,45
<45=68,58,56,46
<46=47
<47=54,48
<48=49
<49=50
<50=52,51
<52=53
<54=55
<56=57
<58=59
<59=66,60
<60=61
<61=62
<62=64,63
<64=65
<66=67
<68=69
<70=71
<72=73
<73=75,74
<76=77
<77=79,78
<80=81
<81=107,82
<82=105,95,93,83
<83=84
<84=91,85
<85=86
<86=87
<87=89,88
<89=90
<91=92
<93=94
<95=96
<96=103,97
<97=98
<98=99
<99=101,100
<101=102
<103=104
<105=106
<107=108
<109=110
<110=136,111
<111=134,124,122,112
<112=113
<113=120,114
<114=115
<115=116
<116=118,117
<118=119
<120=121
<122=123
<124=125
<125=132,126
<126=127
<127=128
<128=130,129
<130=131
<132=133
<134=135
<136=137
<138=139
<139=143,140
<140=141
<141=142
<143=144
<144=146,145
<147=148
<148=152,149
<149=150
<150=151
<152=153
<153=155,154
<156=157
<157=159,158
<160=161
<161=163,162
<163=164
<164=166,165
<167=168
<168=172,169
<169=170
<170=171
<172=173
<173=175,174
<176=177
<177=181,178
<178=179
<179=180
<181=182
<182=184,183
<185=186
<186=191,190,187
<187=189,188
<192=193
<193=195,194
<196=197
<197=201,198
<198=199
<199=200
<201=202
<202=204,203
<205=206
<206=210,207
<207=208
<208=209
<210=211
<211=213,212
<214=215
<215=219,216
<216=217
<217=218
<219=220
<220=222,221
<223=224
<224=229,228,225
<225=227,226
<230=231
<231=235,232
<232=233
<233=234
<235=236
<236=238,237
<239=240
<240=244,241
<241=242
<242=243
<244=245
<245=247,246
<248=249
<249=253,250
<250=251
<251=252
<253=254
<254=256,255
<257=258
<258=260,259
<261=262
<262=264,263
<265=266
<266=268,267
<292=295,294,293
<295=386,382,358,349,335,334,333,332,331,330,329,328,327,326,325,324,323,322,321,320,319,318,317,309,308,307,296
<296=297
<297=303,298
<298=299
<299=300
<300=302,301
<303=304
<304=306,305
<309=310
<310=311
<311=315,312
<312=313
<313=314
<315=316
<335=336
<336=348,347,337
<337=346,338
<338=342,339
<339=340
<340=341
<342=343
<343=345,344
<349=350
<350=354,351
<351=352
<352=353
<354=355
<355=357,356
<358=359
<359=381,380,360
<360=379,361
<361=370,362
<362=363
<363=364
<364=366,365
<366=367
<367=369,368
<370=371
<371=373,372
<373=377,374
<374=375
<375=376
<377=378
<382=383
<383=385,384
<386=387
<387=401,388
<388=389
<389=390
<390=392,391
<392=393
<393=395,394
<395=397,396
<397=398
<398=400,399
<401=402
<402=404,403
<421=427,426,422
<422=423
<423=425,424
<427=863,844,758,730,718,714,698,663,639,615,566,562,538,534,523,512,501,492,483,472,471,470,469,468,467,466,465,464,463,462,461,460,459,458,457,456,455,454,446,445,444,428
<428=429
<429=440,430
<430=431
<431=432
<432=439,433
<433=435,434
<435=436
<436=438,437
<440=441
<441=443,442
<446=447
<447=448
<448=452,449
<449=450
<450=451
<452=453
<472=473
<473=482,474
<474=478,475
<475=476
<476=477
<478=479
<479=481,480
<483=484
<484=488,485
<485=486
<486=487
<488=489
<489=491,490
<492=493
<493=497,494
<494=495
<495=496
<497=498
<498=500,499
<501=502
<502=508,503
<503=506,504
<504=505
<506=507
<508=509
<509=511,510
<512=513
<513=519,514
<514=517,515
<515=516
<517=518
<519=520
<520=522,521
<523=524
<524=530,525
<525=528,526
<526=527
<528=529
<530=531
<531=533,532
<534=535
<535=537,536
<538=539
<539=561,560,540
<540=559,541
<541=550,542
<542=543
<543=544
<544=546,545
<546=547
<547=549,548
<550=551
<551=553,552
<553=557,554
<554=555
<555=556
<557=558
<562=563
<563=565,564
<566=597,584,567
<567=568
<568=575,570,569
<570=571
<571=573,572
<573=574
<575=576
<576=580,577
<577=578
<578=579
<580=581
<581=583,582
<584=593,589,585
<585=586
<586=588,587
<589=590
<590=592,591
<593=594
<594=596,595
<597=598
<598=607,599
<599=606,600
<600=602,601
<602=603
<603=605,604
<607=614,608
<608=610,609
<610=611
<611=613,612
<615=616
<616=638,637,617
<617=636,618
<618=620,619
<620=621
<621=623,622
<623=627,624
<624=625
<625=626
<627=628
<628=630,629
<630=632,631
<632=633
<633=635,634
<639=640
<640=662,661,641
<641=660,642
<642=644,643
<644=645
<645=647,646
<647=651,648
<648=649
<649=650
<651=652
<652=654,653
<654=656,655
<656=657
<657=659,658
<663=692,664
<664=678,671,666,665
<666=667
<667=669,668
<669=670
<671=672
<672=674,673
<674=675
<675=677,676
<678=679
<679=688,680
<680=687,681
<681=683,682
<683=684
<684=686,685
<688=690,689
<690=691
<692=693
<693=695,694
<695=697,696
<698=699
<699=713,712,700
<700=711,701
<701=709,702
<702=707,703
<703=704
<704=706,705
<707=708
<709=710
<714=715
<715=717,716
<718=719
<719=729,728,720
<720=727,721
<721=723,722
<723=724
<724=726,725
<730=754,731
<731=745,738,733,732
<733=734
<734=736,735
<736=737
<738=739
<739=741,740
<741=742
<742=744,743
<745=746
<746=750,747
<747=749,748
<750=752,751
<752=753
<754=755
<755=757,756
<758=836,759
<759=820,803,789,788,787,786,785,784,783,782,781,780,779,778,777,776,775,774,773,772,771,763,762,761,760
<763=764
<764=765
<765=769,766
<766=767
<767=768
<769=770
<789=790
<790=802,801,791
<791=800,792
<792=796,793
<793=794
<794=795
<796=797
<797=799,798
<803=804
<804=819,818,805
<805=807,806
<807=808
<808=810,809
<810=814,811
<811=812
<812=813
<814=815
<815=817,816
<820=821
<821=832,822
<822=831,823
<823=827,824
<824=825
<825=826
<827=828
<828=830,829
<832=834,833
<834=835
<836=837
<837=841,838
<838=840,839
<841=843,842
<844=845
<845=862,861,846
<846=860,847
<847=849,848
<849=850
<850=852,851
<852=856,853
<853=854
<854=855
<856=857
<857=859,858
<863=887,864
<864=878,873,866,865
<866=867
<867=869,868
<869=870
<870=872,871
<873=874
<874=876,875
<876=877
<878=879
<879=883,880
<880=881
<881=882
<883=884
<884=886,885
<887=888
<888=890,889
<890=892,891
<892=893
<893=895,894
<942=948,947,943
<943=944
<944=946,945
<948=1229,1210,1112,1082,1065,1032,1018,1017,1016,1015,1014,1013,1011,1010,1009,970,961,954,949
<949=950
<950=952,951
<952=953
<954=955
<955=957,956
<957=958
<958=960,959
<961=962
<962=966,963
<963=964
<964=965
<966=967
<967=969,968
<970=997,971
<971=988,972
<972=979,974,973
<974=975
<975=977,976
<977=978
<979=980
<980=984,981
<981=982
<982=983
<984=985
<985=987,986
<988=989
<989=993,990
<990=991
<991=992
<993=994
<994=996,995
<997=998
<998=1008,1007,999
<999=1006,1000
<1000=1002,1001
<1002=1003
<1003=1005,1004
<1011=1012
<1018=1019
<1019=1031,1030,1020
<1020=1029,1021
<1021=1025,1022
<1022=1023
<1023=1024
<1025=1026
<1026=1028,1027
<1032=1056,1033
<1033=1047,1042,1035,1034
<1035=1036
<1036=1038,1037
<1038=1039
<1039=1041,1040
<1042=1043
<1043=1045,1044
<1045=1046
<1047=1048
<1048=1052,1049
<1049=1050
<1050=1051
<1052=1053
<1053=1055,1054
<1056=1057
<1057=1059,1058
<1059=1061,1060
<1061=1062
<1062=1064,1063
<1065=1066
<1066=1081,1080,1067
<1067=1079,1068
<1068=1077,1069
<1069=1070
<1070=1071
<1071=1073,1072
<1073=1074
<1074=1076,1075
<1077=1078
<1082=1108,1083
<1083=1097,1090,1085,1084
<1085=1086
<1086=1088,1087
<1088=1089
<1090=1091
<1091=1093,1092
<1093=1094
<1094=1096,1095
<1097=1098
<1098=1104,1099
<1099=1100
<1100=1101
<1101=1103,1102
<1104=1105
<1105=1107,1106
<1108=1109
<1109=1111,1110
<1112=1202,1113
<1113=1174,1157,1143,1142,1141,1140,1139,1138,1137,1136,1135,1134,1133,1132,1131,1130,1129,1128,1127,1126,1125,1117,1116,1115,1114
<1117=1118
<1118=1119
<1119=1123,1120
<1120=1121
<1121=1122
<1123=1124
<1143=1144
<1144=1156,1155,1145
<1145=1154,1146
<1146=1150,1147
<1147=1148
<1148=1149
<1150=1151
<1151=1153,1152
<1157=1158
<1158=1173,1172,1159
<1159=1161,1160
<1161=1162
<1162=1164,1163
<1164=1168,1165
<1165=1166
<1166=1167
<1168=1169
<1169=1171,1170
<1174=1175
<1175=1198,1176
<1176=1177
<1177=1178
<1178=1192,1179
<1179=1181,1180
<1181=1182
<1182=1184,1183
<1184=1188,1185
<1185=1186
<1186=1187
<1188=1189
<1189=1191,1190
<1192=1196,1193
<1193=1194
<1194=1195
<1196=1197
<1198=1199
<1199=1201,1200
<1202=1203
<1203=1207,1204
<1204=1206,1205
<1207=1209,1208
<1210=1211
<1211=1228,1227,1212
<1212=1226,1213
<1213=1215,1214
<1215=1216
<1216=1218,1217
<1218=1222,1219
<1219=1220
<1220=1221
<1222=1223
<1223=1225,1224
<1229=1253,1230
<1230=1244,1237,1232,1231
<1232=1233
<1233=1235,1234
<1235=1236
<1237=1238
<1238=1240,1239
<1240=1241
<1241=1243,1242
<1244=1245
<1245=1249,1246
<1246=1247
<1247=1248
<1249=1250
<1250=1252,1251
<1253=1254
<1254=1256,1255
<1256=1258,1257
<1258=1259
<1259=1261,1260
<1292=1295,1294,1293
<1295=1309,1300,1296
<1296=1297
<1297=1299,1298
<1300=1301
<1301=1305,1302
<1302=1303
<1303=1304
<1305=1306
<1306=1308,1307
<1309=1311,1310
<1311=1312
<1312=1314,1313
<1314=1315
<1315=1317,1316
<1327=1330,1329,1328
<1330=1348,1331
<1331=1346,1332
<1332=1342,1333
<1333=1334
<1334=1338,1335
<1335=1336
<1336=1337
<1338=1339
<1339=1341,1340
<1342=1343
<1343=1345,1344
<1346=1347
<1348=1350,1349
<1350=1351
<1351=1353,1352
<1353=1354
<1354=1356,1355
<1366=1369,1368,1367
<1369=1383,1374,1370
<1370=1371
<1371=1373,1372
<1374=1375
<1375=1379,1376
<1376=1377
<1377=1378
<1379=1380
<1380=1382,1381
<1383=1385,1384
<1385=1386
<1386=1388,1387
<1388=1389
<1389=1391,1390
