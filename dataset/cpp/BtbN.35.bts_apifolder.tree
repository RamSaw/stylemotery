>8	FunctionDef	BtsApiFolder 
>9	ParameterList	QObject * parent
>10	Parameter	 
>11	Identifier	parent
>12	ParameterType	QObject *
>13	CompoundStatement	 
>14	ExpressionStatement	 
>15	AssignmentExpr	p = new BtsApiFolder_private ( )
>16	UnaryExpression	new BtsApiFolder_private ( )
>17	Identifier	p
>23	FunctionDef	BtsApiFolder 
>24	ParameterList	BtsApi * api , QObject * parent
>25	Parameter	 
>26	Identifier	parent
>27	ParameterType	QObject *
>28	Parameter	 
>29	Identifier	api
>30	ParameterType	BtsApi *
>31	CompoundStatement	 
>32	ExpressionStatement	 
>33	CallExpression	setApi ( api )
>34	ArgumentList	api
>35	Argument	api
>36	Identifier	api
>37	Callee	setApi
>38	Identifier	setApi
>39	ExpressionStatement	 
>40	AssignmentExpr	p = new BtsApiFolder_private ( )
>41	UnaryExpression	new BtsApiFolder_private ( )
>42	Identifier	p
>49	FunctionDef	BtsApiFolder 
>50	ParameterList	const QString & secret , QObject * parent
>51	Parameter	 
>52	Identifier	parent
>53	ParameterType	QObject *
>54	Parameter	 
>55	Identifier	secret
>56	ParameterType	const QString &
>57	CompoundStatement	 
>58	ExpressionStatement	 
>59	AssignmentExpr	p -> watchedSecret = secret
>60	Identifier	secret
>61	PtrMemberAccess	p -> watchedSecret
>62	Identifier	watchedSecret
>63	Identifier	p
>64	ExpressionStatement	 
>65	AssignmentExpr	p = new BtsApiFolder_private ( )
>66	UnaryExpression	new BtsApiFolder_private ( )
>67	Identifier	p
>76	FunctionDef	BtsApiFolder 
>77	ParameterList	BtsApi * api , const QString & secret , QObject * parent
>78	Parameter	 
>79	Identifier	parent
>80	ParameterType	QObject *
>81	Parameter	 
>82	Identifier	secret
>83	ParameterType	const QString &
>84	Parameter	 
>85	Identifier	api
>86	ParameterType	BtsApi *
>87	CompoundStatement	 
>88	ExpressionStatement	 
>89	CallExpression	setApi ( api )
>90	ArgumentList	api
>91	Argument	api
>92	Identifier	api
>93	Callee	setApi
>94	Identifier	setApi
>95	ExpressionStatement	 
>96	AssignmentExpr	p -> watchedSecret = secret
>97	Identifier	secret
>98	PtrMemberAccess	p -> watchedSecret
>99	Identifier	watchedSecret
>100	Identifier	p
>101	ExpressionStatement	 
>102	AssignmentExpr	p = new BtsApiFolder_private ( )
>103	UnaryExpression	new BtsApiFolder_private ( )
>104	Identifier	p
>114	FunctionDef	BtsApiFolder 
>115	ParameterList	 
>116	CompoundStatement	 
>117	ExpressionStatement	 
>118	Identifier	p
>119	Statement	 
>123	FunctionDef	BtsApiFolder 
>124	ParameterList	BtsApi * api
>125	Parameter	 
>126	Identifier	api
>127	ParameterType	BtsApi *
>128	ReturnType	void
>129	CompoundStatement	 
>130	ExpressionStatement	 
>131	AssignmentExpr	p -> api = api
>132	Identifier	api
>133	PtrMemberAccess	p -> api
>134	Identifier	api
>135	Identifier	p
>143	FunctionDef	BtsApiFolder 
>144	ParameterList	 
>145	ReturnType	BtsApi *
>146	CompoundStatement	 
>147	ReturnStatement	 
>148	PtrMemberAccess	p -> api
>149	Identifier	api
>150	Identifier	p
>157	FunctionDef	BtsApiFolder 
>158	ParameterList	const QString & secret
>159	Parameter	 
>160	Identifier	secret
>161	ParameterType	const QString &
>162	ReturnType	void
>163	CompoundStatement	 
>164	ExpressionStatement	 
>165	AssignmentExpr	p -> watchedSecret = secret
>166	Identifier	secret
>167	PtrMemberAccess	p -> watchedSecret
>168	Identifier	watchedSecret
>169	Identifier	p
>177	FunctionDef	BtsApiFolder 
>178	ParameterList	 
>179	ReturnType	QString
>180	CompoundStatement	 
>181	ReturnStatement	 
>182	PtrMemberAccess	p -> watchedSecret
>183	Identifier	watchedSecret
>184	Identifier	p
>191	FunctionDef	assertApi (BtsApiFolder_private * p)
>192	ParameterList	BtsApiFolder_private * p
>193	Parameter	 
>194	Identifier	p
>195	ParameterType	BtsApiFolder_private *
>196	ReturnType	static void
>197	CompoundStatement	 
>198	ExpressionStatement	 
>199	CallExpression	BtsException ( \"tried to perform folder action without a secret\" )
>200	ArgumentList	\"tried to perform folder action without a secret\"
>201	Argument	\"tried to perform folder action without a secret\"
>202	PrimaryExpression	\"tried to perform folder action without a secret\"
>203	Callee	BtsException
>204	Identifier	BtsException
>205	IfStatement	if ( p -> watchedSecret . isEmpty ( ) )
>206	Statement	 
>207	Condition	 
>208	CallExpression	p -> watchedSecret . isEmpty ( )
>209	ArgumentList	 
>210	Callee	p -> watchedSecret . isEmpty
>211	MemberAccess	p -> watchedSecret . isEmpty
>212	Identifier	isEmpty
>213	PtrMemberAccess	p -> watchedSecret
>214	Identifier	watchedSecret
>215	Identifier	p
>216	ExpressionStatement	 
>217	CallExpression	BtsException ( \"tried to perform folder action on null BtsApi\" )
>218	ArgumentList	\"tried to perform folder action on null BtsApi\"
>219	Argument	\"tried to perform folder action on null BtsApi\"
>220	PrimaryExpression	\"tried to perform folder action on null BtsApi\"
>221	Callee	BtsException
>222	Identifier	BtsException
>223	IfStatement	if ( p -> api . isNull ( ) )
>224	Statement	 
>225	Condition	 
>226	CallExpression	p -> api . isNull ( )
>227	ArgumentList	 
>228	Callee	p -> api . isNull
>229	MemberAccess	p -> api . isNull
>230	Identifier	isNull
>231	PtrMemberAccess	p -> api
>232	Identifier	api
>233	Identifier	p
>243	FunctionDef	BtsApiFolder 
>244	ParameterList	 
>245	ReturnType	BtsApiNotifier *
>246	CompoundStatement	 
>247	ReturnStatement	 
>248	Identifier	res
>249	ExpressionStatement	 
>250	CallExpression	connect ( res , & BtsApiNotifier 
>251	ArgumentList	res
>252	Argument	& BtsApiFolder 
>253	UnaryOp	& BtsApiFolder 
>254	Identifier	BtsApiFolder 
>255	UnaryOperator	&
>256	Argument	this
>257	Identifier	this
>258	Argument	& BtsApiNotifier 
>259	UnaryOp	& BtsApiNotifier 
>260	Identifier	BtsApiNotifier 
>261	UnaryOperator	&
>262	Argument	res
>263	Identifier	res
>264	Callee	connect
>265	Identifier	connect
>266	ExpressionStatement	 
>267	CallExpression	connect ( res , & BtsApiNotifier 
>268	ArgumentList	res
>269	Argument	& BtsApiFolder 
>270	UnaryOp	& BtsApiFolder 
>271	Identifier	BtsApiFolder 
>272	UnaryOperator	&
>273	Argument	this
>274	Identifier	this
>275	Argument	& BtsApiNotifier 
>276	UnaryOp	& BtsApiNotifier 
>277	Identifier	BtsApiNotifier 
>278	UnaryOperator	&
>279	Argument	res
>280	Identifier	res
>281	Callee	connect
>282	Identifier	connect
>283	IdentifierDeclStatement	 
>284	IdentifierDecl	* res = p -> api -> getFolders ( p -> watchedSecret )
>285	AssignmentExpr	* res = p -> api -> getFolders ( p -> watchedSecret )
>286	CallExpression	p -> api -> getFolders ( p -> watchedSecret )
>287	ArgumentList	p -> watchedSecret
>288	Argument	p -> watchedSecret
>289	PtrMemberAccess	p -> watchedSecret
>290	Identifier	watchedSecret
>291	Identifier	p
>292	Callee	p -> api -> getFolders
>293	PtrMemberAccess	p -> api -> getFolders
>294	Identifier	getFolders
>295	PtrMemberAccess	p -> api
>296	Identifier	api
>297	Identifier	p
>298	Identifier	res
>299	Identifier	res
>300	IdentifierDeclType	BtsApiNotifier *
>301	ExpressionStatement	 
>302	CallExpression	assertApi ( p )
>303	ArgumentList	p
>304	Argument	p
>305	Identifier	p
>306	Callee	assertApi
>307	Identifier	assertApi
>324	FunctionDef	BtsApiFolder 
>325	ParameterList	 
>326	ReturnType	BtsApiNotifier *
>327	CompoundStatement	 
>328	ReturnStatement	 
>329	Identifier	res
>330	ExpressionStatement	 
>331	CallExpression	connect ( res , & BtsApiNotifier 
>332	ArgumentList	res
>333	Argument	& BtsApiFolder 
>334	UnaryOp	& BtsApiFolder 
>335	Identifier	BtsApiFolder 
>336	UnaryOperator	&
>337	Argument	this
>338	Identifier	this
>339	Argument	& BtsApiNotifier 
>340	UnaryOp	& BtsApiNotifier 
>341	Identifier	BtsApiNotifier 
>342	UnaryOperator	&
>343	Argument	res
>344	Identifier	res
>345	Callee	connect
>346	Identifier	connect
>347	ExpressionStatement	 
>348	CallExpression	connect ( res , & BtsApiNotifier 
>349	ArgumentList	res
>350	Argument	& BtsApiFolder 
>351	UnaryOp	& BtsApiFolder 
>352	Identifier	BtsApiFolder 
>353	UnaryOperator	&
>354	Argument	this
>355	Identifier	this
>356	Argument	& BtsApiNotifier 
>357	UnaryOp	& BtsApiNotifier 
>358	Identifier	BtsApiNotifier 
>359	UnaryOperator	&
>360	Argument	res
>361	Identifier	res
>362	Callee	connect
>363	Identifier	connect
>364	IdentifierDeclStatement	 
>365	IdentifierDecl	* res = p -> api -> removeFolder ( p -> watchedSecret )
>366	AssignmentExpr	* res = p -> api -> removeFolder ( p -> watchedSecret )
>367	CallExpression	p -> api -> removeFolder ( p -> watchedSecret )
>368	ArgumentList	p -> watchedSecret
>369	Argument	p -> watchedSecret
>370	PtrMemberAccess	p -> watchedSecret
>371	Identifier	watchedSecret
>372	Identifier	p
>373	Callee	p -> api -> removeFolder
>374	PtrMemberAccess	p -> api -> removeFolder
>375	Identifier	removeFolder
>376	PtrMemberAccess	p -> api
>377	Identifier	api
>378	Identifier	p
>379	Identifier	res
>380	Identifier	res
>381	IdentifierDeclType	BtsApiNotifier *
>382	ExpressionStatement	 
>383	CallExpression	assertApi ( p )
>384	ArgumentList	p
>385	Argument	p
>386	Identifier	p
>387	Callee	assertApi
>388	Identifier	assertApi
>405	FunctionDef	BtsApiFolder 
>406	ParameterList	const QString & path
>407	Parameter	 
>408	Identifier	path
>409	ParameterType	const QString &
>410	ReturnType	BtsApiNotifier *
>411	CompoundStatement	 
>412	ReturnStatement	 
>413	Identifier	res
>414	ExpressionStatement	 
>415	CallExpression	connect ( res , & BtsApiNotifier 
>416	ArgumentList	res
>417	Argument	& BtsApiFolder 
>418	UnaryOp	& BtsApiFolder 
>419	Identifier	BtsApiFolder 
>420	UnaryOperator	&
>421	Argument	this
>422	Identifier	this
>423	Argument	& BtsApiNotifier 
>424	UnaryOp	& BtsApiNotifier 
>425	Identifier	BtsApiNotifier 
>426	UnaryOperator	&
>427	Argument	res
>428	Identifier	res
>429	Callee	connect
>430	Identifier	connect
>431	ExpressionStatement	 
>432	CallExpression	connect ( res , & BtsApiNotifier 
>433	ArgumentList	res
>434	Argument	& BtsApiFolder 
>435	UnaryOp	& BtsApiFolder 
>436	Identifier	BtsApiFolder 
>437	UnaryOperator	&
>438	Argument	this
>439	Identifier	this
>440	Argument	& BtsApiNotifier 
>441	UnaryOp	& BtsApiNotifier 
>442	Identifier	BtsApiNotifier 
>443	UnaryOperator	&
>444	Argument	res
>445	Identifier	res
>446	Callee	connect
>447	Identifier	connect
>448	IdentifierDeclStatement	 
>449	IdentifierDecl	* res = p -> api -> getFiles ( p -> watchedSecret , path )
>450	AssignmentExpr	* res = p -> api -> getFiles ( p -> watchedSecret , path )
>451	CallExpression	p -> api -> getFiles ( p -> watchedSecret , path )
>452	ArgumentList	p -> watchedSecret
>453	Argument	path
>454	Identifier	path
>455	Argument	p -> watchedSecret
>456	PtrMemberAccess	p -> watchedSecret
>457	Identifier	watchedSecret
>458	Identifier	p
>459	Callee	p -> api -> getFiles
>460	PtrMemberAccess	p -> api -> getFiles
>461	Identifier	getFiles
>462	PtrMemberAccess	p -> api
>463	Identifier	api
>464	Identifier	p
>465	Identifier	res
>466	Identifier	res
>467	IdentifierDeclType	BtsApiNotifier *
>468	ExpressionStatement	 
>469	CallExpression	assertApi ( p )
>470	ArgumentList	p
>471	Argument	p
>472	Identifier	p
>473	Callee	assertApi
>474	Identifier	assertApi
>492	FunctionDef	BtsApiFolder 
>493	ParameterList	const QString & path , bool download
>494	Parameter	 
>495	Identifier	download
>496	ParameterType	bool
>497	Parameter	 
>498	Identifier	path
>499	ParameterType	const QString &
>500	ReturnType	BtsApiNotifier *
>501	CompoundStatement	 
>502	ReturnStatement	 
>503	Identifier	res
>504	ExpressionStatement	 
>505	CallExpression	connect ( res , & BtsApiNotifier 
>506	ArgumentList	res
>507	Argument	& BtsApiFolder 
>508	UnaryOp	& BtsApiFolder 
>509	Identifier	BtsApiFolder 
>510	UnaryOperator	&
>511	Argument	this
>512	Identifier	this
>513	Argument	& BtsApiNotifier 
>514	UnaryOp	& BtsApiNotifier 
>515	Identifier	BtsApiNotifier 
>516	UnaryOperator	&
>517	Argument	res
>518	Identifier	res
>519	Callee	connect
>520	Identifier	connect
>521	ExpressionStatement	 
>522	CallExpression	connect ( res , & BtsApiNotifier 
>523	ArgumentList	res
>524	Argument	& BtsApiFolder 
>525	UnaryOp	& BtsApiFolder 
>526	Identifier	BtsApiFolder 
>527	UnaryOperator	&
>528	Argument	this
>529	Identifier	this
>530	Argument	& BtsApiNotifier 
>531	UnaryOp	& BtsApiNotifier 
>532	Identifier	BtsApiNotifier 
>533	UnaryOperator	&
>534	Argument	res
>535	Identifier	res
>536	Callee	connect
>537	Identifier	connect
>538	IdentifierDeclStatement	 
>539	IdentifierDecl	* res = p -> api -> setFilePrefs ( p -> watchedSecret , path , download )
>540	AssignmentExpr	* res = p -> api -> setFilePrefs ( p -> watchedSecret , path , download )
>541	CallExpression	p -> api -> setFilePrefs ( p -> watchedSecret , path , download )
>542	ArgumentList	p -> watchedSecret
>543	Argument	download
>544	Identifier	download
>545	Argument	path
>546	Identifier	path
>547	Argument	p -> watchedSecret
>548	PtrMemberAccess	p -> watchedSecret
>549	Identifier	watchedSecret
>550	Identifier	p
>551	Callee	p -> api -> setFilePrefs
>552	PtrMemberAccess	p -> api -> setFilePrefs
>553	Identifier	setFilePrefs
>554	PtrMemberAccess	p -> api
>555	Identifier	api
>556	Identifier	p
>557	Identifier	res
>558	Identifier	res
>559	IdentifierDeclType	BtsApiNotifier *
>560	ExpressionStatement	 
>561	CallExpression	assertApi ( p )
>562	ArgumentList	p
>563	Argument	p
>564	Identifier	p
>565	Callee	assertApi
>566	Identifier	assertApi
>585	FunctionDef	BtsApiFolder 
>586	ParameterList	 
>587	ReturnType	BtsApiNotifier *
>588	CompoundStatement	 
>589	ReturnStatement	 
>590	Identifier	res
>591	ExpressionStatement	 
>592	CallExpression	connect ( res , & BtsApiNotifier 
>593	ArgumentList	res
>594	Argument	& BtsApiFolder 
>595	UnaryOp	& BtsApiFolder 
>596	Identifier	BtsApiFolder 
>597	UnaryOperator	&
>598	Argument	this
>599	Identifier	this
>600	Argument	& BtsApiNotifier 
>601	UnaryOp	& BtsApiNotifier 
>602	Identifier	BtsApiNotifier 
>603	UnaryOperator	&
>604	Argument	res
>605	Identifier	res
>606	Callee	connect
>607	Identifier	connect
>608	ExpressionStatement	 
>609	CallExpression	connect ( res , & BtsApiNotifier 
>610	ArgumentList	res
>611	Argument	& BtsApiFolder 
>612	UnaryOp	& BtsApiFolder 
>613	Identifier	BtsApiFolder 
>614	UnaryOperator	&
>615	Argument	this
>616	Identifier	this
>617	Argument	& BtsApiNotifier 
>618	UnaryOp	& BtsApiNotifier 
>619	Identifier	BtsApiNotifier 
>620	UnaryOperator	&
>621	Argument	res
>622	Identifier	res
>623	Callee	connect
>624	Identifier	connect
>625	IdentifierDeclStatement	 
>626	IdentifierDecl	* res = p -> api -> getFolderPeers ( p -> watchedSecret )
>627	AssignmentExpr	* res = p -> api -> getFolderPeers ( p -> watchedSecret )
>628	CallExpression	p -> api -> getFolderPeers ( p -> watchedSecret )
>629	ArgumentList	p -> watchedSecret
>630	Argument	p -> watchedSecret
>631	PtrMemberAccess	p -> watchedSecret
>632	Identifier	watchedSecret
>633	Identifier	p
>634	Callee	p -> api -> getFolderPeers
>635	PtrMemberAccess	p -> api -> getFolderPeers
>636	Identifier	getFolderPeers
>637	PtrMemberAccess	p -> api
>638	Identifier	api
>639	Identifier	p
>640	Identifier	res
>641	Identifier	res
>642	IdentifierDeclType	BtsApiNotifier *
>643	ExpressionStatement	 
>644	CallExpression	assertApi ( p )
>645	ArgumentList	p
>646	Argument	p
>647	Identifier	p
>648	Callee	assertApi
>649	Identifier	assertApi
>666	FunctionDef	BtsApiFolder 
>667	ParameterList	 
>668	ReturnType	BtsApiNotifier *
>669	CompoundStatement	 
>670	ReturnStatement	 
>671	Identifier	res
>672	ExpressionStatement	 
>673	CallExpression	connect ( res , & BtsApiNotifier 
>674	ArgumentList	res
>675	Argument	& BtsApiFolder 
>676	UnaryOp	& BtsApiFolder 
>677	Identifier	BtsApiFolder 
>678	UnaryOperator	&
>679	Argument	this
>680	Identifier	this
>681	Argument	& BtsApiNotifier 
>682	UnaryOp	& BtsApiNotifier 
>683	Identifier	BtsApiNotifier 
>684	UnaryOperator	&
>685	Argument	res
>686	Identifier	res
>687	Callee	connect
>688	Identifier	connect
>689	ExpressionStatement	 
>690	CallExpression	connect ( res , & BtsApiNotifier 
>691	ArgumentList	res
>692	Argument	& BtsApiFolder 
>693	UnaryOp	& BtsApiFolder 
>694	Identifier	BtsApiFolder 
>695	UnaryOperator	&
>696	Argument	this
>697	Identifier	this
>698	Argument	& BtsApiNotifier 
>699	UnaryOp	& BtsApiNotifier 
>700	Identifier	BtsApiNotifier 
>701	UnaryOperator	&
>702	Argument	res
>703	Identifier	res
>704	Callee	connect
>705	Identifier	connect
>706	IdentifierDeclStatement	 
>707	IdentifierDecl	* res = p -> api -> getFolderPrefs ( p -> watchedSecret )
>708	AssignmentExpr	* res = p -> api -> getFolderPrefs ( p -> watchedSecret )
>709	CallExpression	p -> api -> getFolderPrefs ( p -> watchedSecret )
>710	ArgumentList	p -> watchedSecret
>711	Argument	p -> watchedSecret
>712	PtrMemberAccess	p -> watchedSecret
>713	Identifier	watchedSecret
>714	Identifier	p
>715	Callee	p -> api -> getFolderPrefs
>716	PtrMemberAccess	p -> api -> getFolderPrefs
>717	Identifier	getFolderPrefs
>718	PtrMemberAccess	p -> api
>719	Identifier	api
>720	Identifier	p
>721	Identifier	res
>722	Identifier	res
>723	IdentifierDeclType	BtsApiNotifier *
>724	ExpressionStatement	 
>725	CallExpression	assertApi ( p )
>726	ArgumentList	p
>727	Argument	p
>728	Identifier	p
>729	Callee	assertApi
>730	Identifier	assertApi
>747	FunctionDef	BtsApiFolder 
>748	ParameterList	const QVariantHash & prefs
>749	Parameter	 
>750	Identifier	prefs
>751	ParameterType	const QVariantHash &
>752	ReturnType	BtsApiNotifier *
>753	CompoundStatement	 
>754	ReturnStatement	 
>755	Identifier	res
>756	ExpressionStatement	 
>757	CallExpression	connect ( res , & BtsApiNotifier 
>758	ArgumentList	res
>759	Argument	& BtsApiFolder 
>760	UnaryOp	& BtsApiFolder 
>761	Identifier	BtsApiFolder 
>762	UnaryOperator	&
>763	Argument	this
>764	Identifier	this
>765	Argument	& BtsApiNotifier 
>766	UnaryOp	& BtsApiNotifier 
>767	Identifier	BtsApiNotifier 
>768	UnaryOperator	&
>769	Argument	res
>770	Identifier	res
>771	Callee	connect
>772	Identifier	connect
>773	ExpressionStatement	 
>774	CallExpression	connect ( res , & BtsApiNotifier 
>775	ArgumentList	res
>776	Argument	& BtsApiFolder 
>777	UnaryOp	& BtsApiFolder 
>778	Identifier	BtsApiFolder 
>779	UnaryOperator	&
>780	Argument	this
>781	Identifier	this
>782	Argument	& BtsApiNotifier 
>783	UnaryOp	& BtsApiNotifier 
>784	Identifier	BtsApiNotifier 
>785	UnaryOperator	&
>786	Argument	res
>787	Identifier	res
>788	Callee	connect
>789	Identifier	connect
>790	IdentifierDeclStatement	 
>791	IdentifierDecl	* res = p -> api -> setFolderPrefs ( p -> watchedSecret , prefs )
>792	AssignmentExpr	* res = p -> api -> setFolderPrefs ( p -> watchedSecret , prefs )
>793	CallExpression	p -> api -> setFolderPrefs ( p -> watchedSecret , prefs )
>794	ArgumentList	p -> watchedSecret
>795	Argument	prefs
>796	Identifier	prefs
>797	Argument	p -> watchedSecret
>798	PtrMemberAccess	p -> watchedSecret
>799	Identifier	watchedSecret
>800	Identifier	p
>801	Callee	p -> api -> setFolderPrefs
>802	PtrMemberAccess	p -> api -> setFolderPrefs
>803	Identifier	setFolderPrefs
>804	PtrMemberAccess	p -> api
>805	Identifier	api
>806	Identifier	p
>807	Identifier	res
>808	Identifier	res
>809	IdentifierDeclType	BtsApiNotifier *
>810	ExpressionStatement	 
>811	CallExpression	assertApi ( p )
>812	ArgumentList	p
>813	Argument	p
>814	Identifier	p
>815	Callee	assertApi
>816	Identifier	assertApi
>834	FunctionDef	BtsApiFolder 
>835	ParameterList	 
>836	ReturnType	BtsApiNotifier *
>837	CompoundStatement	 
>838	ReturnStatement	 
>839	Identifier	res
>840	ExpressionStatement	 
>841	CallExpression	connect ( res , & BtsApiNotifier 
>842	ArgumentList	res
>843	Argument	& BtsApiFolder 
>844	UnaryOp	& BtsApiFolder 
>845	Identifier	BtsApiFolder 
>846	UnaryOperator	&
>847	Argument	this
>848	Identifier	this
>849	Argument	& BtsApiNotifier 
>850	UnaryOp	& BtsApiNotifier 
>851	Identifier	BtsApiNotifier 
>852	UnaryOperator	&
>853	Argument	res
>854	Identifier	res
>855	Callee	connect
>856	Identifier	connect
>857	ExpressionStatement	 
>858	CallExpression	connect ( res , & BtsApiNotifier 
>859	ArgumentList	res
>860	Argument	& BtsApiFolder 
>861	UnaryOp	& BtsApiFolder 
>862	Identifier	BtsApiFolder 
>863	UnaryOperator	&
>864	Argument	this
>865	Identifier	this
>866	Argument	& BtsApiNotifier 
>867	UnaryOp	& BtsApiNotifier 
>868	Identifier	BtsApiNotifier 
>869	UnaryOperator	&
>870	Argument	res
>871	Identifier	res
>872	Callee	connect
>873	Identifier	connect
>874	IdentifierDeclStatement	 
>875	IdentifierDecl	* res = p -> api -> getFolderHosts ( p -> watchedSecret )
>876	AssignmentExpr	* res = p -> api -> getFolderHosts ( p -> watchedSecret )
>877	CallExpression	p -> api -> getFolderHosts ( p -> watchedSecret )
>878	ArgumentList	p -> watchedSecret
>879	Argument	p -> watchedSecret
>880	PtrMemberAccess	p -> watchedSecret
>881	Identifier	watchedSecret
>882	Identifier	p
>883	Callee	p -> api -> getFolderHosts
>884	PtrMemberAccess	p -> api -> getFolderHosts
>885	Identifier	getFolderHosts
>886	PtrMemberAccess	p -> api
>887	Identifier	api
>888	Identifier	p
>889	Identifier	res
>890	Identifier	res
>891	IdentifierDeclType	BtsApiNotifier *
>892	ExpressionStatement	 
>893	CallExpression	assertApi ( p )
>894	ArgumentList	p
>895	Argument	p
>896	Identifier	p
>897	Callee	assertApi
>898	Identifier	assertApi
>915	FunctionDef	BtsApiFolder 
>916	ParameterList	const QStringList & hosts
>917	Parameter	 
>918	Identifier	hosts
>919	ParameterType	const QStringList &
>920	ReturnType	BtsApiNotifier *
>921	CompoundStatement	 
>922	ReturnStatement	 
>923	Identifier	res
>924	ExpressionStatement	 
>925	CallExpression	connect ( res , & BtsApiNotifier 
>926	ArgumentList	res
>927	Argument	& BtsApiFolder 
>928	UnaryOp	& BtsApiFolder 
>929	Identifier	BtsApiFolder 
>930	UnaryOperator	&
>931	Argument	this
>932	Identifier	this
>933	Argument	& BtsApiNotifier 
>934	UnaryOp	& BtsApiNotifier 
>935	Identifier	BtsApiNotifier 
>936	UnaryOperator	&
>937	Argument	res
>938	Identifier	res
>939	Callee	connect
>940	Identifier	connect
>941	ExpressionStatement	 
>942	CallExpression	connect ( res , & BtsApiNotifier 
>943	ArgumentList	res
>944	Argument	& BtsApiFolder 
>945	UnaryOp	& BtsApiFolder 
>946	Identifier	BtsApiFolder 
>947	UnaryOperator	&
>948	Argument	this
>949	Identifier	this
>950	Argument	& BtsApiNotifier 
>951	UnaryOp	& BtsApiNotifier 
>952	Identifier	BtsApiNotifier 
>953	UnaryOperator	&
>954	Argument	res
>955	Identifier	res
>956	Callee	connect
>957	Identifier	connect
>958	IdentifierDeclStatement	 
>959	IdentifierDecl	* res = p -> api -> setFolderHosts ( p -> watchedSecret , hosts )
>960	AssignmentExpr	* res = p -> api -> setFolderHosts ( p -> watchedSecret , hosts )
>961	CallExpression	p -> api -> setFolderHosts ( p -> watchedSecret , hosts )
>962	ArgumentList	p -> watchedSecret
>963	Argument	hosts
>964	Identifier	hosts
>965	Argument	p -> watchedSecret
>966	PtrMemberAccess	p -> watchedSecret
>967	Identifier	watchedSecret
>968	Identifier	p
>969	Callee	p -> api -> setFolderHosts
>970	PtrMemberAccess	p -> api -> setFolderHosts
>971	Identifier	setFolderHosts
>972	PtrMemberAccess	p -> api
>973	Identifier	api
>974	Identifier	p
>975	Identifier	res
>976	Identifier	res
>977	IdentifierDeclType	BtsApiNotifier *
>978	ExpressionStatement	 
>979	CallExpression	assertApi ( p )
>980	ArgumentList	p
>981	Argument	p
>982	Identifier	p
>983	Callee	assertApi
>984	Identifier	assertApi
>1002	FunctionDef	BtsApiFolder 
>1003	ParameterList	bool encryption
>1004	Parameter	 
>1005	Identifier	encryption
>1006	ParameterType	bool
>1007	ReturnType	BtsApiNotifier *
>1008	CompoundStatement	 
>1009	ReturnStatement	 
>1010	Identifier	res
>1011	ExpressionStatement	 
>1012	CallExpression	connect ( res , & BtsApiNotifier 
>1013	ArgumentList	res
>1014	Argument	& BtsApiFolder 
>1015	UnaryOp	& BtsApiFolder 
>1016	Identifier	BtsApiFolder 
>1017	UnaryOperator	&
>1018	Argument	this
>1019	Identifier	this
>1020	Argument	& BtsApiNotifier 
>1021	UnaryOp	& BtsApiNotifier 
>1022	Identifier	BtsApiNotifier 
>1023	UnaryOperator	&
>1024	Argument	res
>1025	Identifier	res
>1026	Callee	connect
>1027	Identifier	connect
>1028	ExpressionStatement	 
>1029	CallExpression	connect ( res , & BtsApiNotifier 
>1030	ArgumentList	res
>1031	Argument	& BtsApiFolder 
>1032	UnaryOp	& BtsApiFolder 
>1033	Identifier	BtsApiFolder 
>1034	UnaryOperator	&
>1035	Argument	this
>1036	Identifier	this
>1037	Argument	& BtsApiNotifier 
>1038	UnaryOp	& BtsApiNotifier 
>1039	Identifier	BtsApiNotifier 
>1040	UnaryOperator	&
>1041	Argument	res
>1042	Identifier	res
>1043	Callee	connect
>1044	Identifier	connect
>1045	IdentifierDeclStatement	 
>1046	IdentifierDecl	* res = p -> api -> getSecrets ( encryption , p -> watchedSecret )
>1047	AssignmentExpr	* res = p -> api -> getSecrets ( encryption , p -> watchedSecret )
>1048	CallExpression	p -> api -> getSecrets ( encryption , p -> watchedSecret )
>1049	ArgumentList	encryption
>1050	Argument	p -> watchedSecret
>1051	PtrMemberAccess	p -> watchedSecret
>1052	Identifier	watchedSecret
>1053	Identifier	p
>1054	Argument	encryption
>1055	Identifier	encryption
>1056	Callee	p -> api -> getSecrets
>1057	PtrMemberAccess	p -> api -> getSecrets
>1058	Identifier	getSecrets
>1059	PtrMemberAccess	p -> api
>1060	Identifier	api
>1061	Identifier	p
>1062	Identifier	res
>1063	Identifier	res
>1064	IdentifierDeclType	BtsApiNotifier *
>1065	ExpressionStatement	 
>1066	CallExpression	assertApi ( p )
>1067	ArgumentList	p
>1068	Argument	p
>1069	Identifier	p
>1070	Callee	assertApi
>1071	Identifier	assertApi
<8=13,9
<9=10
<10=12,11
<13=14
<14=15
<15=17,16
<23=31,24
<24=28,25
<25=27,26
<28=30,29
<31=39,32
<32=33
<33=37,34
<34=35
<35=36
<37=38
<39=40
<40=42,41
<49=57,50
<50=54,51
<51=53,52
<54=56,55
<57=64,58
<58=59
<59=61,60
<61=63,62
<64=65
<65=67,66
<76=87,77
<77=84,81,78
<78=80,79
<81=83,82
<84=86,85
<87=101,95,88
<88=89
<89=93,90
<90=91
<91=92
<93=94
<95=96
<96=98,97
<98=100,99
<101=102
<102=104,103
<114=116,115
<116=119,117
<117=118
<123=129,128,124
<124=125
<125=127,126
<129=130
<130=131
<131=133,132
<133=135,134
<143=146,145,144
<146=147
<147=148
<148=150,149
<157=163,162,158
<158=159
<159=161,160
<163=164
<164=165
<165=167,166
<167=169,168
<177=180,179,178
<180=181
<181=182
<182=184,183
<191=197,196,192
<192=193
<193=195,194
<197=223,216,205,198
<198=199
<199=203,200
<200=201
<201=202
<203=204
<205=207,206
<207=208
<208=210,209
<210=211
<211=213,212
<213=215,214
<216=217
<217=221,218
<218=219
<219=220
<221=222
<223=225,224
<225=226
<226=228,227
<228=229
<229=231,230
<231=233,232
<243=246,245,244
<246=301,283,266,249,247
<247=248
<249=250
<250=264,251
<251=262,258,256,252
<252=253
<253=255,254
<256=257
<258=259
<259=261,260
<262=263
<264=265
<266=267
<267=281,268
<268=279,275,273,269
<269=270
<270=272,271
<273=274
<275=276
<276=278,277
<279=280
<281=282
<283=284
<284=300,299,285
<285=298,286
<286=292,287
<287=288
<288=289
<289=291,290
<292=293
<293=295,294
<295=297,296
<301=302
<302=306,303
<303=304
<304=305
<306=307
<324=327,326,325
<327=382,364,347,330,328
<328=329
<330=331
<331=345,332
<332=343,339,337,333
<333=334
<334=336,335
<337=338
<339=340
<340=342,341
<343=344
<345=346
<347=348
<348=362,349
<349=360,356,354,350
<350=351
<351=353,352
<354=355
<356=357
<357=359,358
<360=361
<362=363
<364=365
<365=381,380,366
<366=379,367
<367=373,368
<368=369
<369=370
<370=372,371
<373=374
<374=376,375
<376=378,377
<382=383
<383=387,384
<384=385
<385=386
<387=388
<405=411,410,406
<406=407
<407=409,408
<411=468,448,431,414,412
<412=413
<414=415
<415=429,416
<416=427,423,421,417
<417=418
<418=420,419
<421=422
<423=424
<424=426,425
<427=428
<429=430
<431=432
<432=446,433
<433=444,440,438,434
<434=435
<435=437,436
<438=439
<440=441
<441=443,442
<444=445
<446=447
<448=449
<449=467,466,450
<450=465,451
<451=459,452
<452=455,453
<453=454
<455=456
<456=458,457
<459=460
<460=462,461
<462=464,463
<468=469
<469=473,470
<470=471
<471=472
<473=474
<492=501,500,493
<493=497,494
<494=496,495
<497=499,498
<501=560,538,521,504,502
<502=503
<504=505
<505=519,506
<506=517,513,511,507
<507=508
<508=510,509
<511=512
<513=514
<514=516,515
<517=518
<519=520
<521=522
<522=536,523
<523=534,530,528,524
<524=525
<525=527,526
<528=529
<530=531
<531=533,532
<534=535
<536=537
<538=539
<539=559,558,540
<540=557,541
<541=551,542
<542=547,545,543
<543=544
<545=546
<547=548
<548=550,549
<551=552
<552=554,553
<554=556,555
<560=561
<561=565,562
<562=563
<563=564
<565=566
<585=588,587,586
<588=643,625,608,591,589
<589=590
<591=592
<592=606,593
<593=604,600,598,594
<594=595
<595=597,596
<598=599
<600=601
<601=603,602
<604=605
<606=607
<608=609
<609=623,610
<610=621,617,615,611
<611=612
<612=614,613
<615=616
<617=618
<618=620,619
<621=622
<623=624
<625=626
<626=642,641,627
<627=640,628
<628=634,629
<629=630
<630=631
<631=633,632
<634=635
<635=637,636
<637=639,638
<643=644
<644=648,645
<645=646
<646=647
<648=649
<666=669,668,667
<669=724,706,689,672,670
<670=671
<672=673
<673=687,674
<674=685,681,679,675
<675=676
<676=678,677
<679=680
<681=682
<682=684,683
<685=686
<687=688
<689=690
<690=704,691
<691=702,698,696,692
<692=693
<693=695,694
<696=697
<698=699
<699=701,700
<702=703
<704=705
<706=707
<707=723,722,708
<708=721,709
<709=715,710
<710=711
<711=712
<712=714,713
<715=716
<716=718,717
<718=720,719
<724=725
<725=729,726
<726=727
<727=728
<729=730
<747=753,752,748
<748=749
<749=751,750
<753=810,790,773,756,754
<754=755
<756=757
<757=771,758
<758=769,765,763,759
<759=760
<760=762,761
<763=764
<765=766
<766=768,767
<769=770
<771=772
<773=774
<774=788,775
<775=786,782,780,776
<776=777
<777=779,778
<780=781
<782=783
<783=785,784
<786=787
<788=789
<790=791
<791=809,808,792
<792=807,793
<793=801,794
<794=797,795
<795=796
<797=798
<798=800,799
<801=802
<802=804,803
<804=806,805
<810=811
<811=815,812
<812=813
<813=814
<815=816
<834=837,836,835
<837=892,874,857,840,838
<838=839
<840=841
<841=855,842
<842=853,849,847,843
<843=844
<844=846,845
<847=848
<849=850
<850=852,851
<853=854
<855=856
<857=858
<858=872,859
<859=870,866,864,860
<860=861
<861=863,862
<864=865
<866=867
<867=869,868
<870=871
<872=873
<874=875
<875=891,890,876
<876=889,877
<877=883,878
<878=879
<879=880
<880=882,881
<883=884
<884=886,885
<886=888,887
<892=893
<893=897,894
<894=895
<895=896
<897=898
<915=921,920,916
<916=917
<917=919,918
<921=978,958,941,924,922
<922=923
<924=925
<925=939,926
<926=937,933,931,927
<927=928
<928=930,929
<931=932
<933=934
<934=936,935
<937=938
<939=940
<941=942
<942=956,943
<943=954,950,948,944
<944=945
<945=947,946
<948=949
<950=951
<951=953,952
<954=955
<956=957
<958=959
<959=977,976,960
<960=975,961
<961=969,962
<962=965,963
<963=964
<965=966
<966=968,967
<969=970
<970=972,971
<972=974,973
<978=979
<979=983,980
<980=981
<981=982
<983=984
<1002=1008,1007,1003
<1003=1004
<1004=1006,1005
<1008=1065,1045,1028,1011,1009
<1009=1010
<1011=1012
<1012=1026,1013
<1013=1024,1020,1018,1014
<1014=1015
<1015=1017,1016
<1018=1019
<1020=1021
<1021=1023,1022
<1024=1025
<1026=1027
<1028=1029
<1029=1043,1030
<1030=1041,1037,1035,1031
<1031=1032
<1032=1034,1033
<1035=1036
<1037=1038
<1038=1040,1039
<1041=1042
<1043=1044
<1045=1046
<1046=1064,1063,1047
<1047=1062,1048
<1048=1056,1049
<1049=1054,1050
<1050=1051
<1051=1053,1052
<1054=1055
<1056=1057
<1057=1059,1058
<1059=1061,1060
<1065=1066
<1066=1070,1067
<1067=1068
<1068=1069
<1070=1071
