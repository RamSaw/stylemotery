>3	FunctionDef	ScreenTransition 
>4	ParameterList	 
>5	CompoundStatement	 
>6	ExpressionStatement	 
>7	AssignmentExpr	alpha = 0
>8	PrimaryExpression	0
>9	Identifier	alpha
>10	ExpressionStatement	 
>11	AssignmentExpr	followCamera = 1
>12	PrimaryExpression	1
>13	Identifier	followCamera
>14	ExpressionStatement	 
>15	AssignmentExpr	cull = false
>16	Identifier	false
>17	Identifier	cull
>18	ExpressionStatement	 
>19	CallExpression	createTexture ( )
>20	ArgumentList	 
>21	Callee	createTexture
>22	Identifier	createTexture
>30	FunctionDef	ScreenTransition 
>31	ParameterList	 
>32	ReturnType	void
>33	CompoundStatement	 
>34	ExpressionStatement	 
>35	CallExpression	glBindTexture ( GL_TEXTURE_2D , 0 )
>36	ArgumentList	GL_TEXTURE_2D
>37	Argument	0
>38	PrimaryExpression	0
>39	Argument	GL_TEXTURE_2D
>40	Identifier	GL_TEXTURE_2D
>41	Callee	glBindTexture
>42	Identifier	glBindTexture
>43	ExpressionStatement	 
>44	CallExpression	glTexImage2D ( GL_TEXTURE_2D , 0 , 3 , textureWidth , textureHeight , 0 , GL_RGB , GL_UNSIGNED_BYTE , NULL )
>45	ArgumentList	GL_TEXTURE_2D
>46	Argument	NULL
>47	Identifier	NULL
>48	Argument	GL_UNSIGNED_BYTE
>49	Identifier	GL_UNSIGNED_BYTE
>50	Argument	GL_RGB
>51	Identifier	GL_RGB
>52	Argument	0
>53	PrimaryExpression	0
>54	Argument	textureHeight
>55	Identifier	textureHeight
>56	Argument	textureWidth
>57	Identifier	textureWidth
>58	Argument	3
>59	PrimaryExpression	3
>60	Argument	0
>61	PrimaryExpression	0
>62	Argument	GL_TEXTURE_2D
>63	Identifier	GL_TEXTURE_2D
>64	Callee	glTexImage2D
>65	Identifier	glTexImage2D
>66	ExpressionStatement	 
>67	CallExpression	glTexParameteri ( GL_TEXTURE_2D , GL_TEXTURE_MAG_FILTER , GL_LINEAR )
>68	ArgumentList	GL_TEXTURE_2D
>69	Argument	GL_LINEAR
>70	Identifier	GL_LINEAR
>71	Argument	GL_TEXTURE_MAG_FILTER
>72	Identifier	GL_TEXTURE_MAG_FILTER
>73	Argument	GL_TEXTURE_2D
>74	Identifier	GL_TEXTURE_2D
>75	Callee	glTexParameteri
>76	Identifier	glTexParameteri
>77	ExpressionStatement	 
>78	CallExpression	glTexParameteri ( GL_TEXTURE_2D , GL_TEXTURE_MIN_FILTER , GL_LINEAR )
>79	ArgumentList	GL_TEXTURE_2D
>80	Argument	GL_LINEAR
>81	Identifier	GL_LINEAR
>82	Argument	GL_TEXTURE_MIN_FILTER
>83	Identifier	GL_TEXTURE_MIN_FILTER
>84	Argument	GL_TEXTURE_2D
>85	Identifier	GL_TEXTURE_2D
>86	Callee	glTexParameteri
>87	Identifier	glTexParameteri
>88	ExpressionStatement	 
>89	CallExpression	glBindTexture ( GL_TEXTURE_2D , screen_texture )
>90	ArgumentList	GL_TEXTURE_2D
>91	Argument	screen_texture
>92	Identifier	screen_texture
>93	Argument	GL_TEXTURE_2D
>94	Identifier	GL_TEXTURE_2D
>95	Callee	glBindTexture
>96	Identifier	glBindTexture
>97	ExpressionStatement	 
>98	CallExpression	glGenTextures ( 1 , & screen_texture )
>99	ArgumentList	1
>100	Argument	& screen_texture
>101	UnaryOp	& screen_texture
>102	Identifier	screen_texture
>103	UnaryOperator	&
>104	Argument	1
>105	PrimaryExpression	1
>106	Callee	glGenTextures
>107	Identifier	glGenTextures
>108	ExpressionStatement	 
>109	CallExpression	sizePowerOf2Texture ( textureHeight )
>110	ArgumentList	textureHeight
>111	Argument	textureHeight
>112	Identifier	textureHeight
>113	Callee	sizePowerOf2Texture
>114	Identifier	sizePowerOf2Texture
>115	ExpressionStatement	 
>116	CallExpression	sizePowerOf2Texture ( textureWidth )
>117	ArgumentList	textureWidth
>118	Argument	textureWidth
>119	Identifier	textureWidth
>120	Callee	sizePowerOf2Texture
>121	Identifier	sizePowerOf2Texture
>122	ExpressionStatement	 
>123	AssignmentExpr	textureHeight = windowHeight
>124	Identifier	windowHeight
>125	Identifier	textureHeight
>126	ExpressionStatement	 
>127	AssignmentExpr	textureWidth = windowWidth
>128	Identifier	windowWidth
>129	Identifier	textureWidth
>130	ExpressionStatement	 
>131	AssignmentExpr	windowHeight = core -> getWindowHeight ( )
>132	CallExpression	core -> getWindowHeight ( )
>133	ArgumentList	 
>134	Callee	core -> getWindowHeight
>135	PtrMemberAccess	core -> getWindowHeight
>136	Identifier	getWindowHeight
>137	Identifier	core
>138	Identifier	windowHeight
>139	ExpressionStatement	 
>140	AssignmentExpr	windowWidth = core -> getWindowWidth ( )
>141	CallExpression	core -> getWindowWidth ( )
>142	ArgumentList	 
>143	Callee	core -> getWindowWidth
>144	PtrMemberAccess	core -> getWindowWidth
>145	Identifier	getWindowWidth
>146	Identifier	core
>147	Identifier	windowWidth
>148	ExpressionStatement	 
>149	AssignmentExpr	height = core -> getVirtualHeight ( )
>150	CallExpression	core -> getVirtualHeight ( )
>151	ArgumentList	 
>152	Callee	core -> getVirtualHeight
>153	PtrMemberAccess	core -> getVirtualHeight
>154	Identifier	getVirtualHeight
>155	Identifier	core
>156	Identifier	height
>157	ExpressionStatement	 
>158	AssignmentExpr	width = core -> getVirtualWidth ( )
>159	CallExpression	core -> getVirtualWidth ( )
>160	ArgumentList	 
>161	Callee	core -> getVirtualWidth
>162	PtrMemberAccess	core -> getVirtualWidth
>163	Identifier	getVirtualWidth
>164	Identifier	core
>165	Identifier	width
>190	FunctionDef	ScreenTransition 
>191	ParameterList	 
>192	ReturnType	void
>193	CompoundStatement	 
>194	IfStatement	if ( screen_texture )
>195	CompoundStatement	 
>196	ExpressionStatement	 
>197	AssignmentExpr	screen_texture = 0
>198	PrimaryExpression	0
>199	Identifier	screen_texture
>200	ExpressionStatement	 
>201	CallExpression	glDeleteTextures ( 1 , & screen_texture )
>202	ArgumentList	1
>203	Argument	& screen_texture
>204	UnaryOp	& screen_texture
>205	Identifier	screen_texture
>206	UnaryOperator	&
>207	Argument	1
>208	PrimaryExpression	1
>209	Callee	glDeleteTextures
>210	Identifier	glDeleteTextures
>211	Condition	 
>212	Identifier	screen_texture
>218	FunctionDef	ScreenTransition 
>219	ParameterList	 
>220	ReturnType	void
>221	CompoundStatement	 
>222	ExpressionStatement	 
>223	CallExpression	destroyTexture ( )
>224	ArgumentList	 
>225	Callee	destroyTexture
>226	Identifier	destroyTexture
>227	ExpressionStatement	 
>228	CallExpression	RenderObject 
>229	ArgumentList	 
>230	Callee	RenderObject 
>231	Identifier	RenderObject 
>235	FunctionDef	ScreenTransition 
>236	ParameterList	 
>237	ReturnType	void
>238	CompoundStatement	 
>239	ExpressionStatement	 
>240	CallExpression	createTexture ( )
>241	ArgumentList	 
>242	Callee	createTexture
>243	Identifier	createTexture
>244	ExpressionStatement	 
>245	CallExpression	RenderObject 
>246	ArgumentList	 
>247	Callee	RenderObject 
>248	Identifier	RenderObject 
>252	FunctionDef	ScreenTransition 
>253	ParameterList	 
>254	ReturnType	void
>255	CompoundStatement	 
>256	ExpressionStatement	 
>257	CallExpression	core -> showBuffer ( )
>258	ArgumentList	 
>259	Callee	core -> showBuffer
>260	PtrMemberAccess	core -> showBuffer
>261	Identifier	showBuffer
>262	Identifier	core
>263	IfStatement	if ( screen_texture )
>264	CompoundStatement	 
>265	ExpressionStatement	 
>266	CallExpression	glBindTexture ( GL_TEXTURE_2D , 0 )
>267	ArgumentList	GL_TEXTURE_2D
>268	Argument	0
>269	PrimaryExpression	0
>270	Argument	GL_TEXTURE_2D
>271	Identifier	GL_TEXTURE_2D
>272	Callee	glBindTexture
>273	Identifier	glBindTexture
>274	ExpressionStatement	 
>275	CallExpression	glCopyTexSubImage2D ( GL_TEXTURE_2D , 0 , 0 , 0 , 0 , 0 , windowWidth , windowHeight )
>276	ArgumentList	GL_TEXTURE_2D
>277	Argument	windowHeight
>278	Identifier	windowHeight
>279	Argument	windowWidth
>280	Identifier	windowWidth
>281	Argument	0
>282	PrimaryExpression	0
>283	Argument	0
>284	PrimaryExpression	0
>285	Argument	0
>286	PrimaryExpression	0
>287	Argument	0
>288	PrimaryExpression	0
>289	Argument	0
>290	PrimaryExpression	0
>291	Argument	GL_TEXTURE_2D
>292	Identifier	GL_TEXTURE_2D
>293	Callee	glCopyTexSubImage2D
>294	Identifier	glCopyTexSubImage2D
>295	ExpressionStatement	 
>296	CallExpression	glBindTexture ( GL_TEXTURE_2D , screen_texture )
>297	ArgumentList	GL_TEXTURE_2D
>298	Argument	screen_texture
>299	Identifier	screen_texture
>300	Argument	GL_TEXTURE_2D
>301	Identifier	GL_TEXTURE_2D
>302	Callee	glBindTexture
>303	Identifier	glBindTexture
>304	Condition	 
>305	Identifier	screen_texture
>306	ExpressionStatement	 
>307	CallExpression	core -> render ( )
>308	ArgumentList	 
>309	Callee	core -> render
>310	PtrMemberAccess	core -> render
>311	Identifier	render
>312	Identifier	core
>321	FunctionDef	ScreenTransition 
>322	ParameterList	float time
>323	Parameter	 
>324	Identifier	time
>325	ParameterType	float
>326	ReturnType	void
>327	CompoundStatement	 
>328	ExpressionStatement	 
>329	CallExpression	transition ( time )
>330	ArgumentList	time
>331	Argument	time
>332	Identifier	time
>333	Callee	transition
>334	Identifier	transition
>335	ExpressionStatement	 
>336	CallExpression	capture ( )
>337	ArgumentList	 
>338	Callee	capture
>339	Identifier	capture
>344	FunctionDef	ScreenTransition 
>345	ParameterList	float time
>346	Parameter	 
>347	Identifier	time
>348	ParameterType	float
>349	ReturnType	void
>350	CompoundStatement	 
>351	ExpressionStatement	 
>352	CallExpression	alpha . interpolateTo ( 0 , time )
>353	ArgumentList	0
>354	Argument	time
>355	Identifier	time
>356	Argument	0
>357	PrimaryExpression	0
>358	Callee	alpha . interpolateTo
>359	MemberAccess	alpha . interpolateTo
>360	Identifier	interpolateTo
>361	Identifier	alpha
>362	ExpressionStatement	 
>363	AssignmentExpr	alpha = 1
>364	PrimaryExpression	1
>365	Identifier	alpha
>366	ExpressionStatement	 
>367	CallExpression	core -> resetTimer ( )
>368	ArgumentList	 
>369	Callee	core -> resetTimer
>370	PtrMemberAccess	core -> resetTimer
>371	Identifier	resetTimer
>372	Identifier	core
>379	FunctionDef	ScreenTransition 
>380	ParameterList	 
>381	ReturnType	bool
>382	CompoundStatement	 
>383	ReturnStatement	 
>384	CallExpression	alpha . isInterpolating ( )
>385	ArgumentList	 
>386	Callee	alpha . isInterpolating
>387	MemberAccess	alpha . isInterpolating
>388	Identifier	isInterpolating
>389	Identifier	alpha
>395	FunctionDef	ScreenTransition 
>396	ParameterList	 
>397	ReturnType	void
>398	CompoundStatement	 
>399	ExpressionStatement	 
>400	AssignmentExpr	RenderObject 
>401	PrimaryExpression	0
>402	Identifier	RenderObject 
>403	ExpressionStatement	 
>404	CallExpression	glBindTexture ( GL_TEXTURE_2D , 0 )
>405	ArgumentList	GL_TEXTURE_2D
>406	Argument	0
>407	PrimaryExpression	0
>408	Argument	GL_TEXTURE_2D
>409	Identifier	GL_TEXTURE_2D
>410	Callee	glBindTexture
>411	Identifier	glBindTexture
>412	ExpressionStatement	 
>413	CallExpression	glEnd ( )
>414	ArgumentList	 
>415	Callee	glEnd
>416	Identifier	glEnd
>417	ExpressionStatement	 
>418	CallExpression	glVertex3f ( - width2 , - height2 , 0.0 )
>419	ArgumentList	- width2
>420	Argument	0.0
>421	PrimaryExpression	0.0
>422	Argument	- height2
>423	UnaryOp	- height2
>424	Identifier	height2
>425	UnaryOperator	-
>426	Argument	- width2
>427	UnaryOp	- width2
>428	Identifier	width2
>429	UnaryOperator	-
>430	Callee	glVertex3f
>431	Identifier	glVertex3f
>432	ExpressionStatement	 
>433	CallExpression	glTexCoord2d ( 0 , ph )
>434	ArgumentList	0
>435	Argument	ph
>436	Identifier	ph
>437	Argument	0
>438	PrimaryExpression	0
>439	Callee	glTexCoord2d
>440	Identifier	glTexCoord2d
>441	ExpressionStatement	 
>442	CallExpression	glVertex3f ( width2 , - height2 , 0.0 )
>443	ArgumentList	width2
>444	Argument	0.0
>445	PrimaryExpression	0.0
>446	Argument	- height2
>447	UnaryOp	- height2
>448	Identifier	height2
>449	UnaryOperator	-
>450	Argument	width2
>451	Identifier	width2
>452	Callee	glVertex3f
>453	Identifier	glVertex3f
>454	ExpressionStatement	 
>455	CallExpression	glTexCoord2d ( pw , ph )
>456	ArgumentList	pw
>457	Argument	ph
>458	Identifier	ph
>459	Argument	pw
>460	Identifier	pw
>461	Callee	glTexCoord2d
>462	Identifier	glTexCoord2d
>463	ExpressionStatement	 
>464	CallExpression	glVertex3f ( width2 , height2 , 0.0 )
>465	ArgumentList	width2
>466	Argument	0.0
>467	PrimaryExpression	0.0
>468	Argument	height2
>469	Identifier	height2
>470	Argument	width2
>471	Identifier	width2
>472	Callee	glVertex3f
>473	Identifier	glVertex3f
>474	ExpressionStatement	 
>475	CallExpression	glTexCoord2d ( pw , 0 )
>476	ArgumentList	pw
>477	Argument	0
>478	PrimaryExpression	0
>479	Argument	pw
>480	Identifier	pw
>481	Callee	glTexCoord2d
>482	Identifier	glTexCoord2d
>483	ExpressionStatement	 
>484	CallExpression	glVertex3f ( - width2 , height2 , 0.0 )
>485	ArgumentList	- width2
>486	Argument	0.0
>487	PrimaryExpression	0.0
>488	Argument	height2
>489	Identifier	height2
>490	Argument	- width2
>491	UnaryOp	- width2
>492	Identifier	width2
>493	UnaryOperator	-
>494	Callee	glVertex3f
>495	Identifier	glVertex3f
>496	ExpressionStatement	 
>497	CallExpression	glTexCoord2d ( 0 , 0 )
>498	ArgumentList	0
>499	Argument	0
>500	PrimaryExpression	0
>501	Argument	0
>502	PrimaryExpression	0
>503	Callee	glTexCoord2d
>504	Identifier	glTexCoord2d
>505	ExpressionStatement	 
>506	CallExpression	glBegin ( GL_QUADS )
>507	ArgumentList	GL_QUADS
>508	Argument	GL_QUADS
>509	Identifier	GL_QUADS
>510	Callee	glBegin
>511	Identifier	glBegin
>512	IfStatement	if ( fabsf ( aspect - checkAspect ) < 0.01f )
>513	CompoundStatement	 
>514	ExpressionStatement	 
>515	CallExpression	glTranslatef ( 0.5f , 0.0f , 0.0f )
>516	ArgumentList	0.5f
>517	Argument	0.0f
>518	PrimaryExpression	0.0f
>519	Argument	0.0f
>520	PrimaryExpression	0.0f
>521	Argument	0.5f
>522	PrimaryExpression	0.5f
>523	Callee	glTranslatef
>524	Identifier	glTranslatef
>525	Condition	 
>526	RelationalExpression	fabsf ( aspect - checkAspect ) < 0.01f
>527	PrimaryExpression	0.01f
>528	CallExpression	fabsf ( aspect - checkAspect )
>529	ArgumentList	aspect - checkAspect
>530	Argument	aspect - checkAspect
>531	AdditiveExpression	aspect - checkAspect
>532	Identifier	checkAspect
>533	Identifier	aspect
>534	Callee	fabsf
>535	Identifier	fabsf
>536	IdentifierDeclStatement	 
>537	IdentifierDecl	checkAspect = 16.0f / 10.0f
>538	AssignmentExpr	checkAspect = 16.0f / 10.0f
>539	MultiplicativeExpression	16.0f / 10.0f
>540	PrimaryExpression	10.0f
>541	PrimaryExpression	16.0f
>542	Identifier	checkAspect
>543	Identifier	checkAspect
>544	IdentifierDeclType	float
>545	IdentifierDeclStatement	 
>546	IdentifierDecl	aspect = float ( core -> width ) / float ( core -> height )
>547	AssignmentExpr	aspect = float ( core -> width ) / float ( core -> height )
>548	MultiplicativeExpression	float ( core -> width ) / float ( core -> height )
>549	CallExpression	float ( core -> height )
>550	ArgumentList	core -> height
>551	Argument	core -> height
>552	PtrMemberAccess	core -> height
>553	Identifier	height
>554	Identifier	core
>555	Callee	float
>556	Identifier	float
>557	CallExpression	float ( core -> width )
>558	ArgumentList	core -> width
>559	Argument	core -> width
>560	PtrMemberAccess	core -> width
>561	Identifier	width
>562	Identifier	core
>563	Callee	float
>564	Identifier	float
>565	Identifier	aspect
>566	Identifier	aspect
>567	IdentifierDeclType	float
>568	ExpressionStatement	 
>569	CallExpression	glBindTexture ( GL_TEXTURE_2D , screen_texture )
>570	ArgumentList	GL_TEXTURE_2D
>571	Argument	screen_texture
>572	Identifier	screen_texture
>573	Argument	GL_TEXTURE_2D
>574	Identifier	GL_TEXTURE_2D
>575	Callee	glBindTexture
>576	Identifier	glBindTexture
>577	IdentifierDeclStatement	 
>578	IdentifierDecl	ph = float ( windowHeight ) / float ( textureHeight )
>579	AssignmentExpr	ph = float ( windowHeight ) / float ( textureHeight )
>580	MultiplicativeExpression	float ( windowHeight ) / float ( textureHeight )
>581	CallExpression	float ( textureHeight )
>582	ArgumentList	textureHeight
>583	Argument	textureHeight
>584	Identifier	textureHeight
>585	Callee	float
>586	Identifier	float
>587	CallExpression	float ( windowHeight )
>588	ArgumentList	windowHeight
>589	Argument	windowHeight
>590	Identifier	windowHeight
>591	Callee	float
>592	Identifier	float
>593	Identifier	ph
>594	Identifier	ph
>595	IdentifierDeclType	const float
>596	IdentifierDeclStatement	 
>597	IdentifierDecl	pw = float ( windowWidth ) / float ( textureWidth )
>598	AssignmentExpr	pw = float ( windowWidth ) / float ( textureWidth )
>599	MultiplicativeExpression	float ( windowWidth ) / float ( textureWidth )
>600	CallExpression	float ( textureWidth )
>601	ArgumentList	textureWidth
>602	Argument	textureWidth
>603	Identifier	textureWidth
>604	Callee	float
>605	Identifier	float
>606	CallExpression	float ( windowWidth )
>607	ArgumentList	windowWidth
>608	Argument	windowWidth
>609	Identifier	windowWidth
>610	Callee	float
>611	Identifier	float
>612	Identifier	pw
>613	Identifier	pw
>614	IdentifierDeclType	const float
>615	IdentifierDeclStatement	 
>616	IdentifierDecl	height2 = float ( height ) / 2
>617	AssignmentExpr	height2 = float ( height ) / 2
>618	MultiplicativeExpression	float ( height ) / 2
>619	PrimaryExpression	2
>620	CallExpression	float ( height )
>621	ArgumentList	height
>622	Argument	height
>623	Identifier	height
>624	Callee	float
>625	Identifier	float
>626	Identifier	height2
>627	Identifier	height2
>628	IdentifierDeclType	float
>629	IdentifierDeclStatement	 
>630	IdentifierDecl	width2 = float ( width ) / 2
>631	AssignmentExpr	width2 = float ( width ) / 2
>632	MultiplicativeExpression	float ( width ) / 2
>633	PrimaryExpression	2
>634	CallExpression	float ( width )
>635	ArgumentList	width
>636	Argument	width
>637	Identifier	width
>638	Callee	float
>639	Identifier	float
>640	Identifier	width2
>641	Identifier	width2
>642	IdentifierDeclType	float
>643	IfStatement	if ( alpha . x == 0 )
>644	ReturnStatement	 
>645	Condition	 
>646	EqualityExpression	alpha . x == 0
>647	PrimaryExpression	0
>648	MemberAccess	alpha . x
>649	Identifier	x
>650	Identifier	alpha
<3=5,4
<5=18,14,10,6
<6=7
<7=9,8
<10=11
<11=13,12
<14=15
<15=17,16
<18=19
<19=21,20
<21=22
<30=33,32,31
<33=157,148,139,130,126,122,115,108,97,88,77,66,43,34
<34=35
<35=41,36
<36=39,37
<37=38
<39=40
<41=42
<43=44
<44=64,45
<45=62,60,58,56,54,52,50,48,46
<46=47
<48=49
<50=51
<52=53
<54=55
<56=57
<58=59
<60=61
<62=63
<64=65
<66=67
<67=75,68
<68=73,71,69
<69=70
<71=72
<73=74
<75=76
<77=78
<78=86,79
<79=84,82,80
<80=81
<82=83
<84=85
<86=87
<88=89
<89=95,90
<90=93,91
<91=92
<93=94
<95=96
<97=98
<98=106,99
<99=104,100
<100=101
<101=103,102
<104=105
<106=107
<108=109
<109=113,110
<110=111
<111=112
<113=114
<115=116
<116=120,117
<117=118
<118=119
<120=121
<122=123
<123=125,124
<126=127
<127=129,128
<130=131
<131=138,132
<132=134,133
<134=135
<135=137,136
<139=140
<140=147,141
<141=143,142
<143=144
<144=146,145
<148=149
<149=156,150
<150=152,151
<152=153
<153=155,154
<157=158
<158=165,159
<159=161,160
<161=162
<162=164,163
<190=193,192,191
<193=194
<194=211,195
<195=200,196
<196=197
<197=199,198
<200=201
<201=209,202
<202=207,203
<203=204
<204=206,205
<207=208
<209=210
<211=212
<218=221,220,219
<221=227,222
<222=223
<223=225,224
<225=226
<227=228
<228=230,229
<230=231
<235=238,237,236
<238=244,239
<239=240
<240=242,241
<242=243
<244=245
<245=247,246
<247=248
<252=255,254,253
<255=306,263,256
<256=257
<257=259,258
<259=260
<260=262,261
<263=304,264
<264=295,274,265
<265=266
<266=272,267
<267=270,268
<268=269
<270=271
<272=273
<274=275
<275=293,276
<276=291,289,287,285,283,281,279,277
<277=278
<279=280
<281=282
<283=284
<285=286
<287=288
<289=290
<291=292
<293=294
<295=296
<296=302,297
<297=300,298
<298=299
<300=301
<302=303
<304=305
<306=307
<307=309,308
<309=310
<310=312,311
<321=327,326,322
<322=323
<323=325,324
<327=335,328
<328=329
<329=333,330
<330=331
<331=332
<333=334
<335=336
<336=338,337
<338=339
<344=350,349,345
<345=346
<346=348,347
<350=366,362,351
<351=352
<352=358,353
<353=356,354
<354=355
<356=357
<358=359
<359=361,360
<362=363
<363=365,364
<366=367
<367=369,368
<369=370
<370=372,371
<379=382,381,380
<382=383
<383=384
<384=386,385
<386=387
<387=389,388
<395=398,397,396
<398=643,629,615,596,577,568,545,536,512,505,496,483,474,463,454,441,432,417,412,403,399
<399=400
<400=402,401
<403=404
<404=410,405
<405=408,406
<406=407
<408=409
<410=411
<412=413
<413=415,414
<415=416
<417=418
<418=430,419
<419=426,422,420
<420=421
<422=423
<423=425,424
<426=427
<427=429,428
<430=431
<432=433
<433=439,434
<434=437,435
<435=436
<437=438
<439=440
<441=442
<442=452,443
<443=450,446,444
<444=445
<446=447
<447=449,448
<450=451
<452=453
<454=455
<455=461,456
<456=459,457
<457=458
<459=460
<461=462
<463=464
<464=472,465
<465=470,468,466
<466=467
<468=469
<470=471
<472=473
<474=475
<475=481,476
<476=479,477
<477=478
<479=480
<481=482
<483=484
<484=494,485
<485=490,488,486
<486=487
<488=489
<490=491
<491=493,492
<494=495
<496=497
<497=503,498
<498=501,499
<499=500
<501=502
<503=504
<505=506
<506=510,507
<507=508
<508=509
<510=511
<512=525,513
<513=514
<514=515
<515=523,516
<516=521,519,517
<517=518
<519=520
<521=522
<523=524
<525=526
<526=528,527
<528=534,529
<529=530
<530=531
<531=533,532
<534=535
<536=537
<537=544,543,538
<538=542,539
<539=541,540
<545=546
<546=567,566,547
<547=565,548
<548=557,549
<549=555,550
<550=551
<551=552
<552=554,553
<555=556
<557=563,558
<558=559
<559=560
<560=562,561
<563=564
<568=569
<569=575,570
<570=573,571
<571=572
<573=574
<575=576
<577=578
<578=595,594,579
<579=593,580
<580=587,581
<581=585,582
<582=583
<583=584
<585=586
<587=591,588
<588=589
<589=590
<591=592
<596=597
<597=614,613,598
<598=612,599
<599=606,600
<600=604,601
<601=602
<602=603
<604=605
<606=610,607
<607=608
<608=609
<610=611
<615=616
<616=628,627,617
<617=626,618
<618=620,619
<620=624,621
<621=622
<622=623
<624=625
<629=630
<630=642,641,631
<631=640,632
<632=634,633
<634=638,635
<635=636
<636=637
<638=639
<643=645,644
<645=646
<646=648,647
<648=650,649
