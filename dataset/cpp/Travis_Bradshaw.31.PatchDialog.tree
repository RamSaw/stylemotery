>7	FunctionDef	CPatchDialog 
>8	ParameterList	CWnd * pParent
>9	Parameter	 
>10	Identifier	pParent
>11	ParameterType	CWnd *
>12	CompoundStatement	 
>13	ExpressionStatement	 
>14	AssignmentExpr	m_Patch = NULL
>15	Identifier	NULL
>16	Identifier	m_Patch
>17	ExpressionStatement	 
>18	AssignmentExpr	m_fVShift = 0.05f
>19	PrimaryExpression	0.05f
>20	Identifier	m_fVShift
>21	ExpressionStatement	 
>22	AssignmentExpr	m_fVScale = 0.05f
>23	PrimaryExpression	0.05f
>24	Identifier	m_fVScale
>25	ExpressionStatement	 
>26	AssignmentExpr	m_fRotate = 45
>27	PrimaryExpression	45
>28	Identifier	m_fRotate
>29	ExpressionStatement	 
>30	AssignmentExpr	m_fHShift = 0.05f
>31	PrimaryExpression	0.05f
>32	Identifier	m_fHShift
>33	ExpressionStatement	 
>34	AssignmentExpr	m_fHScale = 0.05f
>35	PrimaryExpression	0.05f
>36	Identifier	m_fHScale
>37	ExpressionStatement	 
>38	AssignmentExpr	m_fZ = 0.0f
>39	PrimaryExpression	0.0f
>40	Identifier	m_fZ
>41	ExpressionStatement	 
>42	AssignmentExpr	m_fY = 0.0f
>43	PrimaryExpression	0.0f
>44	Identifier	m_fY
>45	ExpressionStatement	 
>46	AssignmentExpr	m_fX = 0.0f
>47	PrimaryExpression	0.0f
>48	Identifier	m_fX
>49	ExpressionStatement	 
>50	AssignmentExpr	m_fT = 0.0f
>51	PrimaryExpression	0.0f
>52	Identifier	m_fT
>53	ExpressionStatement	 
>54	AssignmentExpr	m_fS = 0.0f
>55	PrimaryExpression	0.0f
>56	Identifier	m_fS
>57	ExpressionStatement	 
>58	AssignmentExpr	m_strName = _T ( \"\" )
>59	CallExpression	_T ( \"\" )
>60	ArgumentList	\"\"
>61	Argument	\"\"
>62	PrimaryExpression	\"\"
>63	Callee	_T
>64	Identifier	_T
>65	Identifier	m_strName
>84	FunctionDef	CPatchDialog 
>85	ParameterList	CDataExchange * pDX
>86	Parameter	 
>87	Identifier	pDX
>88	ParameterType	CDataExchange *
>89	ReturnType	void
>90	CompoundStatement	 
>91	ExpressionStatement	 
>92	CallExpression	DDX_Text ( pDX , IDC_VSHIFT , m_fVShift )
>93	ArgumentList	pDX
>94	Argument	m_fVShift
>95	Identifier	m_fVShift
>96	Argument	IDC_VSHIFT
>97	Identifier	IDC_VSHIFT
>98	Argument	pDX
>99	Identifier	pDX
>100	Callee	DDX_Text
>101	Identifier	DDX_Text
>102	ExpressionStatement	 
>103	CallExpression	DDX_Text ( pDX , IDC_VSCALE , m_fVScale )
>104	ArgumentList	pDX
>105	Argument	m_fVScale
>106	Identifier	m_fVScale
>107	Argument	IDC_VSCALE
>108	Identifier	IDC_VSCALE
>109	Argument	pDX
>110	Identifier	pDX
>111	Callee	DDX_Text
>112	Identifier	DDX_Text
>113	ExpressionStatement	 
>114	CallExpression	DDX_Text ( pDX , IDC_ROTATE , m_fRotate )
>115	ArgumentList	pDX
>116	Argument	m_fRotate
>117	Identifier	m_fRotate
>118	Argument	IDC_ROTATE
>119	Identifier	IDC_ROTATE
>120	Argument	pDX
>121	Identifier	pDX
>122	Callee	DDX_Text
>123	Identifier	DDX_Text
>124	ExpressionStatement	 
>125	CallExpression	DDX_Text ( pDX , IDC_HSHIFT , m_fHShift )
>126	ArgumentList	pDX
>127	Argument	m_fHShift
>128	Identifier	m_fHShift
>129	Argument	IDC_HSHIFT
>130	Identifier	IDC_HSHIFT
>131	Argument	pDX
>132	Identifier	pDX
>133	Callee	DDX_Text
>134	Identifier	DDX_Text
>135	ExpressionStatement	 
>136	CallExpression	DDX_Text ( pDX , IDC_HSCALE , m_fHScale )
>137	ArgumentList	pDX
>138	Argument	m_fHScale
>139	Identifier	m_fHScale
>140	Argument	IDC_HSCALE
>141	Identifier	IDC_HSCALE
>142	Argument	pDX
>143	Identifier	pDX
>144	Callee	DDX_Text
>145	Identifier	DDX_Text
>146	ExpressionStatement	 
>147	CallExpression	DDX_Text ( pDX , IDC_EDIT_Z , m_fZ )
>148	ArgumentList	pDX
>149	Argument	m_fZ
>150	Identifier	m_fZ
>151	Argument	IDC_EDIT_Z
>152	Identifier	IDC_EDIT_Z
>153	Argument	pDX
>154	Identifier	pDX
>155	Callee	DDX_Text
>156	Identifier	DDX_Text
>157	ExpressionStatement	 
>158	CallExpression	DDX_Text ( pDX , IDC_EDIT_Y , m_fY )
>159	ArgumentList	pDX
>160	Argument	m_fY
>161	Identifier	m_fY
>162	Argument	IDC_EDIT_Y
>163	Identifier	IDC_EDIT_Y
>164	Argument	pDX
>165	Identifier	pDX
>166	Callee	DDX_Text
>167	Identifier	DDX_Text
>168	ExpressionStatement	 
>169	CallExpression	DDX_Text ( pDX , IDC_EDIT_X , m_fX )
>170	ArgumentList	pDX
>171	Argument	m_fX
>172	Identifier	m_fX
>173	Argument	IDC_EDIT_X
>174	Identifier	IDC_EDIT_X
>175	Argument	pDX
>176	Identifier	pDX
>177	Callee	DDX_Text
>178	Identifier	DDX_Text
>179	ExpressionStatement	 
>180	CallExpression	DDX_Text ( pDX , IDC_EDIT_T , m_fT )
>181	ArgumentList	pDX
>182	Argument	m_fT
>183	Identifier	m_fT
>184	Argument	IDC_EDIT_T
>185	Identifier	IDC_EDIT_T
>186	Argument	pDX
>187	Identifier	pDX
>188	Callee	DDX_Text
>189	Identifier	DDX_Text
>190	ExpressionStatement	 
>191	CallExpression	DDX_Text ( pDX , IDC_EDIT_S , m_fS )
>192	ArgumentList	pDX
>193	Argument	m_fS
>194	Identifier	m_fS
>195	Argument	IDC_EDIT_S
>196	Identifier	IDC_EDIT_S
>197	Argument	pDX
>198	Identifier	pDX
>199	Callee	DDX_Text
>200	Identifier	DDX_Text
>201	ExpressionStatement	 
>202	CallExpression	DDX_Text ( pDX , IDC_EDIT_NAME , m_strName )
>203	ArgumentList	pDX
>204	Argument	m_strName
>205	Identifier	m_strName
>206	Argument	IDC_EDIT_NAME
>207	Identifier	IDC_EDIT_NAME
>208	Argument	pDX
>209	Identifier	pDX
>210	Callee	DDX_Text
>211	Identifier	DDX_Text
>212	ExpressionStatement	 
>213	CallExpression	DDX_Control ( pDX , IDC_COMBO_COL , m_wndCols )
>214	ArgumentList	pDX
>215	Argument	m_wndCols
>216	Identifier	m_wndCols
>217	Argument	IDC_COMBO_COL
>218	Identifier	IDC_COMBO_COL
>219	Argument	pDX
>220	Identifier	pDX
>221	Callee	DDX_Control
>222	Identifier	DDX_Control
>223	ExpressionStatement	 
>224	CallExpression	DDX_Control ( pDX , IDC_COMBO_ROW , m_wndRows )
>225	ArgumentList	pDX
>226	Argument	m_wndRows
>227	Identifier	m_wndRows
>228	Argument	IDC_COMBO_ROW
>229	Identifier	IDC_COMBO_ROW
>230	Argument	pDX
>231	Identifier	pDX
>232	Callee	DDX_Control
>233	Identifier	DDX_Control
>234	ExpressionStatement	 
>235	CallExpression	DDX_Control ( pDX , IDC_COMBO_TYPE , m_wndType )
>236	ArgumentList	pDX
>237	Argument	m_wndType
>238	Identifier	m_wndType
>239	Argument	IDC_COMBO_TYPE
>240	Identifier	IDC_COMBO_TYPE
>241	Argument	pDX
>242	Identifier	pDX
>243	Callee	DDX_Control
>244	Identifier	DDX_Control
>245	ExpressionStatement	 
>246	CallExpression	DDX_Control ( pDX , IDC_SPIN_HSCALE , m_wndHScale )
>247	ArgumentList	pDX
>248	Argument	m_wndHScale
>249	Identifier	m_wndHScale
>250	Argument	IDC_SPIN_HSCALE
>251	Identifier	IDC_SPIN_HSCALE
>252	Argument	pDX
>253	Identifier	pDX
>254	Callee	DDX_Control
>255	Identifier	DDX_Control
>256	ExpressionStatement	 
>257	CallExpression	DDX_Control ( pDX , IDC_SPIN_HSHIFT , m_wndHShift )
>258	ArgumentList	pDX
>259	Argument	m_wndHShift
>260	Identifier	m_wndHShift
>261	Argument	IDC_SPIN_HSHIFT
>262	Identifier	IDC_SPIN_HSHIFT
>263	Argument	pDX
>264	Identifier	pDX
>265	Callee	DDX_Control
>266	Identifier	DDX_Control
>267	ExpressionStatement	 
>268	CallExpression	DDX_Control ( pDX , IDC_SPIN_ROTATE , m_wndRotate )
>269	ArgumentList	pDX
>270	Argument	m_wndRotate
>271	Identifier	m_wndRotate
>272	Argument	IDC_SPIN_ROTATE
>273	Identifier	IDC_SPIN_ROTATE
>274	Argument	pDX
>275	Identifier	pDX
>276	Callee	DDX_Control
>277	Identifier	DDX_Control
>278	ExpressionStatement	 
>279	CallExpression	DDX_Control ( pDX , IDC_SPIN_VSCALE , m_wndVScale )
>280	ArgumentList	pDX
>281	Argument	m_wndVScale
>282	Identifier	m_wndVScale
>283	Argument	IDC_SPIN_VSCALE
>284	Identifier	IDC_SPIN_VSCALE
>285	Argument	pDX
>286	Identifier	pDX
>287	Callee	DDX_Control
>288	Identifier	DDX_Control
>289	ExpressionStatement	 
>290	CallExpression	DDX_Control ( pDX , IDC_SPIN_VSHIFT , m_wndVShift )
>291	ArgumentList	pDX
>292	Argument	m_wndVShift
>293	Identifier	m_wndVShift
>294	Argument	IDC_SPIN_VSHIFT
>295	Identifier	IDC_SPIN_VSHIFT
>296	Argument	pDX
>297	Identifier	pDX
>298	Callee	DDX_Control
>299	Identifier	DDX_Control
>300	ExpressionStatement	 
>301	CallExpression	CDialog 
>302	ArgumentList	pDX
>303	Argument	pDX
>304	Identifier	pDX
>305	Callee	CDialog 
>306	Identifier	CDialog 
>349	FunctionDef	CPatchDialog 
>350	ParameterList	 
>351	ReturnType	void
>352	CompoundStatement	 
>353	ExpressionStatement	 
>354	CallExpression	Sys_UpdateWindows ( W_ALL )
>355	ArgumentList	W_ALL
>356	Argument	W_ALL
>357	Identifier	W_ALL
>358	Callee	Sys_UpdateWindows
>359	Identifier	Sys_UpdateWindows
>360	ExpressionStatement	 
>361	CallExpression	Patch_NaturalizeSelected ( true )
>362	ArgumentList	true
>363	Argument	true
>364	Identifier	true
>365	Callee	Patch_NaturalizeSelected
>366	Identifier	Patch_NaturalizeSelected
>372	FunctionDef	CPatchDialog 
>373	ParameterList	 
>374	ReturnType	void
>375	CompoundStatement	 
>376	ExpressionStatement	 
>377	CallExpression	Sys_UpdateWindows ( W_ALL )
>378	ArgumentList	W_ALL
>379	Argument	W_ALL
>380	Identifier	W_ALL
>381	Callee	Sys_UpdateWindows
>382	Identifier	Sys_UpdateWindows
>383	ExpressionStatement	 
>384	CallExpression	Patch_FitTexturing ( )
>385	ArgumentList	 
>386	Callee	Patch_FitTexturing
>387	Identifier	Patch_FitTexturing
>392	FunctionDef	CPatchDialog 
>393	ParameterList	 
>394	ReturnType	void
>395	CompoundStatement	 
>396	ExpressionStatement	 
>397	CallExpression	Sys_UpdateWindows ( W_ALL )
>398	ArgumentList	W_ALL
>399	Argument	W_ALL
>400	Identifier	W_ALL
>401	Callee	Sys_UpdateWindows
>402	Identifier	Sys_UpdateWindows
>403	ExpressionStatement	 
>404	CallExpression	Patch_NaturalizeSelected ( )
>405	ArgumentList	 
>406	Callee	Patch_NaturalizeSelected
>407	Identifier	Patch_NaturalizeSelected
>412	FunctionDef	CPatchDialog 
>413	ParameterList	 
>414	ReturnType	void
>415	CompoundStatement	 
>416	ExpressionStatement	 
>417	CallExpression	Sys_UpdateWindows ( W_ALL )
>418	ArgumentList	W_ALL
>419	Argument	W_ALL
>420	Identifier	W_ALL
>421	Callee	Sys_UpdateWindows
>422	Identifier	Sys_UpdateWindows
>423	IfStatement	if ( dlg . DoModal ( ) == IDOK )
>424	CompoundStatement	 
>425	ExpressionStatement	 
>426	CallExpression	Patch_ResetTexturing ( dlg . m_fX , dlg . m_fY )
>427	ArgumentList	dlg . m_fX
>428	Argument	dlg . m_fY
>429	MemberAccess	dlg . m_fY
>430	Identifier	m_fY
>431	Identifier	dlg
>432	Argument	dlg . m_fX
>433	MemberAccess	dlg . m_fX
>434	Identifier	m_fX
>435	Identifier	dlg
>436	Callee	Patch_ResetTexturing
>437	Identifier	Patch_ResetTexturing
>438	Condition	 
>439	EqualityExpression	dlg . DoModal ( ) == IDOK
>440	Identifier	IDOK
>441	CallExpression	dlg . DoModal ( )
>442	ArgumentList	 
>443	Callee	dlg . DoModal
>444	MemberAccess	dlg . DoModal
>445	Identifier	DoModal
>446	Identifier	dlg
>447	IdentifierDeclStatement	 
>448	IdentifierDecl	dlg
>449	Identifier	dlg
>450	IdentifierDeclType	CTextureLayout
>460	FunctionDef	CPatchDialog 
>461	ParameterList	 
>462	ReturnType	void
>463	CompoundStatement	 
>464	ExpressionStatement	 
>465	CallExpression	UpdateRowColInfo ( )
>466	ArgumentList	 
>467	Callee	UpdateRowColInfo
>468	Identifier	UpdateRowColInfo
>472	FunctionDef	CPatchDialog 
>473	ParameterList	 
>474	ReturnType	void
>475	CompoundStatement	 
>476	ExpressionStatement	 
>477	CallExpression	UpdateRowColInfo ( )
>478	ArgumentList	 
>479	Callee	UpdateRowColInfo
>480	Identifier	UpdateRowColInfo
>484	FunctionDef	CPatchDialog 
>485	ParameterList	 
>486	ReturnType	void
>487	CompoundStatement	 
>491	FunctionDef	CPatchDialog 
>492	ParameterList	 
>493	ReturnType	void
>494	CompoundStatement	 
>495	ExpressionStatement	 
>496	CallExpression	CDialog 
>497	ArgumentList	 
>498	Callee	CDialog 
>499	Identifier	CDialog 
>500	ExpressionStatement	 
>501	AssignmentExpr	m_Patch = NULL
>502	Identifier	NULL
>503	Identifier	m_Patch
>509	FunctionDef	CPatchDialog 
>510	ParameterList	NMHDR * pNMHDR , LRESULT * pResult
>511	Parameter	 
>512	Identifier	pResult
>513	ParameterType	LRESULT *
>514	Parameter	 
>515	Identifier	pNMHDR
>516	ParameterType	NMHDR *
>517	ReturnType	void
>518	CompoundStatement	 
>519	ExpressionStatement	 
>520	AssignmentExpr	* pResult = 0
>521	PrimaryExpression	0
>522	UnaryOp	* pResult
>523	Identifier	pResult
>524	UnaryOperator	*
>525	ExpressionStatement	 
>526	CallExpression	UpdateSpinners ( ( pNMUpDown -> iDelta > 0 ) , pNMUpDown -> hdr . idFrom )
>527	ArgumentList	pNMUpDown -> iDelta > 0
>528	Argument	pNMUpDown -> hdr . idFrom
>529	MemberAccess	pNMUpDown -> hdr . idFrom
>530	Identifier	idFrom
>531	PtrMemberAccess	pNMUpDown -> hdr
>532	Identifier	hdr
>533	Identifier	pNMUpDown
>534	Argument	pNMUpDown -> iDelta > 0
>535	RelationalExpression	pNMUpDown -> iDelta > 0
>536	PrimaryExpression	0
>537	PtrMemberAccess	pNMUpDown -> iDelta
>538	Identifier	iDelta
>539	Identifier	pNMUpDown
>540	Callee	UpdateSpinners
>541	Identifier	UpdateSpinners
>542	IdentifierDeclStatement	 
>543	IdentifierDecl	* pNMUpDown = ( NM_UPDOWN * ) pNMHDR
>544	AssignmentExpr	* pNMUpDown = ( NM_UPDOWN * ) pNMHDR
>545	CastExpression	( NM_UPDOWN * ) pNMHDR
>546	Identifier	pNMHDR
>547	CastTarget	NM_UPDOWN *
>548	Identifier	pNMUpDown
>549	Identifier	pNMUpDown
>550	IdentifierDeclType	NM_UPDOWN *
>562	FunctionDef	CPatchDialog 
>563	ParameterList	 
>564	ReturnType	BOOL
>565	CompoundStatement	 
>566	ReturnStatement	 
>567	Identifier	TRUE
>568	ExpressionStatement	 
>569	CallExpression	GetPatchInfo ( )
>570	ArgumentList	 
>571	Callee	GetPatchInfo
>572	Identifier	GetPatchInfo
>573	ExpressionStatement	 
>574	CallExpression	m_wndRotate . SetRange ( 0 , 1000 )
>575	ArgumentList	0
>576	Argument	1000
>577	PrimaryExpression	1000
>578	Argument	0
>579	PrimaryExpression	0
>580	Callee	m_wndRotate . SetRange
>581	MemberAccess	m_wndRotate . SetRange
>582	Identifier	SetRange
>583	Identifier	m_wndRotate
>584	ExpressionStatement	 
>585	CallExpression	m_wndVShift . SetRange ( 0 , 1000 )
>586	ArgumentList	0
>587	Argument	1000
>588	PrimaryExpression	1000
>589	Argument	0
>590	PrimaryExpression	0
>591	Callee	m_wndVShift . SetRange
>592	MemberAccess	m_wndVShift . SetRange
>593	Identifier	SetRange
>594	Identifier	m_wndVShift
>595	ExpressionStatement	 
>596	CallExpression	m_wndHShift . SetRange ( 0 , 1000 )
>597	ArgumentList	0
>598	Argument	1000
>599	PrimaryExpression	1000
>600	Argument	0
>601	PrimaryExpression	0
>602	Callee	m_wndHShift . SetRange
>603	MemberAccess	m_wndHShift . SetRange
>604	Identifier	SetRange
>605	Identifier	m_wndHShift
>606	ExpressionStatement	 
>607	CallExpression	m_wndVScale . SetRange ( 0 , 1000 )
>608	ArgumentList	0
>609	Argument	1000
>610	PrimaryExpression	1000
>611	Argument	0
>612	PrimaryExpression	0
>613	Callee	m_wndVScale . SetRange
>614	MemberAccess	m_wndVScale . SetRange
>615	Identifier	SetRange
>616	Identifier	m_wndVScale
>617	ExpressionStatement	 
>618	CallExpression	m_wndHScale . SetRange ( 0 , 1000 )
>619	ArgumentList	0
>620	Argument	1000
>621	PrimaryExpression	1000
>622	Argument	0
>623	PrimaryExpression	0
>624	Callee	m_wndHScale . SetRange
>625	MemberAccess	m_wndHScale . SetRange
>626	Identifier	SetRange
>627	Identifier	m_wndHScale
>628	ExpressionStatement	 
>629	CallExpression	CDialog 
>630	ArgumentList	 
>631	Callee	CDialog 
>632	Identifier	CDialog 
>642	FunctionDef	CPatchDialog 
>643	ParameterList	 
>644	ReturnType	void
>645	CompoundStatement	 
>646	ExpressionStatement	 
>647	CallExpression	UpdateRowColInfo ( )
>648	ArgumentList	 
>649	Callee	UpdateRowColInfo
>650	Identifier	UpdateRowColInfo
>651	IfStatement	if ( m_Patch != NULL )
>652	CompoundStatement	 
>653	ExpressionStatement	 
>654	CallExpression	m_wndCols . SetCurSel ( 0 )
>655	ArgumentList	0
>656	Argument	0
>657	PrimaryExpression	0
>658	Callee	m_wndCols . SetCurSel
>659	MemberAccess	m_wndCols . SetCurSel
>660	Identifier	SetCurSel
>661	Identifier	m_wndCols
>662	ForStatement	for ( i = 0 ; i < m_Patch -> width ; i ++ )
>663	CompoundStatement	 
>664	ExpressionStatement	 
>665	CallExpression	m_wndCols . AddString ( str )
>666	ArgumentList	str
>667	Argument	str
>668	Identifier	str
>669	Callee	m_wndCols . AddString
>670	MemberAccess	m_wndCols . AddString
>671	Identifier	AddString
>672	Identifier	m_wndCols
>673	ExpressionStatement	 
>674	CallExpression	str . Format ( \"%i\" , i )
>675	ArgumentList	\"%i\"
>676	Argument	i
>677	Identifier	i
>678	Argument	\"%i\"
>679	PrimaryExpression	\"%i\"
>680	Callee	str . Format
>681	MemberAccess	str . Format
>682	Identifier	Format
>683	Identifier	str
>684	IncDecOp	 
>685	IncDec	++
>686	Identifier	i
>687	Condition	 
>688	RelationalExpression	i < m_Patch -> width
>689	PtrMemberAccess	m_Patch -> width
>690	Identifier	width
>691	Identifier	m_Patch
>692	Identifier	i
>693	ForInit	 
>694	AssignmentExpr	i = 0
>695	PrimaryExpression	0
>696	Identifier	i
>697	ExpressionStatement	 
>698	CallExpression	m_wndCols . ResetContent ( )
>699	ArgumentList	 
>700	Callee	m_wndCols . ResetContent
>701	MemberAccess	m_wndCols . ResetContent
>702	Identifier	ResetContent
>703	Identifier	m_wndCols
>704	ExpressionStatement	 
>705	CallExpression	m_wndRows . SetCurSel ( 0 )
>706	ArgumentList	0
>707	Argument	0
>708	PrimaryExpression	0
>709	Callee	m_wndRows . SetCurSel
>710	MemberAccess	m_wndRows . SetCurSel
>711	Identifier	SetCurSel
>712	Identifier	m_wndRows
>713	ForStatement	for ( i = 0 ; i < m_Patch -> height ; i ++ )
>714	CompoundStatement	 
>715	ExpressionStatement	 
>716	CallExpression	m_wndRows . AddString ( str )
>717	ArgumentList	str
>718	Argument	str
>719	Identifier	str
>720	Callee	m_wndRows . AddString
>721	MemberAccess	m_wndRows . AddString
>722	Identifier	AddString
>723	Identifier	m_wndRows
>724	ExpressionStatement	 
>725	CallExpression	str . Format ( \"%i\" , i )
>726	ArgumentList	\"%i\"
>727	Argument	i
>728	Identifier	i
>729	Argument	\"%i\"
>730	PrimaryExpression	\"%i\"
>731	Callee	str . Format
>732	MemberAccess	str . Format
>733	Identifier	Format
>734	Identifier	str
>735	IncDecOp	 
>736	IncDec	++
>737	Identifier	i
>738	Condition	 
>739	RelationalExpression	i < m_Patch -> height
>740	PtrMemberAccess	m_Patch -> height
>741	Identifier	height
>742	Identifier	m_Patch
>743	Identifier	i
>744	ForInit	 
>745	AssignmentExpr	i = 0
>746	PrimaryExpression	0
>747	Identifier	i
>748	ExpressionStatement	 
>749	CallExpression	m_wndRows . ResetContent ( )
>750	ArgumentList	 
>751	Callee	m_wndRows . ResetContent
>752	MemberAccess	m_wndRows . ResetContent
>753	Identifier	ResetContent
>754	Identifier	m_wndRows
>755	IdentifierDeclStatement	 
>756	IdentifierDecl	i
>757	Identifier	i
>758	IdentifierDeclType	int
>759	IdentifierDeclStatement	 
>760	IdentifierDecl	str
>761	Identifier	str
>762	IdentifierDeclType	CString
>763	Condition	 
>764	EqualityExpression	m_Patch != NULL
>765	Identifier	NULL
>766	Identifier	m_Patch
>767	ExpressionStatement	 
>768	AssignmentExpr	m_Patch = SinglePatchSelected ( )
>769	CallExpression	SinglePatchSelected ( )
>770	ArgumentList	 
>771	Callee	SinglePatchSelected
>772	Identifier	SinglePatchSelected
>773	Identifier	m_Patch
>787	FunctionDef	CPatchDialog 
>788	ParameterList	 
>789	ReturnType	void
>790	CompoundStatement	 
>794	FunctionDef	DoPatchInspector ()
>795	ParameterList	 
>796	ReturnType	void
>797	CompoundStatement	 
>798	ExpressionStatement	 
>799	CallExpression	g_PatchDialog . GetPatchInfo ( )
>800	ArgumentList	 
>801	Callee	g_PatchDialog . GetPatchInfo
>802	MemberAccess	g_PatchDialog . GetPatchInfo
>803	Identifier	GetPatchInfo
>804	Identifier	g_PatchDialog
>805	ExpressionStatement	 
>806	CallExpression	g_PatchDialog . ShowWindow ( SW_SHOW )
>807	ArgumentList	SW_SHOW
>808	Argument	SW_SHOW
>809	Identifier	SW_SHOW
>810	Callee	g_PatchDialog . ShowWindow
>811	MemberAccess	g_PatchDialog . ShowWindow
>812	Identifier	ShowWindow
>813	Identifier	g_PatchDialog
>814	IfStatement	if ( g_PatchDialog . GetSafeHwnd ( ) == NULL )
>815	CompoundStatement	 
>816	IfStatement	if ( LoadRegistryInfo ( \"Radiant
>817	CompoundStatement	 
>818	ExpressionStatement	 
>819	CallExpression	g_PatchDialog . SetWindowPos ( NULL , rct . left , rct . top , 0 , 0 , SWP_NOSIZE )
>820	ArgumentList	NULL
>821	Argument	SWP_NOSIZE
>822	Identifier	SWP_NOSIZE
>823	Argument	0
>824	PrimaryExpression	0
>825	Argument	0
>826	PrimaryExpression	0
>827	Argument	rct . top
>828	MemberAccess	rct . top
>829	Identifier	top
>830	Identifier	rct
>831	Argument	rct . left
>832	MemberAccess	rct . left
>833	Identifier	left
>834	Identifier	rct
>835	Argument	NULL
>836	Identifier	NULL
>837	Callee	g_PatchDialog . SetWindowPos
>838	MemberAccess	g_PatchDialog . SetWindowPos
>839	Identifier	SetWindowPos
>840	Identifier	g_PatchDialog
>841	Condition	 
>842	CallExpression	LoadRegistryInfo ( \"Radiant
>843	ArgumentList	\"Radiant
>844	Argument	& lSize
>845	UnaryOp	& lSize
>846	Identifier	lSize
>847	UnaryOperator	&
>848	Argument	& rct
>849	UnaryOp	& rct
>850	Identifier	rct
>851	UnaryOperator	&
>852	Argument	\"Radiant
>853	PrimaryExpression	\"Radiant
>854	Callee	LoadRegistryInfo
>855	Identifier	LoadRegistryInfo
>856	IdentifierDeclStatement	 
>857	IdentifierDecl	lSize = sizeof ( rct )
>858	AssignmentExpr	lSize = sizeof ( rct )
>859	SizeofExpr	sizeof ( rct )
>860	SizeofOperand	rct
>861	Sizeof	sizeof
>862	Identifier	lSize
>863	Identifier	lSize
>864	IdentifierDeclType	LONG
>865	IdentifierDeclStatement	 
>866	IdentifierDecl	rct
>867	Identifier	rct
>868	IdentifierDeclType	CRect
>869	ExpressionStatement	 
>870	CallExpression	g_PatchDialog . Create ( IDD_DIALOG_PATCH )
>871	ArgumentList	IDD_DIALOG_PATCH
>872	Argument	IDD_DIALOG_PATCH
>873	Identifier	IDD_DIALOG_PATCH
>874	Callee	g_PatchDialog . Create
>875	MemberAccess	g_PatchDialog . Create
>876	Identifier	Create
>877	Identifier	g_PatchDialog
>878	Condition	 
>879	EqualityExpression	g_PatchDialog . GetSafeHwnd ( ) == NULL
>880	Identifier	NULL
>881	CallExpression	g_PatchDialog . GetSafeHwnd ( )
>882	ArgumentList	 
>883	Callee	g_PatchDialog . GetSafeHwnd
>884	MemberAccess	g_PatchDialog . GetSafeHwnd
>885	Identifier	GetSafeHwnd
>886	Identifier	g_PatchDialog
>903	FunctionDef	UpdatePatchInspector ()
>904	ParameterList	 
>905	ReturnType	void
>906	CompoundStatement	 
>907	IfStatement	if ( g_PatchDialog . GetSafeHwnd ( ) != NULL )
>908	CompoundStatement	 
>909	ExpressionStatement	 
>910	CallExpression	g_PatchDialog . UpdateInfo ( )
>911	ArgumentList	 
>912	Callee	g_PatchDialog . UpdateInfo
>913	MemberAccess	g_PatchDialog . UpdateInfo
>914	Identifier	UpdateInfo
>915	Identifier	g_PatchDialog
>916	Condition	 
>917	EqualityExpression	g_PatchDialog . GetSafeHwnd ( ) != NULL
>918	Identifier	NULL
>919	CallExpression	g_PatchDialog . GetSafeHwnd ( )
>920	ArgumentList	 
>921	Callee	g_PatchDialog . GetSafeHwnd
>922	MemberAccess	g_PatchDialog . GetSafeHwnd
>923	Identifier	GetSafeHwnd
>924	Identifier	g_PatchDialog
>931	FunctionDef	CPatchDialog 
>932	ParameterList	 
>933	ReturnType	void
>934	CompoundStatement	 
>935	ExpressionStatement	 
>936	CallExpression	CDialog 
>937	ArgumentList	 
>938	Callee	CDialog 
>939	Identifier	CDialog 
>940	IfStatement	if ( GetSafeHwnd ( ) )
>941	CompoundStatement	 
>942	ExpressionStatement	 
>943	CallExpression	SaveRegistryInfo ( \"Radiant
>944	ArgumentList	\"Radiant
>945	Argument	sizeof ( rct )
>946	SizeofExpr	sizeof ( rct )
>947	SizeofOperand	rct
>948	Sizeof	sizeof
>949	Argument	& rct
>950	UnaryOp	& rct
>951	Identifier	rct
>952	UnaryOperator	&
>953	Argument	\"Radiant
>954	PrimaryExpression	\"Radiant
>955	Callee	SaveRegistryInfo
>956	Identifier	SaveRegistryInfo
>957	ExpressionStatement	 
>958	CallExpression	GetWindowRect ( rct )
>959	ArgumentList	rct
>960	Argument	rct
>961	Identifier	rct
>962	Callee	GetWindowRect
>963	Identifier	GetWindowRect
>964	IdentifierDeclStatement	 
>965	IdentifierDecl	rct
>966	Identifier	rct
>967	IdentifierDeclType	CRect
>968	Condition	 
>969	CallExpression	GetSafeHwnd ( )
>970	ArgumentList	 
>971	Callee	GetSafeHwnd
>972	Identifier	GetSafeHwnd
>979	FunctionDef	CPatchDialog 
>980	ParameterList	 
>981	ReturnType	void
>982	CompoundStatement	 
>983	ExpressionStatement	 
>984	CallExpression	UpdateData ( FALSE )
>985	ArgumentList	FALSE
>986	Argument	FALSE
>987	Identifier	FALSE
>988	Callee	UpdateData
>989	Identifier	UpdateData
>990	IfStatement	if ( m_Patch != NULL )
>991	CompoundStatement	 
>992	IfStatement	if ( r >= 0 && r < m_Patch -> height && c >= 0 && c < m_Patch -> width )
>993	CompoundStatement	 
>994	ExpressionStatement	 
>995	AssignmentExpr	m_fT = m_Patch -> ctrl [ c ] [ r ] . st [ 1 ]
>996	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ] . st [ 1 ]
>997	PrimaryExpression	1
>998	MemberAccess	m_Patch -> ctrl [ c ] [ r ] . st
>999	Identifier	st
>1000	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ]
>1001	Identifier	r
>1002	ArrayIndexing	m_Patch -> ctrl [ c ]
>1003	Identifier	c
>1004	PtrMemberAccess	m_Patch -> ctrl
>1005	Identifier	ctrl
>1006	Identifier	m_Patch
>1007	Identifier	m_fT
>1008	ExpressionStatement	 
>1009	AssignmentExpr	m_fS = m_Patch -> ctrl [ c ] [ r ] . st [ 0 ]
>1010	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ] . st [ 0 ]
>1011	PrimaryExpression	0
>1012	MemberAccess	m_Patch -> ctrl [ c ] [ r ] . st
>1013	Identifier	st
>1014	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ]
>1015	Identifier	r
>1016	ArrayIndexing	m_Patch -> ctrl [ c ]
>1017	Identifier	c
>1018	PtrMemberAccess	m_Patch -> ctrl
>1019	Identifier	ctrl
>1020	Identifier	m_Patch
>1021	Identifier	m_fS
>1022	ExpressionStatement	 
>1023	AssignmentExpr	m_fZ = m_Patch -> ctrl [ c ] [ r ] . xyz [ 2 ]
>1024	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ] . xyz [ 2 ]
>1025	PrimaryExpression	2
>1026	MemberAccess	m_Patch -> ctrl [ c ] [ r ] . xyz
>1027	Identifier	xyz
>1028	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ]
>1029	Identifier	r
>1030	ArrayIndexing	m_Patch -> ctrl [ c ]
>1031	Identifier	c
>1032	PtrMemberAccess	m_Patch -> ctrl
>1033	Identifier	ctrl
>1034	Identifier	m_Patch
>1035	Identifier	m_fZ
>1036	ExpressionStatement	 
>1037	AssignmentExpr	m_fY = m_Patch -> ctrl [ c ] [ r ] . xyz [ 1 ]
>1038	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ] . xyz [ 1 ]
>1039	PrimaryExpression	1
>1040	MemberAccess	m_Patch -> ctrl [ c ] [ r ] . xyz
>1041	Identifier	xyz
>1042	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ]
>1043	Identifier	r
>1044	ArrayIndexing	m_Patch -> ctrl [ c ]
>1045	Identifier	c
>1046	PtrMemberAccess	m_Patch -> ctrl
>1047	Identifier	ctrl
>1048	Identifier	m_Patch
>1049	Identifier	m_fY
>1050	ExpressionStatement	 
>1051	AssignmentExpr	m_fX = m_Patch -> ctrl [ c ] [ r ] . xyz [ 0 ]
>1052	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ] . xyz [ 0 ]
>1053	PrimaryExpression	0
>1054	MemberAccess	m_Patch -> ctrl [ c ] [ r ] . xyz
>1055	Identifier	xyz
>1056	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ]
>1057	Identifier	r
>1058	ArrayIndexing	m_Patch -> ctrl [ c ]
>1059	Identifier	c
>1060	PtrMemberAccess	m_Patch -> ctrl
>1061	Identifier	ctrl
>1062	Identifier	m_Patch
>1063	Identifier	m_fX
>1064	Condition	 
>1065	AndExpression	r >= 0 && r < m_Patch -> height && c >= 0 && c < m_Patch -> width
>1066	AndExpression	r < m_Patch -> height && c >= 0 && c < m_Patch -> width
>1067	AndExpression	c >= 0 && c < m_Patch -> width
>1068	RelationalExpression	c < m_Patch -> width
>1069	PtrMemberAccess	m_Patch -> width
>1070	Identifier	width
>1071	Identifier	m_Patch
>1072	Identifier	c
>1073	RelationalExpression	c >= 0
>1074	PrimaryExpression	0
>1075	Identifier	c
>1076	RelationalExpression	r < m_Patch -> height
>1077	PtrMemberAccess	m_Patch -> height
>1078	Identifier	height
>1079	Identifier	m_Patch
>1080	Identifier	r
>1081	RelationalExpression	r >= 0
>1082	PrimaryExpression	0
>1083	Identifier	r
>1084	IdentifierDeclStatement	 
>1085	IdentifierDecl	c = m_wndCols . GetCurSel ( )
>1086	AssignmentExpr	c = m_wndCols . GetCurSel ( )
>1087	CallExpression	m_wndCols . GetCurSel ( )
>1088	ArgumentList	 
>1089	Callee	m_wndCols . GetCurSel
>1090	MemberAccess	m_wndCols . GetCurSel
>1091	Identifier	GetCurSel
>1092	Identifier	m_wndCols
>1093	Identifier	c
>1094	Identifier	c
>1095	IdentifierDeclType	int
>1096	IdentifierDeclStatement	 
>1097	IdentifierDecl	r = m_wndRows . GetCurSel ( )
>1098	AssignmentExpr	r = m_wndRows . GetCurSel ( )
>1099	CallExpression	m_wndRows . GetCurSel ( )
>1100	ArgumentList	 
>1101	Callee	m_wndRows . GetCurSel
>1102	MemberAccess	m_wndRows . GetCurSel
>1103	Identifier	GetCurSel
>1104	Identifier	m_wndRows
>1105	Identifier	r
>1106	Identifier	r
>1107	IdentifierDeclType	int
>1108	Condition	 
>1109	EqualityExpression	m_Patch != NULL
>1110	Identifier	NULL
>1111	Identifier	m_Patch
>1112	ExpressionStatement	 
>1113	AssignmentExpr	m_fX = m_fY = m_fZ = m_fS = m_fT = 0.0
>1114	AssignmentExpr	m_fY = m_fZ = m_fS = m_fT = 0.0
>1115	AssignmentExpr	m_fZ = m_fS = m_fT = 0.0
>1116	AssignmentExpr	m_fS = m_fT = 0.0
>1117	AssignmentExpr	m_fT = 0.0
>1118	PrimaryExpression	0.0
>1119	Identifier	m_fT
>1120	Identifier	m_fS
>1121	Identifier	m_fZ
>1122	Identifier	m_fY
>1123	Identifier	m_fX
>1160	FunctionDef	CPatchDialog 
>1161	ParameterList	 
>1162	ReturnType	void
>1163	CompoundStatement	 
>1164	ExpressionStatement	 
>1165	CallExpression	GetPatchInfo ( )
>1166	ArgumentList	 
>1167	Callee	GetPatchInfo
>1168	Identifier	GetPatchInfo
>1172	FunctionDef	CPatchDialog 
>1173	ParameterList	 
>1174	ReturnType	void
>1175	CompoundStatement	 
>1176	IfStatement	if ( m_Patch != NULL )
>1177	CompoundStatement	 
>1178	IfStatement	if ( r >= 0 && r < m_Patch -> height && c >= 0 && c < m_Patch -> width )
>1179	CompoundStatement	 
>1180	ExpressionStatement	 
>1181	CallExpression	Sys_UpdateWindows ( W_ALL )
>1182	ArgumentList	W_ALL
>1183	Argument	W_ALL
>1184	Identifier	W_ALL
>1185	Callee	Sys_UpdateWindows
>1186	Identifier	Sys_UpdateWindows
>1187	ExpressionStatement	 
>1188	AssignmentExpr	m_Patch -> bDirty = true
>1189	Identifier	true
>1190	PtrMemberAccess	m_Patch -> bDirty
>1191	Identifier	bDirty
>1192	Identifier	m_Patch
>1193	ExpressionStatement	 
>1194	AssignmentExpr	m_Patch -> ctrl [ c ] [ r ] . st [ 1 ] = m_fT
>1195	Identifier	m_fT
>1196	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ] . st [ 1 ]
>1197	PrimaryExpression	1
>1198	MemberAccess	m_Patch -> ctrl [ c ] [ r ] . st
>1199	Identifier	st
>1200	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ]
>1201	Identifier	r
>1202	ArrayIndexing	m_Patch -> ctrl [ c ]
>1203	Identifier	c
>1204	PtrMemberAccess	m_Patch -> ctrl
>1205	Identifier	ctrl
>1206	Identifier	m_Patch
>1207	ExpressionStatement	 
>1208	AssignmentExpr	m_Patch -> ctrl [ c ] [ r ] . st [ 0 ] = m_fS
>1209	Identifier	m_fS
>1210	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ] . st [ 0 ]
>1211	PrimaryExpression	0
>1212	MemberAccess	m_Patch -> ctrl [ c ] [ r ] . st
>1213	Identifier	st
>1214	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ]
>1215	Identifier	r
>1216	ArrayIndexing	m_Patch -> ctrl [ c ]
>1217	Identifier	c
>1218	PtrMemberAccess	m_Patch -> ctrl
>1219	Identifier	ctrl
>1220	Identifier	m_Patch
>1221	ExpressionStatement	 
>1222	AssignmentExpr	m_Patch -> ctrl [ c ] [ r ] . xyz [ 2 ] = m_fZ
>1223	Identifier	m_fZ
>1224	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ] . xyz [ 2 ]
>1225	PrimaryExpression	2
>1226	MemberAccess	m_Patch -> ctrl [ c ] [ r ] . xyz
>1227	Identifier	xyz
>1228	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ]
>1229	Identifier	r
>1230	ArrayIndexing	m_Patch -> ctrl [ c ]
>1231	Identifier	c
>1232	PtrMemberAccess	m_Patch -> ctrl
>1233	Identifier	ctrl
>1234	Identifier	m_Patch
>1235	ExpressionStatement	 
>1236	AssignmentExpr	m_Patch -> ctrl [ c ] [ r ] . xyz [ 1 ] = m_fY
>1237	Identifier	m_fY
>1238	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ] . xyz [ 1 ]
>1239	PrimaryExpression	1
>1240	MemberAccess	m_Patch -> ctrl [ c ] [ r ] . xyz
>1241	Identifier	xyz
>1242	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ]
>1243	Identifier	r
>1244	ArrayIndexing	m_Patch -> ctrl [ c ]
>1245	Identifier	c
>1246	PtrMemberAccess	m_Patch -> ctrl
>1247	Identifier	ctrl
>1248	Identifier	m_Patch
>1249	ExpressionStatement	 
>1250	AssignmentExpr	m_Patch -> ctrl [ c ] [ r ] . xyz [ 0 ] = m_fX
>1251	Identifier	m_fX
>1252	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ] . xyz [ 0 ]
>1253	PrimaryExpression	0
>1254	MemberAccess	m_Patch -> ctrl [ c ] [ r ] . xyz
>1255	Identifier	xyz
>1256	ArrayIndexing	m_Patch -> ctrl [ c ] [ r ]
>1257	Identifier	r
>1258	ArrayIndexing	m_Patch -> ctrl [ c ]
>1259	Identifier	c
>1260	PtrMemberAccess	m_Patch -> ctrl
>1261	Identifier	ctrl
>1262	Identifier	m_Patch
>1263	Condition	 
>1264	AndExpression	r >= 0 && r < m_Patch -> height && c >= 0 && c < m_Patch -> width
>1265	AndExpression	r < m_Patch -> height && c >= 0 && c < m_Patch -> width
>1266	AndExpression	c >= 0 && c < m_Patch -> width
>1267	RelationalExpression	c < m_Patch -> width
>1268	PtrMemberAccess	m_Patch -> width
>1269	Identifier	width
>1270	Identifier	m_Patch
>1271	Identifier	c
>1272	RelationalExpression	c >= 0
>1273	PrimaryExpression	0
>1274	Identifier	c
>1275	RelationalExpression	r < m_Patch -> height
>1276	PtrMemberAccess	m_Patch -> height
>1277	Identifier	height
>1278	Identifier	m_Patch
>1279	Identifier	r
>1280	RelationalExpression	r >= 0
>1281	PrimaryExpression	0
>1282	Identifier	r
>1283	IdentifierDeclStatement	 
>1284	IdentifierDecl	c = m_wndCols . GetCurSel ( )
>1285	AssignmentExpr	c = m_wndCols . GetCurSel ( )
>1286	CallExpression	m_wndCols . GetCurSel ( )
>1287	ArgumentList	 
>1288	Callee	m_wndCols . GetCurSel
>1289	MemberAccess	m_wndCols . GetCurSel
>1290	Identifier	GetCurSel
>1291	Identifier	m_wndCols
>1292	Identifier	c
>1293	Identifier	c
>1294	IdentifierDeclType	int
>1295	IdentifierDeclStatement	 
>1296	IdentifierDecl	r = m_wndRows . GetCurSel ( )
>1297	AssignmentExpr	r = m_wndRows . GetCurSel ( )
>1298	CallExpression	m_wndRows . GetCurSel ( )
>1299	ArgumentList	 
>1300	Callee	m_wndRows . GetCurSel
>1301	MemberAccess	m_wndRows . GetCurSel
>1302	Identifier	GetCurSel
>1303	Identifier	m_wndRows
>1304	Identifier	r
>1305	Identifier	r
>1306	IdentifierDeclType	int
>1307	Condition	 
>1308	EqualityExpression	m_Patch != NULL
>1309	Identifier	NULL
>1310	Identifier	m_Patch
>1311	ExpressionStatement	 
>1312	CallExpression	UpdateData ( TRUE )
>1313	ArgumentList	TRUE
>1314	Argument	TRUE
>1315	Identifier	TRUE
>1316	Callee	UpdateData
>1317	Identifier	UpdateData
>1357	FunctionDef	CPatchDialog 
>1358	ParameterList	bool bUp , int nID
>1359	Parameter	 
>1360	Identifier	nID
>1361	ParameterType	int
>1362	Parameter	 
>1363	Identifier	bUp
>1364	ParameterType	bool
>1365	ReturnType	void
>1366	CompoundStatement	 
>1367	ExpressionStatement	 
>1368	CallExpression	Sys_UpdateWindows ( W_CAMERA )
>1369	ArgumentList	W_CAMERA
>1370	Argument	W_CAMERA
>1371	Identifier	W_CAMERA
>1372	Callee	Sys_UpdateWindows
>1373	Identifier	Sys_UpdateWindows
>1374	ExpressionStatement	 
>1375	CallExpression	Patch_SetTextureInfo ( & td )
>1376	ArgumentList	& td
>1377	Argument	& td
>1378	UnaryOp	& td
>1379	Identifier	td
>1380	UnaryOperator	&
>1381	Callee	Patch_SetTextureInfo
>1382	Identifier	Patch_SetTextureInfo
>1383	IfStatement	if ( nID == IDC_SPIN_ROTATE )
>1384	ElseStatement	else
>1385	IfStatement	if ( nID == IDC_SPIN_HSCALE )
>1386	ElseStatement	else
>1387	IfStatement	if ( nID == IDC_SPIN_VSCALE )
>1388	ElseStatement	else
>1389	IfStatement	if ( nID == IDC_SPIN_HSHIFT )
>1390	ElseStatement	else
>1391	IfStatement	if ( nID == IDC_SPIN_VSHIFT )
>1392	CompoundStatement	 
>1393	IfStatement	if ( bUp )
>1394	ElseStatement	else
>1395	ExpressionStatement	 
>1396	AssignmentExpr	td . shift [ 1 ] = - m_fVShift
>1397	UnaryOp	- m_fVShift
>1398	Identifier	m_fVShift
>1399	UnaryOperator	-
>1400	ArrayIndexing	td . shift [ 1 ]
>1401	PrimaryExpression	1
>1402	MemberAccess	td . shift
>1403	Identifier	shift
>1404	Identifier	td
>1405	ExpressionStatement	 
>1406	AssignmentExpr	td . shift [ 1 ] = m_fVShift
>1407	Identifier	m_fVShift
>1408	ArrayIndexing	td . shift [ 1 ]
>1409	PrimaryExpression	1
>1410	MemberAccess	td . shift
>1411	Identifier	shift
>1412	Identifier	td
>1413	Condition	 
>1414	Identifier	bUp
>1415	Condition	 
>1416	EqualityExpression	nID == IDC_SPIN_VSHIFT
>1417	Identifier	IDC_SPIN_VSHIFT
>1418	Identifier	nID
>1419	CompoundStatement	 
>1420	IfStatement	if ( bUp )
>1421	ElseStatement	else
>1422	ExpressionStatement	 
>1423	AssignmentExpr	td . shift [ 0 ] = - m_fHShift
>1424	UnaryOp	- m_fHShift
>1425	Identifier	m_fHShift
>1426	UnaryOperator	-
>1427	ArrayIndexing	td . shift [ 0 ]
>1428	PrimaryExpression	0
>1429	MemberAccess	td . shift
>1430	Identifier	shift
>1431	Identifier	td
>1432	ExpressionStatement	 
>1433	AssignmentExpr	td . shift [ 0 ] = m_fHShift
>1434	Identifier	m_fHShift
>1435	ArrayIndexing	td . shift [ 0 ]
>1436	PrimaryExpression	0
>1437	MemberAccess	td . shift
>1438	Identifier	shift
>1439	Identifier	td
>1440	Condition	 
>1441	Identifier	bUp
>1442	Condition	 
>1443	EqualityExpression	nID == IDC_SPIN_HSHIFT
>1444	Identifier	IDC_SPIN_HSHIFT
>1445	Identifier	nID
>1446	CompoundStatement	 
>1447	IfStatement	if ( bUp )
>1448	ElseStatement	else
>1449	ExpressionStatement	 
>1450	AssignmentExpr	td . scale [ 1 ] = 1 + m_fVScale
>1451	AdditiveExpression	1 + m_fVScale
>1452	Identifier	m_fVScale
>1453	PrimaryExpression	1
>1454	ArrayIndexing	td . scale [ 1 ]
>1455	PrimaryExpression	1
>1456	MemberAccess	td . scale
>1457	Identifier	scale
>1458	Identifier	td
>1459	ExpressionStatement	 
>1460	AssignmentExpr	td . scale [ 1 ] = 1 - m_fVScale
>1461	AdditiveExpression	1 - m_fVScale
>1462	Identifier	m_fVScale
>1463	PrimaryExpression	1
>1464	ArrayIndexing	td . scale [ 1 ]
>1465	PrimaryExpression	1
>1466	MemberAccess	td . scale
>1467	Identifier	scale
>1468	Identifier	td
>1469	Condition	 
>1470	Identifier	bUp
>1471	Condition	 
>1472	EqualityExpression	nID == IDC_SPIN_VSCALE
>1473	Identifier	IDC_SPIN_VSCALE
>1474	Identifier	nID
>1475	CompoundStatement	 
>1476	IfStatement	if ( bUp )
>1477	ElseStatement	else
>1478	ExpressionStatement	 
>1479	AssignmentExpr	td . scale [ 0 ] = 1 + m_fHScale
>1480	AdditiveExpression	1 + m_fHScale
>1481	Identifier	m_fHScale
>1482	PrimaryExpression	1
>1483	ArrayIndexing	td . scale [ 0 ]
>1484	PrimaryExpression	0
>1485	MemberAccess	td . scale
>1486	Identifier	scale
>1487	Identifier	td
>1488	ExpressionStatement	 
>1489	AssignmentExpr	td . scale [ 0 ] = 1 - m_fHScale
>1490	AdditiveExpression	1 - m_fHScale
>1491	Identifier	m_fHScale
>1492	PrimaryExpression	1
>1493	ArrayIndexing	td . scale [ 0 ]
>1494	PrimaryExpression	0
>1495	MemberAccess	td . scale
>1496	Identifier	scale
>1497	Identifier	td
>1498	Condition	 
>1499	Identifier	bUp
>1500	Condition	 
>1501	EqualityExpression	nID == IDC_SPIN_HSCALE
>1502	Identifier	IDC_SPIN_HSCALE
>1503	Identifier	nID
>1504	CompoundStatement	 
>1505	IfStatement	if ( bUp )
>1506	ElseStatement	else
>1507	ExpressionStatement	 
>1508	AssignmentExpr	td . rotate = - m_fRotate
>1509	UnaryOp	- m_fRotate
>1510	Identifier	m_fRotate
>1511	UnaryOperator	-
>1512	MemberAccess	td . rotate
>1513	Identifier	rotate
>1514	Identifier	td
>1515	ExpressionStatement	 
>1516	AssignmentExpr	td . rotate = m_fRotate
>1517	Identifier	m_fRotate
>1518	MemberAccess	td . rotate
>1519	Identifier	rotate
>1520	Identifier	td
>1521	Condition	 
>1522	Identifier	bUp
>1523	Condition	 
>1524	EqualityExpression	nID == IDC_SPIN_ROTATE
>1525	Identifier	IDC_SPIN_ROTATE
>1526	Identifier	nID
>1527	ExpressionStatement	 
>1528	CallExpression	UpdateData ( TRUE )
>1529	ArgumentList	TRUE
>1530	Argument	TRUE
>1531	Identifier	TRUE
>1532	Callee	UpdateData
>1533	Identifier	UpdateData
>1534	ExpressionStatement	 
>1535	AssignmentExpr	td . value = 0
>1536	PrimaryExpression	0
>1537	MemberAccess	td . value
>1538	Identifier	value
>1539	Identifier	td
>1540	ExpressionStatement	 
>1541	AssignmentExpr	td . flags = 0
>1542	PrimaryExpression	0
>1543	MemberAccess	td . flags
>1544	Identifier	flags
>1545	Identifier	td
>1546	ExpressionStatement	 
>1547	AssignmentExpr	td . contents = 0
>1548	PrimaryExpression	0
>1549	MemberAccess	td . contents
>1550	Identifier	contents
>1551	Identifier	td
>1552	ExpressionStatement	 
>1553	AssignmentExpr	td . shift [ 0 ] = td . shift [ 1 ] = 0.0
>1554	AssignmentExpr	td . shift [ 1 ] = 0.0
>1555	PrimaryExpression	0.0
>1556	ArrayIndexing	td . shift [ 1 ]
>1557	PrimaryExpression	1
>1558	MemberAccess	td . shift
>1559	Identifier	shift
>1560	Identifier	td
>1561	ArrayIndexing	td . shift [ 0 ]
>1562	PrimaryExpression	0
>1563	MemberAccess	td . shift
>1564	Identifier	shift
>1565	Identifier	td
>1566	ExpressionStatement	 
>1567	AssignmentExpr	td . scale [ 0 ] = td . scale [ 1 ] = 0.0
>1568	AssignmentExpr	td . scale [ 1 ] = 0.0
>1569	PrimaryExpression	0.0
>1570	ArrayIndexing	td . scale [ 1 ]
>1571	PrimaryExpression	1
>1572	MemberAccess	td . scale
>1573	Identifier	scale
>1574	Identifier	td
>1575	ArrayIndexing	td . scale [ 0 ]
>1576	PrimaryExpression	0
>1577	MemberAccess	td . scale
>1578	Identifier	scale
>1579	Identifier	td
>1580	ExpressionStatement	 
>1581	AssignmentExpr	td . rotate = 0.0
>1582	PrimaryExpression	0.0
>1583	MemberAccess	td . rotate
>1584	Identifier	rotate
>1585	Identifier	td
>1586	IdentifierDeclStatement	 
>1587	IdentifierDecl	td
>1588	Identifier	td
>1589	IdentifierDeclType	texdef_t
<7=12,8
<8=9
<9=11,10
<12=57,53,49,45,41,37,33,29,25,21,17,13
<13=14
<14=16,15
<17=18
<18=20,19
<21=22
<22=24,23
<25=26
<26=28,27
<29=30
<30=32,31
<33=34
<34=36,35
<37=38
<38=40,39
<41=42
<42=44,43
<45=46
<46=48,47
<49=50
<50=52,51
<53=54
<54=56,55
<57=58
<58=65,59
<59=63,60
<60=61
<61=62
<63=64
<84=90,89,85
<85=86
<86=88,87
<90=300,289,278,267,256,245,234,223,212,201,190,179,168,157,146,135,124,113,102,91
<91=92
<92=100,93
<93=98,96,94
<94=95
<96=97
<98=99
<100=101
<102=103
<103=111,104
<104=109,107,105
<105=106
<107=108
<109=110
<111=112
<113=114
<114=122,115
<115=120,118,116
<116=117
<118=119
<120=121
<122=123
<124=125
<125=133,126
<126=131,129,127
<127=128
<129=130
<131=132
<133=134
<135=136
<136=144,137
<137=142,140,138
<138=139
<140=141
<142=143
<144=145
<146=147
<147=155,148
<148=153,151,149
<149=150
<151=152
<153=154
<155=156
<157=158
<158=166,159
<159=164,162,160
<160=161
<162=163
<164=165
<166=167
<168=169
<169=177,170
<170=175,173,171
<171=172
<173=174
<175=176
<177=178
<179=180
<180=188,181
<181=186,184,182
<182=183
<184=185
<186=187
<188=189
<190=191
<191=199,192
<192=197,195,193
<193=194
<195=196
<197=198
<199=200
<201=202
<202=210,203
<203=208,206,204
<204=205
<206=207
<208=209
<210=211
<212=213
<213=221,214
<214=219,217,215
<215=216
<217=218
<219=220
<221=222
<223=224
<224=232,225
<225=230,228,226
<226=227
<228=229
<230=231
<232=233
<234=235
<235=243,236
<236=241,239,237
<237=238
<239=240
<241=242
<243=244
<245=246
<246=254,247
<247=252,250,248
<248=249
<250=251
<252=253
<254=255
<256=257
<257=265,258
<258=263,261,259
<259=260
<261=262
<263=264
<265=266
<267=268
<268=276,269
<269=274,272,270
<270=271
<272=273
<274=275
<276=277
<278=279
<279=287,280
<280=285,283,281
<281=282
<283=284
<285=286
<287=288
<289=290
<290=298,291
<291=296,294,292
<292=293
<294=295
<296=297
<298=299
<300=301
<301=305,302
<302=303
<303=304
<305=306
<349=352,351,350
<352=360,353
<353=354
<354=358,355
<355=356
<356=357
<358=359
<360=361
<361=365,362
<362=363
<363=364
<365=366
<372=375,374,373
<375=383,376
<376=377
<377=381,378
<378=379
<379=380
<381=382
<383=384
<384=386,385
<386=387
<392=395,394,393
<395=403,396
<396=397
<397=401,398
<398=399
<399=400
<401=402
<403=404
<404=406,405
<406=407
<412=415,414,413
<415=447,423,416
<416=417
<417=421,418
<418=419
<419=420
<421=422
<423=438,424
<424=425
<425=426
<426=436,427
<427=432,428
<428=429
<429=431,430
<432=433
<433=435,434
<436=437
<438=439
<439=441,440
<441=443,442
<443=444
<444=446,445
<447=448
<448=450,449
<460=463,462,461
<463=464
<464=465
<465=467,466
<467=468
<472=475,474,473
<475=476
<476=477
<477=479,478
<479=480
<484=487,486,485
<491=494,493,492
<494=500,495
<495=496
<496=498,497
<498=499
<500=501
<501=503,502
<509=518,517,510
<510=514,511
<511=513,512
<514=516,515
<518=542,525,519
<519=520
<520=522,521
<522=524,523
<525=526
<526=540,527
<527=534,528
<528=529
<529=531,530
<531=533,532
<534=535
<535=537,536
<537=539,538
<540=541
<542=543
<543=550,549,544
<544=548,545
<545=547,546
<562=565,564,563
<565=628,617,606,595,584,573,568,566
<566=567
<568=569
<569=571,570
<571=572
<573=574
<574=580,575
<575=578,576
<576=577
<578=579
<580=581
<581=583,582
<584=585
<585=591,586
<586=589,587
<587=588
<589=590
<591=592
<592=594,593
<595=596
<596=602,597
<597=600,598
<598=599
<600=601
<602=603
<603=605,604
<606=607
<607=613,608
<608=611,609
<609=610
<611=612
<613=614
<614=616,615
<617=618
<618=624,619
<619=622,620
<620=621
<622=623
<624=625
<625=627,626
<628=629
<629=631,630
<631=632
<642=645,644,643
<645=767,651,646
<646=647
<647=649,648
<649=650
<651=763,652
<652=759,755,748,713,704,697,662,653
<653=654
<654=658,655
<655=656
<656=657
<658=659
<659=661,660
<662=693,687,684,663
<663=673,664
<664=665
<665=669,666
<666=667
<667=668
<669=670
<670=672,671
<673=674
<674=680,675
<675=678,676
<676=677
<678=679
<680=681
<681=683,682
<684=686,685
<687=688
<688=692,689
<689=691,690
<693=694
<694=696,695
<697=698
<698=700,699
<700=701
<701=703,702
<704=705
<705=709,706
<706=707
<707=708
<709=710
<710=712,711
<713=744,738,735,714
<714=724,715
<715=716
<716=720,717
<717=718
<718=719
<720=721
<721=723,722
<724=725
<725=731,726
<726=729,727
<727=728
<729=730
<731=732
<732=734,733
<735=737,736
<738=739
<739=743,740
<740=742,741
<744=745
<745=747,746
<748=749
<749=751,750
<751=752
<752=754,753
<755=756
<756=758,757
<759=760
<760=762,761
<763=764
<764=766,765
<767=768
<768=773,769
<769=771,770
<771=772
<787=790,789,788
<794=797,796,795
<797=814,805,798
<798=799
<799=801,800
<801=802
<802=804,803
<805=806
<806=810,807
<807=808
<808=809
<810=811
<811=813,812
<814=878,815
<815=869,865,856,816
<816=841,817
<817=818
<818=819
<819=837,820
<820=835,831,827,825,823,821
<821=822
<823=824
<825=826
<827=828
<828=830,829
<831=832
<832=834,833
<835=836
<837=838
<838=840,839
<841=842
<842=854,843
<843=852,848,844
<844=845
<845=847,846
<848=849
<849=851,850
<852=853
<854=855
<856=857
<857=864,863,858
<858=862,859
<859=861,860
<865=866
<866=868,867
<869=870
<870=874,871
<871=872
<872=873
<874=875
<875=877,876
<878=879
<879=881,880
<881=883,882
<883=884
<884=886,885
<903=906,905,904
<906=907
<907=916,908
<908=909
<909=910
<910=912,911
<912=913
<913=915,914
<916=917
<917=919,918
<919=921,920
<921=922
<922=924,923
<931=934,933,932
<934=940,935
<935=936
<936=938,937
<938=939
<940=968,941
<941=964,957,942
<942=943
<943=955,944
<944=953,949,945
<945=946
<946=948,947
<949=950
<950=952,951
<953=954
<955=956
<957=958
<958=962,959
<959=960
<960=961
<962=963
<964=965
<965=967,966
<968=969
<969=971,970
<971=972
<979=982,981,980
<982=1112,990,983
<983=984
<984=988,985
<985=986
<986=987
<988=989
<990=1108,991
<991=1096,1084,992
<992=1064,993
<993=1050,1036,1022,1008,994
<994=995
<995=1007,996
<996=998,997
<998=1000,999
<1000=1002,1001
<1002=1004,1003
<1004=1006,1005
<1008=1009
<1009=1021,1010
<1010=1012,1011
<1012=1014,1013
<1014=1016,1015
<1016=1018,1017
<1018=1020,1019
<1022=1023
<1023=1035,1024
<1024=1026,1025
<1026=1028,1027
<1028=1030,1029
<1030=1032,1031
<1032=1034,1033
<1036=1037
<1037=1049,1038
<1038=1040,1039
<1040=1042,1041
<1042=1044,1043
<1044=1046,1045
<1046=1048,1047
<1050=1051
<1051=1063,1052
<1052=1054,1053
<1054=1056,1055
<1056=1058,1057
<1058=1060,1059
<1060=1062,1061
<1064=1065
<1065=1081,1066
<1066=1076,1067
<1067=1073,1068
<1068=1072,1069
<1069=1071,1070
<1073=1075,1074
<1076=1080,1077
<1077=1079,1078
<1081=1083,1082
<1084=1085
<1085=1095,1094,1086
<1086=1093,1087
<1087=1089,1088
<1089=1090
<1090=1092,1091
<1096=1097
<1097=1107,1106,1098
<1098=1105,1099
<1099=1101,1100
<1101=1102
<1102=1104,1103
<1108=1109
<1109=1111,1110
<1112=1113
<1113=1123,1114
<1114=1122,1115
<1115=1121,1116
<1116=1120,1117
<1117=1119,1118
<1160=1163,1162,1161
<1163=1164
<1164=1165
<1165=1167,1166
<1167=1168
<1172=1175,1174,1173
<1175=1311,1176
<1176=1307,1177
<1177=1295,1283,1178
<1178=1263,1179
<1179=1249,1235,1221,1207,1193,1187,1180
<1180=1181
<1181=1185,1182
<1182=1183
<1183=1184
<1185=1186
<1187=1188
<1188=1190,1189
<1190=1192,1191
<1193=1194
<1194=1196,1195
<1196=1198,1197
<1198=1200,1199
<1200=1202,1201
<1202=1204,1203
<1204=1206,1205
<1207=1208
<1208=1210,1209
<1210=1212,1211
<1212=1214,1213
<1214=1216,1215
<1216=1218,1217
<1218=1220,1219
<1221=1222
<1222=1224,1223
<1224=1226,1225
<1226=1228,1227
<1228=1230,1229
<1230=1232,1231
<1232=1234,1233
<1235=1236
<1236=1238,1237
<1238=1240,1239
<1240=1242,1241
<1242=1244,1243
<1244=1246,1245
<1246=1248,1247
<1249=1250
<1250=1252,1251
<1252=1254,1253
<1254=1256,1255
<1256=1258,1257
<1258=1260,1259
<1260=1262,1261
<1263=1264
<1264=1280,1265
<1265=1275,1266
<1266=1272,1267
<1267=1271,1268
<1268=1270,1269
<1272=1274,1273
<1275=1279,1276
<1276=1278,1277
<1280=1282,1281
<1283=1284
<1284=1294,1293,1285
<1285=1292,1286
<1286=1288,1287
<1288=1289
<1289=1291,1290
<1295=1296
<1296=1306,1305,1297
<1297=1304,1298
<1298=1300,1299
<1300=1301
<1301=1303,1302
<1307=1308
<1308=1310,1309
<1311=1312
<1312=1316,1313
<1313=1314
<1314=1315
<1316=1317
<1357=1366,1365,1358
<1358=1362,1359
<1359=1361,1360
<1362=1364,1363
<1366=1586,1580,1566,1552,1546,1540,1534,1527,1383,1374,1367
<1367=1368
<1368=1372,1369
<1369=1370
<1370=1371
<1372=1373
<1374=1375
<1375=1381,1376
<1376=1377
<1377=1378
<1378=1380,1379
<1381=1382
<1383=1523,1504,1384
<1384=1385
<1385=1500,1475,1386
<1386=1387
<1387=1471,1446,1388
<1388=1389
<1389=1442,1419,1390
<1390=1391
<1391=1415,1392
<1392=1393
<1393=1413,1405,1394
<1394=1395
<1395=1396
<1396=1400,1397
<1397=1399,1398
<1400=1402,1401
<1402=1404,1403
<1405=1406
<1406=1408,1407
<1408=1410,1409
<1410=1412,1411
<1413=1414
<1415=1416
<1416=1418,1417
<1419=1420
<1420=1440,1432,1421
<1421=1422
<1422=1423
<1423=1427,1424
<1424=1426,1425
<1427=1429,1428
<1429=1431,1430
<1432=1433
<1433=1435,1434
<1435=1437,1436
<1437=1439,1438
<1440=1441
<1442=1443
<1443=1445,1444
<1446=1447
<1447=1469,1459,1448
<1448=1449
<1449=1450
<1450=1454,1451
<1451=1453,1452
<1454=1456,1455
<1456=1458,1457
<1459=1460
<1460=1464,1461
<1461=1463,1462
<1464=1466,1465
<1466=1468,1467
<1469=1470
<1471=1472
<1472=1474,1473
<1475=1476
<1476=1498,1488,1477
<1477=1478
<1478=1479
<1479=1483,1480
<1480=1482,1481
<1483=1485,1484
<1485=1487,1486
<1488=1489
<1489=1493,1490
<1490=1492,1491
<1493=1495,1494
<1495=1497,1496
<1498=1499
<1500=1501
<1501=1503,1502
<1504=1505
<1505=1521,1515,1506
<1506=1507
<1507=1508
<1508=1512,1509
<1509=1511,1510
<1512=1514,1513
<1515=1516
<1516=1518,1517
<1518=1520,1519
<1521=1522
<1523=1524
<1524=1526,1525
<1527=1528
<1528=1532,1529
<1529=1530
<1530=1531
<1532=1533
<1534=1535
<1535=1537,1536
<1537=1539,1538
<1540=1541
<1541=1543,1542
<1543=1545,1544
<1546=1547
<1547=1549,1548
<1549=1551,1550
<1552=1553
<1553=1561,1554
<1554=1556,1555
<1556=1558,1557
<1558=1560,1559
<1561=1563,1562
<1563=1565,1564
<1566=1567
<1567=1575,1568
<1568=1570,1569
<1570=1572,1571
<1572=1574,1573
<1575=1577,1576
<1577=1579,1578
<1580=1581
<1581=1583,1582
<1583=1585,1584
<1586=1587
<1587=1589,1588
