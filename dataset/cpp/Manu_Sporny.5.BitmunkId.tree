>3	FunctionDef	BitmunkId 
>4	ParameterList	 
>5	CompoundStatement	 
>9	FunctionDef	BitmunkId 
>10	ParameterList	const char * id
>11	Parameter	 
>12	Identifier	id
>13	ParameterType	const char *
>14	CompoundStatement	 
>15	ExpressionStatement	 
>16	AssignmentExpr	mId = ( id == NULL ) ? NULL 
>17	ConditionalExpression	( id == NULL ) ? NULL 
>18	CallExpression	strdup ( id )
>19	ArgumentList	id
>20	Argument	id
>21	Identifier	id
>22	Callee	strdup
>23	Identifier	strdup
>24	Identifier	NULL
>25	Condition	id == NULL
>26	EqualityExpression	id == NULL
>27	Identifier	NULL
>28	Identifier	id
>29	Identifier	mId
>37	FunctionDef	BitmunkId 
>38	ParameterList	const BitmunkId & rhs
>39	Parameter	 
>40	Identifier	rhs
>41	ParameterType	const BitmunkId &
>42	CompoundStatement	 
>43	ExpressionStatement	 
>44	AssignmentExpr	* this = rhs
>45	Identifier	rhs
>46	UnaryOp	* this
>47	Identifier	this
>48	UnaryOperator	*
>55	FunctionDef	BitmunkId 
>56	ParameterList	 
>57	CompoundStatement	 
>58	IfStatement	if ( mId != NULL )
>59	CompoundStatement	 
>60	ExpressionStatement	 
>61	CallExpression	free ( mId )
>62	ArgumentList	mId
>63	Argument	mId
>64	Identifier	mId
>65	Callee	free
>66	Identifier	free
>67	Condition	 
>68	EqualityExpression	mId != NULL
>69	Identifier	NULL
>70	Identifier	mId
>76	FunctionDef	operator = (const BitmunkId & rhs)
>77	ParameterList	const BitmunkId & rhs
>78	Parameter	 
>79	Identifier	rhs
>80	ParameterType	const BitmunkId &
>81	CompoundStatement	 
>82	ReturnStatement	 
>83	UnaryOp	* this
>84	Identifier	this
>85	UnaryOperator	*
>86	ExpressionStatement	 
>87	AssignmentExpr	mId = rhs . isInvalid ( ) ? NULL 
>88	ConditionalExpression	rhs . isInvalid ( ) ? NULL 
>89	CallExpression	strdup ( rhs . id ( ) )
>90	ArgumentList	rhs . id ( )
>91	Argument	rhs . id ( )
>92	CallExpression	rhs . id ( )
>93	ArgumentList	 
>94	Callee	rhs . id
>95	MemberAccess	rhs . id
>96	Identifier	id
>97	Identifier	rhs
>98	Callee	strdup
>99	Identifier	strdup
>100	Identifier	NULL
>101	Condition	rhs . isInvalid ( )
>102	CallExpression	rhs . isInvalid ( )
>103	ArgumentList	 
>104	Callee	rhs . isInvalid
>105	MemberAccess	rhs . isInvalid
>106	Identifier	isInvalid
>107	Identifier	rhs
>108	Identifier	mId
>109	IfStatement	if ( mId != NULL )
>110	CompoundStatement	 
>111	ExpressionStatement	 
>112	CallExpression	free ( mId )
>113	ArgumentList	mId
>114	Argument	mId
>115	Identifier	mId
>116	Callee	free
>117	Identifier	free
>118	Condition	 
>119	EqualityExpression	mId != NULL
>120	Identifier	NULL
>121	Identifier	mId
>133	FunctionDef	operator == (const BitmunkId & rhs)
>134	ParameterList	const BitmunkId & rhs
>135	Parameter	 
>136	Identifier	rhs
>137	ParameterType	const BitmunkId &
>138	CompoundStatement	 
>139	ReturnStatement	 
>140	EqualityExpression	strcmp ( id ( ) , rhs . id ( ) ) == 0
>141	PrimaryExpression	0
>142	CallExpression	strcmp ( id ( ) , rhs . id ( ) )
>143	ArgumentList	id ( )
>144	Argument	rhs . id ( )
>145	CallExpression	rhs . id ( )
>146	ArgumentList	 
>147	Callee	rhs . id
>148	MemberAccess	rhs . id
>149	Identifier	id
>150	Identifier	rhs
>151	Argument	id ( )
>152	CallExpression	id ( )
>153	ArgumentList	 
>154	Callee	id
>155	Identifier	id
>156	Callee	strcmp
>157	Identifier	strcmp
>165	FunctionDef	operator != (const BitmunkId & rhs)
>166	ParameterList	const BitmunkId & rhs
>167	Parameter	 
>168	Identifier	rhs
>169	ParameterType	const BitmunkId &
>170	CompoundStatement	 
>171	ReturnStatement	 
>172	EqualityExpression	strcmp ( id ( ) , rhs . id ( ) ) != 0
>173	PrimaryExpression	0
>174	CallExpression	strcmp ( id ( ) , rhs . id ( ) )
>175	ArgumentList	id ( )
>176	Argument	rhs . id ( )
>177	CallExpression	rhs . id ( )
>178	ArgumentList	 
>179	Callee	rhs . id
>180	MemberAccess	rhs . id
>181	Identifier	id
>182	Identifier	rhs
>183	Argument	id ( )
>184	CallExpression	id ( )
>185	ArgumentList	 
>186	Callee	id
>187	Identifier	id
>188	Callee	strcmp
>189	Identifier	strcmp
>197	FunctionDef	BitmunkId 
>198	ParameterList	 
>199	ReturnType	inline bool
>200	CompoundStatement	 
>201	ReturnStatement	 
>202	EqualityExpression	strcmp ( id ( ) , BM_ID_INVALID ) == 0
>203	PrimaryExpression	0
>204	CallExpression	strcmp ( id ( ) , BM_ID_INVALID )
>205	ArgumentList	id ( )
>206	Argument	BM_ID_INVALID
>207	Identifier	BM_ID_INVALID
>208	Argument	id ( )
>209	CallExpression	id ( )
>210	ArgumentList	 
>211	Callee	id
>212	Identifier	id
>213	Callee	strcmp
>214	Identifier	strcmp
>221	FunctionDef	BitmunkId 
>222	ParameterList	 
>223	ReturnType	inline bool
>224	CompoundStatement	 
>225	ReturnStatement	 
>226	EqualityExpression	strcmp ( id ( ) , BM_ID_NONE ) == 0
>227	PrimaryExpression	0
>228	CallExpression	strcmp ( id ( ) , BM_ID_NONE )
>229	ArgumentList	id ( )
>230	Argument	BM_ID_NONE
>231	Identifier	BM_ID_NONE
>232	Argument	id ( )
>233	CallExpression	id ( )
>234	ArgumentList	 
>235	Callee	id
>236	Identifier	id
>237	Callee	strcmp
>238	Identifier	strcmp
>245	FunctionDef	BitmunkId 
>246	ParameterList	 
>247	ReturnType	inline bool
>248	CompoundStatement	 
>249	ReturnStatement	 
>250	EqualityExpression	strcmp ( id ( ) , BM_ID_ANY ) == 0
>251	PrimaryExpression	0
>252	CallExpression	strcmp ( id ( ) , BM_ID_ANY )
>253	ArgumentList	id ( )
>254	Argument	BM_ID_ANY
>255	Identifier	BM_ID_ANY
>256	Argument	id ( )
>257	CallExpression	id ( )
>258	ArgumentList	 
>259	Callee	id
>260	Identifier	id
>261	Callee	strcmp
>262	Identifier	strcmp
>269	FunctionDef	BitmunkId 
>270	ParameterList	 
>271	ReturnType	inline bool
>272	CompoundStatement	 
>273	ReturnStatement	 
>274	EqualityExpression	strcmp ( id ( ) , BM_ID_UNKNOWN ) == 0
>275	PrimaryExpression	0
>276	CallExpression	strcmp ( id ( ) , BM_ID_UNKNOWN )
>277	ArgumentList	id ( )
>278	Argument	BM_ID_UNKNOWN
>279	Identifier	BM_ID_UNKNOWN
>280	Argument	id ( )
>281	CallExpression	id ( )
>282	ArgumentList	 
>283	Callee	id
>284	Identifier	id
>285	Callee	strcmp
>286	Identifier	strcmp
>293	FunctionDef	BitmunkId 
>294	ParameterList	 
>295	ReturnType	inline const char *
>296	CompoundStatement	 
>297	ReturnStatement	 
>298	ConditionalExpression	( mId == NULL ) ? BM_ID_INVALID 
>299	Identifier	mId
>300	Identifier	BM_ID_INVALID
>301	Condition	mId == NULL
>302	EqualityExpression	mId == NULL
>303	Identifier	NULL
>304	Identifier	mId
<3=5,4
<9=14,10
<10=11
<11=13,12
<14=15
<15=16
<16=29,17
<17=25,24,18
<18=22,19
<19=20
<20=21
<22=23
<25=26
<26=28,27
<37=42,38
<38=39
<39=41,40
<42=43
<43=44
<44=46,45
<46=48,47
<55=57,56
<57=58
<58=67,59
<59=60
<60=61
<61=65,62
<62=63
<63=64
<65=66
<67=68
<68=70,69
<76=81,77
<77=78
<78=80,79
<81=109,86,82
<82=83
<83=85,84
<86=87
<87=108,88
<88=101,100,89
<89=98,90
<90=91
<91=92
<92=94,93
<94=95
<95=97,96
<98=99
<101=102
<102=104,103
<104=105
<105=107,106
<109=118,110
<110=111
<111=112
<112=116,113
<113=114
<114=115
<116=117
<118=119
<119=121,120
<133=138,134
<134=135
<135=137,136
<138=139
<139=140
<140=142,141
<142=156,143
<143=151,144
<144=145
<145=147,146
<147=148
<148=150,149
<151=152
<152=154,153
<154=155
<156=157
<165=170,166
<166=167
<167=169,168
<170=171
<171=172
<172=174,173
<174=188,175
<175=183,176
<176=177
<177=179,178
<179=180
<180=182,181
<183=184
<184=186,185
<186=187
<188=189
<197=200,199,198
<200=201
<201=202
<202=204,203
<204=213,205
<205=208,206
<206=207
<208=209
<209=211,210
<211=212
<213=214
<221=224,223,222
<224=225
<225=226
<226=228,227
<228=237,229
<229=232,230
<230=231
<232=233
<233=235,234
<235=236
<237=238
<245=248,247,246
<248=249
<249=250
<250=252,251
<252=261,253
<253=256,254
<254=255
<256=257
<257=259,258
<259=260
<261=262
<269=272,271,270
<272=273
<273=274
<274=276,275
<276=285,277
<277=280,278
<278=279
<280=281
<281=283,282
<283=284
<285=286
<293=296,295,294
<296=297
<297=298
<298=301,300,299
<301=302
<302=304,303
