>15	FunctionDef	Sea 
>16	ParameterList	 
>17	CompoundStatement	 
>18	ExpressionStatement	 
>19	Identifier	verts
>20	Statement	 
>21	Statement	 
>22	Statement	 
>23	ExpressionStatement	 
>24	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER_ARB , 0 )
>25	ArgumentList	GL_ARRAY_BUFFER_ARB
>26	Argument	0
>27	PrimaryExpression	0
>28	Argument	GL_ARRAY_BUFFER_ARB
>29	Identifier	GL_ARRAY_BUFFER_ARB
>30	Callee	my_glBindBuffer
>31	Identifier	my_glBindBuffer
>32	ExpressionStatement	 
>33	CallExpression	my_glBufferData ( GL_ARRAY_BUFFER_ARB , steps * 6 * sizeof ( float ) , verts , GL_STATIC_DRAW )
>34	ArgumentList	GL_ARRAY_BUFFER_ARB
>35	Argument	GL_STATIC_DRAW
>36	Identifier	GL_STATIC_DRAW
>37	Argument	verts
>38	Identifier	verts
>39	Argument	steps * 6 * sizeof ( float )
>40	MultiplicativeExpression	steps * 6 * sizeof ( float )
>41	MultiplicativeExpression	6 * sizeof ( float )
>42	SizeofExpr	sizeof ( float )
>43	SizeofOperand	float
>44	Sizeof	sizeof
>45	PrimaryExpression	6
>46	Identifier	steps
>47	Argument	GL_ARRAY_BUFFER_ARB
>48	Identifier	GL_ARRAY_BUFFER_ARB
>49	Callee	my_glBufferData
>50	Identifier	my_glBufferData
>51	ExpressionStatement	 
>52	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER_ARB , m_vbo )
>53	ArgumentList	GL_ARRAY_BUFFER_ARB
>54	Argument	m_vbo
>55	Identifier	m_vbo
>56	Argument	GL_ARRAY_BUFFER_ARB
>57	Identifier	GL_ARRAY_BUFFER_ARB
>58	Callee	my_glBindBuffer
>59	Identifier	my_glBindBuffer
>60	ExpressionStatement	 
>61	CallExpression	my_glGenBuffers ( 1 , & m_vbo )
>62	ArgumentList	1
>63	Argument	& m_vbo
>64	UnaryOp	& m_vbo
>65	Identifier	m_vbo
>66	UnaryOperator	&
>67	Argument	1
>68	PrimaryExpression	1
>69	Callee	my_glGenBuffers
>70	Identifier	my_glGenBuffers
>71	ForStatement	for ( int i = 0 ; i < steps ; ++ i )
>72	CompoundStatement	 
>73	ExpressionStatement	 
>74	AssignmentExpr	verts [ i * 6 + 5 ] = 1.0
>75	PrimaryExpression	1.0
>76	ArrayIndexing	verts [ i * 6 + 5 ]
>77	AdditiveExpression	i * 6 + 5
>78	PrimaryExpression	5
>79	MultiplicativeExpression	i * 6
>80	PrimaryExpression	6
>81	Identifier	i
>82	Identifier	verts
>83	ExpressionStatement	 
>84	AssignmentExpr	verts [ i * 6 + 4 ] = 0.0
>85	PrimaryExpression	0.0
>86	ArrayIndexing	verts [ i * 6 + 4 ]
>87	AdditiveExpression	i * 6 + 4
>88	PrimaryExpression	4
>89	MultiplicativeExpression	i * 6
>90	PrimaryExpression	6
>91	Identifier	i
>92	Identifier	verts
>93	ExpressionStatement	 
>94	AssignmentExpr	verts [ i * 6 + 3 ] = x
>95	Identifier	x
>96	ArrayIndexing	verts [ i * 6 + 3 ]
>97	AdditiveExpression	i * 6 + 3
>98	PrimaryExpression	3
>99	MultiplicativeExpression	i * 6
>100	PrimaryExpression	6
>101	Identifier	i
>102	Identifier	verts
>103	ExpressionStatement	 
>104	AssignmentExpr	verts [ i * 6 + 2 ] = 0.0
>105	PrimaryExpression	0.0
>106	ArrayIndexing	verts [ i * 6 + 2 ]
>107	AdditiveExpression	i * 6 + 2
>108	PrimaryExpression	2
>109	MultiplicativeExpression	i * 6
>110	PrimaryExpression	6
>111	Identifier	i
>112	Identifier	verts
>113	ExpressionStatement	 
>114	AssignmentExpr	verts [ i * 6 + 1 ] = 1.0
>115	PrimaryExpression	1.0
>116	ArrayIndexing	verts [ i * 6 + 1 ]
>117	AdditiveExpression	i * 6 + 1
>118	PrimaryExpression	1
>119	MultiplicativeExpression	i * 6
>120	PrimaryExpression	6
>121	Identifier	i
>122	Identifier	verts
>123	ExpressionStatement	 
>124	AssignmentExpr	verts [ i * 6 + 0 ] = x
>125	Identifier	x
>126	ArrayIndexing	verts [ i * 6 + 0 ]
>127	AdditiveExpression	i * 6 + 0
>128	PrimaryExpression	0
>129	MultiplicativeExpression	i * 6
>130	PrimaryExpression	6
>131	Identifier	i
>132	Identifier	verts
>133	IdentifierDeclStatement	 
>134	IdentifierDecl	x = i * step
>135	AssignmentExpr	x = i * step
>136	MultiplicativeExpression	i * step
>137	Identifier	step
>138	Identifier	i
>139	Identifier	x
>140	Identifier	x
>141	IdentifierDeclType	float
>142	UnaryExpression	 
>143	Identifier	i
>144	IncDec	++
>145	Condition	 
>146	RelationalExpression	i < steps
>147	Identifier	steps
>148	Identifier	i
>149	ForInit	 
>150	IdentifierDeclStatement	int i = 0 ;
>151	IdentifierDecl	i = 0
>152	AssignmentExpr	i = 0
>153	PrimaryExpression	0
>154	Identifier	i
>155	Identifier	i
>156	IdentifierDeclType	int
>157	ExpressionStatement	 
>158	AssignmentExpr	m_vertcnt = steps * 2
>159	MultiplicativeExpression	steps * 2
>160	PrimaryExpression	2
>161	Identifier	steps
>162	Identifier	m_vertcnt
>163	IdentifierDeclStatement	 
>164	IdentifierDecl	* verts = new float [ steps * 6 ]
>165	AssignmentExpr	* verts = new float [ steps * 6 ]
>166	MultiplicativeExpression	steps * 6
>167	PrimaryExpression	6
>168	Identifier	steps
>169	Identifier	verts
>170	Identifier	verts
>171	IdentifierDeclType	float *
>172	IdentifierDeclStatement	 
>173	IdentifierDecl	step = ( g_max_x * 1.01f ) / steps
>174	AssignmentExpr	step = ( g_max_x * 1.01f ) / steps
>175	MultiplicativeExpression	( g_max_x * 1.01f ) / steps
>176	Identifier	steps
>177	MultiplicativeExpression	g_max_x * 1.01f
>178	PrimaryExpression	1.01f
>179	Identifier	g_max_x
>180	Identifier	step
>181	Identifier	step
>182	IdentifierDeclType	const float
>183	IdentifierDeclStatement	 
>184	IdentifierDecl	steps = 160
>185	AssignmentExpr	steps = 160
>186	PrimaryExpression	160
>187	Identifier	steps
>188	Identifier	steps
>189	IdentifierDeclType	const int
>206	FunctionDef	Sea 
>207	ParameterList	float x
>208	Parameter	 
>209	Identifier	x
>210	ParameterType	float
>211	ReturnType	float
>212	CompoundStatement	 
>213	ReturnStatement	 
>214	AdditiveExpression	( sin ( ( x + ( time / 16.0f ) ) * 16.0f ) / 75.0f ) + ( sin ( ( - x + ( time / 8.0f ) ) * 8.0f ) / 200.0f )
>215	MultiplicativeExpression	sin ( ( - x + ( time / 8.0f ) ) * 8.0f ) / 200.0f
>216	PrimaryExpression	200.0f
>217	CallExpression	sin ( ( - x + ( time / 8.0f ) ) * 8.0f )
>218	ArgumentList	( - x + ( time / 8.0f ) ) * 8.0f
>219	Argument	( - x + ( time / 8.0f ) ) * 8.0f
>220	MultiplicativeExpression	( - x + ( time / 8.0f ) ) * 8.0f
>221	PrimaryExpression	8.0f
>222	AdditiveExpression	- x + ( time / 8.0f )
>223	MultiplicativeExpression	time / 8.0f
>224	PrimaryExpression	8.0f
>225	Identifier	time
>226	UnaryOp	- x
>227	Identifier	x
>228	UnaryOperator	-
>229	Callee	sin
>230	Identifier	sin
>231	MultiplicativeExpression	sin ( ( x + ( time / 16.0f ) ) * 16.0f ) / 75.0f
>232	PrimaryExpression	75.0f
>233	CallExpression	sin ( ( x + ( time / 16.0f ) ) * 16.0f )
>234	ArgumentList	( x + ( time / 16.0f ) ) * 16.0f
>235	Argument	( x + ( time / 16.0f ) ) * 16.0f
>236	MultiplicativeExpression	( x + ( time / 16.0f ) ) * 16.0f
>237	PrimaryExpression	16.0f
>238	AdditiveExpression	x + ( time / 16.0f )
>239	MultiplicativeExpression	time / 16.0f
>240	PrimaryExpression	16.0f
>241	Identifier	time
>242	Identifier	x
>243	Callee	sin
>244	Identifier	sin
>245	IdentifierDeclStatement	 
>246	IdentifierDecl	time = get_time_con ( 16.0f * ( float ) M_PI )
>247	AssignmentExpr	time = get_time_con ( 16.0f * ( float ) M_PI )
>248	CallExpression	get_time_con ( 16.0f * ( float ) M_PI )
>249	ArgumentList	16.0f * ( float ) M_PI
>250	Argument	16.0f * ( float ) M_PI
>251	MultiplicativeExpression	16.0f * ( float ) M_PI
>252	CastExpression	( float ) M_PI
>253	Identifier	M_PI
>254	CastTarget	float
>255	PrimaryExpression	16.0f
>256	Callee	get_time_con
>257	Identifier	get_time_con
>258	Identifier	time
>259	Identifier	time
>260	IdentifierDeclType	float
>269	FunctionDef	Sea 
>270	ParameterList	float pos , float max_amp , bool blend
>271	Parameter	 
>272	Identifier	blend
>273	ParameterType	bool
>274	Parameter	 
>275	Identifier	max_amp
>276	ParameterType	float
>277	Parameter	 
>278	Identifier	pos
>279	ParameterType	float
>280	ReturnType	void
>281	CompoundStatement	 
>282	ExpressionStatement	 
>283	CallExpression	glDisable ( GL_BLEND )
>284	ArgumentList	GL_BLEND
>285	Argument	GL_BLEND
>286	Identifier	GL_BLEND
>287	Callee	glDisable
>288	Identifier	glDisable
>289	ExpressionStatement	 
>290	CallExpression	glEnd ( )
>291	ArgumentList	 
>292	Callee	glEnd
>293	Identifier	glEnd
>294	ExpressionStatement	 
>295	CallExpression	glVertex2f ( g_max_x , g_max_y )
>296	ArgumentList	g_max_x
>297	Argument	g_max_y
>298	Identifier	g_max_y
>299	Argument	g_max_x
>300	Identifier	g_max_x
>301	Callee	glVertex2f
>302	Identifier	glVertex2f
>303	ExpressionStatement	 
>304	CallExpression	glVertex2f ( 0 , g_max_y )
>305	ArgumentList	0
>306	Argument	g_max_y
>307	Identifier	g_max_y
>308	Argument	0
>309	PrimaryExpression	0
>310	Callee	glVertex2f
>311	Identifier	glVertex2f
>312	ExpressionStatement	 
>313	CallExpression	glColor ( g_layouts -> cur ( ) -> color_sea_bottom )
>314	ArgumentList	g_layouts -> cur ( ) -> color_sea_bottom
>315	Argument	g_layouts -> cur ( ) -> color_sea_bottom
>316	PtrMemberAccess	g_layouts -> cur ( ) -> color_sea_bottom
>317	Identifier	color_sea_bottom
>318	CallExpression	g_layouts -> cur ( )
>319	ArgumentList	 
>320	Callee	g_layouts -> cur
>321	PtrMemberAccess	g_layouts -> cur
>322	Identifier	cur
>323	Identifier	g_layouts
>324	Callee	glColor
>325	Identifier	glColor
>326	ExpressionStatement	 
>327	CallExpression	glVertex2f ( 0 , pos + max_amp )
>328	ArgumentList	0
>329	Argument	pos + max_amp
>330	AdditiveExpression	pos + max_amp
>331	Identifier	max_amp
>332	Identifier	pos
>333	Argument	0
>334	PrimaryExpression	0
>335	Callee	glVertex2f
>336	Identifier	glVertex2f
>337	ExpressionStatement	 
>338	CallExpression	glVertex2f ( g_max_x , pos + max_amp )
>339	ArgumentList	g_max_x
>340	Argument	pos + max_amp
>341	AdditiveExpression	pos + max_amp
>342	Identifier	max_amp
>343	Identifier	pos
>344	Argument	g_max_x
>345	Identifier	g_max_x
>346	Callee	glVertex2f
>347	Identifier	glVertex2f
>348	ExpressionStatement	 
>349	CallExpression	glBegin ( GL_QUADS )
>350	ArgumentList	GL_QUADS
>351	Argument	GL_QUADS
>352	Identifier	GL_QUADS
>353	Callee	glBegin
>354	Identifier	glBegin
>355	IfStatement	if ( blend )
>356	ExpressionStatement	 
>357	CallExpression	glDisable ( GL_BLEND )
>358	ArgumentList	GL_BLEND
>359	Argument	GL_BLEND
>360	Identifier	GL_BLEND
>361	Callee	glDisable
>362	Identifier	glDisable
>363	Condition	 
>364	Identifier	blend
>365	ExpressionStatement	 
>366	CallExpression	glColor ( g_layouts -> cur ( ) -> color_sea_middle )
>367	ArgumentList	g_layouts -> cur ( ) -> color_sea_middle
>368	Argument	g_layouts -> cur ( ) -> color_sea_middle
>369	PtrMemberAccess	g_layouts -> cur ( ) -> color_sea_middle
>370	Identifier	color_sea_middle
>371	CallExpression	g_layouts -> cur ( )
>372	ArgumentList	 
>373	Callee	g_layouts -> cur
>374	PtrMemberAccess	g_layouts -> cur
>375	Identifier	cur
>376	Identifier	g_layouts
>377	Callee	glColor
>378	Identifier	glColor
>379	ExpressionStatement	 
>380	CallExpression	glDisable ( GL_TEXTURE_2D )
>381	ArgumentList	GL_TEXTURE_2D
>382	Argument	GL_TEXTURE_2D
>383	Identifier	GL_TEXTURE_2D
>384	Callee	glDisable
>385	Identifier	glDisable
>386	ExpressionStatement	 
>387	CallExpression	sh -> unuse ( )
>388	ArgumentList	 
>389	Callee	sh -> unuse
>390	PtrMemberAccess	sh -> unuse
>391	Identifier	unuse
>392	Identifier	sh
>393	ExpressionStatement	 
>394	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER_ARB , 0 )
>395	ArgumentList	GL_ARRAY_BUFFER_ARB
>396	Argument	0
>397	PrimaryExpression	0
>398	Argument	GL_ARRAY_BUFFER_ARB
>399	Identifier	GL_ARRAY_BUFFER_ARB
>400	Callee	my_glBindBuffer
>401	Identifier	my_glBindBuffer
>402	ExpressionStatement	 
>403	CallExpression	glDisableClientState ( GL_VERTEX_ARRAY )
>404	ArgumentList	GL_VERTEX_ARRAY
>405	Argument	GL_VERTEX_ARRAY
>406	Identifier	GL_VERTEX_ARRAY
>407	Callee	glDisableClientState
>408	Identifier	glDisableClientState
>409	ExpressionStatement	 
>410	CallExpression	glDrawArrays ( GL_TRIANGLE_STRIP , 0 , m_vertcnt )
>411	ArgumentList	GL_TRIANGLE_STRIP
>412	Argument	m_vertcnt
>413	Identifier	m_vertcnt
>414	Argument	0
>415	PrimaryExpression	0
>416	Argument	GL_TRIANGLE_STRIP
>417	Identifier	GL_TRIANGLE_STRIP
>418	Callee	glDrawArrays
>419	Identifier	glDrawArrays
>420	ExpressionStatement	 
>421	CallExpression	glEnableClientState ( GL_VERTEX_ARRAY )
>422	ArgumentList	GL_VERTEX_ARRAY
>423	Argument	GL_VERTEX_ARRAY
>424	Identifier	GL_VERTEX_ARRAY
>425	Callee	glEnableClientState
>426	Identifier	glEnableClientState
>427	ExpressionStatement	 
>428	CallExpression	glVertexPointer ( 3 , GL_FLOAT , 0 , 0 )
>429	ArgumentList	3
>430	Argument	0
>431	PrimaryExpression	0
>432	Argument	0
>433	PrimaryExpression	0
>434	Argument	GL_FLOAT
>435	Identifier	GL_FLOAT
>436	Argument	3
>437	PrimaryExpression	3
>438	Callee	glVertexPointer
>439	Identifier	glVertexPointer
>440	ExpressionStatement	 
>441	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER_ARB , m_vbo )
>442	ArgumentList	GL_ARRAY_BUFFER_ARB
>443	Argument	m_vbo
>444	Identifier	m_vbo
>445	Argument	GL_ARRAY_BUFFER_ARB
>446	Identifier	GL_ARRAY_BUFFER_ARB
>447	Callee	my_glBindBuffer
>448	Identifier	my_glBindBuffer
>449	ExpressionStatement	 
>450	CallExpression	my_glUniform1f ( sh -> get_uni_loc ( \"vert_pos\" ) , pos )
>451	ArgumentList	sh -> get_uni_loc ( \"vert_pos\" )
>452	Argument	pos
>453	Identifier	pos
>454	Argument	sh -> get_uni_loc ( \"vert_pos\" )
>455	CallExpression	sh -> get_uni_loc ( \"vert_pos\" )
>456	ArgumentList	\"vert_pos\"
>457	Argument	\"vert_pos\"
>458	PrimaryExpression	\"vert_pos\"
>459	Callee	sh -> get_uni_loc
>460	PtrMemberAccess	sh -> get_uni_loc
>461	Identifier	get_uni_loc
>462	Identifier	sh
>463	Callee	my_glUniform1f
>464	Identifier	my_glUniform1f
>465	ExpressionStatement	 
>466	CallExpression	my_glUniform1f ( sh -> get_uni_loc ( \"amp_mod\" ) , 0.8f )
>467	ArgumentList	sh -> get_uni_loc ( \"amp_mod\" )
>468	Argument	0.8f
>469	PrimaryExpression	0.8f
>470	Argument	sh -> get_uni_loc ( \"amp_mod\" )
>471	CallExpression	sh -> get_uni_loc ( \"amp_mod\" )
>472	ArgumentList	\"amp_mod\"
>473	Argument	\"amp_mod\"
>474	PrimaryExpression	\"amp_mod\"
>475	Callee	sh -> get_uni_loc
>476	PtrMemberAccess	sh -> get_uni_loc
>477	Identifier	get_uni_loc
>478	Identifier	sh
>479	Callee	my_glUniform1f
>480	Identifier	my_glUniform1f
>481	ExpressionStatement	 
>482	CallExpression	my_glUniform1f ( sh -> get_uni_loc ( \"max_amp\" ) , max_amp )
>483	ArgumentList	sh -> get_uni_loc ( \"max_amp\" )
>484	Argument	max_amp
>485	Identifier	max_amp
>486	Argument	sh -> get_uni_loc ( \"max_amp\" )
>487	CallExpression	sh -> get_uni_loc ( \"max_amp\" )
>488	ArgumentList	\"max_amp\"
>489	Argument	\"max_amp\"
>490	PrimaryExpression	\"max_amp\"
>491	Callee	sh -> get_uni_loc
>492	PtrMemberAccess	sh -> get_uni_loc
>493	Identifier	get_uni_loc
>494	Identifier	sh
>495	Callee	my_glUniform1f
>496	Identifier	my_glUniform1f
>497	ExpressionStatement	 
>498	CallExpression	my_glUniform1f ( sh -> get_uni_loc ( \"time\" ) , time )
>499	ArgumentList	sh -> get_uni_loc ( \"time\" )
>500	Argument	time
>501	Identifier	time
>502	Argument	sh -> get_uni_loc ( \"time\" )
>503	CallExpression	sh -> get_uni_loc ( \"time\" )
>504	ArgumentList	\"time\"
>505	Argument	\"time\"
>506	PrimaryExpression	\"time\"
>507	Callee	sh -> get_uni_loc
>508	PtrMemberAccess	sh -> get_uni_loc
>509	Identifier	get_uni_loc
>510	Identifier	sh
>511	Callee	my_glUniform1f
>512	Identifier	my_glUniform1f
>513	IdentifierDeclStatement	 
>514	IdentifierDecl	time = get_time_con ( 16.0f * ( float ) M_PI )
>515	AssignmentExpr	time = get_time_con ( 16.0f * ( float ) M_PI )
>516	CallExpression	get_time_con ( 16.0f * ( float ) M_PI )
>517	ArgumentList	16.0f * ( float ) M_PI
>518	Argument	16.0f * ( float ) M_PI
>519	MultiplicativeExpression	16.0f * ( float ) M_PI
>520	CastExpression	( float ) M_PI
>521	Identifier	M_PI
>522	CastTarget	float
>523	PrimaryExpression	16.0f
>524	Callee	get_time_con
>525	Identifier	get_time_con
>526	Identifier	time
>527	Identifier	time
>528	IdentifierDeclType	float
>529	ExpressionStatement	 
>530	CallExpression	sh -> use ( )
>531	ArgumentList	 
>532	Callee	sh -> use
>533	PtrMemberAccess	sh -> use
>534	Identifier	use
>535	Identifier	sh
>536	IdentifierDeclStatement	 
>537	IdentifierDecl	* sh = g_resources . shader_seawaves
>538	AssignmentExpr	* sh = g_resources . shader_seawaves
>539	MemberAccess	g_resources . shader_seawaves
>540	Identifier	shader_seawaves
>541	Identifier	g_resources
>542	Identifier	sh
>543	Identifier	sh
>544	IdentifierDeclType	Shader *
>545	ExpressionStatement	 
>546	CallExpression	glEnable ( GL_TEXTURE_2D )
>547	ArgumentList	GL_TEXTURE_2D
>548	Argument	GL_TEXTURE_2D
>549	Identifier	GL_TEXTURE_2D
>550	Callee	glEnable
>551	Identifier	glEnable
>552	ExpressionStatement	 
>553	CallExpression	glBlendFunc ( GL_SRC_ALPHA , GL_ONE_MINUS_SRC_ALPHA )
>554	ArgumentList	GL_SRC_ALPHA
>555	Argument	GL_ONE_MINUS_SRC_ALPHA
>556	Identifier	GL_ONE_MINUS_SRC_ALPHA
>557	Argument	GL_SRC_ALPHA
>558	Identifier	GL_SRC_ALPHA
>559	Callee	glBlendFunc
>560	Identifier	glBlendFunc
>561	ExpressionStatement	 
>562	CallExpression	glEnable ( GL_BLEND )
>563	ArgumentList	GL_BLEND
>564	Argument	GL_BLEND
>565	Identifier	GL_BLEND
>566	Callee	glEnable
>567	Identifier	glEnable
>568	IfStatement	if ( blend )
>569	ElseStatement	else
>570	CompoundStatement	 
>571	ExpressionStatement	 
>572	CallExpression	glBindTexture ( GL_TEXTURE_2D , g_resources . texture_seawaves )
>573	ArgumentList	GL_TEXTURE_2D
>574	Argument	g_resources . texture_seawaves
>575	MemberAccess	g_resources . texture_seawaves
>576	Identifier	texture_seawaves
>577	Identifier	g_resources
>578	Argument	GL_TEXTURE_2D
>579	Identifier	GL_TEXTURE_2D
>580	Callee	glBindTexture
>581	Identifier	glBindTexture
>582	CompoundStatement	 
>583	ExpressionStatement	 
>584	CallExpression	glBindTexture ( GL_TEXTURE_2D , g_resources . texture_seawaves_f )
>585	ArgumentList	GL_TEXTURE_2D
>586	Argument	g_resources . texture_seawaves_f
>587	MemberAccess	g_resources . texture_seawaves_f
>588	Identifier	texture_seawaves_f
>589	Identifier	g_resources
>590	Argument	GL_TEXTURE_2D
>591	Identifier	GL_TEXTURE_2D
>592	Callee	glBindTexture
>593	Identifier	glBindTexture
>594	Condition	 
>595	Identifier	blend
>596	ExpressionStatement	 
>597	CallExpression	glColor ( g_layouts -> cur ( ) -> color_sea_top )
>598	ArgumentList	g_layouts -> cur ( ) -> color_sea_top
>599	Argument	g_layouts -> cur ( ) -> color_sea_top
>600	PtrMemberAccess	g_layouts -> cur ( ) -> color_sea_top
>601	Identifier	color_sea_top
>602	CallExpression	g_layouts -> cur ( )
>603	ArgumentList	 
>604	Callee	g_layouts -> cur
>605	PtrMemberAccess	g_layouts -> cur
>606	Identifier	cur
>607	Identifier	g_layouts
>608	Callee	glColor
>609	Identifier	glColor
>610	ExpressionStatement	 
>611	AssignmentExpr	pos -= 0.002
>612	PrimaryExpression	0.002
>613	Identifier	pos
>651	FunctionDef	Background 
>652	ParameterList	 
>653	CompoundStatement	 
>654	ExpressionStatement	 
>655	CallExpression	g_loadingscreen -> update ( )
>656	ArgumentList	 
>657	Callee	g_loadingscreen -> update
>658	PtrMemberAccess	g_loadingscreen -> update
>659	Identifier	update
>660	Identifier	g_loadingscreen
>661	ExpressionStatement	 
>662	AssignmentExpr	m_sea = new Sea ( )
>663	UnaryExpression	new Sea ( )
>664	Identifier	m_sea
>665	ExpressionStatement	 
>666	AssignmentExpr	m_sea_amp = 0.1f
>667	PrimaryExpression	0.1f
>668	Identifier	m_sea_amp
>669	ExpressionStatement	 
>670	AssignmentExpr	m_sea_pos = 0.26f
>671	PrimaryExpression	0.26f
>672	Identifier	m_sea_pos
>673	ExpressionStatement	 
>674	CallExpression	g_loadingscreen -> update ( )
>675	ArgumentList	 
>676	Callee	g_loadingscreen -> update
>677	PtrMemberAccess	g_loadingscreen -> update
>678	Identifier	update
>679	Identifier	g_loadingscreen
>680	ExpressionStatement	 
>681	AssignmentExpr	m_sky = new Sky ( )
>682	UnaryExpression	new Sky ( )
>683	Identifier	m_sky
>692	FunctionDef	Background 
>693	ParameterList	 
>694	CompoundStatement	 
>695	ExpressionStatement	 
>696	Identifier	m_sea
>697	Statement	 
>701	FunctionDef	Background 
>702	ParameterList	 
>703	ReturnType	void
>704	CompoundStatement	 
>708	FunctionDef	Background 
>709	ParameterList	bool blend
>710	Parameter	 
>711	Identifier	blend
>712	ParameterType	bool
>713	ReturnType	void
>714	CompoundStatement	 
>715	ExpressionStatement	 
>716	CallExpression	glPopMatrix ( )
>717	ArgumentList	 
>718	Callee	glPopMatrix
>719	Identifier	glPopMatrix
>720	ExpressionStatement	 
>721	CallExpression	m_sea -> draw ( m_sea_pos , m_sea_amp , blend )
>722	ArgumentList	m_sea_pos
>723	Argument	blend
>724	Identifier	blend
>725	Argument	m_sea_amp
>726	Identifier	m_sea_amp
>727	Argument	m_sea_pos
>728	Identifier	m_sea_pos
>729	Callee	m_sea -> draw
>730	PtrMemberAccess	m_sea -> draw
>731	Identifier	draw
>732	Identifier	m_sea
>733	ExpressionStatement	 
>734	CallExpression	glPushMatrix ( )
>735	ArgumentList	 
>736	Callee	glPushMatrix
>737	Identifier	glPushMatrix
>745	FunctionDef	Background 
>746	ParameterList	 
>747	ReturnType	void
>748	CompoundStatement	 
>749	ExpressionStatement	 
>750	CallExpression	glPopMatrix ( )
>751	ArgumentList	 
>752	Callee	glPopMatrix
>753	Identifier	glPopMatrix
>754	ExpressionStatement	 
>755	CallExpression	m_sky -> draw ( m_sea_pos + m_sea_amp )
>756	ArgumentList	m_sea_pos + m_sea_amp
>757	Argument	m_sea_pos + m_sea_amp
>758	AdditiveExpression	m_sea_pos + m_sea_amp
>759	Identifier	m_sea_amp
>760	Identifier	m_sea_pos
>761	Callee	m_sky -> draw
>762	PtrMemberAccess	m_sky -> draw
>763	Identifier	draw
>764	Identifier	m_sky
>765	ExpressionStatement	 
>766	CallExpression	glPushMatrix ( )
>767	ArgumentList	 
>768	Callee	glPushMatrix
>769	Identifier	glPushMatrix
>776	FunctionDef	Background 
>777	ParameterList	vec4 const & box , float amount
>778	Parameter	 
>779	Identifier	amount
>780	ParameterType	float
>781	Parameter	 
>782	Identifier	box
>783	ParameterType	vec4 const &
>784	ReturnType	void
>785	CompoundStatement	 
>786	ExpressionStatement	 
>787	CallExpression	glDisable ( GL_BLEND )
>788	ArgumentList	GL_BLEND
>789	Argument	GL_BLEND
>790	Identifier	GL_BLEND
>791	Callee	glDisable
>792	Identifier	glDisable
>793	ExpressionStatement	 
>794	CallExpression	glRectd ( box [ 0 ] , box [ 1 ] , box [ 2 ] , box [ 3 ] )
>795	ArgumentList	box [ 0 ]
>796	Argument	box [ 3 ]
>797	ArrayIndexing	box [ 3 ]
>798	PrimaryExpression	3
>799	Identifier	box
>800	Argument	box [ 2 ]
>801	ArrayIndexing	box [ 2 ]
>802	PrimaryExpression	2
>803	Identifier	box
>804	Argument	box [ 1 ]
>805	ArrayIndexing	box [ 1 ]
>806	PrimaryExpression	1
>807	Identifier	box
>808	Argument	box [ 0 ]
>809	ArrayIndexing	box [ 0 ]
>810	PrimaryExpression	0
>811	Identifier	box
>812	Callee	glRectd
>813	Identifier	glRectd
>814	ExpressionStatement	 
>815	CallExpression	glBlendFunc ( GL_ZERO , GL_SRC_COLOR )
>816	ArgumentList	GL_ZERO
>817	Argument	GL_SRC_COLOR
>818	Identifier	GL_SRC_COLOR
>819	Argument	GL_ZERO
>820	Identifier	GL_ZERO
>821	Callee	glBlendFunc
>822	Identifier	glBlendFunc
>823	ExpressionStatement	 
>824	CallExpression	glEnable ( GL_BLEND )
>825	ArgumentList	GL_BLEND
>826	Argument	GL_BLEND
>827	Identifier	GL_BLEND
>828	Callee	glEnable
>829	Identifier	glEnable
>830	ExpressionStatement	 
>831	CallExpression	glDisable ( GL_TEXTURE_2D )
>832	ArgumentList	GL_TEXTURE_2D
>833	Argument	GL_TEXTURE_2D
>834	Identifier	GL_TEXTURE_2D
>835	Callee	glDisable
>836	Identifier	glDisable
>837	ExpressionStatement	 
>838	CallExpression	glColor3d ( amount , amount , amount )
>839	ArgumentList	amount
>840	Argument	amount
>841	Identifier	amount
>842	Argument	amount
>843	Identifier	amount
>844	Argument	amount
>845	Identifier	amount
>846	Callee	glColor3d
>847	Identifier	glColor3d
>858	FunctionDef	Clouds 
>859	ParameterList	 
>860	CompoundStatement	 
>861	ExpressionStatement	 
>862	CallExpression	g_loadingscreen -> update ( )
>863	ArgumentList	 
>864	Callee	g_loadingscreen -> update
>865	PtrMemberAccess	g_loadingscreen -> update
>866	Identifier	update
>867	Identifier	g_loadingscreen
>868	ExpressionStatement	 
>869	AssignmentExpr	m_time_offset = ( float ) g_timer -> now ( ) - 140.0f
>870	AdditiveExpression	( float ) g_timer -> now ( ) - 140.0f
>871	PrimaryExpression	140.0f
>872	CastExpression	( float ) g_timer -> now ( )
>873	CallExpression	g_timer -> now ( )
>874	ArgumentList	 
>875	Callee	g_timer -> now
>876	PtrMemberAccess	g_timer -> now
>877	Identifier	now
>878	Identifier	g_timer
>879	CastTarget	float
>880	Identifier	m_time_offset
>881	ExpressionStatement	 
>882	CallExpression	sh -> unuse ( )
>883	ArgumentList	 
>884	Callee	sh -> unuse
>885	PtrMemberAccess	sh -> unuse
>886	Identifier	unuse
>887	Identifier	sh
>888	ExpressionStatement	 
>889	CallExpression	my_glUniform1i ( sh -> get_uni_loc ( \"tex\" ) , 0 )
>890	ArgumentList	sh -> get_uni_loc ( \"tex\" )
>891	Argument	0
>892	PrimaryExpression	0
>893	Argument	sh -> get_uni_loc ( \"tex\" )
>894	CallExpression	sh -> get_uni_loc ( \"tex\" )
>895	ArgumentList	\"tex\"
>896	Argument	\"tex\"
>897	PrimaryExpression	\"tex\"
>898	Callee	sh -> get_uni_loc
>899	PtrMemberAccess	sh -> get_uni_loc
>900	Identifier	get_uni_loc
>901	Identifier	sh
>902	Callee	my_glUniform1i
>903	Identifier	my_glUniform1i
>904	ExpressionStatement	 
>905	CallExpression	my_glBindAttribLocation ( sh -> get_prog ( ) , 1 , \"data\" )
>906	ArgumentList	sh -> get_prog ( )
>907	Argument	\"data\"
>908	PrimaryExpression	\"data\"
>909	Argument	1
>910	PrimaryExpression	1
>911	Argument	sh -> get_prog ( )
>912	CallExpression	sh -> get_prog ( )
>913	ArgumentList	 
>914	Callee	sh -> get_prog
>915	PtrMemberAccess	sh -> get_prog
>916	Identifier	get_prog
>917	Identifier	sh
>918	Callee	my_glBindAttribLocation
>919	Identifier	my_glBindAttribLocation
>920	ExpressionStatement	 
>921	CallExpression	my_glBindAttribLocation ( sh -> get_prog ( ) , 0 , \"pos\" )
>922	ArgumentList	sh -> get_prog ( )
>923	Argument	\"pos\"
>924	PrimaryExpression	\"pos\"
>925	Argument	0
>926	PrimaryExpression	0
>927	Argument	sh -> get_prog ( )
>928	CallExpression	sh -> get_prog ( )
>929	ArgumentList	 
>930	Callee	sh -> get_prog
>931	PtrMemberAccess	sh -> get_prog
>932	Identifier	get_prog
>933	Identifier	sh
>934	Callee	my_glBindAttribLocation
>935	Identifier	my_glBindAttribLocation
>936	ExpressionStatement	 
>937	CallExpression	sh -> use ( )
>938	ArgumentList	 
>939	Callee	sh -> use
>940	PtrMemberAccess	sh -> use
>941	Identifier	use
>942	Identifier	sh
>943	IdentifierDeclStatement	 
>944	IdentifierDecl	* sh = g_resources . shader_clouds
>945	AssignmentExpr	* sh = g_resources . shader_clouds
>946	MemberAccess	g_resources . shader_clouds
>947	Identifier	shader_clouds
>948	Identifier	g_resources
>949	Identifier	sh
>950	Identifier	sh
>951	IdentifierDeclType	Shader *
>952	ExpressionStatement	 
>953	Identifier	cloud_data
>954	Statement	 
>955	Statement	 
>956	Statement	 
>957	ExpressionStatement	 
>958	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER , 0 )
>959	ArgumentList	GL_ARRAY_BUFFER
>960	Argument	0
>961	PrimaryExpression	0
>962	Argument	GL_ARRAY_BUFFER
>963	Identifier	GL_ARRAY_BUFFER
>964	Callee	my_glBindBuffer
>965	Identifier	my_glBindBuffer
>966	ExpressionStatement	 
>967	CallExpression	my_glBufferData ( GL_ARRAY_BUFFER , pos * sizeof ( float ) , cloud_data , GL_STATIC_DRAW )
>968	ArgumentList	GL_ARRAY_BUFFER
>969	Argument	GL_STATIC_DRAW
>970	Identifier	GL_STATIC_DRAW
>971	Argument	cloud_data
>972	Identifier	cloud_data
>973	Argument	pos * sizeof ( float )
>974	MultiplicativeExpression	pos * sizeof ( float )
>975	SizeofExpr	sizeof ( float )
>976	SizeofOperand	float
>977	Sizeof	sizeof
>978	Identifier	pos
>979	Argument	GL_ARRAY_BUFFER
>980	Identifier	GL_ARRAY_BUFFER
>981	Callee	my_glBufferData
>982	Identifier	my_glBufferData
>983	ExpressionStatement	 
>984	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER , m_vbo )
>985	ArgumentList	GL_ARRAY_BUFFER
>986	Argument	m_vbo
>987	Identifier	m_vbo
>988	Argument	GL_ARRAY_BUFFER
>989	Identifier	GL_ARRAY_BUFFER
>990	Callee	my_glBindBuffer
>991	Identifier	my_glBindBuffer
>992	ExpressionStatement	 
>993	CallExpression	my_glGenBuffers ( 1 , & m_vbo )
>994	ArgumentList	1
>995	Argument	& m_vbo
>996	UnaryOp	& m_vbo
>997	Identifier	m_vbo
>998	UnaryOperator	&
>999	Argument	1
>1000	PrimaryExpression	1
>1001	Callee	my_glGenBuffers
>1002	Identifier	my_glGenBuffers
>1003	ForStatement	for ( unsigned int i = 0 ; i < m_num_clouds ; ++ i )
>1004	CompoundStatement	 
>1005	ExpressionStatement	 
>1006	AssignmentExpr	cloud_data [ pos ++ ] = speed
>1007	Identifier	speed
>1008	ArrayIndexing	cloud_data [ pos ++ ]
>1009	IncDecOp	pos ++
>1010	IncDec	++
>1011	Identifier	pos
>1012	Identifier	cloud_data
>1013	ExpressionStatement	 
>1014	AssignmentExpr	cloud_data [ pos ++ ] = color
>1015	Identifier	color
>1016	ArrayIndexing	cloud_data [ pos ++ ]
>1017	IncDecOp	pos ++
>1018	IncDec	++
>1019	Identifier	pos
>1020	Identifier	cloud_data
>1021	ExpressionStatement	 
>1022	AssignmentExpr	cloud_data [ pos ++ ] = tex_v0
>1023	Identifier	tex_v0
>1024	ArrayIndexing	cloud_data [ pos ++ ]
>1025	IncDecOp	pos ++
>1026	IncDec	++
>1027	Identifier	pos
>1028	Identifier	cloud_data
>1029	ExpressionStatement	 
>1030	AssignmentExpr	cloud_data [ pos ++ ] = tex_u1
>1031	Identifier	tex_u1
>1032	ArrayIndexing	cloud_data [ pos ++ ]
>1033	IncDecOp	pos ++
>1034	IncDec	++
>1035	Identifier	pos
>1036	Identifier	cloud_data
>1037	ExpressionStatement	 
>1038	AssignmentExpr	cloud_data [ pos ++ ] = height
>1039	Identifier	height
>1040	ArrayIndexing	cloud_data [ pos ++ ]
>1041	IncDecOp	pos ++
>1042	IncDec	++
>1043	Identifier	pos
>1044	Identifier	cloud_data
>1045	ExpressionStatement	 
>1046	AssignmentExpr	cloud_data [ pos ++ ] = scale
>1047	Identifier	scale
>1048	ArrayIndexing	cloud_data [ pos ++ ]
>1049	IncDecOp	pos ++
>1050	IncDec	++
>1051	Identifier	pos
>1052	Identifier	cloud_data
>1053	ExpressionStatement	 
>1054	AssignmentExpr	cloud_data [ pos ++ ] = speed
>1055	Identifier	speed
>1056	ArrayIndexing	cloud_data [ pos ++ ]
>1057	IncDecOp	pos ++
>1058	IncDec	++
>1059	Identifier	pos
>1060	Identifier	cloud_data
>1061	ExpressionStatement	 
>1062	AssignmentExpr	cloud_data [ pos ++ ] = color
>1063	Identifier	color
>1064	ArrayIndexing	cloud_data [ pos ++ ]
>1065	IncDecOp	pos ++
>1066	IncDec	++
>1067	Identifier	pos
>1068	Identifier	cloud_data
>1069	ExpressionStatement	 
>1070	AssignmentExpr	cloud_data [ pos ++ ] = tex_v1
>1071	Identifier	tex_v1
>1072	ArrayIndexing	cloud_data [ pos ++ ]
>1073	IncDecOp	pos ++
>1074	IncDec	++
>1075	Identifier	pos
>1076	Identifier	cloud_data
>1077	ExpressionStatement	 
>1078	AssignmentExpr	cloud_data [ pos ++ ] = tex_u1
>1079	Identifier	tex_u1
>1080	ArrayIndexing	cloud_data [ pos ++ ]
>1081	IncDecOp	pos ++
>1082	IncDec	++
>1083	Identifier	pos
>1084	Identifier	cloud_data
>1085	ExpressionStatement	 
>1086	AssignmentExpr	cloud_data [ pos ++ ] = height + ( scale * tex_y_scale )
>1087	AdditiveExpression	height + ( scale * tex_y_scale )
>1088	MultiplicativeExpression	scale * tex_y_scale
>1089	Identifier	tex_y_scale
>1090	Identifier	scale
>1091	Identifier	height
>1092	ArrayIndexing	cloud_data [ pos ++ ]
>1093	IncDecOp	pos ++
>1094	IncDec	++
>1095	Identifier	pos
>1096	Identifier	cloud_data
>1097	ExpressionStatement	 
>1098	AssignmentExpr	cloud_data [ pos ++ ] = scale
>1099	Identifier	scale
>1100	ArrayIndexing	cloud_data [ pos ++ ]
>1101	IncDecOp	pos ++
>1102	IncDec	++
>1103	Identifier	pos
>1104	Identifier	cloud_data
>1105	ExpressionStatement	 
>1106	AssignmentExpr	cloud_data [ pos ++ ] = speed
>1107	Identifier	speed
>1108	ArrayIndexing	cloud_data [ pos ++ ]
>1109	IncDecOp	pos ++
>1110	IncDec	++
>1111	Identifier	pos
>1112	Identifier	cloud_data
>1113	ExpressionStatement	 
>1114	AssignmentExpr	cloud_data [ pos ++ ] = color
>1115	Identifier	color
>1116	ArrayIndexing	cloud_data [ pos ++ ]
>1117	IncDecOp	pos ++
>1118	IncDec	++
>1119	Identifier	pos
>1120	Identifier	cloud_data
>1121	ExpressionStatement	 
>1122	AssignmentExpr	cloud_data [ pos ++ ] = tex_v1
>1123	Identifier	tex_v1
>1124	ArrayIndexing	cloud_data [ pos ++ ]
>1125	IncDecOp	pos ++
>1126	IncDec	++
>1127	Identifier	pos
>1128	Identifier	cloud_data
>1129	ExpressionStatement	 
>1130	AssignmentExpr	cloud_data [ pos ++ ] = tex_u0
>1131	Identifier	tex_u0
>1132	ArrayIndexing	cloud_data [ pos ++ ]
>1133	IncDecOp	pos ++
>1134	IncDec	++
>1135	Identifier	pos
>1136	Identifier	cloud_data
>1137	ExpressionStatement	 
>1138	AssignmentExpr	cloud_data [ pos ++ ] = height + ( scale * tex_y_scale )
>1139	AdditiveExpression	height + ( scale * tex_y_scale )
>1140	MultiplicativeExpression	scale * tex_y_scale
>1141	Identifier	tex_y_scale
>1142	Identifier	scale
>1143	Identifier	height
>1144	ArrayIndexing	cloud_data [ pos ++ ]
>1145	IncDecOp	pos ++
>1146	IncDec	++
>1147	Identifier	pos
>1148	Identifier	cloud_data
>1149	ExpressionStatement	 
>1150	AssignmentExpr	cloud_data [ pos ++ ] = 0
>1151	PrimaryExpression	0
>1152	ArrayIndexing	cloud_data [ pos ++ ]
>1153	IncDecOp	pos ++
>1154	IncDec	++
>1155	Identifier	pos
>1156	Identifier	cloud_data
>1157	ExpressionStatement	 
>1158	AssignmentExpr	cloud_data [ pos ++ ] = speed
>1159	Identifier	speed
>1160	ArrayIndexing	cloud_data [ pos ++ ]
>1161	IncDecOp	pos ++
>1162	IncDec	++
>1163	Identifier	pos
>1164	Identifier	cloud_data
>1165	ExpressionStatement	 
>1166	AssignmentExpr	cloud_data [ pos ++ ] = color
>1167	Identifier	color
>1168	ArrayIndexing	cloud_data [ pos ++ ]
>1169	IncDecOp	pos ++
>1170	IncDec	++
>1171	Identifier	pos
>1172	Identifier	cloud_data
>1173	ExpressionStatement	 
>1174	AssignmentExpr	cloud_data [ pos ++ ] = tex_v0
>1175	Identifier	tex_v0
>1176	ArrayIndexing	cloud_data [ pos ++ ]
>1177	IncDecOp	pos ++
>1178	IncDec	++
>1179	Identifier	pos
>1180	Identifier	cloud_data
>1181	ExpressionStatement	 
>1182	AssignmentExpr	cloud_data [ pos ++ ] = tex_u0
>1183	Identifier	tex_u0
>1184	ArrayIndexing	cloud_data [ pos ++ ]
>1185	IncDecOp	pos ++
>1186	IncDec	++
>1187	Identifier	pos
>1188	Identifier	cloud_data
>1189	ExpressionStatement	 
>1190	AssignmentExpr	cloud_data [ pos ++ ] = height
>1191	Identifier	height
>1192	ArrayIndexing	cloud_data [ pos ++ ]
>1193	IncDecOp	pos ++
>1194	IncDec	++
>1195	Identifier	pos
>1196	Identifier	cloud_data
>1197	ExpressionStatement	 
>1198	AssignmentExpr	cloud_data [ pos ++ ] = 0
>1199	PrimaryExpression	0
>1200	ArrayIndexing	cloud_data [ pos ++ ]
>1201	IncDecOp	pos ++
>1202	IncDec	++
>1203	Identifier	pos
>1204	Identifier	cloud_data
>1205	IdentifierDeclStatement	 
>1206	IdentifierDecl	tex_v1 = tex_v0 + t_step * tex_y_scale
>1207	AssignmentExpr	tex_v1 = tex_v0 + t_step * tex_y_scale
>1208	AdditiveExpression	tex_v0 + t_step * tex_y_scale
>1209	MultiplicativeExpression	t_step * tex_y_scale
>1210	Identifier	tex_y_scale
>1211	Identifier	t_step
>1212	Identifier	tex_v0
>1213	Identifier	tex_v1
>1214	Identifier	tex_v1
>1215	IdentifierDeclType	float
>1216	IdentifierDeclStatement	 
>1217	IdentifierDecl	tex_u1 = tex_u0 + t_step
>1218	AssignmentExpr	tex_u1 = tex_u0 + t_step
>1219	AdditiveExpression	tex_u0 + t_step
>1220	Identifier	t_step
>1221	Identifier	tex_u0
>1222	Identifier	tex_u1
>1223	Identifier	tex_u1
>1224	IdentifierDeclType	float
>1225	IdentifierDeclStatement	 
>1226	IdentifierDecl	tex_v0 = t_step * floor ( RAND_0_1 * m_num_tex_row )
>1227	AssignmentExpr	tex_v0 = t_step * floor ( RAND_0_1 * m_num_tex_row )
>1228	MultiplicativeExpression	t_step * floor ( RAND_0_1 * m_num_tex_row )
>1229	CallExpression	floor ( RAND_0_1 * m_num_tex_row )
>1230	ArgumentList	RAND_0_1 * m_num_tex_row
>1231	Argument	RAND_0_1 * m_num_tex_row
>1232	MultiplicativeExpression	RAND_0_1 * m_num_tex_row
>1233	Identifier	m_num_tex_row
>1234	Identifier	RAND_0_1
>1235	Callee	floor
>1236	Identifier	floor
>1237	Identifier	t_step
>1238	Identifier	tex_v0
>1239	Identifier	tex_v0
>1240	IdentifierDeclType	float
>1241	IdentifierDeclStatement	 
>1242	IdentifierDecl	tex_u0 = t_step * floor ( RAND_0_1 * m_num_tex_row )
>1243	AssignmentExpr	tex_u0 = t_step * floor ( RAND_0_1 * m_num_tex_row )
>1244	MultiplicativeExpression	t_step * floor ( RAND_0_1 * m_num_tex_row )
>1245	CallExpression	floor ( RAND_0_1 * m_num_tex_row )
>1246	ArgumentList	RAND_0_1 * m_num_tex_row
>1247	Argument	RAND_0_1 * m_num_tex_row
>1248	MultiplicativeExpression	RAND_0_1 * m_num_tex_row
>1249	Identifier	m_num_tex_row
>1250	Identifier	RAND_0_1
>1251	Callee	floor
>1252	Identifier	floor
>1253	Identifier	t_step
>1254	Identifier	tex_u0
>1255	Identifier	tex_u0
>1256	IdentifierDeclType	float
>1257	IdentifierDeclStatement	 
>1258	IdentifierDecl	t_step = 1.0f / m_num_tex_row
>1259	AssignmentExpr	t_step = 1.0f / m_num_tex_row
>1260	MultiplicativeExpression	1.0f / m_num_tex_row
>1261	Identifier	m_num_tex_row
>1262	PrimaryExpression	1.0f
>1263	Identifier	t_step
>1264	Identifier	t_step
>1265	IdentifierDeclType	float
>1266	IdentifierDeclStatement	 
>1267	IdentifierDecl	scale = ( RAND_0_1 * 0.5f + 0.2f ) * 0.25f
>1268	AssignmentExpr	scale = ( RAND_0_1 * 0.5f + 0.2f ) * 0.25f
>1269	MultiplicativeExpression	( RAND_0_1 * 0.5f + 0.2f ) * 0.25f
>1270	PrimaryExpression	0.25f
>1271	AdditiveExpression	RAND_0_1 * 0.5f + 0.2f
>1272	PrimaryExpression	0.2f
>1273	MultiplicativeExpression	RAND_0_1 * 0.5f
>1274	PrimaryExpression	0.5f
>1275	Identifier	RAND_0_1
>1276	Identifier	scale
>1277	Identifier	scale
>1278	IdentifierDeclType	float
>1279	IdentifierDeclStatement	 
>1280	IdentifierDecl	height = RAND_0_1 * 0.12f - 0.05f
>1281	AssignmentExpr	height = RAND_0_1 * 0.12f - 0.05f
>1282	AdditiveExpression	RAND_0_1 * 0.12f - 0.05f
>1283	PrimaryExpression	0.05f
>1284	MultiplicativeExpression	RAND_0_1 * 0.12f
>1285	PrimaryExpression	0.12f
>1286	Identifier	RAND_0_1
>1287	Identifier	height
>1288	Identifier	height
>1289	IdentifierDeclType	float
>1290	IdentifierDeclStatement	 
>1291	IdentifierDecl	speed = RAND_0_1 * 60.0f + 60.0f
>1292	AssignmentExpr	speed = RAND_0_1 * 60.0f + 60.0f
>1293	AdditiveExpression	RAND_0_1 * 60.0f + 60.0f
>1294	PrimaryExpression	60.0f
>1295	MultiplicativeExpression	RAND_0_1 * 60.0f
>1296	PrimaryExpression	60.0f
>1297	Identifier	RAND_0_1
>1298	Identifier	speed
>1299	Identifier	speed
>1300	IdentifierDeclType	float
>1301	IdentifierDeclStatement	 
>1302	IdentifierDecl	color = RAND_0_1 * 0.25f + 0.75f
>1303	AssignmentExpr	color = RAND_0_1 * 0.25f + 0.75f
>1304	AdditiveExpression	RAND_0_1 * 0.25f + 0.75f
>1305	PrimaryExpression	0.75f
>1306	MultiplicativeExpression	RAND_0_1 * 0.25f
>1307	PrimaryExpression	0.25f
>1308	Identifier	RAND_0_1
>1309	Identifier	color
>1310	Identifier	color
>1311	IdentifierDeclType	float
>1312	UnaryExpression	 
>1313	Identifier	i
>1314	IncDec	++
>1315	Condition	 
>1316	RelationalExpression	i < m_num_clouds
>1317	Identifier	m_num_clouds
>1318	Identifier	i
>1319	ForInit	 
>1320	IdentifierDeclStatement	unsigned int i = 0 ;
>1321	IdentifierDecl	i = 0
>1322	AssignmentExpr	i = 0
>1323	PrimaryExpression	0
>1324	Identifier	i
>1325	Identifier	i
>1326	IdentifierDeclType	unsigned int
>1327	IdentifierDeclStatement	 
>1328	IdentifierDecl	pos = 0
>1329	AssignmentExpr	pos = 0
>1330	PrimaryExpression	0
>1331	Identifier	pos
>1332	Identifier	pos
>1333	IdentifierDeclType	int
>1334	IdentifierDeclStatement	 
>1335	IdentifierDecl	* cloud_data = new float [ m_num_clouds * 6 * 4 ]
>1336	AssignmentExpr	* cloud_data = new float [ m_num_clouds * 6 * 4 ]
>1337	MultiplicativeExpression	m_num_clouds * 6 * 4
>1338	MultiplicativeExpression	6 * 4
>1339	PrimaryExpression	4
>1340	PrimaryExpression	6
>1341	Identifier	m_num_clouds
>1342	Identifier	cloud_data
>1343	Identifier	cloud_data
>1344	IdentifierDeclType	float *
>1345	ExpressionStatement	 
>1346	CallExpression	glLoadIdentity ( )
>1347	ArgumentList	 
>1348	Callee	glLoadIdentity
>1349	Identifier	glLoadIdentity
>1350	ExpressionStatement	 
>1351	CallExpression	g_loadingscreen -> update ( )
>1352	ArgumentList	 
>1353	Callee	g_loadingscreen -> update
>1354	PtrMemberAccess	g_loadingscreen -> update
>1355	Identifier	update
>1356	Identifier	g_loadingscreen
>1357	ExpressionStatement	 
>1358	CallExpression	generate_cloud_textures ( )
>1359	ArgumentList	 
>1360	Callee	generate_cloud_textures
>1361	Identifier	generate_cloud_textures
>1362	ExpressionStatement	 
>1363	AssignmentExpr	m_num_tex_row = 8
>1364	PrimaryExpression	8
>1365	Identifier	m_num_tex_row
>1366	ExpressionStatement	 
>1367	AssignmentExpr	m_num_clouds = 50
>1368	PrimaryExpression	50
>1369	Identifier	m_num_clouds
>1370	IdentifierDeclStatement	 
>1371	IdentifierDecl	tex_y_scale = 0.6f
>1372	AssignmentExpr	tex_y_scale = 0.6f
>1373	PrimaryExpression	0.6f
>1374	Identifier	tex_y_scale
>1375	Identifier	tex_y_scale
>1376	IdentifierDeclType	float
>1414	FunctionDef	Clouds 
>1415	ParameterList	 
>1416	CompoundStatement	 
>1417	IfStatement	if ( m_cloud_texture )
>1418	ExpressionStatement	 
>1419	CallExpression	glDeleteTextures ( 1 , & m_cloud_texture )
>1420	ArgumentList	1
>1421	Argument	& m_cloud_texture
>1422	UnaryOp	& m_cloud_texture
>1423	Identifier	m_cloud_texture
>1424	UnaryOperator	&
>1425	Argument	1
>1426	PrimaryExpression	1
>1427	Callee	glDeleteTextures
>1428	Identifier	glDeleteTextures
>1429	Condition	 
>1430	Identifier	m_cloud_texture
>1436	FunctionDef	Clouds 
>1437	ParameterList	 
>1438	ReturnType	void
>1439	CompoundStatement	 
>1440	ExpressionStatement	 
>1441	CallExpression	glDisable ( GL_BLEND )
>1442	ArgumentList	GL_BLEND
>1443	Argument	GL_BLEND
>1444	Identifier	GL_BLEND
>1445	Callee	glDisable
>1446	Identifier	glDisable
>1447	ExpressionStatement	 
>1448	CallExpression	glDisable ( GL_TEXTURE_2D )
>1449	ArgumentList	GL_TEXTURE_2D
>1450	Argument	GL_TEXTURE_2D
>1451	Identifier	GL_TEXTURE_2D
>1452	Callee	glDisable
>1453	Identifier	glDisable
>1454	ExpressionStatement	 
>1455	CallExpression	sh -> unuse ( )
>1456	ArgumentList	 
>1457	Callee	sh -> unuse
>1458	PtrMemberAccess	sh -> unuse
>1459	Identifier	unuse
>1460	Identifier	sh
>1461	ExpressionStatement	 
>1462	CallExpression	my_glDisableVertexAttribArray ( 1 )
>1463	ArgumentList	1
>1464	Argument	1
>1465	PrimaryExpression	1
>1466	Callee	my_glDisableVertexAttribArray
>1467	Identifier	my_glDisableVertexAttribArray
>1468	ExpressionStatement	 
>1469	CallExpression	my_glDisableVertexAttribArray ( 0 )
>1470	ArgumentList	0
>1471	Argument	0
>1472	PrimaryExpression	0
>1473	Callee	my_glDisableVertexAttribArray
>1474	Identifier	my_glDisableVertexAttribArray
>1475	ExpressionStatement	 
>1476	CallExpression	glDrawArrays ( GL_QUADS , 0 , m_num_clouds * 4 )
>1477	ArgumentList	GL_QUADS
>1478	Argument	m_num_clouds * 4
>1479	MultiplicativeExpression	m_num_clouds * 4
>1480	PrimaryExpression	4
>1481	Identifier	m_num_clouds
>1482	Argument	0
>1483	PrimaryExpression	0
>1484	Argument	GL_QUADS
>1485	Identifier	GL_QUADS
>1486	Callee	glDrawArrays
>1487	Identifier	glDrawArrays
>1488	ExpressionStatement	 
>1489	CallExpression	my_glEnableVertexAttribArray ( 1 )
>1490	ArgumentList	1
>1491	Argument	1
>1492	PrimaryExpression	1
>1493	Callee	my_glEnableVertexAttribArray
>1494	Identifier	my_glEnableVertexAttribArray
>1495	ExpressionStatement	 
>1496	CallExpression	my_glEnableVertexAttribArray ( 0 )
>1497	ArgumentList	0
>1498	Argument	0
>1499	PrimaryExpression	0
>1500	Callee	my_glEnableVertexAttribArray
>1501	Identifier	my_glEnableVertexAttribArray
>1502	ExpressionStatement	 
>1503	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER , 0 )
>1504	ArgumentList	GL_ARRAY_BUFFER
>1505	Argument	0
>1506	PrimaryExpression	0
>1507	Argument	GL_ARRAY_BUFFER
>1508	Identifier	GL_ARRAY_BUFFER
>1509	Callee	my_glBindBuffer
>1510	Identifier	my_glBindBuffer
>1511	ExpressionStatement	 
>1512	CallExpression	my_glVertexAttribPointer ( 1 , 2 , GL_FLOAT , GL_FALSE , 6 * 4 , ( GLvoid * ) ( 4 * 4 ) )
>1513	ArgumentList	1
>1514	Argument	( GLvoid * ) ( 4 * 4 )
>1515	CastExpression	( GLvoid * ) ( 4 * 4 )
>1516	MultiplicativeExpression	4 * 4
>1517	PrimaryExpression	4
>1518	PrimaryExpression	4
>1519	CastTarget	GLvoid *
>1520	Argument	6 * 4
>1521	MultiplicativeExpression	6 * 4
>1522	PrimaryExpression	4
>1523	PrimaryExpression	6
>1524	Argument	GL_FALSE
>1525	Identifier	GL_FALSE
>1526	Argument	GL_FLOAT
>1527	Identifier	GL_FLOAT
>1528	Argument	2
>1529	PrimaryExpression	2
>1530	Argument	1
>1531	PrimaryExpression	1
>1532	Callee	my_glVertexAttribPointer
>1533	Identifier	my_glVertexAttribPointer
>1534	ExpressionStatement	 
>1535	CallExpression	my_glVertexAttribPointer ( 0 , 4 , GL_FLOAT , GL_FALSE , 6 * 4 , 0 )
>1536	ArgumentList	0
>1537	Argument	0
>1538	PrimaryExpression	0
>1539	Argument	6 * 4
>1540	MultiplicativeExpression	6 * 4
>1541	PrimaryExpression	4
>1542	PrimaryExpression	6
>1543	Argument	GL_FALSE
>1544	Identifier	GL_FALSE
>1545	Argument	GL_FLOAT
>1546	Identifier	GL_FLOAT
>1547	Argument	4
>1548	PrimaryExpression	4
>1549	Argument	0
>1550	PrimaryExpression	0
>1551	Callee	my_glVertexAttribPointer
>1552	Identifier	my_glVertexAttribPointer
>1553	ExpressionStatement	 
>1554	CallExpression	my_glBindBuffer ( GL_ARRAY_BUFFER , m_vbo )
>1555	ArgumentList	GL_ARRAY_BUFFER
>1556	Argument	m_vbo
>1557	Identifier	m_vbo
>1558	Argument	GL_ARRAY_BUFFER
>1559	Identifier	GL_ARRAY_BUFFER
>1560	Callee	my_glBindBuffer
>1561	Identifier	my_glBindBuffer
>1562	ExpressionStatement	 
>1563	CallExpression	my_glUniform1f ( sh -> get_uni_loc ( \"time\" ) , ( float ) g_timer -> now ( ) - m_time_offset )
>1564	ArgumentList	sh -> get_uni_loc ( \"time\" )
>1565	Argument	( float ) g_timer -> now ( ) - m_time_offset
>1566	AdditiveExpression	( float ) g_timer -> now ( ) - m_time_offset
>1567	Identifier	m_time_offset
>1568	CastExpression	( float ) g_timer -> now ( )
>1569	CallExpression	g_timer -> now ( )
>1570	ArgumentList	 
>1571	Callee	g_timer -> now
>1572	PtrMemberAccess	g_timer -> now
>1573	Identifier	now
>1574	Identifier	g_timer
>1575	CastTarget	float
>1576	Argument	sh -> get_uni_loc ( \"time\" )
>1577	CallExpression	sh -> get_uni_loc ( \"time\" )
>1578	ArgumentList	\"time\"
>1579	Argument	\"time\"
>1580	PrimaryExpression	\"time\"
>1581	Callee	sh -> get_uni_loc
>1582	PtrMemberAccess	sh -> get_uni_loc
>1583	Identifier	get_uni_loc
>1584	Identifier	sh
>1585	Callee	my_glUniform1f
>1586	Identifier	my_glUniform1f
>1587	ExpressionStatement	 
>1588	CallExpression	sh -> use ( )
>1589	ArgumentList	 
>1590	Callee	sh -> use
>1591	PtrMemberAccess	sh -> use
>1592	Identifier	use
>1593	Identifier	sh
>1594	IdentifierDeclStatement	 
>1595	IdentifierDecl	* sh = g_resources . shader_clouds
>1596	AssignmentExpr	* sh = g_resources . shader_clouds
>1597	MemberAccess	g_resources . shader_clouds
>1598	Identifier	shader_clouds
>1599	Identifier	g_resources
>1600	Identifier	sh
>1601	Identifier	sh
>1602	IdentifierDeclType	Shader *
>1603	ExpressionStatement	 
>1604	CallExpression	glBindTexture ( GL_TEXTURE_2D , m_cloud_texture )
>1605	ArgumentList	GL_TEXTURE_2D
>1606	Argument	m_cloud_texture
>1607	Identifier	m_cloud_texture
>1608	Argument	GL_TEXTURE_2D
>1609	Identifier	GL_TEXTURE_2D
>1610	Callee	glBindTexture
>1611	Identifier	glBindTexture
>1612	ExpressionStatement	 
>1613	CallExpression	glColor4f ( 1 , 1 , 1 , 1 )
>1614	ArgumentList	1
>1615	Argument	1
>1616	PrimaryExpression	1
>1617	Argument	1
>1618	PrimaryExpression	1
>1619	Argument	1
>1620	PrimaryExpression	1
>1621	Argument	1
>1622	PrimaryExpression	1
>1623	Callee	glColor4f
>1624	Identifier	glColor4f
>1625	ExpressionStatement	 
>1626	CallExpression	glBlendFunc ( GL_ONE , GL_ONE_MINUS_SRC_ALPHA )
>1627	ArgumentList	GL_ONE
>1628	Argument	GL_ONE_MINUS_SRC_ALPHA
>1629	Identifier	GL_ONE_MINUS_SRC_ALPHA
>1630	Argument	GL_ONE
>1631	Identifier	GL_ONE
>1632	Callee	glBlendFunc
>1633	Identifier	glBlendFunc
>1634	ExpressionStatement	 
>1635	CallExpression	glEnable ( GL_BLEND )
>1636	ArgumentList	GL_BLEND
>1637	Argument	GL_BLEND
>1638	Identifier	GL_BLEND
>1639	Callee	glEnable
>1640	Identifier	glEnable
>1641	ExpressionStatement	 
>1642	CallExpression	glEnable ( GL_TEXTURE_2D )
>1643	ArgumentList	GL_TEXTURE_2D
>1644	Argument	GL_TEXTURE_2D
>1645	Identifier	GL_TEXTURE_2D
>1646	Callee	glEnable
>1647	Identifier	glEnable
>1671	FunctionDef	Clouds 
>1672	ParameterList	 
>1673	ReturnType	void
>1674	CompoundStatement	 
>1675	ExpressionStatement	 
>1676	CallExpression	g_loadingscreen -> update ( )
>1677	ArgumentList	 
>1678	Callee	g_loadingscreen -> update
>1679	PtrMemberAccess	g_loadingscreen -> update
>1680	Identifier	update
>1681	Identifier	g_loadingscreen
>1682	ExpressionStatement	 
>1683	AssignmentExpr	m_cloud_texture = move_texture_red_component ( m_cloud_texture )
>1684	CallExpression	move_texture_red_component ( m_cloud_texture )
>1685	ArgumentList	m_cloud_texture
>1686	Argument	m_cloud_texture
>1687	Identifier	m_cloud_texture
>1688	Callee	move_texture_red_component
>1689	Identifier	move_texture_red_component
>1690	Identifier	m_cloud_texture
>1691	ExpressionStatement	 
>1692	CallExpression	g_loadingscreen -> update ( )
>1693	ArgumentList	 
>1694	Callee	g_loadingscreen -> update
>1695	PtrMemberAccess	g_loadingscreen -> update
>1696	Identifier	update
>1697	Identifier	g_loadingscreen
>1698	ExpressionStatement	 
>1699	Identifier	m_rtt
>1700	Statement	 
>1701	ExpressionStatement	 
>1702	AssignmentExpr	m_cloud_texture = m_rtt -> get_texid ( )
>1703	CallExpression	m_rtt -> get_texid ( )
>1704	ArgumentList	 
>1705	Callee	m_rtt -> get_texid
>1706	PtrMemberAccess	m_rtt -> get_texid
>1707	Identifier	get_texid
>1708	Identifier	m_rtt
>1709	Identifier	m_cloud_texture
>1710	ExpressionStatement	 
>1711	CallExpression	m_rtt -> end_render ( )
>1712	ArgumentList	 
>1713	Callee	m_rtt -> end_render
>1714	PtrMemberAccess	m_rtt -> end_render
>1715	Identifier	end_render
>1716	Identifier	m_rtt
>1717	ForStatement	for ( unsigned int x = 0 ; x < m_num_tex_row ; ++ x )
>1718	CompoundStatement	 
>1719	ForStatement	for ( unsigned int y = 0 ; y < m_num_tex_row ; ++ y )
>1720	CompoundStatement	 
>1721	ExpressionStatement	 
>1722	CallExpression	glPopMatrix ( )
>1723	ArgumentList	 
>1724	Callee	glPopMatrix
>1725	Identifier	glPopMatrix
>1726	ExpressionStatement	 
>1727	CallExpression	draw_random_cloud ( )
>1728	ArgumentList	 
>1729	Callee	draw_random_cloud
>1730	Identifier	draw_random_cloud
>1731	ExpressionStatement	 
>1732	CallExpression	glTranslatef ( ( float ) x , ( float ) y , 0 )
>1733	ArgumentList	( float ) x
>1734	Argument	0
>1735	PrimaryExpression	0
>1736	Argument	( float ) y
>1737	CastExpression	( float ) y
>1738	Identifier	y
>1739	CastTarget	float
>1740	Argument	( float ) x
>1741	CastExpression	( float ) x
>1742	Identifier	x
>1743	CastTarget	float
>1744	Callee	glTranslatef
>1745	Identifier	glTranslatef
>1746	ExpressionStatement	 
>1747	CallExpression	glPushMatrix ( )
>1748	ArgumentList	 
>1749	Callee	glPushMatrix
>1750	Identifier	glPushMatrix
>1751	UnaryExpression	 
>1752	Identifier	y
>1753	IncDec	++
>1754	Condition	 
>1755	RelationalExpression	y < m_num_tex_row
>1756	Identifier	m_num_tex_row
>1757	Identifier	y
>1758	ForInit	 
>1759	IdentifierDeclStatement	unsigned int y = 0 ;
>1760	IdentifierDecl	y = 0
>1761	AssignmentExpr	y = 0
>1762	PrimaryExpression	0
>1763	Identifier	y
>1764	Identifier	y
>1765	IdentifierDeclType	unsigned int
>1766	UnaryExpression	 
>1767	Identifier	x
>1768	IncDec	++
>1769	Condition	 
>1770	RelationalExpression	x < m_num_tex_row
>1771	Identifier	m_num_tex_row
>1772	Identifier	x
>1773	ForInit	 
>1774	IdentifierDeclStatement	unsigned int x = 0 ;
>1775	IdentifierDecl	x = 0
>1776	AssignmentExpr	x = 0
>1777	PrimaryExpression	0
>1778	Identifier	x
>1779	Identifier	x
>1780	IdentifierDeclType	unsigned int
>1781	ExpressionStatement	 
>1782	CallExpression	glScalef ( t_step , t_step , 0 )
>1783	ArgumentList	t_step
>1784	Argument	0
>1785	PrimaryExpression	0
>1786	Argument	t_step
>1787	Identifier	t_step
>1788	Argument	t_step
>1789	Identifier	t_step
>1790	Callee	glScalef
>1791	Identifier	glScalef
>1792	ExpressionStatement	 
>1793	CallExpression	glLoadIdentity ( )
>1794	ArgumentList	 
>1795	Callee	glLoadIdentity
>1796	Identifier	glLoadIdentity
>1797	ExpressionStatement	 
>1798	CallExpression	glMatrixMode ( GL_MODELVIEW )
>1799	ArgumentList	GL_MODELVIEW
>1800	Argument	GL_MODELVIEW
>1801	Identifier	GL_MODELVIEW
>1802	Callee	glMatrixMode
>1803	Identifier	glMatrixMode
>1804	ExpressionStatement	 
>1805	CallExpression	glOrtho ( 0.0 , 1.0 , 0.0 , 1.0 , - 1 , 1 )
>1806	ArgumentList	0.0
>1807	Argument	1
>1808	PrimaryExpression	1
>1809	Argument	- 1
>1810	UnaryOp	- 1
>1811	PrimaryExpression	1
>1812	UnaryOperator	-
>1813	Argument	1.0
>1814	PrimaryExpression	1.0
>1815	Argument	0.0
>1816	PrimaryExpression	0.0
>1817	Argument	1.0
>1818	PrimaryExpression	1.0
>1819	Argument	0.0
>1820	PrimaryExpression	0.0
>1821	Callee	glOrtho
>1822	Identifier	glOrtho
>1823	ExpressionStatement	 
>1824	CallExpression	glLoadIdentity ( )
>1825	ArgumentList	 
>1826	Callee	glLoadIdentity
>1827	Identifier	glLoadIdentity
>1828	ExpressionStatement	 
>1829	CallExpression	glMatrixMode ( GL_PROJECTION )
>1830	ArgumentList	GL_PROJECTION
>1831	Argument	GL_PROJECTION
>1832	Identifier	GL_PROJECTION
>1833	Callee	glMatrixMode
>1834	Identifier	glMatrixMode
>1835	ExpressionStatement	 
>1836	CallExpression	glClear ( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
>1837	ArgumentList	GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT
>1838	Argument	GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT
>1839	InclusiveOrExpression	GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT
>1840	Identifier	GL_DEPTH_BUFFER_BIT
>1841	Identifier	GL_COLOR_BUFFER_BIT
>1842	Callee	glClear
>1843	Identifier	glClear
>1844	ExpressionStatement	 
>1845	CallExpression	glViewport ( 0 , 0 , t_size , t_size )
>1846	ArgumentList	0
>1847	Argument	t_size
>1848	Identifier	t_size
>1849	Argument	t_size
>1850	Identifier	t_size
>1851	Argument	0
>1852	PrimaryExpression	0
>1853	Argument	0
>1854	PrimaryExpression	0
>1855	Callee	glViewport
>1856	Identifier	glViewport
>1857	ExpressionStatement	 
>1858	CallExpression	glClearColor ( 0.0 , 0.0 , 0.0 , 0.0 )
>1859	ArgumentList	0.0
>1860	Argument	0.0
>1861	PrimaryExpression	0.0
>1862	Argument	0.0
>1863	PrimaryExpression	0.0
>1864	Argument	0.0
>1865	PrimaryExpression	0.0
>1866	Argument	0.0
>1867	PrimaryExpression	0.0
>1868	Callee	glClearColor
>1869	Identifier	glClearColor
>1870	ExpressionStatement	 
>1871	CallExpression	m_rtt -> start_render ( )
>1872	ArgumentList	 
>1873	Callee	m_rtt -> start_render
>1874	PtrMemberAccess	m_rtt -> start_render
>1875	Identifier	start_render
>1876	Identifier	m_rtt
>1877	ExpressionStatement	 
>1878	CallExpression	glEndList ( )
>1879	ArgumentList	 
>1880	Callee	glEndList
>1881	Identifier	glEndList
>1882	ExpressionStatement	 
>1883	CallExpression	Procedural 
>1884	ArgumentList	 
>1885	Callee	Procedural 
>1886	Identifier	Procedural 
>1887	ExpressionStatement	 
>1888	CallExpression	glNewList ( m_circle_dl , GL_COMPILE )
>1889	ArgumentList	m_circle_dl
>1890	Argument	GL_COMPILE
>1891	Identifier	GL_COMPILE
>1892	Argument	m_circle_dl
>1893	Identifier	m_circle_dl
>1894	Callee	glNewList
>1895	Identifier	glNewList
>1896	ExpressionStatement	 
>1897	AssignmentExpr	m_circle_dl = glGenLists ( 1 )
>1898	CallExpression	glGenLists ( 1 )
>1899	ArgumentList	1
>1900	Argument	1
>1901	PrimaryExpression	1
>1902	Callee	glGenLists
>1903	Identifier	glGenLists
>1904	Identifier	m_circle_dl
>1905	IdentifierDeclStatement	 
>1906	IdentifierDecl	* m_rtt = new RTT_FBO ( 1 , t_size , t_size )
>1907	AssignmentExpr	* m_rtt = new RTT_FBO ( 1 , t_size , t_size )
>1908	Expression	1 , t_size , t_size
>1909	Expression	t_size , t_size
>1910	Identifier	t_size
>1911	Identifier	t_size
>1912	PrimaryExpression	1
>1913	Identifier	m_rtt
>1914	Identifier	m_rtt
>1915	IdentifierDeclType	RTT *
>1916	IdentifierDeclStatement	 
>1917	IdentifierDecl	t_step = 1.0f / m_num_tex_row
>1918	AssignmentExpr	t_step = 1.0f / m_num_tex_row
>1919	MultiplicativeExpression	1.0f / m_num_tex_row
>1920	Identifier	m_num_tex_row
>1921	PrimaryExpression	1.0f
>1922	Identifier	t_step
>1923	Identifier	t_step
>1924	IdentifierDeclType	float
>1925	IdentifierDeclStatement	 
>1926	IdentifierDecl	t_size = g_resources . texture_clouds_size
>1927	AssignmentExpr	t_size = g_resources . texture_clouds_size
>1928	MemberAccess	g_resources . texture_clouds_size
>1929	Identifier	texture_clouds_size
>1930	Identifier	g_resources
>1931	Identifier	t_size
>1932	Identifier	t_size
>1933	IdentifierDeclType	int
>1957	FunctionDef	Clouds 
>1958	ParameterList	 
>1959	ReturnType	void
>1960	CompoundStatement	 
>1961	ExpressionStatement	 
>1962	CallExpression	glPopMatrix ( )
>1963	ArgumentList	 
>1964	Callee	glPopMatrix
>1965	Identifier	glPopMatrix
>1966	ExpressionStatement	 
>1967	CallExpression	glEnd ( )
>1968	ArgumentList	 
>1969	Callee	glEnd
>1970	Identifier	glEnd
>1971	CompoundStatement	 
>1972	ExpressionStatement	 
>1973	CallExpression	glVertex ( * it )
>1974	ArgumentList	* it
>1975	Argument	* it
>1976	UnaryOp	* it
>1977	Identifier	it
>1978	UnaryOperator	*
>1979	Callee	glVertex
>1980	Identifier	glVertex
>1981	Statement	 
>1982	Statement	 
>1983	Statement	 
>1984	Statement	 
>1985	Statement	 
>1986	Statement	 
>1987	Statement	 
>1988	Statement	 
>1989	ExpressionStatement	 
>1990	CallExpression	glVertex2d ( 0 , 0 )
>1991	ArgumentList	0
>1992	Argument	0
>1993	PrimaryExpression	0
>1994	Argument	0
>1995	PrimaryExpression	0
>1996	Callee	glVertex2d
>1997	Identifier	glVertex2d
>1998	ExpressionStatement	 
>1999	CallExpression	glBegin ( GL_TRIANGLE_FAN )
>2000	ArgumentList	GL_TRIANGLE_FAN
>2001	Argument	GL_TRIANGLE_FAN
>2002	Identifier	GL_TRIANGLE_FAN
>2003	Callee	glBegin
>2004	Identifier	glBegin
>2005	ForStatement	for ( unsigned int i = 0 ; i < points . size ( ) ; ++ i )
>2006	CompoundStatement	 
>2007	ExpressionStatement	 
>2008	CallExpression	glPopMatrix ( )
>2009	ArgumentList	 
>2010	Callee	glPopMatrix
>2011	Identifier	glPopMatrix
>2012	ExpressionStatement	 
>2013	CallExpression	glCallList ( m_circle_dl )
>2014	ArgumentList	m_circle_dl
>2015	Argument	m_circle_dl
>2016	Identifier	m_circle_dl
>2017	Callee	glCallList
>2018	Identifier	glCallList
>2019	ExpressionStatement	 
>2020	CallExpression	glScaled ( scale , scale , scale )
>2021	ArgumentList	scale
>2022	Argument	scale
>2023	Identifier	scale
>2024	Argument	scale
>2025	Identifier	scale
>2026	Argument	scale
>2027	Identifier	scale
>2028	Callee	glScaled
>2029	Identifier	glScaled
>2030	ExpressionStatement	 
>2031	CallExpression	glTranslated ( p [ 0 ] + trans_x , p [ 1 ] - trans_y , 0 )
>2032	ArgumentList	p [ 0 ] + trans_x
>2033	Argument	0
>2034	PrimaryExpression	0
>2035	Argument	p [ 1 ] - trans_y
>2036	AdditiveExpression	p [ 1 ] - trans_y
>2037	Identifier	trans_y
>2038	ArrayIndexing	p [ 1 ]
>2039	PrimaryExpression	1
>2040	Identifier	p
>2041	Argument	p [ 0 ] + trans_x
>2042	AdditiveExpression	p [ 0 ] + trans_x
>2043	Identifier	trans_x
>2044	ArrayIndexing	p [ 0 ]
>2045	PrimaryExpression	0
>2046	Identifier	p
>2047	Callee	glTranslated
>2048	Identifier	glTranslated
>2049	IfStatement	if ( x > 0 )
>2050	ExpressionStatement	 
>2051	AssignmentExpr	trans_y += x
>2052	Identifier	x
>2053	Identifier	trans_y
>2054	Condition	 
>2055	RelationalExpression	x > 0
>2056	PrimaryExpression	0
>2057	Identifier	x
>2058	IdentifierDeclStatement	 
>2059	IdentifierDecl	x = ( ( p [ 1 ] - trans_y ) + ( 0.1f * scale ) )
>2060	AssignmentExpr	x = ( ( p [ 1 ] - trans_y ) + ( 0.1f * scale ) )
>2061	AdditiveExpression	( p [ 1 ] - trans_y ) + ( 0.1f * scale )
>2062	MultiplicativeExpression	0.1f * scale
>2063	Identifier	scale
>2064	PrimaryExpression	0.1f
>2065	AdditiveExpression	p [ 1 ] - trans_y
>2066	Identifier	trans_y
>2067	ArrayIndexing	p [ 1 ]
>2068	PrimaryExpression	1
>2069	Identifier	p
>2070	Identifier	x
>2071	Identifier	x
>2072	IdentifierDeclType	float
>2073	IfStatement	if ( i == 0 )
>2074	ExpressionStatement	 
>2075	AssignmentExpr	trans_x -= 0.01f
>2076	PrimaryExpression	0.01f
>2077	Identifier	trans_x
>2078	Condition	 
>2079	EqualityExpression	i == 0
>2080	PrimaryExpression	0
>2081	Identifier	i
>2082	IdentifierDeclStatement	 
>2083	IdentifierDecl	trans_y = RAND_0_1 * 0.01f
>2084	AssignmentExpr	trans_y = RAND_0_1 * 0.01f
>2085	MultiplicativeExpression	RAND_0_1 * 0.01f
>2086	PrimaryExpression	0.01f
>2087	Identifier	RAND_0_1
>2088	Identifier	trans_y
>2089	Identifier	trans_y
>2090	IdentifierDeclType	float
>2091	IdentifierDeclStatement	 
>2092	IdentifierDecl	trans_x = RAND_0_1 * 0.01f
>2093	AssignmentExpr	trans_x = RAND_0_1 * 0.01f
>2094	MultiplicativeExpression	RAND_0_1 * 0.01f
>2095	PrimaryExpression	0.01f
>2096	Identifier	RAND_0_1
>2097	Identifier	trans_x
>2098	Identifier	trans_x
>2099	IdentifierDeclType	float
>2100	IdentifierDeclStatement	 
>2101	IdentifierDecl	scale = RAND_0_1 * 0.22f + 0.21f
>2102	AssignmentExpr	scale = RAND_0_1 * 0.22f + 0.21f
>2103	AdditiveExpression	RAND_0_1 * 0.22f + 0.21f
>2104	PrimaryExpression	0.21f
>2105	MultiplicativeExpression	RAND_0_1 * 0.22f
>2106	PrimaryExpression	0.22f
>2107	Identifier	RAND_0_1
>2108	Identifier	scale
>2109	Identifier	scale
>2110	IdentifierDeclType	float
>2111	ExpressionStatement	 
>2112	CallExpression	glPushMatrix ( )
>2113	ArgumentList	 
>2114	Callee	glPushMatrix
>2115	Identifier	glPushMatrix
>2116	IdentifierDeclStatement	 
>2117	IdentifierDecl	& p = points [ i ]
>2118	AssignmentExpr	& p = points [ i ]
>2119	ArrayIndexing	points [ i ]
>2120	Identifier	i
>2121	Identifier	points
>2122	Identifier	p
>2123	Identifier	p
>2124	IdentifierDeclType	vec2 const &
>2125	UnaryExpression	 
>2126	Identifier	i
>2127	IncDec	++
>2128	Condition	 
>2129	RelationalExpression	i < points . size ( )
>2130	CallExpression	points . size ( )
>2131	ArgumentList	 
>2132	Callee	points . size
>2133	MemberAccess	points . size
>2134	Identifier	size
>2135	Identifier	points
>2136	Identifier	i
>2137	ForInit	 
>2138	IdentifierDeclStatement	unsigned int i = 0 ;
>2139	IdentifierDecl	i = 0
>2140	AssignmentExpr	i = 0
>2141	PrimaryExpression	0
>2142	Identifier	i
>2143	Identifier	i
>2144	IdentifierDeclType	unsigned int
>2145	ExpressionStatement	 
>2146	CallExpression	glEnd ( )
>2147	ArgumentList	 
>2148	Callee	glEnd
>2149	Identifier	glEnd
>2150	CompoundStatement	 
>2151	ExpressionStatement	 
>2152	CallExpression	glVertex ( * it )
>2153	ArgumentList	* it
>2154	Argument	* it
>2155	UnaryOp	* it
>2156	Identifier	it
>2157	UnaryOperator	*
>2158	Callee	glVertex
>2159	Identifier	glVertex
>2160	Statement	 
>2161	Statement	 
>2162	Statement	 
>2163	Statement	 
>2164	Statement	 
>2165	Statement	 
>2166	Statement	 
>2167	Statement	 
>2168	ExpressionStatement	 
>2169	CallExpression	glVertex2d ( 0 , 0 )
>2170	ArgumentList	0
>2171	Argument	0
>2172	PrimaryExpression	0
>2173	Argument	0
>2174	PrimaryExpression	0
>2175	Callee	glVertex2d
>2176	Identifier	glVertex2d
>2177	ExpressionStatement	 
>2178	CallExpression	glBegin ( GL_TRIANGLE_FAN )
>2179	ArgumentList	GL_TRIANGLE_FAN
>2180	Argument	GL_TRIANGLE_FAN
>2181	Identifier	GL_TRIANGLE_FAN
>2182	Callee	glBegin
>2183	Identifier	glBegin
>2184	IdentifierDeclStatement	 
>2185	IdentifierDecl	& points2 = Procedural 
>2186	AssignmentExpr	& points2 = Procedural 
>2187	CallExpression	Procedural 
>2188	ArgumentList	0
>2189	Argument	0.5f
>2190	PrimaryExpression	0.5f
>2191	Argument	+ 0.05f
>2192	UnaryOp	+ 0.05f
>2193	PrimaryExpression	0.05f
>2194	UnaryOperator	+
>2195	Argument	1
>2196	PrimaryExpression	1
>2197	Argument	8
>2198	PrimaryExpression	8
>2199	Argument	0.1f
>2200	PrimaryExpression	0.1f
>2201	Argument	0
>2202	PrimaryExpression	0
>2203	Argument	0
>2204	PrimaryExpression	0
>2205	Callee	Procedural 
>2206	Identifier	Procedural 
>2207	Identifier	points2
>2208	Identifier	points2
>2209	IdentifierDeclType	vec2_ary_t const &
>2210	IdentifierDeclStatement	 
>2211	IdentifierDecl	& points = Procedural 
>2212	AssignmentExpr	& points = Procedural 
>2213	CallExpression	Procedural 
>2214	ArgumentList	0
>2215	Argument	0.5f
>2216	PrimaryExpression	0.5f
>2217	Argument	- 0.8f
>2218	UnaryOp	- 0.8f
>2219	PrimaryExpression	0.8f
>2220	UnaryOperator	-
>2221	Argument	1
>2222	PrimaryExpression	1
>2223	Argument	8
>2224	PrimaryExpression	8
>2225	Argument	0.1f
>2226	PrimaryExpression	0.1f
>2227	Argument	0
>2228	PrimaryExpression	0
>2229	Argument	0
>2230	PrimaryExpression	0
>2231	Callee	Procedural 
>2232	Identifier	Procedural 
>2233	Identifier	points
>2234	Identifier	points
>2235	IdentifierDeclType	vec2_ary_t const &
>2236	ExpressionStatement	 
>2237	CallExpression	glScalef ( 3.4f , 3.4f , 0.0f )
>2238	ArgumentList	3.4f
>2239	Argument	0.0f
>2240	PrimaryExpression	0.0f
>2241	Argument	3.4f
>2242	PrimaryExpression	3.4f
>2243	Argument	3.4f
>2244	PrimaryExpression	3.4f
>2245	Callee	glScalef
>2246	Identifier	glScalef
>2247	ExpressionStatement	 
>2248	CallExpression	glTranslatef ( 0.5f , 0.5f , 0.0f )
>2249	ArgumentList	0.5f
>2250	Argument	0.0f
>2251	PrimaryExpression	0.0f
>2252	Argument	0.5f
>2253	PrimaryExpression	0.5f
>2254	Argument	0.5f
>2255	PrimaryExpression	0.5f
>2256	Callee	glTranslatef
>2257	Identifier	glTranslatef
>2258	ExpressionStatement	 
>2259	CallExpression	glPushMatrix ( )
>2260	ArgumentList	 
>2261	Callee	glPushMatrix
>2262	Identifier	glPushMatrix
>2284	FunctionDef	Sky 
>2285	ParameterList	 
>2286	CompoundStatement	 
>2290	FunctionDef	Sky 
>2291	ParameterList	 
>2292	CompoundStatement	 
>2293	ExpressionStatement	 
>2294	Identifier	m_clouds
>2295	Statement	 
>2299	FunctionDef	Sky 
>2300	ParameterList	float y_pos
>2301	Parameter	 
>2302	Identifier	y_pos
>2303	ParameterType	float
>2304	ReturnType	void
>2305	CompoundStatement	 
>2306	ExpressionStatement	 
>2307	CallExpression	m_clouds -> draw ( )
>2308	ArgumentList	 
>2309	Callee	m_clouds -> draw
>2310	PtrMemberAccess	m_clouds -> draw
>2311	Identifier	draw
>2312	Identifier	m_clouds
>2313	ExpressionStatement	 
>2314	CallExpression	glEnd ( )
>2315	ArgumentList	 
>2316	Callee	glEnd
>2317	Identifier	glEnd
>2318	ExpressionStatement	 
>2319	CallExpression	glVertex4f ( 1.61f , y_pos , - 1.0f , 1.0 )
>2320	ArgumentList	1.61f
>2321	Argument	1.0
>2322	PrimaryExpression	1.0
>2323	Argument	- 1.0f
>2324	UnaryOp	- 1.0f
>2325	PrimaryExpression	1.0f
>2326	UnaryOperator	-
>2327	Argument	y_pos
>2328	Identifier	y_pos
>2329	Argument	1.61f
>2330	PrimaryExpression	1.61f
>2331	Callee	glVertex4f
>2332	Identifier	glVertex4f
>2333	ExpressionStatement	 
>2334	CallExpression	glVertex4f ( 0 , y_pos , - 1.0f , 1.0 )
>2335	ArgumentList	0
>2336	Argument	1.0
>2337	PrimaryExpression	1.0
>2338	Argument	- 1.0f
>2339	UnaryOp	- 1.0f
>2340	PrimaryExpression	1.0f
>2341	UnaryOperator	-
>2342	Argument	y_pos
>2343	Identifier	y_pos
>2344	Argument	0
>2345	PrimaryExpression	0
>2346	Callee	glVertex4f
>2347	Identifier	glVertex4f
>2348	ExpressionStatement	 
>2349	CallExpression	glColor ( g_layouts -> cur ( ) -> color_sky_bottom )
>2350	ArgumentList	g_layouts -> cur ( ) -> color_sky_bottom
>2351	Argument	g_layouts -> cur ( ) -> color_sky_bottom
>2352	PtrMemberAccess	g_layouts -> cur ( ) -> color_sky_bottom
>2353	Identifier	color_sky_bottom
>2354	CallExpression	g_layouts -> cur ( )
>2355	ArgumentList	 
>2356	Callee	g_layouts -> cur
>2357	PtrMemberAccess	g_layouts -> cur
>2358	Identifier	cur
>2359	Identifier	g_layouts
>2360	Callee	glColor
>2361	Identifier	glColor
>2362	ExpressionStatement	 
>2363	CallExpression	glVertex4f ( 0.0f , 0.0f , - 1.0f , 1.0 )
>2364	ArgumentList	0.0f
>2365	Argument	1.0
>2366	PrimaryExpression	1.0
>2367	Argument	- 1.0f
>2368	UnaryOp	- 1.0f
>2369	PrimaryExpression	1.0f
>2370	UnaryOperator	-
>2371	Argument	0.0f
>2372	PrimaryExpression	0.0f
>2373	Argument	0.0f
>2374	PrimaryExpression	0.0f
>2375	Callee	glVertex4f
>2376	Identifier	glVertex4f
>2377	ExpressionStatement	 
>2378	CallExpression	glVertex4f ( 1.61f , 0.0f , - 1.0f , 1.0 )
>2379	ArgumentList	1.61f
>2380	Argument	1.0
>2381	PrimaryExpression	1.0
>2382	Argument	- 1.0f
>2383	UnaryOp	- 1.0f
>2384	PrimaryExpression	1.0f
>2385	UnaryOperator	-
>2386	Argument	0.0f
>2387	PrimaryExpression	0.0f
>2388	Argument	1.61f
>2389	PrimaryExpression	1.61f
>2390	Callee	glVertex4f
>2391	Identifier	glVertex4f
>2392	ExpressionStatement	 
>2393	CallExpression	glColor ( g_layouts -> cur ( ) -> color_sky_top )
>2394	ArgumentList	g_layouts -> cur ( ) -> color_sky_top
>2395	Argument	g_layouts -> cur ( ) -> color_sky_top
>2396	PtrMemberAccess	g_layouts -> cur ( ) -> color_sky_top
>2397	Identifier	color_sky_top
>2398	CallExpression	g_layouts -> cur ( )
>2399	ArgumentList	 
>2400	Callee	g_layouts -> cur
>2401	PtrMemberAccess	g_layouts -> cur
>2402	Identifier	cur
>2403	Identifier	g_layouts
>2404	Callee	glColor
>2405	Identifier	glColor
>2406	ExpressionStatement	 
>2407	CallExpression	glBegin ( GL_QUADS )
>2408	ArgumentList	GL_QUADS
>2409	Argument	GL_QUADS
>2410	Identifier	GL_QUADS
>2411	Callee	glBegin
>2412	Identifier	glBegin
>2413	ExpressionStatement	 
>2414	CallExpression	glDisable ( GL_BLEND )
>2415	ArgumentList	GL_BLEND
>2416	Argument	GL_BLEND
>2417	Identifier	GL_BLEND
>2418	Callee	glDisable
>2419	Identifier	glDisable
<15=17,16
<17=183,172,163,157,71,60,51,32,23,22,21,20,18
<18=19
<23=24
<24=30,25
<25=28,26
<26=27
<28=29
<30=31
<32=33
<33=49,34
<34=47,39,37,35
<35=36
<37=38
<39=40
<40=46,41
<41=45,42
<42=44,43
<47=48
<49=50
<51=52
<52=58,53
<53=56,54
<54=55
<56=57
<58=59
<60=61
<61=69,62
<62=67,63
<63=64
<64=66,65
<67=68
<69=70
<71=149,145,142,72
<72=133,123,113,103,93,83,73
<73=74
<74=76,75
<76=82,77
<77=79,78
<79=81,80
<83=84
<84=86,85
<86=92,87
<87=89,88
<89=91,90
<93=94
<94=96,95
<96=102,97
<97=99,98
<99=101,100
<103=104
<104=106,105
<106=112,107
<107=109,108
<109=111,110
<113=114
<114=116,115
<116=122,117
<117=119,118
<119=121,120
<123=124
<124=126,125
<126=132,127
<127=129,128
<129=131,130
<133=134
<134=141,140,135
<135=139,136
<136=138,137
<142=144,143
<145=146
<146=148,147
<149=150
<150=151
<151=156,155,152
<152=154,153
<157=158
<158=162,159
<159=161,160
<163=164
<164=171,170,165
<165=169,166
<166=168,167
<172=173
<173=182,181,174
<174=180,175
<175=177,176
<177=179,178
<183=184
<184=189,188,185
<185=187,186
<206=212,211,207
<207=208
<208=210,209
<212=245,213
<213=214
<214=231,215
<215=217,216
<217=229,218
<218=219
<219=220
<220=222,221
<222=226,223
<223=225,224
<226=228,227
<229=230
<231=233,232
<233=243,234
<234=235
<235=236
<236=238,237
<238=242,239
<239=241,240
<243=244
<245=246
<246=260,259,247
<247=258,248
<248=256,249
<249=250
<250=251
<251=255,252
<252=254,253
<256=257
<269=281,280,270
<270=277,274,271
<271=273,272
<274=276,275
<277=279,278
<281=610,596,568,561,552,545,536,529,513,497,481,465,449,440,427,420,409,402,393,386,379,365,355,348,337,326,312,303,294,289,282
<282=283
<283=287,284
<284=285
<285=286
<287=288
<289=290
<290=292,291
<292=293
<294=295
<295=301,296
<296=299,297
<297=298
<299=300
<301=302
<303=304
<304=310,305
<305=308,306
<306=307
<308=309
<310=311
<312=313
<313=324,314
<314=315
<315=316
<316=318,317
<318=320,319
<320=321
<321=323,322
<324=325
<326=327
<327=335,328
<328=333,329
<329=330
<330=332,331
<333=334
<335=336
<337=338
<338=346,339
<339=344,340
<340=341
<341=343,342
<344=345
<346=347
<348=349
<349=353,350
<350=351
<351=352
<353=354
<355=363,356
<356=357
<357=361,358
<358=359
<359=360
<361=362
<363=364
<365=366
<366=377,367
<367=368
<368=369
<369=371,370
<371=373,372
<373=374
<374=376,375
<377=378
<379=380
<380=384,381
<381=382
<382=383
<384=385
<386=387
<387=389,388
<389=390
<390=392,391
<393=394
<394=400,395
<395=398,396
<396=397
<398=399
<400=401
<402=403
<403=407,404
<404=405
<405=406
<407=408
<409=410
<410=418,411
<411=416,414,412
<412=413
<414=415
<416=417
<418=419
<420=421
<421=425,422
<422=423
<423=424
<425=426
<427=428
<428=438,429
<429=436,434,432,430
<430=431
<432=433
<434=435
<436=437
<438=439
<440=441
<441=447,442
<442=445,443
<443=444
<445=446
<447=448
<449=450
<450=463,451
<451=454,452
<452=453
<454=455
<455=459,456
<456=457
<457=458
<459=460
<460=462,461
<463=464
<465=466
<466=479,467
<467=470,468
<468=469
<470=471
<471=475,472
<472=473
<473=474
<475=476
<476=478,477
<479=480
<481=482
<482=495,483
<483=486,484
<484=485
<486=487
<487=491,488
<488=489
<489=490
<491=492
<492=494,493
<495=496
<497=498
<498=511,499
<499=502,500
<500=501
<502=503
<503=507,504
<504=505
<505=506
<507=508
<508=510,509
<511=512
<513=514
<514=528,527,515
<515=526,516
<516=524,517
<517=518
<518=519
<519=523,520
<520=522,521
<524=525
<529=530
<530=532,531
<532=533
<533=535,534
<536=537
<537=544,543,538
<538=542,539
<539=541,540
<545=546
<546=550,547
<547=548
<548=549
<550=551
<552=553
<553=559,554
<554=557,555
<555=556
<557=558
<559=560
<561=562
<562=566,563
<563=564
<564=565
<566=567
<568=594,582,569
<569=570
<570=571
<571=572
<572=580,573
<573=578,574
<574=575
<575=577,576
<578=579
<580=581
<582=583
<583=584
<584=592,585
<585=590,586
<586=587
<587=589,588
<590=591
<592=593
<594=595
<596=597
<597=608,598
<598=599
<599=600
<600=602,601
<602=604,603
<604=605
<605=607,606
<608=609
<610=611
<611=613,612
<651=653,652
<653=680,673,669,665,661,654
<654=655
<655=657,656
<657=658
<658=660,659
<661=662
<662=664,663
<665=666
<666=668,667
<669=670
<670=672,671
<673=674
<674=676,675
<676=677
<677=679,678
<680=681
<681=683,682
<692=694,693
<694=697,695
<695=696
<701=704,703,702
<708=714,713,709
<709=710
<710=712,711
<714=733,720,715
<715=716
<716=718,717
<718=719
<720=721
<721=729,722
<722=727,725,723
<723=724
<725=726
<727=728
<729=730
<730=732,731
<733=734
<734=736,735
<736=737
<745=748,747,746
<748=765,754,749
<749=750
<750=752,751
<752=753
<754=755
<755=761,756
<756=757
<757=758
<758=760,759
<761=762
<762=764,763
<765=766
<766=768,767
<768=769
<776=785,784,777
<777=781,778
<778=780,779
<781=783,782
<785=837,830,823,814,793,786
<786=787
<787=791,788
<788=789
<789=790
<791=792
<793=794
<794=812,795
<795=808,804,800,796
<796=797
<797=799,798
<800=801
<801=803,802
<804=805
<805=807,806
<808=809
<809=811,810
<812=813
<814=815
<815=821,816
<816=819,817
<817=818
<819=820
<821=822
<823=824
<824=828,825
<825=826
<826=827
<828=829
<830=831
<831=835,832
<832=833
<833=834
<835=836
<837=838
<838=846,839
<839=844,842,840
<840=841
<842=843
<844=845
<846=847
<858=860,859
<860=1370,1366,1362,1357,1350,1345,1334,1327,1003,992,983,966,957,956,955,954,952,943,936,920,904,888,881,868,861
<861=862
<862=864,863
<864=865
<865=867,866
<868=869
<869=880,870
<870=872,871
<872=879,873
<873=875,874
<875=876
<876=878,877
<881=882
<882=884,883
<884=885
<885=887,886
<888=889
<889=902,890
<890=893,891
<891=892
<893=894
<894=898,895
<895=896
<896=897
<898=899
<899=901,900
<902=903
<904=905
<905=918,906
<906=911,909,907
<907=908
<909=910
<911=912
<912=914,913
<914=915
<915=917,916
<918=919
<920=921
<921=934,922
<922=927,925,923
<923=924
<925=926
<927=928
<928=930,929
<930=931
<931=933,932
<934=935
<936=937
<937=939,938
<939=940
<940=942,941
<943=944
<944=951,950,945
<945=949,946
<946=948,947
<952=953
<957=958
<958=964,959
<959=962,960
<960=961
<962=963
<964=965
<966=967
<967=981,968
<968=979,973,971,969
<969=970
<971=972
<973=974
<974=978,975
<975=977,976
<979=980
<981=982
<983=984
<984=990,985
<985=988,986
<986=987
<988=989
<990=991
<992=993
<993=1001,994
<994=999,995
<995=996
<996=998,997
<999=1000
<1001=1002
<1003=1319,1315,1312,1004
<1004=1301,1290,1279,1266,1257,1241,1225,1216,1205,1197,1189,1181,1173,1165,1157,1149,1137,1129,1121,1113,1105,1097,1085,1077,1069,1061,1053,1045,1037,1029,1021,1013,1005
<1005=1006
<1006=1008,1007
<1008=1012,1009
<1009=1011,1010
<1013=1014
<1014=1016,1015
<1016=1020,1017
<1017=1019,1018
<1021=1022
<1022=1024,1023
<1024=1028,1025
<1025=1027,1026
<1029=1030
<1030=1032,1031
<1032=1036,1033
<1033=1035,1034
<1037=1038
<1038=1040,1039
<1040=1044,1041
<1041=1043,1042
<1045=1046
<1046=1048,1047
<1048=1052,1049
<1049=1051,1050
<1053=1054
<1054=1056,1055
<1056=1060,1057
<1057=1059,1058
<1061=1062
<1062=1064,1063
<1064=1068,1065
<1065=1067,1066
<1069=1070
<1070=1072,1071
<1072=1076,1073
<1073=1075,1074
<1077=1078
<1078=1080,1079
<1080=1084,1081
<1081=1083,1082
<1085=1086
<1086=1092,1087
<1087=1091,1088
<1088=1090,1089
<1092=1096,1093
<1093=1095,1094
<1097=1098
<1098=1100,1099
<1100=1104,1101
<1101=1103,1102
<1105=1106
<1106=1108,1107
<1108=1112,1109
<1109=1111,1110
<1113=1114
<1114=1116,1115
<1116=1120,1117
<1117=1119,1118
<1121=1122
<1122=1124,1123
<1124=1128,1125
<1125=1127,1126
<1129=1130
<1130=1132,1131
<1132=1136,1133
<1133=1135,1134
<1137=1138
<1138=1144,1139
<1139=1143,1140
<1140=1142,1141
<1144=1148,1145
<1145=1147,1146
<1149=1150
<1150=1152,1151
<1152=1156,1153
<1153=1155,1154
<1157=1158
<1158=1160,1159
<1160=1164,1161
<1161=1163,1162
<1165=1166
<1166=1168,1167
<1168=1172,1169
<1169=1171,1170
<1173=1174
<1174=1176,1175
<1176=1180,1177
<1177=1179,1178
<1181=1182
<1182=1184,1183
<1184=1188,1185
<1185=1187,1186
<1189=1190
<1190=1192,1191
<1192=1196,1193
<1193=1195,1194
<1197=1198
<1198=1200,1199
<1200=1204,1201
<1201=1203,1202
<1205=1206
<1206=1215,1214,1207
<1207=1213,1208
<1208=1212,1209
<1209=1211,1210
<1216=1217
<1217=1224,1223,1218
<1218=1222,1219
<1219=1221,1220
<1225=1226
<1226=1240,1239,1227
<1227=1238,1228
<1228=1237,1229
<1229=1235,1230
<1230=1231
<1231=1232
<1232=1234,1233
<1235=1236
<1241=1242
<1242=1256,1255,1243
<1243=1254,1244
<1244=1253,1245
<1245=1251,1246
<1246=1247
<1247=1248
<1248=1250,1249
<1251=1252
<1257=1258
<1258=1265,1264,1259
<1259=1263,1260
<1260=1262,1261
<1266=1267
<1267=1278,1277,1268
<1268=1276,1269
<1269=1271,1270
<1271=1273,1272
<1273=1275,1274
<1279=1280
<1280=1289,1288,1281
<1281=1287,1282
<1282=1284,1283
<1284=1286,1285
<1290=1291
<1291=1300,1299,1292
<1292=1298,1293
<1293=1295,1294
<1295=1297,1296
<1301=1302
<1302=1311,1310,1303
<1303=1309,1304
<1304=1306,1305
<1306=1308,1307
<1312=1314,1313
<1315=1316
<1316=1318,1317
<1319=1320
<1320=1321
<1321=1326,1325,1322
<1322=1324,1323
<1327=1328
<1328=1333,1332,1329
<1329=1331,1330
<1334=1335
<1335=1344,1343,1336
<1336=1342,1337
<1337=1341,1338
<1338=1340,1339
<1345=1346
<1346=1348,1347
<1348=1349
<1350=1351
<1351=1353,1352
<1353=1354
<1354=1356,1355
<1357=1358
<1358=1360,1359
<1360=1361
<1362=1363
<1363=1365,1364
<1366=1367
<1367=1369,1368
<1370=1371
<1371=1376,1375,1372
<1372=1374,1373
<1414=1416,1415
<1416=1417
<1417=1429,1418
<1418=1419
<1419=1427,1420
<1420=1425,1421
<1421=1422
<1422=1424,1423
<1425=1426
<1427=1428
<1429=1430
<1436=1439,1438,1437
<1439=1641,1634,1625,1612,1603,1594,1587,1562,1553,1534,1511,1502,1495,1488,1475,1468,1461,1454,1447,1440
<1440=1441
<1441=1445,1442
<1442=1443
<1443=1444
<1445=1446
<1447=1448
<1448=1452,1449
<1449=1450
<1450=1451
<1452=1453
<1454=1455
<1455=1457,1456
<1457=1458
<1458=1460,1459
<1461=1462
<1462=1466,1463
<1463=1464
<1464=1465
<1466=1467
<1468=1469
<1469=1473,1470
<1470=1471
<1471=1472
<1473=1474
<1475=1476
<1476=1486,1477
<1477=1484,1482,1478
<1478=1479
<1479=1481,1480
<1482=1483
<1484=1485
<1486=1487
<1488=1489
<1489=1493,1490
<1490=1491
<1491=1492
<1493=1494
<1495=1496
<1496=1500,1497
<1497=1498
<1498=1499
<1500=1501
<1502=1503
<1503=1509,1504
<1504=1507,1505
<1505=1506
<1507=1508
<1509=1510
<1511=1512
<1512=1532,1513
<1513=1530,1528,1526,1524,1520,1514
<1514=1515
<1515=1519,1516
<1516=1518,1517
<1520=1521
<1521=1523,1522
<1524=1525
<1526=1527
<1528=1529
<1530=1531
<1532=1533
<1534=1535
<1535=1551,1536
<1536=1549,1547,1545,1543,1539,1537
<1537=1538
<1539=1540
<1540=1542,1541
<1543=1544
<1545=1546
<1547=1548
<1549=1550
<1551=1552
<1553=1554
<1554=1560,1555
<1555=1558,1556
<1556=1557
<1558=1559
<1560=1561
<1562=1563
<1563=1585,1564
<1564=1576,1565
<1565=1566
<1566=1568,1567
<1568=1575,1569
<1569=1571,1570
<1571=1572
<1572=1574,1573
<1576=1577
<1577=1581,1578
<1578=1579
<1579=1580
<1581=1582
<1582=1584,1583
<1585=1586
<1587=1588
<1588=1590,1589
<1590=1591
<1591=1593,1592
<1594=1595
<1595=1602,1601,1596
<1596=1600,1597
<1597=1599,1598
<1603=1604
<1604=1610,1605
<1605=1608,1606
<1606=1607
<1608=1609
<1610=1611
<1612=1613
<1613=1623,1614
<1614=1621,1619,1617,1615
<1615=1616
<1617=1618
<1619=1620
<1621=1622
<1623=1624
<1625=1626
<1626=1632,1627
<1627=1630,1628
<1628=1629
<1630=1631
<1632=1633
<1634=1635
<1635=1639,1636
<1636=1637
<1637=1638
<1639=1640
<1641=1642
<1642=1646,1643
<1643=1644
<1644=1645
<1646=1647
<1671=1674,1673,1672
<1674=1925,1916,1905,1896,1887,1882,1877,1870,1857,1844,1835,1828,1823,1804,1797,1792,1781,1717,1710,1701,1700,1698,1691,1682,1675
<1675=1676
<1676=1678,1677
<1678=1679
<1679=1681,1680
<1682=1683
<1683=1690,1684
<1684=1688,1685
<1685=1686
<1686=1687
<1688=1689
<1691=1692
<1692=1694,1693
<1694=1695
<1695=1697,1696
<1698=1699
<1701=1702
<1702=1709,1703
<1703=1705,1704
<1705=1706
<1706=1708,1707
<1710=1711
<1711=1713,1712
<1713=1714
<1714=1716,1715
<1717=1773,1769,1766,1718
<1718=1719
<1719=1758,1754,1751,1720
<1720=1746,1731,1726,1721
<1721=1722
<1722=1724,1723
<1724=1725
<1726=1727
<1727=1729,1728
<1729=1730
<1731=1732
<1732=1744,1733
<1733=1740,1736,1734
<1734=1735
<1736=1737
<1737=1739,1738
<1740=1741
<1741=1743,1742
<1744=1745
<1746=1747
<1747=1749,1748
<1749=1750
<1751=1753,1752
<1754=1755
<1755=1757,1756
<1758=1759
<1759=1760
<1760=1765,1764,1761
<1761=1763,1762
<1766=1768,1767
<1769=1770
<1770=1772,1771
<1773=1774
<1774=1775
<1775=1780,1779,1776
<1776=1778,1777
<1781=1782
<1782=1790,1783
<1783=1788,1786,1784
<1784=1785
<1786=1787
<1788=1789
<1790=1791
<1792=1793
<1793=1795,1794
<1795=1796
<1797=1798
<1798=1802,1799
<1799=1800
<1800=1801
<1802=1803
<1804=1805
<1805=1821,1806
<1806=1819,1817,1815,1813,1809,1807
<1807=1808
<1809=1810
<1810=1812,1811
<1813=1814
<1815=1816
<1817=1818
<1819=1820
<1821=1822
<1823=1824
<1824=1826,1825
<1826=1827
<1828=1829
<1829=1833,1830
<1830=1831
<1831=1832
<1833=1834
<1835=1836
<1836=1842,1837
<1837=1838
<1838=1839
<1839=1841,1840
<1842=1843
<1844=1845
<1845=1855,1846
<1846=1853,1851,1849,1847
<1847=1848
<1849=1850
<1851=1852
<1853=1854
<1855=1856
<1857=1858
<1858=1868,1859
<1859=1866,1864,1862,1860
<1860=1861
<1862=1863
<1864=1865
<1866=1867
<1868=1869
<1870=1871
<1871=1873,1872
<1873=1874
<1874=1876,1875
<1877=1878
<1878=1880,1879
<1880=1881
<1882=1883
<1883=1885,1884
<1885=1886
<1887=1888
<1888=1894,1889
<1889=1892,1890
<1890=1891
<1892=1893
<1894=1895
<1896=1897
<1897=1904,1898
<1898=1902,1899
<1899=1900
<1900=1901
<1902=1903
<1905=1906
<1906=1915,1914,1907
<1907=1913,1908
<1908=1912,1909
<1909=1911,1910
<1916=1917
<1917=1924,1923,1918
<1918=1922,1919
<1919=1921,1920
<1925=1926
<1926=1933,1932,1927
<1927=1931,1928
<1928=1930,1929
<1957=1960,1959,1958
<1960=2258,2247,2236,2210,2184,2177,2168,2167,2166,2165,2164,2163,2162,2161,2160,2150,2145,2005,1998,1989,1988,1987,1986,1985,1984,1983,1982,1981,1971,1966,1961
<1961=1962
<1962=1964,1963
<1964=1965
<1966=1967
<1967=1969,1968
<1969=1970
<1971=1972
<1972=1973
<1973=1979,1974
<1974=1975
<1975=1976
<1976=1978,1977
<1979=1980
<1989=1990
<1990=1996,1991
<1991=1994,1992
<1992=1993
<1994=1995
<1996=1997
<1998=1999
<1999=2003,2000
<2000=2001
<2001=2002
<2003=2004
<2005=2137,2128,2125,2006
<2006=2116,2111,2100,2091,2082,2073,2058,2049,2030,2019,2012,2007
<2007=2008
<2008=2010,2009
<2010=2011
<2012=2013
<2013=2017,2014
<2014=2015
<2015=2016
<2017=2018
<2019=2020
<2020=2028,2021
<2021=2026,2024,2022
<2022=2023
<2024=2025
<2026=2027
<2028=2029
<2030=2031
<2031=2047,2032
<2032=2041,2035,2033
<2033=2034
<2035=2036
<2036=2038,2037
<2038=2040,2039
<2041=2042
<2042=2044,2043
<2044=2046,2045
<2047=2048
<2049=2054,2050
<2050=2051
<2051=2053,2052
<2054=2055
<2055=2057,2056
<2058=2059
<2059=2072,2071,2060
<2060=2070,2061
<2061=2065,2062
<2062=2064,2063
<2065=2067,2066
<2067=2069,2068
<2073=2078,2074
<2074=2075
<2075=2077,2076
<2078=2079
<2079=2081,2080
<2082=2083
<2083=2090,2089,2084
<2084=2088,2085
<2085=2087,2086
<2091=2092
<2092=2099,2098,2093
<2093=2097,2094
<2094=2096,2095
<2100=2101
<2101=2110,2109,2102
<2102=2108,2103
<2103=2105,2104
<2105=2107,2106
<2111=2112
<2112=2114,2113
<2114=2115
<2116=2117
<2117=2124,2123,2118
<2118=2122,2119
<2119=2121,2120
<2125=2127,2126
<2128=2129
<2129=2136,2130
<2130=2132,2131
<2132=2133
<2133=2135,2134
<2137=2138
<2138=2139
<2139=2144,2143,2140
<2140=2142,2141
<2145=2146
<2146=2148,2147
<2148=2149
<2150=2151
<2151=2152
<2152=2158,2153
<2153=2154
<2154=2155
<2155=2157,2156
<2158=2159
<2168=2169
<2169=2175,2170
<2170=2173,2171
<2171=2172
<2173=2174
<2175=2176
<2177=2178
<2178=2182,2179
<2179=2180
<2180=2181
<2182=2183
<2184=2185
<2185=2209,2208,2186
<2186=2207,2187
<2187=2205,2188
<2188=2203,2201,2199,2197,2195,2191,2189
<2189=2190
<2191=2192
<2192=2194,2193
<2195=2196
<2197=2198
<2199=2200
<2201=2202
<2203=2204
<2205=2206
<2210=2211
<2211=2235,2234,2212
<2212=2233,2213
<2213=2231,2214
<2214=2229,2227,2225,2223,2221,2217,2215
<2215=2216
<2217=2218
<2218=2220,2219
<2221=2222
<2223=2224
<2225=2226
<2227=2228
<2229=2230
<2231=2232
<2236=2237
<2237=2245,2238
<2238=2243,2241,2239
<2239=2240
<2241=2242
<2243=2244
<2245=2246
<2247=2248
<2248=2256,2249
<2249=2254,2252,2250
<2250=2251
<2252=2253
<2254=2255
<2256=2257
<2258=2259
<2259=2261,2260
<2261=2262
<2284=2286,2285
<2290=2292,2291
<2292=2295,2293
<2293=2294
<2299=2305,2304,2300
<2300=2301
<2301=2303,2302
<2305=2413,2406,2392,2377,2362,2348,2333,2318,2313,2306
<2306=2307
<2307=2309,2308
<2309=2310
<2310=2312,2311
<2313=2314
<2314=2316,2315
<2316=2317
<2318=2319
<2319=2331,2320
<2320=2329,2327,2323,2321
<2321=2322
<2323=2324
<2324=2326,2325
<2327=2328
<2329=2330
<2331=2332
<2333=2334
<2334=2346,2335
<2335=2344,2342,2338,2336
<2336=2337
<2338=2339
<2339=2341,2340
<2342=2343
<2344=2345
<2346=2347
<2348=2349
<2349=2360,2350
<2350=2351
<2351=2352
<2352=2354,2353
<2354=2356,2355
<2356=2357
<2357=2359,2358
<2360=2361
<2362=2363
<2363=2375,2364
<2364=2373,2371,2367,2365
<2365=2366
<2367=2368
<2368=2370,2369
<2371=2372
<2373=2374
<2375=2376
<2377=2378
<2378=2390,2379
<2379=2388,2386,2382,2380
<2380=2381
<2382=2383
<2383=2385,2384
<2386=2387
<2388=2389
<2390=2391
<2392=2393
<2393=2404,2394
<2394=2395
<2395=2396
<2396=2398,2397
<2398=2400,2399
<2400=2401
<2401=2403,2402
<2404=2405
<2406=2407
<2407=2411,2408
<2408=2409
<2409=2410
<2411=2412
<2413=2414
<2414=2418,2415
<2415=2416
<2416=2417
<2418=2419
